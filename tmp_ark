HSLLD/HV1/MT//alimt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//alimt1.cha
HSLLD/HV1/MT//davmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('batteries', 'NNS')])
('tags -> ', '     (the->DT) (batteries->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('the', 'DT'), ('batteries', 'NNS'), ('are', 'VBP'), ('any', 'DT'), ('good', 'JJ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (the->DT) (batteries->NNS) (are->VBP) (any->DT) (good->JJ) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('just', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('see', 'VB')])
('tags -> ', '     (well->RB) (we->PRP) (ll->VBP) (just->RB) (have->VBP) (to->TO) (see->VB) ')
('tags initial-> ', [('i', 'NNS'), ('hope', 'VBP'), ('they', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (i->NNS) (hope->VBP) (they->PRP) (are->VBP) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('not', 'RB'), ('too', 'RB'), ('far', 'RB'), ('xxx', 'JJ')])
('tags -> ', '     (not->RB) (too->RB) (far->RB) (xxx->JJ) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('alright', 'JJ')])
('tags -> ', '     (they->PRP) (re->VBP) (alright->JJ) ')
candidates to check:
2
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('red', 'JJ'), ('light', 'NN'), ('on', 'IN')])
('tags -> ', '     (is->VBZ) (that->IN) (red->JJ) (light->NN) (on->IN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'JJ'), ('voice', 'NN'), ('activated', 'VBD')])
('tags -> ', '     (it->PRP) (s->JJ) (voice->NN) (activated->VBD) ')
('tags initial-> ', [('oh', 'IN'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (oh->IN) (it->PRP) (is->VBZ) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
1
descended from food: [['N'], 'supper', 22, 28]
('tags initial-> ', [('how', 'WRB'), ('s', 'JJ'), ('your', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (how->WRB) (s->JJ) (your->PRP$) (supper->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'RB'), ('did', 'VBD'), ('you', 'PRP'), ('get', 'VB'), ('your', 'PRP$'), ('drink', 'NN')])
('tags -> ', '     (oh->RB) (did->VBD) (you->PRP) (get->VB) (your->PRP$) (drink->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (it->PRP) (is->VBZ) ')
('tags initial-> ', [('because', 'IN'), ('look', 'NN')])
('tags -> ', '     (because->IN) (look->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('know', 'VBP'), ('but', 'CC'), ('i', 'VBP'), ('m', 'NN'), ('just', 'RB'), ('trying', 'VBG'), ('to', 'TO'), ('see', 'VB'), ('if', 'IN'), ('the', 'DT'), ('tape', 'NN'), ('is', 'VBZ'), ('going', 'VBG'), ('around', 'IN'), ('xxx', 'NNP')])
('tags -> ', '     (yeah->NN) (i->NN) (know->VBP) (but->CC) (i->VBP) (m->NN) (just->RB) (trying->VBG) (to->TO) (see->VB) (if->IN) (the->DT) (tape->NN) (is->VBZ) (going->VBG) (around->IN) (xxx->NNP) ')
('tags initial-> ', [('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (it->PRP) (is->VBZ) ')
('tags initial-> ', [('i', 'NN'), ('already', 'RB'), ('tried', 'VBD')])
('tags -> ', '     (i->NN) (already->RB) (tried->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('right', 'RB'), ('now', 'RB'), ('so', 'RB'), ('don', 'JJ'), ('t', 'NN'), ('drink', 'VBP'), ('a', 'DT'), ('lot', 'NN'), ('okay', 'NN')])
('tags -> ', '     (xxx->NNS) (right->RB) (now->RB) (so->RB) (don->JJ) (t->NN) (drink->VBP) (a->DT) (lot->NN) (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('save', 'VB'), ('some', 'DT'), ('and', 'CC'), ('don', 'VB'), ('t', 'JJ'), ('eat', 'NN'), ('all', 'PDT'), ('the', 'DT'), ('cantaloupe', 'NN')])
('tags -> ', '     (save->VB) (some->DT) (and->CC) (don->VB) (t->JJ) (eat->NN) (all->PDT) (the->DT) (cantaloupe->NN) ')
candidates to check:
2
('tags initial-> ', [('eat', 'VB'), ('some', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('eat', 'NN'), ('some', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('other', 'JJ'), ('stuff', 'NN'), ('okay', 'NN')])
('tags -> ', '     (eat->VB) (some->DT) (of->IN) (your->PRP$) (eat->NN) (some->DT) (of->IN) (your->PRP$) (other->JJ) (stuff->NN) (okay->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('so', 'RB')])
('tags -> ', '     (so->RB) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('cut', 'VB'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (cut->VB) (it->PRP) (out->RP) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('here', 'RB'), ('goes', 'VBZ'), ('dananananana', 'JJ'), ('wp', 'NN')])
('tags -> ', '     (here->RB) (goes->VBZ) (dananananana->JJ) (wp->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('might', 'MD'), ('as', 'RB'), ('well', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('squish', 'VB'), ('that', 'DT'), ('down', 'RP'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (you->PRP) (might->MD) (as->RB) (well->RB) (have->VBP) (to->TO) (squish->VB) (that->DT) (down->RP) (a->DT) (little->JJ) (bit->NN) ')
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('ta', 'RB'), ('come', 'VBN'), ('out', 'RP'), ('now', 'RB')])
('tags -> ', '     (but->CC) (you->PRP) (it->PRP) (has->VBZ) (got->VBN) (ta->RB) (come->VBN) (out->RP) (now->RB) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('do', 'VBP')])
('tags -> ', '     (don->NN) (t->NN) (do->VBP) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('squish', 'VB'), ('it', 'PRP'), ('so', 'RB'), ('hard', 'RB'), ('that', 'IN'), ('it', 'PRP'), ('comes', 'VBZ'), ('out', 'RP')])
('tags -> ', '     (don->NN) (t->NN) (squish->VB) (it->PRP) (so->RB) (hard->RB) (that->IN) (it->PRP) (comes->VBZ) (out->RP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
candidates to check:
2
descended from food: [['N'], 'supper', 11, 17]
('tags initial-> ', [('good', 'JJ'), ('supper', 'NN'), ('huh', 'NN')])
('tags -> ', '     (good->JJ) (supper->NN) (huh->NN) ')
('tags initial-> ', [('hey', 'NNS'), ('move', 'VBP'), ('up', 'RB'), ('close', 'RB')])
('tags -> ', '     (hey->NNS) (move->VBP) (up->RB) (close->RB) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('matter', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (the->DT) (matter->NN) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('stomach', 'NN'), ('hurts', 'NNS')])
('tags -> ', '     (your->PRP$) (stomach->NN) (hurts->NNS) ')
('tags initial-> ', [('well', 'RB'), ('eat', 'NN'), ('slowly', 'RB')])
('tags -> ', '     (well->RB) (eat->NN) (slowly->RB) ')
candidates to check:
1
descended from food: [['N'], 'food', 19, 23]
('tags initial-> ', [('chew', 'VB'), ('up', 'RP'), ('your', 'PRP$'), ('food', 'NN'), ('really', 'RB'), ('good', 'JJ'), ('okay', 'NN')])
('tags -> ', '     (chew->VB) (up->RP) (your->PRP$) (food->NN) (really->RB) (good->JJ) (okay->NN) ')
('tags initial-> ', [('hunhunh', 'NN')])
('tags -> ', '     (hunhunh->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('if', 'IN'), ('it', 'PRP'), ('hurts', 'VBZ'), ('that', 'IN'), ('much', 'JJ'), ('just', 'RB'), ('eat', 'VB'), ('your', 'PRP$'), ('cantaloupe', 'NN')])
('tags -> ', '     (well->RB) (if->IN) (it->PRP) (hurts->VBZ) (that->IN) (much->JJ) (just->RB) (eat->VB) (your->PRP$) (cantaloupe->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('you', 'PRP'), ('know', 'VBP'), ('too', 'RB'), ('much', 'JJ')])
('tags -> ', '     (don->NN) (t->NN) (eat->NN) (you->PRP) (know->VBP) (too->RB) (much->JJ) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NNS'), ('make', 'VBP'), ('it', 'PRP'), ('hurt', 'VBZ'), ('more', 'RBR'), ('okay', 'JJ')])
('tags -> ', '     (don->NN) (t->NNS) (make->VBP) (it->PRP) (hurt->VBZ) (more->RBR) (okay->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('eat', 'VBP'), ('these', 'DT'), ('fast', 'NNS')])
('tags -> ', '     (i->JJ) (eat->VBP) (these->DT) (fast->NNS) ')
('tags initial-> ', [('well', 'RB'), ('don', 'VB'), ('t', 'JJ'), ('eat', 'NN'), ('fast', 'NN')])
('tags -> ', '     (well->RB) (don->VB) (t->JJ) (eat->NN) (fast->NN) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('not', 'RB')])
('tags -> ', '     (he->PRP) (s->VBZ) (not->RB) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('gon', 'NN'), ('na', 'TO'), ('eat', 'VB'), ('slow', 'JJ')])
('tags -> ', '     (he->PRP) (s->VBD) (gon->NN) (na->TO) (eat->VB) (slow->JJ) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('dog', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (a->DT) (dog->NN) ')
candidates to check:
1
('tags initial-> ', [('ruff', 'NN'), ('o', 'MD'), ('ruff', 'VB'), ('o', 'NN')])
('tags -> ', '     (ruff->NN) (o->MD) (ruff->VB) (o->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('want', 'VB'), ('some', 'DT'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('want', 'VB'), ('some', 'DT'), ('broccoli', 'NN')])
('tags -> ', '     (want->VB) (some->DT) (broccoli->NN) ')
candidates to check:
1
('tags initial-> ', [('mm', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('del', 'RB'), ('icious', 'JJ')])
('tags -> ', '     (mm->NN) (it->PRP) (s->VBZ) (del->RB) (icious->JJ) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
candidates to check:
1
descended from food: [['N'], 'lemon', 6, 11]
('tags initial-> ', [('lemon', 'NN')])
('tags -> ', '     (lemon->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
candidates to check:
2
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('nice', 'JJ'), ('florets', 'NNS'), ('d', 'VBP')])
('tags -> ', '     (all->PDT) (the->DT) (nice->JJ) (florets->NNS) (d->VBP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('like', 'IN'), ('little', 'JJ'), ('trees', 'NNS')])
('tags -> ', '     (like->IN) (little->JJ) (trees->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('pretend', 'VB'), ('you', 'PRP'), ('re', 'VB'), ('a', 'DT'), ('giant', 'JJ')])
('tags -> ', '     (you->PRP) (can->MD) (pretend->VB) (you->PRP) (re->VB) (a->DT) (giant->JJ) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('yuck', 'JJ'), ('yuck', 'JJ'), ('yuck', 'NN'), ('yuck', 'NN')])
('tags -> ', '     (yuck->JJ) (yuck->JJ) (yuck->NN) (yuck->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('was', 'VBD'), ('that', 'IN'), ('me', 'PRP')])
('tags -> ', '     (was->VBD) (that->IN) (me->PRP) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
('tags initial-> ', [('my', 'PRP$'), ('gosh', 'NN'), ('got', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (my->PRP$) (gosh->NN) (got->VBD) (it->PRP) ')
('tags initial-> ', [('sensitive', 'JJ'), ('isn', 'NN'), ('t', 'NN'), ('it', 'PRP'), ('laughs', 'VBZ')])
('tags -> ', '     (sensitive->JJ) (isn->NN) (t->NN) (it->PRP) (laughs->VBZ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('matter', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (the->DT) (matter->NN) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('were', 'VBD'), ('just', 'RB'), ('checking', 'VBG'), ('out', 'RP'), ('the', 'DT'), ('little', 'JJ'), ('red', 'JJ'), ('light', 'NN'), ('on', 'IN'), ('it', 'PRP')])
('tags -> ', '     (well->RB) (we->PRP) (were->VBD) (just->RB) (checking->VBG) (out->RP) (the->DT) (little->JJ) (red->JJ) (light->NN) (on->IN) (it->PRP) ')
candidates to check:
1
descended from food: [['N'], 'juice', 17, 22]
juice
juice juice 52
[('watch', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('watch', 'VB'), ('your', 'PRP$'), ('juice', 'NN')])
('tags -> ', '     (watch->VB) (your->PRP$) (juice->NN) ')
('tags initial-> ', [('like', 'IN'), ('when', 'WRB'), ('you', 'PRP'), ('talk', 'VBP'), ('it', 'PRP'), ('goes', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (like->IN) (when->WRB) (you->PRP) (talk->VBP) (it->PRP) (goes->VBZ) (on->IN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
('tags initial-> ', [('so', 'RB')])
('tags -> ', '     (so->RB) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
candidates to check:
2
('tags initial-> ', [('now', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('say', 'VBP'), ('something', 'NN'), ('watch', 'NN')])
('tags -> ', '     (now->RB) (if->IN) (you->PRP) (say->VBP) (something->NN) (watch->NN) ')
('tags initial-> ', [('it', 'PRP'), ('gets', 'VBZ'), ('brighter', 'RB'), ('as', 'IN'), ('you', 'PRP'), ('talk', 'VBP')])
('tags -> ', '     (it->PRP) (gets->VBZ) (brighter->RB) (as->IN) (you->PRP) (talk->VBP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('my', 'PRP$'), ('ice', 'NN'), ('cube', 'NN')])
('tags -> ', '     (that->DT) (was->VBD) (my->PRP$) (ice->NN) (cube->NN) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('little', 'JJ'), ('squeal', 'NN'), ('was', 'VBD'), ('my', 'PRP$'), ('ice', 'NN'), ('cube', 'NN')])
('tags -> ', '     (that->DT) (little->JJ) (squeal->NN) (was->VBD) (my->PRP$) (ice->NN) (cube->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
6
('tags initial-> ', [('tell', 'VB'), ('daddy', 'RP'), ('what', 'WP'), ('you', 'PRP'), ('did', 'VBD'), ('today', 'NN'), ('what', 'WP'), ('we', 'PRP'), ('did', 'VBD'), ('today', 'NN')])
('tags -> ', '     (tell->VB) (daddy->RP) (what->WP) (you->PRP) (did->VBD) (today->NN) (what->WP) (we->PRP) (did->VBD) (today->NN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) ')
('tags initial-> ', [('i', 'JJ'), ('d', 'VBP'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('remember', 'NN'), ('you', 'PRP')])
('tags -> ', '     (i->JJ) (d->VBP) (i->JJ) (don->VBP) (t->JJ) (remember->NN) (you->PRP) ')
('tags initial-> ', [('sure', 'NN'), ('you', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (sure->NN) (you->PRP) (do->VBP) ')
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('do', 'VB'), ('too', 'RB'), ('much', 'JJ')])
('tags -> ', '     (well->RB) (we->PRP) (didn->VBP) (t->JJ) (do->VB) (too->RB) (much->JJ) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('we', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (we->PRP) (do->VB) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('played', 'VBD'), ('some', 'DT'), ('games', 'NNS')])
('tags -> ', '     (we->PRP) (played->VBD) (some->DT) (games->NNS) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('games', 'NNS'), ('did', 'VBD'), ('we', 'PRP'), ('play', 'VB')])
('tags -> ', '     (what->WP) (games->NNS) (did->VBD) (we->PRP) (play->VB) ')
candidates to check:
2
('tags initial-> ', [('chutes', 'NNS'), ('and', 'CC'), ('ladders', 'NNS')])
('tags -> ', '     (chutes->NNS) (and->CC) (ladders->NNS) ')
candidates to check:
6
('tags initial-> ', [('remember', 'VB'), ('game', 'NN'), ('memory', 'NN'), ('game', 'NN'), ('chutes', 'NNS'), ('and', 'CC'), ('ladders', 'NNS')])
('tags -> ', '     (remember->VB) (game->NN) (memory->NN) (game->NN) (chutes->NNS) (and->CC) (ladders->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
fish
fish fish 305
[('didn', 'NN'), ('t', 'NN'), ('we', 'PRP'), ('play', 'VBP'), ('fish', 'JJ')]
['fish']
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('we', 'PRP'), ('play', 'VBP'), ('fish', 'JJ')])
('tags -> ', '     (didn->NN) (t->NN) (we->PRP) (play->VBP) (fish->JJ) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('who', 'WP'), ('won', 'VBD')])
('tags -> ', '     (who->WP) (won->VBD) ')
('tags initial-> ', [('who', 'WP'), ('won', 'VBD'), ('let', 'VB'), ('s', 'PRP'), ('see', 'VB')])
('tags -> ', '     (who->WP) (won->VBD) (let->VB) (s->PRP) (see->VB) ')
candidates to check:
1
('tags initial-> ', [('first', 'JJ'), ('time', 'NN'), ('we', 'PRP'), ('played', 'VBD'), ('chutes', 'NNS'), ('and', 'CC'), ('ladders', 'NNS')])
('tags -> ', '     (first->JJ) (time->NN) (we->PRP) (played->VBD) (chutes->NNS) (and->CC) (ladders->NNS) ')
('tags initial-> ', [('who', 'WP'), ('won', 'VBD')])
('tags -> ', '     (who->WP) (won->VBD) ')
('tags initial-> ', [('you', 'PRP')])
('tags -> ', '     (you->PRP) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (i->NN) (think->VBP) (so->RB) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('we', 'PRP'), ('we', 'PRP'), ('we', 'PRP'), ('played', 'VBD'), ('memory', 'NN'), ('game', 'NN')])
('tags -> ', '     (and->CC) (then->RB) (we->PRP) (we->PRP) (we->PRP) (played->VBD) (memory->NN) (game->NN) ')
('tags initial-> ', [('who', 'WP'), ('won', 'VBD'), ('that', 'IN')])
('tags -> ', '     (who->WP) (won->VBD) (that->IN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('you', 'PRP'), ('won', 'VBD')])
('tags -> ', '     (you->PRP) (won->VBD) ')
candidates to check:
3
('tags initial-> ', [('yeah', 'NN'), ('he', 'PRP'), ('s', 'VBZ'), ('really', 'RB'), ('good', 'JJ'), ('at', 'IN'), ('the', 'DT'), ('memory', 'NN'), ('game', 'NN')])
('tags -> ', '     (yeah->NN) (he->PRP) (s->VBZ) (really->RB) (good->JJ) (at->IN) (the->DT) (memory->NN) (game->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('played', 'VBP'), ('chutes', 'NNS'), ('and', 'CC'), ('ladders', 'NNS'), ('again', 'RB'), ('right', 'RB')])
('tags -> ', '     (and->CC) (we->PRP) (played->VBP) (chutes->NNS) (and->CC) (ladders->NNS) (again->RB) (right->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('i', 'NN'), ('won', 'VBD')])
('tags -> ', '     (i->NN) (won->VBD) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
fish
fish fish 305
[('and', 'CC'), ('we', 'PRP'), ('played', 'VBD'), ('fish', 'NN')]
['fish']
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('played', 'VBD'), ('fish', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (played->VBD) (fish->NN) ')
('tags initial-> ', [('i', 'NN'), ('won', 'VBD')])
('tags -> ', '     (i->NN) (won->VBD) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('watched', 'VBD'), ('lady', 'NN'), ('and', 'CC'), ('the', 'DT'), ('tramp', 'NN'), ('huh', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (watched->VBD) (lady->NN) (and->CC) (the->DT) (tramp->NN) (huh->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('you', 'PRP'), ('doin', 'VBP'), ('g', 'NNS')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (you->PRP) (doin->VBP) (g->NNS) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('xxx', 'JJ'), ('that', 'IN')])
('tags -> ', '     (what->WP) (is->VBZ) (xxx->JJ) (that->IN) ')
candidates to check:
2
('tags initial-> ', [('why', 'WRB'), ('is', 'VBZ'), ('music', 'NN'), ('not', 'RB'), ('comin', 'VB'), ('g', 'NN'), ('out', 'IN'), ('of', 'IN'), ('there', 'EX'), ('man', 'NN')])
('tags -> ', '     (why->WRB) (is->VBZ) (music->NN) (not->RB) (comin->VB) (g->NN) (out->IN) (of->IN) (there->EX) (man->NN) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
candidates to check:
3
('tags initial-> ', [('see', 'VB'), ('every', 'DT'), ('time', 'NN'), ('you', 'PRP'), ('talk', 'VBP'), ('that', 'IN'), ('little', 'RB'), ('red', 'JJ'), ('light', 'NN'), ('comes', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (see->VB) (every->DT) (time->NN) (you->PRP) (talk->VBP) (that->IN) (little->RB) (red->JJ) (light->NN) (comes->VBZ) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('when', 'WRB'), ('it', 'PRP'), ('s', 'VBD'), ('not', 'RB'), ('playing', 'VBG'), ('music', 'NN')])
('tags -> ', '     (when->WRB) (it->PRP) (s->VBD) (not->RB) (playing->VBG) (music->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('recording', 'VBG'), ('what', 'WP'), ('we', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('about', 'IN')])
('tags -> ', '     (it->PRP) (s->VBZ) (recording->VBG) (what->WP) (we->PRP) (re->VBP) (talking->VBG) (about->IN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('please', 'NN')])
('tags -> ', '     (please->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('name', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('oh', 'UH')])
('tags -> ', '     (the->DT) (name->NN) (of->IN) (it->PRP) (oh->UH) ')
candidates to check:
1
('tags initial-> ', [('mother', 'NN')])
('tags -> ', '     (mother->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
('tags initial-> ', [('um', 'JJ'), ('um', 'NN'), ('did', 'VBD'), ('we', 'PRP'), ('play', 'VB'), ('any', 'DT'), ('more', 'JJR'), ('games', 'NNS')])
('tags -> ', '     (um->JJ) (um->NN) (did->VBD) (we->PRP) (play->VB) (any->DT) (more->JJR) (games->NNS) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('that', 'DT'), ('was', 'VBD'), ('all', 'DT'), ('we', 'PRP'), ('played', 'VBD')])
('tags -> ', '     (i->NN) (think->VBP) (that->DT) (was->VBD) (all->DT) (we->PRP) (played->VBD) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('um', 'IN'), ('we', 'PRP'), ('we', 'PRP'), ('we', 'PRP'), ('played', 'VBD'), ('um', 'RP')])
('tags -> ', '     (um->IN) (we->PRP) (we->PRP) (we->PRP) (played->VBD) (um->RP) ')
candidates to check:
2
fish
fish fish 305
[('we', 'PRP'), ('did', 'VBD'), ('we', 'PRP'), ('played', 'VBD'), ('fish', 'NN')]
['fish']
('tags initial-> ', [('we', 'PRP'), ('did', 'VBD'), ('we', 'PRP'), ('played', 'VBD'), ('fish', 'NN')])
('tags -> ', '     (we->PRP) (did->VBD) (we->PRP) (played->VBD) (fish->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
fish
fish fish 305
[('and', 'CC'), ('we', 'PRP'), ('played', 'VBD'), ('another', 'DT'), ('fish', 'NN'), ('right', 'NN')]
['fish']
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('played', 'VBD'), ('another', 'DT'), ('fish', 'NN'), ('right', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (played->VBD) (another->DT) (fish->NN) (right->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
candidates to check:
2
fish
fish fish 305
[('did', 'VBD'), ('we', 'PRP'), ('play', 'VB'), ('fish', 'JJ'), ('twice', 'NN')]
['fish']
('tags initial-> ', [('did', 'VBD'), ('we', 'PRP'), ('play', 'VB'), ('fish', 'JJ'), ('twice', 'NN')])
('tags -> ', '     (did->VBD) (we->PRP) (play->VB) (fish->JJ) (twice->NN) ')
('tags initial-> ', [('uh', 'UH'), ('yes', 'NNS')])
('tags -> ', '     (uh->UH) (yes->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('just', 'RB'), ('played', 'VBD'), ('one', 'CD'), ('time', 'NN')])
('tags -> ', '     (i->JJ) (think->VBP) (we->PRP) (just->RB) (played->VBD) (one->CD) (time->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('no', 'DT'), ('yes', 'UH'), ('no', 'DT'), ('yes', 'JJ'), ('no', 'DT'), ('yes', 'JJ'), ('no', 'DT'), ('yes', 'NN')])
('tags -> ', '     (no->DT) (yes->UH) (no->DT) (yes->JJ) (no->DT) (yes->JJ) (no->DT) (yes->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'sandwich', 32, 40]
('tags initial-> ', [('here', 'RB'), ('have', 'VBP'), ('some', 'DT'), ('more', 'JJR'), ('sandwich', 'JJ')])
('tags -> ', '     (here->RB) (have->VBP) (some->DT) (more->JJR) (sandwich->JJ) ')
candidates to check:
1
('tags initial-> ', [('father', 'NN'), ('name', 'NN')])
('tags -> ', '     (father->NN) (name->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (you->PRP) ')
('tags initial-> ', [('want', 'VB'), ('some', 'DT')])
('tags -> ', '     (want->VB) (some->DT) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('nice', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (nice->JJ) ')
candidates to check:
1
descended from food: [['N'], 'chicken', 25, 32]
chicken
chicken chicken 234
[('wan', 'NN'), ('na', 'TO'), ('try', 'VB'), ('some', 'DT'), ('chicken', 'NN')]
['chicken']
('tags initial-> ', [('wan', 'NN'), ('na', 'TO'), ('try', 'VB'), ('some', 'DT'), ('chicken', 'NN')])
('tags -> ', '     (wan->NN) (na->TO) (try->VB) (some->DT) (chicken->NN) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('you', 'PRP'), ('too', 'RB')])
('tags -> ', '     (i->NN) (love->VBP) (you->PRP) (too->RB) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (no->DT) (no->DT) (thank->NN) (you->PRP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('really', 'RB'), ('good', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (really->RB) (good->JJ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('tried', 'VBD'), ('it', 'PRP'), ('when', 'WRB'), ('you', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('party', 'NN'), ('at', 'IN'), ('at', 'IN'), ('at', 'IN'), ('your', 'PRP$'), ('mother', 'NN'), ('s', 'NN'), ('house', 'NN')])
('tags -> ', '     (i->NN) (tried->VBD) (it->PRP) (when->WRB) (you->PRP) (have->VBP) (a->DT) (party->NN) (at->IN) (at->IN) (at->IN) (your->PRP$) (mother->NN) (s->NN) (house->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 24, 31]
chicken
chicken chicken 234
[('that', 'IN'), ('that', 'DT'), ('was', 'VBD'), ('chicken', 'VBN')]
['chicken']
('tags initial-> ', [('that', 'IN'), ('that', 'DT'), ('was', 'VBD'), ('chicken', 'VBN')])
('tags -> ', '     (that->IN) (that->DT) (was->VBD) (chicken->VBN) ')
('tags initial-> ', [('well', 'RB'), ('here', 'RB'), ('have', 'VBP'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('your', 'PRP$')])
('tags -> ', '     (well->RB) (here->RB) (have->VBP) (some->DT) (more->JJR) (of->IN) (your->PRP$) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('ate', 'VBP'), ('a', 'DT'), ('whole', 'JJ'), ('bunch', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('that', 'IN'), ('time', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('you', 'PRP')])
('tags -> ', '     (you->PRP) (ate->VBP) (a->DT) (whole->JJ) (bunch->NN) (of->IN) (it->PRP) (that->IN) (time->NN) (didn->NN) (t->NN) (you->PRP) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('uh', 'JJ')])
('tags -> ', '     (have->VB) (some->DT) (more->JJR) (uh->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('will', 'MD'), ('get', 'VB'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN'), ('maybe', 'RB')])
('tags -> ', '     (you->PRP) (will->MD) (get->VB) (a->DT) (tummy->NN) (ache->NN) (maybe->RB) ')
candidates to check:
1
descended from food: [['N'], 'sandwich', 10, 18]
('tags initial-> ', [('sandwich', 'NN'), ('then', 'RB'), ('chi', 'VB')])
('tags -> ', '     (sandwich->NN) (then->RB) (chi->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
candidates to check:
2
descended from food: [['N'], 'food', 21, 25]
('tags initial-> ', [('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('food', 'NN'), ('you', 'PRP'), ('you', 'PRP'), ('might', 'MD')])
('tags -> ', '     (have->VB) (some->DT) (more->JJR) (food->NN) (you->PRP) (you->PRP) (might->MD) ')
candidates to check:
6
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('gave', 'VBD'), ('you', 'PRP'), ('the', 'DT'), ('tummy', 'JJ'), ('ache', 'NN'), ('be', 'VB'), ('cause', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('kind', 'NN'), ('of', 'IN'), ('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), ('ago', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('just', 'RB'), ('got', 'VBD'), ('your', 'PRP$'), ('tummy', 'JJ'), ('ache', 'NN'), ('now', 'RB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (that->IN) (s->VBP) (what->WP) (gave->VBD) (you->PRP) (the->DT) (tummy->JJ) (ache->NN) (be->VB) (cause->NN) (that->WDT) (was->VBD) (kind->NN) (of->IN) (a->DT) (long->JJ) (time->NN) (ago->RB) (and->CC) (you->PRP) (just->RB) (got->VBD) (your->PRP$) (tummy->JJ) (ache->NN) (now->RB) ')
candidates to check:
3
descended from food: [['N'], 'chicken', 61, 68]
chicken
chicken chicken 234
[('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('couple', 'JJ'), ('o', 'JJ'), ('f', 'NN'), ('weeks', 'NNS'), ('ago', 'IN'), ('that', 'IN'), ('you', 'PRP'), ('ate', 'VBP'), ('that', 'IN'), ('chicken', 'NN')]
['chicken']
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('couple', 'JJ'), ('o', 'JJ'), ('f', 'NN'), ('weeks', 'NNS'), ('ago', 'IN'), ('that', 'IN'), ('you', 'PRP'), ('ate', 'VBP'), ('that', 'IN'), ('chicken', 'NN')])
('tags -> ', '     (that->DT) (was->VBD) (a->DT) (couple->JJ) (o->JJ) (f->NN) (weeks->NNS) (ago->IN) (that->IN) (you->PRP) (ate->VBP) (that->IN) (chicken->NN) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('take', 'VB'), ('a', 'DT'), ('few', 'JJ'), ('weeks', 'NNS'), ('to', 'TO'), ('get', 'VB'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')])
('tags -> ', '     (it->PRP) (doesn->VBZ) (t->NNS) (take->VB) (a->DT) (few->JJ) (weeks->NNS) (to->TO) (get->VB) (a->DT) (tummy->NN) (ache->NN) ')
candidates to check:
1
('tags initial-> ', [('have', 'VB'), ('some', 'DT'), ('more', 'JJR')])
('tags -> ', '     (have->VB) (some->DT) (more->JJR) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('could', 'MD'), ('have', 'VB'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN'), ('because', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('hungry', 'JJ')])
('tags -> ', '     (you->PRP) (could->MD) (have->VB) (a->DT) (tummy->NN) (ache->NN) (because->IN) (you->PRP) (re->VBP) (hungry->JJ) ')
('tags initial-> ', [('because', 'IN'), ('you', 'PRP'), ('haven', 'VBP'), ('t', 'RB'), ('been', 'VBN'), ('eating', 'VBG')])
('tags -> ', '     (because->IN) (you->PRP) (haven->VBP) (t->RB) (been->VBN) (eating->VBG) ')
('tags initial-> ', [('here', 'RB'), ('don', 'VBZ'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('that', 'DT')])
('tags -> ', '     (here->RB) (don->VBZ) (t->NN) (you->PRP) (want->VBP) (some->DT) (more->JJR) (of->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('hurry', 'NN'), ('or', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('beat', 'NN'), ('you', 'PRP'), ('guys', 'VBP')])
('tags -> ', '     (hurry->NN) (or->CC) (i->NN) (ll->VBP) (beat->NN) (you->PRP) (guys->VBP) ')
('tags initial-> ', [('well', 'RB'), ('i', 'VB'), ('m', 'NN'), ('almost', 'RB'), ('done', 'VBN'), ('so', 'RB')])
('tags -> ', '     (well->RB) (i->VB) (m->NN) (almost->RB) (done->VBN) (so->RB) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('too', 'RB'), ('fast', 'RB')])
('tags -> ', '     (don->NN) (t->NN) (eat->NN) (too->RB) (fast->RB) ')
('tags initial-> ', [('just', 'RB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('that', 'DT'), ('anyway', 'NN')])
('tags -> ', '     (just->RB) (have->VB) (some->DT) (more->JJR) (of->IN) (that->DT) (anyway->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('beat', 'VB'), ('father', 'NN'), ('name', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (beat->VB) (father->NN) (name->NN) ')
('tags initial-> ', [('he', 'PRP'), ('is', 'VBZ'), ('not', 'RB')])
('tags -> ', '     (he->PRP) (is->VBZ) (not->RB) ')
('tags initial-> ', [('you', 'PRP'), ('better', 'JJR'), ('start', 'VB'), ('eating', 'VBG'), ('then', 'RB')])
('tags -> ', '     (you->PRP) (better->JJR) (start->VB) (eating->VBG) (then->RB) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'RB'), ('even', 'RB'), ('though', 'IN'), ('he', 'PRP'), ('seemed', 'VBD'), ('to', 'TO'), ('feel', 'VB'), ('better', 'RB'), ('today', 'NN'), ('i', 'JJ'), ('m', 'VBP'), ('glad', 'JJ'), ('i', 'NN'), ('kept', 'VBD'), ('him', 'PRP'), ('out', 'IN'), ('of', 'IN'), ('day', 'NN'), ('care', 'NN')])
('tags -> ', '     (xxx->RB) (even->RB) (though->IN) (he->PRP) (seemed->VBD) (to->TO) (feel->VB) (better->RB) (today->NN) (i->JJ) (m->VBP) (glad->JJ) (i->NN) (kept->VBD) (him->PRP) (out->IN) (of->IN) (day->NN) (care->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('still', 'RB'), ('seemed', 'VBD'), ('to', 'TO'), ('be', 'VB'), ('you', 'PRP'), ('know', 'VBP'), ('kind', 'NN'), ('o', 'JJ'), ('f', 'NN'), ('xxx', 'NNP'), ('huh', 'NN')])
('tags -> ', '     (he->PRP) (still->RB) (seemed->VBD) (to->TO) (be->VB) (you->PRP) (know->VBP) (kind->NN) (o->JJ) (f->NN) (xxx->NNP) (huh->NN) ')
candidates to check:
3
('tags initial-> ', [('didn', 'NNS'), ('t', 'VBP'), ('want', 'VBP'), ('the', 'DT'), ('other', 'JJ'), ('children', 'NNS'), ('to', 'TO'), ('catch', 'VB'), ('my', 'PRP$'), ('tummy', 'NN'), ('ache', 'NN')])
('tags -> ', '     (didn->NNS) (t->VBP) (want->VBP) (the->DT) (other->JJ) (children->NNS) (to->TO) (catch->VB) (my->PRP$) (tummy->NN) (ache->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('or', 'CC'), ('your', 'PRP$'), ('fever', 'NN')])
('tags -> ', '     (or->CC) (your->PRP$) (fever->NN) ')
candidates to check:
1
('tags initial-> ', [('fever', 'NN')])
('tags -> ', '     (fever->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('when', 'WRB'), ('you', 'PRP'), ('feel', 'VBP'), ('when', 'WRB'), ('your', 'PRP$'), ('skin', 'NN'), ('feels', 'NNS'), ('real', 'JJ'), ('hot', 'JJ')])
('tags -> ', '     (well->RB) (that->IN) (s->VBP) (what->WP) (when->WRB) (you->PRP) (feel->VBP) (when->WRB) (your->PRP$) (skin->NN) (feels->NNS) (real->JJ) (hot->JJ) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('a', 'DT'), ('fever', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (a->DT) (fever->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('hot', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (hot->JJ) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('hot', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (hot->JJ) ')
candidates to check:
2
descended from food: [['N'], 'food', 74, 78]
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('really', 'RB'), ('hard', 'JJ'), ('to', 'TO'), ('understand', 'VB'), ('you', 'PRP'), ('when', 'WRB'), ('you', 'PRP'), ('talk', 'VBP'), ('with', 'IN'), ('food', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('though', 'IN'), ('okay', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (really->RB) (hard->JJ) (to->TO) (understand->VB) (you->PRP) (when->WRB) (you->PRP) (talk->VBP) (with->IN) (food->NN) (in->IN) (your->PRP$) (mouth->NN) (though->IN) (okay->NN) ')
('tags initial-> ', [('i', 'NNS'), ('say', 'VBP'), ('are', 'VBP'), ('you', 'PRP'), ('hot', 'JJ')])
('tags -> ', '     (i->NNS) (say->VBP) (are->VBP) (you->PRP) (hot->JJ) ')
('tags initial-> ', [('well', 'RB'), ('yeah', 'VB'), ('it', 'PRP'), ('s', 'PRP'), ('pretty', 'RB'), ('warm', 'VBD'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (well->RB) (yeah->VB) (it->PRP) (s->PRP) (pretty->RB) (warm->VBD) (in->IN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('hums', 'NNS')])
('tags -> ', '     (www->NN) (hums->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('that', 'IN'), ('bad', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (that->IN) (bad->JJ) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('hot', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (hot->JJ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('chi', 'NN'), ('not', 'RB'), ('the', 'DT'), ('fan', 'NN')])
('tags -> ', '     (oh->UH) (chi->NN) (not->RB) (the->DT) (fan->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'meal', 41, 45]
('tags initial-> ', [('it', 'PRP'), ('ll', 'VBZ'), ('cool', 'JJ'), ('o', 'IN'), ('it', 'PRP'), ('ll', 'VBZ'), ('cool', 'JJ'), ('our', 'PRP$'), ('meal', 'NN'), ('off', 'IN'), ('too', 'RB'), ('quickly', 'RB')])
('tags -> ', '     (it->PRP) (ll->VBZ) (cool->JJ) (o->IN) (it->PRP) (ll->VBZ) (cool->JJ) (our->PRP$) (meal->NN) (off->IN) (too->RB) (quickly->RB) ')
candidates to check:
1
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('chi', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('making', 'VBG'), ('a', 'DT'), ('mess', 'NN')])
('tags -> ', '     (come->VBN) (on->IN) (chi->NN) (you->PRP) (re->VBP) (making->VBG) (a->DT) (mess->NN) ')
('tags initial-> ', [('will', 'MD'), ('you', 'PRP'), ('please', 'VB'), ('sit', 'VB'), ('down', 'RP')])
('tags -> ', '     (will->MD) (you->PRP) (please->VB) (sit->VB) (down->RP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('too', 'RB'), ('cold', 'JJ'), ('to', 'TO'), ('have', 'VB'), ('that', 'DT'), ('on', 'IN'), ('anyway', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (too->RB) (cold->JJ) (to->TO) (have->VB) (that->DT) (on->IN) (anyway->NN) ')
('tags initial-> ', [('sighs', 'NNS')])
('tags -> ', '     (sighs->NNS) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('eat', 'NN'), ('anymore', 'RB')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (eat->NN) (anymore->RB) ')
candidates to check:
2
descended from food: [['N'], 'sandwich', 11, 19]
('tags initial-> ', [('good', 'JJ'), ('sandwich', 'NN'), ('though', 'IN'), ('huh', 'NN')])
('tags -> ', '     (good->JJ) (sandwich->NN) (though->IN) (huh->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('doing', 'VBG')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (doing->VBG) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (you->PRP) (re->VBP) (all->DT) (done->VBN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('any', 'DT'), ('cantaloupe', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (want->VBP) (any->DT) (cantaloupe->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
3
('tags initial-> ', [('well', 'RB'), ('if', 'IN'), ('it', 'PRP'), ('hurts', 'VBZ'), ('your', 'PRP$'), ('tummy', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('then', 'RB'), ('don', 'VB'), ('t', 'JJ'), ('eat', 'NN'), ('but', 'CC'), ('you', 'PRP'), ('may', 'MD'), ('not', 'RB'), ('have', 'VB'), ('anything', 'NN'), ('else', 'RB')])
('tags -> ', '     (well->RB) (if->IN) (it->PRP) (hurts->VBZ) (your->PRP$) (tummy->NN) (to->TO) (eat->VB) (then->RB) (don->VB) (t->JJ) (eat->NN) (but->CC) (you->PRP) (may->MD) (not->RB) (have->VB) (anything->NN) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('will', 'MD'), ('make', 'VB'), ('your', 'PRP$'), ('tummy', 'NN'), ('feel', 'VB'), ('better', 'RB'), ('probably', 'RB'), ('chi', 'VB')])
('tags -> ', '     (this->DT) (will->MD) (make->VB) (your->PRP$) (tummy->NN) (feel->VB) (better->RB) (probably->RB) (chi->VB) ')
('tags initial-> ', [('now', 'RB'), ('i', 'VBZ'), ('m', 'MD'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('get', 'VB'), ('any', 'DT')])
('tags -> ', '     (now->RB) (i->VBZ) (m->MD) (not->RB) (gon->VB) (na->TO) (get->VB) (any->DT) ')
candidates to check:
2
descended from food: [['N'], 'food', 141, 145]
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('haven', 'VBP'), ('t', 'JJ'), ('eaten', 'NN'), ('and', 'CC'), ('so', 'RB'), ('that', 'IN'), ('s', 'JJ'), ('why', 'WRB'), ('your', 'PRP$'), ('tummy', 'NN'), ('s', 'NN'), ('probably', 'RB'), ('doesn', 'VBD'), ('t', 'JJ'), ('feel', 'VB'), ('very', 'RB'), ('good', 'JJ'), ('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('food', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (you->PRP) (haven->VBP) (t->JJ) (eaten->NN) (and->CC) (so->RB) (that->IN) (s->JJ) (why->WRB) (your->PRP$) (tummy->NN) (s->NN) (probably->RB) (doesn->VBD) (t->JJ) (feel->VB) (very->RB) (good->JJ) (be->VB) (cause->NN) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (any->DT) (food->NN) ')
candidates to check:
1
('tags initial-> ', [('touching', 'VBG'), ('stomach', 'NN')])
('tags -> ', '     (touching->VBG) (stomach->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('wouldn', 'VBD'), ('t', 'JJ'), ('be', 'VB'), ('bad', 'JJ'), ('news', 'NN')])
('tags -> ', '     (that->DT) (wouldn->VBD) (t->JJ) (be->VB) (bad->JJ) (news->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('uhoh', 'NN')])
('tags -> ', '     (uhoh->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
2
('tags initial-> ', [('one', 'CD'), ('sick', 'NN'), ('pony', 'NN')])
('tags -> ', '     (one->CD) (sick->NN) (pony->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('na', 'TO'), ('lie', 'VB'), ('down', 'RP'), ('on', 'IN'), ('the', 'DT'), ('couch', 'NN'), ('for', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('while', 'NN')])
('tags -> ', '     (you->PRP) (wan->VBP) (na->TO) (lie->VB) (down->RP) (on->IN) (the->DT) (couch->NN) (for->IN) (a->DT) (little->JJ) (while->NN) ')
candidates to check:
1
('tags initial-> ', [('there', 'RB'), ('wasn', 'JJ'), ('t', 'NN'), ('anything', 'NN')])
('tags -> ', '     (there->RB) (wasn->JJ) (t->NN) (anything->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('watch', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (watch->NN) (xxx->NN) ')
('tags initial-> ', [('oh', 'UH'), ('no', 'DT')])
('tags -> ', '     (oh->UH) (no->DT) ')
('tags initial-> ', [('not', 'RB'), ('now', 'RB')])
('tags -> ', '     (not->RB) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('chi', 'NN'), ('once', 'RB'), ('a', 'DT'), ('day', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('watch', 'VB'), ('it', 'PRP'), ('alright', 'RP')])
('tags -> ', '     (chi->NN) (once->RB) (a->DT) (day->NN) (you->PRP) (can->MD) (watch->VB) (it->PRP) (alright->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('not', 'RB'), ('ten', 'VBN'), ('times', 'NNS'), ('a', 'DT'), ('day', 'NN')])
('tags -> ', '     (not->RB) (ten->VBN) (times->NNS) (a->DT) (day->NN) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('i', 'VBP'), ('need', 'VBP'), ('to', 'TO'), ('watch', 'VB'), ('something', 'NN')])
('tags -> ', '     (but->CC) (i->NN) (i->VBP) (need->VBP) (to->TO) (watch->VB) (something->NN) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ')])
('tags -> ', '     (no->DT) (you->PRP) (don->VBP) (t->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('nice', 'JJ'), ('to', 'TO'), ('just', 'RB'), ('have', 'VB'), ('quiet', 'JJ'), ('around', 'IN'), ('here', 'RB'), ('for', 'IN'), ('once', 'RB')])
('tags -> ', '     (it->PRP) (s->VBZ) (nice->JJ) (to->TO) (just->RB) (have->VB) (quiet->JJ) (around->IN) (here->RB) (for->IN) (once->RB) ')
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB')])
('tags -> ', '     (no->DT) (it->PRP) (s->VBZ) (not->RB) ')
('tags initial-> ', [('well', 'RB'), ('while', 'IN'), ('i', 'JJ'), ('m', 'VBP'), ('eating', 'VBG'), ('i', 'NN'), ('want', 'VBP'), ('quiet', 'JJ')])
('tags -> ', '     (well->RB) (while->IN) (i->JJ) (m->VBP) (eating->VBG) (i->NN) (want->VBP) (quiet->JJ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
2
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('even', 'RB'), ('want', 'VBP'), ('your', 'PRP$'), ('delicious', 'JJ'), ('cantaloupe', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (even->RB) (want->VBP) (your->PRP$) (delicious->JJ) (cantaloupe->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('nice', 'JJ'), ('juicy', 'NN'), ('cantaloupe', 'NN')])
('tags -> ', '     (nice->JJ) (juicy->NN) (cantaloupe->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 31, 36]
juice
juice juice 52
[('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('drink', 'VBP'), ('your', 'PRP$'), ('juice', 'NN'), ('at', 'IN'), ('least', 'JJS')]
['juice']
('tags initial-> ', [('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('drink', 'VBP'), ('your', 'PRP$'), ('juice', 'NN'), ('at', 'IN'), ('least', 'JJS')])
('tags -> ', '     (why->WRB) (don->NN) (t->NN) (you->PRP) (drink->VBP) (your->PRP$) (juice->NN) (at->IN) (least->JJS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('afraid', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('becoming', 'VBG'), ('dehydrated', 'VBD')])
('tags -> ', '     (i->JJ) (m->NN) (afraid->IN) (you->PRP) (re->VBP) (becoming->VBG) (dehydrated->VBD) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('get', 'VB'), ('too', 'RB'), ('skinny', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (get->VB) (too->RB) (skinny->JJ) ')
candidates to check:
2
('tags initial-> ', [('your', 'PRP$'), ('little', 'JJ'), ('muscles', 'NNS'), ('will', 'MD'), ('go', 'VB'), ('away', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('though', 'IN')])
('tags -> ', '     (your->PRP$) (little->JJ) (muscles->NNS) (will->MD) (go->VB) (away->RB) (if->IN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (though->IN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('no', 'VBZ'), ('it', 'PRP'), ('willn', 'VBZ'), ('t', 'NN')])
('tags -> ', '     (no->DT) (it->PRP) (no->VBZ) (it->PRP) (willn->VBZ) (t->NN) ')
('tags initial-> ', [('they', 'PRP'), ('ll', 'VBP'), ('shrink', 'VB')])
('tags -> ', '     (they->PRP) (ll->VBP) (shrink->VB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'UH'), ('gee', 'NN')])
('tags -> ', '     (oh->UH) (gee->NN) ')
('tags initial-> ', [('that', 'IN'), ('i', 'NN'), ('could', 'MD'), ('live', 'VB'), ('without', 'IN')])
('tags -> ', '     (that->IN) (i->NN) (could->MD) (live->VB) (without->IN) ')
candidates to check:
1
water
water water 18
[('water', 'NN')]
['water']
('tags initial-> ', [('water', 'NN')])
('tags -> ', '     (water->NN) ')
('tags initial-> ', [('look', 'NN')])
('tags -> ', '     (look->NN) ')
candidates to check:
1
water
water water 18
[('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('even', 'RB'), ('water', 'NN'), ('is', 'VBZ'), ('it', 'PRP')]
['water']
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('even', 'RB'), ('water', 'NN'), ('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (even->RB) (water->NN) (is->VBZ) (it->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
candidates to check:
7
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('work', 'NN'), ('tomorrow', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('day', 'NN'), ('care', 'NN'), ('so', 'IN'), ('we', 'PRP'), ('ll', 'VBP'), ('just', 'RB'), ('hang', 'VBN'), ('out', 'RP'), ('again', 'RB'), ('in', 'IN'), ('the', 'DT'), ('house', 'NN'), ('and', 'CC'), ('then', 'RB'), ('hopefully', 'RB'), ('you', 'PRP'), ('ll', 'VBP'), ('be', 'VB'), ('all', 'DT'), ('better', 'JJR'), ('for', 'IN'), ('friday', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (work->NN) (tomorrow->NN) (and->CC) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (day->NN) (care->NN) (so->IN) (we->PRP) (ll->VBP) (just->RB) (hang->VBN) (out->RP) (again->RB) (in->IN) (the->DT) (house->NN) (and->CC) (then->RB) (hopefully->RB) (you->PRP) (ll->VBP) (be->VB) (all->DT) (better->JJR) (for->IN) (friday->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('friday', 'NN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('work', 'VB')])
('tags -> ', '     (be->VB) (cause->NN) (friday->NN) (i->NNS) (have->VBP) (to->TO) (go->VB) (to->TO) (work->VB) ')
candidates to check:
6
('tags initial-> ', [('is', 'VBZ'), ('daddy', 'JJ'), ('doing', 'VBG'), ('is', 'VBZ'), ('daddy', 'VBN'), ('have', 'VBP'), ('work', 'NN')])
('tags -> ', '     (is->VBZ) (daddy->JJ) (doing->VBG) (is->VBZ) (daddy->VBN) (have->VBP) (work->NN) ')
('tags initial-> ', [('on', 'IN'), ('friday', 'NN')])
('tags -> ', '     (on->IN) (friday->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
5
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('have', 'VBP'), ('day', 'NN'), ('care', 'NN'), ('and', 'CC'), ('it', 'PRP'), ('s', 'VBD'), ('toy', 'JJ'), ('day', 'NN'), ('on', 'IN'), ('friday', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('bring', 'VB'), ('a', 'DT'), ('a', 'DT'), ('toy', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (have->VBP) (day->NN) (care->NN) (and->CC) (it->PRP) (s->VBD) (toy->JJ) (day->NN) (on->IN) (friday->NN) (and->CC) (you->PRP) (can->MD) (bring->VB) (a->DT) (a->DT) (toy->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('like', 'IN')])
('tags -> ', '     (like->IN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('that', 'IN'), ('maybe', 'RB'), ('i', 'NNS'), ('can', 'MD'), ('bring', 'VB')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (get->VB) (that->IN) (maybe->RB) (i->NNS) (can->MD) (bring->VB) ')
candidates to check:
5
('tags initial-> ', [('well', 'RB'), ('toy', 'JJ'), ('day', 'NN'), ('s', 'VBD'), ('not', 'RB'), ('un', 'JJ'), ('until', 'IN'), ('the', 'DT'), ('day', 'NN'), ('after', 'IN'), ('tomorrow', 'NN'), ('chi', 'NN')])
('tags -> ', '     (well->RB) (toy->JJ) (day->NN) (s->VBD) (not->RB) (un->JJ) (until->IN) (the->DT) (day->NN) (after->IN) (tomorrow->NN) (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('it', 'PRP'), ('requires', 'VBZ'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('thought', 'NN')])
('tags -> ', '     (i->NN) (guess->NN) (it->PRP) (requires->VBZ) (a->DT) (lot->NN) (of->IN) (thought->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('picking', 'VBG'), ('out', 'RP'), ('a', 'DT'), ('toy', 'NN')])
('tags -> ', '     (picking->VBG) (out->RP) (a->DT) (toy->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('could', 'MD'), ('bring', 'VB'), ('your', 'PRP$'), ('superman', 'NN'), ('cape', 'NN'), ('again', 'RB')])
('tags -> ', '     (you->PRP) (could->MD) (bring->VB) (your->PRP$) (superman->NN) (cape->NN) (again->RB) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('this', 'DT')])
('tags -> ', '     (how->WRB) (about->IN) (this->DT) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('this', 'DT')])
('tags -> ', '     (how->WRB) (about->IN) (this->DT) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('bring', 'VB'), ('this', 'DT')])
('tags -> ', '     (can->MD) (i->VB) (bring->VB) (this->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('know', 'VBP'), ('bring', 'VBG'), ('it', 'PRP'), ('in', 'IN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (know->VBP) (bring->VBG) (it->PRP) (in->IN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('see', 'VB')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (see->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('scare', 'NN'), ('anybody', 'NN'), ('with', 'IN'), ('it', 'PRP'), ('but', 'CC'), ('y', 'JJ'), ('sure', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (didn->VBP) (t->JJ) (scare->NN) (anybody->NN) (with->IN) (it->PRP) (but->CC) (y->JJ) (sure->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('we', 'PRP'), ('get', 'VB'), ('that', 'DT'), ('anyway', 'NN')])
('tags -> ', '     (where->WRB) (did->VBD) (we->PRP) (get->VB) (that->DT) (anyway->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) ')
candidates to check:
1
('tags initial-> ', [('uh', 'IN'), ('it', 'PRP'), ('w', 'VBZ'), ('it', 'PRP'), ('w', 'VBZ'), ('it', 'PRP'), ('when', 'WRB'), ('we', 'PRP'), ('went', 'VBD'), ('when', 'WRB'), ('daddy', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('and', 'CC'), ('me', 'PRP'), ('came', 'VBD'), ('and', 'CC'), ('got', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (uh->IN) (it->PRP) (w->VBZ) (it->PRP) (w->VBZ) (it->PRP) (when->WRB) (we->PRP) (went->VBD) (when->WRB) (daddy->NN) (and->CC) (you->PRP) (and->CC) (me->PRP) (came->VBD) (and->CC) (got->VBD) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC')])
('tags -> ', '     (we->PRP) (went->VBD) (to->TO) (the->DT) (store->NN) (and->CC) ')
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('cape', 'NN'), ('was', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (on->IN) (the->DT) (cape->NN) (was->VBD) (it->PRP) ')
('tags initial-> ', [('down', 'RB'), ('in', 'IN'), ('provincetown', 'JJ'), ('i', 'NN'), ('think', 'VBP')])
('tags -> ', '     (down->RB) (in->IN) (provincetown->JJ) (i->NN) (think->VBP) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP')])
('tags -> ', '     (i->NN) (think->VBP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('in', 'IN'), ('provincetown', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (in->IN) (provincetown->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('it', 'PRP'), ('was', 'VBD'), ('in', 'IN'), ('this', 'DT'), ('this', 'DT'), ('store', 'NN')])
('tags -> ', '     (yeah->NN) (it->PRP) (was->VBD) (in->IN) (this->DT) (this->DT) (store->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('a', 'DT'), ('whole', 'JJ'), ('bunch', 'NN'), ('of', 'IN'), ('sharks', 'NNS')])
('tags -> ', '     (and->CC) (a->DT) (whole->JJ) (bunch->NN) (of->IN) (sharks->NNS) ')
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('picked', 'VBD'), ('this', 'DT'), ('one', 'CD'), ('out', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (picked->VBD) (this->DT) (one->CD) (out->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('was', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (and->CC) (that->DT) (was->VBD) (good->JJ) ')
candidates to check:
2
('tags initial-> ', [('looks', 'NNS'), ('like', 'IN'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('smile', 'NN'), ('doesn', 'NN'), ('t', 'NN'), ('it', 'PRP')])
('tags -> ', '     (looks->NNS) (like->IN) (it->PRP) (has->VBZ) (got->VBD) (a->DT) (big->JJ) (smile->NN) (doesn->NN) (t->NN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('gon', 'VBZ'), ('na', 'TO'), ('eat', 'VB'), ('something', 'NN')])
('tags -> ', '     (it->PRP) (gon->VBZ) (na->TO) (eat->VB) (something->NN) ')
('tags initial-> ', [('ah', 'NN')])
('tags -> ', '     (ah->NN) ')
('tags initial-> ', [('maybe', 'RB'), ('hey', 'NN')])
('tags -> ', '     (maybe->RB) (hey->NN) ')
candidates to check:
2
('tags initial-> ', [('maybe', 'RB'), ('it', 'PRP'), ('ll', 'VBZ'), ('eat', 'VBD'), ('the', 'DT'), ('rest', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('cantaloupe', 'NN')])
('tags -> ', '     (maybe->RB) (it->PRP) (ll->VBZ) (eat->VBD) (the->DT) (rest->NN) (of->IN) (your->PRP$) (cantaloupe->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('try', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (try->VB) (it->PRP) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('oh', 'UH'), ('okay', 'NN')])
('tags -> ', '     (oh->UH) (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('maybe', 'RB'), ('that', 'IN'), ('wasn', 'JJ'), ('t', 'NNS'), ('such', 'JJ'), ('a', 'DT'), ('good', 'JJ'), ('idea', 'NN'), ('was', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (maybe->RB) (that->IN) (wasn->JJ) (t->NNS) (such->JJ) (a->DT) (good->JJ) (idea->NN) (was->VBD) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('this', 'DT'), ('thing', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (this->DT) (thing->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
descended from food: [['N'], 'supper', 30, 36]
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('help', 'VB'), ('me', 'PRP'), ('with', 'IN'), ('my', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (you->PRP) (can->MD) (help->VB) (me->PRP) (with->IN) (my->PRP$) (supper->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
4
descended from food: [['N'], 'salad', 30, 35]
egg
egg egg 357
[('had', 'VBD'), ('a', 'DT'), ('hankering', 'NN'), ('for', 'IN'), ('egg', 'NN'), ('salad', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('laughs', 'VB')]
['egg']
('tags initial-> ', [('had', 'VBD'), ('a', 'DT'), ('hankering', 'NN'), ('for', 'IN'), ('egg', 'NN'), ('salad', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('laughs', 'VB')])
('tags -> ', '     (had->VBD) (a->DT) (hankering->NN) (for->IN) (egg->NN) (salad->NN) (did->VBD) (you->PRP) (laughs->VB) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noise', 'NN'), ('xxx', 'VBZ'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('goin', 'VB'), ('g', 'NNS'), ('go', 'VB'), ('away', 'RB')])
('tags -> ', '     (www->NN) (noise->NN) (xxx->VBZ) (it->PRP) (s->VBZ) (not->RB) (goin->VB) (g->NNS) (go->VB) (away->RB) ')
candidates to check:
4
descended from food: [['N'], 'sandwiches', 72, 82]
egg
egg egg 357
[('it', 'PRP'), ('looks', 'VBZ'), ('so', 'RB'), ('good', 'JJ'), ('all', 'PDT'), ('the', 'DT'), ('egg', 'NN'), ('salad', 'NN'), ('s', 'VBD'), ('popping', 'VBG'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('sandwiches', 'NNS')]
['egg']
('tags initial-> ', [('it', 'PRP'), ('looks', 'VBZ'), ('so', 'RB'), ('good', 'JJ'), ('all', 'PDT'), ('the', 'DT'), ('egg', 'NN'), ('salad', 'NN'), ('s', 'VBD'), ('popping', 'VBG'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('sandwiches', 'NNS')])
('tags -> ', '     (it->PRP) (looks->VBZ) (so->RB) (good->JJ) (all->PDT) (the->DT) (egg->NN) (salad->NN) (s->VBD) (popping->VBG) (out->IN) (of->IN) (the->DT) (sandwiches->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('don', 'VBZ'), ('t', 'JJ'), ('fit', 'NN')])
('tags -> ', '     (it->PRP) (don->VBZ) (t->JJ) (fit->NN) ')
('tags initial-> ', [('well', 'RB'), ('they', 'PRP'), ('ll', 'VBP'), ('shrink', 'VB'), ('if', 'IN'), ('you', 'PRP'), ('keep', 'VBP'), ('this', 'DT'), ('up', 'RP')])
('tags -> ', '     (well->RB) (they->PRP) (ll->VBP) (shrink->VB) (if->IN) (you->PRP) (keep->VBP) (this->DT) (up->RP) ')
candidates to check:
7
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('hardly', 'RB'), ('anything', 'NN'), ('yesterday', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('shertainly', 'RB'), ('certainly', 'RB'), ('certainly', 'RB'), ('didn', 'VBZ'), ('t', 'JJ'), ('eat', 'NN'), ('hardly', 'RB'), ('anything', 'NN'), ('today', 'NN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->JJ) (eat->NN) (hardly->RB) (anything->NN) (yesterday->NN) (and->CC) (you->PRP) (shertainly->RB) (certainly->RB) (certainly->RB) (didn->VBZ) (t->JJ) (eat->NN) (hardly->RB) (anything->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('screeches', 'NNS')])
('tags -> ', '     (www->NN) (screeches->NNS) ')
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('will', 'MD'), ('eat', 'VB'), ('this', 'DT')])
('tags -> ', '     (and->CC) (i->NN) (will->MD) (eat->VB) (this->DT) ')
candidates to check:
2
descended from food: [['N'], 'breakfast', 31, 40]
('tags initial-> ', [('had', 'VBD'), ('about', 'IN'), ('three', 'CD'), ('bites', 'NNS'), ('of', 'IN'), ('breakfast', 'NN')])
('tags -> ', '     (had->VBD) (about->IN) (three->CD) (bites->NNS) (of->IN) (breakfast->NN) ')
candidates to check:
2
descended from food: [['N'], 'lunch', 31, 36]
('tags initial-> ', [('had', 'VBD'), ('about', 'IN'), ('two', 'CD'), ('bites', 'NNS'), ('o', 'VBP'), ('f', 'JJ'), ('lunch', 'NN')])
('tags -> ', '     (had->VBD) (about->IN) (two->CD) (bites->NNS) (o->VBP) (f->JJ) (lunch->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 29, 35]
('tags initial-> ', [('and', 'CC'), ('two', 'CD'), ('bites', 'NNS'), ('of', 'IN'), ('supper', 'NN')])
('tags -> ', '     (and->CC) (two->CD) (bites->NNS) (of->IN) (supper->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('will', 'MD')])
('tags -> ', '     (and->CC) (i->NN) (will->MD) ')
candidates to check:
2
('tags initial-> ', [('eat', 'NN'), ('this', 'DT'), ('whole', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (eat->NN) (this->DT) (whole->JJ) (thing->NN) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('there', 'EX'), ('s', 'VBZ'), ('two', 'CD'), ('more', 'JJR'), ('bites', 'NNS')])
('tags -> ', '     (well->RB) (there->EX) (s->VBZ) (two->CD) (more->JJR) (bites->NNS) ')
('tags initial-> ', [('whoa', 'NN')])
('tags -> ', '     (whoa->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('guess', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('throwing', 'VBG'), ('up', 'RP'), ('or', 'CC'), ('anything', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (guess->NN) (if->IN) (you->PRP) (re->VBP) (not->RB) (throwing->VBG) (up->RP) (or->CC) (anything->NN) ')
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('okay', 'NN')])
('tags -> ', '     (i->NN) (guess->NN) (that->WDT) (s->VBZ) (okay->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
3
('tags initial-> ', [('jesse', 'NN'), ('got', 'VBD'), ('his', 'PRP$'), ('um', 'JJ'), ('robot', 'JJ'), ('hand', 'NN'), ('too', 'RB')])
('tags -> ', '     (jesse->NN) (got->VBD) (his->PRP$) (um->JJ) (robot->JJ) (hand->NN) (too->RB) ')
candidates to check:
3
('tags initial-> ', [('jesse', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('robot', 'NN'), ('hand', 'NN')])
('tags -> ', '     (jesse->NN) (has->VBZ) (a->DT) (robot->NN) (hand->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('jesse', 'NN'), ('at', 'IN'), ('school', 'NN')])
('tags -> ', '     (jesse->NN) (at->IN) (school->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('a', 'DT'), ('different', 'JJ'), ('jesse', 'NN')])
('tags -> ', '     (a->DT) (different->JJ) (jesse->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('i', 'NN'), ('figured', 'VBD')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (i->NN) (figured->VBD) ')
candidates to check:
3
('tags initial-> ', [('a', 'DT'), ('robot', 'NN'), ('hand', 'NN')])
('tags -> ', '     (a->DT) (robot->NN) (hand->NN) ')
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('what', 'WP'), ('you', 'PRP'), ('said', 'VBD')])
('tags -> ', '     (is->VBZ) (that->IN) (what->WP) (you->PRP) (said->VBD) ')
candidates to check:
4
('tags initial-> ', [('well', 'RB'), ('he', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('toy', 'NN'), ('robot', 'NN'), ('hand', 'NN'), ('i', 'NN'), ('mean', 'VBP')])
('tags -> ', '     (well->RB) (he->PRP) (got->VBD) (a->DT) (toy->NN) (robot->NN) (hand->NN) (i->NN) (mean->VBP) ')
('tags initial-> ', [('well', 'RB'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('i', 'NN'), ('figured', 'VBD')])
('tags -> ', '     (well->RB) (that->IN) (s->VBP) (what->WP) (i->NN) (figured->VBD) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'DT'), ('like', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->DT) (like->IN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('a', 'DT'), ('hand', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (a->DT) (hand->NN) ')
candidates to check:
2
('tags initial-> ', [('does', 'VBZ'), ('that', 'WDT'), ('do', 'VB'), ('anything', 'NN')])
('tags -> ', '     (does->VBZ) (that->WDT) (do->VB) (anything->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('if', 'IN'), ('someone', 'NN'), ('can', 'MD'), ('do', 'VB'), ('this', 'DT')])
('tags -> ', '     (well->RB) (if->IN) (someone->NN) (can->MD) (do->VB) (this->DT) ')
('tags initial-> ', [('and', 'CC'), ('can', 'MD'), ('do', 'VB'), ('this', 'DT')])
('tags -> ', '     (and->CC) (can->MD) (do->VB) (this->DT) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('can', 'MD'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (it->PRP) (can->MD) (do->VB) (that->DT) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
3
shake
shake shake 148
[('and', 'CC'), ('someone', 'NN'), ('and', 'CC'), ('someone', 'NN'), ('can', 'MD'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')]
['shake']
('tags initial-> ', [('and', 'CC'), ('someone', 'NN'), ('and', 'CC'), ('someone', 'NN'), ('can', 'MD'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (and->CC) (someone->NN) (and->CC) (someone->NN) (can->MD) (shake->VB) (his->PRP$) (hand->NN) ')
candidates to check:
1
shake
shake shake 148
[('you', 'PRP'), ('can', 'MD'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')]
['shake']
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (you->PRP) (can->MD) (shake->VB) (his->PRP$) (hand->NN) ')
('tags initial-> ', [('oh', 'RB'), ('well', 'RB'), ('that', 'IN'), ('s', 'JJ'), ('pretty', 'RB'), ('handy', 'JJ'), ('laughs', 'NNS')])
('tags -> ', '     (oh->RB) (well->RB) (that->IN) (s->JJ) (pretty->RB) (handy->JJ) (laughs->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('will', 'MD'), ('you', 'PRP'), ('buy', 'VB'), ('me', 'PRP'), ('xxx', 'JJ'), ('toy', 'NN'), ('someday', 'NN')])
('tags -> ', '     (will->MD) (you->PRP) (buy->VB) (me->PRP) (xxx->JJ) (toy->NN) (someday->NN) ')
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('see', 'VB')])
('tags -> ', '     (well->RB) (we->PRP) (ll->VBP) (see->VB) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('we', 'PRP'), ('see', 'VBP'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('store', 'NN')])
('tags -> ', '     (if->IN) (we->PRP) (see->VBP) (it->PRP) (in->IN) (the->DT) (store->NN) ')
('tags initial-> ', [('if', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('cheap', 'JJ')])
('tags -> ', '     (if->IN) (it->PRP) (s->VBZ) (cheap->JJ) ')
candidates to check:
2
('tags initial-> ', [('have', 'VB'), ('extra', 'JJ'), ('money', 'NN')])
('tags -> ', '     (have->VB) (extra->JJ) (money->NN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('being', 'VBG'), ('really', 'RB'), ('unbelievably', 'RB'), ('good', 'JJ')])
('tags -> ', '     (and->CC) (you->PRP) (re->VBP) (being->VBG) (really->RB) (unbelievably->RB) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('m', 'NN'), ('inclined', 'VBN'), ('to', 'TO'), ('buy', 'VB'), ('you', 'PRP'), ('something', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (m->NN) (inclined->VBN) (to->TO) (buy->VB) (you->PRP) (something->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('that', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('at', 'IN'), ('all', 'DT')])
('tags -> ', '     (that->IN) (i->JJ) (don->VBP) (t->NN) (like->IN) (at->IN) (all->DT) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
6
descended from food: [['N'], 'dinner', 97, 103]
('tags initial-> ', [('because', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('funny', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('the', 'DT'), ('correct', 'JJ'), ('thing', 'NN'), ('to', 'TO'), ('do', 'VB'), ('at', 'IN'), ('the', 'DT'), ('dinner', 'NN'), ('table', 'NN'), ('or', 'CC'), ('at', 'IN'), ('your', 'PRP$'), ('mother', 'NN')])
('tags -> ', '     (because->IN) (i->JJ) (don->VBP) (t->JJ) (think->VBP) (it->PRP) (s->VBZ) (funny->JJ) (and->CC) (i->JJ) (don->VBP) (t->JJ) (think->VBP) (it->PRP) (s->VBZ) (the->DT) (correct->JJ) (thing->NN) (to->TO) (do->VB) (at->IN) (the->DT) (dinner->NN) (table->NN) (or->CC) (at->IN) (your->PRP$) (mother->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('it', 'PRP'), ('just', 'RB'), ('bothers', 'NNS'), ('me', 'PRP')])
('tags -> ', '     (it->PRP) (just->RB) (bothers->NNS) (me->PRP) ')
candidates to check:
4
('tags initial-> ', [('pretending', 'VBG'), ('to', 'TO'), ('shoot', 'VB'), ('somebody', 'NN'), ('isn', 'JJ'), ('t', 'NN'), ('really', 'RB'), ('a', 'DT'), ('nice', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (pretending->VBG) (to->TO) (shoot->VB) (somebody->NN) (isn->JJ) (t->NN) (really->RB) (a->DT) (nice->JJ) (thing->NN) ')
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('shooting', 'VBG')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (shooting->VBG) ')
('tags initial-> ', [('well', 'RB'), ('it', 'PRP'), ('looks', 'VBZ'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (well->RB) (it->PRP) (looks->VBZ) (like->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('a', 'DT'), ('telescope', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (a->DT) (telescope->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('telescope', 'NN')])
('tags -> ', '     (a->DT) (telescope->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (i->NN) (was->VBD) (gon->VBG) (na->TO) (xxx->VB) ')
('tags initial-> ', [('ah', 'NN')])
('tags -> ', '     (ah->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('table', 'NN')])
('tags -> ', '     (xxx->NNS) (table->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
2
descended from food: [['N'], 'food', 63, 67]
('tags initial-> ', [('okay', 'RB'), ('well', 'RB'), ('look', 'VB'), ('don', 'JJ'), ('t', 'JJ'), ('eat', 'NN'), ('anymore', 'RB'), ('with', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('full', 'JJ'), ('of', 'IN'), ('food', 'NN'), ('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('hard', 'JJ'), ('to', 'TO'), ('understand', 'VB')])
('tags -> ', '     (okay->RB) (well->RB) (look->VB) (don->JJ) (t->JJ) (eat->NN) (anymore->RB) (with->IN) (your->PRP$) (mouth->NN) (full->JJ) (of->IN) (food->NN) (be->VB) (cause->NN) (it->PRP) (s->VBZ) (hard->JJ) (to->TO) (understand->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('talk', 'NN'), ('anymore', 'IN')])
('tags -> ', '     (don->NN) (t->NN) (talk->NN) (anymore->IN) ')
candidates to check:
2
descended from food: [['N'], 'food', 58, 62]
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('talk', 'NN'), ('anymore', 'IN'), ('with', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('laughs', 'VBZ'), ('full', 'JJ'), ('of', 'IN'), ('food', 'NN'), ('okay', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (talk->NN) (anymore->IN) (with->IN) (your->PRP$) (mouth->NN) (laughs->VBZ) (full->JJ) (of->IN) (food->NN) (okay->NN) ')
('tags initial-> ', [('makes', 'VBZ'), ('me', 'PRP'), ('mad', 'JJ')])
('tags -> ', '     (makes->VBZ) (me->PRP) (mad->JJ) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'JJ'), ('na', 'TO'), ('eat', 'VB'), ('your', 'PRP$'), ('cantaloupe', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->JJ) (na->TO) (eat->VB) (your->PRP$) (cantaloupe->NN) ')
('tags initial-> ', [('oh', 'RB'), ('great', 'JJ')])
('tags -> ', '     (oh->RB) (great->JJ) ')
candidates to check:
1
descended from food: [['N'], 'juice', 40, 45]
juice
juice juice 52
[('here', 'RB'), ('dip', 'VBZ'), ('dip', 'NN'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('juice', 'NN'), ('and', 'CC'), ('see', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('tastes', 'VBZ'), ('like', 'IN')]
['juice']
dip
dip dip 119
[('here', 'RB'), ('dip', 'VBZ'), ('dip', 'NN'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('juice', 'NN'), ('and', 'CC'), ('see', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('tastes', 'VBZ'), ('like', 'IN')]
['dip']
('tags initial-> ', [('here', 'RB'), ('dip', 'VBZ'), ('dip', 'NN'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('juice', 'NN'), ('and', 'CC'), ('see', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('tastes', 'VBZ'), ('like', 'IN')])
('tags -> ', '     (here->RB) (dip->VBZ) (dip->NN) (it->PRP) (in->IN) (your->PRP$) (juice->NN) (and->CC) (see->VB) (what->WP) (it->PRP) (tastes->VBZ) (like->IN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('yuck', 'NN')])
('tags -> ', '     (yuck->NN) ')
candidates to check:
2
('tags initial-> ', [('son', 'NN'), ('of', 'IN'), ('a', 'DT'), ('gun', 'NN')])
('tags -> ', '     (son->NN) (of->IN) (a->DT) (gun->NN) ')
candidates to check:
2
('tags initial-> ', [('son', 'NN'), ('of', 'IN'), ('a', 'DT'), ('gun', 'NN'), ('huh', 'NN')])
('tags -> ', '     (son->NN) (of->IN) (a->DT) (gun->NN) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'JJ'), ('laughs', 'NNS'), ('who', 'WP'), ('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('trying', 'VBG'), ('to', 'TO'), ('kill', 'VB'), ('do', 'VB'), ('anyways', 'NNS')])
('tags -> ', '     (www->JJ) (laughs->NNS) (who->WP) (what->WP) (are->VBP) (you->PRP) (trying->VBG) (to->TO) (kill->VB) (do->VB) (anyways->NNS) ')
('tags initial-> ', [('bang', 'NN'), ('o', 'NN'), ('bang', 'NN'), ('o', 'NN')])
('tags -> ', '     (bang->NN) (o->NN) (bang->NN) (o->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('too', 'RB'), ('loud', 'JJ')])
('tags -> ', '     (too->RB) (loud->JJ) ')
candidates to check:
2
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('guy', 'NN'), ('on', 'IN'), ('the', 'DT'), ('motorcycle', 'NN')])
('tags -> ', '     (is->VBZ) (that->IN) (the->DT) (guy->NN) (on->IN) (the->DT) (motorcycle->NN) ')
('tags initial-> ', [('a', 'DT'), ('harley', 'NN'), ('davidson', 'NN')])
('tags -> ', '     (a->DT) (harley->NN) (davidson->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('must', 'MD'), ('be', 'VB'), ('be', 'VB'), ('cause', 'VBN'), ('it', 'PRP'), ('s', 'JJ'), ('loud', 'JJ'), ('huh', 'NN')])
('tags -> ', '     (must->MD) (be->VB) (be->VB) (cause->VBN) (it->PRP) (s->JJ) (loud->JJ) (huh->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('recording', 'VBG'), ('us', 'PRP'), ('that', 'IN'), ('we', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('about', 'IN')])
('tags -> ', '     (are->VBP) (you->PRP) (recording->VBG) (us->PRP) (that->IN) (we->PRP) (re->VBP) (talking->VBG) (about->IN) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (i->NN) (think->VBP) (so->RB) ')
candidates to check:
2
('tags initial-> ', [('is', 'VBZ'), ('there', 'EX'), ('a', 'DT'), ('little', 'JJ'), ('red', 'JJ'), ('light', 'NN'), ('that', 'WDT'), ('goes', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (is->VBZ) (there->EX) (a->DT) (little->JJ) (red->JJ) (light->NN) (that->WDT) (goes->VBZ) (on->IN) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (i->NN) (think->VBP) (it->PRP) (is->VBZ) ')
('tags initial-> ', [('then', 'RB'), ('we', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('mail', 'NN'), ('it', 'PRP')])
('tags -> ', '     (then->RB) (we->PRP) (re->VBP) (gon->VBG) (na->TO) (mail->NN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('remember', 'VB'), ('those', 'DT'), ('two', 'CD'), ('young', 'JJ'), ('women', 'NNS'), ('that', 'WDT'), ('came', 'VBD'), ('over', 'IN')])
('tags -> ', '     (remember->VB) (those->DT) (two->CD) (young->JJ) (women->NNS) (that->WDT) (came->VBD) (over->IN) ')
('tags initial-> ', [('i', 'JJ'), ('remember', 'VBP'), ('th', 'JJ'), ('em', 'NN')])
('tags -> ', '     (i->JJ) (remember->VBP) (th->JJ) (em->NN) ')
candidates to check:
3
('tags initial-> ', [('um', 'JJ'), ('and', 'CC'), ('um', 'JJ'), ('they', 'PRP'), ('asked', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('whole', 'JJ'), ('bunch', 'NN'), ('of', 'IN'), ('questions', 'NNS')])
('tags -> ', '     (um->JJ) (and->CC) (um->JJ) (they->PRP) (asked->VBD) (me->PRP) (a->DT) (whole->JJ) (bunch->NN) (of->IN) (questions->NNS) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
('tags initial-> ', [('xxx', 'NN'), ('still', 'RB'), ('has', 'VBZ')])
('tags -> ', '     (xxx->NN) (still->RB) (has->VBZ) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('alright', 'RB'), ('well', 'RB'), ('maybe', 'RB'), ('you', 'PRP'), ('shouldn', 'VBP'), ('t', 'JJ'), ('play', 'NN'), ('with', 'IN'), ('that', 'DT'), ('because', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('if', 'IN'), ('the', 'DT'), ('xxx', 'NN'), ('on', 'IN'), ('it', 'PRP'), ('really', 'RB')])
('tags -> ', '     (alright->RB) (well->RB) (maybe->RB) (you->PRP) (shouldn->VBP) (t->JJ) (play->NN) (with->IN) (that->DT) (because->IN) (i->JJ) (don->VBP) (t->NN) (know->VBP) (if->IN) (the->DT) (xxx->NN) (on->IN) (it->PRP) (really->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('okay', 'NN'), ('but', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('ours', 'NNS')])
('tags -> ', '     (okay->NN) (but->CC) (it->PRP) (s->VBZ) (not->RB) (ours->NNS) ')
('tags initial-> ', [('is', 'VBZ'), ('what', 'WP'), ('i', 'JJ'), ('m', 'VBP'), ('trying', 'VBG'), ('to', 'TO'), ('say', 'VB')])
('tags -> ', '     (is->VBZ) (what->WP) (i->JJ) (m->VBP) (trying->VBG) (to->TO) (say->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('sort', 'VBP'), ('of', 'IN'), ('borrowed', 'VBN'), ('it', 'PRP'), ('from', 'IN'), ('them', 'PRP')])
('tags -> ', '     (we->PRP) (sort->VBP) (of->IN) (borrowed->VBN) (it->PRP) (from->IN) (them->PRP) ')
('tags initial-> ', [('it', 'PRP'), ('too', 'RB'), ('it', 'PRP'), ('too', 'RB'), ('little', 'JJ')])
('tags -> ', '     (it->PRP) (too->RB) (it->PRP) (too->RB) (little->JJ) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('clears', 'NNS'), ('throat', 'RB'), ('right', 'RB')])
('tags -> ', '     (www->NN) (clears->NNS) (throat->RB) (right->RB) ')
candidates to check:
1
('tags initial-> ', [('kennan', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('lisa', 'NN'), ('experimenters', 'NNS')])
('tags -> ', '     (kennan->NN) (and->CC) (uh->JJ) (lisa->NN) (experimenters->NNS) ')
('tags initial-> ', [('lisa', 'NN'), ('and', 'CC')])
('tags -> ', '     (lisa->NN) (and->CC) ')
('tags initial-> ', [('kennan', 'NN'), ('and', 'CC'), ('lisa', 'NN'), ('right', 'NN')])
('tags -> ', '     (kennan->NN) (and->CC) (lisa->NN) (right->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('think', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('uh', 'JJ'), ('yeah', 'NN'), ('i', 'NN'), ('know', 'VBP'), ('it', 'PRP'), ('was', 'VBD'), ('lisa', 'JJ')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (think->VBP) (that->IN) (s->VBP) (uh->JJ) (yeah->NN) (i->NN) (know->VBP) (it->PRP) (was->VBD) (lisa->JJ) ')
('tags initial-> ', [('kennan', 'NN'), ('lisa', 'NN')])
('tags -> ', '     (kennan->NN) (lisa->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('and', 'CC')])
('tags -> ', '     (yeah->NN) (and->CC) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('she', 'PRP'), ('got', 'VBD'), ('brought', 'RB'), ('bought', 'VBN'), ('you', 'PRP'), ('toys', 'VBP')])
('tags -> ', '     (yeah->NN) (she->PRP) (got->VBD) (brought->RB) (bought->VBN) (you->PRP) (toys->VBP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('she', 'PRP'), ('xxx', 'VBD'), ('spoons', 'NNS'), ('and', 'CC'), ('then', 'RB'), ('you', 'PRP'), ('played', 'VBP')])
('tags -> ', '     (and->CC) (then->RB) (she->PRP) (xxx->VBD) (spoons->NNS) (and->CC) (then->RB) (you->PRP) (played->VBP) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
('tags initial-> ', [('exactly', 'RB'), ('we', 'PRP')])
('tags -> ', '     (exactly->RB) (we->PRP) ')
('tags initial-> ', [('xxx', 'NNS'), ('played', 'VBD')])
('tags -> ', '     (xxx->NNS) (played->VBD) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (this->DT) (xxx->NN) ')
candidates to check:
4
descended from food: [['N'], 'breakfast', 43, 52]
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('pretended', 'VBD'), ('that', 'IN'), ('we', 'PRP'), ('were', 'VBD'), ('having', 'VBG'), ('breakfast', 'NN'), ('in', 'IN'), ('the', 'DT'), ('cafeteria', 'NN'), ('at', 'IN'), ('school', 'NN'), ('huh', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (pretended->VBD) (that->IN) (we->PRP) (were->VBD) (having->VBG) (breakfast->NN) (in->IN) (the->DT) (cafeteria->NN) (at->IN) (school->NN) (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'NN'), ('will', 'MD'), ('you', 'PRP'), ('brought', 'VB'), ('me', 'PRP'), ('money', 'NN'), ('and', 'CC'), ('toys', 'NN'), ('sometime', 'RB')])
('tags -> ', '     (yeah->NN) (will->MD) (you->PRP) (brought->VB) (me->PRP) (money->NN) (and->CC) (toys->NN) (sometime->RB) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('xxx', 'VBP')])
('tags -> ', '     (are->VBP) (you->PRP) (xxx->VBP) ')
candidates to check:
2
('tags initial-> ', [('oh', 'UH'), ('my', 'PRP$'), ('gosh', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('losing', 'VBG'), ('count', 'NN')])
('tags -> ', '     (oh->UH) (my->PRP$) (gosh->NN) (i->NN) (m->VBP) (losing->VBG) (count->NN) ')
candidates to check:
4
('tags initial-> ', [('wait', 'VB'), ('a', 'DT'), ('minute', 'NN'), ('now', 'RB'), ('you', 'PRP'), ('want', 'VBP'), ('a', 'DT'), ('robot', 'NN'), ('hand', 'NN')])
('tags -> ', '     (wait->VB) (a->DT) (minute->NN) (now->RB) (you->PRP) (want->VBP) (a->DT) (robot->NN) (hand->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
candidates to check:
4
('tags initial-> ', [('um', 'NN'), ('and', 'CC'), ('a', 'DT'), ('tray', 'NN'), ('a', 'DT'), ('toy', 'NN'), ('tray', 'NN')])
('tags -> ', '     (um->NN) (and->CC) (a->DT) (tray->NN) (a->DT) (toy->NN) (tray->NN) ')
('tags initial-> ', [('oh', 'RB'), ('right', 'JJ')])
('tags -> ', '     (oh->RB) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('and', 'CC'), ('a', 'DT'), ('and', 'CC'), ('a', 'DT'), ('and', 'CC'), ('all', 'PDT'), ('those', 'DT'), ('plates', 'NNS')])
('tags -> ', '     (xxx->NN) (and->CC) (a->DT) (and->CC) (a->DT) (and->CC) (all->PDT) (those->DT) (plates->NNS) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('all', 'DT'), ('those', 'DT'), ('cups', 'NNS')])
('tags -> ', '     (and->CC) (all->DT) (those->DT) (cups->NNS) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('um', 'JJ'), ('and', 'CC'), ('cars', 'NNS'), ('and', 'CC'), ('uh', 'NN')])
('tags -> ', '     (and->CC) (um->JJ) (and->CC) (cars->NNS) (and->CC) (uh->NN) ')
candidates to check:
1
('tags initial-> ', [('cups', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('saucer', 'NN')])
('tags -> ', '     (cups->NNS) (and->CC) (a->DT) (saucer->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('is', 'VBZ'), ('and', 'CC'), ('all', 'DT'), ('and', 'CC'), ('all', 'PDT'), ('those', 'DT'), ('cups', 'NNS')])
('tags -> ', '     (and->CC) (is->VBZ) (and->CC) (all->DT) (and->CC) (all->PDT) (those->DT) (cups->NNS) ')
('tags initial-> ', [('ah', 'NN')])
('tags -> ', '     (ah->NN) ')
('tags initial-> ', [('now', 'RB'), ('you', 'PRP'), ('understand', 'VBP')])
('tags -> ', '     (now->RB) (you->PRP) (understand->VBP) ')
candidates to check:
4
('tags initial-> ', [('sort', 'NN'), ('o', 'MD'), ('f', 'VB'), ('like', 'IN'), ('you', 'PRP'), ('own', 'VBP'), ('um', 'JJ'), ('dishes', 'NNS'), ('set', 'NN'), ('of', 'IN'), ('dishes', 'NNS'), ('huh', 'VBP')])
('tags -> ', '     (sort->NN) (o->MD) (f->VB) (like->IN) (you->PRP) (own->VBP) (um->JJ) (dishes->NNS) (set->NN) (of->IN) (dishes->NNS) (huh->VBP) ')
('tags initial-> ', [('yeah', 'NN'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('yeah', 'VB')])
('tags -> ', '     (yeah->NN) (and->CC) (and->CC) (and->CC) (yeah->VB) ')
candidates to check:
2
('tags initial-> ', [('know', 'VB'), ('how', 'WRB'), ('many', 'JJ'), ('toys', 'NNS'), ('that', 'WDT'), ('makes', 'VBZ')])
('tags -> ', '     (know->VB) (how->WRB) (many->JJ) (toys->NNS) (that->WDT) (makes->VBZ) ')
('tags initial-> ', [('oh', 'UH'), ('gosh', 'NN')])
('tags -> ', '     (oh->UH) (gosh->NN) ')
('tags initial-> ', [('how', 'WRB'), ('many', 'JJ')])
('tags -> ', '     (how->WRB) (many->JJ) ')
('tags initial-> ', [('ten', 'NNS')])
('tags -> ', '     (ten->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('buy', 'VB'), ('ten', 'JJ'), ('toys', 'NNS'), ('now', 'RB')])
('tags -> ', '     (i->NNS) (have->VBP) (to->TO) (buy->VB) (ten->JJ) (toys->NNS) (now->RB) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('your', 'PRP$'), ('birthday', 'NN'), ('was', 'VBD'), ('only', 'RB'), ('a', 'DT'), ('month', 'NN'), ('ago', 'RB')])
('tags -> ', '     (but->CC) (your->PRP$) (birthday->NN) (was->VBD) (only->RB) (a->DT) (month->NN) (ago->RB) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('christmas', 'VB'), ('isn', 'NN'), ('t', 'NN'), ('for', 'IN'), ('five', 'CD'), ('more', 'JJR'), ('months', 'NNS')])
('tags -> ', '     (and->CC) (christmas->VB) (isn->NN) (t->NN) (for->IN) (five->CD) (more->JJR) (months->NNS) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('uhoh', 'NN')])
('tags -> ', '     (uhoh->NN) ')
candidates to check:
2
('tags initial-> ', [('will', 'MD'), ('you', 'PRP'), ('buy', 'VB'), ('me', 'PRP'), ('some', 'DT'), ('new', 'JJ'), ('toys', 'NNS'), ('someday', 'JJ')])
('tags -> ', '     (will->MD) (you->PRP) (buy->VB) (me->PRP) (some->DT) (new->JJ) (toys->NNS) (someday->JJ) ')
('tags initial-> ', [('sure', 'NN')])
('tags -> ', '     (sure->NN) ')
candidates to check:
1
('tags initial-> ', [('uh', 'JJ'), ('ten', 'CD'), ('toys', 'NNS')])
('tags -> ', '     (uh->JJ) (ten->CD) (toys->NNS) ')
('tags initial-> ', [('oh', 'UH'), ('gosh', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (gosh->NN) (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('sure', 'JJ'), ('i', 'NN'), ('ll', 'VBP'), ('buy', 'VB'), ('you', 'PRP'), ('ten', 'VBP'), ('toys', 'JJ'), ('sometime', 'RB')])
('tags -> ', '     (sure->JJ) (i->NN) (ll->VBP) (buy->VB) (you->PRP) (ten->VBP) (toys->JJ) (sometime->RB) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('this', 'DT'), ('cantaloupe', 'NN'), ('chi', 'NN')])
('tags -> ', '     (here->RB) (you->PRP) (want->VBP) (some->DT) (more->JJR) (of->IN) (this->DT) (cantaloupe->NN) (chi->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('gob', 'NN'), ('o', 'MD'), ('gob', 'VB'), ('o', 'JJ'), ('gob', 'NN'), ('o', 'NN'), ('gobble', 'JJ')])
('tags -> ', '     (gob->NN) (o->MD) (gob->VB) (o->JJ) (gob->NN) (o->NN) (gobble->JJ) ')
candidates to check:
4
descended from food: [['N'], 'food', 13, 17]
descended from food: [['N'], 'food', 13, 17]
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0ea1b48>)
[('orange', 'NN'), ('food', 'NN'), ('is', 'VBZ'), ('almost', 'RB'), ('as', 'RB'), ('good', 'JJ'), ('as', 'IN'), ('green', 'JJ'), ('food', 'NN'), ('to', 'TO'), ('eat', 'VB')]
['orange']
('tags initial-> ', [('orange', 'NN'), ('food', 'NN'), ('is', 'VBZ'), ('almost', 'RB'), ('as', 'RB'), ('good', 'JJ'), ('as', 'IN'), ('green', 'JJ'), ('food', 'NN'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (orange->NN) (food->NN) (is->VBZ) (almost->RB) (as->RB) (good->JJ) (as->IN) (green->JJ) (food->NN) (to->TO) (eat->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('hey', 'NN'), ('don', 'NN'), ('t', 'NN'), ('cover', 'VB'), ('up', 'RP'), ('the', 'DT'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('hey', 'NN'), ('don', 'NN'), ('t', 'NN'), ('cover', 'VB'), ('up', 'RP'), ('the', 'DT'), ('broccoli', 'NN')])
('tags -> ', '     (hey->NN) (don->NN) (t->NN) (cover->VB) (up->RP) (the->DT) (broccoli->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('you', 'PRP'), ('want', 'VBP'), ('more', 'JJR'), ('broccoli', 'NNS')]
['broccoli']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('more', 'JJR'), ('broccoli', 'NNS')])
('tags -> ', '     (you->PRP) (want->VBP) (more->JJR) (broccoli->NNS) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('i', 'NN'), ('ll', 'VBP'), ('bring', 'NN'), ('you', 'PRP'), ('some', 'DT'), ('broccoli', 'NNS')]
['broccoli']
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('bring', 'NN'), ('you', 'PRP'), ('some', 'DT'), ('broccoli', 'NNS')])
('tags -> ', '     (i->NN) (ll->VBP) (bring->NN) (you->PRP) (some->DT) (broccoli->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBD) (good->JJ) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('like', 'IN'), ('eating', 'VBG'), ('a', 'DT'), ('little', 'JJ'), ('tree', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (like->IN) (eating->VBG) (a->DT) (little->JJ) (tree->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('try', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (try->VB) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('will', 'MD')])
('tags -> ', '     (you->PRP) (will->MD) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('chi', 'NN'), ('wants', 'VBZ'), ('to', 'TO'), ('try', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('tree', 'NN'), ('of', 'IN'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('chi', 'NN'), ('wants', 'VBZ'), ('to', 'TO'), ('try', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('tree', 'NN'), ('of', 'IN'), ('broccoli', 'NN')])
('tags -> ', '     (chi->NN) (wants->VBZ) (to->TO) (try->VB) (a->DT) (little->JJ) (tree->NN) (of->IN) (broccoli->NN) ')
('tags initial-> ', [('oh', 'IN'), ('he', 'PRP'), ('does', 'VBZ'), ('huh', 'VB')])
('tags -> ', '     (oh->IN) (he->PRP) (does->VBZ) (huh->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('good', 'JJ'), ('i', 'NN'), ('ll', 'VBP'), ('bring', 'VBG'), ('him', 'PRP'), ('some', 'DT'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (good->JJ) (i->NN) (ll->VBP) (bring->VBG) (him->PRP) (some->DT) (to->TO) (eat->VB) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('good', 'JJ')])
('tags -> ', '     (is->VBZ) (it->PRP) (good->JJ) ')
candidates to check:
3
descended from food: [['N'], 'food', 73, 77]
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('at', 'IN'), ('school', 'NN'), ('they', 'PRP'), ('told', 'VBD'), ('me', 'PRP'), ('that', 'IN'), ('you', 'PRP'), ('always', 'RB'), ('try', 'VB'), ('new', 'JJ'), ('food', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (at->IN) (school->NN) (they->PRP) (told->VBD) (me->PRP) (that->IN) (you->PRP) (always->RB) (try->VB) (new->JJ) (food->NN) ')
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('willn', 'VBP'), ('t', 'VB'), ('do', 'VBP'), ('that', 'DT'), ('here', 'RB')])
('tags -> ', '     (but->CC) (you->PRP) (willn->VBP) (t->VB) (do->VBP) (that->DT) (here->RB) ')
('tags initial-> ', [('xxx', 'NNS'), ('but', 'CC')])
('tags -> ', '     (xxx->NNS) (but->CC) ')
candidates to check:
3
descended from food: [['N'], 'salad', 43, 48]
descended from food: [['N'], 'peas', 74, 78]
peas
peas peas 116
[('you', 'PRP'), ('always', 'RB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('your', 'PRP$'), ('salad', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS')]
['peas']
carrots
carrots carrots 35
[('you', 'PRP'), ('always', 'RB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('your', 'PRP$'), ('salad', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS')]
['carrots']
('tags initial-> ', [('you', 'PRP'), ('always', 'RB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('your', 'PRP$'), ('salad', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS')])
('tags -> ', '     (you->PRP) (always->RB) (tell->VB) (me->PRP) (that->IN) (you->PRP) (eat->VBP) (your->PRP$) (salad->NN) (and->CC) (your->PRP$) (carrots->NNS) (and->CC) (peas->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('if', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'VBP'), ('like', 'IN'), ('it', 'PRP'), ('i', 'VBZ'), ('ll', 'JJ'), ('spit', 'NN'), ('it', 'PRP'), ('out', 'RP'), ('on', 'IN'), ('my', 'PRP$'), ('plate', 'NN'), ('okay', 'NN')])
('tags -> ', '     (but->CC) (if->IN) (i->JJ) (don->VBP) (t->VBP) (like->IN) (it->PRP) (i->VBZ) (ll->JJ) (spit->NN) (it->PRP) (out->RP) (on->IN) (my->PRP$) (plate->NN) (okay->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('hey', 'NN'), ('father', 'NN'), ('name', 'NN')])
('tags -> ', '     (hey->NN) (father->NN) (name->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('i', 'NN'), ('if', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'VBP'), ('like', 'IN'), ('it', 'PRP'), ('right', 'VBD')])
('tags -> ', '     (i->NN) (if->IN) (i->JJ) (don->VBP) (t->VBP) (like->IN) (it->PRP) (right->VBD) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('spit', 'NN'), ('it', 'PRP'), ('out', 'RP'), ('on', 'IN'), ('my', 'PRP$'), ('plate', 'NN')])
('tags -> ', '     (i->NN) (ll->VBP) (spit->NN) (it->PRP) (out->RP) (on->IN) (my->PRP$) (plate->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('know', 'VB'), ('what', 'WP')])
('tags -> ', '     (know->VB) (what->WP) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('bite', 'VB'), ('it', 'PRP'), ('this', 'DT'), ('many', 'JJ'), ('times', 'NNS')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (bite->VB) (it->PRP) (this->DT) (many->JJ) (times->NNS) ')
('tags initial-> ', [('one', 'CD'), ('two', 'CD'), ('three', 'CD'), ('right', 'NN')])
('tags -> ', '     (one->CD) (two->CD) (three->CD) (right->NN) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('six', 'CD'), ('seven', 'CD'), ('eight', 'CD'), ('nine', 'CD'), ('ten', 'NN')])
('tags -> ', '     (four->CD) (five->CD) (six->CD) (seven->CD) (eight->CD) (nine->CD) (ten->NN) ')
candidates to check:
1
('tags initial-> ', [('whistles', 'NNS')])
('tags -> ', '     (whistles->NNS) ')
('tags initial-> ', [('wow', 'NN')])
('tags -> ', '     (wow->NN) ')
('tags initial-> ', [('eleven', 'RB'), ('twelve', 'VB')])
('tags -> ', '     (eleven->RB) (twelve->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('hey', 'NN'), ('chi', 'VBP'), ('come', 'VBN'), ('on', 'IN'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (hey->NN) (chi->VBP) (come->VBN) (on->IN) (in->IN) (here->RB) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('go', 'VB'), ('on', 'IN'), ('in', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('bring', 'VBG'), ('you', 'PRP'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('broccoli', 'VB')]
['broccoli']
('tags initial-> ', [('go', 'VB'), ('on', 'IN'), ('in', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('bring', 'VBG'), ('you', 'PRP'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('broccoli', 'VB')])
('tags -> ', '     (go->VB) (on->IN) (in->IN) (there->EX) (i->JJ) (ll->VBP) (bring->VBG) (you->PRP) (a->DT) (piece->NN) (of->IN) (it->PRP) (broccoli->VB) ')
('tags initial-> ', [('here', 'RB'), ('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (here->RB) (come->VBN) (on->IN) ')
('tags initial-> ', [('shouldn', 'NN'), ('t', 'NNS'), ('have', 'VBP'), ('one', 'CD')])
('tags -> ', '     (shouldn->NN) (t->NNS) (have->VBP) (one->CD) ')
('tags initial-> ', [('wow', 'NN')])
('tags -> ', '     (wow->NN) ')
('tags initial-> ', [('okay', 'NN'), ('here', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('little', 'JJ')])
('tags -> ', '     (okay->NN) (here->RB) (s->VBZ) (a->DT) (little->JJ) ')
('tags initial-> ', [('watch', 'NN')])
('tags -> ', '     (watch->NN) ')
('tags initial-> ', [('watch', 'NN'), ('out', 'RP')])
('tags -> ', '     (watch->NN) (out->RP) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('come', 'NN'), ('and', 'CC'), ('try', 'VB'), ('one', 'CD'), ('of', 'IN'), ('these', 'DT'), ('little', 'JJ'), ('trees', 'NNS')])
('tags -> ', '     (come->NN) (and->CC) (try->VB) (one->CD) (of->IN) (these->DT) (little->JJ) (trees->NNS) ')
('tags initial-> ', [('watch', 'NN')])
('tags -> ', '     (watch->NN) ')
candidates to check:
2
('tags initial-> ', [('here', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('little', 'JJ'), ('piece', 'NN'), ('of', 'IN'), ('tree', 'NN'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (here->RB) (s->VBZ) (a->DT) (little->JJ) (piece->NN) (of->IN) (tree->NN) (for->IN) (you->PRP) ')
('tags initial-> ', [('watch', 'NN'), ('what', 'WP')])
('tags -> ', '     (watch->NN) (what->WP) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('broccoli', 'NN')])
('tags -> ', '     (a->DT) (piece->NN) (of->IN) (broccoli->NN) ')
candidates to check:
1
('tags initial-> ', [('could', 'MD'), ('you', 'PRP'), ('put', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('my', 'PRP$'), ('plate', 'NN')])
('tags -> ', '     (could->MD) (you->PRP) (put->VB) (it->PRP) (on->IN) (my->PRP$) (plate->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('w', 'NN'), ('watch', 'VB'), ('how', 'WRB'), ('how', 'WRB'), ('high', 'JJ'), ('i', 'NN'), ('can', 'MD'), ('throw', 'VB'), ('it', 'PRP')])
('tags -> ', '     (w->NN) (watch->VB) (how->WRB) (how->WRB) (high->JJ) (i->NN) (can->MD) (throw->VB) (it->PRP) ')
('tags initial-> ', [('wow', 'NN')])
('tags -> ', '     (wow->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('see', 'VB'), ('how', 'WRB'), ('high', 'JJ'), ('he', 'PRP'), ('threw', 'VBD'), ('that', 'IN')])
('tags -> ', '     (did->VBD) (you->PRP) (see->VB) (how->WRB) (high->JJ) (he->PRP) (threw->VBD) (that->IN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('okay', 'NN'), ('here', 'RB'), ('try', 'VB'), ('this', 'DT')])
('tags -> ', '     (okay->NN) (here->RB) (try->VB) (this->DT) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('higher', 'JJR')])
('tags -> ', '     (i->NN) (i->VBP) (it->PRP) (s->VBZ) (higher->JJR) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('sit', 'VBP'), ('down', 'RP'), ('and', 'CC'), ('try', 'VB'), ('that', 'DT'), ('broccoli', 'NN'), ('now', 'RB')]
['broccoli']
('tags initial-> ', [('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('sit', 'VBP'), ('down', 'RP'), ('and', 'CC'), ('try', 'VB'), ('that', 'DT'), ('broccoli', 'NN'), ('now', 'RB')])
('tags -> ', '     (why->WRB) (don->NN) (t->NN) (you->PRP) (sit->VBP) (down->RP) (and->CC) (try->VB) (that->DT) (broccoli->NN) (now->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('exactly', 'RB'), ('sitting', 'VBG'), ('down', 'RP')])
('tags -> ', '     (he->PRP) (s->VBZ) (not->RB) (exactly->RB) (sitting->VBG) (down->RP) ')
candidates to check:
2
('tags initial-> ', [('f', 'NN'), ('f', 'VBZ'), ('father', 'RB'), ('name', 'JJ'), ('don', 'JJ'), ('t', 'NN'), ('give', 'VB'), ('me', 'PRP'), ('your', 'PRP$'), ('big', 'JJ'), ('pieces', 'NNS')])
('tags -> ', '     (f->NN) (f->VBZ) (father->RB) (name->JJ) (don->JJ) (t->NN) (give->VB) (me->PRP) (your->PRP$) (big->JJ) (pieces->NNS) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('that', 'WDT'), ('s', 'NN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (that->DT) (s->VBZ) (that->WDT) (s->NN) (for->IN) (me->PRP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP'), ('do', 'VB'), ('it', 'PRP'), ('we', 'PRP'), ('ll', 'VBP'), ('eat', 'VB'), ('it', 'PRP'), ('together', 'RB')])
('tags -> ', '     (we->PRP) (ll->VBP) (do->VB) (it->PRP) (we->PRP) (ll->VBP) (eat->VB) (it->PRP) (together->RB) ')
('tags initial-> ', [('ready', 'JJ')])
('tags -> ', '     (ready->JJ) ')
('tags initial-> ', [('go', 'VB')])
('tags -> ', '     (go->VB) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('ugh', 'IN')])
('tags -> ', '     (ugh->IN) ')
candidates to check:
1
('tags initial-> ', [('chi', 'NN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB'), ('even', 'RB'), ('get', 'VB'), ('your', 'PRP$'), ('mouth', 'NN'), ('around', 'IN'), ('it', 'PRP')])
('tags -> ', '     (chi->NN) (you->PRP) (didn->VBP) (t->VB) (even->RB) (get->VB) (your->PRP$) (mouth->NN) (around->IN) (it->PRP) ')
('tags initial-> ', [('how', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('know', 'VB')])
('tags -> ', '     (how->WRB) (do->VB) (you->PRP) (know->VB) ')
('tags initial-> ', [('well', 'RB'), ('what', 'WP'), ('happened', 'VBD')])
('tags -> ', '     (well->RB) (what->WP) (happened->VBD) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('even', 'RB'), ('touch', 'VB'), ('your', 'PRP$'), ('tongue', 'NN')])
('tags -> ', '     (it->PRP) (didn->VBZ) (t->JJ) (even->RB) (touch->VB) (your->PRP$) (tongue->NN) ')
('tags initial-> ', [('how', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (how->WRB) (do->VB) (you->PRP) (know->VB) (you->PRP) (don->VBP) (t->NNS) (like->IN) (it->PRP) ')
('tags initial-> ', [('what', 'WP'), ('happened', 'VBD')])
('tags -> ', '     (what->WP) (happened->VBD) ')
('tags initial-> ', [('xxx', 'NNS'), ('laughs', 'NNS')])
('tags -> ', '     (xxx->NNS) (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('just', 'RB'), ('didn', 'RB'), ('t', 'VBP'), ('like', 'IN'), ('the', 'DT'), ('top', 'NN')])
('tags -> ', '     (i->NN) (just->RB) (didn->RB) (t->VBP) (like->IN) (the->DT) (top->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('the', 'DT'), ('top', 'NN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->NNS) (like->IN) (the->DT) (top->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('the', 'DT'), ('way', 'NN'), ('it', 'PRP'), ('feels', 'VBZ'), ('or', 'CC')])
('tags -> ', '     (why->WRB) (you->PRP) (didn->VBP) (t->NNS) (like->IN) (the->DT) (way->NN) (it->PRP) (feels->VBZ) (or->CC) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('the', 'DT'), ('way', 'NN'), ('it', 'PRP'), ('feels', 'VBZ')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (like->IN) (the->DT) (way->NN) (it->PRP) (feels->VBZ) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('the', 'DT'), ('taste', 'NN')])
('tags -> ', '     (what->WP) (about->IN) (the->DT) (taste->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('taste', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (the->DT) (taste->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('you', 'PRP'), ('even', 'RB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (you->PRP) (even->RB) ')
candidates to check:
1
('tags initial-> ', [('like', 'IN'), ('the', 'DT'), ('color', 'NN')])
('tags -> ', '     (like->IN) (the->DT) (color->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('feel', 'VB'), ('my', 'PRP$'), ('muscles', 'NNS')])
('tags -> ', '     (feel->VB) (my->PRP$) (muscles->NNS) ')
candidates to check:
3
('tags initial-> ', [('oh', 'UH'), ('boy', 'NN'), ('they', 'PRP'), ('feel', 'VBP'), ('kinda', 'NNS'), ('puny', 'VBP'), ('today', 'NN')])
('tags -> ', '     (oh->UH) (boy->NN) (they->PRP) (feel->VBP) (kinda->NNS) (puny->VBP) (today->NN) ')
('tags initial-> ', [('are', 'VBP'), ('they', 'PRP'), ('big', 'JJ')])
('tags -> ', '     (are->VBP) (they->PRP) (big->JJ) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('they', 'PRP'), ('shrank', 'VBD'), ('a', 'DT'), ('tiny', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (i->NN) (think->VBP) (they->PRP) (shrank->VBD) (a->DT) (tiny->JJ) (bit->NN) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('they', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('little', 'JJ'), ('smaller', 'JJR'), ('because', 'IN'), ('you', 'PRP'), ('haven', 'VBP'), ('t', 'RB'), ('been', 'VBN'), ('eating', 'VBG'), ('very', 'RB'), ('well', 'RB'), ('lately', 'RB')])
('tags -> ', '     (i->NN) (think->VBP) (they->PRP) (got->VBD) (a->DT) (little->JJ) (smaller->JJR) (because->IN) (you->PRP) (haven->VBP) (t->RB) (been->VBN) (eating->VBG) (very->RB) (well->RB) (lately->RB) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('watch', 'NN'), ('now', 'RB'), ('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('let', 'VBP'), ('s', 'PRP'), ('try', 'VB'), ('it', 'PRP'), ('again', 'RB')])
('tags -> ', '     (watch->NN) (now->RB) (why->WRB) (don->NN) (t->NN) (you->PRP) (let->VBP) (s->PRP) (try->VB) (it->PRP) (again->RB) ')
candidates to check:
1
('tags initial-> ', [('put', 'VBD'), ('that', 'DT'), ('one', 'CD'), ('put', 'VBD'), ('that', 'IN'), ('one', 'CD'), ('back', 'RB'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (put->VBD) (that->DT) (one->CD) (put->VBD) (that->IN) (one->CD) (back->RB) (in->IN) (your->PRP$) (mouth->NN) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('it', 'PRP'), ('another', 'DT'), ('try', 'NN')])
('tags -> ', '     (give->VB) (it->PRP) (another->DT) (try->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB'), ('even', 'RB'), ('let', 'VB'), ('it', 'PRP'), ('try', 'VB')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->VB) (even->RB) (let->VB) (it->PRP) (try->VB) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB'), ('even', 'RB'), ('bite', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->VB) (even->RB) (bite->VB) (it->PRP) ')
('tags initial-> ', [('got', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (got->VBD) (it->PRP) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('watch', 'NN')])
('tags -> ', '     (watch->NN) ')
candidates to check:
3
descended from food: [['N'], 'dinner', 17, 23]
('tags initial-> ', [('not', 'RB'), ('at', 'IN'), ('the', 'DT'), ('dinner', 'NN'), ('table', 'NN')])
('tags -> ', '     (not->RB) (at->IN) (the->DT) (dinner->NN) (table->NN) ')
candidates to check:
1
('tags initial-> ', [('even', 'RB'), ('daddy', 'JJ'), ('eats', 'NNS'), ('that', 'WDT')])
('tags -> ', '     (even->RB) (daddy->JJ) (eats->NNS) (that->WDT) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('yelps', 'NN')])
('tags -> ', '     (www->NN) (yelps->NN) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('it', 'PRP'), ('a', 'DT'), ('try', 'NN')])
('tags -> ', '     (give->VB) (it->PRP) (a->DT) (try->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
candidates to check:
2
descended from food: [['N'], 'candy', 17, 22]
('tags initial-> ', [('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBD'), ('candy', 'NN'), ('inside', 'IN')])
('tags -> ', '     (it->PRP) (has->VBZ) (got->VBD) (candy->NN) (inside->IN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('have', 'VB'), ('to', 'TO'), ('tell', 'VB'), ('you', 'PRP'), ('that', 'IN'), ('but', 'CC')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (want->VBP) (to->TO) (have->VB) (to->TO) (tell->VB) (you->PRP) (that->IN) (but->CC) ')
candidates to check:
1
descended from food: [['N'], 'candy', 6, 11]
('tags initial-> ', [('candy', 'NN'), ('inside', 'IN')])
('tags -> ', '     (candy->NN) (inside->IN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
5
('tags initial-> ', [('yeah', 'NN'), ('chewy', 'NN'), ('tootsie', 'NN'), ('roll', 'NN')])
('tags -> ', '     (yeah->NN) (chewy->NN) (tootsie->NN) (roll->NN) ')
candidates to check:
2
descended from food: [['N'], 'lollipops', 21, 30]
descended from food: [['N'], 'chocolate', 61, 70]
chocolate
chocolate chocolate 598
[('you', 'PRP'), ('know', 'VBP'), ('those', 'DT'), ('lollipops', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('and', 'CC'), ('then', 'RB'), ('there', 'EX'), ('s', 'JJ'), ('chocolate', 'NN'), ('inside', 'IN')]
['chocolate']
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('those', 'DT'), ('lollipops', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('and', 'CC'), ('then', 'RB'), ('there', 'EX'), ('s', 'JJ'), ('chocolate', 'NN'), ('inside', 'IN')])
('tags -> ', '     (you->PRP) (know->VBP) (those->DT) (lollipops->NNS) (that->IN) (you->PRP) (eat->VBP) (and->CC) (then->RB) (there->EX) (s->JJ) (chocolate->NN) (inside->IN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('sorta', 'JJ'), ('sort', 'NN'), ('of', 'IN'), ('what', 'WP'), ('it', 'PRP'), ('s', 'VBZ'), ('like', 'IN')])
('tags -> ', '     (that->DT) (s->VBD) (sorta->JJ) (sort->NN) (of->IN) (what->WP) (it->PRP) (s->VBZ) (like->IN) ')
candidates to check:
2
descended from food: [['N'], 'chocolate', 10, 19]
chocolate
chocolate chocolate 598
[('but', 'CC'), ('chocolate', 'NN'), ('gives', 'VBZ'), ('me', 'PRP'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')]
['chocolate']
('tags initial-> ', [('but', 'CC'), ('chocolate', 'NN'), ('gives', 'VBZ'), ('me', 'PRP'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')])
('tags -> ', '     (but->CC) (chocolate->NN) (gives->VBZ) (me->PRP) (a->DT) (tummy->NN) (ache->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('makes', 'VBZ'), ('me', 'PRP'), ('xxx', 'VB')])
('tags -> ', '     (it->PRP) (makes->VBZ) (me->PRP) (xxx->VB) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('not', 'RB'), ('buying', 'VBG'), ('that', 'IN'), ('line', 'NN'), ('one', 'CD')])
('tags -> ', '     (he->PRP) (s->VBD) (not->RB) (buying->VBG) (that->IN) (line->NN) (one->CD) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('he', 'PRP'), ('say', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (he->PRP) (say->VB) ')
candidates to check:
2
descended from food: [['N'], 'chocolate', 6, 15]
chocolate
chocolate chocolate 598
[('chocolate', 'NN'), ('gives', 'VBZ'), ('him', 'PRP'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')]
['chocolate']
('tags initial-> ', [('chocolate', 'NN'), ('gives', 'VBZ'), ('him', 'PRP'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')])
('tags -> ', '     (chocolate->NN) (gives->VBZ) (him->PRP) (a->DT) (tummy->NN) (ache->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('laughs', 'NNS')])
('tags -> ', '     (yeah->NN) (laughs->NNS) ')
candidates to check:
2
descended from food: [['N'], 'chocolate', 19, 28]
chocolate
chocolate chocolate 598
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('xxx', 'NN')]
['chocolate']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (chocolate->NN) (xxx->NN) ')
('tags initial-> ', [('clever', 'NN')])
('tags -> ', '     (clever->NN) ')
('tags initial-> ', [('yes', 'RB'), ('you', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (yes->RB) (you->PRP) (do->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('it', 'PRP'), ('now', 'RB'), ('xxx', 'VBP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->NNS) (like->IN) (it->PRP) (now->RB) (xxx->VBP) ')
candidates to check:
3
descended from food: [['N'], 'chocolate', 27, 36]
broccoli
broccoli broccoli 30
[('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('broccoli', 'NN')]
['broccoli']
chocolate
chocolate chocolate 598
[('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('broccoli', 'NN')]
['chocolate']
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('broccoli', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->NNS) (like->IN) (chocolate->NN) (broccoli->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
4
descended from food: [['N'], 'chocolate', 13, 22]
chocolate cake
chocolate cake chocolate cake 371
[('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate', 'cake']
chocolate
chocolate chocolate 598
[('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate']
cake
cake cake 412
[('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['cake']
('tags initial-> ', [('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')])
('tags -> ', '     (i->NNS) (like->VBP) (chocolate->NN) (cake->NN) ')
candidates to check:
4
descended from food: [['N'], 'chocolate', 20, 29]
chocolate cake
chocolate cake chocolate cake 371
[('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate', 'cake']
chocolate
chocolate chocolate 598
[('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate']
cake
cake cake 412
[('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['cake']
('tags initial-> ', [('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')])
('tags -> ', '     (you->PRP) (only->RB) (want->VBP) (chocolate->NN) (cake->NN) ')
candidates to check:
4
descended from food: [['N'], 'chocolate', 22, 31]
chocolate cake
chocolate cake chocolate cake 371
[('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')]
['chocolate', 'cake']
chocolate
chocolate chocolate 598
[('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')]
['chocolate']
cake
cake cake 412
[('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')]
['cake']
('tags initial-> ', [('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')])
('tags -> ', '     (well->RB) (it->PRP) (has->VBZ) (got->VBN) (chocolate->JJ) (cake->NN) (sprinkled->VBD) (inside->IN) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'chocolate', 19, 28]
chocolate
chocolate chocolate 598
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (chocolate->NN) ')
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('it', 'PRP'), ('then', 'RB')])
('tags -> ', '     (well->RB) (you->PRP) (re->VBP) (not->RB) (gon->VB) (na->TO) (eat->VB) (it->PRP) (then->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('someday', 'RB'), ('when', 'WRB'), ('you', 'PRP'), ('get', 'VBP'), ('a', 'DT'), ('little', 'JJ'), ('older', 'JJR'), ('i', 'NN'), ('think', 'VBP'), ('you', 'PRP'), ('ll', 'VBP'), ('like', 'IN'), ('all', 'DT'), ('kinds', 'NNS'), ('of', 'IN'), ('stuff', 'NN')])
('tags -> ', '     (someday->RB) (when->WRB) (you->PRP) (get->VBP) (a->DT) (little->JJ) (older->JJR) (i->NN) (think->VBP) (you->PRP) (ll->VBP) (like->IN) (all->DT) (kinds->NNS) (of->IN) (stuff->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('feel', 'NN'), ('muscle', 'NN'), ('inside', 'IN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (feel->NN) (muscle->NN) (inside->IN) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('it', 'PRP'), ('held', 'VBD'), ('this', 'DT'), ('one', 'NN')])
('tags -> ', '     (i->NN) (think->VBP) (it->PRP) (held->VBD) (this->DT) (one->NN) ')
('tags initial-> ', [('look', 'VB'), ('how', 'WRB'), ('xxx', 'JJ')])
('tags -> ', '     (look->VB) (how->WRB) (xxx->JJ) ')
('tags initial-> ', [('xxx', 'JJ'), ('www', 'NN'), ('laughs', 'NNS')])
('tags -> ', '     (xxx->JJ) (www->NN) (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('muscles', 'NNS'), ('strong', 'JJ'), ('right', 'RB')])
('tags -> ', '     (my->PRP$) (muscles->NNS) (strong->JJ) (right->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) ')
('tags initial-> ', [('ow', 'NN')])
('tags -> ', '     (ow->NN) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('all', 'DT'), ('my', 'PRP$'), ('muscles', 'NNS'), ('strong', 'JJ')])
('tags -> ', '     (are->VBP) (all->DT) (my->PRP$) (muscles->NNS) (strong->JJ) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('muscles', 'NNS'), ('are', 'VBP'), ('very', 'RB'), ('strong', 'JJ')])
('tags -> ', '     (your->PRP$) (muscles->NNS) (are->VBP) (very->RB) (strong->JJ) ')
('tags initial-> ', [('don', 'JJ'), ('t', 'NN'), ('tell', 'VB'), ('me', 'PRP'), ('they', 'PRP'), ('ll', 'VBP'), ('get', 'VB'), ('little', 'JJ')])
('tags -> ', '     (don->JJ) (t->NN) (tell->VB) (me->PRP) (they->PRP) (ll->VBP) (get->VB) (little->JJ) ')
('tags initial-> ', [('well', 'RB'), ('they', 'PRP'), ('will', 'MD'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN')])
('tags -> ', '     (well->RB) (they->PRP) (will->MD) (if->IN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('get', 'VB'), ('all', 'DT'), ('skinny', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (get->VB) (all->DT) (skinny->NN) (if->IN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) ')
candidates to check:
4
descended from food: [['N'], 'food', 120, 124]
('tags initial-> ', [('and', 'CC'), ('your', 'PRP$'), ('muscles', 'NNS'), ('the', 'DT'), ('only', 'JJ'), ('way', 'NN'), ('they', 'PRP'), ('can', 'MD'), ('develop', 'VB'), ('and', 'CC'), ('get', 'VB'), ('bigger', 'JJR'), ('is', 'VBZ'), ('for', 'IN'), ('you', 'PRP'), ('to', 'TO'), ('give', 'VB'), ('it', 'PRP'), ('give', 'VB'), ('them', 'PRP'), ('some', 'DT'), ('food', 'NN')])
('tags -> ', '     (and->CC) (your->PRP$) (muscles->NNS) (the->DT) (only->JJ) (way->NN) (they->PRP) (can->MD) (develop->VB) (and->CC) (get->VB) (bigger->JJR) (is->VBZ) (for->IN) (you->PRP) (to->TO) (give->VB) (it->PRP) (give->VB) (them->PRP) (some->DT) (food->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('aw', 'NN')])
('tags -> ', '     (aw->NN) ')
('tags initial-> ', [('jeepers', 'NNS')])
('tags -> ', '     (jeepers->NNS) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('you', 'PRP'), ('mean', 'VBP'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (you->PRP) (mean->VBP) (i->NNS) (have->VBP) (to->TO) (eat->VB) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('start', 'VB'), ('shrinking', 'VBG'), ('and', 'CC'), ('your', 'PRP$'), ('teeth', 'NNS'), ('will', 'MD'), ('fall', 'VB'), ('out', 'RP')])
('tags -> ', '     (then->RB) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (start->VB) (shrinking->VBG) (and->CC) (your->PRP$) (teeth->NNS) (will->MD) (fall->VB) (out->RP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('your', 'PRP$'), ('fingernails', 'NNS'), ('will', 'MD'), ('fall', 'VB'), ('out', 'RP'), ('laughs', 'NNS')])
('tags -> ', '     (and->CC) (your->PRP$) (fingernails->NNS) (will->MD) (fall->VB) (out->RP) (laughs->NNS) ')
('tags initial-> ', [('stop', 'VB'), ('it', 'PRP')])
('tags -> ', '     (stop->VB) (it->PRP) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('for', 'IN'), ('a', 'DT'), ('long', 'JJ'), ('long', 'JJ'), ('time', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (if->IN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (for->IN) (a->DT) (long->JJ) (long->JJ) (time->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('well', 'RB'), ('are', 'VBP'), ('you', 'PRP'), ('done', 'VBN')])
('tags -> ', '     (well->RB) (are->VBP) (you->PRP) (done->VBN) ')
('tags initial-> ', [('so', 'RB')])
('tags -> ', '     (so->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('done', 'VBN')])
('tags -> ', '     (are->VBP) (you->PRP) (done->VBN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (m->VBP) (done->VBN) ')
('tags initial-> ', [('let', 'VB'), ('s', 'PRP'), ('clean', 'VB'), ('up', 'RP'), ('now', 'RB'), ('www', 'VBZ'), ('laughs', 'NNS')])
('tags -> ', '     (let->VB) (s->PRP) (clean->VB) (up->RP) (now->RB) (www->VBZ) (laughs->NNS) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('muscles', 'NNS')])
('tags -> ', '     (xxx->NNS) (have->VBP) (to->TO) (get->VB) (muscles->NNS) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('muscles', 'NNS'), ('will', 'MD'), ('get', 'VB'), ('bigger', 'JJR')])
('tags -> ', '     (my->PRP$) (muscles->NNS) (will->MD) (get->VB) (bigger->JJR) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('they', 'PRP'), ('willn', 'VBP'), ('t', 'NNS')])
('tags -> ', '     (they->PRP) (willn->VBP) (t->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('start', 'VB'), ('eating', 'VBG'), ('again', 'RB'), ('pretty', 'RB'), ('soon', 'RB')])
('tags -> ', '     (i->RB) (be->VB) (cause->NN) (i->NN) (know->VBP) (that->IN) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (start->VB) (eating->VBG) (again->RB) (pretty->RB) (soon->RB) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('you', 'PRP'), ('feel', 'VBP'), ('better', 'RB')])
('tags -> ', '     (i->NN) (think->VBP) (you->PRP) (feel->VBP) (better->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('done', 'VBN'), ('with', 'IN'), ('this', 'DT')])
('tags -> ', '     (are->VBP) (you->PRP) (done->VBN) (with->IN) (this->DT) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('another', 'DT'), ('bite', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (another->DT) (bite->NN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('any', 'DT'), ('more', 'JJR')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (any->DT) (more->JJR) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('that', 'DT'), ('delicious', 'JJ'), ('broccoli', 'NN'), ('huh', 'NN')]
['broccoli']
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('that', 'DT'), ('delicious', 'JJ'), ('broccoli', 'NN'), ('huh', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (any->DT) (more->JJR) (of->IN) (that->DT) (delicious->JJ) (broccoli->NN) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (no->DT) (way->NN) ')
('tags initial-> ', [('oh', 'RB'), ('well', 'RB')])
('tags -> ', '     (oh->RB) (well->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'VB'), ('any', 'DT'), ('more', 'JJR'), ('cantaloupe', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->VB) (any->DT) (more->JJR) (cantaloupe->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
5
descended from food: [['N'], 'supper', 36, 42]
('tags initial-> ', [('thanks', 'NNS'), ('mommy', 'VBD'), ('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('great', 'JJ'), ('supper', 'NN')])
('tags -> ', '     (thanks->NNS) (mommy->VBD) (that->DT) (was->VBD) (a->DT) (great->JJ) (supper->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('welcome', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (welcome->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('na', 'TO'), ('write', 'VB'), ('a', 'DT'), ('write', 'NN'), ('a', 'DT'), ('letter', 'NN'), ('to', 'TO'), ('mary', 'VB'), ('now', 'RB')])
('tags -> ', '     (you->PRP) (wan->VBP) (na->TO) (write->VB) (a->DT) (write->NN) (a->DT) (letter->NN) (to->TO) (mary->VB) (now->RB) ')
candidates to check:
2
('tags initial-> ', [('yup', 'NN'), ('today', 'NN'), ('yesterday', 'NN')])
('tags -> ', '     (yup->NN) (today->NN) (yesterday->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('wait', 'VB'), ('a', 'DT'), ('minute', 'NN'), ('wait', 'NN'), ('a', 'DT'), ('minute', 'NN')])
('tags -> ', '     (wait->VB) (a->DT) (minute->NN) (wait->NN) (a->DT) (minute->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('wait', 'VB'), ('for', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (we->PRP) (have->VBP) (to->TO) (we->PRP) (have->VBP) (to->TO) (wait->VB) (for->IN) (xxx->NN) ')
loading solution set
calculating
set([(189, (51, 61)), (2278, (6, 11)), (2339, (27, 45)), (1253, (26, 35)), (2304, (10, 19)), (1868, (43, 51)), (657, (61, 68)), (103, (38, 48)), (231, (6, 11)), (634, (10, 18)), (2048, (17, 25)), (1262, (36, 45)), (324, (36, 44)), (1904, (44, 52)), (2541, (48, 56)), (1887, (26, 34)), (1936, (62, 69)), (1012, (6, 11)), (2347, (13, 27)), (2350, (20, 34)), (221, (16, 24)), (2288, (21, 29)), (958, (41, 51)), (1876, (20, 28)), (565, (32, 40)), (1852, (38, 48)), (2270, (17, 22)), (1536, (40, 45)), (2354, (22, 36)), (845, (25, 35)), (2319, (6, 15)), (1936, (43, 48)), (2556, (29, 39)), (585, (25, 32)), (2285, (17, 29)), (321, (18, 26)), (609, (24, 31)), (1936, (74, 78)), (1209, (39, 49)), (2359, (19, 28)), (2006, (53, 61)), (2326, (19, 28)), (830, (11, 19)), (1528, (29, 39)), (2288, (61, 70)), (973, (31, 36)), (1019, (22, 27)), (968, (17, 27)), (2084, (42, 50)), (289, (17, 22))])
[((103, (38, 48)), "*MOT:\tsave some and don't eat all the cantaloupe .\n"), ((189, (51, 61)), '*MOT:\twell if it hurts that much (.) just eat your cantaloupe .\n'), ((221, (16, 24)), '*MOT:\twant some broccoli ?\n'), ((231, (6, 11)), '*MOT:\tlemon [<] !\n'), ((289, (17, 22)), '*FAT:\twatch your juice [>] .\n'), ((321, (18, 26)), '*FAT:\tthat was my ice cube .\n'), ((324, (36, 44)), '*FAT:\tthat little (.) squeal was my ice cube .\n'), ((565, (32, 40)), '*FAT:\t<here have> [<] some more sandwich .\n'), ((585, (25, 32)), '*MOT:\twanna [<] try some chicken ?\n'), ((609, (24, 31)), '*CHI:\tthat [/] that was chicken .\n'), ((634, (10, 18)), '*FAT:\t+, <sandwich then Chi> [<] .\n'), ((657, (61, 68)), '*MOT:\tthat was a couple o(f) weeks [!] ago that you ate that chicken .\n'), ((830, (11, 19)), '*FAT:\tgood sandwich though huh ?\n'), ((845, (25, 35)), "*FAT:\tdon't you want any cantaloupe ?\n"), ((958, (41, 51)), "*MOT:\tdon't you even want your delicious cantaloupe ?\n"), ((968, (17, 27)), '*MOT:\tnice juicy cantaloupe ?\n'), ((973, (31, 36)), "*MOT:\twhy don't you drink your juice at least ?\n"), ((1012, (6, 11)), '*CHI:\twater [!] ?\n'), ((1019, (22, 27)), "*MOT:\tthat's not even water is it ?\n"), ((1209, (39, 49)), "*MOT:\tmaybe it'll eat the rest of your cantaloupe .\n"), ((1253, (26, 35)), '*MOT:\thad a hankering for egg salad did you &=laughs ?\n'), ((1262, (36, 45)), "*FAT:\t<it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .\n"), ((1528, (29, 39)), '*MOT:\tare you gonna eat your cantaloupe ?\n'), ((1536, (40, 45)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1852, (38, 48)), '*FAT:\there you want some more of this cantaloupe Chi ?\n'), ((1868, (43, 51)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1876, (20, 28)), '*MOT:\tyou want more broccoli ?\n'), ((1887, (26, 34)), "*MOT:\tI'll bring you some broccoli .\n"), ((1904, (44, 52)), '*MOT:\tChi wants to try a little (.) tree of broccoli .\n'), ((1936, (43, 48)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (62, 69)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (74, 78)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((2006, (53, 61)), "*FAT:\tgo on in there I'll bring you a piece of it [= broccoli] .\n"), ((2048, (17, 25)), '*FAT:\ta piece of broccoli .\n'), ((2084, (42, 50)), "*MOT:\twhy don't you sit down and try that broccoli now ?\n"), ((2270, (17, 22)), '*MOT:\tit has got candy inside .\n'), ((2278, (6, 11)), '*CHI:\tcandy inside ?\n'), ((2285, (17, 29)), '*FAT:\tyeah chewy Tootsie Roll .\n'), ((2288, (21, 29)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2288, (61, 70)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2304, (10, 19)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2319, (6, 15)), '*FAT:\tchocolate gives him a tummy+ache ?\n'), ((2326, (19, 28)), "*CHI:\tI don't like chocolate xxx [>] .\n"), ((2339, (27, 45)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2347, (13, 27)), '*CHI:\tI like chocolate cake .\n'), ((2350, (20, 34)), '*MOT:\tyou only want chocolate cake ?\n'), ((2354, (22, 36)), '*MOT:\twell it has got chocolate cake sprinkled inside it .\n'), ((2359, (19, 28)), "*CHI:\tI don't like chocolate [?] .\n"), ((2541, (48, 56)), "*FAT:\tyou don't want any more of that delicious broccoli huh ?\n"), ((2556, (29, 39)), "*MOT:\tyou [<] don't any more cantaloupe ?\n")]
set([(2347, (13, 27)), (528, (30, 34)), (1289, (31, 40)), (643, (21, 25)), (2429, (120, 124)), (369, (21, 25)), (802, (41, 45)), (2304, (10, 19)), (1868, (43, 51)), (2252, (17, 23)), (1238, (30, 36)), (657, (61, 68)), (1536, (25, 28)), (231, (6, 11)), (1536, (12, 15)), (2278, (6, 11)), (634, (10, 18)), (181, (19, 23)), (1400, (14, 19)), (2048, (17, 25)), (2006, (53, 61)), (2339, (37, 45)), (1397, (46, 51)), (1536, (40, 45)), (2354, (22, 36)), (1887, (26, 34)), (1936, (62, 69)), (1862, (6, 12)), (1262, (72, 82)), (541, (18, 22)), (534, (38, 42)), (1925, (73, 77)), (2350, (20, 34)), (435, (-1, 3)), (369, (-1, 3)), (528, (-1, 3)), (2270, (17, 22)), (1293, (31, 36)), (541, (-1, 3)), (565, (32, 40)), (767, (74, 78)), (2326, (19, 28)), (1012, (6, 11)), (868, (141, 145)), (1296, (29, 35)), (2319, (6, 15)), (1936, (43, 48)), (534, (-1, 3)), (1503, (63, 67)), (585, (25, 32)), (1876, (20, 28)), (1862, (13, 17)), (2541, (48, 56)), (609, (24, 31)), (1253, (30, 35)), (221, (16, 24)), (2359, (19, 28)), (2288, (21, 30)), (2566, (36, 42)), (1253, (26, 29)), (1904, (44, 52)), (64, (22, 28)), (435, (20, 24)), (1725, (43, 52)), (2084, (42, 50)), (2339, (27, 36)), (830, (11, 19)), (1518, (58, 62)), (2288, (61, 70)), (973, (31, 36)), (1019, (22, 27)), (159, (11, 17)), (1936, (74, 78)), (1262, (36, 39)), (1447, (97, 103)), (289, (17, 22))])
[((64, (22, 28)), "*MOT:\t(..) how's your supper ?\n"), ((159, (11, 17)), '*FAT:\tgood supper huh ?\n'), ((181, (19, 23)), '*FAT:\tchew up your food really good (.) okay ?\n'), ((221, (16, 24)), '*MOT:\twant some broccoli ?\n'), ((231, (6, 11)), '*MOT:\tlemon [<] !\n'), ((289, (17, 22)), '*FAT:\twatch your juice [>] .\n'), ((369, (-1, 3)), "*MOT:\tdidn't we play Fish ?\n"), ((369, (21, 25)), "*MOT:\tdidn't we play Fish ?\n"), ((435, (-1, 3)), '*CHI:\tand we played Fish .\n'), ((435, (20, 24)), '*CHI:\tand we played Fish .\n'), ((528, (-1, 3)), '*CHI:\t<we did> [//] we played Fish !\n'), ((528, (30, 34)), '*CHI:\t<we did> [//] we played Fish !\n'), ((534, (-1, 3)), '*CHI:\t<and we> [>] (.) played another Fish right ?\n'), ((534, (38, 42)), '*CHI:\t<and we> [>] (.) played another Fish right ?\n'), ((541, (-1, 3)), '*MOT:\tdid we play Fish twice ?\n'), ((541, (18, 22)), '*MOT:\tdid we play Fish twice ?\n'), ((565, (32, 40)), '*FAT:\t<here have> [<] some more sandwich .\n'), ((585, (25, 32)), '*MOT:\twanna [<] try some chicken ?\n'), ((609, (24, 31)), '*CHI:\tthat [/] that was chicken .\n'), ((634, (10, 18)), '*FAT:\t+, <sandwich then Chi> [<] .\n'), ((643, (21, 25)), '*FAT:\thave some more food you [/] you might +//.\n'), ((657, (61, 68)), '*MOT:\tthat was a couple o(f) weeks [!] ago that you ate that chicken .\n'), ((767, (74, 78)), "*MOT:\t<it's really [!]> [<] hard to understand you (.) when you talk with food in your mouth though okay ?\n"), ((802, (41, 45)), "*FAT:\t<it'll cool &o> [/] it'll cool our meal off too quickly [>] .\n"), ((830, (11, 19)), '*FAT:\tgood sandwich though huh ?\n'), ((868, (141, 145)), "*FAT:\t<(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .\n"), ((973, (31, 36)), "*MOT:\twhy don't you drink your juice at least ?\n"), ((1012, (6, 11)), '*CHI:\twater [!] ?\n'), ((1019, (22, 27)), "*MOT:\tthat's not even water is it ?\n"), ((1238, (30, 36)), '*CHI:\tyou can help me with my supper .\n'), ((1253, (26, 29)), '*MOT:\thad a hankering for egg salad did you &=laughs ?\n'), ((1253, (30, 35)), '*MOT:\thad a hankering for egg salad did you &=laughs ?\n'), ((1262, (36, 39)), "*FAT:\t<it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .\n"), ((1262, (72, 82)), "*FAT:\t<it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .\n"), ((1289, (31, 40)), '*MOT:\thad about three bites of breakfast .\n'), ((1293, (31, 36)), '*MOT:\thad about two bites o(f) lunch .\n'), ((1296, (29, 35)), '*MOT:\tand <two bites> [>] of supper .\n'), ((1397, (46, 51)), '*CHI:\t<<and someone> [/] and> [<] someone can shake his hand .\n'), ((1400, (14, 19)), '*CHI:\tyou can shake his hand .\n'), ((1447, (97, 103)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1503, (63, 67)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1518, (58, 62)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1536, (12, 15)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1536, (25, 28)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1536, (40, 45)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1725, (43, 52)), '*MOT:\tand we pretended that we were having breakfast in the cafeteria at school [!] huh ?\n'), ((1862, (6, 12)), '*MOT:\torange food is almost as good as green food to eat .\n'), ((1862, (13, 17)), '*MOT:\torange food is almost as good as green food to eat .\n'), ((1868, (43, 51)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1876, (20, 28)), '*MOT:\tyou want more broccoli ?\n'), ((1887, (26, 34)), "*MOT:\tI'll bring you some broccoli .\n"), ((1904, (44, 52)), '*MOT:\tChi wants to try a little (.) tree of broccoli .\n'), ((1925, (73, 77)), '*MOT:\t<(be)cause at> [<] school they told me that you always [!] try new food .\n'), ((1936, (43, 48)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (62, 69)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (74, 78)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((2006, (53, 61)), "*FAT:\tgo on in there I'll bring you a piece of it [= broccoli] .\n"), ((2048, (17, 25)), '*FAT:\ta piece of broccoli .\n'), ((2084, (42, 50)), "*MOT:\twhy don't you sit down and try that broccoli now ?\n"), ((2252, (17, 23)), '*MOT:\tnot at the dinner table .\n'), ((2270, (17, 22)), '*MOT:\tit has got candy inside .\n'), ((2278, (6, 11)), '*CHI:\tcandy inside ?\n'), ((2288, (21, 30)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2288, (61, 70)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2304, (10, 19)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2319, (6, 15)), '*FAT:\tchocolate gives him a tummy+ache ?\n'), ((2326, (19, 28)), "*CHI:\tI don't like chocolate xxx [>] .\n"), ((2339, (27, 36)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2339, (37, 45)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2347, (13, 27)), '*CHI:\tI like chocolate cake .\n'), ((2350, (20, 34)), '*MOT:\tyou only want chocolate cake ?\n'), ((2354, (22, 36)), '*MOT:\twell it has got chocolate cake sprinkled inside it .\n'), ((2359, (19, 28)), "*CHI:\tI don't like chocolate [?] .\n"), ((2429, (120, 124)), '*MOT:\tand your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .\n'), ((2541, (48, 56)), "*FAT:\tyou don't want any more of that delicious broccoli huh ?\n"), ((2566, (36, 42)), '*FAT:\tthanks Mommy that was a great supper !\n')]
calculating accuracy and recall
correct labels:
set(['cantaloupe', 'sandwich', 'lemon', 'salad', 'tootsie roll', 'carrots', 'egg salad', 'candy', 'peas', 'water', 'juice', 'lollipop', 'chocolate broccoli', 'ice cube', 'chocolate cake', 'chicken', 'chocolate', 'broccoli'])
predicted labels:
set(['', 'fish', 'carrots', 'juice', 'shake', 'breakfast', 'chicken', 'lemon', 'sandwiches', 'orange', 'sandwich', 'lollipops', 'food', 'peas', 'chocolate', 'water', 'lunch', 'supper', 'chocolate cake', 'broccoli', 'salad', 'egg', 'candy', 'dinner', 'dip', 'meal'])
file:HSLLD/HV1/MT//davmt1.cha
precision: 0.461538461538
recall: 0.666666666667
true positives:['broccoli', 'candy', 'carrots', 'chicken', 'chocolate', 'chocolate cake', 'juice', 'lemon', 'peas', 'salad', 'sandwich', 'water']
false positives: ['', 'breakfast', 'dinner', 'dip', 'egg', 'fish', 'food', 'lollipops', 'lunch', 'meal', 'orange', 'sandwiches', 'shake', 'supper']
false negatives: ['cantaloupe', 'chocolate broccoli', 'egg salad', 'ice cube', 'lollipop', 'tootsie roll']
# true pos: 12
# false pos: 14
# false neg: 6
HSLLD/HV1/MT//raumt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//raumt1.cha
HSLLD/HV1/MT//catmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//catmt1.cha
HSLLD/HV1/MT//admmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('adam', 'NN')])
('tags -> ', '     (adam->NN) ')
candidates to check:
3
('tags initial-> ', [('sit', 'NN'), ('on', 'IN'), ('the', 'DT'), ('end', 'NN'), ('stool', 'NN')])
('tags -> ', '     (sit->NN) (on->IN) (the->DT) (end->NN) (stool->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('alright', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('enough', 'JJ'), ('adam', 'NN')])
('tags -> ', '     (alright->NN) (that->WDT) (s->VBZ) (enough->JJ) (adam->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('yours', 'NNS'), ('is', 'VBZ'), ('over', 'IN'), ('there', 'RB'), ('in', 'IN'), ('the', 'DT'), ('big', 'JJ'), ('bowl', 'NN')])
('tags -> ', '     (yours->NNS) (is->VBZ) (over->IN) (there->RB) (in->IN) (the->DT) (big->JJ) (bowl->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('na', 'JJ'), ('sit', 'NN'), ('here', 'RB')])
('tags -> ', '     (you->PRP) (wan->VBP) (na->JJ) (sit->NN) (here->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('mine', 'JJ')])
('tags -> ', '     (this->DT) (is->VBZ) (mine->JJ) ')
('tags initial-> ', [('oh', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('eat', 'VB'), ('kim', 'VB')])
('tags -> ', '     (oh->IN) (we->PRP) (can->MD) (eat->VB) (kim->VB) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('not', 'RB'), ('eating', 'VBG')])
('tags -> ', '     (she->PRP) (s->VBD) (not->RB) (eating->VBG) ')
('tags initial-> ', [('adam', 'NN'), ('there', 'EX'), ('s', 'VBZ'), ('more', 'JJR'), ('in', 'IN'), ('that', 'DT'), ('one', 'CD'), ('over', 'IN'), ('there', 'EX')])
('tags -> ', '     (adam->NN) (there->EX) (s->VBZ) (more->JJR) (in->IN) (that->DT) (one->CD) (over->IN) (there->EX) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('why', 'WRB'), ('i', 'NN'), ('gave', 'VBD'), ('it', 'PRP'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (that->DT) (s->VBD) (why->WRB) (i->NN) (gave->VBD) (it->PRP) (to->TO) (you->PRP) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('there', 'EX'), ('s', 'VBZ'), ('more', 'JJR'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (be->VB) (cause->NN) (there->EX) (s->VBZ) (more->JJR) (in->IN) (it->PRP) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('mine', 'JJ')])
('tags -> ', '     (this->DT) (is->VBZ) (mine->JJ) ')
('tags initial-> ', [('okay', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('have', 'VB'), ('that', 'DT'), ('one', 'CD')])
('tags -> ', '     (okay->IN) (you->PRP) (can->MD) (have->VB) (that->DT) (one->CD) ')
candidates to check:
6
descended from food: [['N'], 'peas', 34, 38]
peas
peas peas 116
[('kim', 'NNS'), ('got', 'VBD'), ('lots', 'NNS'), ('of', 'IN'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('xxx', 'NN')]
['peas']
carrots
carrots carrots 35
[('kim', 'NNS'), ('got', 'VBD'), ('lots', 'NNS'), ('of', 'IN'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('xxx', 'NN')]
['carrots']
('tags initial-> ', [('kim', 'NNS'), ('got', 'VBD'), ('lots', 'NNS'), ('of', 'IN'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (kim->NNS) (got->VBD) (lots->NNS) (of->IN) (carrots->NNS) (and->CC) (peas->NNS) (in->IN) (the->DT) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('0', 'CD'), ('hums', 'NNS'), ('with', 'IN'), ('his', 'PRP$'), ('mouth', 'NN'), ('full', 'JJ')])
('tags -> ', '     (0->CD) (hums->NNS) (with->IN) (his->PRP$) (mouth->NN) (full->JJ) ')
('tags initial-> ', [('and', 'CC'), ('i', 'JJ'), ('think', 'VBP'), ('adam', 'JJ'), ('gon', 'NN'), ('na', 'TO'), ('eat', 'VB'), ('them', 'PRP')])
('tags -> ', '     (and->CC) (i->JJ) (think->VBP) (adam->JJ) (gon->NN) (na->TO) (eat->VB) (them->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('eat', 'VB'), ('them', 'PRP'), ('all', 'DT'), ('up', 'RP')])
('tags -> ', '     (xxx->NN) (you->PRP) (gon->VBP) (na->TO) (eat->VB) (them->PRP) (all->DT) (up->RP) ')
('tags initial-> ', [('uhoh', 'NN')])
('tags -> ', '     (uhoh->NN) ')
candidates to check:
1
('tags initial-> ', [('0', 'CD'), ('humming', 'VBG'), ('with', 'IN'), ('mouth', 'NN'), ('full', 'JJ')])
('tags -> ', '     (0->CD) (humming->VBG) (with->IN) (mouth->NN) (full->JJ) ')
('tags initial-> ', [('here', 'RB'), ('she', 'PRP'), ('comes', 'VBZ')])
('tags -> ', '     (here->RB) (she->PRP) (comes->VBZ) ')
candidates to check:
3
beef stew
beef stew beef stew 99
[('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')]
['beef', 'stew']
stew
stew stew 32
[('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')]
['stew']
beef
beef beef 310
[('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')]
['beef']
('tags initial-> ', [('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')])
('tags -> ', '     (adam->RB) (s->VBZ) (not->RB) (gon->VB) (na->TO) (eat->VB) (her->PRP$) (beef->NN) (stew->NN) ')
candidates to check:
1
carrots
carrots carrots 35
[('see', 'VB'), ('the', 'DT'), ('carrots', 'NNS'), ('in', 'IN'), ('there', 'EX')]
['carrots']
('tags initial-> ', [('see', 'VB'), ('the', 'DT'), ('carrots', 'NNS'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (see->VB) (the->DT) (carrots->NNS) (in->IN) (there->EX) ')
('tags initial-> ', [('see', 'VB'), ('this', 'DT')])
('tags -> ', '     (see->VB) (this->DT) ')
('tags initial-> ', [('here', 'RB'), ('let', 'VB'), ('s', 'PRP'), ('get', 'VB'), ('xxx', 'JJ')])
('tags -> ', '     (here->RB) (let->VB) (s->PRP) (get->VB) (xxx->JJ) ')
candidates to check:
3
carrots
carrots carrots 35
[('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('xxx', 'JJ'), ('carrots', 'NNS')]
['carrots']
('tags initial-> ', [('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('xxx', 'JJ'), ('carrots', 'NNS')])
('tags -> ', '     (i->NN) (have->VBP) (my->PRP$) (xxx->JJ) (carrots->NNS) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('adam', 'JJ'), ('eating', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (we->PRP) (don->VBP) (t->JJ) (want->VBP) (adam->JJ) (eating->NN) (xxx->NN) ')
candidates to check:
1
carrots
carrots carrots 35
[('see', 'VB'), ('if', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('find', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('the', 'DT'), ('carrots', 'NNS'), ('in', 'IN'), ('here', 'RB')]
['carrots']
('tags initial-> ', [('see', 'VB'), ('if', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('find', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('the', 'DT'), ('carrots', 'NNS'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (see->VB) (if->IN) (we->PRP) (can->MD) (find->VB) (some->DT) (more->JJR) (of->IN) (the->DT) (carrots->NNS) (in->IN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('0', 'CD'), ('mummbling', 'VBG'), ('with', 'IN'), ('mouth', 'NN'), ('full', 'JJ')])
('tags -> ', '     (0->CD) (mummbling->VBG) (with->IN) (mouth->NN) (full->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('good', 'JJ'), ('adam', 'NNS')])
('tags -> ', '     (you->PRP) (good->JJ) (adam->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
carrots
carrots carrots 35
[('here', 'RB'), ('you', 'PRP'), ('go', 'VBP'), ('here', 'RB'), ('s', 'RB'), ('some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('carrots', 'NNS'), ('right', 'RB'), ('on', 'IN'), ('top', 'JJ')]
['carrots']
('tags initial-> ', [('here', 'RB'), ('you', 'PRP'), ('go', 'VBP'), ('here', 'RB'), ('s', 'RB'), ('some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('carrots', 'NNS'), ('right', 'RB'), ('on', 'IN'), ('top', 'JJ')])
('tags -> ', '     (here->RB) (you->PRP) (go->VBP) (here->RB) (s->RB) (some->DT) (of->IN) (the->DT) (carrots->NNS) (right->RB) (on->IN) (top->JJ) ')
('tags initial-> ', [('here', 'RB'), ('s', 'VBP'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB')])
('tags -> ', '     (here->RB) (s->VBP) (one->CD) (right->NN) (here->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'VB'), ('away', 'RP')])
('tags -> ', '     (xxx->VB) (away->RP) ')
candidates to check:
1
('tags initial-> ', [('go', 'VB'), ('away', 'RP'), ('daddy', 'NN')])
('tags -> ', '     (go->VB) (away->RP) (daddy->NN) ')
('tags initial-> ', [('adam', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('not', 'RB'), ('nice', 'JJ')])
('tags -> ', '     (adam->NN) (that->WDT) (s->VBZ) (not->RB) (nice->JJ) ')
candidates to check:
1
('tags initial-> ', [('hums', 'NNS')])
('tags -> ', '     (hums->NNS) ')
candidates to check:
1
carrot
carrot carrot 341
[('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('carrot', 'NN'), ('haha', 'NN'), ('x', 'VBD'), ('2', 'CD'), ('singing', 'NN')]
['carrot']
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('carrot', 'NN'), ('haha', 'NN'), ('x', 'VBD'), ('2', 'CD'), ('singing', 'NN')])
('tags -> ', '     (i->NNS) (have->VBP) (a->DT) (carrot->NN) (haha->NN) (x->VBD) (2->CD) (singing->NN) ')
('tags initial-> ', [('is', 'VBZ'), ('this', 'DT'), ('a', 'DT'), ('good', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (is->VBZ) (this->DT) (a->DT) (good->JJ) (xxx->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
4
('tags initial-> ', [('in', 'IN'), ('two', 'CD'), ('more', 'JJR'), ('days', 'NNS'), ('in', 'IN'), ('two', 'CD'), ('more', 'JJR'), ('days', 'NNS'), ('you', 'PRP'), ('ll', 'VBP'), ('be', 'VB'), ('going', 'VBG'), ('away', 'RB'), ('and', 'CC'), ('then', 'RB'), ('you', 'PRP'), ('won', 'VBD'), ('t', 'NNS'), ('see', 'VB'), ('me', 'PRP')])
('tags -> ', '     (in->IN) (two->CD) (more->JJR) (days->NNS) (in->IN) (two->CD) (more->JJR) (days->NNS) (you->PRP) (ll->VBP) (be->VB) (going->VBG) (away->RB) (and->CC) (then->RB) (you->PRP) (won->VBD) (t->NNS) (see->VB) (me->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('see', 'VB'), ('grandma', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (you->PRP) (re->VBP) (going->VBG) (to->TO) (see->VB) (grandma->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('babbles', 'NNS')])
('tags -> ', '     (babbles->NNS) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('won', 'VBD'), ('t', 'NNS'), ('see', 'VB'), ('me', 'PRP'), ('in', 'IN'), ('two', 'CD'), ('more', 'JJR'), ('days', 'NNS'), ('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('ll', 'NN'), ('be', 'VB'), ('here', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('ll', 'VBP'), ('be', 'VB'), ('down', 'VBN'), ('at', 'IN'), ('grandma', 'JJ'), ('s', 'NN'), ('house', 'NN')])
('tags -> ', '     (you->PRP) (won->VBD) (t->NNS) (see->VB) (me->PRP) (in->IN) (two->CD) (more->JJR) (days->NNS) (be->VB) (cause->NN) (i->JJ) (ll->NN) (be->VB) (here->RB) (and->CC) (you->PRP) (ll->VBP) (be->VB) (down->VBN) (at->IN) (grandma->JJ) (s->NN) (house->NN) ')
candidates to check:
1
('tags initial-> ', [('won', 'VBD'), ('t', 'NN'), ('you', 'PRP'), ('miss', 'VBP'), ('your', 'PRP$'), ('dad', 'NN')])
('tags -> ', '     (won->VBD) (t->NN) (you->PRP) (miss->VBP) (your->PRP$) (dad->NN) ')
candidates to check:
3
descended from food: [['N'], 'butter', 25, 31]
descended from food: [['N'], 'bread', 32, 37]
bread
bread bread 186
[('adam', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('butter', 'NN'), ('bread', 'NN')]
['bread']
butter
butter butter 499
[('adam', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('butter', 'NN'), ('bread', 'NN')]
['butter']
('tags initial-> ', [('adam', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('butter', 'NN'), ('bread', 'NN')])
('tags -> ', '     (adam->IN) (you->PRP) (want->VBP) (some->DT) (butter->NN) (bread->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('thanks', 'NNS'), ('xxx', 'VBP')])
('tags -> ', '     (thanks->NNS) (xxx->VBP) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('playing', 'VBG'), ('those', 'DT'), ('words', 'NNS'), ('yesterday', 'NN'), ('with', 'IN'), ('cindy', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (playing->VBG) (those->DT) (words->NNS) (yesterday->NN) (with->IN) (cindy->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
2
('tags initial-> ', [('say', 'VB'), ('sled', 'VBD')])
('tags -> ', '     (say->VB) (sled->VBD) ')
candidates to check:
1
('tags initial-> ', [('sled', 'VBN')])
('tags -> ', '     (sled->VBN) ')
('tags initial-> ', [('say', 'VB'), ('right', 'NN')])
('tags -> ', '     (say->VB) (right->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
candidates to check:
2
('tags initial-> ', [('say', 'VB'), ('witch', 'NN')])
('tags -> ', '     (say->VB) (witch->NN) ')
candidates to check:
1
('tags initial-> ', [('witch', 'NN')])
('tags -> ', '     (witch->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN'), ('xxx', 'NN'), ('sit', 'VBP'), ('down', 'RP')])
('tags -> ', '     (mom->NN) (xxx->NN) (sit->VBP) (down->RP) ')
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('sit', 'VBP'), ('down', 'RP'), ('in', 'IN'), ('here', 'RB'), ('until', 'IN'), ('everyone', 'NN'), ('s', 'NN'), ('finished', 'VBD'), ('eating', 'VBG')])
('tags -> ', '     (well->RB) (you->PRP) (sit->VBP) (down->RP) (in->IN) (here->RB) (until->IN) (everyone->NN) (s->NN) (finished->VBD) (eating->VBG) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('na', 'TO'), ('sit', 'VB'), ('down', 'RP'), ('on', 'IN'), ('the', 'DT'), ('porch', 'NN'), ('whining', 'NN')])
('tags -> ', '     (i->NN) (wan->VBP) (na->TO) (sit->VB) (down->RP) (on->IN) (the->DT) (porch->NN) (whining->NN) ')
candidates to check:
4
('tags initial-> ', [('how', 'WRB'), ('was', 'VBD'), ('your', 'PRP$'), ('party', 'NN'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (how->WRB) (was->VBD) (your->PRP$) (party->NN) (in->IN) (school->NN) (today->NN) ')
candidates to check:
2
descended from food: [['N'], 'honey', 38, 43]
honey
honey honey 304
[('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('kids', 'NNS'), ('out', 'RP'), ('there', 'RB'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('kids', 'NNS'), ('out', 'RP'), ('there', 'RB'), ('honey', 'NN')])
('tags -> ', '     (there->EX) (s->VBZ) (no->DT) (kids->NNS) (out->RP) (there->RB) (honey->NN) ')
('tags initial-> ', [('adam', 'NN')])
('tags -> ', '     (adam->NN) ')
('tags initial-> ', [('0', 'CD'), ('crying', 'NN'), ('and', 'CC'), ('whining', 'NN')])
('tags -> ', '     (0->CD) (crying->NN) (and->CC) (whining->NN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('your', 'PRP$'), ('party', 'NN'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (your->PRP$) (party->NN) (in->IN) (school->NN) ')
candidates to check:
2
('tags initial-> ', [('kim', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('party', 'NN'), ('at', 'IN'), ('adam', 'JJ'), ('s', 'JJ'), ('school', 'NN')])
('tags -> ', '     (kim->NN) (did->VBD) (you->PRP) (go->VB) (to->TO) (the->DT) (party->NN) (at->IN) (adam->JJ) (s->JJ) (school->NN) ')
('tags initial-> ', [('kim', 'NN')])
('tags -> ', '     (kim->NN) ')
candidates to check:
2
salt
salt salt 0
[('let', 'VB'), ('me', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN')]
['salt']
pepper
pepper pepper 27
[('let', 'VB'), ('me', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN')]
['pepper']
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN')])
('tags -> ', '     (let->VB) (me->PRP) (see->VB) (the->DT) (salt->NN) (and->CC) (pepper->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('go', 'VB'), ('back', 'RB'), ('out', 'IN'), ('xxx', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('na', 'RB'), ('go', 'VBP'), ('to', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (can->MD) (i->VB) (go->VB) (back->RB) (out->IN) (xxx->NN) (i->NN) (wan->VBP) (na->RB) (go->VBP) (to->TO) (xxx->VB) ')
candidates to check:
2
descended from food: [['N'], 'butter', 30, 36]
descended from food: [['N'], 'bread', 41, 46]
bread
bread bread 186
[('sure', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('butter', 'NN'), ('and', 'CC'), ('bread', 'NN'), ('adam', 'NN')]
['bread']
butter
butter butter 499
[('sure', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('butter', 'NN'), ('and', 'CC'), ('bread', 'NN'), ('adam', 'NN')]
['butter']
('tags initial-> ', [('sure', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('butter', 'NN'), ('and', 'CC'), ('bread', 'NN'), ('adam', 'NN')])
('tags -> ', '     (sure->RB) (you->PRP) (don->VBP) (t->JJ) (want->VBP) (any->DT) (butter->NN) (and->CC) (bread->NN) (adam->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (xxx->NN) (yeah->NN) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (no->DT) (no->DT) (no->DT) (xxx->NN) ')
('tags initial-> ', [('0', 'CD'), ('mumbling', 'VBG'), ('sounds', 'NNS')])
('tags -> ', '     (0->CD) (mumbling->VBG) (sounds->NNS) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('stay', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('house', 'NN')])
('tags -> ', '     (you->PRP) (stay->VBP) (in->IN) (the->DT) (house->NN) ')
('tags initial-> ', [('you', 'PRP'), ('stay', 'VBP'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (you->PRP) (stay->VBP) (in->IN) (here->RB) ')
('tags initial-> ', [('whines', 'NNS')])
('tags -> ', '     (whines->NNS) ')
candidates to check:
4
descended from food: [['N'], 'butter', 15, 21]
descended from food: [['N'], 'bread', 22, 27]
bread
bread bread 186
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'JJR'), ('bread', 'NN')]
['bread']
butter
butter butter 499
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'JJR'), ('bread', 'NN')]
['butter']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('butter', 'JJR'), ('bread', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (butter->JJR) (bread->NN) ')
candidates to check:
2
descended from food: [['N'], 'bread', 20, 25]
descended from food: [['N'], 'butter', 30, 36]
bread
bread bread 186
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['bread']
butter
butter butter 499
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (some->DT) (bread->NN) (and->CC) (butter->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('whines', 'NNS')])
('tags -> ', '     (yeah->NN) (whines->NNS) ')
candidates to check:
3
descended from food: [['N'], 'bread', 50, 55]
descended from food: [['N'], 'butter', 60, 66]
bread
bread bread 186
[('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['bread']
carrots
carrots carrots 35
[('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['carrots']
butter
butter butter 499
[('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')])
('tags -> ', '     (eat->VB) (some->DT) (carrots->NNS) (on->IN) (there->EX) (i->JJ) (ll->VBP) (give->VB) (you->PRP) (the->DT) (bread->NN) (and->CC) (butter->NN) ')
('tags initial-> ', [('mumbling', 'VBG')])
('tags -> ', '     (mumbling->VBG) ')
candidates to check:
1
('tags initial-> ', [('0', 'CD'), ('mumbles', 'NNS'), ('and', 'CC'), ('hums', 'NNS')])
('tags -> ', '     (0->CD) (mumbles->NNS) (and->CC) (hums->NNS) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
descended from food: [['N'], 'bread', 19, 24]
descended from food: [['N'], 'butter', 29, 35]
bread
bread bread 186
[('there', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN'), ('right', 'RB'), ('there', 'RB')]
['bread']
butter
butter butter 499
[('there', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN'), ('right', 'RB'), ('there', 'RB')]
['butter']
('tags initial-> ', [('there', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN'), ('right', 'RB'), ('there', 'RB')])
('tags -> ', '     (there->RB) (s->VB) (your->PRP$) (bread->NN) (and->CC) (butter->NN) (right->RB) (there->RB) ')
('tags initial-> ', [('0', 'CD'), ('mumbling', 'NN'), ('and', 'CC'), ('singing', 'NN')])
('tags -> ', '     (0->CD) (mumbling->NN) (and->CC) (singing->NN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('party', 'NN'), ('at', 'IN'), ('adam', 'JJ'), ('s', 'JJ'), ('school', 'NN'), ('kim', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (the->DT) (party->NN) (at->IN) (adam->JJ) (s->JJ) (school->NN) (kim->NN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('fun', 'VBN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VBP) (fun->VBN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('tell', 'VB'), ('dad', 'IN'), ('that', 'DT'), ('i', 'NN'), ('got', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('outside', 'JJ'), ('and', 'CC'), ('play', 'VB'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (tell->VB) (dad->IN) (that->DT) (i->NN) (got->VBD) (to->TO) (go->VB) (outside->JJ) (and->CC) (play->VB) (with->IN) (you->PRP) ')
candidates to check:
3
('tags initial-> ', [('in', 'IN'), ('your', 'PRP$'), ('play', 'NN'), ('area', 'NN')])
('tags -> ', '     (in->IN) (your->PRP$) (play->NN) (area->NN) ')
candidates to check:
2
('tags initial-> ', [('daddy', 'VB'), ('went', 'VBD'), ('out', 'RP'), ('mommy', 'JJ'), ('went', 'VBD'), ('outside', 'JJ'), ('and', 'CC'), ('played', 'VBD'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (daddy->VB) (went->VBD) (out->RP) (mommy->JJ) (went->VBD) (outside->JJ) (and->CC) (played->VBD) (with->IN) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('school', 'NN')])
('tags -> ', '     (at->IN) (school->NN) ')
('tags initial-> ', [('tell', 'VB'), ('him', 'PRP'), ('what', 'WP'), ('tell', 'VBP'), ('him', 'PRP'), ('what', 'WP'), ('we', 'PRP'), ('played', 'VBD')])
('tags -> ', '     (tell->VB) (him->PRP) (what->WP) (tell->VBP) (him->PRP) (what->WP) (we->PRP) (played->VBD) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('played', 'VBD'), ('bikes', 'NNS')])
('tags -> ', '     (i->JJ) (played->VBD) (bikes->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('ride', 'VBP'), ('the', 'DT'), ('bikes', 'NNS')])
('tags -> ', '     (no->DT) (we->PRP) (didn->VBP) (t->JJ) (ride->VBP) (the->DT) (bikes->NNS) ')
('tags initial-> ', [('jeanine', 'NN'), ('said', 'VBD'), ('no', 'DT')])
('tags -> ', '     (jeanine->NN) (said->VBD) (no->DT) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('we', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (we->PRP) (do->VB) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('played', 'VBD'), ('balloon', 'NN')])
('tags -> ', '     (i->JJ) (played->VBD) (balloon->NN) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('hit', 'VBD'), ('the', 'DT'), ('balloon', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('tried', 'VBD'), ('not', 'RB'), ('to', 'TO'), ('let', 'VB'), ('it', 'PRP'), ('hit', 'VB'), ('the', 'DT'), ('ground', 'NN')])
('tags -> ', '     (we->PRP) (hit->VBD) (the->DT) (balloon->NN) (and->CC) (we->PRP) (tried->VBD) (not->RB) (to->TO) (let->VB) (it->PRP) (hit->VB) (the->DT) (ground->NN) ')
('tags initial-> ', [('and', 'CC'), ('two', 'CD'), ('of', 'IN'), ('them', 'PRP'), ('flew', 'VBD'), ('away', 'RB')])
('tags -> ', '     (and->CC) (two->CD) (of->IN) (them->PRP) (flew->VBD) (away->RB) ')
('tags initial-> ', [('i', 'NN'), ('did', 'VBD'), ('too', 'RB')])
('tags -> ', '     (i->NN) (did->VBD) (too->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('yum', 'NN')])
('tags -> ', '     (yum->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('play', 'VB'), ('too', 'RB'), ('kim', 'JJ'), ('played', 'NNS'), ('also', 'RB')])
('tags -> ', '     (did->VBD) (you->PRP) (play->VB) (too->RB) (kim->JJ) (played->NNS) (also->RB) ')
candidates to check:
6
('tags initial-> ', [('bunny', 'NN'), ('bunny', 'NN'), ('bunny', 'NN')])
('tags -> ', '     (bunny->NN) (bunny->NN) (bunny->NN) ')
candidates to check:
2
('tags initial-> ', [('kim', 'NN'), ('hit', 'VBD'), ('the', 'DT'), ('balloon', 'NN'), ('and', 'CC'), ('it', 'PRP'), ('went', 'VBD'), ('up', 'RB'), ('in', 'IN'), ('the', 'DT'), ('air', 'NN'), ('huh', 'NN')])
('tags -> ', '     (kim->NN) (hit->VBD) (the->DT) (balloon->NN) (and->CC) (it->PRP) (went->VBD) (up->RB) (in->IN) (the->DT) (air->NN) (huh->NN) ')
('tags initial-> ', [('was', 'VBD'), ('it', 'PRP'), ('fun', 'VBZ'), ('kim', 'NNS')])
('tags -> ', '     (was->VBD) (it->PRP) (fun->VBZ) (kim->NNS) ')
candidates to check:
5
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('know', 'VBP'), ('today', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('last', 'JJ'), ('day', 'NN'), ('of', 'IN'), ('school', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (know->VBP) (today->NN) (was->VBD) (the->DT) (last->JJ) (day->NN) (of->IN) (school->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('aren', 'NNS'), ('t', 'VBP'), ('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('miss', 'VB'), ('all', 'PDT'), ('the', 'DT'), ('kids', 'NNS')])
('tags -> ', '     (aren->NNS) (t->VBP) (you->PRP) (gon->VBP) (na->TO) (miss->VB) (all->PDT) (the->DT) (kids->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('miss', 'VBP'), ('jan', 'NNS')])
('tags -> ', '     (you->PRP) (miss->VBP) (jan->NNS) ')
('tags initial-> ', [('i', 'NN'), ('miss', 'VBP'), ('jan', 'NN')])
('tags -> ', '     (i->NN) (miss->VBP) (jan->NN) ')
('tags initial-> ', [('you', 'PRP'), ('miss', 'VBP'), ('jan', 'NNS')])
('tags -> ', '     (you->PRP) (miss->VBP) (jan->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('cut', 'NN'), ('pieces', 'NNS'), ('and', 'CC')])
('tags -> ', '     (cut->NN) (pieces->NNS) (and->CC) ')
candidates to check:
5
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('tell', 'VB'), ('daddy', 'IN'), ('we', 'PRP'), ('saw', 'VBD'), ('a', 'DT'), ('movie', 'NN'), ('today', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('were', 'VBD'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (tell->VB) (daddy->IN) (we->PRP) (saw->VBD) (a->DT) (movie->NN) (today->NN) (and->CC) (you->PRP) (were->VBD) (in->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('v', 'NN'), ('c', 'NN'), ('r', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (v->NN) (c->NN) (r->NN) ')
('tags initial-> ', [('humming', 'VBG')])
('tags -> ', '     (humming->VBG) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('were', 'VBD'), ('in', 'IN'), ('a', 'DT'), ('movie', 'NN'), ('adam', 'NN')])
('tags -> ', '     (you->PRP) (were->VBD) (in->IN) (a->DT) (movie->NN) (adam->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('movie', 'NN'), ('whining', 'NN')])
('tags -> ', '     (what->WP) (movie->NN) (whining->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->VB) (tell->VB) (me->PRP) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('was', 'VBD'), ('adam', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('movie', 'NN')])
('tags -> ', '     (was->VBD) (adam->VBN) (in->IN) (the->DT) (movie->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->VB) (tell->VB) (me->PRP) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('in', 'IN'), ('the', 'DT'), ('movie', 'NN')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (in->IN) (the->DT) (movie->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WDT'), ('was', 'VBD'), ('it', 'PRP'), ('a', 'DT'), ('movie', 'NN'), ('of', 'IN')])
('tags -> ', '     (what->WDT) (was->VBD) (it->PRP) (a->DT) (movie->NN) (of->IN) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('just', 'RB'), ('videotaped', 'VBD'), ('the', 'DT'), ('class', 'NN')])
('tags -> ', '     (they->PRP) (just->RB) (videotaped->VBD) (the->DT) (class->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('in', 'IN'), ('the', 'DT'), ('movie', 'NN')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (in->IN) (the->DT) (movie->NN) ')
('tags initial-> ', [('adam', 'NN')])
('tags -> ', '     (adam->NN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('sings', 'NNS'), ('in', 'IN'), ('harsh', 'JJ'), ('growly', 'NN'), ('tone', 'NN')])
('tags -> ', '     (0->CD) (sings->NNS) (in->IN) (harsh->JJ) (growly->NN) (tone->NN) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('showed', 'VBD'), ('it', 'PRP'), ('today', 'NN')])
('tags -> ', '     (they->PRP) (showed->VBD) (it->PRP) (today->NN) ')
('tags initial-> ', [('when', 'WRB'), ('did', 'VBD'), ('they', 'PRP'), ('tape', 'VB'), ('it', 'PRP')])
('tags -> ', '     (when->WRB) (did->VBD) (they->PRP) (tape->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('in', 'IN'), ('the', 'DT'), ('movie', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) (be->VB) (in->IN) (the->DT) (movie->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('adam', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('play', 'NN'), ('with', 'IN'), ('it', 'PRP'), ('eat', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (adam->JJ) (don->NN) (t->NN) (play->NN) (with->IN) (it->PRP) (eat->VBZ) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('they', 'PRP'), ('have', 'VBP'), ('did', 'VBD'), ('they', 'PRP'), ('have', 'VBP'), ('the', 'DT'), ('reading', 'NN'), ('time', 'NN'), ('included', 'VBD')])
('tags -> ', '     (did->VBD) (they->PRP) (have->VBP) (did->VBD) (they->PRP) (have->VBP) (the->DT) (reading->NN) (time->NN) (included->VBD) ')
candidates to check:
4
('tags initial-> ', [('0', 'CD'), ('babbles', 'NNS'), ('nonsense', 'JJ'), ('words', 'NNS')])
('tags -> ', '     (0->CD) (babbles->NNS) (nonsense->JJ) (words->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('na', 'JJ'), ('pull', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (wan->VBP) (na->JJ) (pull->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'JJ'), ('pull', 'NN'), ('it', 'PRP'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (daddy->JJ) (pull->NN) (it->PRP) (for->IN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('break', 'VB'), ('it', 'PRP'), ('half', 'PDT'), ('so', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('have', 'VB'), ('two', 'CD'), ('pieces', 'NNS')])
('tags -> ', '     (you->PRP) (want->VBP) (me->PRP) (to->TO) (break->VB) (it->PRP) (half->PDT) (so->IN) (you->PRP) (can->MD) (have->VB) (two->CD) (pieces->NNS) ')
('tags initial-> ', [('no', 'DT'), ('whining', 'NN')])
('tags -> ', '     (no->DT) (whining->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('nuke', 'JJ'), ('d', 'NN'), ('everybody', 'NN'), ('on', 'IN'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (nuke->JJ) (d->NN) (everybody->NN) (on->IN) (the->DT) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('everybody', 'NN'), ('in', 'IN'), ('the', 'DT'), ('center', 'NN')])
('tags -> ', '     (everybody->NN) (in->IN) (the->DT) (center->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('adam', 'JJ'), ('please', 'NN'), ('don', 'VB'), ('t', 'NN'), ('do', 'VBP'), ('that', 'IN'), ('with', 'IN'), ('your', 'PRP$'), ('spoon', 'NN')])
('tags -> ', '     (adam->JJ) (please->NN) (don->VB) (t->NN) (do->VBP) (that->IN) (with->IN) (your->PRP$) (spoon->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('still', 'RB'), ('chew', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (can->MD) (still->RB) (chew->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('gives', 'VBZ'), ('me', 'PRP'), ('a', 'DT'), ('headache', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('too', 'RB'), ('loud', 'JJ')])
('tags -> ', '     (it->PRP) (gives->VBZ) (me->PRP) (a->DT) (headache->NN) (it->PRP) (s->VBD) (too->RB) (loud->JJ) ')
('tags initial-> ', [('dada', 'NN')])
('tags -> ', '     (dada->NN) ')
('tags initial-> ', [('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (for->IN) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('little', 'JJ'), ('piece', 'NN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (a->DT) (little->JJ) (piece->NN) (for->IN) (me->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('wan', 'VB'), ('na', 'TO'), ('share', 'NN')])
('tags -> ', '     (you->PRP) (gon->VBP) (na->TO) (wan->VB) (na->TO) (share->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'JJ'), ('thanks', 'NNS'), ('kim', 'VBD')])
('tags -> ', '     (oh->JJ) (thanks->NNS) (kim->VBD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('a', 'DT'), ('num', 'NN'), ('o', 'NN'), ('num', 'NN'), ('o', 'NN'), ('num', 'NN'), ('o', 'NN'), ('num', 'NN'), ('o', 'NN')])
('tags -> ', '     (a->DT) (num->NN) (o->NN) (num->NN) (o->NN) (num->NN) (o->NN) (num->NN) (o->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('everybody', 'NN'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('circle', 'NN')])
('tags -> ', '     (everybody->NN) (out->IN) (of->IN) (the->DT) (circle->NN) ')
('tags initial-> ', [('really', 'RB')])
('tags -> ', '     (really->RB) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('xxx', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (the->DT) (xxx->NN) (i->NN) (m->VBP) (the->DT) (xxx->NN) ')
('tags initial-> ', [('adam', 'NN')])
('tags -> ', '     (adam->NN) ')
candidates to check:
2
('tags initial-> ', [('everybody', 'NN'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('circle', 'NN')])
('tags -> ', '     (everybody->NN) (out->IN) (of->IN) (the->DT) (circle->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('finished', 'VBN'), ('eating', 'VBG')])
('tags -> ', '     (are->VBP) (you->PRP) (finished->VBN) (eating->VBG) ')
('tags initial-> ', [('yeah', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (yeah->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('adam', 'NN'), ('i', 'VB'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('at', 'IN'), ('your', 'PRP$'), ('party', 'NN')])
('tags -> ', '     (adam->NN) (i->VB) (what->WP) (did->VBD) (you->PRP) (eat->VB) (at->IN) (your->PRP$) (party->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('brownie', 'NN')])
('tags -> ', '     (a->DT) (brownie->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('brownie', 'NN')])
('tags -> ', '     (a->DT) (brownie->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (what->WP) (else->RB) ')
candidates to check:
4
descended from food: [['N'], 'potato', 6, 12]
descended from food: [['N'], 'chips', 13, 18]
potato chips
potato chips potato chips 487
[('potato', 'NN'), ('chips', 'NNS'), ('and', 'CC'), ('coke', 'NN')]
['potato', 'chips']
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0c0c9e0>)
[('potato', 'NN'), ('chips', 'NNS'), ('and', 'CC'), ('coke', 'NN')]
['potato']
('tags initial-> ', [('potato', 'NN'), ('chips', 'NNS'), ('and', 'CC'), ('coke', 'NN')])
('tags -> ', '     (potato->NN) (chips->NNS) (and->CC) (coke->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('mommy', 'NNS'), ('make', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (mommy->NNS) (make->VB) ')
candidates to check:
3
descended from food: [['N'], 'cookie', 18, 24]
descended from food: [['N'], 'cookie', 18, 24]
cookie
cookie cookie 507
[('mommy', 'NN'), ('ate', 'VB'), ('a', 'DT'), ('cookie', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('ate', 'VBP'), ('a', 'DT'), ('cookie', 'NN')]
['cookie']
('tags initial-> ', [('mommy', 'NN'), ('ate', 'VB'), ('a', 'DT'), ('cookie', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('ate', 'VBP'), ('a', 'DT'), ('cookie', 'NN')])
('tags -> ', '     (mommy->NN) (ate->VB) (a->DT) (cookie->NN) (and->CC) (i->JJ) (ate->VBP) (a->DT) (cookie->NN) ')
('tags initial-> ', [('0', 'CD'), ('slurping', 'VBG'), ('sounds', 'NNS')])
('tags -> ', '     (0->CD) (slurping->VBG) (sounds->NNS) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('heavy', 'JJ'), ('hiss', 'NNS'), ('like', 'IN'), ('breathing', 'VBG')])
('tags -> ', '     (0->CD) (heavy->JJ) (hiss->NNS) (like->IN) (breathing->VBG) ')
('tags initial-> ', [('doodadoo', 'NN'), ('b', 'NN'), ('humming', 'NN')])
('tags -> ', '     (doodadoo->NN) (b->NN) (humming->NN) ')
candidates to check:
4
('tags initial-> ', [('how', 'WRB'), ('many', 'JJ'), ('more', 'JJR'), ('days', 'NNS'), ('un', 'RB'), ('til', 'VBP'), ('we', 'PRP'), ('see', 'VBP'), ('grandma', 'JJ')])
('tags -> ', '     (how->WRB) (many->JJ) (more->JJR) (days->NNS) (un->RB) (til->VBP) (we->PRP) (see->VBP) (grandma->JJ) ')
('tags initial-> ', [('three', 'CD')])
('tags -> ', '     (three->CD) ')
('tags initial-> ', [('nope', 'NN'), ('wrong', 'JJ')])
('tags -> ', '     (nope->NN) (wrong->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
4
('tags initial-> ', [('how', 'WRB'), ('many', 'JJ'), ('more', 'JJR'), ('how', 'WRB'), ('many', 'JJ'), ('more', 'JJR'), ('days', 'NNS'), ('til', 'IN'), ('we', 'PRP'), ('see', 'VBP'), ('grandma', 'JJ')])
('tags -> ', '     (how->WRB) (many->JJ) (more->JJR) (how->WRB) (many->JJ) (more->JJR) (days->NNS) (til->IN) (we->PRP) (see->VBP) (grandma->JJ) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('two', 'CD')])
('tags -> ', '     (two->CD) ')
candidates to check:
2
('tags initial-> ', [('aw', 'NN'), ('you', 'PRP'), ('weren', 'VBP'), ('t', 'NNS'), ('supposed', 'VBN'), ('to', 'TO'), ('tell', 'VB'), ('mom', 'NN')])
('tags -> ', '     (aw->NN) (you->PRP) (weren->VBP) (t->NNS) (supposed->VBN) (to->TO) (tell->VB) (mom->NN) ')
candidates to check:
2
('tags initial-> ', [('yesterday', 'NN'), ('was', 'VBD'), ('three', 'CD'), ('today', 'NN'), ('is', 'VBZ'), ('two', 'CD')])
('tags -> ', '     (yesterday->NN) (was->VBD) (three->CD) (today->NN) (is->VBZ) (two->CD) ')
candidates to check:
3
('tags initial-> ', [('tomorrow', 'NN'), ('will', 'MD'), ('be', 'VB'), ('one', 'CD'), ('more', 'JJR'), ('day', 'NN')])
('tags -> ', '     (tomorrow->NN) (will->MD) (be->VB) (one->CD) (more->JJR) (day->NN) ')
candidates to check:
2
('tags initial-> ', [('how', 'WRB'), ('many', 'JJ'), ('more', 'JJR'), ('days', 'NNS'), ('kim', 'VB')])
('tags -> ', '     (how->WRB) (many->JJ) (more->JJR) (days->NNS) (kim->VB) ')
('tags initial-> ', [('xxx', 'NNS'), ('three', 'CD')])
('tags -> ', '     (xxx->NNS) (three->CD) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD')])
('tags -> ', '     (four->CD) (five->CD) ')
('tags initial-> ', [('one', 'CD'), ('two', 'CD')])
('tags -> ', '     (one->CD) (two->CD) ')
('tags initial-> ', [('two', 'CD')])
('tags -> ', '     (two->CD) ')
('tags initial-> ', [('two', 'CD')])
('tags -> ', '     (two->CD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NNS'), ('can', 'MD'), ('tell', 'VB'), ('a', 'DT'), ('fib', 'NN')])
('tags -> ', '     (mommy->NNS) (can->MD) (tell->VB) (a->DT) (fib->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'JJ'), ('two', 'CD'), ('days', 'NNS'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('grandma', 'VB'), ('s', 'NN')])
('tags -> ', '     (mommy->JJ) (two->CD) (days->NNS) (we->PRP) (re->VBP) (going->VBG) (to->TO) (grandma->VB) (s->NN) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) ')
('tags initial-> ', [('you', 'PRP'), ('g', 'VBP'), ('go', 'VB'), ('away', 'RP')])
('tags -> ', '     (you->PRP) (g->VBP) (go->VB) (away->RP) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
3
('tags initial-> ', [('say', 'VB'), ('two', 'CD'), ('days', 'NNS'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('grandma', 'NN'), ('s', 'NN')])
('tags -> ', '     (say->VB) (two->CD) (days->NNS) (we->PRP) (re->VBP) (going->VBG) (grandma->NN) (s->NN) ')
candidates to check:
1
('tags initial-> ', [('two', 'CD'), ('days', 'NNS'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('grandma', 'VB'), ('s', 'NN')])
('tags -> ', '     (two->CD) (days->NNS) (we->PRP) (re->VBP) (going->VBG) (to->TO) (grandma->VB) (s->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
1
('tags initial-> ', [('two', 'CD'), ('days', 'NNS'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('sings', 'VB')])
('tags -> ', '     (two->CD) (days->NNS) (we->PRP) (re->VBP) (going->VBG) (to->TO) (sings->VB) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('a', 'DT'), ('long', 'JJ'), ('long', 'RB'), ('long', 'RB'), ('long', 'RB'), ('ride', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (gon->VB) (na->TO) (be->VB) (a->DT) (long->JJ) (long->RB) (long->RB) (long->RB) (ride->NN) ')
candidates to check:
1
('tags initial-> ', [('0', 'CD'), ('driving', 'VBG'), ('sounds', 'NNS'), ('with', 'IN'), ('tune', 'NN')])
('tags -> ', '     (0->CD) (driving->VBG) (sounds->NNS) (with->IN) (tune->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('walk', 'NN'), ('walk', 'NN'), ('then', 'RB'), ('drive', 'VB'), ('around', 'RP'), ('here', 'RB'), ('xxx', 'JJ'), ('drive', 'NN'), ('around', 'IN'), ('here', 'RB'), ('at', 'IN'), ('all', 'DT')])
('tags -> ', '     (xxx->NN) (walk->NN) (walk->NN) (then->RB) (drive->VB) (around->RP) (here->RB) (xxx->JJ) (drive->NN) (around->IN) (here->RB) (at->IN) (all->DT) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('drive', 'VB'), ('around', 'IN'), ('you', 'PRP'), ('xxx', 'VBP'), ('everything', 'NN')])
('tags -> ', '     (we->PRP) (re->VBP) (gon->VBG) (na->TO) (drive->VB) (around->IN) (you->PRP) (xxx->VBP) (everything->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('mm', 'NN'), ('mm', 'NN'), ('mm', 'NN'), ('singing', 'NN')])
('tags -> ', '     (mm->NN) (mm->NN) (mm->NN) (singing->NN) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('go', 'VB'), ('outside', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (go->VB) (outside->JJ) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('thinking', 'VBG'), ('of', 'IN'), ('it', 'PRP'), ('today', 'NN'), ('too', 'RB')])
('tags -> ', '     (i->NN) (was->VBD) (thinking->VBG) (of->IN) (it->PRP) (today->NN) (too->RB) ')
('tags initial-> ', [('no', 'DT'), ('adam', 'NN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('finish', 'NN')])
('tags -> ', '     (no->DT) (adam->NN) (you->PRP) (didn->VBP) (t->JJ) (finish->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('adam', 'NN')])
('tags -> ', '     (adam->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('alright', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('give', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('kim', 'VB')])
('tags -> ', '     (alright->NN) (i->NN) (m->VBP) (going->VBG) (to->TO) (give->VB) (it->PRP) (to->TO) (kim->VB) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('should', 'MD'), ('either', 'RB'), ('have', 'VB'), ('his', 'PRP$'), ('socks', 'NNS'), ('off', 'RP'), ('or', 'CC'), ('his', 'PRP$'), ('sneakers', 'NNS'), ('on', 'IN')])
('tags -> ', '     (he->PRP) (should->MD) (either->RB) (have->VB) (his->PRP$) (socks->NNS) (off->RP) (or->CC) (his->PRP$) (sneakers->NNS) (on->IN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', 18, 23]
honey
honey honey 304
[('i', 'NN'), ('ll', 'VBP'), ('eat', 'NN'), ('it', 'PRP'), ('honey', 'VBD')]
['honey']
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('eat', 'NN'), ('it', 'PRP'), ('honey', 'VBD')])
('tags -> ', '     (i->NN) (ll->VBP) (eat->NN) (it->PRP) (honey->VBD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'bread', 55, 60]
bread
bread bread 186
[('yep', 'NN'), ('alright', 'RB'), ('well', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('skitch', 'VB'), ('f', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('in', 'IN'), ('it', 'PRP'), ('just', 'RB'), ('put', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP'), ('kim', 'VB')]
['bread']
('tags initial-> ', [('yep', 'NN'), ('alright', 'RB'), ('well', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('skitch', 'VB'), ('f', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('in', 'IN'), ('it', 'PRP'), ('just', 'RB'), ('put', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP'), ('kim', 'VB')])
('tags -> ', '     (yep->NN) (alright->RB) (well->RB) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (to->TO) (skitch->VB) (f->VB) (your->PRP$) (bread->NN) (in->IN) (it->PRP) (just->RB) (put->VBD) (it->PRP) (on->IN) (the->DT) (table->NN) (if->IN) (you->PRP) (don->VBP) (t->JJ) (want->VBP) (it->PRP) (kim->VB) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('own', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (have->VBP) (my->PRP$) (own->JJ) (xxx->NN) ')
('tags initial-> ', [('your', 'PRP$'), ('own', 'JJ'), ('what', 'WP')])
('tags -> ', '     (your->PRP$) (own->JJ) (what->WP) ')
candidates to check:
2
('tags initial-> ', [('my', 'PRP$'), ('own', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (my->PRP$) (own->JJ) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('see', 'VB'), ('what', 'WP'), ('bike', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('for', 'IN')])
('tags -> ', '     (well->RB) (see->VB) (what->WP) (bike->NN) (is->VBZ) (that->IN) (for->IN) ')
('tags initial-> ', [('not', 'RB'), ('his', 'PRP$')])
('tags -> ', '     (not->RB) (his->PRP$) ')
('tags initial-> ', [('adam', 'NN'), ('that', 'WDT'), ('doesn', 'VBZ'), ('t', 'RB'), ('belong', 'JJ'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (adam->NN) (that->WDT) (doesn->VBZ) (t->RB) (belong->JJ) (to->TO) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('bring', 'VB'), ('it', 'PRP'), ('out', 'RP'), ('no', 'DT'), ('bring', 'VBG'), ('it', 'PRP'), ('outside', 'JJ'), ('right', 'RB'), ('now', 'RB'), ('adam', 'VBP'), ('someone', 'NN'), ('could', 'MD'), ('looking', 'VBG'), ('for', 'IN'), ('it', 'PRP'), ('and', 'CC'), ('crying', 'VBG'), ('be', 'VB'), ('cause', 'IN'), ('they', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('find', 'VB'), ('it', 'PRP')])
('tags -> ', '     (bring->VB) (it->PRP) (out->RP) (no->DT) (bring->VBG) (it->PRP) (outside->JJ) (right->RB) (now->RB) (adam->VBP) (someone->NN) (could->MD) (looking->VBG) (for->IN) (it->PRP) (and->CC) (crying->VBG) (be->VB) (cause->IN) (they->PRP) (can->MD) (t->VB) (find->VB) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
5
descended from food: [['N'], 'dinner', 36, 42]
('tags initial-> ', [('adam', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('finish', 'VB'), ('your', 'PRP$'), ('dinner', 'NN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('get', 'NN'), ('anything', 'NN'), ('else', 'RB'), ('to', 'TO'), ('eat', 'VB'), ('tonight', 'NN')])
('tags -> ', '     (adam->RB) (if->IN) (you->PRP) (don->VBP) (t->JJ) (finish->VB) (your->PRP$) (dinner->NN) (you->PRP) (don->VBP) (t->JJ) (get->NN) (anything->NN) (else->RB) (to->TO) (eat->VB) (tonight->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('of', 'IN'), ('those', 'DT'), ('things', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (any->DT) (of->IN) (those->DT) (things->NNS) ')
('tags initial-> ', [('xxx', 'NNS'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (xxx->NNS) (like->IN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'chicken', 16, 23]
chicken
chicken chicken 234
[('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('chicken', 'NN'), ('spices', 'NNS')]
['chicken']
spices
spices spices 312
[('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('chicken', 'NN'), ('spices', 'NNS')]
['spices']
('tags initial-> ', [('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('chicken', 'NN'), ('spices', 'NNS')])
('tags -> ', '     (i->NN) (have->VBP) (my->PRP$) (chicken->NN) (spices->NNS) ')
loading solution set
calculating
set([(196, (25, 37)), (79, (34, 38)), (651, (18, 24)), (869, (16, 23)), (644, (27, 31)), (308, (30, 36)), (115, (21, 28)), (284, (30, 36)), (329, (29, 35)), (121, (48, 55)), (155, (15, 21)), (644, (6, 18)), (79, (22, 29)), (284, (41, 46)), (276, (27, 31)), (810, (55, 60)), (314, (50, 55)), (134, (37, 44)), (276, (36, 42)), (329, (19, 24)), (634, (8, 15)), (314, (60, 66)), (308, (20, 25)), (99, (31, 40)), (651, (37, 43)), (631, (8, 15)), (104, (14, 21)), (305, (15, 27)), (314, (15, 22))])
[((79, (22, 29)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((79, (34, 38)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((99, (31, 40)), "*FAT:\tAdam's not gonna eat her beef stew .\n"), ((104, (14, 21)), '*MOT:\tsee the carrots in there ?\n'), ((115, (21, 28)), '*CHI:\t<I have my xxx carrots> [<] .\n'), ((121, (48, 55)), '*MOT:\tsee if we can <find some more of> [>] the carrots in here .\n'), ((134, (37, 44)), "*MOT:\there you go here's some of the carrots right on top !\n"), ((155, (15, 21)), '*CHI:\tI have a carrot haha [x 2] &=singing .\n'), ((196, (25, 37)), '*MOT:\tAdam you want some butter bread ?\n'), ((276, (27, 31)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((276, (36, 42)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((284, (30, 36)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((284, (41, 46)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((305, (15, 27)), '*MOT:\tyou want butter bread ?\n'), ((308, (20, 25)), '*MOT:\tyou want some bread and butter ?\n'), ((308, (30, 36)), '*MOT:\tyou want some bread and butter ?\n'), ((314, (15, 22)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (50, 55)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (60, 66)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((329, (19, 24)), "*MOT:\tthere's your bread and butter right there .\n"), ((329, (29, 35)), "*MOT:\tthere's your bread and butter right there .\n"), ((631, (8, 15)), '*CHI:\ta brownie .\n'), ((634, (8, 15)), '*CHI:\ta brownie .\n'), ((644, (6, 18)), '*CHI:\tpotato chips (.) and coke .\n'), ((644, (27, 31)), '*CHI:\tpotato chips (.) and coke .\n'), ((651, (18, 24)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((651, (37, 43)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((810, (55, 60)), "*FAT:\tyep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .\n"), ((869, (16, 23)), '*SIS:\tI have my chicken Spices.\n')]
set([(253, (38, 43)), (79, (34, 38)), (651, (18, 24)), (79, (22, 29)), (869, (16, 23)), (869, (-1, 5)), (308, (30, 36)), (115, (21, 28)), (196, (32, 37)), (284, (30, 36)), (305, (15, 21)), (196, (25, 31)), (329, (29, 35)), (121, (48, 55)), (155, (15, 21)), (644, (6, 18)), (305, (22, 27)), (284, (41, 46)), (276, (27, 31)), (810, (55, 60)), (314, (50, 55)), (134, (37, 44)), (276, (36, 42)), (806, (18, 23)), (329, (19, 24)), (314, (60, 66)), (308, (20, 25)), (99, (31, 40)), (651, (37, 43)), (104, (14, 21)), (314, (15, 22)), (853, (36, 42)), (869, (24, 30))])
[((79, (22, 29)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((79, (34, 38)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((99, (31, 40)), "*FAT:\tAdam's not gonna eat her beef stew .\n"), ((104, (14, 21)), '*MOT:\tsee the carrots in there ?\n'), ((115, (21, 28)), '*CHI:\t<I have my xxx carrots> [<] .\n'), ((121, (48, 55)), '*MOT:\tsee if we can <find some more of> [>] the carrots in here .\n'), ((134, (37, 44)), "*MOT:\there you go here's some of the carrots right on top !\n"), ((155, (15, 21)), '*CHI:\tI have a carrot haha [x 2] &=singing .\n'), ((196, (25, 31)), '*MOT:\tAdam you want some butter bread ?\n'), ((196, (32, 37)), '*MOT:\tAdam you want some butter bread ?\n'), ((253, (38, 43)), "*MOT:\t<there's no kids out> [<] there honey .\n"), ((276, (27, 31)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((276, (36, 42)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((284, (30, 36)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((284, (41, 46)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((305, (15, 21)), '*MOT:\tyou want butter bread ?\n'), ((305, (22, 27)), '*MOT:\tyou want butter bread ?\n'), ((308, (20, 25)), '*MOT:\tyou want some bread and butter ?\n'), ((308, (30, 36)), '*MOT:\tyou want some bread and butter ?\n'), ((314, (15, 22)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (50, 55)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (60, 66)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((329, (19, 24)), "*MOT:\tthere's your bread and butter right there .\n"), ((329, (29, 35)), "*MOT:\tthere's your bread and butter right there .\n"), ((644, (6, 18)), '*CHI:\tpotato chips (.) and coke .\n'), ((651, (18, 24)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((651, (37, 43)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((806, (18, 23)), "*FAT:\tI'll eat it honey .\n"), ((810, (55, 60)), "*FAT:\tyep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .\n"), ((853, (36, 42)), "*MOT:\tAdam if you don't finish your dinner (.) you don't get anything else to eat tonight .\n"), ((869, (-1, 5)), '*SIS:\tI have my chicken Spices.\n'), ((869, (16, 23)), '*SIS:\tI have my chicken Spices.\n'), ((869, (24, 30)), '*SIS:\tI have my chicken Spices.\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'pepper', 'potato chips', 'coke', 'carrots', 'butter bread', 'peas', 'brownie', 'carrot', 'cookie', 'chicken', 'salt', 'beef stew', 'bread'])
predicted labels:
set(['butter', '', 'pepper', 'carrots', 'potato chips', 'peas', 'honey', 'dinner', 'carrot', 'cookie', 'chicken', 'spices', 'salt', 'beef stew', 'bread'])
file:HSLLD/HV1/MT//admmt1.cha
precision: 0.733333333333
recall: 0.785714285714
true positives:['beef stew', 'bread', 'butter', 'carrot', 'carrots', 'chicken', 'cookie', 'peas', 'pepper', 'potato chips', 'salt']
false positives: ['', 'dinner', 'honey', 'spices']
false negatives: ['brownie', 'butter bread', 'coke']
# true pos: 11
# false pos: 4
# false neg: 3
HSLLD/HV1/MT//annmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'NN'), ('going', 'VBG'), ('do', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('any', 'DT'), ('boy', 'NN'), ('that', 'IN')])
('tags -> ', '     (i->NN) (m->NN) (going->VBG) (do->VB) (it->PRP) (to->TO) (any->DT) (boy->NN) (that->IN) ')
candidates to check:
2
('tags initial-> ', [('sing', 'VBG'), ('not', 'RB'), ('last', 'JJ'), ('night', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (sing->VBG) (not->RB) (last->JJ) (night->NN) (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('ready', 'JJ')])
('tags -> ', '     (ready->JJ) ')
('tags initial-> ', [('one', 'CD')])
('tags -> ', '     (one->CD) ')
('tags initial-> ', [('a', 'DT'), ('one', 'CD'), ('a', 'DT'), ('two', 'CD'), ('a', 'DT'), ('three', 'CD')])
('tags -> ', '     (a->DT) (one->CD) (a->DT) (two->CD) (a->DT) (three->CD) ')
candidates to check:
5
('tags initial-> ', [('not', 'RB'), ('last', 'JJ'), ('night', 'NN'), ('before', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('old', 'JJ'), ('man', 'NN'), ('came', 'VBD'), ('knocking', 'VBG'), ('at', 'IN'), ('my', 'PRP$'), ('door', 'NN')])
('tags -> ', '     (not->RB) (last->JJ) (night->NN) (before->IN) (a->DT) (little->JJ) (old->JJ) (man->NN) (came->VBD) (knocking->VBG) (at->IN) (my->PRP$) (door->NN) ')
('tags initial-> ', [('this', 'DT'), ('what', 'WP'), ('he', 'PRP'), ('said', 'VBD'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (this->DT) (what->WP) (he->PRP) (said->VBD) (to->TO) (me->PRP) ')
('tags initial-> ', [('anna', 'NN')])
('tags -> ', '     (anna->NN) ')
candidates to check:
6
('tags initial-> ', [('could', 'MD'), ('sing', 'VB'), ('that', 'IN'), ('song', 'JJ'), ('xxx', 'NNS'), ('but', 'CC'), ('you', 'PRP'), ('sang', 'VBP'), ('that', 'IN'), ('song', 'NN'), ('all', 'DT'), ('summer', 'NN'), ('long', 'RB'), ('xxx', 'RB'), ('can', 'MD'), ('t', 'VB'), ('remember', 'VB'), ('the', 'DT'), ('words', 'NNS')])
('tags -> ', '     (could->MD) (sing->VB) (that->IN) (song->JJ) (xxx->NNS) (but->CC) (you->PRP) (sang->VBP) (that->IN) (song->NN) (all->DT) (summer->NN) (long->RB) (xxx->RB) (can->MD) (t->VB) (remember->VB) (the->DT) (words->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (you->PRP) (are->VBP) ')
candidates to check:
6
('tags initial-> ', [('no', 'DT'), ('brother', 'NN'), ('no', 'RB'), ('brother', 'RB'), ('s', 'VB'), ('gon', 'NN'), ('na', 'TO'), ('do', 'VB'), ('something', 'NN'), ('this', 'DT'), ('one', 'CD')])
('tags -> ', '     (no->DT) (brother->NN) (no->RB) (brother->RB) (s->VB) (gon->NN) (na->TO) (do->VB) (something->NN) (this->DT) (one->CD) ')
('tags initial-> ', [('you', 'PRP'), ('are', 'VBP'), ('my', 'PRP$'), ('sun', 'NN')])
('tags -> ', '     (you->PRP) (are->VBP) (my->PRP$) (sun->NN) ')
candidates to check:
4
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('the', 'DT'), ('write', 'JJS'), ('up', 'RP'), ('in', 'IN'), ('the', 'DT'), ('paper', 'NN'), ('after', 'IN'), ('the', 'DT'), ('play', 'NN'), ('about', 'IN'), ('the', 'DT'), ('uh', 'JJ'), ('his', 'PRP$'), ('brother', 'NN')])
('tags -> ', '     (there->EX) (was->VBD) (the->DT) (write->JJS) (up->RP) (in->IN) (the->DT) (paper->NN) (after->IN) (the->DT) (play->NN) (about->IN) (the->DT) (uh->JJ) (his->PRP$) (brother->NN) ')
('tags initial-> ', [('you', 'PRP'), ('are', 'VBP'), ('my', 'PRP$')])
('tags -> ', '     (you->PRP) (are->VBP) (my->PRP$) ')
candidates to check:
2
('tags initial-> ', [('takin', 'NN'), ('g', 'NN'), ('that', 'IN'), ('girl', 'NN'), ('she', 'PRP'), ('was', 'VBD'), ('xxx', 'JJ'), ('girl', 'NN'), ('friend', 'NN'), ('and', 'CC'), ('she', 'PRP'), ('was', 'VBD'), ('found', 'VBN'), ('xxx', 'RB'), ('xxx', 'VB'), ('them', 'PRP'), ('break', 'VB'), ('up', 'RP'), ('and', 'CC'), ('then', 'RB'), ('it', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (takin->NN) (g->NN) (that->IN) (girl->NN) (she->PRP) (was->VBD) (xxx->JJ) (girl->NN) (friend->NN) (and->CC) (she->PRP) (was->VBD) (found->VBN) (xxx->RB) (xxx->VB) (them->PRP) (break->VB) (up->RP) (and->CC) (then->RB) (it->PRP) (did->VBD) ')
candidates to check:
5
('tags initial-> ', [('not', 'RB'), ('last', 'JJ'), ('night', 'NN'), ('before', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('old', 'JJ'), ('man', 'NN'), ('came', 'VBD'), ('knockin', 'JJ'), ('g', 'NN'), ('at', 'IN'), ('my', 'PRP$'), ('door', 'NN')])
('tags -> ', '     (not->RB) (last->JJ) (night->NN) (before->IN) (a->DT) (little->JJ) (old->JJ) (man->NN) (came->VBD) (knockin->JJ) (g->NN) (at->IN) (my->PRP$) (door->NN) ')
('tags initial-> ', [('when', 'WRB'), ('xxx', 'NN')])
('tags -> ', '     (when->WRB) (xxx->NN) ')
candidates to check:
3
sunshine
sunshine sunshine 416
[('you', 'PRP'), ('are', 'VBP'), ('my', 'PRP$'), ('sunshine', 'JJ'), ('my', 'PRP$'), ('only', 'JJ'), ('sunshine', 'NN')]
['sunshine']
('tags initial-> ', [('you', 'PRP'), ('are', 'VBP'), ('my', 'PRP$'), ('sunshine', 'JJ'), ('my', 'PRP$'), ('only', 'JJ'), ('sunshine', 'NN')])
('tags -> ', '     (you->PRP) (are->VBP) (my->PRP$) (sunshine->JJ) (my->PRP$) (only->JJ) (sunshine->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP'), ('i', 'VB'), ('do', 'VBP'), ('you', 'PRP'), ('care', 'VB'), ('of', 'IN'), ('i', 'NN'), ('you', 'PRP'), ('never', 'RB'), ('know', 'VBP'), ('how', 'WRB'), ('if', 'IN'), ('you', 'PRP')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) (i->VB) (do->VBP) (you->PRP) (care->VB) (of->IN) (i->NN) (you->PRP) (never->RB) (know->VBP) (how->WRB) (if->IN) (you->PRP) ')
candidates to check:
2
('tags initial-> ', [('anna', 'NNS'), ('take', 'VBP'), ('it', 'PRP'), ('upstairs', 'JJ'), ('babe', 'NNS'), ('take', 'VBP'), ('it', 'PRP'), ('upstairs', 'JJ')])
('tags -> ', '     (anna->NNS) (take->VBP) (it->PRP) (upstairs->JJ) (babe->NNS) (take->VBP) (it->PRP) (upstairs->JJ) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('okay', 'JJ'), ('i', 'NN'), ('know', 'VBP'), ('why', 'WRB'), ('i', 'NN'), ('know', 'VBP'), ('the', 'DT'), ('babbles', 'NNS')])
('tags -> ', '     (i->JJ) (m->VBP) (okay->JJ) (i->NN) (know->VBP) (why->WRB) (i->NN) (know->VBP) (the->DT) (babbles->NNS) ')
candidates to check:
1
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('time', 'NN'), ('know', 'VB'), ('what', 'WP'), ('i', 'JJ'), ('mean', 'VBP')])
('tags -> ', '     (all->PDT) (the->DT) (time->NN) (know->VB) (what->WP) (i->JJ) (mean->VBP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('fucking', 'VBG'), ('rude', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (fucking->VBG) (rude->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ve', 'VBP'), ('gotten', 'VBN'), ('silly', 'RB'), ('sil', 'JJ'), ('mary', 'NN')])
('tags -> ', '     (i->NN) (ve->VBP) (gotten->VBN) (silly->RB) (sil->JJ) (mary->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', 11, 16]
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('honey', 'NN')])
('tags -> ', '     (what->WP) (honey->NN) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('acting', 'VBG'), ('silly', 'RB'), ('too', 'RB')])
('tags -> ', '     (he->PRP) (s->VBD) (acting->VBG) (silly->RB) (too->RB) ')
candidates to check:
2
('tags initial-> ', [('this', 'DT'), ('girl', 'NN'), ('was', 'VBD'), ('actually', 'RB'), ('on', 'IN'), ('the', 'DT'), ('phone', 'NN'), ('with', 'IN'), ('chip', 'NN')])
('tags -> ', '     (this->DT) (girl->NN) (was->VBD) (actually->RB) (on->IN) (the->DT) (phone->NN) (with->IN) (chip->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('done', 'VBN'), ('i', 'NN'), ('was', 'VBD'), ('standing', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('room', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (done->VBN) (i->NN) (was->VBD) (standing->VBG) (in->IN) (the->DT) (room->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('point', 'NN'), ('at', 'IN'), ('me', 'PRP'), ('either', 'CC')])
('tags -> ', '     (don->NN) (t->NN) (point->NN) (at->IN) (me->PRP) (either->CC) ')
candidates to check:
2
descended from food: [['N'], 'meatballs', 29, 38]
meatballs
meatballs meatballs 197
[('bob', 'NN'), ('you', 'PRP'), ('made', 'VBD'), ('good', 'JJ'), ('meatballs', 'NNS')]
['meatballs']
('tags initial-> ', [('bob', 'NN'), ('you', 'PRP'), ('made', 'VBD'), ('good', 'JJ'), ('meatballs', 'NNS')])
('tags -> ', '     (bob->NN) (you->PRP) (made->VBD) (good->JJ) (meatballs->NNS) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('small', 'JJ'), ('yell', 'NN')])
('tags -> ', '     (0->CD) (small->JJ) (yell->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('kevin', 'NN')])
('tags -> ', '     (kevin->NN) ')
('tags initial-> ', [('kevin', 'NNS'), ('who', 'WP')])
('tags -> ', '     (kevin->NNS) (who->WP) ')
candidates to check:
2
descended from food: [['N'], 'bread', 25, 30]
bread
bread bread 186
[('i', 'JJ'), ('m', 'VBP'), ('gettin', 'JJ'), ('g', 'NN'), ('more', 'RBR'), ('bread', 'NN')]
['bread']
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('gettin', 'JJ'), ('g', 'NN'), ('more', 'RBR'), ('bread', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (gettin->JJ) (g->NN) (more->RBR) (bread->NN) ')
('tags initial-> ', [('kevin', 'NN'), ('kevin', 'NN'), ('um', 'NN')])
('tags -> ', '     (kevin->NN) (kevin->NN) (um->NN) ')
('tags initial-> ', [('is', 'VBZ'), ('he', 'PRP'), ('tall', 'VB')])
('tags -> ', '     (is->VBZ) (he->PRP) (tall->VB) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('how', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('know', 'VB')])
('tags -> ', '     (how->WRB) (do->VB) (you->PRP) (know->VB) ')
('tags initial-> ', [('real', 'JJ'), ('tall', 'NN')])
('tags -> ', '     (real->JJ) (tall->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('we', 'PRP'), ('go', 'VB'), ('on', 'IN'), ('a', 'DT'), ('yyy', 'NN')])
('tags -> ', '     (can->MD) (we->PRP) (go->VB) (on->IN) (a->DT) (yyy->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'JJ'), ('stupid', 'JJ'), ('girl', 'NN')])
('tags -> ', '     (xxx->JJ) (stupid->JJ) (girl->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('anna', 'NN')])
('tags -> ', '     (anna->NN) ')
('tags initial-> ', [('now', 'RB'), ('we', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('more', 'RBR')])
('tags -> ', '     (now->RB) (we->PRP) (want->VBP) (some->DT) (more->RBR) ')
candidates to check:
2
cherries
cherries cherries 83
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('cherries', 'NNS')]
['cherries']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('cherries', 'NNS')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (more->JJR) (cherries->NNS) ')
candidates to check:
2
descended from food: [['N'], 'honey', 11, 16]
descended from food: [['N'], 'supper', 38, 44]
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN'), ('xxx', 'NN'), ('anna', 'IN'), ('finish', 'JJ'), ('your', 'PRP$'), ('supper', 'JJ'), ('please', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('honey', 'NN'), ('xxx', 'NN'), ('anna', 'IN'), ('finish', 'JJ'), ('your', 'PRP$'), ('supper', 'JJ'), ('please', 'NN')])
('tags -> ', '     (what->WP) (honey->NN) (xxx->NN) (anna->IN) (finish->JJ) (your->PRP$) (supper->JJ) (please->NN) ')
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('keep', 'VB'), ('your', 'PRP$'), ('stomach', 'NN'), ('xxx', 'IN'), ('you', 'PRP'), ('sit', 'VBP')])
('tags -> ', '     (now->RB) (keep->VB) (your->PRP$) (stomach->NN) (xxx->IN) (you->PRP) (sit->VBP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'supper', 29, 35]
('tags initial-> ', [('after', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('your', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (after->IN) (you->PRP) (eat->VBP) (your->PRP$) (supper->NN) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('want', 'VBP'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('darlene', 'VB'), ('s', 'NN')])
('tags -> ', '     (no->DT) (i->NN) (want->VBP) (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (go->NN) (to->TO) (darlene->VB) (s->NN) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('i', 'NN'), ('told', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (no->DT) (no->DT) (i->NN) (told->VBD) (you->PRP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'RB'), ('go', 'VB'), ('to', 'TO'), ('bed', 'VB')])
('tags -> ', '     (xxx->RB) (go->VB) (to->TO) (bed->VB) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('never', 'RB'), ('get', 'VB'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('darlene', 'VB'), ('s', 'NN')])
('tags -> ', '     (no->DT) (i->NN) (never->RB) (get->VB) (to->TO) (go->VB) (to->TO) (darlene->VB) (s->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('get', 'VB'), ('it', 'PRP'), ('all', 'DT'), ('over', 'IN'), ('your', 'PRP$'), ('face', 'NN')])
('tags -> ', '     (how->WRB) (do->VB) (you->PRP) (get->VB) (it->PRP) (all->DT) (over->IN) (your->PRP$) (face->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('mean', 'VB'), ('you', 'PRP'), ('don', 'VB'), ('t', 'NNS'), ('know', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (mean->VB) (you->PRP) (don->VB) (t->NNS) (know->VB) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('just', 'RB'), ('a', 'DT'), ('messy', 'JJ'), ('bessie', 'NN'), ('i', 'NN'), ('guess', 'NN')])
('tags -> ', '     (she->PRP) (s->VBD) (just->RB) (a->DT) (messy->JJ) (bessie->NN) (i->NN) (guess->NN) ')
candidates to check:
1
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('like', 'IN'), ('a', 'DT'), ('slobby', 'NN'), ('wp', 'NN'), ('bobby', 'NN')])
('tags -> ', '     (is->VBZ) (that->IN) (like->IN) (a->DT) (slobby->NN) (wp->NN) (bobby->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('are', 'VBP'), ('you', 'PRP'), ('getting', 'VBG'), ('it', 'PRP'), ('all', 'DT'), ('over', 'IN'), ('your', 'PRP$'), ('face', 'NN')])
('tags -> ', '     (why->WRB) (are->VBP) (you->PRP) (getting->VBG) (it->PRP) (all->DT) (over->IN) (your->PRP$) (face->NN) ')
('tags initial-> ', [('i', 'NN'), ('dunna', 'VBP'), ('don', 'JJ'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (dunna->VBP) (don->JJ) (t->NN) (know->VBP) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('mouth', 'NN')])
('tags -> ', '     (i->NN) (got->VBD) (a->DT) (big->JJ) (mouth->NN) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
candidates to check:
3
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('saw', 'VBD'), ('your', 'PRP$'), ('dad', 'NN'), ('today', 'NN')])
('tags -> ', '     (oh->UH) (i->NN) (saw->VBD) (your->PRP$) (dad->NN) (today->NN) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('no', 'DT'), ('um', 'JJ'), ('mary', 'NN')])
('tags -> ', '     (mom->NN) (no->DT) (um->JJ) (mary->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', 11, 16]
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('honey', 'NN')])
('tags -> ', '     (what->WP) (honey->NN) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('morning', 'NN'), ('remember', 'VB'), ('make', 'VB'), ('their', 'PRP$'), ('bed', 'NN'), ('right', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (morning->NN) (remember->VB) (make->VB) (their->PRP$) (bed->NN) (right->NN) ')
('tags initial-> ', [('you', 'PRP'), ('brought', 'VBD'), ('one', 'CD')])
('tags -> ', '     (you->PRP) (brought->VBD) (one->CD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('alright', 'NN'), ('save', 'VBP'), ('those', 'DT')])
('tags -> ', '     (alright->NN) (save->VBP) (those->DT) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('radio', 'NN'), ('it', 'PRP'), ('said', 'VBD'), ('right', 'JJ'), ('it', 'PRP'), ('said', 'VBD'), ('xxx', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (radio->NN) (it->PRP) (said->VBD) (right->JJ) (it->PRP) (said->VBD) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('a', 'DT'), ('phone', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (got->VBD) (a->DT) (phone->NN) (xxx->NN) ')
('tags initial-> ', [('laughing', 'VBG')])
('tags -> ', '     (laughing->VBG) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('remembered', 'VBD'), ('me', 'PRP'), ('sayin', 'VB'), ('g', 'NN'), ('that', 'IN'), ('to', 'TO'), ('you', 'PRP'), ('huh', 'VB')])
('tags -> ', '     (and->CC) (you->PRP) (remembered->VBD) (me->PRP) (sayin->VB) (g->NN) (that->IN) (to->TO) (you->PRP) (huh->VB) ')
candidates to check:
3
('tags initial-> ', [('well', 'RB'), ('if', 'IN'), ('they', 'PRP'), ('want', 'VBP'), ('it', 'PRP'), ('now', 'RB'), ('anyway', 'VBZ'), ('they', 'PRP'), ('got', 'VBD'), ('ta', 'JJ'), ('work', 'NN'), ('with', 'IN'), ('bell', 'NN'), ('phone', 'NN')])
('tags -> ', '     (well->RB) (if->IN) (they->PRP) (want->VBP) (it->PRP) (now->RB) (anyway->VBZ) (they->PRP) (got->VBD) (ta->JJ) (work->NN) (with->IN) (bell->NN) (phone->NN) ')
('tags initial-> ', [('bill', 'NN'), ('o', 'VBZ'), ('brien', 'NN')])
('tags -> ', '     (bill->NN) (o->VBZ) (brien->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'VB'), ('back', 'RB'), ('call', 'NN')])
('tags -> ', '     (xxx->VB) (back->RB) (call->NN) ')
('tags initial-> ', [('bill', 'NN'), ('o', 'VBZ'), ('brien', 'NN')])
('tags -> ', '     (bill->NN) (o->VBZ) (brien->NN) ')
('tags initial-> ', [('some', 'DT'), ('white', 'JJ'), ('right', 'JJ'), ('bob', 'NN')])
('tags -> ', '     (some->DT) (white->JJ) (right->JJ) (bob->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('it', 'PRP'), ('says', 'VBZ'), ('that', 'IN'), ('if', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('you', 'PRP'), ('can', 'MD'), ('hire', 'VB'), ('me', 'PRP'), ('out', 'RP'), ('if', 'IN'), ('you', 'PRP'), ('need', 'VBP'), ('help', 'VB')])
('tags -> ', '     (yeah->NN) (it->PRP) (says->VBZ) (that->IN) (if->IN) (you->PRP) (want->VBP) (you->PRP) (can->MD) (hire->VB) (me->PRP) (out->RP) (if->IN) (you->PRP) (need->VBP) (help->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('pay', 'VBP'), ('you', 'PRP'), ('by', 'IN'), ('the', 'DT'), ('hour', 'NN')])
('tags -> ', '     (and->CC) (they->PRP) (pay->VBP) (you->PRP) (by->IN) (the->DT) (hour->NN) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('but', 'CC'), ('xxx', 'JJ'), ('pay', 'NN'), ('you', 'PRP'), ('two', 'CD'), ('bucks', 'NNS'), ('an', 'DT'), ('hour', 'NN'), ('laughs', 'NN')])
('tags -> ', '     (but->CC) (but->CC) (xxx->JJ) (pay->NN) (you->PRP) (two->CD) (bucks->NNS) (an->DT) (hour->NN) (laughs->NN) ')
candidates to check:
2
('tags initial-> ', [('three', 'CD'), ('bucks', 'NNS'), ('an', 'DT'), ('hour', 'NN')])
('tags -> ', '     (three->CD) (bucks->NNS) (an->DT) (hour->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('xxx', 'IN'), ('the', 'DT'), ('red', 'JJ'), ('have', 'VBP'), ('to', 'TO')])
('tags -> ', '     (xxx->IN) (the->DT) (red->JJ) (have->VBP) (to->TO) ')
candidates to check:
1
descended from food: [['N'], 'tomato', 10, 16]
tomato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0b31a28>)
[('xxx', 'NN'), ('tomato', 'NN')]
['tomato']
('tags initial-> ', [('xxx', 'NN'), ('tomato', 'NN')])
('tags -> ', '     (xxx->NN) (tomato->NN) ')
('tags initial-> ', [('0', 'CD'), ('low', 'JJ'), ('humming', 'VBG'), ('sound', 'NN')])
('tags -> ', '     (0->CD) (low->JJ) (humming->VBG) (sound->NN) ')
('tags initial-> ', [('0', 'CD'), ('whining', 'VBG'), ('cry', 'NN')])
('tags -> ', '     (0->CD) (whining->VBG) (cry->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('bed', 'VB'), ('that', 'IN'), ('s', 'NN'), ('why', 'WRB')])
('tags -> ', '     (i->NN) (want->VBP) (you->PRP) (to->TO) (go->VB) (to->TO) (bed->VB) (that->IN) (s->NN) (why->WRB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('late', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (late->JJ) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('time', 'NN')])
('tags -> ', '     (what->WP) (time->NN) ')
('tags initial-> ', [('eight', 'CD'), ('thirty', 'NN')])
('tags -> ', '     (eight->CD) (thirty->NN) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('go', 'VBP'), ('to', 'TO'), ('bed', 'NN'), ('at', 'IN'), ('ten', 'JJ'), ('thirty', 'NN')])
('tags -> ', '     (well->RB) (i->RB) (go->VBP) (to->TO) (bed->NN) (at->IN) (ten->JJ) (thirty->NN) ')
('tags initial-> ', [('you', 'PRP'), ('do', 'VBP'), ('laughs', 'NNS')])
('tags -> ', '     (you->PRP) (do->VBP) (laughs->NNS) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('go', 'VBP'), ('to', 'TO'), ('bed', 'VB'), ('when', 'WRB'), ('mom', 'NN'), ('tells', 'VBZ'), ('you', 'PRP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('bed', 'VB')])
('tags -> ', '     (you->PRP) (go->VBP) (to->TO) (bed->VB) (when->WRB) (mom->NN) (tells->VBZ) (you->PRP) (to->TO) (go->VB) (to->TO) (bed->VB) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('should', 'MD'), ('be', 'VB'), ('thankful', 'JJ'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('go', 'VBP'), ('to', 'TO'), ('bed', 'NN'), ('when', 'WRB'), ('i', 'NN'), ('tell', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('bed', 'VB')])
('tags -> ', '     (you->PRP) (should->MD) (be->VB) (thankful->JJ) (you->PRP) (don->VBP) (t->JJ) (go->VBP) (to->TO) (bed->NN) (when->WRB) (i->NN) (tell->VBP) (you->PRP) (to->TO) (go->VB) (to->TO) (bed->VB) ')
candidates to check:
2
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('were', 'VBD'), ('my', 'PRP$'), ('kid', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('be', 'VB'), ('in', 'IN'), ('bed', 'NN'), ('already', 'RB')])
('tags -> ', '     (if->IN) (you->PRP) (were->VBD) (my->PRP$) (kid->NN) (you->PRP) (d->VBP) (be->VB) (in->IN) (bed->NN) (already->RB) ')
candidates to check:
2
('tags initial-> ', [('seven', 'CD'), ('o', 'JJ'), ('clock', 'NN'), ('every', 'DT'), ('night', 'NN')])
('tags -> ', '     (seven->CD) (o->JJ) (clock->NN) (every->DT) (night->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('let', 'NN'), ('you', 'PRP'), ('stay', 'VB'), ('up', 'IN'), ('all', 'DT'), ('night', 'NN'), ('long', 'RB'), ('huh', 'NN')])
('tags -> ', '     (xxx->JJ) (let->NN) (you->PRP) (stay->VB) (up->IN) (all->DT) (night->NN) (long->RB) (huh->NN) ')
('tags initial-> ', [('xxx', 'NNS'), ('so', 'RB'), ('bad', 'JJ')])
('tags -> ', '     (xxx->NNS) (so->RB) (bad->JJ) ')
('tags initial-> ', [('so', 'RB'), ('why', 'WRB'), ('is', 'VBZ'), ('mary', 'JJ'), ('gon', 'NN'), ('na', 'TO'), ('do', 'VB'), ('xxx', 'VB')])
('tags -> ', '     (so->RB) (why->WRB) (is->VBZ) (mary->JJ) (gon->NN) (na->TO) (do->VB) (xxx->VB) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'NN'), ('xxx', 'NN'), ('spoiled', 'VBD'), ('rotten', 'JJ'), ('little', 'JJ'), ('baby', 'NN')])
('tags -> ', '     (yeah->NN) (xxx->NN) (spoiled->VBD) (rotten->JJ) (little->JJ) (baby->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
5
descended from food: [['N'], 'tea', 25, 28]
tea
tea tea 2
[('who', 'WP'), ('else', 'VBP'), ('gives', 'VBZ'), ('you', 'PRP'), ('tea', 'JJ'), ('parties', 'NNS'), ('at', 'IN'), ('eleven', 'RB'), ('o', 'JJ'), ('clock', 'NN'), ('at', 'IN'), ('night', 'NN'), ('huh', 'NN')]
['tea']
('tags initial-> ', [('who', 'WP'), ('else', 'VBP'), ('gives', 'VBZ'), ('you', 'PRP'), ('tea', 'JJ'), ('parties', 'NNS'), ('at', 'IN'), ('eleven', 'RB'), ('o', 'JJ'), ('clock', 'NN'), ('at', 'IN'), ('night', 'NN'), ('huh', 'NN')])
('tags -> ', '     (who->WP) (else->VBP) (gives->VBZ) (you->PRP) (tea->JJ) (parties->NNS) (at->IN) (eleven->RB) (o->JJ) (clock->NN) (at->IN) (night->NN) (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('nana', 'NN'), ('grandmother', 'NN')])
('tags -> ', '     (nana->NN) (grandmother->NN) ')
candidates to check:
5
descended from food: [['N'], 'tea', 25, 28]
tea
tea tea 2
[('nana', 'JJ'), ('lets', 'NNS'), ('you', 'PRP'), ('have', 'VBP'), ('tea', 'VBN'), ('parties', 'NNS'), ('at', 'IN'), ('night', 'NN'), ('like', 'IN'), ('i', 'NN'), ('do', 'VBP')]
['tea']
('tags initial-> ', [('nana', 'JJ'), ('lets', 'NNS'), ('you', 'PRP'), ('have', 'VBP'), ('tea', 'VBN'), ('parties', 'NNS'), ('at', 'IN'), ('night', 'NN'), ('like', 'IN'), ('i', 'NN'), ('do', 'VBP')])
('tags -> ', '     (nana->JJ) (lets->NNS) (you->PRP) (have->VBP) (tea->VBN) (parties->NNS) (at->IN) (night->NN) (like->IN) (i->NN) (do->VBP) ')
('tags initial-> ', [('sometimes', 'RB')])
('tags -> ', '     (sometimes->RB) ')
('tags initial-> ', [('really', 'RB')])
('tags -> ', '     (really->RB) ')
('tags initial-> ', [('well', 'RB'), ('only', 'RB'), ('xxx', 'VB')])
('tags -> ', '     (well->RB) (only->RB) (xxx->VB) ')
candidates to check:
2
('tags initial-> ', [('my', 'PRP$'), ('mother', 'NN'), ('never', 'RB'), ('told', 'VBD'), ('us', 'PRP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('bed', 'VB'), ('my', 'PRP$'), ('father', 'NN'), ('did', 'VBD')])
('tags -> ', '     (my->PRP$) (mother->NN) (never->RB) (told->VBD) (us->PRP) (to->TO) (go->VB) (to->TO) (bed->VB) (my->PRP$) (father->NN) (did->VBD) ')
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('m', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (well->RB) (i->RB) (m->VBP) (done->VBN) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP'), ('what', 'WP')])
('tags -> ', '     (i->NN) (xxx->VBP) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('night', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (night->NN) (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (m->VBP) (done->VBN) ')
candidates to check:
5
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('worked', 'VBD'), ('the', 'DT'), ('second', 'JJ'), ('shift', 'NN'), ('and', 'CC'), ('didn', 'JJ'), ('t', 'NN'), ('come', 'VBN'), ('home', 'NN'), ('un', 'NN'), ('til', 'NN'), ('like', 'IN'), ('eleven', 'RB'), ('thirty', 'NN')])
('tags -> ', '     (when->WRB) (he->PRP) (worked->VBD) (the->DT) (second->JJ) (shift->NN) (and->CC) (didn->JJ) (t->NN) (come->VBN) (home->NN) (un->NN) (til->NN) (like->IN) (eleven->RB) (thirty->NN) ')
candidates to check:
1
('tags initial-> ', [('gasps', 'NN')])
('tags -> ', '     (gasps->NN) ')
candidates to check:
5
('tags initial-> ', [('my', 'PRP$'), ('mom', 'NN'), ('d', 'NNS'), ('say', 'VBP'), ('hurry', 'VBP'), ('up', 'RP'), ('kids', 'NNS'), ('go', 'VB'), ('upstairs', 'RB'), ('your', 'PRP$'), ('father', 'NN'), ('s', 'NN'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('home', 'NN')])
('tags -> ', '     (my->PRP$) (mom->NN) (d->NNS) (say->VBP) (hurry->VBP) (up->RP) (kids->NNS) (go->VB) (upstairs->RB) (your->PRP$) (father->NN) (s->NN) (going->VBG) (to->TO) (be->VB) (home->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('i', 'JJ'), ('see', 'VBP'), ('a', 'DT'), ('bachelor', 'NN'), ('on', 'IN'), ('the', 'DT'), ('roam', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (i->JJ) (see->VBP) (a->DT) (bachelor->NN) (on->IN) (the->DT) (roam->NN) ')
('tags initial-> ', [('exactly', 'RB')])
('tags -> ', '     (exactly->RB) ')
candidates to check:
2
('tags initial-> ', [('enjoy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (enjoy->NN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('remember', 'VB'), ('sittin', 'JJ'), ('g', 'NN'), ('on', 'IN'), ('top', 'NN'), ('of', 'IN'), ('the', 'DT'), ('stairs', 'NNS'), ('listenin', 'VBP'), ('g', 'NN'), ('to', 'TO'), ('them', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (remember->VB) (sittin->JJ) (g->NN) (on->IN) (top->NN) (of->IN) (the->DT) (stairs->NNS) (listenin->VBP) (g->NN) (to->TO) (them->PRP) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('the', 'DT'), ('xxx', 'NN'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (what->WP) (is->VBZ) (the->DT) (xxx->NN) (in->IN) (here->RB) ')
('tags initial-> ', [('bob', 'NN'), ('s', 'NN'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (bob->NN) (s->NN) (in->IN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('since', 'IN'), ('i', 'NN'), ('was', 'VBD'), ('little', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('bed', 'NN')])
('tags -> ', '     (since->IN) (i->NN) (was->VBD) (little->JJ) (and->CC) (i->JJ) (went->VBD) (to->TO) (the->DT) (bed->NN) ')
('tags initial-> ', [('just', 'RB'), ('like', 'IN'), ('you', 'PRP')])
('tags -> ', '     (just->RB) (like->IN) (you->PRP) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('just', 'RB'), ('big', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('went', 'VBD'), ('to', 'TO'), ('bed', 'VB')])
('tags -> ', '     (well->RB) (i->RB) (just->RB) (big->JJ) (and->CC) (i->JJ) (went->VBD) (to->TO) (bed->VB) ')
('tags initial-> ', [('be', 'VB'), ('done', 'VBN')])
('tags -> ', '     (be->VB) (done->VBN) ')
candidates to check:
1
('tags initial-> ', [('get', 'VB'), ('up', 'RP'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('ll', 'VBP'), ('wash', 'JJ')])
('tags -> ', '     (get->VB) (up->RP) (on->IN) (the->DT) (table->NN) (and->CC) (we->PRP) (ll->VBP) (wash->JJ) ')
('tags initial-> ', [('i', 'NN'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (done->VBN) ')
('tags initial-> ', [('i', 'NN'), ('am', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (am->VBP) (done->VBN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('am', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (am->VBP) (done->VBN) ')
('tags initial-> ', [('i', 'NN'), ('am', 'VBP'), ('finished', 'VBN')])
('tags -> ', '     (i->NN) (am->VBP) (finished->VBN) ')
('tags initial-> ', [('may', 'MD'), ('i', 'VB'), ('be', 'VB'), ('excused', 'VBN')])
('tags -> ', '     (may->MD) (i->VB) (be->VB) (excused->VBN) ')
candidates to check:
1
('tags initial-> ', [('mm', 'NN'), ('i', 'NN'), ('used', 'VBN'), ('to', 'TO'), ('have', 'VB'), ('to', 'TO'), ('say', 'VB'), ('that', 'IN'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (mm->NN) (i->NN) (used->VBN) (to->TO) (have->VB) (to->TO) (say->VB) (that->IN) (when->WRB) (i->NN) (was->VBD) (at->IN) (the->DT) (table->NN) ')
('tags initial-> ', [('done', 'VBN')])
('tags -> ', '     (done->VBN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (no->DT) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('little', 'JJ'), ('teaspoon', 'NN')])
('tags -> ', '     (a->DT) (little->JJ) (teaspoon->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('just', 'RB'), ('xxx', 'VB'), ('anna', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (just->RB) (xxx->VB) (anna->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('bet', 'VBD'), ('it', 'PRP'), ('tastes', 'VBZ'), ('bad', 'JJ'), ('too', 'RB')])
('tags -> ', '     (xxx->JJ) (bet->VBD) (it->PRP) (tastes->VBZ) (bad->JJ) (too->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('way', 'NN'), ('out', 'IN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) (the->DT) (way->NN) (out->IN) ')
('tags initial-> ', [('definitely', 'RB')])
('tags -> ', '     (definitely->RB) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'PRP'), ('dated', 'VBD'), ('june', 'NN'), ('twenty', 'NN'), ('first', 'RB')])
('tags -> ', '     (it->PRP) (s->PRP) (dated->VBD) (june->NN) (twenty->NN) (first->RB) ')
('tags initial-> ', [('really', 'RB')])
('tags -> ', '     (really->RB) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('why', 'WRB'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('come', 'VB'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (you->PRP) (know->VBP) (why->WRB) (i->NN) (can->MD) (t->VB) (come->VB) (with->IN) (you->PRP) ')
candidates to check:
1
descended from food: [['N'], 'milk', 11, 15]
milk
milk milk 46
[('the', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('the', 'DT'), ('milk', 'NN')])
('tags -> ', '     (the->DT) (milk->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('no', 'DT'), ('kidding', 'NN')])
('tags -> ', '     (no->DT) (kidding->NN) ')
('tags initial-> ', [('she', 'PRP'), ('just', 'RB'), ('said', 'VBD'), ('that', 'IN'), ('she', 'PRP'), ('thinks', 'VBZ'), ('that', 'IN'), ('it', 'PRP'), ('tastes', 'VBZ'), ('bad', 'JJ'), ('too', 'RB')])
('tags -> ', '     (she->PRP) (just->RB) (said->VBD) (that->IN) (she->PRP) (thinks->VBZ) (that->IN) (it->PRP) (tastes->VBZ) (bad->JJ) (too->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 27, 31]
milk
milk milk 46
[('well', 'RB'), ('then', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('gross', 'JJ'), ('milk', 'NN'), ('don', 'NN'), ('t', 'NN'), ('buy', 'VB'), ('it', 'PRP'), ('anymore', 'RB')]
['milk']
('tags initial-> ', [('well', 'RB'), ('then', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('gross', 'JJ'), ('milk', 'NN'), ('don', 'NN'), ('t', 'NN'), ('buy', 'VB'), ('it', 'PRP'), ('anymore', 'RB')])
('tags -> ', '     (well->RB) (then->RB) (it->PRP) (s->VBZ) (gross->JJ) (milk->NN) (don->NN) (t->NN) (buy->VB) (it->PRP) (anymore->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 19, 23]
milk
milk milk 46
[('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('skim', 'JJ'), ('milk', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('good', 'JJ')]
['milk']
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('skim', 'JJ'), ('milk', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (no->DT) (it->PRP) (s->VBZ) (skim->JJ) (milk->NN) (it->PRP) (s->VBD) (good->JJ) ')
candidates to check:
4
descended from food: [['N'], 'milk', 11, 15]
descended from food: [['N'], 'milk', 11, 15]
milk
milk milk 46
[('skim', 'JJ'), ('milk', 'NN'), ('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('skim', 'VBP'), ('milk', 'NN'), ('tastes', 'NNS'), ('like', 'IN')]
['milk']
('tags initial-> ', [('skim', 'JJ'), ('milk', 'NN'), ('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('skim', 'VBP'), ('milk', 'NN'), ('tastes', 'NNS'), ('like', 'IN')])
('tags -> ', '     (skim->JJ) (milk->NN) (i->NN) (know->VBP) (that->IN) (s->VBP) (what->WP) (skim->VBP) (milk->NN) (tastes->NNS) (like->IN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('just', 'RB'), ('tasted', 'VBN'), ('kind', 'NN'), ('o', 'NN'), ('f', 'JJ'), ('weird', 'NN')])
('tags -> ', '     (that->DT) (just->RB) (tasted->VBN) (kind->NN) (o->NN) (f->JJ) (weird->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('to', 'TO'), ('me', 'PRP'), ('too', 'RB')])
('tags -> ', '     (yeah->NN) (to->TO) (me->PRP) (too->RB) ')
('tags initial-> ', [('has', 'VBZ'), ('an', 'DT'), ('after', 'IN'), ('taste', 'NN'), ('to', 'TO'), ('it', 'PRP')])
('tags -> ', '     (has->VBZ) (an->DT) (after->IN) (taste->NN) (to->TO) (it->PRP) ')
candidates to check:
3
descended from food: [['N'], 'food', 27, 31]
('tags initial-> ', [('like', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('kind', 'NN'), ('of', 'IN'), ('food', 'NN'), ('or', 'CC'), ('somethin', 'NN'), ('g', 'NN')])
('tags -> ', '     (like->IN) (it->PRP) (s->VBZ) (a->DT) (kind->NN) (of->IN) (food->NN) (or->CC) (somethin->NN) (g->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (m->VBP) (done->VBN) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('girl', 'NN'), ('we', 'PRP'), ('ll', 'VBP'), ('see', 'VB'), ('you', 'PRP')])
('tags -> ', '     (good->JJ) (girl->NN) (we->PRP) (ll->VBP) (see->VB) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('sit', 'VBP')])
('tags -> ', '     (you->PRP) (sit->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('boot', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('ass', 'NN')])
('tags -> ', '     (you->PRP) (boot->VBP) (in->IN) (the->DT) (ass->NN) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'JJ'), ('don', 'NN'), ('t', 'NN')])
('tags -> ', '     (oh->UH) (xxx->JJ) (don->NN) (t->NN) ')
candidates to check:
2
('tags initial-> ', [('loser', 'NN'), ('layin', 'NN'), ('g', 'NN'), ('on', 'IN'), ('the', 'DT'), ('couch', 'NN')])
('tags -> ', '     (loser->NN) (layin->NN) (g->NN) (on->IN) (the->DT) (couch->NN) ')
('tags initial-> ', [('yes', 'NNS'), ('you', 'PRP')])
('tags -> ', '     (yes->NNS) (you->PRP) ')
('tags initial-> ', [('bob', 'NN'), ('watch', 'NN')])
('tags -> ', '     (bob->NN) (watch->NN) ')
('tags initial-> ', [('watch', 'NN'), ('out', 'RP')])
('tags -> ', '     (watch->NN) (out->RP) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
2
descended from food: [['N'], 'dessert', 28, 35]
('tags initial-> ', [('you', 'PRP'), ('said', 'VBD'), ('i', 'NN'), ('could', 'MD'), ('have', 'VB'), ('dessert', 'NN')])
('tags -> ', '     (you->PRP) (said->VBD) (i->NN) (could->MD) (have->VB) (dessert->NN) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP'), ('what', 'WP'), ('i', 'NN'), ('said', 'VBD')])
('tags -> ', '     (i->NN) (xxx->VBP) (what->WP) (i->NN) (said->VBD) ')
candidates to check:
1
descended from food: [['N'], 'pie', 52, 55]
pie
pie pie 290
[('you', 'PRP'), ('said', 'VBD'), ('you', 'PRP'), ('she', 'PRP'), ('could', 'MD'), ('help', 'VB'), ('you', 'PRP'), ('make', 'VB'), ('the', 'DT'), ('pie', 'NN')]
['pie']
('tags initial-> ', [('you', 'PRP'), ('said', 'VBD'), ('you', 'PRP'), ('she', 'PRP'), ('could', 'MD'), ('help', 'VB'), ('you', 'PRP'), ('make', 'VB'), ('the', 'DT'), ('pie', 'NN')])
('tags -> ', '     (you->PRP) (said->VBD) (you->PRP) (she->PRP) (could->MD) (help->VB) (you->PRP) (make->VB) (the->DT) (pie->NN) ')
candidates to check:
1
descended from food: [['N'], 'dessert', 66, 73]
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('didn', 'VBP'), ('t', 'NNS'), ('make', 'VBP'), ('it', 'PRP'), ('though', 'IN'), ('did', 'VBD'), ('i', 'VB'), ('so', 'RB'), ('there', 'RB'), ('obviously', 'RB'), ('is', 'VBZ'), ('no', 'DT'), ('dessert', 'NN'), ('then', 'RB'), ('if', 'IN'), ('i', 'NNS'), ('did', 'VBD'), ('not', 'RB'), ('make', 'VB'), ('it', 'PRP')])
('tags -> ', '     (well->RB) (i->JJ) (didn->VBP) (t->NNS) (make->VBP) (it->PRP) (though->IN) (did->VBD) (i->VB) (so->RB) (there->RB) (obviously->RB) (is->VBZ) (no->DT) (dessert->NN) (then->RB) (if->IN) (i->NNS) (did->VBD) (not->RB) (make->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('mom', 'NN')])
('tags -> ', '     (oh->UH) (mom->NN) ')
('tags initial-> ', [('go', 'VB'), ('upstairs', 'NNS'), ('and', 'CC'), ('get', 'VB'), ('xxx', 'JJ')])
('tags -> ', '     (go->VB) (upstairs->NNS) (and->CC) (get->VB) (xxx->JJ) ')
('tags initial-> ', [('why', 'WRB'), ('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('make', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (why->WRB) (didn->NN) (t->NN) (you->PRP) (make->VBP) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'JJ'), ('feel', 'NN'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->JJ) (feel->NN) (like->IN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('mary', 'NN')])
('tags -> ', '     (mary->NN) ')
('tags initial-> ', [('do', 'VB'), ('i', 'VB'), ('xxx', 'NNP'), ('too', 'RB')])
('tags -> ', '     (do->VB) (i->VB) (xxx->NNP) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('no', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (no->DT) (xxx->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('doesn', 'NNS'), ('t', 'VBP'), ('want', 'VBP'), ('to', 'TO'), ('sell', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('me', 'PRP'), ('huh', 'VB')])
('tags -> ', '     (xxx->JJ) (doesn->NNS) (t->VBP) (want->VBP) (to->TO) (sell->VB) (it->PRP) (to->TO) (me->PRP) (huh->VB) ')
candidates to check:
2
('tags initial-> ', [('vicious', 'JJ'), ('kids', 'NNS')])
('tags -> ', '     (vicious->JJ) (kids->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('has', 'VBZ'), ('nothing', 'NN'), ('to', 'TO'), ('do', 'VB'), ('with', 'IN'), ('him', 'PRP')])
('tags -> ', '     (xxx->NN) (has->VBZ) (nothing->NN) (to->TO) (do->VB) (with->IN) (him->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('why', 'WRB'), ('doesn', 'NNS'), ('t', 'VBP'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB')])
('tags -> ', '     (why->WRB) (doesn->NNS) (t->VBP) (want->VBP) (to->TO) (go->VB) ')
candidates to check:
2
descended from food: [['N'], 'honey', 6, 11]
honey
honey honey 304
[('honey', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'WDT'), ('have', 'VBP'), ('the', 'DT'), ('time', 'NN'), ('you', 'PRP'), ('know', 'VBP')]
['honey']
('tags initial-> ', [('honey', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'WDT'), ('have', 'VBP'), ('the', 'DT'), ('time', 'NN'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (honey->NN) (i->NN) (don->VBP) (t->NN) (know->VBP) (i->JJ) (don->VBP) (t->WDT) (have->VBP) (the->DT) (time->NN) (you->PRP) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN'), ('why', 'WRB'), ('can', 'MD'), ('t', 'VB'), ('i', 'NN')])
('tags -> ', '     (mom->NN) (why->WRB) (can->MD) (t->VB) (i->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('anna', 'NN'), ('go', 'VB'), ('get', 'VB'), ('the', 'DT'), ('face', 'NN'), ('cloth', 'NN'), ('like', 'IN'), ('she', 'PRP'), ('asked', 'VBD')])
('tags -> ', '     (anna->NN) (go->VB) (get->VB) (the->DT) (face->NN) (cloth->NN) (like->IN) (she->PRP) (asked->VBD) ')
candidates to check:
1
('tags initial-> ', [('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('v', 'NN'), ('c', 'NN'), ('r', 'NN')])
('tags -> ', '     (where->WRB) (s->PDT) (the->DT) (v->NN) (c->NN) (r->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('s', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (that->DT) (s->VBD) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('going', 'VBG'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (going->VBG) (xxx->NN) ')
candidates to check:
5
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('if', 'IN'), ('you', 'PRP'), ('did', 'VBD'), ('what', 'WP'), ('you', 'PRP'), ('were', 'VBD'), ('supposed', 'VBN'), ('to', 'TO'), ('do', 'VB'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('told', 'VBN'), ('to', 'TO'), ('do', 'VB'), ('it', 'PRP'), ('you', 'PRP'), ('might', 'MD'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('go', 'VB'), ('out', 'RP'), ('at', 'IN'), ('night', 'NN'), ('and', 'CC'), ('do', 'VBP'), ('things', 'NNS'), ('you', 'PRP'), ('know', 'VBP'), ('like', 'IN'), ('a', 'DT'), ('good', 'JJ'), ('girl', 'NN'), ('gets', 'VBZ'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (you->PRP) (know->VBP) (if->IN) (you->PRP) (did->VBD) (what->WP) (you->PRP) (were->VBD) (supposed->VBN) (to->TO) (do->VB) (when->WRB) (you->PRP) (re->VBP) (told->VBN) (to->TO) (do->VB) (it->PRP) (you->PRP) (might->MD) (be->VB) (able->JJ) (to->TO) (go->VB) (out->RP) (at->IN) (night->NN) (and->CC) (do->VBP) (things->NNS) (you->PRP) (know->VBP) (like->IN) (a->DT) (good->JJ) (girl->NN) (gets->VBZ) (to->TO) (do->VB) ')
('tags initial-> ', [('but', 'CC'), ('instead', 'RB'), ('you', 'PRP'), ('dilly', 'RB'), ('dally', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('get', 'VBP'), ('yelled', 'VBN'), ('at', 'IN'), ('anna', 'NN')])
('tags -> ', '     (but->CC) (instead->RB) (you->PRP) (dilly->RB) (dally->RB) (and->CC) (you->PRP) (get->VBP) (yelled->VBN) (at->IN) (anna->NN) ')
loading solution set
calculating
set([(183, (25, 30)), (226, (27, 35)), (655, (27, 31)), (640, (11, 15)), (734, (52, 55)), (166, (29, 38)), (667, (35, 44)), (384, (10, 16)), (662, (14, 23)), (667, (6, 15))])
[((166, (29, 38)), '*CHI:\t(..) Bob you made good meatballs .\n'), ((183, (25, 30)), "*CHI:\tI'm gettin(g) more bread .\n"), ((226, (27, 35)), '*CHI:\t(..) can I have more cherries ?\n'), ((384, (10, 16)), '*CHI:\txxx tomato .\n'), ((640, (11, 15)), '*MOT:\t<the milk> [<] ?\n'), ((655, (27, 31)), "*MA1:\twell then it's gross milk don't buy it anymore .\n"), ((662, (14, 23)), "*MOT:\tno it's skim milk it's good !\n"), ((667, (6, 15)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((667, (35, 44)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((734, (52, 55)), '*MA1:\tyou said you [//] she could help you make the pie .\n')]
set([(183, (25, 30)), (111, (40, 48)), (655, (27, 31)), (230, (11, 16)), (667, (40, 44)), (230, (38, 44)), (241, (29, 35)), (384, (10, 16)), (111, (18, 26)), (226, (27, 35)), (166, (29, 38)), (739, (66, 73)), (662, (19, 23)), (667, (11, 15)), (147, (11, 16)), (734, (52, 55)), (798, (6, 11)), (469, (25, 28)), (728, (28, 35)), (313, (11, 16)), (640, (11, 15)), (460, (25, 28)), (681, (27, 31))])
[((111, (18, 26)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((111, (40, 48)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((147, (11, 16)), '*FE1:\twhat honey ?\n'), ((166, (29, 38)), '*CHI:\t(..) Bob you made good meatballs .\n'), ((183, (25, 30)), "*CHI:\tI'm gettin(g) more bread .\n"), ((226, (27, 35)), '*CHI:\t(..) can I have more cherries ?\n'), ((230, (11, 16)), '*MOT:\twhat honey xxx Anna finish your supper please .\n'), ((230, (38, 44)), '*MOT:\twhat honey xxx Anna finish your supper please .\n'), ((241, (29, 35)), '*MOT:\tafter [!] you eat your supper .\n'), ((313, (11, 16)), '*FE1:\twhat honey ?\n'), ((384, (10, 16)), '*CHI:\txxx tomato .\n'), ((460, (25, 28)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((469, (25, 28)), '*MOT:\tNana lets you have tea parties at night like I do ?\n'), ((640, (11, 15)), '*MOT:\t<the milk> [<] ?\n'), ((655, (27, 31)), "*MA1:\twell then it's gross milk don't buy it anymore .\n"), ((662, (19, 23)), "*MOT:\tno it's skim milk it's good !\n"), ((667, (11, 15)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((667, (40, 44)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((681, (27, 31)), "*MOT:\tlike it's a <kind of food or somethin(g)> [>] .\n"), ((728, (28, 35)), '*CHI:\tyou said I could have dessert .\n'), ((734, (52, 55)), '*MA1:\tyou said you [//] she could help you make the pie .\n'), ((739, (66, 73)), "*MOT:\twell I didn't make it though did I so there obviously is no dessert then if I did not make it !\n"), ((798, (6, 11)), "*MOT:\thoney I don't know (.) I don't have the time you know ?\n")]
calculating accuracy and recall
correct labels:
set(['tomato', 'skim milk', 'meatballs', 'pie', 'cherries', 'milk', 'bread'])
predicted labels:
set(['tomato', 'food', 'tea', 'sunshine', 'meatballs', 'pie', 'honey', 'cherries', 'dessert', 'supper', 'milk', 'bread'])
file:HSLLD/HV1/MT//annmt1.cha
precision: 0.5
recall: 0.857142857143
true positives:['bread', 'cherries', 'meatballs', 'milk', 'pie', 'tomato']
false positives: ['dessert', 'food', 'honey', 'sunshine', 'supper', 'tea']
false negatives: ['skim milk']
# true pos: 6
# false pos: 6
# false neg: 1
HSLLD/HV1/MT//jammt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jammt1.cha
HSLLD/HV1/MT//vicmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//vicmt1.cha
HSLLD/HV1/MT//stnmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//stnmt1.cha
HSLLD/HV1/MT//jeamt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jeamt1.cha
HSLLD/HV1/MT//astmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//astmt1.cha
HSLLD/HV1/MT//casmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
5
descended from food: [['N'], 'milk', 25, 29]
descended from food: [['N'], 'pepsi', -1, 4]
descended from food: [['N'], 'milk', 25, 29]
milk
milk milk 46
[('xxx', 'NN'), ('when', 'WRB'), ('they', 'PRP'), ('need', 'VBP'), ('milk', 'NN'), ('they', 'PRP'), ('mix', 'VBP'), ('pepsi', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('xxx', 'NN'), ('when', 'WRB'), ('they', 'PRP'), ('need', 'VBP'), ('milk', 'NN'), ('they', 'PRP'), ('mix', 'VBP'), ('pepsi', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('milk', 'NN')])
('tags -> ', '     (xxx->NN) (when->WRB) (they->PRP) (need->VBP) (milk->NN) (they->PRP) (mix->VBP) (pepsi->NNS) (in->IN) (the->DT) (milk->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
2
descended from food: [['N'], 'pepsi', -1, 4]
descended from food: [['N'], 'milk', 23, 27]
milk
milk milk 46
[('xxx', 'JJ'), ('pepsi', 'NN'), ('in', 'IN'), ('the', 'DT'), ('milk', 'NN'), ('get', 'VB'), ('it', 'PRP')]
['milk']
('tags initial-> ', [('xxx', 'JJ'), ('pepsi', 'NN'), ('in', 'IN'), ('the', 'DT'), ('milk', 'NN'), ('get', 'VB'), ('it', 'PRP')])
('tags -> ', '     (xxx->JJ) (pepsi->NN) (in->IN) (the->DT) (milk->NN) (get->VB) (it->PRP) ')
('tags initial-> ', [('hey', 'NN'), ('brian', 'NN')])
('tags -> ', '     (hey->NN) (brian->NN) ')
candidates to check:
3
('tags initial-> ', [('so', 'RB'), ('you', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('good', 'JJ'), ('time', 'NN'), ('at', 'IN'), ('the', 'DT'), ('circus', 'NN'), ('brian', 'NN')])
('tags -> ', '     (so->RB) (you->PRP) (had->VBD) (a->DT) (good->JJ) (time->NN) (at->IN) (the->DT) (circus->NN) (brian->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('about', 'IN'), ('it', 'PRP')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (like->IN) (about->IN) (it->PRP) ')
('tags initial-> ', [('what', 'WP'), ('you', 'PRP'), ('get', 'VBP')])
('tags -> ', '     (what->WP) (you->PRP) (get->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('tell', 'VB'), ('him', 'PRP'), ('what', 'WP'), ('you', 'PRP'), ('got', 'VBD'), ('first', 'RB')])
('tags -> ', '     (tell->VB) (him->PRP) (what->WP) (you->PRP) (got->VBD) (first->RB) ')
candidates to check:
5
descended from food: [['N'], 'candy', 31, 36]
popcorn
popcorn popcorn 429
[('i', 'NN'), ('got', 'VBD'), ('popcorn', 'JJ'), ('and', 'CC'), ('cotton', 'NN'), ('candy', 'NN')]
['popcorn']
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('popcorn', 'JJ'), ('and', 'CC'), ('cotton', 'NN'), ('candy', 'NN')])
('tags -> ', '     (i->NN) (got->VBD) (popcorn->JJ) (and->CC) (cotton->NN) (candy->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('get', 'VB'), ('as', 'IN'), ('toys', 'NNS')])
('tags -> ', '     (no->DT) (what->WP) (did->VBD) (you->PRP) (get->VB) (as->IN) (toys->NNS) ')
('tags initial-> ', [('how', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('get', 'VB')])
('tags -> ', '     (how->WRB) (did->VBD) (you->PRP) (get->VB) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('get', 'NN')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (get->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('toys', 'NN')])
('tags -> ', '     (no->DT) (toys->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('how', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('get', 'VB'), ('both', 'DT'), ('of', 'IN'), ('them', 'PRP'), ('with', 'IN'), ('with', 'IN'), ('two', 'CD'), ('dollars', 'NNS')])
('tags -> ', '     (how->WRB) (did->VBD) (you->PRP) (how->WRB) (did->VBD) (you->PRP) (get->VB) (both->DT) (of->IN) (them->PRP) (with->IN) (with->IN) (two->CD) (dollars->NNS) ')
candidates to check:
2
popcorn
popcorn popcorn 429
[('the', 'DT'), ('popcorn', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('dollar', 'NN')]
['popcorn']
('tags initial-> ', [('the', 'DT'), ('popcorn', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('dollar', 'NN')])
('tags -> ', '     (the->DT) (popcorn->NN) (was->VBD) (a->DT) (dollar->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
4
descended from food: [['N'], 'candy', 21, 26]
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('cotton', 'NN'), ('candy', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('dollar', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (cotton->NN) (candy->NN) (was->VBD) (a->DT) (dollar->NN) ')
('tags initial-> ', [('really', 'RB')])
('tags -> ', '     (really->RB) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (have->VBP) (to->TO) (drink->VB) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('anything', 'NN'), ('to', 'TO'), ('drink', 'VB'), ('i', 'JJ'), ('wasn', 'NN'), ('t', 'NN'), ('thirsty', 'NN')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (want->VBP) (anything->NN) (to->TO) (drink->VB) (i->JJ) (wasn->NN) (t->NN) (thirsty->NN) ')
candidates to check:
1
descended from food: [['N'], 'candy', 39, 44]
('tags initial-> ', [('you', 'PRP'), ('think', 'VBP'), ('you', 'PRP'), ('d', 'VBP'), ('be', 'VB'), ('with', 'IN'), ('all', 'DT'), ('that', 'WDT'), ('candy', 'NN')])
('tags -> ', '     (you->PRP) (think->VBP) (you->PRP) (d->VBP) (be->VB) (with->IN) (all->DT) (that->WDT) (candy->NN) ')
candidates to check:
6
descended from food: [['N'], 'candy', 24, 29]
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('cotton', 'NN'), ('candy', 'NN'), ('when', 'WRB'), ('i', 'NN'), ('go', 'VBP'), ('to', 'TO'), ('the', 'DT'), ('circus', 'NN'), ('with', 'IN'), ('the', 'DT'), ('xxx', 'NNP'), ('act', 'NN'), ('and', 'CC'), ('everything', 'NN')])
('tags -> ', '     (i->NN) (love->VBP) (cotton->NN) (candy->NN) (when->WRB) (i->NN) (go->VBP) (to->TO) (the->DT) (circus->NN) (with->IN) (the->DT) (xxx->NNP) (act->NN) (and->CC) (everything->NN) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (it->PRP) ')
candidates to check:
4
descended from food: [['N'], 'candy', 20, 25]
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('cotton', 'NN'), ('candy', 'NN')])
('tags -> ', '     (i->NN) (love->VBP) (cotton->NN) (candy->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'JJ'), ('nice', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (that->DT) (s->JJ) (nice->JJ) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'sugar', 21, 26]
sugar
sugar sugar 399
[('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('sugar', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('good', 'JJ'), ('for', 'IN'), ('you', 'PRP')]
['sugar']
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('sugar', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('good', 'JJ'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (it->PRP) (s->VBZ) (all->DT) (sugar->NN) (it->PRP) (s->VBZ) (not->RB) (good->JJ) (for->IN) (you->PRP) ')
candidates to check:
4
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('a', 'DT'), ('back', 'JJ'), ('xxx', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (a->DT) (back->JJ) (xxx->NN) (in->IN) (my->PRP$) (mouth->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('got', 'VBD'), ('xxx', 'NNS')])
('tags -> ', '     (they->PRP) (got->VBD) (xxx->NNS) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('everybody', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('good', 'JJ'), ('time', 'NN'), ('huh', 'NN')])
('tags -> ', '     (so->RB) (everybody->NN) (had->VBD) (a->DT) (good->JJ) (time->NN) (huh->NN) ')
candidates to check:
7
('tags initial-> ', [('my', 'PRP$'), ('favorite', 'JJ'), ('thing', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('chinese', 'JJ'), ('boy', 'NN'), ('a', 'DT'), ('chinese', 'JJ'), ('girl', 'NN'), ('and', 'CC'), ('another', 'DT'), ('chinese', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (my->PRP$) (favorite->JJ) (thing->NN) (was->VBD) (a->DT) (chinese->JJ) (boy->NN) (a->DT) (chinese->JJ) (girl->NN) (and->CC) (another->DT) (chinese->JJ) (boy->NN) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
candidates to check:
4
('tags initial-> ', [('they', 'PRP'), ('they', 'PRP'), ('full', 'JJ'), ('they', 'PRP'), ('fill', 'VBP'), ('up', 'RP'), ('they', 'PRP'), ('filled', 'VBD'), ('up', 'RP'), ('a', 'DT'), ('two', 'CD'), ('little', 'JJ'), ('round', 'RB'), ('small', 'JJ'), ('things', 'NNS')])
('tags -> ', '     (they->PRP) (they->PRP) (full->JJ) (they->PRP) (fill->VBP) (up->RP) (they->PRP) (filled->VBD) (up->RP) (a->DT) (two->CD) (little->JJ) (round->RB) (small->JJ) (things->NNS) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('were', 'VBD'), ('on', 'IN'), ('boats', 'NNS')])
('tags -> ', '     (and->CC) (they->PRP) (were->VBD) (on->IN) (boats->NNS) ')
candidates to check:
3
('tags initial-> ', [('they', 'PRP'), ('filled', 'VBD'), ('it', 'PRP'), ('up', 'RP'), ('with', 'IN'), ('this', 'DT'), ('red', 'JJ'), ('stuff', 'NN'), ('and', 'CC'), ('then', 'RB'), ('they', 'PRP'), ('swung', 'VBP'), ('them', 'PRP'), ('around', 'IN'), ('on', 'IN'), ('their', 'PRP$'), ('fingers', 'NNS')])
('tags -> ', '     (they->PRP) (filled->VBD) (it->PRP) (up->RP) (with->IN) (this->DT) (red->JJ) (stuff->NN) (and->CC) (then->RB) (they->PRP) (swung->VBP) (them->PRP) (around->IN) (on->IN) (their->PRP$) (fingers->NNS) ')
('tags initial-> ', [('and', 'CC'), ('guess', 'VB'), ('what', 'WP')])
('tags -> ', '     (and->CC) (guess->VB) (what->WP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
water
water water 18
[('the', 'DT'), ('stuff', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('come', 'VBP'), ('out', 'IN'), ('like', 'IN'), ('water', 'NN')]
['water']
('tags initial-> ', [('the', 'DT'), ('stuff', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('come', 'VBP'), ('out', 'IN'), ('like', 'IN'), ('water', 'NN')])
('tags -> ', '     (the->DT) (stuff->NN) (didn->NN) (t->NN) (come->VBP) (out->IN) (like->IN) (water->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('swung', 'VBP'), ('them', 'PRP'), ('around', 'IN'), ('on', 'IN'), ('their', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (and->CC) (they->PRP) (swung->VBP) (them->PRP) (around->IN) (on->IN) (their->PRP$) (hands->NNS) ')
candidates to check:
2
('tags initial-> ', [('then', 'RB'), ('the', 'DT'), ('guy', 'NN'), ('swung', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('his', 'PRP$'), ('foot', 'NN')])
('tags -> ', '     (then->RB) (the->DT) (guy->NN) (swung->VBD) (it->PRP) (on->IN) (his->PRP$) (foot->NN) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('anybody', 'NN'), ('else', 'RB'), ('xxx', 'VBN'), ('by', 'IN'), ('anybody', 'NN'), ('miss', 'NNS'), ('it', 'PRP')])
('tags -> ', '     (did->VBD) (anybody->NN) (else->RB) (xxx->VBN) (by->IN) (anybody->NN) (miss->NNS) (it->PRP) ')
('tags initial-> ', [('oh', 'UH'), ('um', 'JJ'), ('brendan', 'NN'), ('almost', 'RB'), ('missed', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (oh->UH) (um->JJ) (brendan->NN) (almost->RB) (missed->VBD) (it->PRP) ')
('tags initial-> ', [('how', 'WRB'), ('he', 'PRP'), ('came', 'VBD'), ('late', 'RB')])
('tags -> ', '     (how->WRB) (he->PRP) (came->VBD) (late->RB) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('xxx', 'NNP'), ('missus', 'NN'), ('reilly', 'RB'), ('called', 'VBD'), ('up', 'RP'), ('brendan', 'NN'), ('s', 'NN'), ('mom', 'NN'), ('and', 'CC'), ('said', 'VBD'), ('do', 'VBP'), ('you', 'PRP'), ('think', 'VB'), ('brendan', 'NNS'), ('could', 'MD'), ('come', 'VB'), ('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('come', 'NN'), ('in', 'IN')])
('tags -> ', '     (no->DT) (xxx->NNP) (missus->NN) (reilly->RB) (called->VBD) (up->RP) (brendan->NN) (s->NN) (mom->NN) (and->CC) (said->VBD) (do->VBP) (you->PRP) (think->VB) (brendan->NNS) (could->MD) (come->VB) (be->VB) (cause->NN) (he->PRP) (didn->VBZ) (t->JJ) (come->NN) (in->IN) ')
('tags initial-> ', [('why', 'WRB'), ('was', 'VBD'), ('he', 'PRP'), ('out', 'RP')])
('tags -> ', '     (why->WRB) (was->VBD) (he->PRP) (out->RP) ')
candidates to check:
6
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('sick', 'JJ'), ('yesterday', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN'), ('sick', 'JJ'), ('today', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (was->VBD) (sick->JJ) (yesterday->NN) (and->CC) (he->PRP) (was->VBD) (a->DT) (little->JJ) (bit->NN) (sick->JJ) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('he', 'PRP'), ('was', 'VBD'), ('fine', 'JJ'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (but->CC) (he->PRP) (was->VBD) (fine->JJ) (in->IN) (school->NN) ')
('tags initial-> ', [('he', 'PRP'), ('came', 'VBD'), ('in', 'IN')])
('tags -> ', '     (he->PRP) (came->VBD) (in->IN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('that', 'IN'), ('was', 'VBD'), ('good', 'JJ'), ('everybody', 'NN'), ('got', 'VBD'), ('to', 'TO'), ('go', 'VB')])
('tags -> ', '     (so->RB) (that->IN) (was->VBD) (good->JJ) (everybody->NN) (got->VBD) (to->TO) (go->VB) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('circuses', 'NNS')])
('tags -> ', '     (i->NN) (love->VBP) (circuses->NNS) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('we', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('sunday', 'JJ'), ('with', 'IN'), ('casey', 'NN'), ('to', 'TO'), ('the', 'DT'), ('circus', 'NN')])
('tags -> ', '     (yeah->NN) (we->PRP) (re->VBP) (gon->VB) (na->TO) (go->VB) (sunday->JJ) (with->IN) (casey->NN) (to->TO) (the->DT) (circus->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('m', 'NN'), ('going', 'VBG'), ('to', 'TO'), ('go', 'VB'), ('again', 'RB'), ('to', 'TO'), ('the', 'DT'), ('same', 'JJ'), ('thing', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (m->NN) (going->VBG) (to->TO) (go->VB) (again->RB) (to->TO) (the->DT) (same->JJ) (thing->NN) (xxx->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('who', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('sit', 'VB'), ('next', 'JJ'), ('to', 'TO'), ('brian', 'VB')])
('tags -> ', '     (who->WP) (did->VBD) (you->PRP) (sit->VB) (next->JJ) (to->TO) (brian->VB) ')
candidates to check:
2
('tags initial-> ', [('same', 'JJ'), ('circus', 'NN')])
('tags -> ', '     (same->JJ) (circus->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('sasha', 'NN')])
('tags -> ', '     (sasha->NN) ')
candidates to check:
1
apple
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e09ebc20>)
[('xxx', 'NN'), ('at', 'IN'), ('the', 'DT'), ('apple', 'NN'), ('circus', 'NN'), ('brian', 'NN')]
['apple']
('tags initial-> ', [('xxx', 'NN'), ('at', 'IN'), ('the', 'DT'), ('apple', 'NN'), ('circus', 'NN'), ('brian', 'NN')])
('tags -> ', '     (xxx->NN) (at->IN) (the->DT) (apple->NN) (circus->NN) (brian->NN) ')
('tags initial-> ', [('and', 'CC'), ('ryan', 'VB')])
('tags -> ', '     (and->CC) (ryan->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('in', 'IN'), ('intermission', 'NN'), ('when', 'WRB'), ('we', 'PRP'), ('came', 'VBD'), ('back', 'RB'), ('sasha', 'NN'), ('and', 'CC'), ('amelia', 'NN')])
('tags -> ', '     (and->CC) (then->RB) (in->IN) (intermission->NN) (when->WRB) (we->PRP) (came->VBD) (back->RB) (sasha->NN) (and->CC) (amelia->NN) ')
candidates to check:
1
('tags initial-> ', [('who', 'WP'), ('are', 'VBP'), ('the', 'DT'), ('parents', 'NNS'), ('that', 'WDT'), ('went', 'VBD')])
('tags -> ', '     (who->WP) (are->VBP) (the->DT) (parents->NNS) (that->WDT) (went->VBD) ')
('tags initial-> ', [('kay', 'NN'), ('and', 'CC'), ('stanley', 'NN')])
('tags -> ', '     (kay->NN) (and->CC) (stanley->NN) ')
('tags initial-> ', [('kay', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('stanley', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('come', 'VB')])
('tags -> ', '     (kay->NN) (couldn->NN) (t->NN) (stanley->NN) (couldn->NN) (t->NN) (come->VB) ')
('tags initial-> ', [('kate', 'NN'), ('could', 'MD')])
('tags -> ', '     (kate->NN) (could->MD) ')
('tags initial-> ', [('kay', 'NNS'), ('went', 'VBD')])
('tags -> ', '     (kay->NNS) (went->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('they', 'PRP'), ('arranged', 'VBD'), ('it', 'PRP'), ('for', 'IN'), ('us', 'PRP')])
('tags -> ', '     (they->PRP) (arranged->VBD) (it->PRP) (for->IN) (us->PRP) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (know->VBP) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB'), ('to', 'TO'), ('a', 'DT'), ('basketball', 'NN'), ('game', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (go->VB) (to->TO) (a->DT) (basketball->NN) (game->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('do', 'VB'), ('it', 'PRP'), ('at', 'IN'), ('school', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (do->VB) (it->PRP) (at->IN) (school->NN) (tomorrow->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB'), ('to', 'TO'), ('a', 'DT'), ('basketball', 'NN'), ('game', 'NN'), ('in', 'IN'), ('the', 'DT'), ('um', 'JJ'), ('the', 'DT'), ('celtics', 'NNS'), ('and', 'CC'), ('uh', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (go->VB) (to->TO) (a->DT) (basketball->NN) (game->NN) (in->IN) (the->DT) (um->JJ) (the->DT) (celtics->NNS) (and->CC) (uh->NN) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('boy', 'NN'), ('casey', 'NN')])
('tags -> ', '     (good->JJ) (boy->NN) (casey->NN) ')
('tags initial-> ', [('that', 'IN'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (that->IN) (s->VBD) (good->JJ) ')
('tags initial-> ', [('brian', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('eat', 'VB'), ('all', 'DT'), ('of', 'IN'), ('yours', 'NNS')])
('tags -> ', '     (brian->NN) (i->NN) (want->VBP) (you->PRP) (to->TO) (eat->VB) (all->DT) (of->IN) (yours->NNS) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('well', 'RB'), ('good', 'JJ')])
('tags -> ', '     (well->RB) (good->JJ) ')
candidates to check:
3
descended from food: [['N'], 'tomatoes', 31, 39]
tomatoes
tomatoes tomatoes 213
[('hey', 'NN'), ('where', 'WRB'), ('s', 'NN'), ('my', 'PRP$'), ('xxx', 'NN'), ('tomatoes', 'NNS')]
['tomatoes']
('tags initial-> ', [('hey', 'NN'), ('where', 'WRB'), ('s', 'NN'), ('my', 'PRP$'), ('xxx', 'NN'), ('tomatoes', 'NNS')])
('tags -> ', '     (hey->NN) (where->WRB) (s->NN) (my->PRP$) (xxx->NN) (tomatoes->NNS) ')
('tags initial-> ', [('there', 'RB'), ('wasn', 'JJ'), ('t', 'NN'), ('any', 'DT')])
('tags -> ', '     (there->RB) (wasn->JJ) (t->NN) (any->DT) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('i', 'NN'), ('told', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (i->NN) (told->VBD) (you->PRP) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 6, 14]
potatoes
potatoes potatoes 62
[('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('potatoes', 'NNS')])
('tags -> ', '     (potatoes->NNS) ')
candidates to check:
1
('tags initial-> ', [('p', 'NN')])
('tags -> ', '     (p->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'tomatoes', 32, 40]
tomatoes
tomatoes tomatoes 213
[('no', 'DT'), ('casey', 'NN'), ('there', 'RB'), ('wasn', 'JJ'), ('t', 'NN'), ('any', 'DT'), ('tomatoes', 'NNS'), ('left', 'VBD')]
['tomatoes']
('tags initial-> ', [('no', 'DT'), ('casey', 'NN'), ('there', 'RB'), ('wasn', 'JJ'), ('t', 'NN'), ('any', 'DT'), ('tomatoes', 'NNS'), ('left', 'VBD')])
('tags -> ', '     (no->DT) (casey->NN) (there->RB) (wasn->JJ) (t->NN) (any->DT) (tomatoes->NNS) (left->VBD) ')
('tags initial-> ', [('there', 'RB'), ('wasn', 'JJ'), ('t', 'NN'), ('any', 'DT'), ('there', 'EX'), ('wasn', 'JJ'), ('t', 'NN'), ('any', 'DT'), ('at', 'IN'), ('alright', 'RB'), ('so', 'IN'), ('we', 'PRP'), ('gave', 'VBD'), ('you', 'PRP'), ('some', 'DT'), ('casey', 'VBP')])
('tags -> ', '     (there->RB) (wasn->JJ) (t->NN) (any->DT) (there->EX) (wasn->JJ) (t->NN) (any->DT) (at->IN) (alright->RB) (so->IN) (we->PRP) (gave->VBD) (you->PRP) (some->DT) (casey->VBP) ')
candidates to check:
5
descended from food: [['N'], 'honey', 21, 26]
descended from food: [['N'], 'salad', 36, 41]
honey
honey honey 304
[('there', 'EX'), ('was', 'VBD'), ('none', 'NN'), ('honey', 'NN'), ('for', 'IN'), ('the', 'DT'), ('salad', 'NN')]
['honey']
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('none', 'NN'), ('honey', 'NN'), ('for', 'IN'), ('the', 'DT'), ('salad', 'NN')])
('tags -> ', '     (there->EX) (was->VBD) (none->NN) (honey->NN) (for->IN) (the->DT) (salad->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('ones', 'NNS'), ('we', 'PRP'), ('had', 'VBD'), ('in', 'IN'), ('there', 'EX'), ('were', 'VBD'), ('went', 'VBD'), ('bad', 'JJ'), ('they', 'PRP'), ('were', 'VBD'), ('rotten', 'VB')])
('tags -> ', '     (the->DT) (ones->NNS) (we->PRP) (had->VBD) (in->IN) (there->EX) (were->VBD) (went->VBD) (bad->JJ) (they->PRP) (were->VBD) (rotten->VB) ')
candidates to check:
5
descended from food: [['N'], 'tomato', 53, 59]
tomato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0a27c20>)
[('i', 'NN'), ('ll', 'VBD'), ('go', 'VBP'), ('shopping', 'NN'), ('tomorrow', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('you', 'PRP'), ('one', 'CD'), ('tomato', 'NN'), ('okay', 'NN')]
['tomato']
('tags initial-> ', [('i', 'NN'), ('ll', 'VBD'), ('go', 'VBP'), ('shopping', 'NN'), ('tomorrow', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('you', 'PRP'), ('one', 'CD'), ('tomato', 'NN'), ('okay', 'NN')])
('tags -> ', '     (i->NN) (ll->VBD) (go->VBP) (shopping->NN) (tomorrow->NN) (and->CC) (i->NN) (ll->VBP) (get->VB) (you->PRP) (one->CD) (tomato->NN) (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
descended from food: [['N'], 'tomatoes', 54, 62]
tomatoes
tomatoes tomatoes 213
[('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('your', 'PRP$'), ('favorites', 'NNS'), ('right', 'RB'), ('casey', 'NN'), ('tomatoes', 'NNS')]
['tomatoes']
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('your', 'PRP$'), ('favorites', 'NNS'), ('right', 'RB'), ('casey', 'NN'), ('tomatoes', 'NNS')])
('tags -> ', '     (i->NN) (know->VBP) (that->IN) (s->VBP) (one->CD) (of->IN) (your->PRP$) (favorites->NNS) (right->RB) (casey->NN) (tomatoes->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('know', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('my', 'PRP$'), ('favorites', 'NNS')])
('tags -> ', '     (you->PRP) (don->VBP) (t->RB) (know->VBP) (one->CD) (of->IN) (my->PRP$) (favorites->NNS) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('guess', 'NN')])
('tags -> ', '     (guess->NN) ')
candidates to check:
1
descended from food: [['N'], 'fries', 13, 18]
('tags initial-> ', [('french', 'JJ'), ('fries', 'NNS')])
('tags -> ', '     (french->JJ) (fries->NNS) ')
candidates to check:
1
descended from food: [['N'], 'salad', 11, 16]
('tags initial-> ', [('in', 'IN'), ('a', 'DT'), ('salad', 'NN')])
('tags -> ', '     (in->IN) (a->DT) (salad->NN) ')
candidates to check:
1
descended from food: [['N'], 'vegetable', 8, 17]
vegetable
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0a2cef0>)
[('a', 'DT'), ('vegetable', 'JJ')]
['vegetable']
('tags initial-> ', [('a', 'DT'), ('vegetable', 'JJ')])
('tags -> ', '     (a->DT) (vegetable->JJ) ')
candidates to check:
1
descended from food: [['N'], 'croutons', 6, 14]
croutons
croutons croutons 465
[('croutons', 'NNS')]
['croutons']
('tags initial-> ', [('croutons', 'NNS')])
('tags -> ', '     (croutons->NNS) ')
candidates to check:
1
descended from food: [['N'], 'croutons', 6, 14]
croutons
croutons croutons 465
[('croutons', 'NNS')]
['croutons']
('tags initial-> ', [('croutons', 'NNS')])
('tags -> ', '     (croutons->NNS) ')
candidates to check:
1
descended from food: [['N'], 'vegetables', 18, 28]
vegetables
vegetables vegetables 37
[('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('vegetables', 'NNS')]
['vegetables']
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('vegetables', 'NNS')])
('tags -> ', '     (they->PRP) (re->VBP) (not->RB) (vegetables->NNS) ')
candidates to check:
1
descended from food: [['N'], 'salads', 20, 26]
('tags initial-> ', [('they', 'PRP'), ('go', 'VBP'), ('on', 'IN'), ('in', 'IN'), ('salads', 'NNS'), ('then', 'RB')])
('tags -> ', '     (they->PRP) (go->VBP) (on->IN) (in->IN) (salads->NNS) (then->RB) ')
candidates to check:
1
('tags initial-> ', [('casey', 'NN'), ('that', 'WDT'), ('insect', 'VBP'), ('that', 'IN'), ('you', 'PRP'), ('made', 'VBD')])
('tags -> ', '     (casey->NN) (that->WDT) (insect->VBP) (that->IN) (you->PRP) (made->VBD) ')
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (like->IN) (it->PRP) ')
('tags initial-> ', [('when', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('make', 'VB'), ('that', 'IN')])
('tags -> ', '     (when->WRB) (did->VBD) (you->PRP) (make->VB) (that->IN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), ('we', 'PRP'), ('made', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (a->DT) (long->JJ) (time->NN) (we->PRP) (made->VBD) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), ('ago', 'IN')])
('tags -> ', '     (a->DT) (long->JJ) (time->NN) (ago->IN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('sitting', 'VBG'), ('in', 'IN'), ('your', 'PRP$'), ('cubby', 'NN'), ('waiting', 'VBG'), ('for', 'IN'), ('you', 'PRP'), ('to', 'TO'), ('take', 'VB'), ('it', 'PRP'), ('home', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (sitting->VBG) (in->IN) (your->PRP$) (cubby->NN) (waiting->VBG) (for->IN) (you->PRP) (to->TO) (take->VB) (it->PRP) (home->NN) ')
('tags initial-> ', [('i', 'NNS'), ('make', 'VBP'), ('it', 'PRP'), ('fly', 'VB')])
('tags -> ', '     (i->NNS) (make->VBP) (it->PRP) (fly->VB) ')
candidates to check:
4
doughnuts
doughnuts doughnuts 403
[('it', 'PRP'), ('was', 'VBD'), ('just', 'RB'), ('like', 'JJ'), ('doughnuts', 'NNS'), ('like', 'IN'), ('except', 'IN'), ('the', 'DT'), ('xxx', 'NNP'), ('really', 'RB'), ('taste', 'VBP'), ('like', 'IN'), ('doughnuts', 'NNS'), ('they', 'PRP'), ('were', 'VBD'), ('xxx', 'NNP'), ('they', 'PRP'), ('was', 'VBD'), ('and', 'CC'), ('the', 'DT'), ('light', 'NN'), ('was', 'VBD'), ('in', 'IN'), ('it', 'PRP')]
['doughnuts']
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('just', 'RB'), ('like', 'JJ'), ('doughnuts', 'NNS'), ('like', 'IN'), ('except', 'IN'), ('the', 'DT'), ('xxx', 'NNP'), ('really', 'RB'), ('taste', 'VBP'), ('like', 'IN'), ('doughnuts', 'NNS'), ('they', 'PRP'), ('were', 'VBD'), ('xxx', 'NNP'), ('they', 'PRP'), ('was', 'VBD'), ('and', 'CC'), ('the', 'DT'), ('light', 'NN'), ('was', 'VBD'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (it->PRP) (was->VBD) (just->RB) (like->JJ) (doughnuts->NNS) (like->IN) (except->IN) (the->DT) (xxx->NNP) (really->RB) (taste->VBP) (like->IN) (doughnuts->NNS) (they->PRP) (were->VBD) (xxx->NNP) (they->PRP) (was->VBD) (and->CC) (the->DT) (light->NN) (was->VBD) (in->IN) (it->PRP) ')
('tags initial-> ', [('oh', 'NN'), ('i', 'NN'), ('see', 'VBP')])
('tags -> ', '     (oh->NN) (i->NN) (see->VBP) ')
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('didn', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('make', 'VB'), ('one', 'CD'), ('but', 'CC'), ('i', 'VBZ'), ('tried', 'VBD')])
('tags -> ', '     (and->CC) (i->VB) (didn->VBP) (t->NN) (want->VBP) (to->TO) (make->VB) (one->CD) (but->CC) (i->VBZ) (tried->VBD) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('bugs', 'NNS'), ('come', 'VBP'), ('in', 'IN'), ('it', 'PRP'), ('and', 'CC'), ('then', 'RB'), ('they', 'PRP'), ('walked', 'VBD'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (the->DT) (bugs->NNS) (come->VBP) (in->IN) (it->PRP) (and->CC) (then->RB) (they->PRP) (walked->VBD) (in->IN) (it->PRP) ')
candidates to check:
3
('tags initial-> ', [('so', 'RB'), ('when', 'WRB'), ('i', 'JJ'), ('heard', 'VBP'), ('the', 'DT'), ('beach', 'NN'), ('the', 'DT'), ('xxx', 'NN'), ('was', 'VBD'), ('loud', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('go', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (so->RB) (when->WRB) (i->JJ) (heard->VBP) (the->DT) (beach->NN) (the->DT) (xxx->NN) (was->VBD) (loud->JJ) (and->CC) (i->JJ) (go->VBP) (to->TO) (get->VB) (a->DT) (xxx->NN) ')
('tags initial-> ', [('casey', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('eating', 'VBG')])
('tags -> ', '     (casey->NN) (i->NN) (m->VBP) (eating->VBG) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('really', 'RB'), ('liked', 'VBN'), ('it', 'PRP'), ('though', 'IN')])
('tags -> ', '     (i->NN) (i->VBP) (really->RB) (liked->VBN) (it->PRP) (though->IN) ')
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (it->PRP) (was->VBD) (good->JJ) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('you', 'PRP'), ('liked', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (know->VBP) (you->PRP) (liked->VBD) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('told', 'VBD'), ('nina', 'NNS'), ('that', 'IN'), ('we', 'PRP'), ('were', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('go', 'VB'), ('down', 'RB'), ('to', 'TO'), ('the', 'DT'), ('cape', 'NN'), ('in', 'IN'), ('july', 'NN'), ('for', 'IN'), ('a', 'DT'), ('week', 'NN'), ('but', 'CC')])
('tags -> ', '     (i->NN) (told->VBD) (nina->NNS) (that->IN) (we->PRP) (were->VBD) (gon->VBG) (na->TO) (go->VB) (down->RB) (to->TO) (the->DT) (cape->NN) (in->IN) (july->NN) (for->IN) (a->DT) (week->NN) (but->CC) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('know', 'VBP'), ('we', 'PRP'), ('are', 'VBP'), ('going', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('cape', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (know->VBP) (we->PRP) (are->VBP) (going->VBG) (on->IN) (the->DT) (cape->NN) ')
('tags initial-> ', [('since', 'IN'), ('when', 'WRB')])
('tags -> ', '     (since->IN) (when->WRB) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'NNS'), ('but', 'CC'), ('xxx', 'NNP'), ('get', 'VBP'), ('up', 'RB'), ('to', 'TO'), ('the', 'DT'), ('lighthouse', 'NN'), ('for', 'IN'), ('a', 'DT'), ('whole', 'JJ'), ('week', 'NN')])
('tags -> ', '     (yeah->NNS) (but->CC) (xxx->NNP) (get->VBP) (up->RB) (to->TO) (the->DT) (lighthouse->NN) (for->IN) (a->DT) (whole->JJ) (week->NN) ')
('tags initial-> ', [('and', 'CC'), ('get', 'VB'), ('out', 'IN'), ('there', 'RB'), ('with', 'IN'), ('ann', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('and', 'CC'), ('xxx', 'VB')])
('tags -> ', '     (and->CC) (get->VB) (out->IN) (there->RB) (with->IN) (ann->NN) (and->CC) (you->PRP) (and->CC) (xxx->VB) ')
('tags initial-> ', [('and', 'CC'), ('daniel', 'NN')])
('tags -> ', '     (and->CC) (daniel->NN) ')
('tags initial-> ', [('he', 'PRP'), ('might', 'MD'), ('be', 'VB'), ('out', 'IN'), ('there', 'RB'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (he->PRP) (might->MD) (be->VB) (out->IN) (there->RB) (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('ll', 'VBZ'), ('be', 'VB'), ('down', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('weekends', 'NNS')])
('tags -> ', '     (he->PRP) (ll->VBZ) (be->VB) (down->VBN) (on->IN) (the->DT) (weekends->NNS) ')
candidates to check:
1
('tags initial-> ', [('maybe', 'RB'), ('he', 'PRP'), ('ll', 'VBZ'), ('be', 'VB'), ('down', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('weekend', 'NN')])
('tags -> ', '     (maybe->RB) (he->PRP) (ll->VBZ) (be->VB) (down->VBN) (on->IN) (the->DT) (weekend->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('days', 'NNS')])
('tags -> ', '     (what->WP) (days->NNS) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('brian', 'NN')])
('tags -> ', '     (sit->VB) (down->RP) (brian->NN) ')
candidates to check:
2
('tags initial-> ', [('probably', 'RB'), ('july', 'RB'), ('fourth', 'JJ'), ('weekend', 'NN')])
('tags -> ', '     (probably->RB) (july->RB) (fourth->JJ) (weekend->NN) ')
('tags initial-> ', [('july', 'NN'), ('fourth', 'JJ')])
('tags -> ', '     (july->NN) (fourth->JJ) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('we', 'PRP'), ('go', 'VBP'), ('down', 'RB'), ('to', 'TO'), ('the', 'DT'), ('beach', 'NN'), ('probably', 'RB')])
('tags -> ', '     (yeah->NN) (we->PRP) (go->VBP) (down->RB) (to->TO) (the->DT) (beach->NN) (probably->RB) ')
('tags initial-> ', [('xxx', 'NN'), ('david', 'NN'), ('will', 'MD'), ('be', 'VB'), ('down', 'RB'), ('there', 'RB'), ('and', 'CC')])
('tags -> ', '     (xxx->NN) (david->NN) (will->MD) (be->VB) (down->RB) (there->RB) (and->CC) ')
('tags initial-> ', [('can', 'MD'), ('xxx', 'VB'), ('and', 'CC'), ('mick', 'VB'), ('come', 'NN')])
('tags -> ', '     (can->MD) (xxx->VB) (and->CC) (mick->VB) (come->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
corn
corn corn 419
[('eat', 'VB'), ('your', 'PRP$'), ('corn', 'NN'), ('brian', 'NN')]
['corn']
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('corn', 'NN'), ('brian', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (corn->NN) (brian->NN) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
('tags initial-> ', [('stan', 'NN'), ('and', 'CC'), ('mick', 'NN'), ('i', 'NN'), ('love', 'VBP')])
('tags -> ', '     (stan->NN) (and->CC) (mick->NN) (i->NN) (love->VBP) ')
('tags initial-> ', [('good', 'JJ'), ('it', 'PRP'), ('s', 'VBZ'), ('probably', 'RB'), ('safer', 'VB'), ('when', 'WRB'), ('your', 'PRP$'), ('growing', 'VBG'), ('up', 'RP'), ('lousy', 'JJ')])
('tags -> ', '     (good->JJ) (it->PRP) (s->VBZ) (probably->RB) (safer->VB) (when->WRB) (your->PRP$) (growing->VBG) (up->RP) (lousy->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('xxx', 'VB')])
('tags -> ', '     (you->PRP) (can->MD) (xxx->VB) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('xxx', 'VBP'), ('say', 'VB'), ('you', 'PRP'), ('going', 'VBG'), ('out', 'IN'), ('there', 'RB'), ('this', 'DT'), ('year', 'NN'), ('xxx', 'VBZ'), ('no', 'DT'), ('way', 'NN')])
('tags -> ', '     (you->PRP) (xxx->VBP) (say->VB) (you->PRP) (going->VBG) (out->IN) (there->RB) (this->DT) (year->NN) (xxx->VBZ) (no->DT) (way->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
2
('tags initial-> ', [('am', 'VBP'), ('i', 'RB'), ('going', 'VBG'), ('good', 'JJ'), ('mom', 'NN')])
('tags -> ', '     (am->VBP) (i->RB) (going->VBG) (good->JJ) (mom->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('that', 'DT'), ('daddy', 'VBZ'), ('all', 'PDT'), ('the', 'DT'), ('steak', 'NN'), ('s', 'NN'), ('gone', 'VBN')])
('tags -> ', '     (oh->JJ) (look->NN) (at->IN) (that->DT) (daddy->VBZ) (all->PDT) (the->DT) (steak->NN) (s->NN) (gone->VBN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('mine', 'NN'), ('is', 'VBZ'), ('too', 'RB')])
('tags -> ', '     (mine->NN) (is->VBZ) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('nobody', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (nobody->NN) (is->VBZ) ')
candidates to check:
2
('tags initial-> ', [('aside', 'RB'), ('from', 'IN'), ('one', 'CD'), ('two', 'CD'), ('three', 'CD'), ('four', 'CD'), ('six', 'CD'), ('pieces', 'NNS')])
('tags -> ', '     (aside->RB) (from->IN) (one->CD) (two->CD) (three->CD) (four->CD) (six->CD) (pieces->NNS) ')
candidates to check:
1
descended from food: [['N'], 'croutons', 33, 41]
croutons
croutons croutons 465
[('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('in', 'IN'), ('the', 'DT'), ('croutons', 'NNS'), ('brian', 'VBP')]
['croutons']
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('in', 'IN'), ('the', 'DT'), ('croutons', 'NNS'), ('brian', 'VBP')])
('tags -> ', '     (you->PRP) (re->VBP) (going->VBG) (to->TO) (get->VB) (in->IN) (the->DT) (croutons->NNS) (brian->VBP) ')
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) ')
candidates to check:
2
corn
corn corn 419
[('the', 'DT'), ('corn', 'NN'), ('eat', 'VB'), ('your', 'PRP$'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('the', 'DT'), ('corn', 'NN'), ('eat', 'VB'), ('your', 'PRP$'), ('corn', 'NN')])
('tags -> ', '     (the->DT) (corn->NN) (eat->VB) (your->PRP$) (corn->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
descended from food: [['N'], 'croutons', 6, 14]
croutons
croutons croutons 465
[('croutons', 'NNS')]
['croutons']
('tags initial-> ', [('croutons', 'NNS')])
('tags -> ', '     (croutons->NNS) ')
('tags initial-> ', [('larry', 'NN')])
('tags -> ', '     (larry->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('who', 'WP'), ('is', 'VBZ'), ('larry', 'NN')])
('tags -> ', '     (who->WP) (is->VBZ) (larry->NN) ')
('tags initial-> ', [('oh', 'UH'), ('that', 'WDT'), ('really', 'RB'), ('cracks', 'VBZ'), ('us', 'PRP'), ('up', 'RP'), ('brian', 'JJ')])
('tags -> ', '     (oh->UH) (that->WDT) (really->RB) (cracks->VBZ) (us->PRP) (up->RP) (brian->JJ) ')
('tags initial-> ', [('who', 'WP'), ('is', 'VBZ'), ('larry', 'NN')])
('tags -> ', '     (who->WP) (is->VBZ) (larry->NN) ')
('tags initial-> ', [('brian', 'NN')])
('tags -> ', '     (brian->NN) ')
candidates to check:
1
descended from food: [['N'], 'croutons', 36, 44]
croutons
croutons croutons 465
[('brian', 'NN'), ('will', 'MD'), ('you', 'PRP'), ('give', 'VB'), ('the', 'DT'), ('croutons', 'NNS'), ('to', 'TO'), ('me', 'PRP')]
['croutons']
('tags initial-> ', [('brian', 'NN'), ('will', 'MD'), ('you', 'PRP'), ('give', 'VB'), ('the', 'DT'), ('croutons', 'NNS'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (brian->NN) (will->MD) (you->PRP) (give->VB) (the->DT) (croutons->NNS) (to->TO) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('ve', 'VBP'), ('got', 'VB'), ('your', 'PRP$'), ('own', 'JJ')])
('tags -> ', '     (you->PRP) (ve->VBP) (got->VB) (your->PRP$) (own->JJ) ')
candidates to check:
2
descended from food: [['N'], 'salad', 32, 37]
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('the', 'DT'), ('one', 'NN'), ('who', 'WP'), ('wanted', 'VBD'), ('salad', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (the->DT) (one->NN) (who->WP) (wanted->VBD) (salad->NN) ')
candidates to check:
3
descended from food: [['N'], 'salad', 46, 51]
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('a', 'DT'), ('whole', 'JJ'), ('bunch', 'NN'), ('there', 'EX'), ('that', 'WDT'), ('s', 'VBD'), ('the', 'DT'), ('salad', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (a->DT) (whole->JJ) (bunch->NN) (there->EX) (that->WDT) (s->VBD) (the->DT) (salad->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('say', 'VBP'), ('anything', 'NN')])
('tags -> ', '     (it->PRP) (doesn->VBZ) (t->NNS) (say->VBP) (anything->NN) ')
candidates to check:
1
corn
corn corn 419
[('eat', 'NN'), ('the', 'DT'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('eat', 'NN'), ('the', 'DT'), ('corn', 'NN')])
('tags -> ', '     (eat->NN) (the->DT) (corn->NN) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (it->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NNS'), ('do', 'VBP')])
('tags -> ', '     (i->NNS) (do->VBP) ')
candidates to check:
4
('tags initial-> ', [('mom', 'NN'), ('yes', 'VBZ'), ('the', 'DT'), ('act', 'NN'), ('did', 'VBD'), ('firecrackers', 'NNS'), ('and', 'CC'), ('when', 'WRB'), ('we', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (mom->NN) (yes->VBZ) (the->DT) (act->NN) (did->VBD) (firecrackers->NNS) (and->CC) (when->WRB) (we->PRP) (went->VBD) (to->TO) (xxx->VB) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('firecrackers', 'NNS'), ('at', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (the->DT) (firecrackers->NNS) (at->IN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('xxx', 'VB'), ('the', 'DT'), ('car', 'NN')])
('tags -> ', '     (that->DT) (was->VBD) (xxx->VB) (the->DT) (car->NN) ')
candidates to check:
7
descended from food: [['N'], 'crackers', 39, 47]
descended from food: [['N'], 'crackers', 39, 47]
crackers
crackers crackers 453
[('the', 'DT'), ('fire', 'NN'), ('the', 'DT'), ('fire', 'NN'), ('crackers', 'VBZ'), ('the', 'DT'), ('fire', 'NN'), ('crackers', 'NNS'), ('were', 'VBD')]
['crackers']
('tags initial-> ', [('the', 'DT'), ('fire', 'NN'), ('the', 'DT'), ('fire', 'NN'), ('crackers', 'VBZ'), ('the', 'DT'), ('fire', 'NN'), ('crackers', 'NNS'), ('were', 'VBD')])
('tags -> ', '     (the->DT) (fire->NN) (the->DT) (fire->NN) (crackers->VBZ) (the->DT) (fire->NN) (crackers->NNS) (were->VBD) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'IN'), ('xxx', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (i->NN) (didn->VBP) (t->IN) (xxx->NN) (i->NN) (didn->VBP) (t->NN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('like', 'IN'), ('xxx', 'NNP'), ('is', 'VBZ'), ('like', 'IN'), ('oh', 'JJ'), ('my', 'PRP$'), ('god', 'NN'), ('reading', 'VBG'), ('the', 'DT'), ('paper', 'NN'), ('over', 'IN')])
('tags -> ', '     (he->PRP) (s->VBZ) (like->IN) (xxx->NNP) (is->VBZ) (like->IN) (oh->JJ) (my->PRP$) (god->NN) (reading->VBG) (the->DT) (paper->NN) (over->IN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('like', 'IN'), ('oh', 'UH'), ('my', 'PRP$'), ('god', 'NN'), ('i', 'NN'), ('ll', 'VBP'), ('regret', 'VB'), ('this', 'DT'), ('thing', 'NN')])
('tags -> ', '     (he->PRP) (s->VBZ) (like->IN) (oh->UH) (my->PRP$) (god->NN) (i->NN) (ll->VBP) (regret->VB) (this->DT) (thing->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('regret', 'NN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (regret->NN) (it->PRP) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('was', 'VBD'), ('in', 'IN'), ('there', 'RB'), ('protected', 'VBN')])
('tags -> ', '     (yeah->NN) (i->NN) (was->VBD) (in->IN) (there->RB) (protected->VBN) ')
candidates to check:
5
duck
duck duck 84
[('i', 'NN'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('duck', 'VB'), ('to', 'TO'), ('follow', 'VB'), ('rockets', 'NNS'), ('like', 'IN'), ('you', 'PRP'), ('guys', 'VBP')]
['duck']
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('duck', 'VB'), ('to', 'TO'), ('follow', 'VB'), ('rockets', 'NNS'), ('like', 'IN'), ('you', 'PRP'), ('guys', 'VBP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NNS) (have->VBP) (to->TO) (duck->VB) (to->TO) (follow->VB) (rockets->NNS) (like->IN) (you->PRP) (guys->VBP) ')
('tags initial-> ', [('there', 'EX'), ('is', 'VBZ'), ('one', 'CD'), ('coming', 'VBG'), ('at', 'IN'), ('you', 'PRP')])
('tags -> ', '     (there->EX) (is->VBZ) (one->CD) (coming->VBG) (at->IN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('guys', 'VBP'), ('were', 'VBD'), ('xxx', 'JJ'), ('when', 'WRB'), ('i', 'NN'), ('m', 'VBP'), ('driving', 'VBG')])
('tags -> ', '     (you->PRP) (guys->VBP) (were->VBD) (xxx->JJ) (when->WRB) (i->NN) (m->VBP) (driving->VBG) ')
('tags initial-> ', [('sorry', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (sorry->NN) (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('zzz', 'IN'), ('the', 'DT'), ('firecrackers', 'NNS')])
('tags -> ', '     (zzz->IN) (the->DT) (firecrackers->NNS) ')
candidates to check:
6
descended from food: [['N'], 'crackers', 48, 56]
crackers
crackers crackers 453
[('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('two', 'CD'), ('fire', 'NN'), ('crackers', 'NNS'), ('come', 'VBP'), ('out', 'IN'), ('of', 'IN'), ('these', 'DT'), ('kids', 'NNS'), ('hands', 'NNS')]
['crackers']
('tags initial-> ', [('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('two', 'CD'), ('fire', 'NN'), ('crackers', 'NNS'), ('come', 'VBP'), ('out', 'IN'), ('of', 'IN'), ('these', 'DT'), ('kids', 'NNS'), ('hands', 'NNS')])
('tags -> ', '     (when->WRB) (you->PRP) (see->VBP) (when->WRB) (you->PRP) (see->VBP) (two->CD) (fire->NN) (crackers->NNS) (come->VBP) (out->IN) (of->IN) (these->DT) (kids->NNS) (hands->NNS) ')
candidates to check:
6
descended from food: [['N'], 'crackers', 16, 24]
crackers
crackers crackers 453
[('the', 'DT'), ('fire', 'NN'), ('crackers', 'VBZ'), ('the', 'DT'), ('firecrackers', 'NNS'), ('were', 'VBD'), ('going', 'VBG'), ('all', 'DT'), ('over', 'IN'), ('the', 'DT'), ('place', 'NN'), ('they', 'PRP'), ('were', 'VBD'), ('firing', 'VBG'), ('they', 'PRP'), ('were', 'VBD'), ('firing', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('grass', 'NN')]
['crackers']
('tags initial-> ', [('the', 'DT'), ('fire', 'NN'), ('crackers', 'VBZ'), ('the', 'DT'), ('firecrackers', 'NNS'), ('were', 'VBD'), ('going', 'VBG'), ('all', 'DT'), ('over', 'IN'), ('the', 'DT'), ('place', 'NN'), ('they', 'PRP'), ('were', 'VBD'), ('firing', 'VBG'), ('they', 'PRP'), ('were', 'VBD'), ('firing', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('grass', 'NN')])
('tags -> ', '     (the->DT) (fire->NN) (crackers->VBZ) (the->DT) (firecrackers->NNS) (were->VBD) (going->VBG) (all->DT) (over->IN) (the->DT) (place->NN) (they->PRP) (were->VBD) (firing->VBG) (they->PRP) (were->VBD) (firing->VBG) (in->IN) (the->DT) (grass->NN) ')
candidates to check:
3
('tags initial-> ', [('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('one', 'CD'), ('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('kids', 'NNS'), ('it', 'PRP'), ('s', 'JJ'), ('fine', 'JJ'), ('but', 'CC'), ('there', 'EX'), ('were', 'VBD'), ('these', 'DT'), ('guys', 'NNS'), ('that', 'WDT'), ('had', 'VBD'), ('one', 'CD'), ('they', 'PRP'), ('had', 'VBD'), ('xxx', 'NN')])
('tags -> ', '     (as->RB) (long->RB) (as->IN) (it->PRP) (s->VBZ) (one->CD) (as->RB) (long->RB) (as->IN) (it->PRP) (s->VBZ) (one->CD) (of->IN) (the->DT) (other->JJ) (kids->NNS) (it->PRP) (s->JJ) (fine->JJ) (but->CC) (there->EX) (were->VBD) (these->DT) (guys->NNS) (that->WDT) (had->VBD) (one->CD) (they->PRP) (had->VBD) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('remember', 'VB'), ('when', 'WRB'), ('mikey', 'NN'), ('got', 'VBD'), ('burnt', 'RB'), ('in', 'IN'), ('the', 'DT'), ('stomach', 'NN')])
('tags -> ', '     (remember->VB) (when->WRB) (mikey->NN) (got->VBD) (burnt->RB) (in->IN) (the->DT) (stomach->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'NN'), ('because', 'IN'), ('he', 'PRP'), ('was', 'VBD'), ('handling', 'VBG'), ('something', 'NN')])
('tags -> ', '     (that->DT) (s->NN) (because->IN) (he->PRP) (was->VBD) (handling->VBG) (something->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('roman', 'NN'), ('candle', 'NN')])
('tags -> ', '     (the->DT) (roman->NN) (candle->NN) ')
candidates to check:
1
('tags initial-> ', [('mikey', 'NN'), ('said', 'VBD'), ('to', 'TO'), ('mom', 'VB')])
('tags -> ', '     (mikey->NN) (said->VBD) (to->TO) (mom->VB) ')
('tags initial-> ', [('who', 'WP'), ('let', 'VBD'), ('him', 'PRP'), ('who', 'WP'), ('let', 'VBD'), ('him', 'PRP'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (who->WP) (let->VBD) (him->PRP) (who->WP) (let->VBD) (him->PRP) (do->VB) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('uncle', 'NN')])
('tags -> ', '     (his->PRP$) (uncle->NN) ')
candidates to check:
4
descended from food: [['N'], 'beers', 35, 40]
descended from food: [['N'], 'beers', 35, 40]
descended from food: [['N'], 'beers', 35, 40]
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('drinking', 'VBG'), ('some', 'DT'), ('beers', 'NNS'), ('and', 'CC'), ('two', 'CD'), ('beers', 'NNS'), ('and', 'CC'), ('he', 'PRP'), ('scratched', 'VBD'), ('him', 'PRP'), ('on', 'IN'), ('his', 'PRP$'), ('face', 'NN'), ('three', 'CD'), ('beers', 'NNS')])
('tags -> ', '     (i->NN) (guess->NN) (he->PRP) (was->VBD) (drinking->VBG) (some->DT) (beers->NNS) (and->CC) (two->CD) (beers->NNS) (and->CC) (he->PRP) (scratched->VBD) (him->PRP) (on->IN) (his->PRP$) (face->NN) (three->CD) (beers->NNS) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('his', 'PRP$'), ('uncle', 'NN'), ('get', 'NN'), ('arrested', 'VBN')])
('tags -> ', '     (did->VBD) (his->PRP$) (uncle->NN) (get->NN) (arrested->VBN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('his', 'PRP$'), ('uncle', 'NN'), ('get', 'NN'), ('arrested', 'VBN')])
('tags -> ', '     (did->VBD) (his->PRP$) (uncle->NN) (get->NN) (arrested->VBN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (the->DT) (xxx->NN) ')
('tags initial-> ', [('why', 'WRB'), ('do', 'VBP'), ('you', 'PRP'), ('let', 'VB'), ('him', 'PRP'), ('handle', 'VB'), ('one', 'CD')])
('tags -> ', '     (why->WRB) (do->VBP) (you->PRP) (let->VB) (him->PRP) (handle->VB) (one->CD) ')
candidates to check:
1
descended from food: [['N'], 'booze', 6, 11]
('tags initial-> ', [('booze', 'NN'), ('brian', 'NN')])
('tags -> ', '     (booze->NN) (brian->NN) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('drunk', 'NN')])
('tags -> ', '     (he->PRP) (was->VBD) (drunk->NN) ')
candidates to check:
1
('tags initial-> ', [('have', 'VB'), ('you', 'PRP'), ('ever', 'RB'), ('gotten', 'VBP'), ('drunk', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('alright', 'JJ'), ('dad', 'NN')])
('tags -> ', '     (have->VB) (you->PRP) (ever->RB) (gotten->VBP) (drunk->NN) (and->CC) (you->PRP) (re->VBP) (alright->JJ) (dad->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('really', 'RB')])
('tags -> ', '     (really->RB) ')
('tags initial-> ', [('really', 'RB'), ('really', 'RB'), ('really', 'RB'), ('really', 'RB'), ('really', 'RB')])
('tags -> ', '     (really->RB) (really->RB) (really->RB) (really->RB) (really->RB) ')
('tags initial-> ', [('wild', 'NN')])
('tags -> ', '     (wild->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('ve', 'VBP'), ('been', 'VBN'), ('drunk', 'JJ'), ('and', 'CC'), ('all', 'DT'), ('over', 'IN'), ('the', 'DT'), ('place', 'NN')])
('tags -> ', '     (you->PRP) (ve->VBP) (been->VBN) (drunk->JJ) (and->CC) (all->DT) (over->IN) (the->DT) (place->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NNS'), ('say', 'VBP'), ('that', 'IN'), ('to', 'TO'), ('xxx', 'VB'), ('and', 'CC'), ('xxx', 'VB')])
('tags -> ', '     (don->NN) (t->NNS) (say->VBP) (that->IN) (to->TO) (xxx->VB) (and->CC) (xxx->VB) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('baby', 'NN'), ('would', 'MD'), ('be', 'VB'), ('xxx', 'JJ')])
('tags -> ', '     (the->DT) (baby->NN) (would->MD) (be->VB) (xxx->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('think', 'VB'), ('i', 'NNS'), ('could', 'MD'), ('do', 'VB'), ('that', 'DT'), ('xxx', 'NNP'), ('huh', 'NN'), ('brian', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (think->VB) (i->NNS) (could->MD) (do->VB) (that->DT) (xxx->NNP) (huh->NN) (brian->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('peter', 'NN'), ('said', 'VBD')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (peter->NN) (said->VBD) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('goes', 'VBZ'), ('j', 'RB'), ('c', 'VB'), ('it', 'PRP'), ('s', 'JJ'), ('cut', 'VBN'), ('like', 'IN'), ('danny', 'JJ'), ('ainge', 'NN'), ('and', 'CC'), ('then', 'RB'), ('he', 'PRP'), ('goes', 'VBZ'), ('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('what', 'WP'), ('danny', 'JJ'), ('ainge', 'NN'), ('would', 'MD'), ('say', 'VB'), ('then', 'RB'), ('i', 'RB'), ('go', 'VBP'), ('peter', 'NN'), ('who', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('think', 'VB'), ('i', 'JJ'), ('m', 'NNS'), ('married', 'VBD'), ('to', 'TO'), ('then', 'RB'), ('he', 'PRP'), ('goes', 'VBZ'), ('oh', 'RB'), ('i', 'JJ'), ('forgot', 'VBD'), ('dad', 'JJ'), ('knows', 'NNS'), ('xxx', 'IN'), ('he', 'PRP'), ('goes', 'VBZ'), ('xxx', 'RB')])
('tags -> ', '     (he->PRP) (goes->VBZ) (j->RB) (c->VB) (it->PRP) (s->JJ) (cut->VBN) (like->IN) (danny->JJ) (ainge->NN) (and->CC) (then->RB) (he->PRP) (goes->VBZ) (do->VB) (you->PRP) (know->VB) (what->WP) (danny->JJ) (ainge->NN) (would->MD) (say->VB) (then->RB) (i->RB) (go->VBP) (peter->NN) (who->WP) (do->VBP) (you->PRP) (think->VB) (i->JJ) (m->NNS) (married->VBD) (to->TO) (then->RB) (he->PRP) (goes->VBZ) (oh->RB) (i->JJ) (forgot->VBD) (dad->JJ) (knows->NNS) (xxx->IN) (he->PRP) (goes->VBZ) (xxx->RB) ')
candidates to check:
1
('tags initial-> ', [('dad', 'NN'), ('xxx', 'NN'), ('he', 'PRP'), ('goes', 'VBZ')])
('tags -> ', '     (dad->NN) (xxx->NN) (he->PRP) (goes->VBZ) ')
candidates to check:
1
('tags initial-> ', [('who', 'WP'), ('you', 'PRP'), ('playing', 'VBG'), ('with', 'IN'), ('an', 'DT'), ('eight', 'CD'), ('ball', 'NN')])
('tags -> ', '     (who->WP) (you->PRP) (playing->VBG) (with->IN) (an->DT) (eight->CD) (ball->NN) ')
candidates to check:
3
('tags initial-> ', [('mom', 'VB'), ('your', 'PRP$'), ('strap', 'NN'), ('s', 'NN'), ('going', 'VBG'), ('in', 'IN'), ('your', 'PRP$'), ('drink', 'NN')])
('tags -> ', '     (mom->VB) (your->PRP$) (strap->NN) (s->NN) (going->VBG) (in->IN) (your->PRP$) (drink->NN) ')
('tags initial-> ', [('oh', 'UH'), ('god', 'NN')])
('tags -> ', '     (oh->UH) (god->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('bran', 'JJ'), ('brian', 'JJ'), ('come', 'VBN'), ('on', 'IN'), ('no', 'DT'), ('it', 'PRP'), ('is', 'VBZ'), ('not', 'RB'), ('cut', 'VB'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (bran->JJ) (brian->JJ) (come->VBN) (on->IN) (no->DT) (it->PRP) (is->VBZ) (not->RB) (cut->VB) (it->PRP) (out->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('dad', 'NN'), ('you', 'PRP'), ('know', 'VBP'), ('what', 'WP')])
('tags -> ', '     (dad->NN) (you->PRP) (know->VBP) (what->WP) ')
('tags initial-> ', [('peter', 'NN'), ('used', 'VBN'), ('to', 'TO'), ('call', 'VB'), ('me', 'PRP'), ('george', 'VB')])
('tags -> ', '     (peter->NN) (used->VBN) (to->TO) (call->VB) (me->PRP) (george->VB) ')
('tags initial-> ', [('well', 'RB'), ('he', 'PRP'), ('thinks', 'VBZ'), ('you', 'PRP'), ('look', 'VBP'), ('like', 'IN'), ('me', 'PRP'), ('uh', 'VBP')])
('tags -> ', '     (well->RB) (he->PRP) (thinks->VBZ) (you->PRP) (look->VBP) (like->IN) (me->PRP) (uh->VBP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('alright', 'JJ'), ('let', 'NN'), ('s', 'NN'), ('clean', 'VB'), ('up', 'IN'), ('everybody', 'NN'), ('s', 'NN'), ('just', 'RB'), ('about', 'IN'), ('done', 'VBN')])
('tags -> ', '     (alright->JJ) (let->NN) (s->NN) (clean->VB) (up->IN) (everybody->NN) (s->NN) (just->RB) (about->IN) (done->VBN) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('m', 'VBD'), ('not', 'RB')])
('tags -> ', '     (no->DT) (i->NN) (m->VBD) (not->RB) ')
('tags initial-> ', [('just', 'RB'), ('a', 'DT'), ('little', 'RB'), ('more', 'RBR')])
('tags -> ', '     (just->RB) (a->DT) (little->RB) (more->RBR) ')
loading solution set
calculating
set([(641, (33, 41)), (446, (20, 26)), (697, (14, 18)), (176, (37, 42)), (17, (25, 29)), (26, (10, 15)), (73, (10, 17)), (52, (12, 19)), (428, (6, 18)), (689, (46, 51)), (654, (6, 14)), (17, (52, 56)), (354, (6, 14)), (119, (13, 25)), (125, (21, 26)), (440, (6, 14)), (17, (39, 44)), (377, (21, 26)), (437, (6, 14)), (481, (71, 80)), (647, (30, 34)), (52, (24, 36)), (343, (31, 39)), (407, (54, 62)), (364, (32, 40)), (443, (18, 28)), (819, (35, 40)), (677, (36, 44)), (26, (23, 27)), (392, (53, 59)), (819, (49, 54)), (481, (23, 32)), (593, (15, 19))])
[((17, (25, 29)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (39, 44)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (52, 56)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((26, (10, 15)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((26, (23, 27)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((52, (12, 19)), '*BRI:\tI got popcorn and cotton candy .\n'), ((52, (24, 36)), '*BRI:\tI got popcorn and cotton candy .\n'), ((73, (10, 17)), '*BRI:\tthe popcorn was a dollar .\n'), ((119, (13, 25)), '*CHI:\tI love cotton candy .\n'), ((125, (21, 26)), "*MOT:\t<it's> [<] all sugar it's not good for you .\n"), ((176, (37, 42)), "*BRI:\tthe stuff didn't come out like water .\n"), ((343, (31, 39)), "*CHI:\t<hey where's> [<] my xxx tomatoes ?\n"), ((354, (6, 14)), '*CHI:\tpotatoes [>] ?\n'), ((364, (32, 40)), "*MOT:\tno Casey there wasn't any tomatoes left .\n"), ((377, (21, 26)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((392, (53, 59)), "*MOT:\tI'll go shopping tomorrow and I'll get you one tomato okay ?\n"), ((407, (54, 62)), "*MOT:\tI know that's one of your favorites right Casey tomatoes ?\n"), ((428, (6, 18)), '*MOT:\tfrench fries .\n'), ((437, (6, 14)), '*BRI:\tcroutons [?] .\n'), ((440, (6, 14)), '*MOT:\tcroutons .\n'), ((443, (18, 28)), "*MOT:\tthey're not vegetables .\n"), ((446, (20, 26)), '*MOT:\tthey go on in salads then .\n'), ((481, (23, 32)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((481, (71, 80)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((593, (15, 19)), '*FAT:\teat your corn Brian .\n'), ((641, (33, 41)), "*FAT:\tyou're going to get in the croutons Brian .\n"), ((647, (30, 34)), '*MOT:\t<the corn> [<] eat your corn .\n'), ((654, (6, 14)), '*FAT:\tcroutons .\n'), ((677, (36, 44)), '*CHI:\t<Brian> [<] will you give the croutons to me ?\n'), ((689, (46, 51)), "*FAT:\tyou know a whole bunch there that's the salad .\n"), ((697, (14, 18)), '*FAT:\teat the corn .\n'), ((819, (35, 40)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((819, (49, 54)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n')]
set([(641, (33, 41)), (446, (20, 26)), (697, (14, 18)), (176, (37, 42)), (109, (24, 29)), (17, (25, 29)), (727, (39, 47)), (727, (63, 71)), (52, (31, 36)), (677, (36, 44)), (103, (39, 44)), (52, (12, 19)), (689, (46, 51)), (654, (6, 14)), (17, (52, 56)), (354, (6, 14)), (73, (10, 17)), (751, (23, 27)), (647, (11, 15)), (17, (-1, 4)), (775, (16, 24)), (79, (21, 26)), (125, (21, 26)), (841, (6, 11)), (26, (-1, 4)), (377, (21, 26)), (270, (21, 26)), (431, (11, 16)), (428, (13, 18)), (481, (71, 80)), (647, (30, 34)), (685, (32, 37)), (775, (38, 46)), (407, (54, 62)), (119, (20, 25)), (343, (31, 39)), (377, (36, 41)), (364, (32, 40)), (443, (18, 28)), (819, (35, 40)), (440, (6, 14)), (437, (6, 14)), (26, (23, 27)), (392, (53, 59)), (434, (8, 17)), (770, (48, 56)), (481, (23, 32)), (593, (15, 19))])
[((17, (-1, 4)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (25, 29)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (52, 56)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((26, (-1, 4)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((26, (23, 27)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((52, (12, 19)), '*BRI:\tI got popcorn and cotton candy .\n'), ((52, (31, 36)), '*BRI:\tI got popcorn and cotton candy .\n'), ((73, (10, 17)), '*BRI:\tthe popcorn was a dollar .\n'), ((79, (21, 26)), '*BRI:\tand the cotton candy was a dollar .\n'), ((103, (39, 44)), "*MOT:\tyou think you'd be with all that candy .\n"), ((109, (24, 29)), '*CHI:\tI love [!] cotton candy when I go to the circus with the xxx act and everything .\n'), ((119, (20, 25)), '*CHI:\tI love cotton candy .\n'), ((125, (21, 26)), "*MOT:\t<it's> [<] all sugar it's not good for you .\n"), ((176, (37, 42)), "*BRI:\tthe stuff didn't come out like water .\n"), ((270, (21, 26)), '*FAT:\txxx at [?] the apple circus Brian .\n'), ((343, (31, 39)), "*CHI:\t<hey where's> [<] my xxx tomatoes ?\n"), ((354, (6, 14)), '*CHI:\tpotatoes [>] ?\n'), ((364, (32, 40)), "*MOT:\tno Casey there wasn't any tomatoes left .\n"), ((377, (21, 26)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((377, (36, 41)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((392, (53, 59)), "*MOT:\tI'll go shopping tomorrow and I'll get you one tomato okay ?\n"), ((407, (54, 62)), "*MOT:\tI know that's one of your favorites right Casey tomatoes ?\n"), ((428, (13, 18)), '*MOT:\tfrench fries .\n'), ((431, (11, 16)), '*MOT:\tin a salad ?\n'), ((434, (8, 17)), '*MOT:\ta vegetable ?\n'), ((437, (6, 14)), '*BRI:\tcroutons [?] .\n'), ((440, (6, 14)), '*MOT:\tcroutons .\n'), ((443, (18, 28)), "*MOT:\tthey're not vegetables .\n"), ((446, (20, 26)), '*MOT:\tthey go on in salads then .\n'), ((481, (23, 32)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((481, (71, 80)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((593, (15, 19)), '*FAT:\teat your corn Brian .\n'), ((641, (33, 41)), "*FAT:\tyou're going to get in the croutons Brian .\n"), ((647, (11, 15)), '*MOT:\t<the corn> [<] eat your corn .\n'), ((647, (30, 34)), '*MOT:\t<the corn> [<] eat your corn .\n'), ((654, (6, 14)), '*FAT:\tcroutons .\n'), ((677, (36, 44)), '*CHI:\t<Brian> [<] will you give the croutons to me ?\n'), ((685, (32, 37)), "*MOT:\tyou're the one who wanted salad .\n"), ((689, (46, 51)), "*FAT:\tyou know a whole bunch there that's the salad .\n"), ((697, (14, 18)), '*FAT:\teat the corn .\n'), ((727, (39, 47)), '*CHI:\t<the fire> [<][>] [//] <the fire crackers> [//] the fire crackers were [/] .\n'), ((727, (63, 71)), '*CHI:\t<the fire> [<][>] [//] <the fire crackers> [//] the fire crackers were [/] .\n'), ((751, (23, 27)), "*FAT:\tI didn't have_to duck to follow rockets [?] like you guys .\n"), ((770, (48, 56)), '*FAT:\t<when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...\n'), ((775, (16, 24)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((775, (38, 46)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((819, (35, 40)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((841, (6, 11)), '*FAT:\tbooze Brian (.) .\n')]
calculating accuracy and recall
correct labels:
set(['tomato', 'honey', 'salad', 'corn', 'potatoes', 'cotton candy', 'vegetables', 'doughnuts', 'french fries', 'sugar', 'water', 'croutons', 'beers', 'pepsi', 'popcorn', 'salads', 'milk', 'tomatoes'])
predicted labels:
set(['', 'apple', 'doughnuts', 'honey', 'booze', 'duck', 'salads', 'milk', 'vegetables', 'sugar', 'vegetable', 'croutons', 'tomatoes', 'corn', 'water', 'beers', 'tomato', 'salad', 'potatoes', 'fries', 'candy', 'popcorn', 'crackers'])
file:HSLLD/HV1/MT//casmt1.cha
precision: 0.652173913043
recall: 0.833333333333
true positives:['beers', 'corn', 'croutons', 'doughnuts', 'honey', 'milk', 'popcorn', 'potatoes', 'salad', 'salads', 'sugar', 'tomato', 'tomatoes', 'vegetables', 'water']
false positives: ['', 'apple', 'booze', 'candy', 'crackers', 'duck', 'fries', 'vegetable']
false negatives: ['cotton candy', 'french fries', 'pepsi']
# true pos: 15
# false pos: 8
# false neg: 3
HSLLD/HV1/MT//mitmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//mitmt1.cha
HSLLD/HV1/MT//devmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//devmt1.cha
HSLLD/HV1/MT//monmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//monmt1.cha
HSLLD/HV1/MT//jebmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jebmt1.cha
HSLLD/HV1/MT//jesmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jesmt1.cha
HSLLD/HV1/MT//megmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//megmt1.cha
HSLLD/HV1/MT//zenmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//zenmt1.cha
HSLLD/HV1/MT//bramt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'NNS'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (i->JJ) (m->NNS) (brave->VBP) (star->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'NNS'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (i->JJ) (m->NNS) (brave->VBP) (star->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('watching', 'VBG'), ('himself', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('mirror', 'NN'), ('mommy', 'NN'), ('singing', 'NN')])
('tags -> ', '     (he->PRP) (s->VBD) (watching->VBG) (himself->PRP) (in->IN) (the->DT) (mirror->NN) (mommy->NN) (singing->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) (brave->VBP) (star->NN) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('singing', 'VBG'), ('very', 'RB'), ('good', 'JJ'), ('isn', 'NN'), ('t', 'NN'), ('he', 'PRP')])
('tags -> ', '     (he->PRP) (s->VBZ) (singing->VBG) (very->RB) (good->JJ) (isn->NN) (t->NN) (he->PRP) ')
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('say', 'VB'), ('what', 'WP'), ('is', 'VBZ'), ('he', 'PRP'), ('singing', 'VBG')])
('tags -> ', '     (i->NN) (was->VBD) (gon->VBG) (na->TO) (say->VB) (what->WP) (is->VBZ) (he->PRP) (singing->VBG) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('singing', 'VBG')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (singing->VBG) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('you', 'PRP'), ('sing', 'VBP'), ('so', 'RB'), ('good', 'JJ')])
('tags -> ', '     (brave->VB) (star->NN) (you->PRP) (sing->VBP) (so->RB) (good->JJ) ')
('tags initial-> ', [('oh', 'UH'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (oh->UH) (brave->VBP) (star->NN) ')
candidates to check:
2
('tags initial-> ', [('sounded', 'VBN'), ('like', 'IN'), ('praise', 'NN'), ('the', 'DT'), ('lord', 'NN'), ('and', 'CC'), ('pass', 'VB'), ('the', 'DT'), ('ammunition', 'NN')])
('tags -> ', '     (sounded->VBN) (like->IN) (praise->NN) (the->DT) (lord->NN) (and->CC) (pass->VB) (the->DT) (ammunition->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('brave', 'VBP'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (zzz->NN) (brave->VBP) (star->NN) (brave->VBP) (star->NN) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('brave', 'VBP'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (zzz->NN) (brave->VBP) (star->NN) (brave->VBP) (star->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('song', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (a->DT) (good->JJ) (song->NN) ')
candidates to check:
2
('tags initial-> ', [('who', 'WP'), ('s', 'VBP'), ('brave', 'VBP'), ('star', 'NN'), ('brad', 'NN')])
('tags -> ', '     (who->WP) (s->VBP) (brave->VBP) (star->NN) (brad->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('in', 'IN'), ('my', 'PRP$'), ('brave', 'NN'), ('star', 'NN'), ('book', 'NN')])
('tags -> ', '     (he->PRP) (s->VBZ) (in->IN) (my->PRP$) (brave->NN) (star->NN) (book->NN) ')
('tags initial-> ', [('oh', 'RB'), ('right', 'JJ')])
('tags -> ', '     (oh->RB) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('singing', 'VBG'), ('don', 'JJ'), ('t', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('open', 'JJ'), ('that', 'IN'), ('book', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('broken', 'JJ')])
('tags -> ', '     (xxx->NN) (singing->VBG) (don->JJ) (t->JJ) (don->NN) (t->NN) (open->JJ) (that->IN) (book->NN) (it->PRP) (s->VBZ) (broken->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('book', 'NN')])
('tags -> ', '     (what->WP) (book->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('brave', 'NN'), ('star', 'NN'), ('book', 'NN'), ('is', 'VBZ'), ('broken', 'VBN')])
('tags -> ', '     (the->DT) (brave->NN) (star->NN) (book->NN) (is->VBZ) (broken->VBN) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('yep', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) (yep->NN) ')
candidates to check:
1
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('pages', 'NNS'), ('are', 'VBP'), ('falling', 'VBG'), ('out', 'IN'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (all->PDT) (the->DT) (pages->NNS) (are->VBP) (falling->VBG) (out->IN) (of->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('pages', 'NNS'), ('are', 'VBP'), ('falling', 'VBG'), ('out', 'IN'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (all->PDT) (the->DT) (pages->NNS) (are->VBP) (falling->VBG) (out->IN) (of->IN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('it', 'PRP')])
('tags -> ', '     (xxx->NN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('will', 'MD'), ('get', 'VB'), ('you', 'PRP'), ('a', 'DT'), ('new', 'JJ'), ('book', 'NN')])
('tags -> ', '     (xxx->NN) (will->MD) (get->VB) (you->PRP) (a->DT) (new->JJ) (book->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (zzz->NN) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'CD'), ('oh', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->CD) (oh->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('bad', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (bad->JJ) ')
candidates to check:
3
descended from food: [['N'], 'butter', 16, 22]
descended from food: [['N'], 'margarine', 26, 35]
margarine
margarine margarine 717
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'NN'), ('or', 'CC'), ('margarine', 'NN')]
['margarine']
butter
butter butter 499
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'NN'), ('or', 'CC'), ('margarine', 'NN')]
['butter']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('butter', 'NN'), ('or', 'CC'), ('margarine', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (butter->NN) (or->CC) (margarine->NN) ')
candidates to check:
6
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN'), ('brave', 'VBP'), ('brad', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) (brave->VBP) (star->NN) (brave->VBP) (star->NN) (brave->VBP) (brad->NN) ')
candidates to check:
1
descended from food: [['N'], 'butter', 6, 12]
butter
butter butter 499
[('butter', 'NN'), ('please', 'NN')]
['butter']
('tags initial-> ', [('butter', 'NN'), ('please', 'NN')])
('tags -> ', '     (butter->NN) (please->NN) ')
('tags initial-> ', [('why', 'WRB'), ('not', 'RB'), ('enjoy', 'VB'), ('it', 'PRP')])
('tags -> ', '     (why->WRB) (not->RB) (enjoy->VB) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
candidates to check:
1
descended from food: [['N'], 'butter', 7, 13]
butter
butter butter 499
[('butter', 'NN'), ('xxx', 'NN')]
['butter']
('tags initial-> ', [('butter', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (butter->NN) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'butter', 51, 57]
butter
butter butter 499
[('oh', 'IN'), ('no', 'DT'), ('i', 'NN'), ('like', 'IN'), ('m', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('my', 'PRP$'), ('butter', 'NN'), ('that', 'WDT'), ('has', 'VBZ'), ('been', 'VBN'), ('left', 'VBN'), ('open', 'JJ'), ('like', 'IN'), ('that', 'DT'), ('thank', 'NN'), ('you', 'PRP'), ('very', 'RB'), ('much', 'RB')]
['butter']
('tags initial-> ', [('oh', 'IN'), ('no', 'DT'), ('i', 'NN'), ('like', 'IN'), ('m', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('my', 'PRP$'), ('butter', 'NN'), ('that', 'WDT'), ('has', 'VBZ'), ('been', 'VBN'), ('left', 'VBN'), ('open', 'JJ'), ('like', 'IN'), ('that', 'DT'), ('thank', 'NN'), ('you', 'PRP'), ('very', 'RB'), ('much', 'RB')])
('tags -> ', '     (oh->IN) (no->DT) (i->NN) (like->IN) (m->NN) (i->NN) (don->VBP) (t->NN) (like->IN) (my->PRP$) (butter->NN) (that->WDT) (has->VBZ) (been->VBN) (left->VBN) (open->JJ) (like->IN) (that->DT) (thank->NN) (you->PRP) (very->RB) (much->RB) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
('tags initial-> ', [('really', 'RB'), ('that', 'DT'), ('s', 'NN'), ('disgusting', 'VBG')])
('tags -> ', '     (really->RB) (that->DT) (s->NN) (disgusting->VBG) ')
('tags initial-> ', [('throw', 'NN'), ('that', 'DT'), ('away', 'RB')])
('tags -> ', '     (throw->NN) (that->DT) (away->RB) ')
candidates to check:
4
('tags initial-> ', [('brave', 'NN'), ('brave', 'VBP'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN'), ('brave', 'NN')])
('tags -> ', '     (brave->NN) (brave->VBP) (star->NN) (brave->VBP) (star->NN) (brave->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('such', 'PDT'), ('a', 'DT'), ('good', 'JJ'), ('singer', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (such->PDT) (a->DT) (good->JJ) (singer->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
descended from food: [['N'], 'catsup', 16, 22]
catsup
catsup catsup 101
[('you', 'PRP'), ('want', 'VBP'), ('catsup', 'NNS')]
['catsup']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('catsup', 'NNS')])
('tags -> ', '     (you->PRP) (want->VBP) (catsup->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
fish
fish fish 305
[('on', 'IN'), ('your', 'PRP$'), ('fish', 'JJ'), ('cakes', 'NNS')]
['fish']
('tags initial-> ', [('on', 'IN'), ('your', 'PRP$'), ('fish', 'JJ'), ('cakes', 'NNS')])
('tags -> ', '     (on->IN) (your->PRP$) (fish->JJ) (cakes->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('me', 'PRP'), ('me', 'PRP')])
('tags -> ', '     (me->PRP) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
descended from food: [['N'], 'juice', 6, 11]
juice
juice juice 52
[('juice', 'NN'), ('me', 'PRP'), ('me', 'PRP')]
['juice']
('tags initial-> ', [('juice', 'NN'), ('me', 'PRP'), ('me', 'PRP')])
('tags -> ', '     (juice->NN) (me->PRP) (me->PRP) ')
('tags initial-> ', [('me', 'PRP'), ('me', 'PRP')])
('tags -> ', '     (me->PRP) (me->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('and', 'CC')])
('tags -> ', '     (brave->VB) (star->NN) (and->CC) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
bread
bread bread 186
[('um', 'IN'), ('the', 'DT'), ('brown', 'JJ'), ('bread', 'NN'), ('s', 'NN'), ('in', 'IN'), ('there', 'EX')]
['bread']
('tags initial-> ', [('um', 'IN'), ('the', 'DT'), ('brown', 'JJ'), ('bread', 'NN'), ('s', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (um->IN) (the->DT) (brown->JJ) (bread->NN) (s->NN) (in->IN) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('dad', 'NN')])
('tags -> ', '     (dad->NN) ')
('tags initial-> ', [('wan', 'NN'), ('t', 'VBZ'), ('a', 'DT'), ('come', 'VBN'), ('out', 'IN'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (wan->NN) (t->VBZ) (a->DT) (come->VBN) (out->IN) (to->TO) (eat->VB) ')
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('brave', 'NN'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) (brave->NN) (brave->VBP) (star->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('come', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('kitchen', 'NN')])
('tags -> ', '     (come->VBN) (in->IN) (the->DT) (kitchen->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('say', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (say->VB) ')
candidates to check:
2
descended from food: [['N'], 'supper', 15, 21]
('tags initial-> ', [('time', 'NN'), ('for', 'IN'), ('supper', 'NN')])
('tags -> ', '     (time->NN) (for->IN) (supper->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
descended from food: [['N'], 'supper', 24, 30]
('tags initial-> ', [('why', 'WRB'), ('should', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('supper', 'VBN'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (why->WRB) (should->MD) (i->VB) (have->VBP) (supper->VBN) (with->IN) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
descended from food: [['N'], 'lunch', 19, 24]
('tags initial-> ', [('time', 'NN'), ('for', 'IN'), ('lunch', 'NN')])
('tags -> ', '     (time->NN) (for->IN) (lunch->NN) ')
candidates to check:
1
('tags initial-> ', [('isn', 'NN'), ('t', 'NN'), ('that', 'WDT'), ('xxx', 'VBD')])
('tags -> ', '     (isn->NN) (t->NN) (that->WDT) (xxx->VBD) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 21, 27]
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('have', 'VB'), ('supper', 'VBN'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->NNS) (have->VBP) (to->TO) (have->VB) (supper->VBN) (with->IN) (you->PRP) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('even', 'RB'), ('make', 'VBP'), ('anything', 'NN'), ('for', 'IN'), ('him', 'PRP')])
('tags -> ', '     (oh->UH) (i->NN) (didn->VBP) (t->NN) (even->RB) (make->VBP) (anything->NN) (for->IN) (him->PRP) ')
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
candidates to check:
1
('tags initial-> ', [('come', 'VBN'), ('eat', 'NN'), ('a', 'DT'), ('half', 'NN')])
('tags -> ', '     (come->VBN) (eat->NN) (a->DT) (half->NN) ')
candidates to check:
4
('tags initial-> ', [('brave', 'VB'), ('star', 'NN'), ('brave', 'VBP'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) (brave->VBP) (star->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('have', 'VB'), ('two', 'CD'), ('too', 'RB')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (have->VB) (two->CD) (too->RB) ')
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('hope', 'VBP'), ('you', 'PRP'), ('like', 'IN'), ('them', 'PRP')])
('tags -> ', '     (well->RB) (i->RB) (hope->VBP) (you->PRP) (like->IN) (them->PRP) ')
('tags initial-> ', [('if', 'IN'), ('he', 'PRP'), ('doesn', 'VBZ'), ('t', 'IN'), ('we', 'PRP'), ('ll', 'VBP'), ('help', 'VB'), ('him', 'PRP'), ('eat', 'VB'), ('them', 'PRP')])
('tags -> ', '     (if->IN) (he->PRP) (doesn->VBZ) (t->IN) (we->PRP) (ll->VBP) (help->VB) (him->PRP) (eat->VB) (them->PRP) ')
('tags initial-> ', [('how', 'WRB'), ('come', 'VB'), ('you', 'PRP'), ('wanted', 'VBD'), ('two', 'CD')])
('tags -> ', '     (how->WRB) (come->VB) (you->PRP) (wanted->VBD) (two->CD) ')
('tags initial-> ', [('because', 'IN')])
('tags -> ', '     (because->IN) ')
candidates to check:
3
descended from food: [['N'], 'sauce', 46, 51]
tartar sauce
tartar sauce tartar sauce 211
[('brad', 'NN'), ('made', 'VBD'), ('helped', 'VBD'), ('make', 'VB'), ('the', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['tartar', 'sauce']
sauce
sauce sauce 29
[('brad', 'NN'), ('made', 'VBD'), ('helped', 'VBD'), ('make', 'VB'), ('the', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['sauce']
('tags initial-> ', [('brad', 'NN'), ('made', 'VBD'), ('helped', 'VBD'), ('make', 'VB'), ('the', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')])
('tags -> ', '     (brad->NN) (made->VBD) (helped->VBD) (make->VB) (the->DT) (tartar->NN) (sauce->NN) ')
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP')])
('tags -> ', '     (did->VBD) (he->PRP) ')
candidates to check:
2
descended from food: [['N'], 'mayonnaise', 14, 24]
mayonnaise
mayonnaise mayonnaise 231
[('all', 'PDT'), ('the', 'DT'), ('mayonnaise', 'NN'), ('in', 'IN'), ('the', 'DT'), ('jar', 'NN')]
['mayonnaise']
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('mayonnaise', 'NN'), ('in', 'IN'), ('the', 'DT'), ('jar', 'NN')])
('tags -> ', '     (all->PDT) (the->DT) (mayonnaise->NN) (in->IN) (the->DT) (jar->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('put', 'VB'), ('his', 'PRP$'), ('fingers', 'NNS'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (did->VBD) (he->PRP) (put->VB) (his->PRP$) (fingers->NNS) (in->IN) (there->EX) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('very', 'RB'), ('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (he->PRP) (was->VBD) (very->RB) (very->RB) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('get', 'VBP'), ('a', 'DT'), ('spoon', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (i->NN) (get->VBP) (a->DT) (spoon->NN) (xxx->NN) ')
('tags initial-> ', [('learning', 'VBG'), ('how', 'WRB'), ('to', 'TO'), ('cook', 'VB'), ('huh', 'NN')])
('tags -> ', '     (learning->VBG) (how->WRB) (to->TO) (cook->VB) (huh->NN) ')
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('help', 'VBP'), ('me', 'PRP')])
('tags -> ', '     (didn->NN) (t->NN) (you->PRP) (help->VBP) (me->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('would', 'MD'), ('you', 'PRP'), ('like', 'VB')])
('tags -> ', '     (would->MD) (you->PRP) (like->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('have', 'VB')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (gon->VBP) (na->TO) (have->VB) ')
candidates to check:
1
descended from food: [['N'], 'milk', 6, 10]
milk
milk milk 46
[('milk', 'NN'), ('first', 'RB')]
['milk']
('tags initial-> ', [('milk', 'NN'), ('first', 'RB')])
('tags -> ', '     (milk->NN) (first->RB) ')
candidates to check:
1
descended from food: [['N'], 'juice', 11, 16]
juice
juice juice 52
[('then', 'RB'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('then', 'RB'), ('juice', 'NN')])
('tags -> ', '     (then->RB) (juice->NN) ')
('tags initial-> ', [('yyy', 'NN')])
('tags -> ', '     (yyy->NN) ')
candidates to check:
2
descended from food: [['N'], 'butter', 20, 26]
butter
butter butter 499
[('perhaps', 'RB'), ('i', 'JJ'), ('ll', 'VBP'), ('butter', 'VB'), ('your', 'PRP$'), ('piece', 'NN')]
['butter']
('tags initial-> ', [('perhaps', 'RB'), ('i', 'JJ'), ('ll', 'VBP'), ('butter', 'VB'), ('your', 'PRP$'), ('piece', 'NN')])
('tags -> ', '     (perhaps->RB) (i->JJ) (ll->VBP) (butter->VB) (your->PRP$) (piece->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
descended from food: [['N'], 'juice', 12, 17]
juice
juice juice 52
[('first', 'RB'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('first', 'RB'), ('juice', 'NN')])
('tags -> ', '     (first->RB) (juice->NN) ')
candidates to check:
1
descended from food: [['N'], 'beans', 20, 25]
beans
beans beans 105
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('beans', 'NNS')]
['beans']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('beans', 'NNS')])
('tags -> ', '     (you->PRP) (want->VBP) (some->DT) (beans->NNS) ')
candidates to check:
1
descended from food: [['N'], 'juice', 10, 15]
juice
juice juice 52
[('the', 'DT'), ('juice', 'NN'), ('first', 'RB')]
['juice']
('tags initial-> ', [('the', 'DT'), ('juice', 'NN'), ('first', 'RB')])
('tags -> ', '     (the->DT) (juice->NN) (first->RB) ')
candidates to check:
1
descended from food: [['N'], 'beans', 20, 25]
beans
beans beans 105
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('beans', 'NNS')]
['beans']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('beans', 'NNS')])
('tags -> ', '     (you->PRP) (want->VBP) (some->DT) (beans->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('here', 'RB'), ('xxx', 'NN')])
('tags -> ', '     (here->RB) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 6, 11]
juice
juice juice 52
[('juice', 'NN'), ('please', 'NN')]
['juice']
('tags initial-> ', [('juice', 'NN'), ('please', 'NN')])
('tags -> ', '     (juice->NN) (please->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
descended from food: [['N'], 'juice', 14, 19]
juice
juice juice 52
[('enough', 'JJ'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('enough', 'JJ'), ('juice', 'NN')])
('tags -> ', '     (enough->JJ) (juice->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('enough', 'RB')])
('tags -> ', '     (that->DT) (s->VBD) (enough->RB) ')
('tags initial-> ', [('mine', 'NN'), ('is', 'VBZ'), ('big', 'JJ')])
('tags -> ', '     (mine->NN) (is->VBZ) (big->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('the', 'DT'), ('little', 'JJ'), ('cup', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (the->DT) (little->JJ) (cup->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('big', 'JJ'), ('cup', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (the->DT) (big->JJ) (cup->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
5
('tags initial-> ', [('so', 'RB'), ('did', 'VBD'), ('you', 'PRP'), ('and', 'CC'), ('mommy', 'VB'), ('see', 'NN'), ('flowers', 'NNS'), ('today', 'NN')])
('tags -> ', '     (so->RB) (did->VBD) (you->PRP) (and->CC) (mommy->VB) (see->NN) (flowers->NNS) (today->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'tomatoes', 6, 14]
tomatoes
tomatoes tomatoes 213
[('tomatoes', 'NNS')]
['tomatoes']
('tags initial-> ', [('tomatoes', 'NNS')])
('tags -> ', '     (tomatoes->NNS) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
2
('tags initial-> ', [('here', 'RB'), ('you', 'PRP'), ('go', 'VBP'), ('lovey', 'JJ')])
('tags -> ', '     (here->RB) (you->PRP) (go->VBP) (lovey->JJ) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('you', 'PRP'), ('say', 'VBP'), ('there', 'EX'), ('was', 'VBD'), ('people', 'NNS'), ('dancing', 'VBG')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (you->PRP) (say->VBP) (there->EX) (was->VBD) (people->NNS) (dancing->VBG) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('weren', 'NNS'), ('t', 'IN'), ('they', 'PRP'), ('good', 'VBP')])
('tags -> ', '     (weren->NNS) (t->IN) (they->PRP) (good->VBP) ')
candidates to check:
2
('tags initial-> ', [('there', 'EX'), ('were', 'VBD'), ('sticks', 'NNS'), ('too', 'RB'), ('dad', 'JJ'), ('and', 'CC'), ('bells', 'NNS'), ('on', 'IN'), ('their', 'PRP$'), ('legs', 'NNS')])
('tags -> ', '     (there->EX) (were->VBD) (sticks->NNS) (too->RB) (dad->JJ) (and->CC) (bells->NNS) (on->IN) (their->PRP$) (legs->NNS) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('who', 'WP'), ('was', 'VBD'), ('collecting', 'VBG'), ('the', 'DT'), ('money', 'NN')])
('tags -> ', '     (who->WP) (was->VBD) (collecting->VBG) (the->DT) (money->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('horse', 'NN')])
('tags -> ', '     (the->DT) (horse->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('horse', 'NN'), ('was', 'VBD'), ('collecting', 'VBG'), ('the', 'DT'), ('money', 'NN')])
('tags -> ', '     (the->DT) (horse->NN) (was->VBD) (collecting->VBG) (the->DT) (money->NN) ')
candidates to check:
2
('tags initial-> ', [('how', 'WRB'), ('was', 'VBD'), ('the', 'DT'), ('horse', 'NN'), ('collecting', 'VBG'), ('the', 'DT'), ('money', 'NN')])
('tags -> ', '     (how->WRB) (was->VBD) (the->DT) (horse->NN) (collecting->VBG) (the->DT) (money->NN) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
candidates to check:
5
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('told', 'VBD'), ('him', 'PRP'), ('the', 'DT'), ('man', 'NN'), ('xxx', 'VBZ'), ('where', 'WRB'), ('the', 'DT'), ('where', 'WRB'), ('the', 'DT'), ('little', 'JJ'), ('holes', 'NNS'), ('are', 'VBP'), ('xxx', 'JJ'), ('put', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('money', 'NN'), ('in', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (told->VBD) (him->PRP) (the->DT) (man->NN) (xxx->VBZ) (where->WRB) (the->DT) (where->WRB) (the->DT) (little->JJ) (holes->NNS) (are->VBP) (xxx->JJ) (put->IN) (all->PDT) (the->DT) (money->NN) (in->IN) (xxx->NN) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('in', 'IN'), ('his', 'PRP$'), ('mouth', 'NN'), ('he', 'PRP'), ('threw', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (he->PRP) (in->IN) (his->PRP$) (mouth->NN) (he->PRP) (threw->VBD) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('horse', 'NN'), ('s', 'NN'), ('mouth', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (horse->NN) (s->NN) (mouth->NN) ')
candidates to check:
1
('tags initial-> ', [('in', 'IN'), ('yeah', 'NN'), ('and', 'CC'), ('down', 'IN'), ('his', 'PRP$'), ('throat', 'NN')])
('tags -> ', '     (in->IN) (yeah->NN) (and->CC) (down->IN) (his->PRP$) (throat->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('the', 'DT'), ('man', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (the->DT) (man->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('looked', 'VBD'), ('like', 'IN'), ('brad', 'NN'), ('xxx', 'NN'), ('right', 'RB'), ('down', 'RP'), ('his', 'PRP$'), ('throat', 'NN'), ('too', 'RB')])
('tags -> ', '     (it->PRP) (looked->VBD) (like->IN) (brad->NN) (xxx->NN) (right->RB) (down->RP) (his->PRP$) (throat->NN) (too->RB) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('awoh', 'NN')])
('tags -> ', '     (xxx->NN) (awoh->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB'), ('did', 'VBD'), ('he', 'PRP'), ('do', 'VB'), ('when', 'WRB'), ('you', 'PRP'), ('gave', 'VBD'), ('him', 'PRP'), ('money', 'NN'), ('brad', 'NN')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) (did->VBD) (he->PRP) (do->VB) (when->WRB) (you->PRP) (gave->VBD) (him->PRP) (money->NN) (brad->NN) ')
('tags initial-> ', [('beep', 'NN'), ('beep', 'NN')])
('tags -> ', '     (beep->NN) (beep->NN) ')
('tags initial-> ', [('beep', 'NN'), ('beep', 'NN')])
('tags -> ', '     (beep->NN) (beep->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('telling', 'VBG'), ('dad', 'NN'), ('he', 'PRP'), ('had', 'VBD'), ('one', 'CD'), ('of', 'IN'), ('those', 'DT'), ('um', 'NNS'), ('like', 'IN'), ('groucho', 'NN'), ('marx', 'NN')])
('tags -> ', '     (i->NN) (was->VBD) (telling->VBG) (dad->NN) (he->PRP) (had->VBD) (one->CD) (of->IN) (those->DT) (um->NNS) (like->IN) (groucho->NN) (marx->NN) ')
candidates to check:
1
('tags initial-> ', [('horns', 'NNS')])
('tags -> ', '     (horns->NNS) ')
candidates to check:
1
('tags initial-> ', [('horns', 'NNS'), ('yeah', 'NNS')])
('tags -> ', '     (horns->NNS) (yeah->NNS) ')
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('so', 'RB'), ('funny', 'JJ')])
('tags -> ', '     (that->DT) (was->VBD) (so->RB) (funny->JJ) ')
candidates to check:
1
('tags initial-> ', [('then', 'RB'), ('they', 'PRP'), ('had', 'VBD'), ('all', 'PDT'), ('the', 'DT'), ('dancers', 'NNS')])
('tags -> ', '     (then->RB) (they->PRP) (had->VBD) (all->PDT) (the->DT) (dancers->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('brad', 'NNS'), ('seen', 'VBN'), ('all', 'PDT'), ('that', 'DT'), ('did', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (brad->NNS) (seen->VBN) (all->PDT) (that->DT) (did->VBD) (you->PRP) ')
candidates to check:
3
('tags initial-> ', [('well', 'RB'), ('brad', 'RB'), ('wanted', 'VBN'), ('to', 'TO'), ('have', 'VB'), ('his', 'PRP$'), ('picnic', 'NN'), ('right', 'NN'), ('by', 'IN'), ('the', 'DT'), ('dancers', 'NNS'), ('so', 'IN'), ('he', 'PRP'), ('could', 'MD'), ('hear', 'VB'), ('the', 'DT'), ('music', 'NN')])
('tags -> ', '     (well->RB) (brad->RB) (wanted->VBN) (to->TO) (have->VB) (his->PRP$) (picnic->NN) (right->NN) (by->IN) (the->DT) (dancers->NNS) (so->IN) (he->PRP) (could->MD) (hear->VB) (the->DT) (music->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('that', 'DT'), ('way', 'NN'), ('it', 'PRP'), ('really', 'RB'), ('turned', 'VBD'), ('out', 'RP'), ('nice', 'JJ')])
('tags -> ', '     (so->RB) (that->DT) (way->NN) (it->PRP) (really->RB) (turned->VBD) (out->RP) (nice->JJ) ')
candidates to check:
3
('tags initial-> ', [('everybody', 'NN'), ('was', 'VBD'), ('going', 'VBG'), ('down', 'RB'), ('to', 'TO'), ('the', 'DT'), ('main', 'JJ'), ('house', 'NN')])
('tags -> ', '     (everybody->NN) (was->VBD) (going->VBG) (down->RB) (to->TO) (the->DT) (main->JJ) (house->NN) ')
candidates to check:
3
descended from food: [['N'], 'sauce', 21, 26]
tartar sauce
tartar sauce tartar sauce 211
[('oh', 'UH'), ('this', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['tartar', 'sauce']
sauce
sauce sauce 29
[('oh', 'UH'), ('this', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['sauce']
('tags initial-> ', [('oh', 'UH'), ('this', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')])
('tags -> ', '     (oh->UH) (this->DT) (tartar->NN) (sauce->NN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('they', 'PRP'), ('play', 'VB'), ('songs', 'NNS'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (did->VBD) (they->PRP) (play->VB) (songs->NNS) (for->IN) (you->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('songs', 'VBZ'), ('did', 'VBD'), ('they', 'PRP'), ('play', 'VB')])
('tags -> ', '     (what->WP) (songs->VBZ) (did->VBD) (they->PRP) (play->VB) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('they', 'PRP'), ('did', 'VBD'), ('more', 'JJR'), ('yyy', 'NN'), ('uh', 'IN'), ('dancing', 'VBG')])
('tags -> ', '     (they->PRP) (did->VBD) (more->JJR) (yyy->NN) (uh->IN) (dancing->VBG) ')
candidates to check:
2
('tags initial-> ', [('was', 'VBD'), ('it', 'PRP'), ('irish', 'JJ'), ('music', 'NN')])
('tags -> ', '     (was->VBD) (it->PRP) (irish->JJ) (music->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('brad', 'NN'), ('liked', 'VBD'), ('that', 'IN')])
('tags -> ', '     (brad->NN) (liked->VBD) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('said', 'VBD'), ('he', 'PRP'), ('liked', 'VBD'), ('having', 'VBG'), ('a', 'DT'), ('picnic', 'NN')])
('tags -> ', '     (said->VBD) (he->PRP) (liked->VBD) (having->VBG) (a->DT) (picnic->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('mama', 'VB'), ('do', 'VB'), ('after', 'IN'), ('we', 'PRP'), ('ate', 'VBP')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (mama->VB) (do->VB) (after->IN) (we->PRP) (ate->VBP) ')
('tags initial-> ', [('these', 'DT'), ('are', 'VBP'), ('delicious', 'JJ')])
('tags -> ', '     (these->DT) (are->VBP) (delicious->JJ) ')
candidates to check:
1
descended from food: [['N'], 'candy', 18, 23]
('tags initial-> ', [('you', 'PRP'), ('gave', 'VBD'), ('me', 'PRP'), ('candy', 'NN')])
('tags -> ', '     (you->PRP) (gave->VBD) (me->PRP) (candy->NN) ')
candidates to check:
1
descended from food: [['N'], 'candy', 17, 22]
('tags initial-> ', [('i', 'NNS'), ('gave', 'VBD'), ('you', 'PRP'), ('candy', 'NN')])
('tags -> ', '     (i->NNS) (gave->VBD) (you->PRP) (candy->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('didn', 'JJ'), ('t', 'NN'), ('i', 'NN'), ('read', 'VBP'), ('you', 'PRP'), ('a', 'DT'), ('story', 'NN')])
('tags -> ', '     (but->CC) (didn->JJ) (t->NN) (i->NN) (read->VBP) (you->PRP) (a->DT) (story->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('story', 'NN')])
('tags -> ', '     (what->WP) (story->NN) ')
('tags initial-> ', [('bambi', 'NN')])
('tags -> ', '     (bambi->NN) ')
('tags initial-> ', [('bambi', 'NN')])
('tags -> ', '     (bambi->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('xxx', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (i->NN) (know->VBP) (xxx->NN) (in->IN) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('xxx', 'NN'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (a->DT) (xxx->NN) (a->DT) (xxx->NN) ')
('tags initial-> ', [('a', 'DT'), ('what', 'WP')])
('tags -> ', '     (a->DT) (what->WP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('thoughts', 'NNS')])
('tags -> ', '     (a->DT) (lot->NN) (of->IN) (thoughts->NNS) ')
('tags initial-> ', [('pretend', 'NN')])
('tags -> ', '     (pretend->NN) ')
candidates to check:
3
fish
fish fish 305
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('fish', 'JJ'), ('cake', 'NN')]
['fish']
cake
cake cake 412
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('fish', 'JJ'), ('cake', 'NN')]
['cake']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('fish', 'JJ'), ('cake', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (me->PRP) (to->TO) (cut->VB) (your->PRP$) (fish->JJ) (cake->NN) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('delicious', 'JJ')])
('tags -> ', '     (they->PRP) (re->VBP) (delicious->JJ) ')
('tags initial-> ', [('xxx', 'NN'), ('having', 'VBG'), ('them', 'PRP'), ('in', 'IN'), ('too', 'RB'), ('long', 'JJ')])
('tags -> ', '     (xxx->NN) (having->VBG) (them->PRP) (in->IN) (too->RB) (long->JJ) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('they', 'PRP'), ('really', 'RB'), ('are', 'VBP'), ('good', 'JJ')])
('tags -> ', '     (they->PRP) (really->RB) (are->VBP) (good->JJ) ')
candidates to check:
1
descended from food: [['N'], 'beans', 23, 28]
beans
beans beans 105
[('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('some', 'DT'), ('beans', 'NNS')]
['beans']
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('some', 'DT'), ('beans', 'NNS')])
('tags -> ', '     (did->VBD) (you->PRP) (eat->VB) (some->DT) (beans->NNS) ')
('tags initial-> ', [('yeah', 'NN'), ('mommy', 'NN'), ('u', 'JJ'), ('um', 'NN')])
('tags -> ', '     (yeah->NN) (mommy->NN) (u->JJ) (um->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
3
('tags initial-> ', [('these', 'DT'), ('taste', 'NN'), ('like', 'IN'), ('the', 'DT'), ('ones', 'NNS'), ('you', 'PRP'), ('get', 'VBP'), ('out', 'IN'), ('of', 'IN'), ('town', 'NN')])
('tags -> ', '     (these->DT) (taste->NN) (like->IN) (the->DT) (ones->NNS) (you->PRP) (get->VBP) (out->IN) (of->IN) (town->NN) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('cut', 'VB'), ('this', 'DT'), ('too', 'RB')])
('tags -> ', '     (can->MD) (you->PRP) (cut->VB) (this->DT) (too->RB) ')
candidates to check:
2
descended from food: [['N'], 'bread', 36, 41]
bread
bread bread 186
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('brown', 'JJ'), ('bread', 'NN')]
['bread']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('brown', 'JJ'), ('bread', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (me->PRP) (to->TO) (cut->VB) (your->PRP$) (brown->JJ) (bread->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
fish
fish fish 305
[('okay', 'NN'), ('i', 'NN'), ('cut', 'VBD'), ('one', 'CD'), ('fish', 'NN'), ('stick', 'NN'), ('xxx', 'NN')]
['fish']
('tags initial-> ', [('okay', 'NN'), ('i', 'NN'), ('cut', 'VBD'), ('one', 'CD'), ('fish', 'NN'), ('stick', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (okay->NN) (i->NN) (cut->VBD) (one->CD) (fish->NN) (stick->NN) (xxx->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
2
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('did', 'VBD'), ('you', 'PRP'), ('tell', 'VB'), ('dad', 'VB'), ('how', 'WRB'), ('you', 'PRP'), ('ran', 'VBP'), ('down', 'RP'), ('the', 'DT'), ('hill', 'NN')])
('tags -> ', '     (and->CC) (did->VBD) (you->PRP) (tell->VB) (dad->VB) (how->WRB) (you->PRP) (ran->VBP) (down->RP) (the->DT) (hill->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ran', 'VBD'), ('down', 'RB'), ('the', 'DT'), ('hill', 'NN')])
('tags -> ', '     (i->NN) (ran->VBD) (down->RB) (the->DT) (hill->NN) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('running', 'VBG'), ('down', 'RB'), ('and', 'CC'), ('xxx', 'VB')])
('tags -> ', '     (he->PRP) (was->VBD) (running->VBG) (down->RB) (and->CC) (xxx->VB) ')
candidates to check:
2
rolls
rolls rolls 276
[('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('times', 'NNS'), ('he', 'PRP'), ('fell', 'VBD'), ('and', 'CC'), ('rolls', 'NNS')]
['rolls']
('tags initial-> ', [('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('times', 'NNS'), ('he', 'PRP'), ('fell', 'VBD'), ('and', 'CC'), ('rolls', 'NNS')])
('tags -> ', '     (a->DT) (couple->NN) (of->IN) (times->NNS) (he->PRP) (fell->VBD) (and->CC) (rolls->NNS) ')
candidates to check:
1
('tags initial-> ', [('way', 'NN'), ('way', 'NN'), ('down', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (way->NN) (way->NN) (down->IN) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('he', 'PRP'), ('loved', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (he->PRP) (loved->VBD) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('ma', 'NN'), ('said', 'VBD'), ('we', 'PRP'), ('were', 'VBD'), ('up', 'RB'), ('on', 'IN'), ('top', 'NN'), ('of', 'IN'), ('the', 'DT'), ('hill', 'NN'), ('and', 'CC'), ('brad', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('wait', 'NN'), ('to', 'TO'), ('run', 'VB'), ('down', 'RP'), ('it', 'PRP')])
('tags -> ', '     (ma->NN) (said->VBD) (we->PRP) (were->VBD) (up->RB) (on->IN) (top->NN) (of->IN) (the->DT) (hill->NN) (and->CC) (brad->NN) (couldn->NN) (t->NN) (wait->NN) (to->TO) (run->VB) (down->RP) (it->PRP) ')
('tags initial-> ', [('ma', 'NN'), ('says', 'VBZ'), ('okay', 'IN'), ('brad', 'NN'), ('do', 'VBP'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'VBP'), ('down', 'RP'), ('here', 'RB'), ('now', 'RB')])
('tags -> ', '     (ma->NN) (says->VBZ) (okay->IN) (brad->NN) (do->VBP) (you->PRP) (wan->VB) (t->JJ) (t->NN) (a->DT) (go->VBP) (down->RP) (here->RB) (now->RB) ')
('tags initial-> ', [('and', 'CC'), ('brad', 'VB'), ('yells', 'NNS'), ('out', 'RP'), ('yay', 'NN')])
('tags -> ', '     (and->CC) (brad->VB) (yells->NNS) (out->RP) (yay->NN) ')
candidates to check:
1
('tags initial-> ', [('zzz', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('ran', 'VBD'), ('down', 'RP'), ('the', 'DT'), ('hill', 'NN'), ('just', 'RB'), ('as', 'RB'), ('fast', 'RB'), ('as', 'IN'), ('he', 'PRP'), ('could', 'MD')])
('tags -> ', '     (zzz->NN) (and->CC) (he->PRP) (ran->VBD) (down->RP) (the->DT) (hill->NN) (just->RB) (as->RB) (fast->RB) (as->IN) (he->PRP) (could->MD) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('looked', 'VBD'), ('like', 'IN'), ('if', 'IN'), ('we', 'PRP'), ('stayed', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('top', 'JJ'), ('where', 'WRB'), ('we', 'PRP'), ('were', 'VBD'), ('that', 'IN'), ('we', 'PRP'), ('were', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('end', 'VB'), ('up', 'RP'), ('on', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('side', 'NN'), ('of', 'IN'), ('the', 'DT'), ('arboretum', 'NN')])
('tags -> ', '     (it->PRP) (looked->VBD) (like->IN) (if->IN) (we->PRP) (stayed->VBD) (on->IN) (the->DT) (top->JJ) (where->WRB) (we->PRP) (were->VBD) (that->IN) (we->PRP) (were->VBD) (gon->VBG) (na->TO) (end->VB) (up->RP) (on->IN) (the->DT) (other->JJ) (side->NN) (of->IN) (the->DT) (arboretum->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('so', 'RB'), ('i', 'JJ'), ('says', 'VBZ'), ('well', 'RB')])
('tags -> ', '     (zzz->NN) (so->RB) (i->JJ) (says->VBZ) (well->RB) ')
candidates to check:
2
('tags initial-> ', [('let', 'VB'), ('s', 'PRP'), ('take', 'VB'), ('this', 'DT'), ('road', 'NN'), ('back', 'RB'), ('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('church', 'NN'), ('right', 'NN')])
('tags -> ', '     (let->VB) (s->PRP) (take->VB) (this->DT) (road->NN) (back->RB) (there->RB) (s->VBZ) (a->DT) (church->NN) (right->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('did', 'VBD'), ('go', 'VB'), ('across', 'IN'), ('the', 'DT'), ('original', 'JJ'), ('road', 'NN'), ('we', 'PRP'), ('were', 'VBD'), ('on', 'IN')])
('tags -> ', '     (we->PRP) (did->VBD) (go->VB) (across->IN) (the->DT) (original->JJ) (road->NN) (we->PRP) (were->VBD) (on->IN) ')
('tags initial-> ', [('stop', 'NN')])
('tags -> ', '     (stop->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
4
('tags initial-> ', [('xxx', 'VB'), ('my', 'PRP$'), ('mama', 'NN'), ('my', 'PRP$'), ('mama', 'NN'), ('to', 'TO'), ('ask', 'VB'), ('people', 'NNS'), ('if', 'IN'), ('we', 'PRP'), ('could', 'MD'), ('know', 'VB'), ('where', 'WRB'), ('the', 'DT'), ('um', 'NN'), ('where', 'WRB'), ('the', 'DT')])
('tags -> ', '     (xxx->VB) (my->PRP$) (mama->NN) (my->PRP$) (mama->NN) (to->TO) (ask->VB) (people->NNS) (if->IN) (we->PRP) (could->MD) (know->VB) (where->WRB) (the->DT) (um->NN) (where->WRB) (the->DT) ')
('tags initial-> ', [('arboretum', 'NN')])
('tags -> ', '     (arboretum->NN) ')
('tags initial-> ', [('where', 'WRB'), ('the', 'DT'), ('arboretum', 'NN'), ('was', 'VBD')])
('tags -> ', '     (where->WRB) (the->DT) (arboretum->NN) (was->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('xxx', 'NNS'), ('but', 'CC'), ('you', 'PRP'), ('did', 'VBD'), ('find', 'VB'), ('out', 'RP'), ('how', 'WRB'), ('to', 'TO'), ('get', 'VB'), ('there', 'RB'), ('huh', 'VB')])
('tags -> ', '     (xxx->NNS) (but->CC) (you->PRP) (did->VBD) (find->VB) (out->RP) (how->WRB) (to->TO) (get->VB) (there->RB) (huh->VB) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
candidates to check:
1
('tags initial-> ', [('some', 'DT'), ('people', 'NNS')])
('tags -> ', '     (some->DT) (people->NNS) ')
candidates to check:
1
('tags initial-> ', [('some', 'DT'), ('people', 'NNS'), ('told', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (some->DT) (people->NNS) (told->VBD) (you->PRP) ')
candidates to check:
3
('tags initial-> ', [('so', 'RB'), ('my', 'PRP$'), ('mama', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (so->RB) (my->PRP$) (mama->NN) (xxx->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (did->VBD) (you->PRP) (like->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('did', 'VBD'), ('the', 'DT'), ('flowers', 'NNS'), ('smell', 'VBP')])
('tags -> ', '     (how->WRB) (did->VBD) (the->DT) (flowers->NNS) (smell->VBP) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('smell', 'NN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (smell->NN) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('smelled', 'VBD'), ('some', 'DT')])
('tags -> ', '     (i->NN) (smelled->VBD) (some->DT) ')
('tags initial-> ', [('and', 'CC'), ('how', 'WRB'), ('did', 'VBD'), ('they', 'PRP'), ('smell', 'VB')])
('tags -> ', '     (and->CC) (how->WRB) (did->VBD) (they->PRP) (smell->VB) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('smelled', 'VBD'), ('the', 'DT'), ('lilacs', 'NN')])
('tags -> ', '     (you->PRP) (smelled->VBD) (the->DT) (lilacs->NN) ')
('tags initial-> ', [('there', 'EX'), ('were', 'VBD'), ('some', 'DT'), ('they', 'PRP'), ('was', 'VBD'), ('two', 'CD'), ('yyy', 'NN')])
('tags -> ', '     (there->EX) (were->VBD) (some->DT) (they->PRP) (was->VBD) (two->CD) (yyy->NN) ')
candidates to check:
1
('tags initial-> ', [('two', 'CD'), ('lilacs', 'NN')])
('tags -> ', '     (two->CD) (lilacs->NN) ')
candidates to check:
8
('tags initial-> ', [('purple', 'JJ'), ('ones', 'NNS'), ('and', 'CC'), ('pink', 'VB'), ('ones', 'NNS'), ('and', 'CC'), ('white', 'JJ'), ('ones', 'NNS'), ('and', 'CC'), ('lilac', 'NN'), ('ones', 'NNS')])
('tags -> ', '     (purple->JJ) (ones->NNS) (and->CC) (pink->VB) (ones->NNS) (and->CC) (white->JJ) (ones->NNS) (and->CC) (lilac->NN) (ones->NNS) ')
('tags initial-> ', [('the', 'DT'), ('purple', 'NN')])
('tags -> ', '     (the->DT) (purple->NN) ')
('tags initial-> ', [('they', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('smell', 'NN'), ('that', 'WDT'), ('good', 'JJ')])
('tags -> ', '     (they->PRP) (didn->VBP) (t->JJ) (smell->NN) (that->WDT) (good->JJ) ')
('tags initial-> ', [('they', 'PRP'), ('were', 'VBD'), ('deep', 'JJ'), ('deep', 'JJ'), ('purple', 'NN')])
('tags -> ', '     (they->PRP) (were->VBD) (deep->JJ) (deep->JJ) (purple->NN) ')
candidates to check:
2
descended from food: [['N'], 'grapes', 38, 44]
grapes
grapes grapes 76
[('looked', 'VBN'), ('like', 'IN'), ('a', 'DT'), ('bunch', 'NN'), ('of', 'IN'), ('concord', 'NN'), ('grapes', 'NNS')]
['grapes']
('tags initial-> ', [('looked', 'VBN'), ('like', 'IN'), ('a', 'DT'), ('bunch', 'NN'), ('of', 'IN'), ('concord', 'NN'), ('grapes', 'NNS')])
('tags -> ', '     (looked->VBN) (like->IN) (a->DT) (bunch->NN) (of->IN) (concord->NN) (grapes->NNS) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('but', 'CC'), ('they', 'PRP'), ('didn', 'VBP'), ('t', 'RB'), ('smell', 'RB'), ('as', 'RB'), ('pretty', 'RB'), ('as', 'IN'), ('the', 'DT'), ('white', 'JJ'), ('and', 'CC'), ('the', 'DT'), ('light', 'JJ'), ('purple', 'NN')])
('tags -> ', '     (but->CC) (they->PRP) (didn->VBP) (t->RB) (smell->RB) (as->RB) (pretty->RB) (as->IN) (the->DT) (white->JJ) (and->CC) (the->DT) (light->JJ) (purple->NN) ')
('tags initial-> ', [('the', 'DT'), ('white', 'JJ'), ('those', 'DT'), ('two', 'CD'), ('smelled', 'VBD'), ('the', 'DT'), ('best', 'JJS')])
('tags -> ', '     (the->DT) (white->JJ) (those->DT) (two->CD) (smelled->VBD) (the->DT) (best->JJS) ')
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('hear', 'VBP'), ('xxx', 'JJ'), ('and', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('true', 'JJ')])
('tags -> ', '     (didn->NN) (t->NN) (you->PRP) (hear->VBP) (xxx->JJ) (and->CC) (it->PRP) (s->VBZ) (true->JJ) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('really', 'RB'), ('wanted', 'VBD'), ('to', 'TO'), ('have', 'VB'), ('a', 'DT'), ('picnic', 'NN')])
('tags -> ', '     (xxx->NNS) (really->RB) (wanted->VBD) (to->TO) (have->VB) (a->DT) (picnic->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('could', 'MD'), ('all', 'VB'), ('you', 'PRP'), ('could', 'MD'), ('smell', 'VB'), ('was', 'VBD'), ('the', 'DT'), ('lilacs', 'NN'), ('and', 'CC'), ('one', 'CD'), ('lady', 'NN'), ('was', 'VBD'), ('sitting', 'VBG'), ('across', 'IN')])
('tags -> ', '     (you->PRP) (could->MD) (all->VB) (you->PRP) (could->MD) (smell->VB) (was->VBD) (the->DT) (lilacs->NN) (and->CC) (one->CD) (lady->NN) (was->VBD) (sitting->VBG) (across->IN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('s', 'VBZ'), ('the', 'DT'), ('tree', 'NN')])
('tags -> ', '     (here->RB) (s->VBZ) (the->DT) (tree->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('here', 'RB'), ('she', 'PRP'), ('was', 'VBD'), ('reading', 'VBG'), ('a', 'DT'), ('book', 'NN')])
('tags -> ', '     (and->CC) (here->RB) (she->PRP) (was->VBD) (reading->VBG) (a->DT) (book->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('i', 'NN'), ('bet', 'VBD'), ('she', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBD'), ('a', 'DT'), ('leave', 'NN'), ('that', 'WDT'), ('smell', 'NN')])
('tags -> ', '     (i->NN) (bet->VBD) (she->PRP) (didn->VBZ) (t->JJ) (wan->NN) (t->NN) (t->VBD) (a->DT) (leave->NN) (that->WDT) (smell->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('pouring', 'VBG'), ('out', 'RP')])
('tags -> ', '     (it->PRP) (s->VBD) (pouring->VBG) (out->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('thing', 'NN'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'RB'), ('go', 'VBP'), ('out', 'RP'), ('bra', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (good->JJ) (thing->NN) (we->PRP) (didn->VBP) (t->RB) (go->VBP) (out->RP) (bra->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('glad', 'JJ'), ('i', 'NN'), ('got', 'VBD')])
('tags -> ', '     (i->JJ) (m->VBP) (glad->JJ) (i->NN) (got->VBD) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('raining', 'VBG')])
('tags -> ', '     (it->PRP) (s->VBD) (raining->VBG) ')
candidates to check:
1
('tags initial-> ', [('home', 'NN'), ('when', 'WRB'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (home->NN) (when->WRB) (i->NN) (did->VBD) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('pouring', 'VBG')])
('tags -> ', '     (be->VB) (cause->NN) (it->PRP) (s->VBD) (pouring->VBG) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('went', 'VBD'), ('down', 'RB'), ('to', 'TO'), ('the', 'DT'), ('river', 'NN'), ('to', 'TO'), ('watch', 'VB'), ('the', 'DT'), ('boats', 'NNS'), ('for', 'IN'), ('about', 'IN'), ('five', 'CD'), ('minutes', 'NNS')])
('tags -> ', '     (i->NN) (went->VBD) (down->RB) (to->TO) (the->DT) (river->NN) (to->TO) (watch->VB) (the->DT) (boats->NNS) (for->IN) (about->IN) (five->CD) (minutes->NNS) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('xxx', 'JJ'), ('xxx', 'RB'), ('now', 'RB')])
('tags -> ', '     (is->VBZ) (it->PRP) (xxx->JJ) (xxx->RB) (now->RB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('raining', 'VBG')])
('tags -> ', '     (it->PRP) (s->VBD) (raining->VBG) ')
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('s', 'VBD'), ('dirty', 'JJ'), ('outside', 'RB'), ('now', 'RB')])
('tags -> ', '     (and->CC) (it->PRP) (s->VBD) (dirty->JJ) (outside->RB) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'RB'), ('wanted', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('park', 'NN')])
('tags -> ', '     (but->CC) (i->RB) (wanted->VBD) (to->TO) (go->VB) (to->TO) (the->DT) (park->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('park', 'NN'), ('now', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('raining', 'VBG')])
('tags -> ', '     (we->PRP) (can->MD) (t->VB) (go->VB) (to->TO) (the->DT) (park->NN) (now->RB) (it->PRP) (s->VBZ) (raining->VBG) ')
candidates to check:
3
fish
fish fish 305
[('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (fish->NN) (store->NN) ')
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB')])
('tags -> ', '     (well->RB) (you->PRP) (can->MD) (t->VB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('raining', 'VBG')])
('tags -> ', '     (it->PRP) (s->VBD) (raining->VBG) ')
candidates to check:
5
fish
fish fish 305
[('did', 'VBD'), ('you', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('fish', 'JJ'), ('man', 'NN'), ('go', 'VBP'), ('home', 'NN')]
['fish']
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('fish', 'JJ'), ('man', 'NN'), ('go', 'VBP'), ('home', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (see->VB) (the->DT) (fish->JJ) (man->NN) (go->VBP) (home->NN) ')
candidates to check:
3
fish
fish fish 305
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (to->TO) (go->VB) (to->TO) (the->DT) (fish->NN) (store->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VB'), ('what', 'WP'), ('time', 'NN'), ('they', 'PRP'), ('close', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VB) (what->WP) (time->NN) (they->PRP) (close->VBP) ')
candidates to check:
3
('tags initial-> ', [('maybe', 'RB'), ('we', 'PRP'), ('could', 'MD'), ('put', 'VB'), ('on', 'IN'), ('our', 'PRP$'), ('rain', 'NN'), ('coats', 'NNS')])
('tags -> ', '     (maybe->RB) (we->PRP) (could->MD) (put->VB) (on->IN) (our->PRP$) (rain->NN) (coats->NNS) ')
candidates to check:
3
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('got', 'VB'), ('a', 'DT'), ('rain', 'NN'), ('coat', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (got->VB) (a->DT) (rain->NN) (coat->NN) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('but', 'CC'), ('i', 'VBZ'), ('ll', 'VBP'), ('wear', 'IN'), ('something', 'NN')])
('tags -> ', '     (no->DT) (but->CC) (i->VBZ) (ll->VBP) (wear->IN) (something->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('let', 'NN'), ('mommy', 'NN'), ('use', 'VB'), ('my', 'PRP$'), ('umbrella', 'NN')])
('tags -> ', '     (i->NN) (ll->VBP) (let->NN) (mommy->NN) (use->VB) (my->PRP$) (umbrella->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('if', 'IN'), ('if', 'IN'), ('she', 'PRP'), ('has', 'VBZ')])
('tags -> ', '     (if->IN) (if->IN) (she->PRP) (has->VBZ) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('thunder', 'NN')])
('tags -> ', '     (thunder->NN) ')
candidates to check:
1
('tags initial-> ', [('thunder', 'NN')])
('tags -> ', '     (thunder->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
3
fish
fish fish 305
[('we', 'PRP'), ('can', 'MD'), ('we', 'PRP'), ('can', 'MD'), ('run', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('we', 'PRP'), ('can', 'MD'), ('run', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')])
('tags -> ', '     (we->PRP) (can->MD) (we->PRP) (can->MD) (run->VB) (to->TO) (the->DT) (fish->NN) (store->NN) ')
candidates to check:
2
('tags initial-> ', [('then', 'RB'), ('we', 'PRP'), ('can', 'MD'), ('run', 'VB'), ('back', 'RB'), ('home', 'NN'), ('with', 'IN'), ('our', 'PRP$'), ('feet', 'NNS'), ('like', 'IN'), ('like', 'IN'), ('like', 'IN'), ('like', 'IN'), ('i', 'NN'), ('always', 'RB'), ('do', 'VBP')])
('tags -> ', '     (then->RB) (we->PRP) (can->MD) (run->VB) (back->RB) (home->NN) (with->IN) (our->PRP$) (feet->NNS) (like->IN) (like->IN) (like->IN) (like->IN) (i->NN) (always->RB) (do->VBP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('so', 'RB'), ('so', 'RB'), ('the', 'DT'), ('thunder', 'NN'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'VB'), ('us', 'PRP'), ('right', 'RB')])
('tags -> ', '     (and->CC) (and->CC) (so->RB) (so->RB) (the->DT) (thunder->NN) (won->VBD) (t->JJ) (get->VB) (us->PRP) (right->RB) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP'), ('the', 'DT'), ('thunder', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) (the->DT) (thunder->NN) (is->VBZ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('thunder', 'NN'), ('and', 'CC'), ('lightning', 'NN')])
('tags -> ', '     (thunder->NN) (and->CC) (lightning->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('thunder', 'NN'), ('is', 'VBZ'), ('when', 'WRB'), ('uh', 'JJ'), ('the', 'DT'), ('angels', 'NNS'), ('are', 'VBP'), ('upstairs', 'JJ'), ('bowling', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (thunder->NN) (is->VBZ) (when->WRB) (uh->JJ) (the->DT) (angels->NNS) (are->VBP) (upstairs->JJ) (bowling->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('s', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('them', 'PRP'), ('just', 'RB'), ('got', 'VBD'), ('a', 'DT'), ('spare', 'NN')])
('tags -> ', '     (and->CC) (that->DT) (s->VBP) (one->CD) (of->IN) (them->PRP) (just->RB) (got->VBD) (a->DT) (spare->NN) ')
candidates to check:
1
bear
bear bear 130
[('brad', 'NN'), ('should', 'MD'), ('get', 'VB'), ('out', 'RP'), ('his', 'PRP$'), ('berenstein', 'NN'), ('bear', 'IN'), ('oh', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('going', 'VBG'), ('t', 'NN'), ('a', 'DT'), ('have', 'VBP'), ('to', 'TO'), ('let', 'VB'), ('ma', 'PRP'), ('read', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('that', 'IN'), ('ll', 'NN'), ('tell', 'VB'), ('her', 'PRP$'), ('what', 'WP'), ('thunder', 'NN'), ('is', 'VBZ'), ('huh', 'JJ')]
['bear']
('tags initial-> ', [('brad', 'NN'), ('should', 'MD'), ('get', 'VB'), ('out', 'RP'), ('his', 'PRP$'), ('berenstein', 'NN'), ('bear', 'IN'), ('oh', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('going', 'VBG'), ('t', 'NN'), ('a', 'DT'), ('have', 'VBP'), ('to', 'TO'), ('let', 'VB'), ('ma', 'PRP'), ('read', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('that', 'IN'), ('ll', 'NN'), ('tell', 'VB'), ('her', 'PRP$'), ('what', 'WP'), ('thunder', 'NN'), ('is', 'VBZ'), ('huh', 'JJ')])
('tags -> ', '     (brad->NN) (should->MD) (get->VB) (out->RP) (his->PRP$) (berenstein->NN) (bear->IN) (oh->JJ) (i->NN) (m->VBP) (going->VBG) (t->NN) (a->DT) (have->VBP) (to->TO) (let->VB) (ma->PRP) (read->VB) (it->PRP) (and->CC) (that->IN) (ll->NN) (tell->VB) (her->PRP$) (what->WP) (thunder->NN) (is->VBZ) (huh->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('tells', 'NNS'), ('e', 'VBP'), ('all', 'DT'), ('about', 'IN'), ('thunder', 'NN'), ('and', 'CC')])
('tags -> ', '     (tells->NNS) (e->VBP) (all->DT) (about->IN) (thunder->NN) (and->CC) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('the', 'DT'), ('energy', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (the->DT) (energy->NN) ')
candidates to check:
3
('tags initial-> ', [('why', 'WRB'), ('should', 'MD'), ('why', 'WRB'), ('should', 'MD'), ('he', 'PRP'), ('be', 'VB'), ('brought', 'VBN'), ('up', 'RP'), ('on', 'IN'), ('a', 'DT'), ('different', 'JJ'), ('story', 'NN'), ('than', 'IN'), ('you', 'PRP'), ('people', 'NNS'), ('were', 'VBD')])
('tags -> ', '     (why->WRB) (should->MD) (why->WRB) (should->MD) (he->PRP) (be->VB) (brought->VBN) (up->RP) (on->IN) (a->DT) (different->JJ) (story->NN) (than->IN) (you->PRP) (people->NNS) (were->VBD) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('because', 'IN'), ('that', 'DT'), ('s', 'NN'), ('because', 'IN'), ('xxx', 'NNP'), ('mother', 'NN'), ('vacuum', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (because->IN) (that->DT) (s->NN) (because->IN) (xxx->NNP) (mother->NN) (vacuum->NN) (in->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('the', 'DT'), ('energy', 'NN'), ('huh', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (the->DT) (energy->NN) (huh->NN) ')
candidates to check:
3
('tags initial-> ', [('thunder', 'NN'), ('is', 'VBZ'), ('caused', 'VBN'), ('by', 'IN'), ('energy', 'NN'), ('in', 'IN'), ('the', 'DT'), ('clouds', 'NN')])
('tags -> ', '     (thunder->NN) (is->VBZ) (caused->VBN) (by->IN) (energy->NN) (in->IN) (the->DT) (clouds->NN) ')
candidates to check:
6
('tags initial-> ', [('yeah', 'NN'), ('yyy', 'NN'), ('yeah', 'NN'), ('but', 'CC'), ('but', 'CC'), ('one', 'CD'), ('day', 'NN'), ('i', 'NN'), ('was', 'VBD'), ('sleeping', 'VBG'), ('in', 'IN'), ('my', 'PRP$'), ('bed', 'NN'), ('for', 'IN'), ('for', 'IN'), ('a', 'DT'), ('long', 'JJ'), ('long', 'JJ'), ('time', 'NN'), ('and', 'CC'), ('thunder', 'NN'), ('and', 'CC'), ('lightning', 'VBG'), ('came', 'VBD'), ('from', 'IN'), ('outside', 'IN'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('trying', 'VBG'), ('to', 'TO'), ('zzz', 'VB')])
('tags -> ', '     (yeah->NN) (yyy->NN) (yeah->NN) (but->CC) (but->CC) (one->CD) (day->NN) (i->NN) (was->VBD) (sleeping->VBG) (in->IN) (my->PRP$) (bed->NN) (for->IN) (for->IN) (a->DT) (long->JJ) (long->JJ) (time->NN) (and->CC) (thunder->NN) (and->CC) (lightning->VBG) (came->VBD) (from->IN) (outside->IN) (and->CC) (i->NN) (was->VBD) (trying->VBG) (to->TO) (zzz->VB) ')
('tags initial-> ', [('oh', 'UH'), ('brad', 'NN')])
('tags -> ', '     (oh->UH) (brad->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('trying', 'VBG'), ('to', 'TO'), ('find', 'VB'), ('something', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('yellow', 'JJ'), ('outside', 'RB'), ('in', 'IN'), ('the', 'DT'), ('dark', 'NN'), ('all', 'DT'), ('by', 'IN'), ('itself', 'PRP')])
('tags -> ', '     (and->CC) (i->NN) (was->VBD) (trying->VBG) (to->TO) (find->VB) (something->NN) (that->WDT) (was->VBD) (yellow->JJ) (outside->RB) (in->IN) (the->DT) (dark->NN) (all->DT) (by->IN) (itself->PRP) ')
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('came', 'VBD'), ('out', 'RP')])
('tags -> ', '     (and->CC) (it->PRP) (came->VBD) (out->RP) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('was', 'VBD'), ('thunder', 'NN'), ('and', 'CC'), ('lightning', 'NN'), ('and', 'CC'), ('i', 'NN'), ('hided', 'VBD'), ('n', 'RB'), ('from', 'IN'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (it->PRP) (was->VBD) (thunder->NN) (and->CC) (lightning->NN) (and->CC) (i->NN) (hided->VBD) (n->RB) (from->IN) (it->PRP) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('hided', 'VBD'), ('n', 'RB'), ('from', 'IN'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (you->PRP) (hided->VBD) (n->RB) (from->IN) (it->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('hide', 'VB')])
('tags -> ', '     (where->WRB) (did->VBD) (you->PRP) (hide->VB) ')
candidates to check:
1
('tags initial-> ', [('under', 'IN'), ('your', 'PRP$'), ('blankets', 'NNS')])
('tags -> ', '     (under->IN) (your->PRP$) (blankets->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('under', 'IN'), ('my', 'PRP$'), ('covers', 'NNS')])
('tags -> ', '     (no->DT) (under->IN) (my->PRP$) (covers->NNS) ')
candidates to check:
1
('tags initial-> ', [('under', 'IN'), ('your', 'PRP$'), ('covers', 'NNS')])
('tags -> ', '     (under->IN) (your->PRP$) (covers->NNS) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'JJ'), ('na', 'TO'), ('eat', 'VB')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->JJ) (na->TO) (eat->VB) ')
('tags initial-> ', [('like', 'IN'), ('like', 'IN'), ('like', 'IN'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('sleeping', 'VBG'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('xxx', 'JJ')])
('tags -> ', '     (like->IN) (like->IN) (like->IN) (when->WRB) (i->NN) (was->VBD) (sleeping->VBG) (and->CC) (i->NN) (was->VBD) (xxx->JJ) ')
candidates to check:
2
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('always', 'RB'), ('pull', 'VBP'), ('the', 'DT'), ('covers', 'NNS'), ('up', 'RP'), ('over', 'IN'), ('your', 'PRP$'), ('head', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (always->RB) (pull->VBP) (the->DT) (covers->NNS) (up->RP) (over->IN) (your->PRP$) (head->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('only', 'RB'), ('has', 'VBZ'), ('one', 'CD'), ('blanket', 'NN')])
('tags -> ', '     (he->PRP) (only->RB) (has->VBZ) (one->CD) (blanket->NN) ')
candidates to check:
1
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('rest', 'NN'), ('are', 'VBP'), ('covers', 'NNS')])
('tags -> ', '     (all->PDT) (the->DT) (rest->NN) (are->VBP) (covers->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (mama->NN) (i->NN) (m->VBP) (all->DT) (done->VBN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('much', 'JJ')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->JJ) (eat->NN) (much->JJ) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('feel', 'VBP'), ('good', 'JJ')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (feel->VBP) (good->JJ) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('eat', 'NN'), ('anything', 'NN')])
('tags -> ', '     (he->PRP) (didn->VBZ) (t->JJ) (eat->NN) (anything->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 52, 56]
milk
milk milk 46
[('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN'), ('though', 'IN'), ('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN'), ('though', 'IN'), ('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('milk', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (all->DT) (i->JJ) (m->VBP) (all->DT) (done->VBN) (though->IN) (i->NN) (want->VBP) (some->DT) (milk->NN) ')
candidates to check:
1
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('rinse', 'VB'), ('your', 'PRP$'), ('cup', 'NN')])
('tags -> ', '     (let->VB) (me->PRP) (rinse->VB) (your->PRP$) (cup->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('brad', 'NN')])
('tags -> ', '     (brad->NN) ')
('tags initial-> ', [('brave', 'VB'), ('star', 'NN')])
('tags -> ', '     (brave->VB) (star->NN) ')
('tags initial-> ', [('does', 'VBZ'), ('it', 'PRP'), ('hurt', 'VB'), ('here', 'RB')])
('tags -> ', '     (does->VBZ) (it->PRP) (hurt->VB) (here->RB) ')
('tags initial-> ', [('where', 'WRB'), ('does', 'VBZ'), ('it', 'PRP'), ('hurt', 'VB')])
('tags -> ', '     (where->WRB) (does->VBZ) (it->PRP) (hurt->VB) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('sick', 'JJ'), ('again', 'RB')])
('tags -> ', '     (are->VBP) (you->PRP) (sick->JJ) (again->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('right', 'RB'), ('pot', 'NN')])
('tags -> ', '     (right->RB) (pot->NN) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('told', 'VBD'), ('me', 'PRP'), ('his', 'PRP$'), ('belly', 'NN'), ('was', 'VBD'), ('hurting', 'VBG'), ('when', 'WRB'), ('we', 'PRP'), ('were', 'VBD'), ('at', 'IN'), ('the', 'DT'), ('um', 'JJ'), ('arboretum', 'NN')])
('tags -> ', '     (he->PRP) (told->VBD) (me->PRP) (his->PRP$) (belly->NN) (was->VBD) (hurting->VBG) (when->WRB) (we->PRP) (were->VBD) (at->IN) (the->DT) (um->JJ) (arboretum->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('were', 'VBD'), ('afraid', 'JJ'), ('he', 'PRP'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'RB'), ('have', 'VBP'), ('a', 'DT'), ('problem', 'NN')])
('tags -> ', '     (we->PRP) (were->VBD) (afraid->JJ) (he->PRP) (was->VBD) (gon->VBG) (na->RB) (have->VBP) (a->DT) (problem->NN) ')
candidates to check:
1
('tags initial-> ', [('does', 'VBZ'), ('your', 'PRP$'), ('belly', 'NN'), ('still', 'RB'), ('hurt', 'VB')])
('tags -> ', '     (does->VBZ) (your->PRP$) (belly->NN) (still->RB) (hurt->VB) ')
candidates to check:
2
('tags initial-> ', [('where', 'WRB'), ('you', 'PRP'), ('going', 'VBG'), ('kiddo', 'VB')])
('tags -> ', '     (where->WRB) (you->PRP) (going->VBG) (kiddo->VB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('mama', 'NN')])
('tags -> ', '     (xxx->JJ) (mama->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 18, 22]
milk
milk milk 46
[('here', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('here', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('milk', 'NN')])
('tags -> ', '     (here->RB) (s->VB) (your->PRP$) (milk->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('um', 'JJ'), ('um', 'NN')])
('tags -> ', '     (um->JJ) (um->NN) ')
candidates to check:
1
('tags initial-> ', [('does', 'VBZ'), ('your', 'PRP$'), ('belly', 'NN'), ('still', 'RB'), ('hurt', 'VB')])
('tags -> ', '     (does->VBZ) (your->PRP$) (belly->NN) (still->RB) (hurt->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('run', 'VB'), ('like', 'IN'), ('like', 'IN'), ('that', 'DT'), ('so', 'IN'), ('we', 'PRP'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('done', 'VBN'), ('so', 'RB'), ('the', 'DT'), ('thunder', 'NN'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'VB'), ('us', 'PRP')])
('tags -> ', '     (mommy->NN) (we->PRP) (have->VBP) (to->TO) (run->VB) (like->IN) (like->IN) (that->DT) (so->IN) (we->PRP) (won->VBD) (t->JJ) (get->NN) (done->VBN) (so->RB) (the->DT) (thunder->NN) (won->VBD) (t->JJ) (get->VB) (us->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
honey
honey honey 304
[('well', 'RB'), ('honey', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('should', 'MD'), ('go', 'VB')]
['honey']
('tags initial-> ', [('well', 'RB'), ('honey', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('should', 'MD'), ('go', 'VB')])
('tags -> ', '     (well->RB) (honey->NN) (i->NN) (don->VBP) (t->JJ) (think->VBP) (we->PRP) (should->MD) (go->VB) ')
candidates to check:
3
fish
fish fish 305
[('yyy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('tags initial-> ', [('yyy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')])
('tags -> ', '     (yyy->NN) (i->NN) (want->VBP) (go->NN) (to->TO) (the->DT) (fish->NN) (store->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('so', 'RB'), ('xxx', 'JJ'), ('you', 'PRP'), ('got', 'VBD'), ('that', 'IN'), ('bad', 'JJ'), ('a', 'DT'), ('cough', 'NN')])
('tags -> ', '     (no->DT) (i->JJ) (don->VBP) (t->JJ) (think->VBP) (so->RB) (xxx->JJ) (you->PRP) (got->VBD) (that->IN) (bad->JJ) (a->DT) (cough->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
3
descended from food: [['N'], 'dinner', 62, 68]
descended from food: [['N'], 'candy', 98, 103]
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('really', 'RB'), ('shouldn', 'VB'), ('t', 'NN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('dinner', 'NN'), ('you', 'PRP'), ('really', 'RB'), ('shouldn', 'VB'), ('t', 'NN'), ('eat', 'NN'), ('candy', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (really->RB) (shouldn->VB) (t->NN) (you->PRP) (didn->VBP) (t->NNS) (have->VBP) (any->DT) (dinner->NN) (you->PRP) (really->RB) (shouldn->VB) (t->NN) (eat->NN) (candy->NN) ')
candidates to check:
5
descended from food: [['N'], 'candy', 21, 26]
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('enough', 'JJ'), ('candy', 'NN'), ('today', 'NN'), ('lovey', 'VBP')])
('tags -> ', '     (you->PRP) (had->VBD) (enough->JJ) (candy->NN) (today->NN) (lovey->VBP) ')
candidates to check:
5
cream
cream cream 72
[('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN')]
['ice', 'cream']
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (m->VBP) (gon->NN) (na->TO) (get->VB) (ice->JJ) (cream->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
7
cream
cream cream 72
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')]
['cream']
ice cream bar
ice cream bar ice cream bar 303
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')]
['ice', 'cream', 'bar']
ice cream
ice cream ice cream 265
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')]
['ice', 'cream']
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (get->VB) (ice->JJ) (cream->NN) (bar->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('shouldn', 'VBP'), ('t', 'JJ'), ('let', 'NN'), ('him', 'PRP'), ('but', 'CC'), ('i', 'RB'), ('know', 'VBP'), ('if', 'IN'), ('i', 'NN'), ('was', 'VBD'), ('having', 'VBG'), ('a', 'DT'), ('sore', 'NN'), ('belly', 'RB'), ('i', 'JJ'), ('d', 'NN')])
('tags -> ', '     (i->NN) (shouldn->VBP) (t->JJ) (let->NN) (him->PRP) (but->CC) (i->RB) (know->VBP) (if->IN) (i->NN) (was->VBD) (having->VBG) (a->DT) (sore->NN) (belly->RB) (i->JJ) (d->NN) ')
('tags initial-> ', [('i', 'NN'), ('d', 'VBP'), ('well', 'RB'), ('yes', 'RB')])
('tags -> ', '     (i->NN) (d->VBP) (well->RB) (yes->RB) ')
candidates to check:
3
cream
cream cream 72
[('want', 'VB'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('too', 'RB')]
['cream']
ice cream
ice cream ice cream 265
[('want', 'VB'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('too', 'RB')]
['ice', 'cream']
('tags initial-> ', [('want', 'VB'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('too', 'RB')])
('tags -> ', '     (want->VB) (an->DT) (ice->NN) (cream->NN) (too->RB) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('i', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'NNS'), ('say', 'VBP')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (i->NN) (was->VBD) (gon->VBG) (na->NNS) (say->VBP) ')
candidates to check:
3
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('is', 'VBZ'), ('better', 'RBR')]
['cream']
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('is', 'VBZ'), ('better', 'RBR')]
['ice', 'cream']
('tags initial-> ', [('ice', 'NN'), ('cream', 'NN'), ('is', 'VBZ'), ('better', 'RBR')])
('tags -> ', '     (ice->NN) (cream->NN) (is->VBZ) (better->RBR) ')
candidates to check:
4
cream
cream cream 72
[('ma', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('ma', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['ice', 'cream']
('tags initial-> ', [('ma', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')])
('tags -> ', '     (ma->NN) (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (go->NN) (to->TO) (the->DT) (store->NN) (and->CC) (get->VB) (some->DT) (ice->NN) (cream->NN) ')
candidates to check:
1
descended from food: [['N'], 'candy', 14, 19]
('tags initial-> ', [('but', 'CC'), ('no', 'DT'), ('candy', 'NN')])
('tags -> ', '     (but->CC) (no->DT) (candy->NN) ')
candidates to check:
1
descended from food: [['N'], 'candy', 18, 23]
('tags initial-> ', [('no', 'DT'), ('just', 'RB'), ('candy', 'NN')])
('tags -> ', '     (no->DT) (just->RB) (candy->NN) ')
candidates to check:
6
cream
cream cream 72
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['cream']
fish
fish fish 305
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['fish']
ice cream
ice cream ice cream 265
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['ice', 'cream']
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (go->NN) (to->TO) (the->DT) (fish->JJ) (store->NN) (and->CC) (get->VB) (some->DT) (ice->NN) (cream->NN) ')
('tags initial-> ', [('o', 'NN'), ('kay', 'NN')])
('tags -> ', '     (o->NN) (kay->NN) ')
candidates to check:
1
descended from food: [['N'], 'candy', 9, 14]
('tags initial-> ', [('no', 'DT'), ('candy', 'NN')])
('tags -> ', '     (no->DT) (candy->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('won', 'VBD'), ('t', 'NN'), ('i', 'NN'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'VB'), ('any', 'DT')])
('tags -> ', '     (i->NN) (won->VBD) (t->NN) (i->NN) (won->VBD) (t->JJ) (get->VB) (any->DT) ')
candidates to check:
4
fish
fish fish 305
[('ma', 'NN'), ('you', 'PRP'), ('wan', 'VBP'), ('t', 'RB'), ('go', 'VBP'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('with', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('my', 'PRP$'), ('mama', 'NN')]
['fish']
('tags initial-> ', [('ma', 'NN'), ('you', 'PRP'), ('wan', 'VBP'), ('t', 'RB'), ('go', 'VBP'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('with', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('my', 'PRP$'), ('mama', 'NN')])
('tags -> ', '     (ma->NN) (you->PRP) (wan->VBP) (t->RB) (go->VBP) (to->TO) (the->DT) (fish->JJ) (store->NN) (with->IN) (me->PRP) (and->CC) (my->PRP$) (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('even', 'RB'), ('his', 'PRP$'), ('voice', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (but->CC) (even->RB) (his->PRP$) (voice->NN) (xxx->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) ')
('tags initial-> ', [('sounds', 'NNS'), ('funny', 'JJ')])
('tags -> ', '     (sounds->NNS) (funny->JJ) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('so', 'RB'), ('lovey', 'JJ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (so->RB) (lovey->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'IN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('because', 'IN'), ('because', 'IN'), ('i', 'NN'), ('wo', 'MD'), ('nt', 'VB')])
('tags -> ', '     (you->PRP) (don->VBP) (t->IN) (you->PRP) (have->VBP) (to->TO) (because->IN) (because->IN) (i->NN) (wo->MD) (nt->VB) ')
('tags initial-> ', [('brad', 'NN')])
('tags -> ', '     (brad->NN) ')
candidates to check:
1
('tags initial-> ', [('does', 'VBZ'), ('your', 'PRP$'), ('belly', 'NN'), ('still', 'RB'), ('hurt', 'VB')])
('tags -> ', '     (does->VBZ) (your->PRP$) (belly->NN) (still->RB) (hurt->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('does', 'VBZ'), ('it', 'PRP'), ('hurt', 'VB'), ('when', 'WRB'), ('you', 'PRP'), ('cough', 'VBP')])
('tags -> ', '     (does->VBZ) (it->PRP) (hurt->VB) (when->WRB) (you->PRP) (cough->VBP) ')
('tags initial-> ', [('zzz', 'NN'), ('it', 'PRP'), ('hurted', 'VBD'), ('n', 'JJ'), ('before', 'IN'), ('when', 'WRB'), ('i', 'NN'), ('coughed', 'VBD')])
('tags -> ', '     (zzz->NN) (it->PRP) (hurted->VBD) (n->JJ) (before->IN) (when->WRB) (i->NN) (coughed->VBD) ')
candidates to check:
7
water
water water 18
[('um', 'JJ'), ('mommy', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('bring', 'NN'), ('my', 'PRP$'), ('new', 'JJ'), ('water', 'NN'), ('gun', 'NN'), ('to', 'TO'), ('the', 'DT'), ('preschool', 'NN')]
['water']
('tags initial-> ', [('um', 'JJ'), ('mommy', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('bring', 'NN'), ('my', 'PRP$'), ('new', 'JJ'), ('water', 'NN'), ('gun', 'NN'), ('to', 'TO'), ('the', 'DT'), ('preschool', 'NN')])
('tags -> ', '     (um->JJ) (mommy->NN) (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (bring->NN) (my->PRP$) (new->JJ) (water->NN) (gun->NN) (to->TO) (the->DT) (preschool->NN) ')
('tags initial-> ', [('and', 'CC'), ('there', 'EX'), ('really', 'RB'), ('isn', 'JJ'), ('t', 'NN'), ('anyplace', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('drive', 'VB'), ('him', 'PRP')])
('tags -> ', '     (and->CC) (there->EX) (really->RB) (isn->JJ) (t->NN) (anyplace->NN) (you->PRP) (can->MD) (drive->VB) (him->PRP) ')
candidates to check:
1
('tags initial-> ', [('okay', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (okay->NN) (mommy->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT')])
('tags -> ', '     (we->PRP) (don->VBP) (t->NNS) (have->VBP) (any->DT) ')
('tags initial-> ', [('okay', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (okay->NN) (mommy->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('okay', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (okay->NN) (mommy->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('okay', 'NN'), ('what', 'WP')])
('tags -> ', '     (okay->NN) (what->WP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', -1, 4]
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('honey', 'NN')])
('tags -> ', '     (what->WP) (honey->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('hear', 'NN'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (hear->NN) (you->PRP) ')
candidates to check:
6
descended from food: [['N'], 'candy', 57, 62]
cream
cream cream 72
[('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')]
['cream']
ice cream
ice cream ice cream 265
[('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')]
['ice', 'cream']
cake
cake cake 412
[('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')]
['cake']
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (wan->VB) (t->JJ) (t->NN) (a->DT) (go->NN) (to->TO) (the->DT) (store->NN) (and->CC) (i->JJ) (won->VBD) (t->JJ) (get->NN) (candy->NN) (and->CC) (i->NN) (ll->VBP) (get->VB) (just->RB) (ice->JJ) (cream->NN) (or->CC) (cake->VB) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 34, 38]
milk
milk milk 46
[('come', 'VB'), ('up', 'RP'), ('here', 'RB'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('come', 'VB'), ('up', 'RP'), ('here', 'RB'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('milk', 'NN')])
('tags -> ', '     (come->VB) (up->RP) (here->RB) (and->CC) (drink->VB) (your->PRP$) (milk->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
candidates to check:
1
descended from food: [['N'], 'supper', 31, 37]
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('any', 'DT'), ('supper', 'JJR'), ('at', 'IN'), ('all', 'DT')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (gon->VB) (na->TO) (eat->VB) (any->DT) (supper->JJR) (at->IN) (all->DT) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
candidates to check:
2
('tags initial-> ', [('just', 'RB'), ('taste', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (just->RB) (taste->VB) (a->DT) (little->JJ) (bit->NN) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('were', 'VBD'), ('going', 'VBG'), ('up', 'RB'), ('to', 'TO'), ('the', 'DT'), ('main', 'JJ'), ('house', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('arboretum', 'NN'), ('and', 'CC'), ('there', 'EX'), ('was', 'VBD'), ('this', 'DT')])
('tags -> ', '     (we->PRP) (were->VBD) (going->VBG) (up->RB) (to->TO) (the->DT) (main->JJ) (house->NN) (and->CC) (uh->JJ) (arboretum->NN) (and->CC) (there->EX) (was->VBD) (this->DT) ')
('tags initial-> ', [('it', 'PRP'), ('tastes', 'VBZ'), ('cold', 'JJ')])
('tags -> ', '     (it->PRP) (tastes->VBZ) (cold->JJ) ')
candidates to check:
9
('tags initial-> ', [('we', 'PRP'), ('were', 'VBD'), ('about', 'RB'), ('to', 'TO'), ('find', 'VB'), ('out', 'RP'), ('what', 'WP'), ('the', 'DT'), ('name', 'NN'), ('of', 'IN'), ('the', 'DT'), ('little', 'JJ'), ('bells', 'NNS'), ('flower', 'NN'), ('is', 'VBZ'), ('xxx', 'PDT'), ('a', 'DT'), ('man', 'NN'), ('going', 'VBG'), ('by', 'IN'), ('me', 'PRP'), ('says', 'VBZ'), ('xxx', 'JJ'), ('blue', 'NN'), ('bells', 'NNS')])
('tags -> ', '     (we->PRP) (were->VBD) (about->RB) (to->TO) (find->VB) (out->RP) (what->WP) (the->DT) (name->NN) (of->IN) (the->DT) (little->JJ) (bells->NNS) (flower->NN) (is->VBZ) (xxx->PDT) (a->DT) (man->NN) (going->VBG) (by->IN) (me->PRP) (says->VBZ) (xxx->JJ) (blue->NN) (bells->NNS) ')
('tags initial-> ', [('ha', 'NN')])
('tags -> ', '     (ha->NN) ')
candidates to check:
2
('tags initial-> ', [('thanks', 'NNS'), ('a', 'DT'), ('lot', 'NN')])
('tags -> ', '     (thanks->NNS) (a->DT) (lot->NN) ')
('tags initial-> ', [('ha', 'NN')])
('tags -> ', '     (ha->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('someone', 'NN'), ('else', 'RB'), ('was', 'VBD'), ('saying', 'VBG'), ('well', 'RB'), ('yeah', 'RB'), ('i', 'JJ'), ('guess', 'NN'), ('you', 'PRP'), ('would', 'MD')])
('tags -> ', '     (and->CC) (someone->NN) (else->RB) (was->VBD) (saying->VBG) (well->RB) (yeah->RB) (i->JJ) (guess->NN) (you->PRP) (would->MD) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('i', 'JJ'), ('really', 'RB'), ('wanted', 'VBD'), ('to', 'TO'), ('find', 'VB'), ('out', 'RP'), ('the', 'DT'), ('botanical', 'JJ'), ('name', 'NN')])
('tags -> ', '     (so->RB) (i->JJ) (really->RB) (wanted->VBD) (to->TO) (find->VB) (out->RP) (the->DT) (botanical->JJ) (name->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('uhhuh', 'JJ'), ('uhhuh', 'NN'), ('you', 'PRP'), ('had', 'VBD'), ('it', 'PRP'), ('over', 'IN'), ('there', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('it', 'PRP')])
('tags -> ', '     (uhhuh->JJ) (uhhuh->NN) (you->PRP) (had->VBD) (it->PRP) (over->IN) (there->RB) (and->CC) (you->PRP) (didn->VBP) (t->JJ) (eat->NN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('where', 'WRB'), ('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (where->WRB) (is->VBZ) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('mom', 'VB'), ('your', 'PRP$'), ('mommy', 'NN'), ('just', 'RB'), ('ate', 'VB'), ('it', 'PRP')])
('tags -> ', '     (mom->VB) (your->PRP$) (mommy->NN) (just->RB) (ate->VB) (it->PRP) ')
('tags initial-> ', [('yes', 'RB'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (yes->RB) (i->NN) (did->VBD) ')
('tags initial-> ', [('because', 'IN'), ('you', 'PRP'), ('wasn', 'VBP'), ('t', 'JJ'), ('eating', 'VBG'), ('it', 'PRP')])
('tags -> ', '     (because->IN) (you->PRP) (wasn->VBP) (t->JJ) (eating->VBG) (it->PRP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('they', 'PRP'), ('had', 'VBD'), ('they', 'PRP'), ('were', 'VBD'), ('putting', 'VBG'), ('on', 'IN'), ('like', 'IN'), ('a', 'DT'), ('video', 'NN'), ('show', 'NN')])
('tags -> ', '     (they->PRP) (had->VBD) (they->PRP) (were->VBD) (putting->VBG) (on->IN) (like->IN) (a->DT) (video->NN) (show->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('they', 'PRP'), ('were', 'VBD'), ('really', 'RB'), ('xxx', 'JJ')])
('tags -> ', '     (they->PRP) (were->VBD) (really->RB) (xxx->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('shoe', 'NN')])
('tags -> ', '     (my->PRP$) (shoe->NN) ')
candidates to check:
2
('tags initial-> ', [('my', 'PRP$'), ('shoe', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (my->PRP$) (shoe->NN) (mommy->NN) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('go', 'VB')])
('tags -> ', '     (you->PRP) (can->MD) (t->VB) (go->VB) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('your', 'PRP$'), ('shoe', 'NN')])
('tags -> ', '     (i->NN) (got->VBD) (your->PRP$) (shoe->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('kick', 'VB'), ('me', 'PRP'), ('and', 'CC'), ('his', 'PRP$'), ('shoe', 'NN'), ('fell', 'VBD'), ('off', 'RP')])
('tags -> ', '     (he->PRP) (went->VBD) (to->TO) (kick->VB) (me->PRP) (and->CC) (his->PRP$) (shoe->NN) (fell->VBD) (off->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'IN'), ('a', 'DT'), ('i', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBD'), ('a', 'DT'), ('wear', 'JJ'), ('my', 'PRP$'), ('boots', 'NNS')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (t->IN) (a->DT) (i->JJ) (wan->NN) (t->NN) (t->VBD) (a->DT) (wear->JJ) (my->PRP$) (boots->NNS) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('wearing', 'VBG'), ('your', 'PRP$'), ('boots', 'NNS')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (wearing->VBG) (your->PRP$) (boots->NNS) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('no', 'DT'), ('mommy', 'NN'), ('said', 'VBD')])
('tags -> ', '     (no->DT) (mommy->NN) (said->VBD) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('boots', 'NNS'), ('would', 'MD'), ('look', 'VB'), ('silly', 'RB')])
('tags -> ', '     (your->PRP$) (boots->NNS) (would->MD) (look->VB) (silly->RB) ')
candidates to check:
4
('tags initial-> ', [('those', 'DT'), ('are', 'VBP'), ('winter', 'JJ'), ('boots', 'NNS')])
('tags -> ', '     (those->DT) (are->VBP) (winter->JJ) (boots->NNS) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('my', 'PRP$'), ('brown', 'JJ'), ('boots', 'NNS')])
('tags -> ', '     (but->CC) (i->NN) (want->VBP) (my->PRP$) (brown->JJ) (boots->NNS) ')
candidates to check:
3
('tags initial-> ', [('where', 'WRB'), ('s', 'JJ'), ('my', 'PRP$'), ('rain', 'NN'), ('boots', 'NNS')])
('tags -> ', '     (where->WRB) (s->JJ) (my->PRP$) (rain->NN) (boots->NNS) ')
('tags initial-> ', [('they', 'PRP'), ('d', 'VBP'), ('look', 'VBP'), ('silly', 'RB')])
('tags -> ', '     (they->PRP) (d->VBP) (look->VBP) (silly->RB) ')
candidates to check:
4
('tags initial-> ', [('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('rain', 'VBN'), ('boots', 'NNS'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (we->PRP) (don->VBP) (t->NNS) (have->VBP) (rain->VBN) (boots->NNS) (for->IN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('day', 'NN'), ('i', 'VB'), ('had', 'VBD'), ('them', 'PRP')])
('tags -> ', '     (one->CD) (day->NN) (i->VB) (had->VBD) (them->PRP) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('day', 'NN'), ('you', 'PRP'), ('had', 'VBD'), ('them', 'PRP')])
('tags -> ', '     (one->CD) (day->NN) (you->PRP) (had->VBD) (them->PRP) ')
candidates to check:
3
('tags initial-> ', [('on', 'IN'), ('one', 'CD'), ('day', 'NN'), ('i', 'VB'), ('had', 'VBD'), ('rain', 'NN')])
('tags -> ', '     (on->IN) (one->CD) (day->NN) (i->VB) (had->VBD) (rain->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('day', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VB'), ('them', 'PRP')])
('tags -> ', '     (what->WP) (day->NN) (did->VBD) (you->PRP) (have->VB) (them->PRP) ')
candidates to check:
7
('tags initial-> ', [('well', 'RB'), ('one', 'CD'), ('day', 'NN'), ('i', 'VB'), ('had', 'VBD'), ('rain', 'NN'), ('boots', 'NNS'), ('red', 'JJ'), ('ones', 'NNS'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('um', 'JJ')])
('tags -> ', '     (well->RB) (one->CD) (day->NN) (i->VB) (had->VBD) (rain->NN) (boots->NNS) (red->JJ) (ones->NNS) (and->CC) (and->CC) (and->CC) (um->JJ) ')
candidates to check:
4
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('red', 'VBN'), ('ones', 'NNS'), ('and', 'CC'), ('you', 'PRP'), ('had', 'VBD'), ('blue', 'VBN'), ('ones', 'NNS')])
('tags -> ', '     (you->PRP) (had->VBD) (red->VBN) (ones->NNS) (and->CC) (you->PRP) (had->VBD) (blue->VBN) (ones->NNS) ')
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('my', 'PRP$')])
('tags -> ', '     (yeah->NN) (i->NN) (had->VBD) (my->PRP$) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('never', 'RB'), ('had', 'VBD'), ('any', 'DT'), ('brown', 'JJ'), ('boots', 'NNS')])
('tags -> ', '     (you->PRP) (never->RB) (had->VBD) (any->DT) (brown->JJ) (boots->NNS) ')
('tags initial-> ', [('yes', 'RB'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (yes->RB) (i->NN) (did->VBD) ')
candidates to check:
2
('tags initial-> ', [('oh', 'IN'), ('the', 'DT'), ('big', 'JJ'), ('heavy', 'NN'), ('shoes', 'NNS')])
('tags -> ', '     (oh->IN) (the->DT) (big->JJ) (heavy->NN) (shoes->NNS) ')
candidates to check:
5
('tags initial-> ', [('the', 'DT'), ('brown', 'JJ'), ('work', 'NN'), ('shoes', 'NNS')])
('tags -> ', '     (the->DT) (brown->JJ) (work->NN) (shoes->NNS) ')
('tags initial-> ', [('oh', 'UH'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('where', 'WRB'), ('they', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (oh->UH) (i->JJ) (don->VBP) (t->NN) (know->VBP) (where->WRB) (they->PRP) (are->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
5
('tags initial-> ', [('one', 'CD'), ('day', 'NN'), ('i', 'VB'), ('had', 'VBD'), ('rain', 'VBN'), ('boots', 'NNS'), ('and', 'CC'), ('they', 'PRP'), ('were', 'VBD'), ('red', 'JJ'), ('and', 'CC'), ('now', 'RB'), ('i', 'VBZ'), ('lost', 'VBD'), ('them', 'PRP')])
('tags -> ', '     (one->CD) (day->NN) (i->VB) (had->VBD) (rain->VBN) (boots->NNS) (and->CC) (they->PRP) (were->VBD) (red->JJ) (and->CC) (now->RB) (i->VBZ) (lost->VBD) (them->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('they', 'PRP'), ('go', 'VB')])
('tags -> ', '     (where->WRB) (did->VBD) (they->PRP) (go->VB) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('outgrow', 'VB'), ('them', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (outgrow->VB) (them->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('they', 'PRP'), ('go', 'VB')])
('tags -> ', '     (where->WRB) (did->VBD) (they->PRP) (go->VB) ')
candidates to check:
6
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('in', 'IN'), ('one', 'CD'), ('of', 'IN'), ('his', 'PRP$'), ('bureau', 'NN'), ('drawers', 'NNS'), ('with', 'IN'), ('his', 'PRP$'), ('winter', 'NN'), ('coat', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (in->IN) (one->CD) (of->IN) (his->PRP$) (bureau->NN) (drawers->NNS) (with->IN) (his->PRP$) (winter->NN) (coat->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('ha', 'NN')])
('tags -> ', '     (ha->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('new', 'JJ'), ('coat', 'NN'), ('too', 'RB')])
('tags -> ', '     (i->NNS) (have->VBP) (a->DT) (new->JJ) (coat->NN) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('boots', 'NNS')])
('tags -> ', '     (his->PRP$) (boots->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN')])
('tags -> ', '     (i->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('now', 'RB'), ('i', 'RB'), ('have', 'VBP'), ('new', 'JJ')])
('tags -> ', '     (now->RB) (i->RB) (have->VBP) (new->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('oh', 'UH'), ('jesus', 'NN')])
('tags -> ', '     (oh->UH) (jesus->NN) ')
candidates to check:
2
('tags initial-> ', [('now', 'RB'), ('i', 'RB'), ('have', 'VBP'), ('two', 'CD'), ('new', 'JJ'), ('coats', 'NNS')])
('tags -> ', '     (now->RB) (i->RB) (have->VBP) (two->CD) (new->JJ) (coats->NNS) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('them', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('wrong', 'JJ'), ('feet', 'NNS')])
('tags -> ', '     (you->PRP) (got->VBD) (them->PRP) (on->IN) (the->DT) (wrong->JJ) (feet->NNS) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('the', 'DT'), ('shoes', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('wrong', 'JJ'), ('feet', 'NNS')])
('tags -> ', '     (you->PRP) (got->VBD) (the->DT) (shoes->NNS) (on->IN) (the->DT) (wrong->JJ) (feet->NNS) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->NN) (know->VBP) (this->DT) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('mean', 'VB'), ('you', 'PRP'), ('know', 'VBP'), ('that', 'IN')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (mean->VB) (you->PRP) (know->VBP) (that->IN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('know', 'VB'), ('it', 'PRP'), ('for', 'IN')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (know->VB) (it->PRP) (for->IN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->NN) (know->VBP) (this->DT) ')
candidates to check:
3
('tags initial-> ', [('mommy', 'NN'), ('is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('right', 'JJ'), ('feet', 'NNS')])
('tags -> ', '     (mommy->NN) (is->VBZ) (this->DT) (the->DT) (right->JJ) (feet->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (is->VBZ) (it->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('right', 'JJ'), ('feet', 'NNS')])
('tags -> ', '     (is->VBZ) (it->PRP) (is->VBZ) (this->DT) (the->DT) (right->JJ) (feet->NNS) ')
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('charlie', 'NNS'), ('chaplin', 'VBP')])
('tags -> ', '     (look->NN) (at->IN) (charlie->NNS) (chaplin->VBP) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('so', 'RB'), ('brad', 'JJ')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (no->DT) (i->JJ) (don->VBP) (t->JJ) (think->VBP) (so->RB) (brad->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('right', 'JJ'), ('feet', 'NNS')])
('tags -> ', '     (is->VBZ) (this->DT) (the->DT) (right->JJ) (feet->NNS) ')
('tags initial-> ', [('he', 'PRP'), ('knows', 'VBZ'), ('them', 'PRP'), ('and', 'CC'), ('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('hard', 'JJ')])
('tags -> ', '     (he->PRP) (knows->VBZ) (them->PRP) (and->CC) (they->PRP) (re->VBP) (not->RB) (hard->JJ) ')
('tags initial-> ', [('he', 'PRP'), ('wouldn', 'VBZ'), ('t', 'JJ'), ('ask', 'NN')])
('tags -> ', '     (he->PRP) (wouldn->VBZ) (t->JJ) (ask->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('this', 'DT'), ('one', 'CD'), ('xxx', 'NN'), ('this', 'DT'), ('one', 'CD')])
('tags -> ', '     (this->DT) (one->CD) (xxx->NN) (this->DT) (one->CD) ')
('tags initial-> ', [('you', 'PRP'), ('messed', 'VBD'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (messed->VBD) (up->RP) ')
('tags initial-> ', [('xxx', 'NN'), ('that', 'IN'), ('one', 'CD')])
('tags -> ', '     (xxx->NN) (that->IN) (one->CD) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('big', 'JJ'), ('phony', 'NN'), ('baloney', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (big->JJ) (phony->NN) (baloney->NN) ')
candidates to check:
7
cream
cream cream 72
[('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['cream']
fish
fish fish 305
[('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
ice cream
ice cream ice cream 265
[('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['ice', 'cream']
('tags initial-> ', [('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')])
('tags -> ', '     (kind->NN) (of->IN) (ice->NN) (cream->NN) (you->PRP) (going->VBG) (t->VB) (a->DT) (get->NN) (at->IN) (the->DT) (fish->NN) (store->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
loading solution set
calculating
set([(454, (20, 25)), (220, (16, 22)), (1537, (20, 33)), (433, (11, 16)), (1413, (52, 56)), (471, (6, 11)), (2121, (14, 23)), (457, (10, 15)), (181, (7, 13)), (725, (17, 22)), (1585, (54, 63)), (477, (14, 19)), (1726, (34, 38)), (271, (15, 26)), (1519, (98, 103)), (159, (16, 22)), (159, (26, 35)), (1713, (81, 90)), (249, (6, 11)), (1562, (15, 24)), (721, (18, 23)), (429, (6, 10)), (1713, (94, 98)), (1573, (53, 62)), (1579, (14, 19)), (461, (20, 25)), (451, (12, 17)), (228, (14, 24)), (830, (21, 31)), (1017, (30, 44)), (1469, (18, 22)), (1524, (21, 26)), (793, (23, 28)), (1713, (57, 62)), (513, (6, 14)), (1593, (9, 14)), (185, (51, 57)), (379, (14, 24)), (1528, (26, 35)), (675, (14, 26)), (1569, (6, 15)), (775, (30, 39)), (373, (39, 51)), (438, (20, 26)), (813, (30, 41)), (169, (6, 12)), (1582, (18, 23))])
[((159, (16, 22)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((159, (26, 35)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((169, (6, 12)), '*GMA:\tbutter please .\n'), ((181, (7, 13)), '*CHI:\t<butter xxx> [>] .\n'), ((185, (51, 57)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((220, (16, 22)), '*MOT:\t<you want catsup> [<] ?\n'), ((228, (14, 24)), '*MOT:\ton your fish cakes ?\n'), ((249, (6, 11)), '*CHI:\tjuice me [!] me .\n'), ((271, (15, 26)), "*MOT:\t&-um the brown bread's in there .\n"), ((373, (39, 51)), '*MOT:\t<Brad made> [//] helped make the tartar sauce .\n'), ((379, (14, 24)), '*MOT:\tall the mayonnaise in the jar .\n'), ((429, (6, 10)), '*MOT:\tmilk first ?\n'), ((433, (11, 16)), '*MOT:\tthen juice ?\n'), ((438, (20, 26)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((451, (12, 17)), '*CHI:\tfirst juice .\n'), ((454, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((457, (10, 15)), '*MOT:\tthe juice first ?\n'), ((461, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((471, (6, 11)), '*CHI:\tjuice please [?] .\n'), ((477, (14, 19)), '*CHI:\t<enough juice> [>] .\n'), ((513, (6, 14)), '*GPA:\ttomatoes ?\n'), ((675, (14, 26)), '*MOT:\toh this tartar sauce (..) +...\n'), ((721, (18, 23)), '*CHI:\tyou gave me candy .\n'), ((725, (17, 22)), '*MOT:\tI gave you candy .\n'), ((775, (30, 39)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((793, (23, 28)), '*MOT:\tdid you eat some beans ?\n'), ((813, (30, 41)), '*MOT:\tyou want me to cut your brown bread ?\n'), ((830, (21, 31)), '*MOT:\tokay I cut one fish stick [?] xxx .\n'), ((1017, (30, 44)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1413, (52, 56)), "*CHI:\t<I'm all> [/] I'm all done though I want some milk .\n"), ((1469, (18, 22)), "*MOT:\there's your milk .\n"), ((1519, (98, 103)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1524, (21, 26)), '*GMA:\tyou had enough candy today Lovey .\n'), ((1528, (26, 35)), "*CHI:\tMommy I'm gonna get ice cream .\n"), ((1537, (20, 33)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1562, (15, 24)), '*MOT:\t<want an ice cream too> [>] .\n'), ((1569, (6, 15)), '*GMA:\tice cream is better .\n'), ((1573, (53, 62)), '*CHI:\tMa I wan(t) (t)a go to the store and get <some ice cream> [>] .\n'), ((1579, (14, 19)), '*GMA:\t<but no candy> [<] .\n'), ((1582, (18, 23)), '*CHI:\tno just [?] candy .\n'), ((1585, (54, 63)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1593, (9, 14)), '*GMA:\tno candy .\n'), ((1713, (57, 62)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (81, 90)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (94, 98)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1726, (34, 38)), '*MOT:\tcome up here and drink your milk (.) .\n'), ((2121, (14, 23)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n')]
set([(454, (20, 25)), (1169, (30, 34)), (220, (16, 22)), (1593, (9, 14)), (1153, (28, 32)), (433, (11, 16)), (1413, (52, 56)), (471, (6, 11)), (830, (21, 25)), (1218, (37, 41)), (457, (10, 15)), (1506, (27, 31)), (181, (7, 13)), (1732, (31, 37)), (329, (21, 27)), (1639, (44, 49)), (1599, (30, 34)), (725, (17, 22)), (1524, (21, 26)), (1713, (94, 98)), (1585, (54, 63)), (477, (14, 19)), (1726, (34, 38)), (321, (19, 24)), (1519, (62, 68)), (1519, (98, 103)), (1017, (38, 44)), (159, (16, 22)), (159, (26, 35)), (1702, (-1, 4)), (1713, (81, 90)), (1713, (57, 62)), (249, (6, 11)), (1562, (15, 24)), (721, (18, 23)), (429, (6, 10)), (304, (15, 21)), (1585, (30, 34)), (1573, (53, 62)), (1579, (14, 19)), (461, (20, 25)), (2121, (50, 54)), (451, (12, 17)), (775, (35, 39)), (813, (36, 41)), (1537, (20, 34)), (1164, (22, 26)), (1469, (18, 22)), (775, (30, 34)), (1263, (41, 45)), (793, (23, 28)), (228, (14, 18)), (513, (6, 14)), (185, (51, 57)), (1702, (11, 16)), (379, (14, 24)), (1528, (26, 35)), (1500, (12, 17)), (859, (37, 42)), (675, (14, 26)), (1569, (6, 15)), (311, (24, 30)), (271, (21, 26)), (373, (39, 51)), (438, (20, 26)), (169, (6, 12)), (2121, (14, 23)), (1582, (18, 23))])
[((159, (16, 22)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((159, (26, 35)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((169, (6, 12)), '*GMA:\tbutter please .\n'), ((181, (7, 13)), '*CHI:\t<butter xxx> [>] .\n'), ((185, (51, 57)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((220, (16, 22)), '*MOT:\t<you want catsup> [<] ?\n'), ((228, (14, 18)), '*MOT:\ton your fish cakes ?\n'), ((249, (6, 11)), '*CHI:\tjuice me [!] me .\n'), ((271, (21, 26)), "*MOT:\t&-um the brown bread's in there .\n"), ((304, (15, 21)), '*CHI:\ttime for supper .\n'), ((311, (24, 30)), '*GPA:\twhy should I have supper with you ?\n'), ((321, (19, 24)), '*CHI:\ttime [<] for lunch (.) !\n'), ((329, (21, 27)), '*GPA:\tI have_to have supper with you ?\n'), ((373, (39, 51)), '*MOT:\t<Brad made> [//] helped make the tartar sauce .\n'), ((379, (14, 24)), '*MOT:\tall the mayonnaise in the jar .\n'), ((429, (6, 10)), '*MOT:\tmilk first ?\n'), ((433, (11, 16)), '*MOT:\tthen juice ?\n'), ((438, (20, 26)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((451, (12, 17)), '*CHI:\tfirst juice .\n'), ((454, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((457, (10, 15)), '*MOT:\tthe juice first ?\n'), ((461, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((471, (6, 11)), '*CHI:\tjuice please [?] .\n'), ((477, (14, 19)), '*CHI:\t<enough juice> [>] .\n'), ((513, (6, 14)), '*GPA:\ttomatoes ?\n'), ((675, (14, 26)), '*MOT:\toh this tartar sauce (..) +...\n'), ((721, (18, 23)), '*CHI:\tyou gave me candy .\n'), ((725, (17, 22)), '*MOT:\tI gave you candy .\n'), ((775, (30, 34)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((775, (35, 39)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((793, (23, 28)), '*MOT:\tdid you eat some beans ?\n'), ((813, (36, 41)), '*MOT:\tyou want me to cut your brown bread ?\n'), ((830, (21, 25)), '*MOT:\tokay I cut one fish stick [?] xxx .\n'), ((859, (37, 42)), '*GMA:\t<a couple of times he fell and rolls> [>] +...\n'), ((1017, (38, 44)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1153, (28, 32)), '*CHI:\tI want (to) go to the fish store .\n'), ((1164, (22, 26)), '*CHI:\tdid you see the fish man go home (.) ?\n'), ((1169, (30, 34)), '*CHI:\tI wan(t) (to) go to the fish store .\n'), ((1218, (37, 41)), '*CHI:\t<we can> [/] we can run to the fish store .\n'), ((1263, (41, 45)), "*MOT:\tBrad should get out his Berenstein Bear [?] [///] oh I'm going (t)a have_to let Ma read it and that'll tell her what thunder is huh ?\n"), ((1413, (52, 56)), "*CHI:\t<I'm all> [/] I'm all done though I want some milk .\n"), ((1469, (18, 22)), "*MOT:\there's your milk .\n"), ((1500, (12, 17)), "*MOT:\t<well Honey> [<] I don't think we should go .\n"), ((1506, (27, 31)), '*CHI:\tyyy I want go to the fish store .\n'), ((1519, (62, 68)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1519, (98, 103)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1524, (21, 26)), '*GMA:\tyou had enough candy today Lovey .\n'), ((1528, (26, 35)), "*CHI:\tMommy I'm gonna get ice cream .\n"), ((1537, (20, 34)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1562, (15, 24)), '*MOT:\t<want an ice cream too> [>] .\n'), ((1569, (6, 15)), '*GMA:\tice cream is better .\n'), ((1573, (53, 62)), '*CHI:\tMa I wan(t) (t)a go to the store and get <some ice cream> [>] .\n'), ((1579, (14, 19)), '*GMA:\t<but no candy> [<] .\n'), ((1582, (18, 23)), '*CHI:\tno just [?] candy .\n'), ((1585, (30, 34)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1585, (54, 63)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1593, (9, 14)), '*GMA:\tno candy .\n'), ((1599, (30, 34)), '*CHI:\tMa you wan(t) go to the fish store with me and my Mama ?\n'), ((1639, (44, 49)), '*CHI:\t&-um Mommy I wan(t) (t)a bring my new water gun to the preschool [>] .\n'), ((1702, (-1, 4)), '*MOT:\twhat Honey ?\n'), ((1702, (11, 16)), '*MOT:\twhat Honey ?\n'), ((1713, (57, 62)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (81, 90)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (94, 98)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1726, (34, 38)), '*MOT:\tcome up here and drink your milk (.) .\n'), ((1732, (31, 37)), "*GPA:\tyou're not gonna eat any supper at all ?\n"), ((2121, (14, 23)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n'), ((2121, (50, 54)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'fish cakes', 'brown bread', 'catsup', 'tartar sauce', 'cake', 'ice cream bar', 'candy', 'ice cream', 'juice', 'beans', 'concord grapes', 'fish cake', 'fish stick', 'margarine', 'mayonnaise', 'milk', 'tomatoes'])
predicted labels:
set(['', 'fish', 'honey', 'juice', 'margarine', 'rolls', 'ice cream', 'milk', 'ice cream bar[', 'mayonnaise', 'tomatoes', 'catsup', 'bear', 'water', 'lunch', 'grapes', 'supper', 'bread', 'butter', 'tartar sauce', 'candy', 'dinner', 'beans', 'cake'])
file:HSLLD/HV1/MT//bramt1.cha
precision: 0.5
recall: 0.666666666667
true positives:['beans', 'butter', 'cake', 'candy', 'catsup', 'ice cream', 'juice', 'margarine', 'mayonnaise', 'milk', 'tartar sauce', 'tomatoes']
false positives: ['', 'bear', 'bread', 'dinner', 'fish', 'grapes', 'honey', 'ice cream bar[', 'lunch', 'rolls', 'supper', 'water']
false negatives: ['brown bread', 'concord grapes', 'fish cake', 'fish cakes', 'fish stick', 'ice cream bar']
# true pos: 12
# false pos: 12
# false neg: 6
HSLLD/HV1/MT//kurmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//kurmt1.cha
HSLLD/HV1/MT//termt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//termt1.cha
HSLLD/HV1/MT//brnmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('that', 'DT'), ('song', 'NN')])
('tags -> ', '     (i->NN) (like->IN) (that->DT) (song->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('sing', 'NN'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (sing->NN) (at->IN) (the->DT) (table->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('sings', 'NNS')])
('tags -> ', '     (xxx->JJ) (sings->NNS) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('xxx', 'NN'), ('there', 'RB')])
('tags -> ', '     (mommy->NN) (xxx->NN) (there->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('carmen', 'NNS'), ('s', 'VBP'), ('comin', 'JJ'), ('g', 'NN'), ('over', 'IN')])
('tags -> ', '     (carmen->NNS) (s->VBP) (comin->JJ) (g->NN) (over->IN) ')
('tags initial-> ', [('yay', 'NN')])
('tags -> ', '     (yay->NN) ')
candidates to check:
2
('tags initial-> ', [('see', 'NN'), ('i', 'NN'), ('told', 'VBD'), ('you', 'PRP'), ('and', 'CC'), ('you', 'PRP'), ('said', 'VBD'), ('word', 'NN'), ('q', 'NN')])
('tags -> ', '     (see->NN) (i->NN) (told->VBD) (you->PRP) (and->CC) (you->PRP) (said->VBD) (word->NN) (q->NN) ')
('tags initial-> ', [('i', 'NN'), ('told', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (told->VBD) (you->PRP) ')
('tags initial-> ', [('now', 'RB')])
('tags -> ', '     (now->RB) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('now', 'RB'), ('say', 'VBP'), ('no', 'DT'), ('more', 'JJR')])
('tags -> ', '     (mommy->NN) (now->RB) (say->VBP) (no->DT) (more->JJR) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('dirty', 'NN'), ('song', 'NN'), ('right', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (dirty->NN) (song->NN) (right->NN) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('don', 'NN'), ('t', 'NNS'), ('say', 'VBP'), ('that', 'IN'), ('that', 'DT'), ('s', 'VBZ'), ('dirty', 'JJ'), ('stuff', 'NN')])
('tags -> ', '     (no->DT) (don->NN) (t->NNS) (say->VBP) (that->IN) (that->DT) (s->VBZ) (dirty->JJ) (stuff->NN) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ')])
('tags -> ', '     (what->WP) (is->VBZ) ')
('tags initial-> ', [('the', 'DT'), ('one', 'CD'), ('shayla', 'NN'), ('was', 'VBD'), ('singing', 'VBG')])
('tags -> ', '     (the->DT) (one->CD) (shayla->NN) (was->VBD) (singing->VBG) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('isn', 'VBZ'), ('t', 'VBP'), ('that', 'IN'), ('s', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('dirty', 'NN'), ('song', 'NN')])
('tags -> ', '     (that->DT) (isn->VBZ) (t->VBP) (that->IN) (s->VBZ) (not->RB) (a->DT) (dirty->NN) (song->NN) ')
candidates to check:
1
('tags initial-> ', [('momma', 'NN'), ('i', 'NN'), ('not', 'RB'), ('singin', 'VB'), ('g', 'NN')])
('tags -> ', '     (momma->NN) (i->NN) (not->RB) (singin->VB) (g->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('supposed', 'VBN'), ('to', 'TO')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (supposed->VBN) (to->TO) ')
candidates to check:
2
('tags initial-> ', [('momma', 'NN'), ('on', 'IN'), ('tv', 'NN'), ('um', 'NN'), ('it', 'PRP'), ('says', 'VBZ'), ('you', 'PRP'), ('better', 'JJR'), ('get', 'VB'), ('to', 'TO'), ('see', 'VB'), ('amy', 'JJ'), ('back', 'RB')])
('tags -> ', '     (momma->NN) (on->IN) (tv->NN) (um->NN) (it->PRP) (says->VBZ) (you->PRP) (better->JJR) (get->VB) (to->TO) (see->VB) (amy->JJ) (back->RB) ')
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('thinkin', 'JJ'), ('g', 'NN'), ('about', 'IN'), ('shayla', 'NN')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (thinkin->JJ) (g->NN) (about->IN) (shayla->NN) ')
('tags initial-> ', [('i', 'NN'), ('said', 'VBD'), ('no', 'DT')])
('tags -> ', '     (i->NN) (said->VBD) (no->DT) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (gon->VB) (na->TO) (do->VB) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('coughs', 'NNS')])
('tags -> ', '     (coughs->NNS) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) ')
candidates to check:
2
('tags initial-> ', [('ya', 'RB'), ('ll', 'VB'), ('you', 'PRP'), ('all', 'DT'), ('don', 'VBP'), ('t', 'NN'), ('no', 'DT'), ('where', 'WRB'), ('them', 'PRP'), ('ear', 'VB'), ('rings', 'NNS'), ('at', 'IN'), ('anyways', 'NNS')])
('tags -> ', '     (ya->RB) (ll->VB) (you->PRP) (all->DT) (don->VBP) (t->NN) (no->DT) (where->WRB) (them->PRP) (ear->VB) (rings->NNS) (at->IN) (anyways->NNS) ')
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (yeah->NN) (i->NN) (know->VBP) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('xxx', 'NNS'), ('supposed', 'VBD'), ('eat', 'NN'), ('with', 'IN'), ('your', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (mommy->NN) (xxx->NNS) (supposed->VBD) (eat->NN) (with->IN) (your->PRP$) (hands->NNS) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('do', 'VBP'), ('you', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('eat', 'VB'), ('with', 'IN'), ('your', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (why->WRB) (do->VBP) (you->PRP) (have->VB) (to->TO) (eat->VB) (with->IN) (your->PRP$) (hand->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 40, 44]
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('be', 'VB'), ('cause', 'VBN'), ('xxx', 'JJ'), ('food', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (be->VB) (cause->VBN) (xxx->JJ) (food->NN) ')
('tags initial-> ', [('it', 'PRP'), ('don', 'VBZ'), ('t', 'JJ'), ('come', 'NN'), ('on', 'IN')])
('tags -> ', '     (it->PRP) (don->VBZ) (t->JJ) (come->NN) (on->IN) ')
('tags initial-> ', [('it', 'PRP'), ('sticks', 'VBZ'), ('together', 'RB')])
('tags -> ', '     (it->PRP) (sticks->VBZ) (together->RB) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('i', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('put', 'VB'), ('xxx', 'NNP'), ('and', 'CC'), ('put', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('my', 'PRP$'), ('fork', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('it', 'PRP'), ('that', 'IN'), ('s', 'VBZ'), ('why', 'WRB')])
('tags -> ', '     (so->RB) (i->RB) (have->VBP) (to->TO) (put->VB) (xxx->NNP) (and->CC) (put->VBD) (it->PRP) (on->IN) (my->PRP$) (fork->NN) (and->CC) (eat->VB) (it->PRP) (that->IN) (s->VBZ) (why->WRB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('momma', 'NN'), ('did', 'VBD'), ('i', 'VB'), ('eats', 'NNS'), ('almost', 'RB'), ('half', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('or', 'CC'), ('some', 'DT')])
('tags -> ', '     (momma->NN) (did->VBD) (i->VB) (eats->NNS) (almost->RB) (half->NN) (of->IN) (it->PRP) (or->CC) (some->DT) ')
('tags initial-> ', [('some', 'DT')])
('tags -> ', '     (some->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('eat', 'VBP'), ('a', 'DT'), ('lot', 'NN')])
('tags -> ', '     (i->NN) (eat->VBP) (a->DT) (lot->NN) ')
('tags initial-> ', [('some', 'DT')])
('tags -> ', '     (some->DT) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('um', 'NN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('eat', 'VB'), ('all', 'DT'), ('of', 'IN'), ('it', 'PRP'), ('be', 'VB'), ('cause', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('just', 'RB'), ('eat', 'VB'), ('some', 'DT')])
('tags -> ', '     (mommy->NN) (um->NN) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (to->TO) (eat->VB) (all->DT) (of->IN) (it->PRP) (be->VB) (cause->IN) (you->PRP) (can->MD) (just->RB) (eat->VB) (some->DT) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 38, 42]
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('supposed', 'VBN'), ('to', 'TO'), ('eat', 'VB'), ('all', 'DT'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (supposed->VBN) (to->TO) (eat->VB) (all->DT) (your->PRP$) (food->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('doing', 'VBG')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (doing->VBG) ')
('tags initial-> ', [('i', 'NN'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (done->VBN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('talk', 'VB'), ('xxx', 'VB')])
('tags -> ', '     (and->CC) (you->PRP) (can->MD) (talk->VB) (xxx->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('mommy', 'VBP')])
('tags -> ', '     (and->CC) (you->PRP) (mommy->VBP) ')
candidates to check:
1
salt
salt salt 0
[('um', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('takin', 'NN'), ('g', 'NN'), ('the', 'DT'), ('salt', 'NN'), ('off', 'IN')]
['salt']
('tags initial-> ', [('um', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('takin', 'NN'), ('g', 'NN'), ('the', 'DT'), ('salt', 'NN'), ('off', 'IN')])
('tags -> ', '     (um->JJ) (i->NN) (m->VBP) (takin->NN) (g->NN) (the->DT) (salt->NN) (off->IN) ')
candidates to check:
2
salt
salt salt 0
[('i', 'JJ'), ('hate', 'VBP'), ('salt', 'NN')]
['salt']
('tags initial-> ', [('i', 'JJ'), ('hate', 'VBP'), ('salt', 'NN')])
('tags -> ', '     (i->JJ) (hate->VBP) (salt->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('drink', 'VBP'), ('my', 'PRP$'), ('my', 'PRP$'), ('soda', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (drink->VBP) (my->PRP$) (my->PRP$) (soda->NN) ')
('tags initial-> ', [('could', 'MD'), ('i', 'VB')])
('tags -> ', '     (could->MD) (i->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('why', 'WRB')])
('tags -> ', '     (you->PRP) (know->VBP) (why->WRB) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('drank', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (can->MD) (be->VB) (cause->NN) (you->PRP) (drank->VBP) (some->DT) (of->IN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('mom', 'NN'), ('i', 'NN'), ('drink', 'VBP'), ('all', 'DT'), ('my', 'PRP$'), ('soda', 'NN')])
('tags -> ', '     (well->RB) (mom->NN) (i->NN) (drink->VBP) (all->DT) (my->PRP$) (soda->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'JJ'), ('mo', 'NN'), ('mommy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (mo->NN) (mommy->NN) (xxx->NN) ')
('tags initial-> ', [('mommy', 'NN'), ('you', 'PRP'), ('do', 'VBP'), ('like', 'IN'), ('this', 'DT'), ('won', 'VBD'), ('t', 'JJ'), ('be', 'VB'), ('hot', 'JJ')])
('tags -> ', '     (mommy->NN) (you->PRP) (do->VBP) (like->IN) (this->DT) (won->VBD) (t->JJ) (be->VB) (hot->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('copying', 'VBG'), ('me', 'PRP')])
('tags -> ', '     (you->PRP) (copying->VBG) (me->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('did', 'VBD'), ('she', 'PRP'), ('copy', 'NN'), ('you', 'PRP')])
('tags -> ', '     (xxx->NN) (did->VBD) (she->PRP) (copy->NN) (you->PRP) ')
('tags initial-> ', [('well', 'RB'), ('did', 'VBD'), ('she', 'PRP'), ('copy', 'NN'), ('you', 'PRP')])
('tags -> ', '     (well->RB) (did->VBD) (she->PRP) (copy->NN) (you->PRP) ')
('tags initial-> ', [('mhm', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('i', 'NN'), ('did', 'VBD'), ('that', 'IN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('think', 'NN')])
('tags -> ', '     (mhm->RB) (be->VB) (cause->NN) (i->NN) (did->VBD) (that->IN) (i->NN) (don->VBP) (t->NN) (think->NN) ')
('tags initial-> ', [('plus', 'CC'), ('xxx', 'NN')])
('tags -> ', '     (plus->CC) (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('do', 'VBP')])
('tags -> ', '     (i->NN) (didn->NN) (t->NN) (do->VBP) ')
candidates to check:
1
('tags initial-> ', [('plus', 'CC'), ('yeah', 'VB'), ('she', 'PRP'), ('did', 'VBD'), ('she', 'PRP'), ('didn', 'VB'), ('t', 'JJ'), ('put', 'VBN'), ('on', 'IN'), ('a', 'DT'), ('tape', 'NN')])
('tags -> ', '     (plus->CC) (yeah->VB) (she->PRP) (did->VBD) (she->PRP) (didn->VB) (t->JJ) (put->VBN) (on->IN) (a->DT) (tape->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('who', 'WP'), ('do', 'VBP'), ('that', 'IN')])
('tags -> ', '     (who->WP) (do->VBP) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('the', 'DT'), ('church', 'NN')])
('tags -> ', '     (at->IN) (the->DT) (church->NN) ')
candidates to check:
2
descended from food: [['N'], 'food', 81, 85]
('tags initial-> ', [('we', 'PRP'), ('do', 'VBP'), ('that', 'DT'), ('at', 'IN'), ('the', 'DT'), ('church', 'NN'), ('when', 'WRB'), ('it', 'PRP'), ('s', 'VBD'), ('a', 'DT'), ('when', 'WRB'), ('when', 'WRB'), ('god', 'NN'), ('give', 'VBP'), ('us', 'PRP'), ('some', 'DT'), ('food', 'NN'), ('you', 'PRP'), ('supposed', 'VBD'), ('to', 'TO'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (we->PRP) (do->VBP) (that->DT) (at->IN) (the->DT) (church->NN) (when->WRB) (it->PRP) (s->VBD) (a->DT) (when->WRB) (when->WRB) (god->NN) (give->VBP) (us->PRP) (some->DT) (food->NN) (you->PRP) (supposed->VBD) (to->TO) (do->VB) (that->DT) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('mommy', 'JJ'), ('um', 'NN'), ('we', 'PRP'), ('xxx', 'VBP'), ('at', 'IN'), ('school', 'NN'), ('punched', 'VBD'), ('me', 'PRP'), ('on', 'IN'), ('on', 'IN'), ('the', 'DT'), ('um', 'NN'), ('on', 'IN'), ('on', 'IN'), ('my', 'PRP$'), ('heart', 'NN')])
('tags -> ', '     (and->CC) (mommy->JJ) (um->NN) (we->PRP) (xxx->VBP) (at->IN) (school->NN) (punched->VBD) (me->PRP) (on->IN) (on->IN) (the->DT) (um->NN) (on->IN) (on->IN) (my->PRP$) (heart->NN) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('your', 'PRP$'), ('heart', 'NN')])
('tags -> ', '     (on->IN) (your->PRP$) (heart->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('they', 'PRP'), ('do', 'VB'), ('with', 'IN'), ('when', 'WRB'), ('when', 'WRB'), ('when', 'WRB'), ('you', 'PRP'), ('punch', 'VBP'), ('th', 'JJ'), ('em', 'NN'), ('in', 'IN'), ('the', 'DT'), ('heart', 'NN')])
('tags -> ', '     (what->WP) (do->VBP) (they->PRP) (do->VB) (with->IN) (when->WRB) (when->WRB) (when->WRB) (you->PRP) (punch->VBP) (th->JJ) (em->NN) (in->IN) (the->DT) (heart->NN) ')
('tags initial-> ', [('alright', 'JJ'), ('brenda', 'NN'), ('stop', 'NN'), ('playin', 'NN'), ('g', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (alright->JJ) (brenda->NN) (stop->NN) (playin->NN) (g->NN) (in->IN) (it->PRP) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
3
('tags initial-> ', [('so', 'RB'), ('what', 'WP'), ('ya', 'PRP'), ('ll', 'VBP'), ('you', 'PRP'), ('all', 'DT'), ('do', 'VBP'), ('at', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (so->RB) (what->WP) (ya->PRP) (ll->VBP) (you->PRP) (all->DT) (do->VBP) (at->IN) (school->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('play', 'NN'), ('with', 'IN'), ('xxx', 'NN'), ('by', 'IN'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (play->NN) (with->IN) (xxx->NN) (by->IN) (the->DT) (xxx->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('all', 'DT')])
('tags -> ', '     (that->DT) (s->VBZ) (all->DT) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) (mommy->NN) ')
candidates to check:
4
('tags initial-> ', [('i', 'JJ'), ('went', 'VBD'), ('to', 'TO'), ('a', 'DT'), ('fun', 'NN'), ('park', 'NN'), ('it', 'PRP'), ('was', 'VBD'), ('so', 'RB'), ('fun', 'JJ'), ('mommy', 'NN'), ('you', 'PRP'), ('should', 'MD'), ('of', 'IN'), ('had', 'VBD'), ('went', 'VBD'), ('there', 'RB')])
('tags -> ', '     (i->JJ) (went->VBD) (to->TO) (a->DT) (fun->NN) (park->NN) (it->PRP) (was->VBD) (so->RB) (fun->JJ) (mommy->NN) (you->PRP) (should->MD) (of->IN) (had->VBD) (went->VBD) (there->RB) ')
candidates to check:
2
('tags initial-> ', [('um', 'NN'), ('it', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('big', 'JJ'), ('huge', 'JJ'), ('castle', 'NN')])
('tags -> ', '     (um->NN) (it->PRP) (had->VBD) (a->DT) (big->JJ) (big->JJ) (huge->JJ) (castle->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('big', 'JJ'), ('it', 'PRP'), ('it', 'PRP'), ('was', 'VBD'), ('bigger', 'JJR'), ('than', 'IN'), ('a', 'DT'), ('chair', 'NN'), ('or', 'CC'), ('a', 'DT'), ('table', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (big->JJ) (it->PRP) (it->PRP) (was->VBD) (bigger->JJR) (than->IN) (a->DT) (chair->NN) (or->CC) (a->DT) (table->NN) ')
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('flying', 'VBG'), ('shayla', 'NN')])
('tags -> ', '     (i->NN) (was->VBD) (flying->VBG) (shayla->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('brenda', 'VB'), ('go', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (brenda->VB) (go->VB) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('big', 'JJ'), ('than', 'IN'), ('than', 'IN'), ('than', 'IN'), ('a', 'DT'), ('window', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'JJ'), ('went', 'VBD'), ('in', 'IN'), ('it', 'PRP'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP')])
('tags -> ', '     (it->PRP) (was->VBD) (big->JJ) (than->IN) (than->IN) (than->IN) (a->DT) (window->NN) (and->CC) (guess->VB) (what->WP) (i->JJ) (went->VBD) (in->IN) (it->PRP) (and->CC) (guess->VB) (what->WP) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('big', 'JJ'), ('now', 'RB')])
('tags -> ', '     (i->NN) (m->VBP) (big->JJ) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('door', 'NN')])
('tags -> ', '     (they->PRP) (had->VBD) (a->DT) (door->NN) ')
('tags initial-> ', [('ma', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('bigger', 'JJR'), ('now', 'RB')])
('tags -> ', '     (ma->NN) (i->NN) (m->VBP) (bigger->JJR) (now->RB) ')
('tags initial-> ', [('and', 'CC'), ('xxx', 'NNP'), ('you', 'PRP'), ('when', 'WRB'), ('you', 'PRP'), ('go', 'VBP'), ('when', 'WRB'), ('you', 'PRP'), ('step', 'VBP'), ('on', 'IN'), ('it', 'PRP'), ('it', 'PRP'), ('it', 'PRP'), ('goes', 'VBZ'), ('around', 'IN')])
('tags -> ', '     (and->CC) (xxx->NNP) (you->PRP) (when->WRB) (you->PRP) (go->VBP) (when->WRB) (you->PRP) (step->VBP) (on->IN) (it->PRP) (it->PRP) (it->PRP) (goes->VBZ) (around->IN) ')
('tags initial-> ', [('i', 'NN'), ('knocked', 'VBD'), ('down', 'RB'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (knocked->VBD) (down->RB) (xxx->NN) ')
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('say', 'VBP'), ('bren', 'NNS')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (say->VBP) (bren->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NNS'), ('bigger', 'JJR'), ('now', 'RB')])
('tags -> ', '     (i->JJ) (m->NNS) (bigger->JJR) (now->RB) ')
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('say', 'VBP'), ('after', 'IN'), ('that', 'DT')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (say->VBP) (after->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('play', 'VBP'), ('xxx', 'PDT'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (i->VBP) (play->VBP) (xxx->PDT) (a->DT) (xxx->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('um', 'NN'), ('and', 'CC'), ('and', 'CC'), ('they', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('when', 'WRB'), ('you', 'PRP'), ('step', 'VBP'), ('on', 'IN'), ('it', 'PRP'), ('it', 'PRP'), ('goes', 'VBZ'), ('around', 'IN')])
('tags -> ', '     (mommy->NN) (um->NN) (and->CC) (and->CC) (they->PRP) (have->VBP) (to->TO) (go->VB) (when->WRB) (you->PRP) (step->VBP) (on->IN) (it->PRP) (it->PRP) (goes->VBZ) (around->IN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('someone', 'NN'), ('has', 'VBZ'), ('to', 'TO'), ('push', 'VB'), ('and', 'CC'), ('it', 'PRP'), ('goes', 'VBZ'), ('back', 'RB')])
('tags -> ', '     (someone->NN) (has->VBZ) (to->TO) (push->VB) (and->CC) (it->PRP) (goes->VBZ) (back->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('only', 'RB'), ('two', 'CD'), ('supposed', 'VBD'), ('to', 'TO'), ('be', 'VB'), ('on', 'IN'), ('it', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('it', 'PRP'), ('s', 'VBZ'), ('only', 'RB'), ('a', 'DT'), ('little', 'JJ'), ('one', 'NN')])
('tags -> ', '     (only->RB) (two->CD) (supposed->VBD) (to->TO) (be->VB) (on->IN) (it->PRP) (be->VB) (cause->VBN) (it->PRP) (s->VBZ) (only->RB) (a->DT) (little->JJ) (one->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('little', 'JJ'), ('door', 'NN')])
('tags -> ', '     (a->DT) (little->JJ) (door->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('green', 'JJ'), ('door', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (a->DT) (green->JJ) (door->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('so', 'RB'), ('funny', 'JJ')])
('tags -> ', '     (what->WP) (s->VBD) (so->RB) (funny->JJ) ')
candidates to check:
2
('tags initial-> ', [('i', 'NNS'), ('do', 'VBP'), ('smacking', 'VBG'), ('lips', 'NNS')])
('tags -> ', '     (i->NNS) (do->VBP) (smacking->VBG) (lips->NNS) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('lisette', 'NN'), ('s', 'NN'), ('so', 'RB'), ('mean', 'JJ'), ('and', 'CC'), ('bad', 'JJ')])
('tags -> ', '     (mommy->NN) (lisette->NN) (s->NN) (so->RB) (mean->JJ) (and->CC) (bad->JJ) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('now', 'RB')])
('tags -> ', '     (now->RB) ')
('tags initial-> ', [('now', 'RB'), ('what', 'WP')])
('tags -> ', '     (now->RB) (what->WP) ')
('tags initial-> ', [('um', 'NN'), ('that', 'IN'), ('xxx', 'NN'), ('and', 'CC'), ('xxx', 'JJ'), ('come', 'NN'), ('over', 'IN'), ('now', 'RB')])
('tags -> ', '     (um->NN) (that->IN) (xxx->NN) (and->CC) (xxx->JJ) (come->NN) (over->IN) (now->RB) ')
('tags initial-> ', [('right', 'RB'), ('now', 'RB')])
('tags -> ', '     (right->RB) (now->RB) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('while', 'NN')])
('tags -> ', '     (in->IN) (a->DT) (little->JJ) (while->NN) ')
candidates to check:
1
('tags initial-> ', [('alright', 'NN'), ('clean', 'VBZ'), ('up', 'RP'), ('your', 'PRP$'), ('mess', 'NN')])
('tags -> ', '     (alright->NN) (clean->VBZ) (up->RP) (your->PRP$) (mess->NN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clears', 'NNS'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clears->NNS) (throat->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('something', 'NN'), ('s', 'NNS'), ('xxx', 'VBP')])
('tags -> ', '     (something->NN) (s->NNS) (xxx->VBP) ')
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('little', 'JJ'), ('slide', 'NN'), ('and', 'CC')])
('tags -> ', '     (and->CC) (it->PRP) (had->VBD) (a->DT) (little->JJ) (slide->NN) (and->CC) ')
('tags initial-> ', [('running', 'VBG'), ('too', 'RB'), ('fast', 'RB')])
('tags -> ', '     (running->VBG) (too->RB) (fast->RB) ')
('tags initial-> ', [('she', 'PRP'), ('she', 'PRP'), ('she', 'PRP'), ('crashed', 'VBD'), ('into', 'IN'), ('it', 'PRP')])
('tags -> ', '     (she->PRP) (she->PRP) (she->PRP) (crashed->VBD) (into->IN) (it->PRP) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('hurts', 'VBZ')])
('tags -> ', '     (and->CC) (it->PRP) (hurts->VBZ) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
4
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('blood', 'NN'), ('in', 'IN'), ('it', 'PRP'), ('xxx', 'VBZ'), ('way', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (blood->NN) (in->IN) (it->PRP) (xxx->VBZ) (way->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('xxx', "''"), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', "     (mommy->NN) (xxx->'') (my->PRP$) (xxx->NN) ")
candidates to check:
1
('tags initial-> ', [('see', 'VB'), ('my', 'PRP$'), ('bubble', 'JJ')])
('tags -> ', '     (see->VB) (my->PRP$) (bubble->JJ) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('bubble', 'NN')])
('tags -> ', '     (what->WP) (bubble->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('look', 'VB'), ('all', 'PDT'), ('the', 'DT'), ('bubble', 'JJ'), ('mommy', 'NN')])
('tags -> ', '     (look->VB) (all->PDT) (the->DT) (bubble->JJ) (mommy->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('when', 'WRB'), ('my', 'PRP$'), ('xxx', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (mommy->NN) (when->WRB) (my->PRP$) (xxx->NN) (gon->NN) (na->TO) (xxx->VB) ')
('tags initial-> ', [('xxx', 'NNS'), ('leave', 'VBP'), ('it', 'PRP'), ('alone', 'RB')])
('tags -> ', '     (xxx->NNS) (leave->VBP) (it->PRP) (alone->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('humming', 'VBG')])
('tags -> ', '     (humming->VBG) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('doing', 'VBG'), ('singing', 'VBG'), ('or', 'CC'), ('talkin', 'JJ'), ('g', 'NN')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (doing->VBG) (singing->VBG) (or->CC) (talkin->JJ) (g->NN) ')
('tags initial-> ', [('look', 'NN'), ('are', 'VBP'), ('you', 'PRP'), ('xxx', 'VBP')])
('tags -> ', '     (look->NN) (are->VBP) (you->PRP) (xxx->VBP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('um', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (um->JJ) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('count', 'VB'), ('your', 'PRP$'), ('numbers', 'NNS')])
('tags -> ', '     (count->VB) (your->PRP$) (numbers->NNS) ')
('tags initial-> ', [('i', 'NN'), ('thought', 'VBD'), ('you', 'PRP'), ('could', 'MD'), ('only', 'RB'), ('count', 'VB'), ('up', 'RP'), ('to', 'TO'), ('five', 'CD'), ('but', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('count', 'VB'), ('to', 'TO'), ('eleven', 'VB')])
('tags -> ', '     (i->NN) (thought->VBD) (you->PRP) (could->MD) (only->RB) (count->VB) (up->RP) (to->TO) (five->CD) (but->CC) (you->PRP) (can->MD) (count->VB) (to->TO) (eleven->VB) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('two', 'CD'), ('three', 'CD'), ('four', 'CD'), ('five', 'CD'), ('six', 'CD'), ('seven', 'CD'), ('eight', 'CD'), ('nine', 'CD')])
('tags -> ', '     (one->CD) (two->CD) (three->CD) (four->CD) (five->CD) (six->CD) (seven->CD) (eight->CD) (nine->CD) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('go', 'VB'), ('on', 'IN')])
('tags -> ', '     (go->VB) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('count', 'VB'), ('to', 'TO'), ('anything', 'NN')])
('tags -> ', '     (i->NN) (know->VBP) (how->WRB) (to->TO) (count->VB) (to->TO) (anything->NN) ')
('tags initial-> ', [('one', 'CD')])
('tags -> ', '     (one->CD) ')
('tags initial-> ', [('one', 'CD'), ('two', 'CD'), ('three', 'CD'), ('four', 'CD'), ('five', 'CD'), ('six', 'CD'), ('seven', 'CD'), ('eight', 'CD'), ('nine', 'CD'), ('ten', 'NNS'), ('eleven', 'RB'), ('twelve', 'VBP'), ('thirteen', 'JJ'), ('fourteen', 'JJ'), ('fifteen', 'JJ'), ('twenty', 'NN'), ('one', 'CD'), ('twenty', 'NN'), ('two', 'CD'), ('twenty', 'NN'), ('three', 'CD'), ('xxx', 'NN')])
('tags -> ', '     (one->CD) (two->CD) (three->CD) (four->CD) (five->CD) (six->CD) (seven->CD) (eight->CD) (nine->CD) (ten->NNS) (eleven->RB) (twelve->VBP) (thirteen->JJ) (fourteen->JJ) (fifteen->JJ) (twenty->NN) (one->CD) (twenty->NN) (two->CD) (twenty->NN) (three->CD) (xxx->NN) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('then', 'RB'), ('what', 'WP')])
('tags -> ', '     (then->RB) (what->WP) ')
('tags initial-> ', [('after', 'IN'), ('fifteen', 'JJ'), ('sixteen', 'JJ'), ('seventeen', 'NN'), ('eighteen', 'NN'), ('nineteen', 'JJ'), ('twenty', 'JJ'), ('twenty', 'NN'), ('one', 'CD')])
('tags -> ', '     (after->IN) (fifteen->JJ) (sixteen->JJ) (seventeen->NN) (eighteen->NN) (nineteen->JJ) (twenty->JJ) (twenty->NN) (one->CD) ')
candidates to check:
1
('tags initial-> ', [('nineteen', 'JJ'), ('twenty', 'NN'), ('twenty', 'NN'), ('one', 'CD'), ('twenty', 'NN'), ('two', 'CD'), ('twenty', 'NN'), ('three', 'CD'), ('twenty', 'IN'), ('four', 'CD'), ('twenty', 'NN'), ('five', 'CD'), ('twenty', 'NN'), ('six', 'CD'), ('twenty', 'NN'), ('seven', 'CD'), ('twenty', 'JJ'), ('eight', 'CD'), ('twenty', 'NNS'), ('nine', 'CD')])
('tags -> ', '     (nineteen->JJ) (twenty->NN) (twenty->NN) (one->CD) (twenty->NN) (two->CD) (twenty->NN) (three->CD) (twenty->IN) (four->CD) (twenty->NN) (five->CD) (twenty->NN) (six->CD) (twenty->NN) (seven->CD) (twenty->JJ) (eight->CD) (twenty->NNS) (nine->CD) ')
('tags initial-> ', [('thirty', 'NN')])
('tags -> ', '     (thirty->NN) ')
candidates to check:
4
('tags initial-> ', [('thirty', 'NN'), ('one', 'CD'), ('thirty', 'NN'), ('two', 'CD'), ('thirty', 'NN'), ('three', 'CD'), ('thirty', 'IN'), ('four', 'CD'), ('thirty', 'NN'), ('five', 'CD'), ('thirty', 'NN'), ('six', 'CD'), ('xxx', 'NNP'), ('thirty', 'VBD'), ('seven', 'CD'), ('thirty', 'JJ'), ('eight', 'CD'), ('thirty', 'NNS'), ('nine', 'CD')])
('tags -> ', '     (thirty->NN) (one->CD) (thirty->NN) (two->CD) (thirty->NN) (three->CD) (thirty->IN) (four->CD) (thirty->NN) (five->CD) (thirty->NN) (six->CD) (xxx->NNP) (thirty->VBD) (seven->CD) (thirty->JJ) (eight->CD) (thirty->NNS) (nine->CD) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('two', 'CD'), ('three', 'CD'), ('four', 'CD'), ('five', 'CD')])
('tags -> ', '     (one->CD) (two->CD) (three->CD) (four->CD) (five->CD) ')
('tags initial-> ', [('thirty', 'NN')])
('tags -> ', '     (thirty->NN) ')
candidates to check:
3
('tags initial-> ', [('thirty', 'JJ'), ('nine', 'CD'), ('forty', 'NN')])
('tags -> ', '     (thirty->JJ) (nine->CD) (forty->NN) ')
('tags initial-> ', [('nine', 'CD'), ('ten', 'JJ'), ('elev', 'FW'), ('en', 'FW'), ('one', 'CD'), ('four', 'CD'), ('five', 'CD'), ('six', 'CD'), ('seven', 'CD')])
('tags -> ', '     (nine->CD) (ten->JJ) (elev->FW) (en->FW) (one->CD) (four->CD) (five->CD) (six->CD) (seven->CD) ')
('tags initial-> ', [('four', 'CD')])
('tags -> ', '     (four->CD) ')
('tags initial-> ', [('xxx', 'NN'), ('eighteen', 'NN')])
('tags -> ', '     (xxx->NN) (eighteen->NN) ')
('tags initial-> ', [('eat', 'NN')])
('tags -> ', '     (eat->NN) ')
('tags initial-> ', [('eat', 'NN'), ('eat', 'NN'), ('eat', 'NN')])
('tags -> ', '     (eat->NN) (eat->NN) (eat->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'MD'), ('not', 'RB'), ('eating', 'VBG'), ('her', 'PRP'), ('bottle', 'NN')])
('tags -> ', '     (xxx->MD) (not->RB) (eating->VBG) (her->PRP) (bottle->NN) ')
candidates to check:
1
('tags initial-> ', [('momma', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('i', 'NN'), ('can', 'MD'), ('not', 'RB'), ('eat', 'VB'), ('a', 'DT'), ('bottle', 'NN')])
('tags -> ', '     (momma->NN) (know->VBP) (what->WP) (i->NN) (can->MD) (not->RB) (eat->VB) (a->DT) (bottle->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('my', 'PRP$'), ('cup', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (my->PRP$) (cup->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP'), ('eat', 'NN'), ('eat', 'NN'), ('it', 'PRP'), ('all', 'DT'), ('mom', 'NN')])
('tags -> ', '     (i->NN) (xxx->VBP) (eat->NN) (eat->NN) (it->PRP) (all->DT) (mom->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 50, 54]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e02ff098>)
[('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('fat', 'JJ'), ('um', 'NN'), ('that', 'IN'), ('meat', 'NN'), ('brenda', 'NN'), ('xxx', 'NN')]
['meat']
fat
fat fat 900
[('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('fat', 'JJ'), ('um', 'NN'), ('that', 'IN'), ('meat', 'NN'), ('brenda', 'NN'), ('xxx', 'NN')]
['fat']
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('fat', 'JJ'), ('um', 'NN'), ('that', 'IN'), ('meat', 'NN'), ('brenda', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (how->WRB) (to->TO) (eat->VB) (that->DT) (fat->JJ) (um->NN) (that->IN) (meat->NN) (brenda->NN) (xxx->NN) ')
fat
fat fat 900
[('and', 'CC'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('fat', 'NN')]
['fat']
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('fat', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (fat->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 52, 56]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e02ffb90>)
[('you', 'PRP'), ('need', 'VBP'), ('fat', 'JJ'), ('bren', 'NNS'), ('so', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('meat', 'NN'), ('here', 'RB')]
['meat']
fat
fat fat 900
[('you', 'PRP'), ('need', 'VBP'), ('fat', 'JJ'), ('bren', 'NNS'), ('so', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('meat', 'NN'), ('here', 'RB')]
['fat']
('tags initial-> ', [('you', 'PRP'), ('need', 'VBP'), ('fat', 'JJ'), ('bren', 'NNS'), ('so', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('meat', 'NN'), ('here', 'RB')])
('tags -> ', '     (you->PRP) (need->VBP) (fat->JJ) (bren->NNS) (so->IN) (you->PRP) (know->VBP) (how->WRB) (to->TO) (eat->VB) (that->DT) (meat->NN) (here->RB) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP')])
('tags -> ', '     (i->NN) (xxx->VBP) ')
fat
fat fat 900
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('fat', 'NN')]
['fat']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('fat', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (fat->NN) ')
candidates to check:
2
fat
fat fat 900
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('worry', 'VBP'), ('about', 'IN'), ('fat', 'NN'), ('i', 'NN'), ('ain', 'VBP'), ('t', 'NN'), ('nothing', 'NN'), ('to', 'TO'), ('explain', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('you', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('it', 'PRP'), ('here', 'RB')]
['fat']
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('worry', 'VBP'), ('about', 'IN'), ('fat', 'NN'), ('i', 'NN'), ('ain', 'VBP'), ('t', 'NN'), ('nothing', 'NN'), ('to', 'TO'), ('explain', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('you', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('it', 'PRP'), ('here', 'RB')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (don->NN) (t->NN) (worry->VBP) (about->IN) (fat->NN) (i->NN) (ain->VBP) (t->NN) (nothing->NN) (to->TO) (explain->VB) (it->PRP) (to->TO) (you->PRP) (be->VB) (cause->VBN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (it->PRP) (here->RB) ')
candidates to check:
1
fat
fat fat 900
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('no', 'DT'), ('fat', 'NN')]
['fat']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('no', 'DT'), ('fat', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (eat->NN) (no->DT) (fat->NN) ')
('tags initial-> ', [('yes', 'RB'), ('you', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (yes->RB) (you->PRP) (do->VBP) ')
candidates to check:
1
fat
fat fat 900
[('xxx', 'JJ'), ('eat', 'NN'), ('no', 'DT'), ('fat', 'NN')]
['fat']
('tags initial-> ', [('xxx', 'JJ'), ('eat', 'NN'), ('no', 'DT'), ('fat', 'NN')])
('tags -> ', '     (xxx->JJ) (eat->NN) (no->DT) (fat->NN) ')
('tags initial-> ', [('i', 'NN'), ('eat', 'NN')])
('tags -> ', '     (i->NN) (eat->NN) ')
candidates to check:
1
('tags initial-> ', [('coughs', 'NNS')])
('tags -> ', '     (coughs->NNS) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('xxx', 'NNP'), ('teeth', 'NNS'), ('um', 'JJ'), ('and', 'CC'), ('everything', 'NN'), ('xxx', 'NN'), ('eat', 'NN')])
('tags -> ', '     (i->NN) (think->VBP) (xxx->NNP) (teeth->NNS) (um->JJ) (and->CC) (everything->NN) (xxx->NN) (eat->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('mom', 'NN')])
('tags -> ', '     (xxx->NNS) (mom->NN) ')
('tags initial-> ', [('0', 'CD'), ('untelligible', 'JJ'), ('sound', 'NN')])
('tags -> ', '     (0->CD) (untelligible->JJ) (sound->NN) ')
fat
fat fat 900
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('fat', 'NN')]
['fat']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('fat', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (eat->NN) (fat->NN) ')
('tags initial-> ', [('give', 'VB'), ('me', 'PRP')])
('tags -> ', '     (give->VB) (me->PRP) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('hot', 'JJ'), ('so', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('blow', 'VB'), ('it', 'PRP')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (hot->JJ) (so->IN) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (to->TO) (blow->VB) (it->PRP) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (xxx->NN) ')
candidates to check:
1
onions
onions onions 26
[('no', 'DT'), ('onions', 'NNS')]
['onions']
('tags initial-> ', [('no', 'DT'), ('onions', 'NNS')])
('tags -> ', '     (no->DT) (onions->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
corn
corn corn 419
[('corn', 'NN')]
['corn']
('tags initial-> ', [('corn', 'NN')])
('tags -> ', '     (corn->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('xxx', 'NN'), ('crying', 'VBG')])
('tags -> ', '     (xxx->NN) (crying->VBG) ')
('tags initial-> ', [('here', 'RB'), ('shay', 'NN')])
('tags -> ', '     (here->RB) (shay->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('xxx', 'IN'), ('the', 'DT'), ('book', 'NN'), ('now', 'RB')])
('tags -> ', '     (i->NN) (want->VBP) (xxx->IN) (the->DT) (book->NN) (now->RB) ')
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('eat', 'VBP')])
('tags -> ', '     (then->RB) (you->PRP) (eat->VBP) ')
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('eat', 'VBP'), ('by', 'IN'), ('yourself', 'PRP'), ('then', 'RB')])
('tags -> ', '     (then->RB) (you->PRP) (eat->VBP) (by->IN) (yourself->PRP) (then->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (xxx->NN) (for->IN) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('night', 'NN')])
('tags -> ', '     (good->JJ) (night->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('go', 'VBP'), ('to', 'TO'), ('bed', 'NN'), ('without', 'IN'), ('my', 'PRP$'), ('drink', 'NN')])
('tags -> ', '     (i->NN) (go->VBP) (to->TO) (bed->NN) (without->IN) (my->PRP$) (drink->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('then', 'RB'), ('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('drink', 'VB'), ('something', 'NN'), ('i', 'JJ'), ('m', 'VBP'), ('thirsty', 'NN')])
('tags -> ', '     (xxx->NN) (then->RB) (you->PRP) (need->VBP) (to->TO) (drink->VB) (something->NN) (i->JJ) (m->VBP) (thirsty->NN) ')
candidates to check:
5
descended from food: [['N'], 'food', 30, 34]
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('have', 'VBP'), ('no', 'DT'), ('room', 'NN'), ('for', 'IN'), ('food', 'NN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('no', 'DT'), ('room', 'NN'), ('f', 'NN'), ('for', 'IN'), ('drink', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (have->VBP) (no->DT) (room->NN) (for->IN) (food->NN) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (no->DT) (room->NN) (f->NN) (for->IN) (drink->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('do', 'VBP'), ('have', 'VB'), ('room', 'NN')])
('tags -> ', '     (i->NN) (do->VBP) (have->VB) (room->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('well', 'RB'), ('then', 'RB'), ('eat', 'VB')])
('tags -> ', '     (well->RB) (then->RB) (eat->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP'), ('if', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN')])
('tags -> ', '     (i->NN) (xxx->VBP) (if->IN) (i->JJ) (don->VBP) (t->JJ) (eat->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'WDT'), ('have', 'VBP'), ('no', 'DT'), ('no', 'DT'), ('room', 'NN'), ('for', 'IN'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->WDT) (have->VBP) (no->DT) (no->DT) (room->NN) (for->IN) (my->PRP$) (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'food', 47, 51]
('tags initial-> ', [('see', 'VB'), ('you', 'PRP'), ('don', 'VB'), ('t', 'NNS'), ('need', 'VBP'), ('have', 'VBP'), ('no', 'DT'), ('room', 'NN'), ('for', 'IN'), ('food', 'NN'), ('you', 'PRP'), ('xxx', 'VBP'), ('shay', 'VB')])
('tags -> ', '     (see->VB) (you->PRP) (don->VB) (t->NNS) (need->VBP) (have->VBP) (no->DT) (room->NN) (for->IN) (food->NN) (you->PRP) (xxx->VBP) (shay->VB) ')
('tags initial-> ', [('go', 'VB'), ('a', 'DT'), ('head', 'NN')])
('tags -> ', '     (go->VB) (a->DT) (head->NN) ')
('tags initial-> ', [('i', 'NN'), ('am', 'VBP')])
('tags -> ', '     (i->NN) (am->VBP) ')
('tags initial-> ', [('xxx', 'NN'), ('eat', 'NN')])
('tags -> ', '     (xxx->NN) (eat->NN) ')
candidates to check:
1
('tags initial-> ', [('hm', 'NN'), ('i', 'NN'), ('bit', 'VBP'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (hm->NN) (i->NN) (bit->VBP) (my->PRP$) (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('gettin', 'NN'), ('g', 'NN'), ('a', 'DT'), ('big', 'JJ'), ('one', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (gettin->NN) (g->NN) (a->DT) (big->JJ) (one->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('i', 'JJ'), ('m', 'NN'), ('gettin', 'NN'), ('g', 'NN'), ('a', 'DT'), ('big', 'JJ'), ('one', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (a->DT) (i->JJ) (m->NN) (gettin->NN) (g->NN) (a->DT) (big->JJ) (one->NN) ')
('tags initial-> ', [('a', 'DT'), ('big', 'JJ'), ('what', 'WP')])
('tags -> ', '     (a->DT) (big->JJ) (what->WP) ')
candidates to check:
2
descended from food: [['N'], 'food', 20, 24]
('tags initial-> ', [('spoon', 'NN'), ('full', 'JJ'), ('of', 'IN'), ('food', 'NN')])
('tags -> ', '     (spoon->NN) (full->JJ) (of->IN) (food->NN) ')
('tags initial-> ', [('oh', 'UH'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (oh->UH) (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NNS'), ('say', 'VBP'), ('yeah', 'NN')])
('tags -> ', '     (don->NN) (t->NNS) (say->VBP) (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('ma', 'NN'), ('mommy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (ma->NN) (mommy->NN) (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'NN'), ('we', 'PRP'), ('went', 'VBD'), ('we', 'PRP'), ('we', 'PRP'), ('we', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('fun', 'NN'), ('um', 'NN'), ('at', 'IN'), ('at', 'IN'), ('the', 'DT'), ('trip', 'NN')])
('tags -> ', '     (xxx->NN) (we->PRP) (went->VBD) (we->PRP) (we->PRP) (we->PRP) (had->VBD) (a->DT) (lot->NN) (of->IN) (fun->NN) (um->NN) (at->IN) (at->IN) (the->DT) (trip->NN) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('went', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('sailboat', 'NN'), ('and', 'CC'), ('stuff', 'NN')])
('tags -> ', '     (we->PRP) (went->VBD) (on->IN) (the->DT) (sailboat->NN) (and->CC) (stuff->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('called', 'VBN'), ('george', 'NN'), ('s', 'NN'), ('island', 'NN')])
('tags -> ', '     (yeah->NN) (it->PRP) (s->VBZ) (called->VBN) (george->NN) (s->NN) (island->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('george', 'VB'), ('s', 'JJ'), ('island', 'NN'), ('today', 'NN')])
('tags -> ', '     (you->PRP) (went->VBD) (to->TO) (george->VB) (s->JJ) (island->NN) (today->NN) ')
candidates to check:
6
descended from food: [['N'], 'food', 45, 49]
('tags initial-> ', [('this', 'DT'), ('that', 'WDT'), ('boat', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('xxx', 'FW'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('food', 'NN'), ('and', 'CC'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('chairs', 'NNS'), ('and', 'CC'), ('tables', 'NNS')])
('tags -> ', '     (this->DT) (that->WDT) (boat->NN) (had->VBD) (a->DT) (xxx->FW) (a->DT) (lot->NN) (of->IN) (food->NN) (and->CC) (a->DT) (lot->NN) (of->IN) (chairs->NNS) (and->CC) (tables->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('has', 'VBZ'), ('upstairs', 'NNS'), ('and', 'CC'), ('downstairs', 'NNS')])
('tags -> ', '     (it->PRP) (has->VBZ) (upstairs->NNS) (and->CC) (downstairs->NNS) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (and->CC) (what->WP) (else->RB) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('had', 'VBD'), ('drinks', 'NNS'), ('there', 'RB')])
('tags -> ', '     (they->PRP) (had->VBD) (drinks->NNS) (there->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
4
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('but', 'CC'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'IN'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('anything', 'NN'), ('or', 'CC'), ('drink', 'VB'), ('anything', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (but->CC) (we->PRP) (didn->VBP) (t->IN) (we->PRP) (didn->VBP) (t->JJ) (eat->NN) (anything->NN) (or->CC) (drink->VB) (anything->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->VB) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('anything', 'NN'), ('at', 'IN'), ('all', 'DT')])
('tags -> ', '     (we->PRP) (didn->VBP) (t->NNS) (have->VBP) (anything->NN) (at->IN) (all->DT) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('you', 'PRP'), ('just', 'RB'), ('rode', 'VB'), ('on', 'IN'), ('the', 'DT'), ('boat', 'NN')])
('tags -> ', '     (so->RB) (you->PRP) (just->RB) (rode->VB) (on->IN) (the->DT) (boat->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('just', 'RB'), ('sit', 'VB'), ('down', 'RP'), ('doing', 'VBG'), ('nothing', 'NN')])
('tags -> ', '     (just->RB) (sit->VB) (down->RP) (doing->VBG) (nothing->NN) ')
candidates to check:
4
fish
fish fish 305
[('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')]
['fish']
water
water water 18
[('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')]
['water']
duck
duck duck 84
[('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')]
['duck']
('tags initial-> ', [('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')])
('tags -> ', '     (so->IN) (me->PRP) (and->CC) (carmen->NNS) (just->RB) (look->VBP) (out->RP) (look->NN) (at->IN) (the->DT) (fish->JJ) (look->NN) (at->IN) (the->DT) (wat->NN) (er->NN) (and->CC) (guess->VB) (what->WP) (i->NN) (saw->VBD) (the->DT) (duck->NN) (in->IN) (the->DT) (water->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
3
descended from food: [['N'], 'lobsters', 40, 48]
water
water water 18
[('that', 'DT'), ('water', 'NN'), ('is', 'VBZ'), ('deep', 'JJ'), ('and', 'CC'), ('it', 'PRP'), ('had', 'VBD'), ('lobsters', 'NNS'), ('in', 'IN'), ('it', 'PRP')]
['water']
('tags initial-> ', [('that', 'DT'), ('water', 'NN'), ('is', 'VBZ'), ('deep', 'JJ'), ('and', 'CC'), ('it', 'PRP'), ('had', 'VBD'), ('lobsters', 'NNS'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (that->DT) (water->NN) (is->VBZ) (deep->JJ) (and->CC) (it->PRP) (had->VBD) (lobsters->NNS) (in->IN) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'lobsters', 14, 22]
('tags initial-> ', [('you', 'PRP'), ('saw', 'VBD'), ('lobsters', 'NNS')])
('tags -> ', '     (you->PRP) (saw->VBD) (lobsters->NNS) ')
candidates to check:
1
water
water water 18
[('be', 'VB'), ('cause', 'VBN'), ('the', 'DT'), ('water', 'NN'), ('was', 'VBD'), ('green', 'JJ')]
['water']
('tags initial-> ', [('be', 'VB'), ('cause', 'VBN'), ('the', 'DT'), ('water', 'NN'), ('was', 'VBD'), ('green', 'JJ')])
('tags -> ', '     (be->VB) (cause->VBN) (the->DT) (water->NN) (was->VBD) (green->JJ) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
water
water water 18
[('green', 'JJ'), ('water', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('see', 'VB')]
['water']
('tags initial-> ', [('green', 'JJ'), ('water', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('see', 'VB')])
('tags -> ', '     (green->JJ) (water->NN) (you->PRP) (can->MD) (t->VB) (see->VB) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP')])
('tags -> ', '     (i->NN) (xxx->VBP) ')
('tags initial-> ', [('not', 'RB'), ('deep', 'JJ')])
('tags -> ', '     (not->RB) (deep->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (xxx->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('okay', 'RP')])
('tags -> ', '     (that->DT) (s->VBZ) (okay->RP) ')
('tags initial-> ', [('eat', 'NN'), ('two', 'CD')])
('tags -> ', '     (eat->NN) (two->CD) ')
candidates to check:
5
('tags initial-> ', [('want', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('treat', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('bitty', 'JJ'), ('baby', 'NN')])
('tags -> ', '     (want->VB) (me->PRP) (to->TO) (treat->VB) (you->PRP) (like->IN) (a->DT) (little->JJ) (bitty->JJ) (baby->NN) ')
('tags initial-> ', [('yep', 'NN'), ('laughs', 'NNS')])
('tags -> ', '     (yep->NN) (laughs->NNS) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('unintelligible', 'JJ'), ('sounds', 'NNS')])
('tags -> ', '     (0->CD) (unintelligible->JJ) (sounds->NNS) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('mommy', 'VB'), ('xxx', 'NNP'), ('decide', 'VB'), ('where', 'WRB'), ('did', 'VBD'), ('they', 'PRP'), ('bury', 'VB'), ('god', 'NNS')])
('tags -> ', '     (and->CC) (mommy->VB) (xxx->NNP) (decide->VB) (where->WRB) (did->VBD) (they->PRP) (bury->VB) (god->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (no->DT) (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('mean', 'VBP'), ('george', 'NN'), ('washington', 'NN')])
('tags -> ', '     (i->NN) (i->VBP) (mean->VBP) (george->NN) (washington->NN) ')
('tags initial-> ', [('you', 'PRP'), ('sure', 'VBP'), ('it', 'PRP'), ('was', 'VBD'), ('george', 'JJ'), ('washington', 'NN')])
('tags -> ', '     (you->PRP) (sure->VBP) (it->PRP) (was->VBD) (george->JJ) (washington->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('sure', 'JJ'), ('it', 'PRP'), ('was', 'VBD'), ('george', 'JJ'), ('washington', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (sure->JJ) (it->PRP) (was->VBD) (george->JJ) (washington->NN) ')
('tags initial-> ', [('maybe', 'RB')])
('tags -> ', '     (maybe->RB) ')
('tags initial-> ', [('i', 'JJ'), ('mean', 'VBP'), ('xxx', 'JJ'), ('think', 'VBP'), ('xxx', 'NNS')])
('tags -> ', '     (i->JJ) (mean->VBP) (xxx->JJ) (think->VBP) (xxx->NNS) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('yeah', 'RB'), ('think', 'VBP'), ('first', 'JJ')])
('tags -> ', '     (if->IN) (you->PRP) (re->VBP) (not->RB) (yeah->RB) (think->VBP) (first->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('humming', 'VBG')])
('tags -> ', '     (humming->VBG) ')
('tags initial-> ', [('george', 'NN'), ('washington', 'NN')])
('tags -> ', '     (george->NN) (washington->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('xxx', 'JJ'), ('i', 'NN'), ('got', 'VBD'), ('xxx', 'NNS')])
('tags -> ', '     (i->NN) (got->VBD) (xxx->JJ) (i->NN) (got->VBD) (xxx->NNS) ')
('tags initial-> ', [('george', 'NN'), ('washington', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (george->NN) (washington->NN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('know', 'VBP'), ('why', 'WRB'), ('did', 'VBD'), ('they', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('bury', 'VB'), ('people', 'NNS'), ('who', 'WP'), ('die', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (know->VBP) (why->WRB) (did->VBD) (they->PRP) (have->VBP) (to->TO) (bury->VB) (people->NNS) (who->WP) (die->VBP) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('mommy', 'NN')])
('tags -> ', '     (why->WRB) (mommy->NN) ')
('tags initial-> ', [('i', 'JJ'), ('ll', 'VBP'), ('tell', 'VBP'), ('you', 'PRP'), ('later', 'RB')])
('tags -> ', '     (i->JJ) (ll->VBP) (tell->VBP) (you->PRP) (later->RB) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'JJ'), ('god', 'NN'), ('can', 'MD'), ('give', 'VB'), ('you', 'PRP'), ('wings', 'NNS'), ('to', 'TO'), ('fly', 'VB'), ('up', 'RB'), ('to', 'TO'), ('to', 'TO'), ('heaven', 'VB'), ('be', 'VB'), ('cause', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('ll', 'VBP'), ('be', 'VB'), ('buried', 'VBN')])
('tags -> ', '     (mommy->JJ) (god->NN) (can->MD) (give->VB) (you->PRP) (wings->NNS) (to->TO) (fly->VB) (up->RB) (to->TO) (to->TO) (heaven->VB) (be->VB) (cause->RB) (be->VB) (cause->NN) (you->PRP) (ll->VBP) (be->VB) (buried->VBN) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('can', 'MD'), ('god', 'VB'), ('give', 'VB'), ('you', 'PRP'), ('wings', 'NNS')])
('tags -> ', '     (how->WRB) (can->MD) (god->VB) (give->VB) (you->PRP) (wings->NNS) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('buried', 'VBN')])
('tags -> ', '     (and->CC) (and->CC) (you->PRP) (re->VBP) (buried->VBN) ')
candidates to check:
2
('tags initial-> ', [('does', 'VBZ'), ('god', 'VB'), ('know', 'VB'), ('everything', 'NN')])
('tags -> ', '     (does->VBZ) (god->VB) (know->VB) (everything->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('then', 'RB'), ('i', 'NN'), ('guess', 'NN'), ('he', 'PRP'), ('can', 'MD'), ('do', 'VB'), ('anything', 'NN')])
('tags -> ', '     (then->RB) (i->NN) (guess->NN) (he->PRP) (can->MD) (do->VB) (anything->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'JJ'), ('mommy', 'VB'), ('your', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (mommy->VB) (your->PRP$) (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('xxx', 'VB')])
('tags -> ', '     (and->CC) (xxx->VB) ')
candidates to check:
1
descended from food: [['N'], 'food', 36, 40]
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('knows', 'VBZ'), ('what', 'WP'), ('the', 'DT'), ('the', 'DT'), ('food', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (and->CC) (he->PRP) (knows->VBZ) (what->WP) (the->DT) (the->DT) (food->NN) (is->VBZ) ')
candidates to check:
1
descended from food: [['N'], 'food', 10, 14]
('tags initial-> ', [('the', 'DT'), ('food', 'NN'), ('called', 'VBD')])
('tags -> ', '     (the->DT) (food->NN) (called->VBD) ')
('tags initial-> ', [('yes', 'UH'), ('yes', 'NNS')])
('tags -> ', '     (yes->UH) (yes->NNS) ')
candidates to check:
2
('tags initial-> ', [('wo', 'MD'), ('would', 'MD'), ('people', 'NNS'), ('doesn', 'VB'), ('t', 'RB'), ('know', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (wo->MD) (would->MD) (people->NNS) (doesn->VB) (t->RB) (know->VB) (what->WP) (it->PRP) (is->VBZ) ')
('tags initial-> ', [('ew', 'NN')])
('tags -> ', '     (ew->NN) ')
('tags initial-> ', [('everything', 'NN'), ('s', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (everything->NN) (s->NN) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('there', 'EX'), ('s', 'VBZ'), ('a', 'DT'), ('man', 'NN'), ('he', 'PRP'), ('knows', 'VBZ'), ('me', 'PRP')])
('tags -> ', '     (mommy->NN) (there->EX) (s->VBZ) (a->DT) (man->NN) (he->PRP) (knows->VBZ) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('knows', 'VBZ'), ('my', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (he->PRP) (knows->VBZ) (my->PRP$) (name->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('know', 'VBP'), ('his', 'PRP$'), ('name', 'NN'), ('his', 'PRP$'), ('name', 'NN'), ('was', 'VBD'), ('yeah', 'UH'), ('robinson', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (know->VBP) (his->PRP$) (name->NN) (his->PRP$) (name->NN) (was->VBD) (yeah->UH) (robinson->NN) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('name', 'NN'), ('is', 'VBZ'), ('robinson', 'JJ')])
('tags -> ', '     (his->PRP$) (name->NN) (is->VBZ) (robinson->JJ) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('name', 'NN'), ('is', 'VBZ'), ('robinson', 'JJ'), ('i', 'NN'), ('know', 'VBP'), ('robinson', 'NN'), ('too', 'RB')])
('tags -> ', '     (his->PRP$) (name->NN) (is->VBZ) (robinson->JJ) (i->NN) (know->VBP) (robinson->NN) (too->RB) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('xxx', 'NNP'), ('too', 'RB'), ('i', 'RB'), ('know', 'VBP'), ('robinson', 'NN')])
('tags -> ', '     (i->NN) (know->VBP) (xxx->NNP) (too->RB) (i->RB) (know->VBP) (robinson->NN) ')
('tags initial-> ', [('he', 'PRP'), ('like', 'VBZ'), ('s', 'VB'), ('me', 'PRP')])
('tags -> ', '     (he->PRP) (like->VBZ) (s->VB) (me->PRP) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('robinson', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (robinson->NN) ')
('tags initial-> ', [('robinson', 'NN'), ('like', 'IN'), ('me', 'PRP'), ('xxx', 'VBP')])
('tags -> ', '     (robinson->NN) (like->IN) (me->PRP) (xxx->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('was', 'VBD'), ('small', 'JJ'), ('when', 'WRB'), ('he', 'PRP'), ('got', 'VBD'), ('married', 'JJ')])
('tags -> ', '     (you->PRP) (was->VBD) (small->JJ) (when->WRB) (he->PRP) (got->VBD) (married->JJ) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('do', 'VBP'), ('that', 'IN'), ('eat', 'NN'), ('shayla', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (do->VBP) (that->IN) (eat->NN) (shayla->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('e', 'RB'), ('even', 'RB'), ('if', 'IN'), ('i', 'JJ'), ('be', 'VB'), ('bad', 'JJ'), ('he', 'PRP'), ('still', 'RB'), ('like', 'IN'), ('s', 'NNS'), ('me', 'PRP')])
('tags -> ', '     (mommy->NN) (e->RB) (even->RB) (if->IN) (i->JJ) (be->VB) (bad->JJ) (he->PRP) (still->RB) (like->IN) (s->NNS) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('doesn', 'VBZ'), ('t', 'NN'), ('hit', 'VBD'), ('whoop', 'NNS'), ('me', 'PRP'), ('with', 'IN'), ('a', 'DT'), ('belt', 'NN'), ('but', 'CC'), ('he', 'PRP'), ('mailed', 'VBD'), ('me', 'PRP'), ('and', 'CC'), ('xxx', 'VB'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (he->PRP) (doesn->VBZ) (t->NN) (hit->VBD) (whoop->NNS) (me->PRP) (with->IN) (a->DT) (belt->NN) (but->CC) (he->PRP) (mailed->VBD) (me->PRP) (and->CC) (xxx->VB) (a->DT) (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (me->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('supposed', 'VBN'), ('to', 'TO'), ('hurt', 'VB'), ('you', 'PRP')])
('tags -> ', '     (he->PRP) (s->VBZ) (not->RB) (supposed->VBN) (to->TO) (hurt->VB) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('natalie', 'JJ'), ('hurt', 'NN'), ('me', 'PRP'), ('so', 'RB'), ('so', 'RB'), ('he', 'PRP'), ('take', 'VB'), ('the', 'DT'), ('belt', 'NN'), ('and', 'CC'), ('hit', 'VBD'), ('her', 'PRP'), ('with', 'IN'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (natalie->JJ) (hurt->NN) (me->PRP) (so->RB) (so->RB) (he->PRP) (take->VB) (the->DT) (belt->NN) (and->CC) (hit->VBD) (her->PRP) (with->IN) (it->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('i', 'NN'), ('finish', 'NN')])
('tags -> ', '     (i->NN) (finish->NN) ')
candidates to check:
2
corn
corn corn 419
[('i', 'JJ'), ('hate', 'VBP'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('i', 'JJ'), ('hate', 'VBP'), ('corn', 'NN')])
('tags -> ', '     (i->JJ) (hate->VBP) (corn->NN) ')
candidates to check:
1
descended from food: [['N'], 'rice', 20, 24]
rice
rice rice 147
[('i', 'JJ'), ('eat', 'VBP'), ('all', 'PDT'), ('the', 'DT'), ('rice', 'NN')]
['rice']
('tags initial-> ', [('i', 'JJ'), ('eat', 'VBP'), ('all', 'PDT'), ('the', 'DT'), ('rice', 'NN')])
('tags -> ', '     (i->JJ) (eat->VBP) (all->PDT) (the->DT) (rice->NN) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB')])
('tags -> ', '     (no->DT) (you->PRP) (didn->VBP) (t->VB) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (mommy->NN) (mommy->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
candidates to check:
1
('tags initial-> ', [('put', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (put->VB) (it->PRP) (in->IN) (your->PRP$) (mouth->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('mama', 'NN')])
('tags -> ', '     (xxx->JJ) (mama->NN) ')
candidates to check:
1
descended from food: [['N'], 'rice', 23, 27]
rice
rice rice 147
[('look', 'NN'), ('at', 'IN'), ('all', 'PDT'), ('that', 'DT'), ('rice', 'NN')]
['rice']
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('all', 'PDT'), ('that', 'DT'), ('rice', 'NN')])
('tags -> ', '     (look->NN) (at->IN) (all->PDT) (that->DT) (rice->NN) ')
('tags initial-> ', [('you', 'PRP'), ('say', 'VBP'), ('xxx', 'IN'), ('you', 'PRP'), ('ate', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (say->VBP) (xxx->IN) (you->PRP) (ate->VBP) (it->PRP) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('brenda', 'NN'), ('you', 'PRP'), ('know', 'VBP'), ('to', 'TO'), ('finish', 'VB'), ('yours', 'NNS')])
('tags -> ', '     (come->VBN) (on->IN) (brenda->NN) (you->PRP) (know->VBP) (to->TO) (finish->VB) (yours->NNS) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'RB'), ('eat', 'NN'), ('this', 'DT')])
('tags -> ', '     (i->NN) (didn->VBP) (t->RB) (eat->NN) (this->DT) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('cut', 'VB'), ('it', 'PRP'), ('move', 'VB')])
('tags -> ', '     (let->VB) (me->PRP) (cut->VB) (it->PRP) (move->VB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('too', 'RB'), ('hot', 'JJ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (it->PRP) (s->VBD) (too->RB) (hot->JJ) (to->TO) (eat->VB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('too', 'RB'), ('hot', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('it', 'PRP'), ('s', 'VB'), ('just', 'RB'), ('you', 'PRP'), ('and', 'CC'), ('brenda', 'VB'), ('don', 'JJ'), ('t', 'NNS'), ('like', 'IN'), ('to', 'TO'), ('chew', 'VB')])
('tags -> ', '     (it->PRP) (s->VBD) (it->PRP) (s->VBZ) (not->RB) (too->RB) (hot->JJ) (to->TO) (eat->VB) (it->PRP) (s->VB) (just->RB) (you->PRP) (and->CC) (brenda->VB) (don->JJ) (t->NNS) (like->IN) (to->TO) (chew->VB) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('too', 'RB'), ('hot', 'JJ'), ('for', 'IN'), ('my', 'PRP$'), ('teeth', 'NNS')])
('tags -> ', '     (it->PRP) (s->VBD) (too->RB) (hot->JJ) (for->IN) (my->PRP$) (teeth->NNS) ')
candidates to check:
2
('tags initial-> ', [('eat', 'VB'), ('the', 'DT'), ('little', 'JJ'), ('piece', 'NN')])
('tags -> ', '     (eat->VB) (the->DT) (little->JJ) (piece->NN) ')
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB')])
('tags -> ', '     (no->DT) (it->PRP) (s->VBZ) (not->RB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (xxx->NN) (mommy->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'rice', 40, 44]
rice
rice rice 147
[('put', 'VB'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('eat', 'VBP'), ('that', 'IN'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN')]
['rice']
corn
corn corn 419
[('put', 'VB'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('eat', 'VBP'), ('that', 'IN'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('put', 'VB'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('eat', 'VBP'), ('that', 'IN'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN')])
('tags -> ', '     (put->VB) (it->PRP) (over->IN) (here->RB) (and->CC) (you->PRP) (eat->VBP) (that->IN) (rice->NN) (and->CC) (corn->NN) ')
candidates to check:
1
('tags initial-> ', [('move', 'NN')])
('tags -> ', '     (move->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('i', 'RB'), ('eat', 'VBP'), ('this', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (i->RB) (eat->VBP) (this->DT) (xxx->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('it', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (eat->NN) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'rice', 15, 19]
rice
rice rice 147
[('eat', 'VB'), ('your', 'PRP$'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN'), ('then', 'RB')]
['rice']
corn
corn corn 419
[('eat', 'VB'), ('your', 'PRP$'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN'), ('then', 'RB')]
['corn']
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN'), ('then', 'RB')])
('tags -> ', '     (eat->VB) (your->PRP$) (rice->NN) (and->CC) (corn->NN) (then->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('humming', 'VBG')])
('tags -> ', '     (humming->VBG) ')
('tags initial-> ', [('xxx', 'JJ'), ('come', 'NN'), ('on', 'IN')])
('tags -> ', '     (xxx->JJ) (come->NN) (on->IN) ')
loading solution set
calculating
set([(1148, (13, 17)), (1151, (20, 24)), (1233, (24, 28)), (209, (30, 34)), (713, (10, 16)), (1215, (49, 53)), (637, (31, 34)), (719, (6, 10)), (1233, (15, 19)), (187, (13, 17)), (1169, (23, 27)), (184, (32, 36)), (190, (36, 40)), (1215, (40, 44))])
[((184, (32, 36)), "*SIS:\t(.) &-um I'm takin(g) the salt off .\n"), ((187, (13, 17)), '*SIS:\tI hate salt [>] .\n'), ((190, (36, 40)), '*CHI:\t<mommy I drink my> [<] [/] my soda ?\n'), ((209, (30, 34)), '*CHI:\twell Mom I drink all my soda .\n'), ((637, (31, 34)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((713, (10, 16)), '*MOT:\t<no onions> [<] ?\n'), ((719, (6, 10)), '*MOT:\tcorn .\n'), ((1148, (13, 17)), '*SIS:\tI hate corn .\n'), ((1151, (20, 24)), '*SIS:\tI eat all the rice .\n'), ((1169, (23, 27)), '*MOT:\tlook at all that rice .\n'), ((1215, (40, 44)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1215, (49, 53)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1233, (15, 19)), '*MOT:\teat your rice and corn then .\n'), ((1233, (24, 28)), '*MOT:\teat your rice and corn then .\n')]
set([(1233, (24, 28)), (645, (52, 56)), (915, (20, 25)), (713, (10, 16)), (255, (81, 85)), (645, (15, 18)), (1148, (13, 17)), (658, (40, 43)), (895, (118, 123)), (1151, (20, 24)), (122, (40, 44)), (187, (13, 17)), (1169, (23, 27)), (184, (32, 36)), (1045, (10, 14)), (653, (14, 17)), (668, (21, 24)), (1041, (36, 40)), (166, (38, 42)), (895, (106, 110)), (637, (31, 34)), (719, (6, 10)), (907, (40, 48)), (921, (12, 17)), (637, (50, 54)), (1215, (49, 53)), (852, (45, 49)), (907, (11, 16)), (761, (30, 34)), (1215, (40, 44)), (912, (14, 22)), (694, (18, 21)), (814, (20, 24)), (895, (56, 60)), (642, (28, 31)), (784, (47, 51)), (674, (17, 20)), (1233, (15, 19))])
[((122, (40, 44)), '*CHI:\t<(be)cause> [/] (.) (be)cause xxx food .\n'), ((166, (38, 42)), "*MOT:\tyou're supposed to eat all your food (.) .\n"), ((184, (32, 36)), "*SIS:\t(.) &-um I'm takin(g) the salt off .\n"), ((187, (13, 17)), '*SIS:\tI hate salt [>] .\n'), ((255, (81, 85)), "*SIS:\twe do that at the church <when it's a> [//] when [/] when God give us some food you supposed to do that .\n"), ((637, (31, 34)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((637, (50, 54)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((642, (28, 31)), "*MOT:\tand you [>] don't eat fat .\n"), ((645, (15, 18)), '*MOT:\tyou need fat Bren so you know how to eat that meat here .\n'), ((645, (52, 56)), '*MOT:\tyou need fat Bren so you know how to eat that meat here .\n'), ((653, (14, 17)), "*CHI:\tI don't fat .\n"), ((658, (40, 43)), "*MOT:\tyou <don't> [/] don't worry about fat I ain't nothing to explain it to you (be)cause you don't eat it here .\n"), ((668, (21, 24)), "*CHI:\tI don't eat no fat .\n"), ((674, (17, 20)), '*CHI:\txxx eat no fat .\n'), ((694, (18, 21)), "*CHI:\tI don't eat fat .\n"), ((713, (10, 16)), '*MOT:\t<no onions> [<] ?\n'), ((719, (6, 10)), '*MOT:\tcorn .\n'), ((761, (30, 34)), "*MOT:\tif you have no room for food you don't have no room &f for drink .\n"), ((784, (47, 51)), "*MOT:\tsee you don't need [//] have no room for food you xxx Shay .\n"), ((814, (20, 24)), '*MOT:\tspoon full of food ?\n'), ((852, (45, 49)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((895, (56, 60)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (106, 110)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (118, 123)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((907, (11, 16)), '*SIS:\tthat water is deep [!] and it had lobsters in it .\n'), ((907, (40, 48)), '*SIS:\tthat water is deep [!] and it had lobsters in it .\n'), ((912, (14, 22)), '*MOT:\tyou saw lobsters ?\n'), ((915, (20, 25)), '*SIS:\t(be)cause the water was green .\n'), ((921, (12, 17)), "*SIS:\tgreen water you can't see .\n"), ((1041, (36, 40)), '*SIS:\tand he knows what the [/] the food is ?\n'), ((1045, (10, 14)), '*SIS:\tthe food called ?\n'), ((1148, (13, 17)), '*SIS:\tI hate corn .\n'), ((1151, (20, 24)), '*SIS:\tI eat all the rice .\n'), ((1169, (23, 27)), '*MOT:\tlook at all that rice .\n'), ((1215, (40, 44)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1215, (49, 53)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1233, (15, 19)), '*MOT:\teat your rice and corn then .\n'), ((1233, (24, 28)), '*MOT:\teat your rice and corn then .\n')]
calculating accuracy and recall
correct labels:
set(['salt', 'corn', 'fat', 'soda', 'rice', 'onions'])
predicted labels:
set(['lobsters', 'meat', 'food', 'salt', 'corn', 'fat', 'water', 'duck', 'rice', 'onions', 'fish'])
file:HSLLD/HV1/MT//brnmt1.cha
precision: 0.454545454545
recall: 0.833333333333
true positives:['corn', 'fat', 'onions', 'rice', 'salt']
false positives: ['duck', 'fish', 'food', 'lobsters', 'meat', 'water']
false negatives: ['soda']
# true pos: 5
# false pos: 6
# false neg: 1
HSLLD/HV1/MT//guymt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
descended from food: [['N'], 'food', 32, 36]
('tags initial-> ', [('xxx', 'NN'), ('sit', 'VBP'), ('down', 'RP'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (xxx->NN) (sit->VBP) (down->RP) (and->CC) (eat->VB) (your->PRP$) (food->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
descended from food: [['N'], 'rice', 27, 31]
rice
rice rice 147
[('okay', 'IN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('your', 'PRP$'), ('rice', 'NN')]
['rice']
('tags initial-> ', [('okay', 'IN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('your', 'PRP$'), ('rice', 'NN')])
('tags -> ', '     (okay->IN) (you->PRP) (d->VBP) (like->IN) (your->PRP$) (rice->NN) ')
('tags initial-> ', [('eat', 'NN'), ('it', 'PRP'), ('all', 'DT'), ('up', 'RP')])
('tags -> ', '     (eat->NN) (it->PRP) (all->DT) (up->RP) ')
('tags initial-> ', [('there', 'RB'), ('you', 'PRP'), ('go', 'VBP')])
('tags -> ', '     (there->RB) (you->PRP) (go->VBP) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 28, 32]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0295878>)
[('oh', 'UH'), ('got', 'VBD'), ('ta', 'JJ'), ('look', 'NN'), ('for', 'IN'), ('the', 'DT'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('oh', 'UH'), ('got', 'VBD'), ('ta', 'JJ'), ('look', 'NN'), ('for', 'IN'), ('the', 'DT'), ('meat', 'NN')])
('tags -> ', '     (oh->UH) (got->VBD) (ta->JJ) (look->NN) (for->IN) (the->DT) (meat->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 20, 24]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0295a70>)
[('you', 'PRP'), ('like', 'IN'), ('your', 'PRP$'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('your', 'PRP$'), ('meat', 'NN')])
('tags -> ', '     (you->PRP) (like->IN) (your->PRP$) (meat->NN) ')
('tags initial-> ', [('hm', 'NN'), ('x', 'VBZ'), ('2', 'CD')])
('tags -> ', '     (hm->NN) (x->VBZ) (2->CD) ')
candidates to check:
2
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('eating', 'VBG'), ('it', 'PRP'), ('all', 'DT'), ('up', 'RP'), ('like', 'IN'), ('a', 'DT'), ('big', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (eating->VBG) (it->PRP) (all->DT) (up->RP) (like->IN) (a->DT) (big->JJ) (boy->NN) ')
('tags initial-> ', [('am', 'VBP'), ('i', 'JJ'), ('gon', 'NN'), ('na', 'TO'), ('be', 'VB'), ('strong', 'JJ')])
('tags -> ', '     (am->VBP) (i->JJ) (gon->NN) (na->TO) (be->VB) (strong->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 57, 61]
('tags initial-> ', [('yeah', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('strong', 'JJ'), ('so', 'RB'), ('eat', 'VB'), ('up', 'RP'), ('all', 'DT'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (yeah->NN) (you->PRP) (re->VBP) (gon->VB) (na->TO) (be->VB) (strong->JJ) (so->RB) (eat->VB) (up->RP) (all->DT) (your->PRP$) (food->NN) ')
candidates to check:
2
spinach
spinach spinach 34
[('popeye', 'NN'), ('eats', 'NNS'), ('spinach', 'VBP')]
['spinach']
('tags initial-> ', [('popeye', 'NN'), ('eats', 'NNS'), ('spinach', 'VBP')])
('tags -> ', '     (popeye->NN) (eats->NNS) (spinach->VBP) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('popeye', 'NN')])
('tags -> ', '     (popeye->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('popeye', 'NNS')])
('tags -> ', '     (you->PRP) (like->VBP) (popeye->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('popeye', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->VB) (na->TO) (be->VB) (popeye->JJ) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
1
('tags initial-> ', [('is', 'VBZ'), ('popeye', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (is->VBZ) (popeye->JJ) (xxx->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('clothes', 'NNS')])
('tags -> ', '     (his->PRP$) (clothes->NNS) ')
candidates to check:
1
spinach
spinach spinach 34
[('his', 'PRP$'), ('his', 'PRP$'), ('spinach', 'NN')]
['spinach']
('tags initial-> ', [('his', 'PRP$'), ('his', 'PRP$'), ('spinach', 'NN')])
('tags -> ', '     (his->PRP$) (his->PRP$) (spinach->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('fred', 'VBN'), ('krueger', 'NN'), ('loves', 'VBZ'), ('me', 'PRP')])
('tags -> ', '     (fred->VBN) (krueger->NN) (loves->VBZ) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('xxx', 'VBD'), ('little', 'JJ'), ('kids', 'NNS'), ('faster', 'RBR')])
('tags -> ', '     (and->CC) (he->PRP) (xxx->VBD) (little->JJ) (kids->NNS) (faster->RBR) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (in->IN) (school->NN) (today->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 53, 57]
('tags initial-> ', [('hm', 'NN'), ('i', 'NN'), ('was', 'VBD'), ('eatin', 'JJ'), ('g', 'NN'), ('i', 'NN'), ('was', 'VBD'), ('eatin', 'JJ'), ('g', 'JJ'), ('my', 'PRP$'), ('food', 'NN'), ('up', 'RP')])
('tags -> ', '     (hm->NN) (i->NN) (was->VBD) (eatin->JJ) (g->NN) (i->NN) (was->VBD) (eatin->JJ) (g->JJ) (my->PRP$) (food->NN) (up->RP) ')
('tags initial-> ', [('all', 'DT'), ('of', 'IN'), ('them', 'PRP')])
('tags -> ', '     (all->DT) (of->IN) (them->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'lunch', 27, 32]
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('all', 'DT'), ('your', 'PRP$'), ('lunch', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (eat->VB) (all->DT) (your->PRP$) (lunch->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'lunch', 28, 33]
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('for', 'IN'), ('lunch', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (have->VBP) (for->IN) (lunch->NN) ')
candidates to check:
5
descended from food: [['N'], 'lunch', 12, 17]
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0299950>)
[('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('i', 'NN'), ('had', 'VBD'), ('0an', 'CD'), ('orange', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('book', 'NN'), ('bag', 'NN')]
['orange']
('tags initial-> ', [('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('i', 'NN'), ('had', 'VBD'), ('0an', 'CD'), ('orange', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('book', 'NN'), ('bag', 'NN')])
('tags -> ', '     (i->NN) (had->VBD) (lunch->NN) (and->CC) (i->NN) (had->VBD) (0an->CD) (orange->NN) (in->IN) (my->PRP$) (book->NN) (bag->NN) ')
candidates to check:
4
('tags initial-> ', [('mom', 'NN'), ('xxx', 'VB'), ('my', 'PRP$'), ('book', 'NN'), ('bag', 'NN'), ('you', 'PRP')])
('tags -> ', '     (mom->NN) (xxx->VB) (my->PRP$) (book->NN) (bag->NN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN'), ('you', 'PRP'), ('remember', 'VBP')])
('tags -> ', '     (mom->NN) (you->PRP) (remember->VBP) ')
candidates to check:
1
('tags initial-> ', [('lost', 'VBN'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (lost->VBN) (my->PRP$) (xxx->NN) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('buy', 'VB'), ('me', 'PRP'), ('another', 'DT'), ('one', 'NN')])
('tags -> ', '     (can->MD) (you->PRP) (buy->VB) (me->PRP) (another->DT) (one->NN) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('buy', 'VB'), ('me', 'PRP'), ('another', 'DT'), ('one', 'NN')])
('tags -> ', '     (can->MD) (you->PRP) (buy->VB) (me->PRP) (another->DT) (one->NN) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('sorry', 'NN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('church', 'VB')])
('tags -> ', '     (mom->NN) (i->NN) (m->VBP) (sorry->NN) (you->PRP) (have->VBP) (to->TO) (go->VB) (to->TO) (church->VB) ')
('tags initial-> ', [('you', 'PRP'), ('won', 'VBD'), ('t', 'CC'), ('come', 'VB'), ('back', 'RB'), ('here', 'RB')])
('tags -> ', '     (you->PRP) (won->VBD) (t->CC) (come->VB) (back->RB) (here->RB) ')
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('want', 'VBP'), ('you', 'PRP'), ('here', 'RB')])
('tags -> ', '     (i->NNS) (m->VBP) (want->VBP) (you->PRP) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('made', 'VBD'), ('a', 'DT'), ('bubble', 'JJ')])
('tags -> ', '     (i->NN) (made->VBD) (a->DT) (bubble->JJ) ')
('tags initial-> ', [('hello', 'NN')])
('tags -> ', '     (hello->NN) ')
('tags initial-> ', [('hi', 'NN')])
('tags -> ', '     (hi->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('blow', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (blow->VB) (it->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('blow', 'NN'), ('it', 'PRP')])
('tags -> ', '     (blow->NN) (it->PRP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('bubble', 'JJ')])
('tags -> ', '     (bubble->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
('tags initial-> ', [('pop', 'NN'), ('it', 'PRP')])
('tags -> ', '     (pop->NN) (it->PRP) ')
('tags initial-> ', [('i', 'RB'), ('wanted', 'VBD'), ('to', 'TO'), ('blow', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->RB) (wanted->VBD) (to->TO) (blow->VB) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('alright', 'NN'), ('then', 'RB')])
('tags -> ', '     (alright->NN) (then->RB) ')
candidates to check:
2
descended from food: [['N'], 'food', 25, 29]
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('eat', 'VBP'), ('all', 'DT'), ('my', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (eat->VBP) (all->DT) (my->PRP$) (food->NN) ')
('tags initial-> ', [('eat', 'NN'), ('it', 'PRP'), ('all', 'DT'), ('up', 'RP')])
('tags -> ', '     (eat->NN) (it->PRP) (all->DT) (up->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 27, 31]
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('play', 'NN'), ('with', 'IN'), ('your', 'PRP$'), ('food', 'NN'), ('and', 'CC'), ('eat', 'NN'), ('it', 'PRP'), ('up', 'RP'), ('chi', 'NNS')])
('tags -> ', '     (don->NN) (t->NN) (play->NN) (with->IN) (your->PRP$) (food->NN) (and->CC) (eat->NN) (it->PRP) (up->RP) (chi->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
descended from food: [['N'], 'ketchup', 22, 29]
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('found', 'VBD'), ('a', 'DT'), ('ketchup', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (mommy->NN) (i->NN) (found->VBD) (a->DT) (ketchup->NN) (in->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('just', 'RB'), ('eat', 'VB'), ('it', 'PRP'), ('that', 'DT'), ('way', 'NN')])
('tags -> ', '     (just->RB) (eat->VB) (it->PRP) (that->DT) (way->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('finished', 'VBN')])
('tags -> ', '     (mommy->NN) (i->NN) (m->VBP) (finished->VBN) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB')])
('tags -> ', '     (no->DT) (you->PRP) (re->VBP) (not->RB) ')
('tags initial-> ', [('finished', 'VBN')])
('tags -> ', '     (finished->VBN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 17, 22]
juice
juice juice 52
[('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')])
('tags -> ', '     (drink->VB) (your->PRP$) (juice->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 17, 22]
juice
juice juice 52
[('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')])
('tags -> ', '     (drink->VB) (your->PRP$) (juice->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
loading solution set
calculating
set([(21, (27, 31)), (63, (18, 25)), (38, (20, 24)), (35, (28, 32)), (262, (17, 22)), (139, (36, 42)), (99, (18, 25)), (255, (17, 22))])
[((21, (27, 31)), "*MOT:\tokay you'd like your rice ?\n"), ((35, (28, 32)), '*CHI:\toh gotta look for the meat .\n'), ((38, (20, 24)), '*MOT:\tyou like your meat ?\n'), ((63, (18, 25)), '*CHI:\tPopeye eats spinach .\n'), ((99, (18, 25)), '*MOT:\this [/] his spinach ?\n'), ((139, (36, 42)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((255, (17, 22)), '*MOT:\tdrink your juice .\n'), ((262, (17, 22)), '*MOT:\tdrink your juice .\n')]
set([(135, (28, 33)), (21, (27, 31)), (63, (18, 25)), (128, (27, 32)), (38, (20, 24)), (226, (27, 31)), (218, (25, 29)), (262, (17, 22)), (35, (28, 32)), (235, (22, 29)), (255, (17, 22)), (139, (36, 42)), (139, (12, 17)), (57, (57, 61)), (99, (18, 25)), (120, (53, 57)), (14, (32, 36))])
[((14, (32, 36)), '*MOT:\txxx sit down and eat your food .\n'), ((21, (27, 31)), "*MOT:\tokay you'd like your rice ?\n"), ((35, (28, 32)), '*CHI:\toh gotta look for the meat .\n'), ((38, (20, 24)), '*MOT:\tyou like your meat ?\n'), ((57, (57, 61)), "*MOT:\tyeah you're gonna be strong (.) so eat up all your food .\n"), ((63, (18, 25)), '*CHI:\tPopeye eats spinach .\n'), ((99, (18, 25)), '*MOT:\this [/] his spinach ?\n'), ((120, (53, 57)), '*CHI:\thm: (.) <I was eatin(g)> [/] I was eatin(g) my food up .\n'), ((128, (27, 32)), '*MOT:\tdid you eat all your lunch ?\n'), ((135, (28, 33)), '*MOT:\twhat did you have for lunch ?\n'), ((139, (12, 17)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((139, (36, 42)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((218, (25, 29)), '*CHI:\tMommy I eat all my food .\n'), ((226, (27, 31)), "*MOT:\tdon't play with your food and eat it up Chi .\n"), ((235, (22, 29)), '*CHI:\tmommy I found a ketchup in it .\n'), ((255, (17, 22)), '*MOT:\tdrink your juice .\n'), ((262, (17, 22)), '*MOT:\tdrink your juice .\n')]
calculating accuracy and recall
correct labels:
set(['orange', 'juice', 'rice', 'meat', 'spinach'])
predicted labels:
set(['juice', 'meat', 'spinach', 'food', 'lunch', 'orange', 'rice', 'ketchup'])
file:HSLLD/HV1/MT//guymt1.cha
precision: 0.625
recall: 1.0
true positives:['juice', 'meat', 'orange', 'rice', 'spinach']
false positives: ['food', 'ketchup', 'lunch']
false negatives: []
# true pos: 5
# false pos: 3
# false neg: 0
HSLLD/HV1/MT//maymt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//maymt1.cha
HSLLD/HV1/MT//mormt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//mormt1.cha
HSLLD/HV1/MT//geomt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) ')
candidates to check:
1
pumpkin
pumpkin pumpkin 15
[('pumpkin', 'NN')]
['pumpkin']
('tags initial-> ', [('pumpkin', 'NN')])
('tags -> ', '     (pumpkin->NN) ')
candidates to check:
1
pumpkin
pumpkin pumpkin 15
[('pumpkin', 'NN')]
['pumpkin']
('tags initial-> ', [('pumpkin', 'NN')])
('tags -> ', '     (pumpkin->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('hm', 'NN'), ('yuck', 'NN')])
('tags -> ', '     (hm->NN) (yuck->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('make', 'VB'), ('it', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (make->VB) (it->PRP) ')
('tags initial-> ', [('mm', 'NN'), ('yeah', 'CD'), ('yuck', 'NN')])
('tags -> ', '     (mm->NN) (yeah->CD) (yuck->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('did', 'VBD'), ('a', 'DT'), ('very', 'RB'), ('good', 'JJ'), ('job', 'NN')])
('tags -> ', '     (you->PRP) (did->VBD) (a->DT) (very->RB) (good->JJ) (job->NN) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('why', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('stick', 'VB'), ('the', 'DT'), ('holes', 'NNS'), ('in', 'IN')])
('tags -> ', '     (so->RB) (why->WRB) (did->VBD) (you->PRP) (stick->VB) (the->DT) (holes->NNS) (in->IN) ')
candidates to check:
1
('tags initial-> ', [('so', 'IN'), ('you', 'PRP'), ('could', 'MD'), ('see', 'VB'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('eyes', 'NNS')])
('tags -> ', '     (so->IN) (you->PRP) (could->MD) (see->VB) (out->IN) (of->IN) (the->DT) (eyes->NNS) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('wan', 'NN'), ('na', 'TO'), ('see', 'VB'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('eyes', 'NNS')])
('tags -> ', '     (oh->UH) (i->JJ) (don->VBP) (t->JJ) (wan->NN) (na->TO) (see->VB) (out->IN) (of->IN) (the->DT) (eyes->NNS) ')
('tags initial-> ', [('sighs', 'NNS')])
('tags -> ', '     (sighs->NNS) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clears', 'NNS'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clears->NNS) (throat->NN) ')
('tags initial-> ', [('i', 'JJ'), ('ll', 'VBP'), ('put', 'VB'), ('it', 'PRP'), ('over', 'RP'), ('here', 'RB'), ('so', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('play', 'VB'), ('with', 'IN'), ('it', 'PRP'), ('after', 'IN'), ('we', 'PRP'), ('eat', 'VBP')])
('tags -> ', '     (i->JJ) (ll->VBP) (put->VB) (it->PRP) (over->RP) (here->RB) (so->RB) (you->PRP) (can->MD) (play->VB) (with->IN) (it->PRP) (after->IN) (we->PRP) (eat->VBP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('eat', 'NN'), ('while', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('playing', 'VBG'), ('with', 'IN'), ('it', 'PRP')])
('tags -> ', '     (be->VB) (cause->NN) (you->PRP) (can->MD) (t->VB) (eat->NN) (while->IN) (you->PRP) (re->VBP) (playing->VBG) (with->IN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clears', 'NNS'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clears->NNS) (throat->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (www->NN) (noises->NNS) ')
candidates to check:
4
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('fun', 'VBN'), ('over', 'IN'), ('aunt', 'NN'), ('julie', 'NN'), ('s', 'NN'), ('this', 'DT'), ('weekend', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VBP) (fun->VBN) (over->IN) (aunt->NN) (julie->NN) (s->NN) (this->DT) (weekend->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'sausage', 18, 25]
sausage
sausage sausage 324
[('is', 'VBZ'), ('that', 'DT'), ('sausage', 'NN')]
['sausage']
('tags initial-> ', [('is', 'VBZ'), ('that', 'DT'), ('sausage', 'NN')])
('tags -> ', '     (is->VBZ) (that->DT) (sausage->NN) ')
candidates to check:
1
descended from food: [['N'], 'meatballs', 25, 34]
meatballs
meatballs meatballs 197
[('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('xxx', 'NNP'), ('meatballs', 'NNS')]
['meatballs']
('tags initial-> ', [('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('xxx', 'NNP'), ('meatballs', 'NNS')])
('tags -> ', '     (no->DT) (that->WDT) (s->VBZ) (xxx->NNP) (meatballs->NNS) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 14, 18]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e01865a8>)
[('is', 'VBZ'), ('that', 'IN'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('meat', 'NN')])
('tags -> ', '     (is->VBZ) (that->IN) (meat->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 17, 21]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e0186998>)
[('yes', 'NNS'), ('that', 'WDT'), ('s', 'VBP'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('yes', 'NNS'), ('that', 'WDT'), ('s', 'VBP'), ('meat', 'NN')])
('tags -> ', '     (yes->NNS) (that->WDT) (s->VBP) (meat->NN) ')
candidates to check:
2
descended from food: [['N'], 'meatballs', 21, 30]
meatballs
meatballs meatballs 197
[('is', 'VBZ'), ('this', 'DT'), ('m', 'NN'), ('meatballs', 'NNS')]
['meatballs']
('tags initial-> ', [('is', 'VBZ'), ('this', 'DT'), ('m', 'NN'), ('meatballs', 'NNS')])
('tags -> ', '     (is->VBZ) (this->DT) (m->NN) (meatballs->NNS) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('grandma', 'NN'), ('made', 'VBD'), ('th', 'JJ'), ('em', 'NN'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (grandma->NN) (made->VBD) (th->JJ) (em->NN) (for->IN) (you->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('know', 'VB'), ('what', 'WP')])
('tags -> ', '     (know->VB) (what->WP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
3
descended from food: [['N'], 'hamburgers', 27, 37]
('tags initial-> ', [('grandma', 'NN'), ('can', 'MD'), ('make', 'VB'), ('hamburgers', 'NNS')])
('tags -> ', '     (grandma->NN) (can->MD) (make->VB) (hamburgers->NNS) ')
('tags initial-> ', [('was', 'VBD'), ('cooking', 'VBG'), ('what', 'WP'), ('with', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (was->VBD) (cooking->VBG) (what->WP) (with->IN) (xxx->NN) ')
('tags initial-> ', [('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('finish', 'VBP'), ('chewing', 'VBG'), ('your', 'PRP$')])
('tags -> ', '     (why->WRB) (don->NN) (t->NN) (you->PRP) (finish->VBP) (chewing->VBG) (your->PRP$) ')
candidates to check:
1
descended from food: [['N'], 'food', 40, 44]
('tags initial-> ', [('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('finish', 'VBP'), ('chewing', 'VBG'), ('your', 'PRP$'), ('food', 'NN'), ('so', 'IN'), ('i', 'JJ'), ('can', 'MD'), ('understand', 'VB'), ('you', 'PRP')])
('tags -> ', '     (why->WRB) (don->NN) (t->NN) (you->PRP) (finish->VBP) (chewing->VBG) (your->PRP$) (food->NN) (so->IN) (i->JJ) (can->MD) (understand->VB) (you->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('when', 'WRB'), ('kim', 'NN'), ('when', 'WRB'), ('kemid', 'NN'), ('kimberly', 'RB'), ('was', 'VBD'), ('cookin', 'JJ'), ('g', 'NN')])
('tags -> ', '     (when->WRB) (kim->NN) (when->WRB) (kemid->NN) (kimberly->RB) (was->VBD) (cookin->JJ) (g->NN) ')
('tags initial-> ', [('cookin', 'NN'), ('g', 'NN')])
('tags -> ', '     (cookin->NN) (g->NN) ')
candidates to check:
1
('tags initial-> ', [('um', 'JJ'), ('um', 'NN'), ('i', 'NN'), ('mean', 'NN'), ('was', 'VBD'), ('bakin', 'JJ'), ('g', 'NN'), ('somebody', 'NN'), ('splashed', 'VBD')])
('tags -> ', '     (um->JJ) (um->NN) (i->NN) (mean->NN) (was->VBD) (bakin->JJ) (g->NN) (somebody->NN) (splashed->VBD) ')
candidates to check:
1
('tags initial-> ', [('something', 'NN'), ('splashed', 'VBD'), ('at', 'IN'), ('her', 'PRP$'), ('when', 'WRB'), ('she', 'PRP'), ('was', 'VBD'), ('cook', 'VBG'), ('cooking', 'VBG'), ('herself', 'PRP')])
('tags -> ', '     (something->NN) (splashed->VBD) (at->IN) (her->PRP$) (when->WRB) (she->PRP) (was->VBD) (cook->VBG) (cooking->VBG) (herself->PRP) ')
candidates to check:
5
descended from food: [['N'], 'bacon', 52, 57]
bacon
bacon bacon 309
[('with', 'IN'), ('with', 'IN'), ('the', 'DT'), ('t', 'NN'), ('toy', 'NN'), ('toy', 'NN'), ('bakin', 'NN'), ('g', 'NN'), ('bacon', 'NN')]
['bacon']
('tags initial-> ', [('with', 'IN'), ('with', 'IN'), ('the', 'DT'), ('t', 'NN'), ('toy', 'NN'), ('toy', 'NN'), ('bakin', 'NN'), ('g', 'NN'), ('bacon', 'NN')])
('tags -> ', '     (with->IN) (with->IN) (the->DT) (t->NN) (toy->NN) (toy->NN) (bakin->NN) (g->NN) (bacon->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('somethin', 'JJ'), ('g', 'NN'), ('splash', 'NN'), ('at', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (and->CC) (somethin->JJ) (g->NN) (splash->NN) (at->IN) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('somethin', 'JJ'), ('g', 'NN'), ('splut', 'NN'), ('n', 'NN'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (and->CC) (somethin->JJ) (g->NN) (splut->NN) (n->NN) (like->IN) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('splurt', 'NN'), ('noise', 'NN')])
('tags -> ', '     (www->NN) (splurt->NN) (noise->NN) ')
candidates to check:
1
('tags initial-> ', [('somethin', 'JJ'), ('g', 'NN'), ('did', 'VBD'), ('that', 'IN')])
('tags -> ', '     (somethin->JJ) (g->NN) (did->VBD) (that->IN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('it', 'PRP'), ('hurt', 'VBD'), ('and', 'CC'), ('it', 'PRP'), ('all', 'DT'), ('bleed', 'VBD'), ('down', 'RP')])
('tags -> ', '     (and->CC) (and->CC) (it->PRP) (hurt->VBD) (and->CC) (it->PRP) (all->DT) (bleed->VBD) (down->RP) ')
candidates to check:
1
('tags initial-> ', [('down', 'IN'), ('her', 'PRP$'), ('face', 'NN')])
('tags -> ', '     (down->IN) (her->PRP$) (face->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
candidates to check:
2
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('side', 'NN'), ('of', 'IN'), ('her', 'PRP$'), ('cheek', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (side->NN) (of->IN) (her->PRP$) (cheek->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN'), ('and', 'CC'), ('it', 'PRP'), ('got', 'VBD'), ('down', 'RB'), ('her', 'PRP$'), ('throat', 'NN')])
('tags -> ', '     (yeah->NN) (yeah->NN) (and->CC) (it->PRP) (got->VBD) (down->RB) (her->PRP$) (throat->NN) ')
('tags initial-> ', [('ugh', 'IN')])
('tags -> ', '     (ugh->IN) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('that', 'IN'), ('happen', 'VB')])
('tags -> ', '     (where->WRB) (did->VBD) (that->IN) (happen->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('got', 'VBD'), ('on', 'IN'), ('her', 'PRP'), ('um', 'JJ'), ('hand', 'NN')])
('tags -> ', '     (and->CC) (it->PRP) (got->VBD) (on->IN) (her->PRP) (um->JJ) (hand->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('gross', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (gross->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 23, 27]
('tags initial-> ', [('an', 'DT'), ('it', 'PRP'), ('got', 'VBD'), ('on', 'IN'), ('her', 'PRP'), ('food', 'NN')])
('tags -> ', '     (an->DT) (it->PRP) (got->VBD) (on->IN) (her->PRP) (food->NN) ')
('tags initial-> ', [('was', 'VBD'), ('she', 'PRP'), ('alright', 'VBD')])
('tags -> ', '     (was->VBD) (she->PRP) (alright->VBD) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('saw', 'VBD'), ('that', 'IN'), ('at', 'IN'), ('her', 'PRP$'), ('home', 'NN')])
('tags -> ', '     (but->CC) (i->NN) (saw->VBD) (that->IN) (at->IN) (her->PRP$) (home->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('i', 'VB'), ('sneaked', 'VBD'), ('over', 'IN'), ('her', 'PRP$'), ('door', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (i->VB) (sneaked->VBD) (over->IN) (her->PRP$) (door->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('her', 'PRP$'), ('mother', 'NN'), ('woke', 'VBD'), ('up', 'RB'), ('and', 'CC')])
('tags -> ', '     (and->CC) (and->CC) (her->PRP$) (mother->NN) (woke->VBD) (up->RB) (and->CC) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('in', 'IN'), ('her', 'PRP$'), ('and', 'CC'), ('and', 'CC'), ('kimberly', 'RB'), ('s', 'JJ'), ('mother', 'NN'), ('said', 'VBD'), ('get', 'VB'), ('outta', 'VBN'), ('out', 'IN'), ('of', 'IN'), ('here', 'RB'), ('chi', 'NNS')])
('tags -> ', '     (and->CC) (in->IN) (her->PRP$) (and->CC) (and->CC) (kimberly->RB) (s->JJ) (mother->NN) (said->VBD) (get->VB) (outta->VBN) (out->IN) (of->IN) (here->RB) (chi->NNS) ')
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('m', 'VBP'), ('no', 'DT'), ('i', 'NN'), ('m', 'VBD'), ('not', 'RB'), ('gettin', 'JJ'), ('g', 'NN'), ('out', 'IN'), ('of', 'IN'), ('here', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('m', 'VBP'), ('the', 'DT'), ('good', 'JJ'), ('batman', 'NN')])
('tags -> ', '     (no->DT) (i->JJ) (m->VBP) (no->DT) (i->NN) (m->VBD) (not->RB) (gettin->JJ) (g->NN) (out->IN) (of->IN) (here->RB) (be->VB) (cause->NN) (i->JJ) (m->VBP) (the->DT) (good->JJ) (batman->NN) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('when', 'WRB'), ('that', 'DT'), ('was', 'VBD'), ('during', 'IN'), ('play', 'NN'), ('time', 'NN'), ('at', 'IN'), ('school', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (when->WRB) (that->DT) (was->VBD) (during->IN) (play->NN) (time->NN) (at->IN) (school->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('be', 'VB'), ('because', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (be->VB) (because->IN) (xxx->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('be', 'VB'), ('because', 'RB'), ('because', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (be->VB) (because->RB) (because->IN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('i', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('tiger', 'NN')])
('tags -> ', '     (because->IN) (i->NN) (was->VBD) (a->DT) (tiger->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('because', 'IN'), ('i', 'NN'), ('was', 'VBD'), ('ti', 'JJ'), ('tiger', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (because->IN) (i->NN) (was->VBD) (ti->JJ) (tiger->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('with', 'IN')])
('tags -> ', '     (with->IN) ')
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN'), ('yeah', 'NN'), ('yeah', 'NN'), ('yup', 'NN')])
('tags -> ', '     (yeah->NN) (yeah->NN) (yeah->NN) (yeah->NN) (yup->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('a', 'DT'), ('and', 'CC'), ('me', 'PRP'), ('and', 'CC'), ('b', 'VB'), ('bwuh', 'NN')])
('tags -> ', '     (a->DT) (a->DT) (and->CC) (me->PRP) (and->CC) (b->VB) (bwuh->NN) ')
('tags initial-> ', [('and', 'CC'), ('me', 'PRP'), ('and', 'CC'), ('brian', 'JJ')])
('tags -> ', '     (and->CC) (me->PRP) (and->CC) (brian->JJ) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('m', 'VB'), ('m', 'FW'), ('me', 'PRP'), ('me', 'PRP'), ('and', 'CC'), ('brian', 'JJ'), ('ate', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (m->VB) (m->FW) (me->PRP) (me->PRP) (and->CC) (brian->JJ) (ate->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('was', 'VBD'), ('a', 'DT'), ('ti', 'NN'), ('ger', 'NN')])
('tags -> ', '     (was->VBD) (a->DT) (ti->NN) (ger->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('did', 'VBD'), ('the', 'DT'), ('imit', 'NN'), ('tiger', 'NN')])
('tags -> ', '     (and->CC) (he->PRP) (did->VBD) (the->DT) (imit->NN) (tiger->NN) ')
candidates to check:
3
('tags initial-> ', [('www', 'NN'), ('tiger', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (www->NN) (tiger->NN) (noises->NNS) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('got', 'VBD'), ('outta', 'PRP'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('cage', 'NN')])
('tags -> ', '     (and->CC) (they->PRP) (got->VBD) (outta->PRP) (out->IN) (of->IN) (the->DT) (cage->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('we', 'PRP'), ('and', 'CC'), ('we', 'PRP'), ('chased', 'VBD'), ('all', 'PDT'), ('the', 'DT'), ('people', 'NNS')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (we->PRP) (and->CC) (we->PRP) (chased->VBD) (all->PDT) (the->DT) (people->NNS) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('catch', 'VB'), ('anyone', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (catch->VB) (anyone->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('w', 'NN'), ('and', 'CC'), ('and', 'CC'), ('we', 'PRP'), ('ate', 'VBP'), ('them', 'PRP')])
('tags -> ', '     (and->CC) (and->CC) (w->NN) (and->CC) (and->CC) (we->PRP) (ate->VBP) (them->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('ate', 'VBP'), ('all', 'PDT'), ('the', 'DT'), ('people', 'NNS')])
('tags -> ', '     (and->CC) (we->PRP) (ate->VBP) (all->PDT) (the->DT) (people->NNS) ')
candidates to check:
2
('tags initial-> ', [('oh', 'UH'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('people', 'NNS')])
('tags -> ', '     (oh->UH) (i->JJ) (don->VBP) (t->NNS) (like->IN) (people->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('they', 'PRP'), ('taste', 'VBP'), ('good', 'JJ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (they->PRP) (taste->VBP) (good->JJ) ')
('tags initial-> ', [('because', 'IN'), ('it', 'PRP'), ('makes', 'VBZ'), ('us', 'PRP'), ('sick', 'VB')])
('tags -> ', '     (because->IN) (it->PRP) (makes->VBZ) (us->PRP) (sick->VB) ')
('tags initial-> ', [('it', 'PRP'), ('would', 'MD'), ('make', 'VB'), ('me', 'PRP'), ('sick', 'VB')])
('tags -> ', '     (it->PRP) (would->MD) (make->VB) (me->PRP) (sick->VB) ')
('tags initial-> ', [('does', 'VBZ'), ('it', 'PRP'), ('make', 'VB'), ('me', 'PRP'), ('sick', 'VB')])
('tags -> ', '     (does->VBZ) (it->PRP) (make->VB) (me->PRP) (sick->VB) ')
('tags initial-> ', [('i', 'NN'), ('um', 'NN')])
('tags -> ', '     (i->NN) (um->NN) ')
('tags initial-> ', [('ugh', 'IN')])
('tags -> ', '     (ugh->IN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'VB'), ('my', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (xxx->VB) (my->PRP$) (hands->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noise', 'NN')])
('tags -> ', '     (www->NN) (noise->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('does', 'VBZ'), ('it', 'PRP'), ('make', 'VB'), ('you', 'PRP'), ('sick', 'VB')])
('tags -> ', '     (does->VBZ) (it->PRP) (make->VB) (you->PRP) (sick->VB) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('i', 'JJ'), ('m', 'VBP'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('stick', 'VB'), ('to', 'TO'), ('your', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (i->JJ) (m->VBP) (i->JJ) (m->VBP) (i->JJ) (m->NN) (gon->NN) (na->TO) (stick->VB) (to->TO) (your->PRP$) (hands->NNS) ')
('tags initial-> ', [('ew', 'NN')])
('tags -> ', '     (ew->NN) ')
('tags initial-> ', [('eee', 'NN')])
('tags -> ', '     (eee->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('like', 'IN'), ('a', 'DT'), ('tiger', 'NN')])
('tags -> ', '     (what->WP) (like->IN) (a->DT) (tiger->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('re', 'NN'), ('you', 'PRP'), ('a', 'DT'), ('tiger', 'NN')])
('tags -> ', '     (what->WP) (re->NN) (you->PRP) (a->DT) (tiger->NN) ')
('tags initial-> ', [('ew', 'NN')])
('tags -> ', '     (ew->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('do', 'VBP'), ('that', 'IN')])
('tags -> ', '     (don->NN) (t->NN) (do->VBP) (that->IN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('laughs', 'VBZ'), ('yucky', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (laughs->VBZ) (yucky->JJ) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (food->NN) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP')])
('tags -> ', '     (sit->VB) (down->RP) ')
('tags initial-> ', [('chi', 'NNS'), ('sit', 'VBP'), ('please', 'NN')])
('tags -> ', '     (chi->NNS) (sit->VBP) (please->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('you', 'PRP'), ('doin', 'VBP'), ('g', 'NNS'), ('that', 'WDT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (you->PRP) (doin->VBP) (g->NNS) (that->WDT) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('gross', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (gross->JJ) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('ew', 'NN')])
('tags -> ', '     (ew->NN) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP')])
('tags -> ', '     (sit->VB) (down->RP) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
('tags initial-> ', [('careful', 'NN')])
('tags -> ', '     (careful->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('a', 'DT'), ('tiger', 'NN'), ('now', 'RB')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (a->DT) (tiger->NN) (now->RB) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('take', 'VB'), ('a', 'DT'), ('bite', 'NN')])
('tags -> ', '     (take->VB) (a->DT) (bite->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('so', 'RB'), ('hungry', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (so->RB) (hungry->JJ) ')
candidates to check:
1
('tags initial-> ', [('take', 'VB'), ('a', 'DT'), ('bite', 'NN')])
('tags -> ', '     (take->VB) (a->DT) (bite->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('i', 'NN'), ('asked', 'VBD'), ('for', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->NN) (asked->VBD) (for->IN) (that->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
('tags initial-> ', [('grunts', 'NNS')])
('tags -> ', '     (grunts->NNS) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('i', 'NN'), ('ask', 'NN'), ('for', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->NN) (ask->NN) (for->IN) (that->DT) ')
candidates to check:
1
descended from food: [['N'], 'supper', 15, 21]
('tags initial-> ', [('for', 'IN'), ('your', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (for->IN) (your->PRP$) (supper->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('i', 'NN'), ('just', 'RB'), ('gave', 'VBD'), ('it', 'PRP'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (just->RB) (gave->VBD) (it->PRP) (to->TO) (you->PRP) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('playing', 'VBG'), ('with', 'IN'), ('that', 'DT'), ('now', 'RB')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (playing->VBG) (with->IN) (that->DT) (now->RB) ')
candidates to check:
2
descended from food: [['N'], 'supper', 33, 39]
('tags initial-> ', [('play', 'NN'), ('that', 'WDT'), ('after', 'IN'), ('you', 'PRP'), ('finish', 'VBP'), ('supper', 'JJR')])
('tags -> ', '     (play->NN) (that->WDT) (after->IN) (you->PRP) (finish->VBP) (supper->JJR) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('chi', 'NN'), ('i', 'NN'), ('mean', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (chi->NN) (i->NN) (mean->VBP) (it->PRP) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('and', 'CC'), ('eat', 'VB'), ('first', 'JJ')])
('tags -> ', '     (sit->VB) (down->RP) (and->CC) (eat->VB) (first->JJ) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
candidates to check:
5
('tags initial-> ', [('m', 'NN'), ('m', 'NN'), ('m', 'NN'), ('mama', 'NN'), ('play', 'NN'), ('miano', 'NN'), ('piano', 'NN')])
('tags -> ', '     (m->NN) (m->NN) (m->NN) (mama->NN) (play->NN) (miano->NN) (piano->NN) ')
('tags initial-> ', [('ah', 'NN'), ('huh', 'NN')])
('tags -> ', '     (ah->NN) (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('funny', 'JJ'), ('mask', 'NN')])
('tags -> ', '     (the->DT) (funny->JJ) (mask->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('is', 'VBZ'), ('is', 'VBZ'), ('it', 'PRP'), ('a', 'DT'), ('sad', 'JJ'), ('mask', 'NN')])
('tags -> ', '     (i->NN) (is->VBZ) (is->VBZ) (it->PRP) (a->DT) (sad->JJ) (mask->NN) ')
candidates to check:
1
('tags initial-> ', [('uh', 'JJ'), ('kind', 'NN'), ('of', 'IN'), ('yeah', 'NN')])
('tags -> ', '     (uh->JJ) (kind->NN) (of->IN) (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('why', 'WRB'), ('is', 'VBZ'), ('a', 'DT'), ('sad', 'JJ'), ('mask', 'NN')])
('tags -> ', '     (why->WRB) (is->VBZ) (a->DT) (sad->JJ) (mask->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('sad', 'JJ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (it->PRP) (s->VBZ) (just->RB) (sad->JJ) ')
('tags initial-> ', [('she', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('feeling', 'VBG'), ('pretty', 'RB'), ('sad', 'JJ')])
('tags -> ', '     (she->PRP) (must->MD) (be->VB) (feeling->VBG) (pretty->RB) (sad->JJ) ')
candidates to check:
1
('tags initial-> ', [('gulps', 'NN')])
('tags -> ', '     (gulps->NN) ')
('tags initial-> ', [('oh', 'JJ'), ('why', 'WRB'), ('is', 'VBZ'), ('she', 'PRP'), ('sad', 'JJ')])
('tags -> ', '     (oh->JJ) (why->WRB) (is->VBZ) (she->PRP) (sad->JJ) ')
('tags initial-> ', [('i', 'NN'), ('dunno', 'VBP'), ('don', 'NN'), ('t', 'NN'), ('know', 'VBP'), ('why', 'WRB'), ('do', 'VBP'), ('you', 'PRP'), ('think', 'VB'), ('she', 'PRP'), ('s', 'VBZ'), ('sad', 'JJ')])
('tags -> ', '     (i->NN) (dunno->VBP) (don->NN) (t->NN) (know->VBP) (why->WRB) (do->VBP) (you->PRP) (think->VB) (she->PRP) (s->VBZ) (sad->JJ) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('she', 'PRP'), ('misses', 'VBZ'), ('her', 'PRP'), ('baby', 'NN')])
('tags -> ', '     (because->IN) (she->PRP) (misses->VBZ) (her->PRP) (baby->NN) ')
('tags initial-> ', [('she', 'PRP'), ('does', 'VBZ')])
('tags -> ', '     (she->PRP) (does->VBZ) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('her', 'PRP'), ('baby', 'NN'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (her->PRP) (baby->NN) (s->NN) (name->NN) ')
candidates to check:
2
('tags initial-> ', [('does', 'VBZ'), ('xxx', 'VB'), ('baby', 'NN'), ('needs', 'VBZ'), ('his', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (does->VBZ) (xxx->VB) (baby->NN) (needs->VBZ) (his->PRP$) (name->NN) ')
('tags initial-> ', [('he', 'PRP'), ('be', 'VB')])
('tags -> ', '     (he->PRP) (be->VB) ')
candidates to check:
3
('tags initial-> ', [('her', 'PRP$'), ('baby', 'NN'), ('s', 'NN'), ('name', 'NN'), ('is', 'VBZ'), ('stevie', 'JJ')])
('tags -> ', '     (her->PRP$) (baby->NN) (s->NN) (name->NN) (is->VBZ) (stevie->JJ) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('tv', 'NN')])
('tags -> ', '     (no->DT) (tv->NN) ')
candidates to check:
1
('tags initial-> ', [('tv', 'NN')])
('tags -> ', '     (tv->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('in', 'IN'), ('the', 'DT'), ('chair', 'NN'), ('please', 'NN')])
('tags -> ', '     (sit->VB) (down->RP) (in->IN) (the->DT) (chair->NN) (please->NN) ')
candidates to check:
2
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('tip', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (tip->NN) (in->IN) (it->PRP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('fall', 'VB')])
('tags -> ', '     (it->PRP) (s->VBD) (gon->VBG) (na->TO) (fall->VB) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('tip', 'NN'), ('it', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (tip->NN) (it->PRP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('fall', 'VB')])
('tags -> ', '     (it->PRP) (s->VBD) (gon->VBG) (na->TO) (fall->VB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('because', 'IN'), ('it', 'PRP'), ('will', 'MD')])
('tags -> ', '     (because->IN) (it->PRP) (will->MD) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('it', 'PRP'), ('will', 'MD'), ('it', 'PRP'), ('because', 'IN'), ('it', 'PRP'), ('will', 'MD'), ('it', 'PRP'), ('gets', 'VBZ'), ('boom', 'NN')])
('tags -> ', '     (because->IN) (it->PRP) (will->MD) (it->PRP) (because->IN) (it->PRP) (will->MD) (it->PRP) (gets->VBZ) (boom->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('will', 'MD'), ('crack', 'VB'), ('my', 'PRP$'), ('head', 'NN'), ('open', 'JJ')])
('tags -> ', '     (and->CC) (i->NN) (will->MD) (crack->VB) (my->PRP$) (head->NN) (open->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('could', 'MD')])
('tags -> ', '     (you->PRP) (could->MD) ')
('tags initial-> ', [('and', 'CC'), ('there', 'EX'), ('will', 'MD'), ('and', 'CC'), ('i', 'VB'), ('will', 'MD'), ('bleed', 'VB')])
('tags -> ', '     (and->CC) (there->EX) (will->MD) (and->CC) (i->VB) (will->MD) (bleed->VB) ')
('tags initial-> ', [('it', 'PRP'), ('could', 'MD'), ('happen', 'VB')])
('tags -> ', '     (it->PRP) (could->MD) (happen->VB) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('i', 'VB'), ('will', 'MD'), ('bleed', 'VB')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (i->VB) (will->MD) (bleed->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('will', 'MD'), ('bleed', 'VB'), ('all', 'DT'), ('over', 'IN'), ('the', 'DT'), ('fl', 'JJ'), ('place', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (will->MD) (bleed->VB) (all->DT) (over->IN) (the->DT) (fl->JJ) (place->NN) ')
('tags initial-> ', [('possibly', 'RB')])
('tags -> ', '     (possibly->RB) ')
candidates to check:
1
('tags initial-> ', [('because', 'RB'), ('because', 'IN'), ('to', 'TO'), ('there', 'EX'), ('s', 'VB'), ('a', 'DT'), ('blood', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (because->RB) (because->IN) (to->TO) (there->EX) (s->VB) (a->DT) (blood->NN) (in->IN) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('there', 'EX'), ('s', 'RB'), ('blood', 'NN'), ('inside', 'IN'), ('you', 'PRP')])
('tags -> ', '     (yeah->NN) (there->EX) (s->RB) (blood->NN) (inside->IN) (you->PRP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('because', 'IN'), ('that', 'DT'), ('s', 'VBZ'), ('like', 'IN'), ('your', 'PRP$')])
('tags -> ', '     (because->IN) (that->DT) (s->VBZ) (like->IN) (your->PRP$) ')
('tags initial-> ', [('your', 'PRP$'), ('what', 'WP')])
('tags -> ', '     (your->PRP$) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('fuel', 'NN')])
('tags -> ', '     (fuel->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('blood', 'NN'), ('inside', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('wouldn', 'VBP'), ('t', 'JJ'), ('be', 'VB'), ('alive', 'JJ')])
('tags -> ', '     (if->IN) (you->PRP) (didn->VBP) (t->NNS) (have->VBP) (any->DT) (blood->NN) (inside->IN) (you->PRP) (you->PRP) (wouldn->VBP) (t->JJ) (be->VB) (alive->JJ) ')
('tags initial-> ', [('but', 'CC'), ('but', 'CC'), ('we', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (but->CC) (but->CC) (we->PRP) (do->VBP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('na', 'TO'), ('see', 'VB'), ('these', 'DT'), ('um', 'NNS'), ('do', 'VBP'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (wan->VB) (na->TO) (see->VB) (these->DT) (um->NNS) (do->VBP) (the->DT) (xxx->NN) ')
('tags initial-> ', [('chi', 'NN'), ('sit', 'VBD'), ('down', 'RP'), ('please', 'NN')])
('tags -> ', '     (chi->NN) (sit->VBD) (down->RP) (please->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('music', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (like->IN) (the->DT) (music->NN) ')
('tags initial-> ', [('here', 'RB'), ('let', 'VB'), ('me', 'PRP'), ('do', 'VB'), ('this', 'DT')])
('tags -> ', '     (here->RB) (let->VB) (me->PRP) (do->VB) (this->DT) ')
('tags initial-> ', [('n', 'JJ'), ('n', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (n->JJ) (n->NN) (xxx->NN) ')
('tags initial-> ', [('what', 'WDT'), ('was', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WDT) (was->VBD) (that->IN) ')
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('n', 'JJ'), ('n', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (n->JJ) (n->JJ) (xxx->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('sit', 'NN'), ('up', 'RP'), ('please', 'NN')])
('tags -> ', '     (sit->NN) (up->RP) (please->NN) ')
('tags initial-> ', [('0', 'CD'), ('laughs', 'NNS'), ('wildly', 'RB')])
('tags -> ', '     (0->CD) (laughs->NNS) (wildly->RB) ')
('tags initial-> ', [('chi', 'NNS'), ('sit', 'VBP'), ('up', 'RP')])
('tags -> ', '     (chi->NNS) (sit->VBP) (up->RP) ')
('tags initial-> ', [('grunts', 'NNS')])
('tags -> ', '     (grunts->NNS) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('sit', 'NN'), ('up', 'RP'), ('please', 'VB'), ('your', 'PRP$'), ('feet', 'NNS')])
('tags -> ', '     (sit->NN) (up->RP) (please->VB) (your->PRP$) (feet->NNS) ')
('tags initial-> ', [('sigh', 'NN')])
('tags -> ', '     (sigh->NN) ')
('tags initial-> ', [('one', 'CD')])
('tags -> ', '     (one->CD) ')
('tags initial-> ', [('yuck', 'NN')])
('tags -> ', '     (yuck->NN) ')
('tags initial-> ', [('two', 'CD')])
('tags -> ', '     (two->CD) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('take', 'VB'), ('another', 'DT'), ('bite', 'NN')])
('tags -> ', '     (take->VB) (another->DT) (bite->NN) ')
('tags initial-> ', [('num', 'NN'), ('num', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (num->NN) (num->NN) (xxx->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('a', 'DT'), ('monster', 'NN'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('eating', 'VBG')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (a->DT) (monster->NN) (when->WRB) (you->PRP) (re->VBP) (eating->VBG) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('please', 'NN')])
('tags -> ', '     (sit->VB) (down->RP) (please->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('sit', 'NN')])
('tags -> ', '     (sit->NN) ')
('tags initial-> ', [('sit', 'NN')])
('tags -> ', '     (sit->NN) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
candidates to check:
3
('tags initial-> ', [('mama', 'NN'), ('hug', 'NN')])
('tags -> ', '     (mama->NN) (hug->NN) ')
candidates to check:
1
('tags initial-> ', [('okay', 'NN'), ('i', 'NN'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('a', 'DT'), ('hug', 'NN'), ('but', 'CC'), ('then', 'RB'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('sit', 'VB'), ('down', 'RP'), ('and', 'CC'), ('eat', 'VB')])
('tags -> ', '     (okay->NN) (i->NN) (ll->VBP) (give->VB) (you->PRP) (a->DT) (hug->NN) (but->CC) (then->RB) (you->PRP) (have->VBP) (to->TO) (sit->VB) (down->RP) (and->CC) (eat->VB) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('choking', 'JJ'), ('cough', 'NN')])
('tags -> ', '     (0->CD) (choking->JJ) (cough->NN) ')
('tags initial-> ', [('careful', 'NN')])
('tags -> ', '     (careful->NN) ')
candidates to check:
1
('tags initial-> ', [('careful', 'JJ'), ('giggles', 'NNS')])
('tags -> ', '     (careful->JJ) (giggles->NNS) ')
candidates to check:
1
('tags initial-> ', [('coughs', 'NNS')])
('tags -> ', '     (coughs->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('alright', 'VBP')])
('tags -> ', '     (you->PRP) (alright->VBP) ')
candidates to check:
1
('tags initial-> ', [('coughs', 'NNS')])
('tags -> ', '     (coughs->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('hug', 'NN'), ('that', 'WDT'), ('hard', 'JJ'), ('chi', 'NN')])
('tags -> ', '     (you->PRP) (can->MD) (t->VB) (hug->NN) (that->WDT) (hard->JJ) (chi->NN) ')
('tags initial-> ', [('you', 'PRP'), ('ll', 'VBP'), ('choke', 'VB')])
('tags -> ', '     (you->PRP) (ll->VBP) (choke->VB) ')
('tags initial-> ', [('okay', 'RB'), ('now', 'RB'), ('sit', 'VBP'), ('down', 'RP')])
('tags -> ', '     (okay->RB) (now->RB) (sit->VBP) (down->RP) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('help', 'VB'), ('me', 'PRP')])
('tags -> ', '     (can->MD) (you->PRP) (help->VB) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('yes', 'NNS'), ('i', 'VBP'), ('can', 'MD'), ('if', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('sitting', 'VBG'), ('in', 'IN'), ('your', 'PRP$'), ('chair', 'NN')])
('tags -> ', '     (yes->NNS) (i->VBP) (can->MD) (if->IN) (you->PRP) (re->VBP) (sitting->VBG) (in->IN) (your->PRP$) (chair->NN) ')
('tags initial-> ', [('not', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('keep', 'VBP'), ('getting', 'VBG'), ('up', 'RP')])
('tags -> ', '     (not->RB) (if->IN) (you->PRP) (keep->VBP) (getting->VBG) (up->RP) ')
('tags initial-> ', [('help', 'VB'), ('me', 'PRP'), ('still', 'RB')])
('tags -> ', '     (help->VB) (me->PRP) (still->RB) ')
('tags initial-> ', [('i', 'NN'), ('will', 'MD')])
('tags -> ', '     (i->NN) (will->MD) ')
candidates to check:
1
('tags initial-> ', [('turn', 'NN'), ('around', 'RP'), ('you', 'PRP'), ('got', 'VBD'), ('ta', 'JJ'), ('finish', 'VB'), ('what', 'WP'), ('chewing', 'VBG'), ('what', 'WP'), ('s', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (turn->NN) (around->RP) (you->PRP) (got->VBD) (ta->JJ) (finish->VB) (what->WP) (chewing->VBG) (what->WP) (s->NN) (in->IN) (your->PRP$) (mouth->NN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('frustrated', 'JJ'), ('noise', 'NN')])
('tags -> ', '     (0->CD) (frustrated->JJ) (noise->NN) ')
('tags initial-> ', [('and', 'CC'), ('don', 'VB'), ('t', 'NNS'), ('say', 'VB'), ('help', 'NN'), ('me', 'PRP'), ('still', 'RB'), ('you', 'PRP'), ('say', 'VBP'), ('help', 'VB'), ('me', 'PRP'), ('please', 'VB')])
('tags -> ', '     (and->CC) (don->VB) (t->NNS) (say->VB) (help->NN) (me->PRP) (still->RB) (you->PRP) (say->VBP) (help->VB) (me->PRP) (please->VB) ')
candidates to check:
4
('tags initial-> ', [('n', 'JJ'), ('no', 'DT'), ('no', 'DT'), ('help', 'NN'), ('m', 'VB')])
('tags -> ', '     (n->JJ) (no->DT) (no->DT) (help->NN) (m->VB) ')
('tags initial-> ', [('help', 'VB'), ('me', 'PRP'), ('still', 'RB')])
('tags -> ', '     (help->VB) (me->PRP) (still->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'IN'), ('wa', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('na', 'TO'), ('put', 'VB')])
('tags -> ', '     (xxx->NN) (i->NN) (don->VBP) (t->IN) (wa->NN) (i->NN) (wan->VBP) (na->TO) (put->VB) ')
('tags initial-> ', [('say', 'VB'), ('please', 'NN'), ('q', 'NN')])
('tags -> ', '     (say->VB) (please->NN) (q->NN) ')
('tags initial-> ', [('please', 'NN'), ('can', 'MD'), ('you', 'PRP'), ('help', 'VB'), ('me', 'PRP'), ('still', 'RB'), ('please', 'VB')])
('tags -> ', '     (please->NN) (can->MD) (you->PRP) (help->VB) (me->PRP) (still->RB) (please->VB) ')
('tags initial-> ', [('yes', 'NNS'), ('i', 'NNS'), ('can', 'MD')])
('tags -> ', '     (yes->NNS) (i->NNS) (can->MD) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('sit', 'NN'), ('on', 'IN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (sit->NN) (on->IN) ')
candidates to check:
2
descended from food: [['N'], 'food', 61, 65]
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('sit', 'VB'), ('on', 'IN'), ('your', 'PRP$'), ('your', 'PRP$'), ('lap', 'NN'), ('and', 'CC'), ('i', 'NN'), ('m', 'VBP'), ('bringing', 'VBG'), ('my', 'PRP$'), ('food', 'NN'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (sit->VB) (on->IN) (your->PRP$) (your->PRP$) (lap->NN) (and->CC) (i->NN) (m->VBP) (bringing->VBG) (my->PRP$) (food->NN) (over->IN) (here->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('getting', 'VBG'), ('too', 'RB'), ('big', 'JJ'), ('to', 'TO'), ('sit', 'VB'), ('on', 'IN'), ('my', 'PRP$'), ('lap', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (getting->VBG) (too->RB) (big->JJ) (to->TO) (sit->VB) (on->IN) (my->PRP$) (lap->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
('tags initial-> ', [('because', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('big', 'JJ'), ('boy', 'NN'), ('now', 'RB')])
('tags -> ', '     (because->IN) (you->PRP) (re->VBP) (a->DT) (big->JJ) (boy->NN) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('sit', 'VB'), ('in', 'IN'), ('the', 'DT'), ('chair', 'NN')])
('tags -> ', '     (you->PRP) (can->MD) (sit->VB) (in->IN) (the->DT) (chair->NN) ')
candidates to check:
1
descended from food: [['N'], 'meatball', 22, 30]
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('the', 'DT'), ('meatball', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (the->DT) (meatball->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('what', 'WP'), ('the', 'DT'), ('wolf', 'NN'), ('ate', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) (what->WP) (the->DT) (wolf->NN) (ate->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('get', 'NN'), ('that', 'IN'), ('later', 'RB')])
('tags -> ', '     (i->NN) (ll->VBP) (get->NN) (that->IN) (later->RB) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('worry', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (worry->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('what', 'WP'), ('the', 'DT'), ('wolf', 'NN'), ('ate', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) (what->WP) (the->DT) (wolf->NN) (ate->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('what', 'WDT'), ('did', 'VBD'), ('the', 'DT'), ('wolf', 'NN'), ('eat', 'NN')])
('tags -> ', '     (what->WDT) (did->VBD) (the->DT) (wolf->NN) (eat->NN) ')
candidates to check:
1
duck
duck duck 84
[('a', 'DT'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('a', 'DT'), ('duck', 'NN')])
('tags -> ', '     (a->DT) (duck->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('did', 'VBD'), ('the', 'DT'), ('wolf', 'NN'), ('eat', 'VBD'), ('a', 'DT'), ('d', 'NN')])
('tags -> ', '     (why->WRB) (did->VBD) (the->DT) (wolf->NN) (eat->VBD) (a->DT) (d->NN) ')
candidates to check:
1
duck
duck duck 84
[('did', 'VBD'), ('he', 'PRP'), ('take', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('bite', 'NN'), ('of', 'IN'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('take', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('bite', 'NN'), ('of', 'IN'), ('the', 'DT'), ('duck', 'NN')])
('tags -> ', '     (did->VBD) (he->PRP) (take->VB) (a->DT) (little->JJ) (bite->NN) (of->IN) (the->DT) (duck->NN) ')
('tags initial-> ', [('why', 'WRB'), ('didn', 'NN'), ('t', 'NN'), ('he', 'PRP'), ('why', 'WRB'), ('did', 'VBD'), ('he', 'PRP'), ('ate', 'VB'), ('her', 'PRP$')])
('tags -> ', '     (why->WRB) (didn->NN) (t->NN) (he->PRP) (why->WRB) (did->VBD) (he->PRP) (ate->VB) (her->PRP$) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('why', 'WRB'), ('did', 'VBD'), ('he', 'PRP'), ('eat', 'VB'), ('her', 'PRP$')])
('tags -> ', '     (why->WRB) (did->VBD) (he->PRP) (eat->VB) (her->PRP$) ')
candidates to check:
1
descended from food: [['N'], 'supper', 35, 41]
('tags initial-> ', [('well', 'RB'), ('why', 'WRB'), ('are', 'VBP'), ('you', 'PRP'), ('eating', 'VBG'), ('your', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (well->RB) (why->WRB) (are->VBP) (you->PRP) (eating->VBG) (your->PRP$) (supper->NN) ')
('tags initial-> ', [('n', 'JJ'), ('no', 'DT'), ('why', 'WRB')])
('tags -> ', '     (n->JJ) (no->DT) (why->WRB) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('hungry', 'JJ')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (was->VBD) (hungry->JJ) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('why', 'WRB'), ('did', 'VBD'), ('the', 'DT'), ('wolf', 'NN'), ('um', 'JJ'), ('twist', 'NN'), ('her', 'PRP$')])
('tags -> ', '     (no->DT) (why->WRB) (did->VBD) (the->DT) (wolf->NN) (um->JJ) (twist->NN) (her->PRP$) ')
candidates to check:
2
pepper
pepper pepper 27
[('and', 'CC'), ('put', 'VB'), ('pepper', 'NN'), ('on', 'IN'), ('her', 'PRP$')]
['pepper']
('tags initial-> ', [('and', 'CC'), ('put', 'VB'), ('pepper', 'NN'), ('on', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (and->CC) (put->VB) (pepper->NN) (on->IN) (her->PRP$) ')
candidates to check:
1
salt
salt salt 0
[('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('salt', 'NN'), ('on', 'IN'), ('her', 'PRP$')]
['salt']
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('salt', 'NN'), ('on', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (salt->NN) (on->IN) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
('tags initial-> ', [('a', 'DT'), ('and', 'CC'), ('and', 'CC'), ('he', 'PRP'), ('ate', 'VBD'), ('her', 'PRP'), ('why', 'WRB')])
('tags -> ', '     (a->DT) (and->CC) (and->CC) (he->PRP) (ate->VBD) (her->PRP) (why->WRB) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('he', 'PRP'), ('must', 'MD'), ('have', 'VB'), ('been', 'VBN'), ('hungry', 'JJ')])
('tags -> ', '     (i->NN) (think->VBP) (he->PRP) (must->MD) (have->VB) (been->VBN) (hungry->JJ) ')
('tags initial-> ', [('but', 'CC'), ('he', 'PRP')])
('tags -> ', '     (but->CC) (he->PRP) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('think', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (think->VB) ')
('tags initial-> ', [('was', 'VBD'), ('he', 'PRP'), ('hungry', 'JJ')])
('tags -> ', '     (was->VBD) (he->PRP) (hungry->JJ) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (i->NN) (think->VBP) (so->RB) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('think', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (think->VB) ')
('tags initial-> ', [('w', 'NN'), ('was', 'VBD'), ('he', 'PRP')])
('tags -> ', '     (w->NN) (was->VBD) (he->PRP) ')
('tags initial-> ', [('probably', 'RB')])
('tags -> ', '     (probably->RB) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('think', 'VB'), ('he', 'PRP'), ('was', 'VBD'), ('hungry', 'JJ')])
('tags -> ', '     (do->VBP) (you->PRP) (think->VB) (he->PRP) (was->VBD) (hungry->JJ) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP')])
('tags -> ', '     (do->VB) (you->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'VB'), ('me', 'PRP'), ('too', 'RB')])
('tags -> ', '     (yeah->VB) (me->PRP) (too->RB) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
duck
duck duck 84
[('you', 'PRP'), ('had', 'VBD'), ('better', 'JJR'), ('be', 'VB'), ('hungry', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('a', 'DT'), ('whole', 'JJ'), ('duck', 'NN'), ('huh', 'NN')]
['duck']
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('better', 'JJR'), ('be', 'VB'), ('hungry', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('a', 'DT'), ('whole', 'JJ'), ('duck', 'NN'), ('huh', 'NN')])
('tags -> ', '     (you->PRP) (had->VBD) (better->JJR) (be->VB) (hungry->JJ) (to->TO) (eat->VB) (a->DT) (whole->JJ) (duck->NN) (huh->NN) ')
('tags initial-> ', [('i', 'NN'), ('i', 'NN')])
('tags -> ', '     (i->NN) (i->NN) ')
candidates to check:
4
('tags initial-> ', [('mo', 'NN'), ('mommy', 'NN'), ('i', 'NN'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN')])
('tags -> ', '     (mo->NN) (mommy->NN) (i->NN) (have->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (bath->NN) (room->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (bath->NN) (room->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 18, 22]
('tags initial-> ', [('finish', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (finish->VB) (your->PRP$) (food->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('do', 'VB'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (do->VB) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clear', 'JJ'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clear->JJ) (throat->NN) ')
('tags initial-> ', [('okay', 'IN'), ('sit', 'VBP'), ('down', 'RP'), ('finish', 'JJ'), ('eating', 'NN')])
('tags -> ', '     (okay->IN) (sit->VBP) (down->RP) (finish->JJ) (eating->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('do', 'VB'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (do->VB) (this->DT) ')
('tags initial-> ', [('whap', 'NN')])
('tags -> ', '     (whap->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('s', 'VBD'), ('gon', 'NN'), ('na', 'TO'), ('fall', 'VB'), ('fall', 'RB'), ('right', 'RB'), ('off', 'IN'), ('his', 'PRP$'), ('um', 'JJ'), ('airplane', 'NN')])
('tags -> ', '     (and->CC) (he->PRP) (s->VBD) (gon->NN) (na->TO) (fall->VB) (fall->RB) (right->RB) (off->IN) (his->PRP$) (um->JJ) (airplane->NN) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('because', 'IN'), ('anthony', 'NN'), ('s', 'VBD'), ('the', 'DT'), ('bad', 'JJ'), ('because', 'IN'), ('he', 'PRP'), ('shoots', 'VBZ'), ('people', 'NNS')])
('tags -> ', '     (because->IN) (because->IN) (anthony->NN) (s->VBD) (the->DT) (bad->JJ) (because->IN) (he->PRP) (shoots->VBZ) (people->NNS) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('he', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('gun', 'NN')])
('tags -> ', '     (because->IN) (he->PRP) (got->VBD) (a->DT) (gun->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('gun', 'NN')])
('tags -> ', '     (he->PRP) (has->VBZ) (a->DT) (gun->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (yeah->NN) (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('anthony', 'JJ'), ('gots', 'NNS'), ('n', 'VBP'), ('a', 'DT'), ('gun', 'NN')])
('tags -> ', '     (anthony->JJ) (gots->NNS) (n->VBP) (a->DT) (gun->NN) ')
candidates to check:
1
('tags initial-> ', [('anthony', 'NN'), ('in', 'IN'), ('kindergarten', 'NN')])
('tags -> ', '     (anthony->NN) (in->IN) (kindergarten->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'UH'), ('gots', 'NNS'), ('n', 'VBP'), ('a', 'DT'), ('gun', 'NN')])
('tags -> ', '     (yeah->UH) (gots->NNS) (n->VBP) (a->DT) (gun->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('should', 'MD'), ('tell', 'VB'), ('his', 'PRP$'), ('teacher', 'NN')])
('tags -> ', '     (you->PRP) (should->MD) (tell->VB) (his->PRP$) (teacher->NN) ')
('tags initial-> ', [('hope', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('real', 'JJ'), ('one', 'NN')])
('tags -> ', '     (hope->NN) (it->PRP) (s->VBZ) (not->RB) (a->DT) (real->JJ) (one->NN) ')
('tags initial-> ', [('it', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('real', 'JJ'), ('one', 'NN')])
('tags -> ', '     (it->PRP) (is->VBZ) (a->DT) (real->JJ) (one->NN) ')
('tags initial-> ', [('uhoh', 'NN')])
('tags -> ', '     (uhoh->NN) ')
candidates to check:
3
('tags initial-> ', [('because', 'RB'), ('because', 'IN'), ('he', 'PRP'), ('because', 'IN'), ('he', 'PRP'), ('came', 'VBD'), ('to', 'TO'), ('my', 'PRP$'), ('house', 'NN'), ('and', 'CC'), ('shoot', 'VB'), ('me', 'PRP'), ('last', 'JJ'), ('week', 'NN')])
('tags -> ', '     (because->RB) (because->IN) (he->PRP) (because->IN) (he->PRP) (came->VBD) (to->TO) (my->PRP$) (house->NN) (and->CC) (shoot->VB) (me->PRP) (last->JJ) (week->NN) ')
('tags initial-> ', [('no', 'DT'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('laughs', 'NNS')])
('tags -> ', '     (no->DT) (he->PRP) (didn->VBZ) (t->JJ) (laughs->NNS) ')
('tags initial-> ', [('yes', 'RB'), ('he', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (yes->RB) (he->PRP) (did->VBD) ')
candidates to check:
3
('tags initial-> ', [('your', 'PRP$'), ('house', 'NN'), ('is', 'VBZ'), ('right', 'JJ'), ('here', 'RB'), ('and', 'CC'), ('anthony', 'JJ'), ('didn', 'NN'), ('t', 'NN'), ('come', 'VBN'), ('here', 'RB'), ('and', 'CC'), ('shoot', 'VBP'), ('you', 'PRP'), ('last', 'JJ'), ('week', 'NN')])
('tags -> ', '     (your->PRP$) (house->NN) (is->VBZ) (right->JJ) (here->RB) (and->CC) (anthony->JJ) (didn->NN) (t->NN) (come->VBN) (here->RB) (and->CC) (shoot->VBP) (you->PRP) (last->JJ) (week->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('no', 'DT'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'NN')])
('tags -> ', '     (no->DT) (he->PRP) (didn->VBZ) (t->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('believe', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (believe->VBP) (you->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('sneaking', 'VBG'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (he->PRP) (was->VBD) (sneaking->VBG) (like->IN) (this->DT) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'NN')])
('tags -> ', '     (oh->UH) (xxx->NN) ')
('tags initial-> ', [('he', 'PRP'), ('he', 'PRP'), ('was', 'VBD'), ('sneakin', 'JJ'), ('g', 'NN')])
('tags -> ', '     (he->PRP) (he->PRP) (was->VBD) (sneakin->JJ) (g->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('and', 'CC'), ('he', 'PRP'), ('and', 'CC'), ('and', 'CC'), ('he', 'PRP'), ('knocked', 'VBD'), ('on', 'IN'), ('a', 'DT'), ('door', 'NN')])
('tags -> ', '     (a->DT) (and->CC) (he->PRP) (and->CC) (and->CC) (he->PRP) (knocked->VBD) (on->IN) (a->DT) (door->NN) ')
('tags initial-> ', [('an', 'DT'), ('and', 'CC'), ('i', 'JJ'), ('o', 'NN'), ('and', 'CC'), ('i', 'NN'), ('op', 'VBP'), ('and', 'CC'), ('i', 'VBP'), ('opened', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (an->DT) (and->CC) (i->JJ) (o->NN) (and->CC) (i->NN) (op->VBP) (and->CC) (i->VBP) (opened->VBD) (it->PRP) ')
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('all', 'DT'), ('and', 'CC'), ('he', 'PRP'), ('shoot', 'VBD'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (he->PRP) (all->DT) (and->CC) (he->PRP) (shoot->VBD) (me->PRP) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('sure', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (sure->JJ) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN'), ('and', 'CC'), ('bullets', 'NNS'), ('got', 'VBD'), ('in', 'IN'), ('my', 'PRP$'), ('nose', 'NN')])
('tags -> ', '     (yeah->NN) (yeah->NN) (and->CC) (bullets->NNS) (got->VBD) (in->IN) (my->PRP$) (nose->NN) ')
('tags initial-> ', [('ugh', 'IN')])
('tags -> ', '     (ugh->IN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('took', 'VBD'), ('th', 'NN'), ('em', 'NN'), ('out', 'IN'), ('and', 'CC'), ('put', 'VB'), ('th', 'JJ'), ('em', 'NN'), ('in', 'IN'), ('his', 'PRP$'), ('brother', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (took->VBD) (th->NN) (em->NN) (out->IN) (and->CC) (put->VB) (th->JJ) (em->NN) (in->IN) (his->PRP$) (brother->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('put', 'VBD'), ('somethin', 'JJ'), ('g', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('in', 'IN'), ('my', 'PRP$'), ('nose', 'NN')])
('tags -> ', '     (and->CC) (he->PRP) (put->VBD) (somethin->JJ) (g->NN) (in->IN) (my->PRP$) (in->IN) (my->PRP$) (nose->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('bullet', 'NN')])
('tags -> ', '     (a->DT) (bullet->NN) ')
('tags initial-> ', [('again', 'RB'), ('and', 'CC'), ('i', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('sticked', 'VBD'), ('n', 'IN'), ('it', 'PRP'), ('i', 'VBZ'), ('in', 'IN'), ('anthony', 'NN')])
('tags -> ', '     (again->RB) (and->CC) (i->JJ) (and->CC) (i->JJ) (sticked->VBD) (n->IN) (it->PRP) (i->VBZ) (in->IN) (anthony->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('grabbed', 'VBD'), ('his', 'PRP$'), ('gun', 'NN'), ('away', 'RB'), ('from', 'IN'), ('him', 'PRP')])
('tags -> ', '     (and->CC) (i->VB) (grabbed->VBD) (his->PRP$) (gun->NN) (away->RB) (from->IN) (him->PRP) ')
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('shoot', 'VBP'), ('him', 'PRP'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (and->CC) (i->NN) (and->CC) (i->JJ) (shoot->VBP) (him->PRP) (like->IN) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('shooting', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (www->NN) (shooting->NN) (noises->NNS) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('bullets', 'NNS'), ('didn', 'VBP'), ('t', 'NN'), ('go', 'VBP'), ('in', 'IN'), ('my', 'PRP$'), ('nose', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (bullets->NNS) (didn->VBP) (t->NN) (go->VBP) (in->IN) (my->PRP$) (nose->NN) ')
('tags initial-> ', [('o', 'NN'), ('or', 'CC'), ('all', 'DT')])
('tags -> ', '     (o->NN) (or->CC) (all->DT) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('past', 'VB'), ('my', 'PRP$'), ('body', 'NN')])
('tags -> ', '     (and->CC) (past->VB) (my->PRP$) (body->NN) ')
('tags initial-> ', [('oh', 'UH'), ('gee', 'NN')])
('tags -> ', '     (oh->UH) (gee->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('a', 'DT'), ('nice', 'JJ'), ('story', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (a->DT) (nice->JJ) (story->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('anthony', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('allowed', 'VBN'), ('to', 'TO'), ('come', 'VB'), ('in', 'IN'), ('our', 'PRP$'), ('building', 'NN'), ('any', 'DT'), ('more', 'JJR')])
('tags -> ', '     (well->RB) (anthony->RB) (s->VBZ) (not->RB) (allowed->VBN) (to->TO) (come->VB) (in->IN) (our->PRP$) (building->NN) (any->DT) (more->JJR) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('guns', 'NNS')])
('tags -> ', '     (be->VB) (cause->NN) (i->JJ) (don->VBP) (t->NNS) (like->IN) (guns->NNS) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'NN'), ('because', 'IN'), ('i', 'NN'), ('just', 'RB'), ('already', 'RB'), ('shoot', 'JJ'), ('shoot', 'NN'), ('because', 'IN'), ('because', 'IN'), ('because', 'IN'), ('i', 'NN'), ('telled', 'VBD'), ('n', 'JJ'), ('anthony', 'NN'), ('feel', 'VB'), ('my', 'PRP$'), ('muscles', 'NNS')])
('tags -> ', '     (xxx->NN) (because->IN) (i->NN) (just->RB) (already->RB) (shoot->JJ) (shoot->NN) (because->IN) (because->IN) (because->IN) (i->NN) (telled->VBD) (n->JJ) (anthony->NN) (feel->VB) (my->PRP$) (muscles->NNS) ')
('tags initial-> ', [('and', 'CC'), ('did', 'VBD'), ('he', 'PRP')])
('tags -> ', '     (and->CC) (did->VBD) (he->PRP) ')
candidates to check:
1
('tags initial-> ', [('yup', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('feeled', 'VBD'), ('n', 'JJ'), ('my', 'PRP$'), ('muscles', 'NNS')])
('tags -> ', '     (yup->NN) (and->CC) (he->PRP) (feeled->VBD) (n->JJ) (my->PRP$) (muscles->NNS) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('feel', 'VBP'), ('arm', 'JJ'), ('and', 'CC'), ('a', 'DT'), ('and', 'CC'), ('they', 'PRP'), ('feel', 'VBP'), ('my', 'PRP$'), ('muscles', 'NNS')])
('tags -> ', '     (and->CC) (they->PRP) (feel->VBP) (arm->JJ) (and->CC) (a->DT) (and->CC) (they->PRP) (feel->VBP) (my->PRP$) (muscles->NNS) ')
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('stronger', 'JJR')])
('tags -> ', '     (and->CC) (i->NN) (was->VBD) (stronger->JJR) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('scare', 'VBP'), ('him', 'PRP')])
('tags -> ', '     (and->CC) (you->PRP) (scare->VBP) (him->PRP) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('scare', 'VB'), ('him', 'PRP'), ('with', 'IN'), ('your', 'PRP$'), ('big', 'JJ'), ('muscles', 'NNS')])
('tags -> ', '     (did->VBD) (you->PRP) (scare->VB) (him->PRP) (with->IN) (your->PRP$) (big->JJ) (muscles->NNS) ')
('tags initial-> ', [('he', 'PRP')])
('tags -> ', '     (he->PRP) ')
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN'), ('i', 'NN'), ('did', 'VBD'), ('this', 'DT')])
('tags -> ', '     (yeah->NN) (yeah->NN) (i->NN) (did->VBD) (this->DT) ')
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (yeah->NN) (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('put', 'VBP'), ('my', 'PRP$'), ('um', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (put->VBP) (my->PRP$) (um->NN) ')
candidates to check:
1
('tags initial-> ', [('um', 'JJ'), ('um', 'JJ'), ('my', 'PRP$'), ('frankenstein', 'NN'), ('on', 'IN')])
('tags -> ', '     (um->JJ) (um->JJ) (my->PRP$) (frankenstein->NN) (on->IN) ')
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('and', 'CC'), ('a', 'DT'), ('and', 'CC'), ('i', 'NN'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('i', 'VB'), ('grow', 'NN'), ('grew', 'VBD'), ('up', 'RB'), ('and', 'CC'), ('grew', 'VBD'), ('up', 'RB'), ('and', 'CC'), ('grew', 'VBD'), ('up', 'RP')])
('tags -> ', '     (and->CC) (he->PRP) (and->CC) (a->DT) (and->CC) (i->NN) (and->CC) (and->CC) (and->CC) (i->VB) (grow->NN) (grew->VBD) (up->RB) (and->CC) (grew->VBD) (up->RB) (and->CC) (grew->VBD) (up->RP) ')
('tags initial-> ', [('a', 'DT'), ('a', 'DT'), ('and', 'CC'), ('i', 'VB'), ('a', 'DT'), ('a', 'DT'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('and', 'CC'), ('and', 'CC'), ('i', 'VB'), ('xxx', 'VBP')])
('tags -> ', '     (a->DT) (a->DT) (and->CC) (i->VB) (a->DT) (a->DT) (and->CC) (i->NN) (was->VBD) (and->CC) (and->CC) (i->VB) (xxx->VBP) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('still', 'RB'), ('grew', 'VBD'), ('up', 'RP')])
('tags -> ', '     (and->CC) (and->CC) (i->NN) (was->VBD) (still->RB) (grew->VBD) (up->RP) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('y', 'NN'), ('yeah', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (y->NN) (yeah->NN) (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('and', 'CC'), ('i', 'NN'), ('g', 'NN'), ('and', 'CC'), ('i', 'NN'), ('got', 'VBD'), ('my', 'PRP$'), ('frankenstein', 'NN')])
('tags -> ', '     (yeah->NN) (and->CC) (i->NN) (g->NN) (and->CC) (i->NN) (got->VBD) (my->PRP$) (frankenstein->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
egg
egg egg 357
[('egg', 'NN')]
['egg']
('tags initial-> ', [('egg', 'NN')])
('tags -> ', '     (egg->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('because', 'IN'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('bigger', 'JJR')])
('tags -> ', '     (yeah->NN) (because->IN) (when->WRB) (i->NN) (was->VBD) (bigger->JJR) ')
('tags initial-> ', [('yeah', 'RB'), ('yeah', 'RB'), ('because', 'IN'), ('because', 'IN'), ('because', 'IN'), ('anthony', 'NN'), ('shoot', 'NN'), ('me', 'PRP')])
('tags -> ', '     (yeah->RB) (yeah->RB) (because->IN) (because->IN) (because->IN) (anthony->NN) (shoot->NN) (me->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('shot', 'VBZ'), ('you', 'PRP')])
('tags -> ', '     (he->PRP) (shot->VBZ) (you->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('nose', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (nose->NN) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('right', 'NN'), ('in', 'IN'), ('the', 'DT'), ('head', 'NN')])
('tags -> ', '     (no->DT) (right->NN) (in->IN) (the->DT) (head->NN) ')
('tags initial-> ', [('oh', 'UH'), ('gosh', 'NN')])
('tags -> ', '     (oh->UH) (gosh->NN) ')
candidates to check:
1
('tags initial-> ', [('with', 'IN'), ('his', 'PRP$'), ('knife', 'NN'), ('and', 'CC'), ('i', 'NN')])
('tags -> ', '     (with->IN) (his->PRP$) (knife->NN) (and->CC) (i->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('i', 'NN'), ('got', 'VBD'), ('my', 'PRP$'), ('rope', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (and->CC) (and->CC) (and->CC) (i->NN) (got->VBD) (my->PRP$) (rope->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('know', 'VB'), ('what', 'WP'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (and->CC) (and->CC) (know->VB) (what->WP) (i->NN) (did->VBD) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('did', 'VBD'), ('this', 'DT'), ('www', 'NN'), ('noise', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (did->VBD) (this->DT) (www->NN) (noise->NN) ')
candidates to check:
1
('tags initial-> ', [('crack', 'NN')])
('tags -> ', '     (crack->NN) ')
('tags initial-> ', [('a', 'DT'), ('a', 'DT'), ('and', 'CC'), ('i', 'JJ'), ('brought', 'VBD'), ('them', 'PRP')])
('tags -> ', '     (a->DT) (a->DT) (and->CC) (i->JJ) (brought->VBD) (them->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('drag', 'VBP'), ('them', 'PRP'), ('out', 'RP'), ('around', 'IN'), ('the', 'DT'), ('tree', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (drag->VBP) (them->PRP) (out->RP) (around->IN) (the->DT) (tree->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'UH'), ('thank', 'NN'), ('goodness', 'NN')])
('tags -> ', '     (oh->UH) (thank->NN) (goodness->NN) ')
candidates to check:
2
('tags initial-> ', [('now', 'RB'), ('he', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('hurt', 'VB'), ('anyone', 'NN'), ('else', 'RB')])
('tags -> ', '     (now->RB) (he->PRP) (can->MD) (t->VB) (hurt->VB) (anyone->NN) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('naw', 'JJ'), ('naw', 'RB'), ('no', 'DT'), ('because', 'IN'), ('they', 'PRP'), ('just', 'RB'), ('over', 'IN'), ('they', 'PRP'), ('cut', 'VBD'), ('all', 'DT'), ('his', 'PRP$'), ('teeth', 'NNS'), ('off', 'RP')])
('tags -> ', '     (naw->JJ) (naw->RB) (no->DT) (because->IN) (they->PRP) (just->RB) (over->IN) (they->PRP) (cut->VBD) (all->DT) (his->PRP$) (teeth->NNS) (off->RP) ')
('tags initial-> ', [('oh', 'UH'), ('chi', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('awful', 'JJ')])
('tags -> ', '     (oh->UH) (chi->NN) (that->IN) (s->VBZ) (awful->JJ) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('take', 'VBP'), ('another', 'DT'), ('bite', 'NN')])
('tags -> ', '     (here->RB) (take->VBP) (another->DT) (bite->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('cut', 'VBD'), ('his', 'PRP$'), ('eyes', 'NNS'), ('off', 'IN'), ('and', 'CC'), ('then', 'RB'), ('his', 'PRP$'), ('lips', 'NNS'), ('off', 'RP')])
('tags -> ', '     (and->CC) (i->VB) (cut->VBD) (his->PRP$) (eyes->NNS) (off->IN) (and->CC) (then->RB) (his->PRP$) (lips->NNS) (off->RP) ')
('tags initial-> ', [('oh', 'UH'), ('don', 'NN'), ('t', 'NN'), ('do', 'VBP'), ('that', 'IN')])
('tags -> ', '     (oh->UH) (don->NN) (t->NN) (do->VBP) (that->IN) ')
('tags initial-> ', [('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('gross', 'JJ')])
('tags -> ', '     (no->DT) (that->WDT) (s->VBZ) (gross->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (that->DT) ')
('tags initial-> ', [('ich', 'JJ'), ('ick', 'NN')])
('tags -> ', '     (ich->JJ) (ick->NN) ')
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('ate', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (i->VB) (ate->VBP) (it->PRP) ')
('tags initial-> ', [('oh', 'UH'), ('chi', 'NN')])
('tags -> ', '     (oh->UH) (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('it', 'PRP'), ('but', 'CC'), ('the', 'DT'), ('wolf', 'NN'), ('ate', 'NN'), ('it', 'PRP')])
('tags -> ', '     (but->CC) (i->JJ) (didn->VBP) (t->JJ) (eat->NN) (it->PRP) (but->CC) (the->DT) (wolf->NN) (ate->NN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('wolf', 'NN'), ('will', 'MD'), ('eat', 'VB'), ('anything', 'NN'), ('willn', 'JJ'), ('t', 'NN'), ('he', 'PRP')])
('tags -> ', '     (that->DT) (wolf->NN) (will->MD) (eat->VB) (anything->NN) (willn->JJ) (t->NN) (he->PRP) ')
candidates to check:
3
('tags initial-> ', [('but', 'CC'), ('the', 'DT'), ('wolf', 'NN'), ('eat', 'NN'), ('paper', 'NN')])
('tags -> ', '     (but->CC) (the->DT) (wolf->NN) (eat->NN) (paper->NN) ')
('tags initial-> ', [('what', 'WP'), ('happens', 'VBZ'), ('in', 'IN'), ('peter', 'NN'), ('and', 'CC'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (what->WP) (happens->VBZ) (in->IN) (peter->NN) (and->CC) (the->DT) (wolf->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('what', 'WP'), ('happened', 'VBD'), ('to', 'TO'), ('peter', 'VB'), ('and', 'CC'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (what->WP) (happened->VBD) (to->TO) (peter->VB) (and->CC) (the->DT) (wolf->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WDT'), ('did', 'VBD'), ('the', 'DT'), ('wolf', 'NN'), ('eat', 'NN'), ('in', 'IN'), ('that', 'DT')])
('tags -> ', '     (what->WDT) (did->VBD) (the->DT) (wolf->NN) (eat->NN) (in->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('in', 'IN'), ('that', 'DT'), ('story', 'NN')])
('tags -> ', '     (in->IN) (that->DT) (story->NN) ')
('tags initial-> ', [('um', 'JJ'), ('peter', 'NN')])
('tags -> ', '     (um->JJ) (peter->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('he', 'PRP'), ('tried', 'VBD'), ('to', 'TO'), ('eat', 'VB'), ('peter', 'NN'), ('huh', 'NN')])
('tags -> ', '     (yeah->NN) (he->PRP) (tried->VBD) (to->TO) (eat->VB) (peter->NN) (huh->NN) ')
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('though', 'VB')])
('tags -> ', '     (did->VBD) (he->PRP) (though->VB) ')
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('ever', 'RB'), ('get', 'VB'), ('peter', 'NN')])
('tags -> ', '     (did->VBD) (he->PRP) (ever->RB) (get->VB) (peter->NN) ')
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('eat', 'VB'), ('him', 'PRP')])
('tags -> ', '     (did->VBD) (he->PRP) (eat->VB) (him->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP')])
('tags -> ', '     (did->VBD) (he->PRP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('he', 'PRP'), ('eat', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (he->PRP) (eat->VB) ')
candidates to check:
1
duck
duck duck 84
[('he', 'PRP'), ('ate', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('alive', 'JJ')]
['duck']
('tags initial-> ', [('he', 'PRP'), ('ate', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('alive', 'JJ')])
('tags -> ', '     (he->PRP) (ate->VBD) (the->DT) (duck->NN) (alive->JJ) ')
('tags initial-> ', [('alive', 'JJ')])
('tags -> ', '     (alive->JJ) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('please', 'NN')])
('tags -> ', '     (sit->VB) (down->RP) (please->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('please', 'NN')])
('tags -> ', '     (sit->VB) (down->RP) (please->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (www->NN) (noises->NNS) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('stand', 'VBP'), ('up', 'RP'), ('in', 'IN'), ('the', 'DT'), ('chair', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (stand->VBP) (up->RP) (in->IN) (the->DT) (chair->NN) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('fall', 'VB')])
('tags -> ', '     (you->PRP) (can->MD) (fall->VB) ')
candidates to check:
2
('tags initial-> ', [('see', 'VB'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('sit', 'VB'), ('the', 'DT'), ('proper', 'JJ'), ('way', 'NN')])
('tags -> ', '     (see->VB) (you->PRP) (have->VBP) (to->TO) (sit->VB) (the->DT) (proper->JJ) (way->NN) ')
candidates to check:
1
('tags initial-> ', [('put', 'VB'), ('your', 'PRP$'), ('feet', 'NNS'), ('down', 'RP'), ('please', 'NN')])
('tags -> ', '     (put->VB) (your->PRP$) (feet->NNS) (down->RP) (please->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'VBN'), ('otherwise', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('fall', 'VB'), ('and', 'CC'), ('hurt', 'VB'), ('yourself', 'PRP')])
('tags -> ', '     (be->VB) (cause->VBN) (otherwise->RB) (you->PRP) (can->MD) (fall->VB) (and->CC) (hurt->VB) (yourself->PRP) ')
('tags initial-> ', [('chi', 'NN'), ('sit', 'VBD'), ('down', 'RP')])
('tags -> ', '     (chi->NN) (sit->VBD) (down->RP) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noises', 'NNS'), ('and', 'CC'), ('laughing', 'VBG')])
('tags -> ', '     (www->NN) (noises->NNS) (and->CC) (laughing->VBG) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('playing', 'VBG'), ('we', 'PRP'), ('re', 'VBP'), ('eating', 'VBG')])
('tags -> ', '     (we->PRP) (re->VBP) (not->RB) (playing->VBG) (we->PRP) (re->VBP) (eating->VBG) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP'), ('please', 'NN'), ('and', 'CC'), ('finish', 'JJ'), ('eating', 'NN'), ('okay', 'NN')])
('tags -> ', '     (sit->VB) (down->RP) (please->NN) (and->CC) (finish->JJ) (eating->NN) (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noises', 'NNS'), ('and', 'CC'), ('giggling', 'VBG')])
('tags -> ', '     (www->NN) (noises->NNS) (and->CC) (giggling->VBG) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'JJ'), ('na', 'TO'), ('listen', 'VB')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->JJ) (na->TO) (listen->VB) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (www->NN) (noises->NNS) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('serious', 'JJ')])
('tags -> ', '     (i->JJ) (m->VBP) (serious->JJ) ')
candidates to check:
1
('tags initial-> ', [('www', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (www->NN) (noises->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('put', 'VBD'), ('my', 'PRP$'), ('xxx', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (i->NN) (put->VBD) (my->PRP$) (xxx->NN) (in->IN) (there->EX) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('i', 'NNS'), ('like', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->NNS) (like->IN) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('me', 'PRP')])
('tags -> ', '     (you->PRP) (like->IN) (me->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('like', 'IN'), ('you', 'PRP'), ('too', 'RB')])
('tags -> ', '     (well->RB) (i->RB) (like->IN) (you->PRP) (too->RB) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (you->PRP) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('num', 'NN'), ('num', 'NN'), ('num', 'NN')])
('tags -> ', '     (num->NN) (num->NN) (num->NN) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('seeing', 'VBG'), ('all', 'PDT'), ('the', 'DT'), ('instruments', 'NNS')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) (seeing->VBG) (all->PDT) (the->DT) (instruments->NNS) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('y', 'NN'), ('yep', 'NN')])
('tags -> ', '     (y->NN) (yep->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NNS'), ('but', 'CC'), ('did', 'VBD'), ('the', 'DT'), ('trombone', 'NN'), ('do', 'VBP'), ('this', 'DT')])
('tags -> ', '     (yeah->NNS) (but->CC) (did->VBD) (the->DT) (trombone->NN) (do->VBP) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('imit', 'NN'), ('trombone', 'NN')])
('tags -> ', '     (imit->NN) (trombone->NN) ')
('tags initial-> ', [('did', 'VBD'), ('it', 'PRP'), ('did', 'VBD'), ('it', 'PRP'), ('do', 'VB'), ('that', 'IN')])
('tags -> ', '     (did->VBD) (it->PRP) (did->VBD) (it->PRP) (do->VB) (that->IN) ')
('tags initial-> ', [('it', 'PRP'), ('sure', 'RB'), ('did', 'VBD')])
('tags -> ', '     (it->PRP) (sure->RB) (did->VBD) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('just', 'RB'), ('what', 'WP'), ('they', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (that->DT) (s->VBZ) (just->RB) (what->WP) (they->PRP) (did->VBD) ')
('tags initial-> ', [('they', 'PRP'), ('did', 'VBD'), ('it', 'PRP'), ('twice', 'RB'), ('right', 'VBD')])
('tags -> ', '     (they->PRP) (did->VBD) (it->PRP) (twice->RB) (right->VBD) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('do', 'VBP'), ('that', 'DT'), ('same', 'JJ'), ('thing', 'NN'), ('twice', 'RB'), ('right', 'RB')])
('tags -> ', '     (they->PRP) (do->VBP) (that->DT) (same->JJ) (thing->NN) (twice->RB) (right->RB) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('and', 'CC'), ('they', 'PRP'), ('did', 'VBD'), ('this', 'DT'), ('imit', 'NN'), ('trombone', 'NN')])
('tags -> ', '     (a->DT) (and->CC) (they->PRP) (did->VBD) (this->DT) (imit->NN) (trombone->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('that', 'IN')])
('tags -> ', '     (and->CC) (and->CC) (that->IN) ')
('tags initial-> ', [('sings', 'NNS')])
('tags -> ', '     (sings->NNS) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('did', 'VBD'), ('this', 'DT'), ('imit', 'NN'), ('brass', 'NN')])
('tags -> ', '     (and->CC) (they->PRP) (did->VBD) (this->DT) (imit->NN) (brass->NN) ')
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('did', 'VBD'), ('this', 'DT'), ('sings', 'NNS')])
('tags -> ', '     (and->CC) (they->PRP) (did->VBD) (this->DT) (sings->NNS) ')
('tags initial-> ', [('sings', 'NNS')])
('tags -> ', '     (sings->NNS) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('they', 'PRP'), ('did', 'VBD'), ('alright', 'RB'), ('www', 'NN'), ('giggles', 'NNS')])
('tags -> ', '     (yeah->NN) (that->WDT) (s->VBZ) (that->IN) (s->VBP) (what->WP) (they->PRP) (did->VBD) (alright->RB) (www->NN) (giggles->NNS) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('coughs', 'NNS')])
('tags -> ', '     (coughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('mama', 'NN')])
('tags -> ', '     (why->WRB) (mama->NN) ')
candidates to check:
2
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('that', 'WDT'), ('s', 'VBD'), ('the', 'DT'), ('way', 'NN'), ('the', 'DT'), ('music', 'NN'), ('went', 'VBD')])
('tags -> ', '     (be->VB) (cause->NN) (that->WDT) (s->VBD) (the->DT) (way->NN) (the->DT) (music->NN) (went->VBD) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('that', 'IN'), ('part', 'NN'), ('huh', 'NN')])
('tags -> ', '     (you->PRP) (like->VBP) (that->IN) (part->NN) (huh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('that', 'DT'), ('part', 'NN')])
('tags -> ', '     (i->NN) (like->IN) (that->DT) (part->NN) ')
candidates to check:
4
('tags initial-> ', [('trombones', 'NNS'), ('the', 'DT'), ('trombones', 'NNS'), ('do', 'VBP'), ('a', 'DT'), ('little', 'JJ'), ('part', 'NN')])
('tags -> ', '     (trombones->NNS) (the->DT) (trombones->NNS) (do->VBP) (a->DT) (little->JJ) (part->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('trumpets', 'NNS'), ('go', 'VBP'), ('imit', 'JJ'), ('trumpet', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (trumpets->NNS) (go->VBP) (imit->JJ) (trumpet->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('part', 'NN')])
('tags -> ', '     (that->DT) (part->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('high', 'JJ'), ('part', 'NN')])
('tags -> ', '     (the->DT) (high->JJ) (part->NN) ')
candidates to check:
3
('tags initial-> ', [('the', 'DT'), ('trombones', 'NNS'), ('go', 'VBP'), ('imit', 'RB'), ('trombone', 'NN')])
('tags -> ', '     (the->DT) (trombones->NNS) (go->VBP) (imit->RB) (trombone->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('trumpets', 'NNS'), ('go', 'VBP'), ('imit', 'JJ'), ('trumpet', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (trumpets->NNS) (go->VBP) (imit->JJ) (trumpet->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('they', 'PRP'), ('each', 'DT'), ('have', 'VBP'), ('their', 'PRP$'), ('own', 'JJ'), ('parts', 'NNS'), ('to', 'TO'), ('play', 'VB')])
('tags -> ', '     (be->VB) (cause->NN) (that->IN) (s->VBZ) (they->PRP) (each->DT) (have->VBP) (their->PRP$) (own->JJ) (parts->NNS) (to->TO) (play->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('s', 'VBP'), ('the', 'DT'), ('part', 'NN'), ('they', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (and->CC) (that->DT) (s->VBP) (the->DT) (part->NN) (they->PRP) (do->VBP) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('why', 'WRB')])
('tags -> ', '     (but->CC) (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('part', 'NN'), ('is', 'VBZ'), ('that', 'IN')])
('tags -> ', '     (what->WP) (part->NN) (is->VBZ) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('happening', 'VBG'), ('in', 'IN'), ('that', 'DT'), ('part', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (happening->VBG) (in->IN) (that->DT) (part->NN) ')
('tags initial-> ', [('what', 'WP'), ('happened', 'VBD')])
('tags -> ', '     (what->WP) (happened->VBD) ')
candidates to check:
2
('tags initial-> ', [('with', 'IN'), ('peter', 'NN'), ('and', 'CC'), ('the', 'DT'), ('wolf', 'NN'), ('at', 'IN'), ('that', 'DT'), ('point', 'NN')])
('tags -> ', '     (with->IN) (peter->NN) (and->CC) (the->DT) (wolf->NN) (at->IN) (that->DT) (point->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('in', 'IN'), ('the', 'DT')])
('tags -> ', '     (xxx->NN) (in->IN) (the->DT) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
('tags initial-> ', [('what', 'WP'), ('happened', 'VBD')])
('tags -> ', '     (what->WP) (happened->VBD) ')
candidates to check:
2
duck
duck duck 84
[('um', 'JJ'), ('um', 'IN'), ('the', 'DT'), ('wolf', 'NN'), ('ate', 'VBD'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('um', 'JJ'), ('um', 'IN'), ('the', 'DT'), ('wolf', 'NN'), ('ate', 'VBD'), ('the', 'DT'), ('duck', 'NN')])
('tags -> ', '     (um->JJ) (um->IN) (the->DT) (wolf->NN) (ate->VBD) (the->DT) (duck->NN) ')
candidates to check:
4
('tags initial-> ', [('were', 'VBD'), ('the', 'DT'), ('hunters', 'NNS'), ('shootin', 'VBP'), ('g', 'NN'), ('at', 'IN'), ('that', 'DT'), ('point', 'NN')])
('tags -> ', '     (were->VBD) (the->DT) (hunters->NNS) (shootin->VBP) (g->NN) (at->IN) (that->DT) (point->NN) ')
('tags initial-> ', [('were', 'VBD'), ('they', 'PRP'), ('shooting', 'VBG'), ('at', 'IN'), ('the', 'DT')])
('tags -> ', '     (were->VBD) (they->PRP) (shooting->VBG) (at->IN) (the->DT) ')
candidates to check:
1
('tags initial-> ', [('wolf', 'NN')])
('tags -> ', '     (wolf->NN) ')
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('went', 'VBD'), ('sings', 'NNS')])
('tags -> ', '     (and->CC) (they->PRP) (went->VBD) (sings->NNS) ')
candidates to check:
2
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('when', 'WRB'), ('the', 'DT'), ('hunters', 'NNS'), ('were', 'VBD'), ('trying', 'VBG'), ('to', 'TO'), ('shoot', 'VB'), ('at', 'IN'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (is->VBZ) (that->IN) (when->WRB) (the->DT) (hunters->NNS) (were->VBD) (trying->VBG) (to->TO) (shoot->VB) (at->IN) (the->DT) (wolf->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('remember', 'VBP'), ('that', 'IN'), ('part', 'NN')])
('tags -> ', '     (you->PRP) (remember->VBP) (that->IN) (part->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('they', 'PRP'), ('was', 'VBD'), ('doin', 'VBN'), ('g', 'NN'), ('this', 'DT')])
('tags -> ', '     (yeah->NN) (they->PRP) (was->VBD) (doin->VBN) (g->NN) (this->DT) ')
('tags initial-> ', [('y', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (y->NN) (yeah->NN) ')
('tags initial-> ', [('stay', 'NN'), ('in', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (stay->NN) (in->IN) (xxx->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('they', 'PRP'), ('was', 'VBD'), ('doin', 'VBN'), ('g', 'NN'), ('this', 'DT')])
('tags -> ', '     (yeah->NN) (they->PRP) (was->VBD) (doin->VBN) (g->NN) (this->DT) ')
('tags initial-> ', [('yeah', 'NN'), ('they', 'PRP'), ('were', 'VBD'), ('do', 'VBP'), ('this', 'DT'), ('www', 'NN')])
('tags -> ', '     (yeah->NN) (they->PRP) (were->VBD) (do->VBP) (this->DT) (www->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('they', 'PRP'), ('got', 'VBD')])
('tags -> ', '     (and->CC) (and->CC) (they->PRP) (got->VBD) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('they', 'PRP'), ('runned', 'VBD'), ('n', 'NNS'), ('and', 'CC'), ('they', 'PRP'), ('got', 'VBD'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (they->PRP) (runned->VBD) (n->NNS) (and->CC) (they->PRP) (got->VBD) (the->DT) (wolf->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('they', 'PRP'), ('and', 'CC'), ('they', 'PRP'), ('took', 'VBD'), ('him', 'PRP'), ('to', 'TO'), ('to', 'TO'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('right', 'NN')])
('tags -> ', '     (and->CC) (they->PRP) (and->CC) (they->PRP) (took->VBD) (him->PRP) (to->TO) (to->TO) (to->TO) (the->DT) (zoo->NN) (right->NN) ')
('tags initial-> ', [('did', 'VBD'), ('they', 'PRP')])
('tags -> ', '     (did->VBD) (they->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('put', 'VBD'), ('him', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('zoo', 'NN')])
('tags -> ', '     (they->PRP) (put->VBD) (him->PRP) (in->IN) (the->DT) (zoo->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('what', 'WP'), ('happened', 'VBD')])
('tags -> ', '     (and->CC) (then->RB) (what->WP) (happened->VBD) ')
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('he', 'PRP'), ('stayed', 'VBD'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (and->CC) (then->RB) (he->PRP) (stayed->VBD) (in->IN) (there->EX) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('who', 'WP'), ('did', 'VBD'), ('peter', 'NN'), ('who', 'WP'), ('did', 'VBD'), ('peter', 'RB'), ('live', 'JJ'), ('with', 'IN')])
('tags -> ', '     (who->WP) (did->VBD) (peter->NN) (who->WP) (did->VBD) (peter->RB) (live->JJ) (with->IN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('he', 'PRP'), ('live', 'VBZ'), ('in', 'IN'), ('a', 'DT'), ('cage', 'NN')])
('tags -> ', '     (he->PRP) (he->PRP) (live->VBZ) (in->IN) (a->DT) (cage->NN) ')
('tags initial-> ', [('peter', 'NN')])
('tags -> ', '     (peter->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('boy', 'NN')])
('tags -> ', '     (the->DT) (boy->NN) ')
candidates to check:
3
('tags initial-> ', [('n', 'JJ'), ('n', 'RB'), ('no', 'DT'), ('because', 'IN'), ('when', 'WRB'), ('the', 'DT'), ('wolf', 'NN'), ('come', 'VBD'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('forest', 'JJS'), ('a', 'DT'), ('and', 'CC'), ('you', 'PRP'), ('shoot', 'VBP'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (n->JJ) (n->RB) (no->DT) (because->IN) (when->WRB) (the->DT) (wolf->NN) (come->VBD) (out->IN) (of->IN) (the->DT) (forest->JJS) (a->DT) (and->CC) (you->PRP) (shoot->VBP) (the->DT) (wolf->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('you', 'PRP'), ('shoot', 'VBP'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (you->PRP) (shoot->VBP) (the->DT) (wolf->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('take', 'VBP'), ('a', 'DT'), ('you', 'PRP'), ('put', 'VBP'), ('the', 'DT'), ('wolf', 'NN'), ('in', 'IN'), ('a', 'DT'), ('zoo', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (take->VBP) (a->DT) (you->PRP) (put->VBP) (the->DT) (wolf->NN) (in->IN) (a->DT) (zoo->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('but', 'CC'), ('where', 'WRB'), ('does', 'VBZ'), ('peter', 'VB'), ('live', 'VB')])
('tags -> ', '     (but->CC) (where->WRB) (does->VBZ) (peter->VB) (live->VB) ')
candidates to check:
3
('tags initial-> ', [('um', 'JJ'), ('pe', 'NN'), ('peter', 'NN'), ('l', 'NN'), ('peter', 'NN'), ('p', 'NN'), ('peter', 'NN'), ('he', 'PRP'), ('peter', 'VBZ'), ('peter', 'RB'), ('live', 'JJ'), ('live', 'JJ'), ('um', 'NN'), ('um', 'JJ'), ('um', 'JJ'), ('i', 'NN'), ('i', 'VBP'), ('in', 'IN'), ('p', 'NN'), ('peter', 'NN'), ('live', 'VBP'), ('i', 'NN'), ('i', 'NN'), ('in', 'IN'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (um->JJ) (pe->NN) (peter->NN) (l->NN) (peter->NN) (p->NN) (peter->NN) (he->PRP) (peter->VBZ) (peter->RB) (live->JJ) (live->JJ) (um->NN) (um->JJ) (um->JJ) (i->NN) (i->VBP) (in->IN) (p->NN) (peter->NN) (live->VBP) (i->NN) (i->NN) (in->IN) (the->DT) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'NN'), ('said', 'VBD'), ('said', 'VBD'), ('that', 'IN'), ('but', 'CC'), ('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('mistake', 'NN')])
('tags -> ', '     (he->PRP) (was->VBD) (he->PRP) (didn->VBZ) (t->NN) (said->VBD) (said->VBD) (that->IN) (but->CC) (that->DT) (was->VBD) (a->DT) (mistake->NN) ')
('tags initial-> ', [('pete', 'JJ'), ('pete', 'NN'), ('peter', 'NN')])
('tags -> ', '     (pete->JJ) (pete->NN) (peter->NN) ')
('tags initial-> ', [('peter', 'NN')])
('tags -> ', '     (peter->NN) ')
candidates to check:
2
('tags initial-> ', [('peter', 'NN'), ('live', 'VBP'), ('peter', 'NN'), ('l', 'NN'), ('ive', 'NN'), ('in', 'IN'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (peter->NN) (live->VBP) (peter->NN) (l->NN) (ive->NN) (in->IN) (a->DT) (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (so->RB) ')
('tags initial-> ', [('he', 'PRP'), ('does', 'VBZ')])
('tags -> ', '     (he->PRP) (does->VBZ) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('live', 'VB'), ('with', 'IN'), ('his', 'PRP$'), ('grandfather', 'NN')])
('tags -> ', '     (did->VBD) (he->PRP) (live->VB) (with->IN) (his->PRP$) (grandfather->NN) ')
candidates to check:
3
('tags initial-> ', [('where', 'WRB'), ('s', 'NN'), ('sing', 'NN'), ('song', 'NN'), ('the', 'DT'), ('grandfather', 'NN'), ('grandfather', 'NN')])
('tags -> ', '     (where->WRB) (s->NN) (sing->NN) (song->NN) (the->DT) (grandfather->NN) (grandfather->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('house', 'NN')])
('tags -> ', '     (he->PRP) (was->VBD) (in->IN) (the->DT) (house->NN) ')
candidates to check:
1
('tags initial-> ', [('remember', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('told', 'VBD'), ('peter', 'NN'), ('to', 'TO'), ('watch', 'VB'), ('watch', 'NN'), ('out', 'IN'), ('for', 'IN'), ('the', 'DT'), ('wolf', 'NN')])
('tags -> ', '     (remember->NN) (and->CC) (he->PRP) (told->VBD) (peter->NN) (to->TO) (watch->VB) (watch->NN) (out->IN) (for->IN) (the->DT) (wolf->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('the', 'DT'), ('wolf', 'NN'), ('could', 'MD'), ('get', 'VB'), ('him', 'PRP')])
('tags -> ', '     (because->IN) (the->DT) (wolf->NN) (could->MD) (get->VB) (him->PRP) ')
('tags initial-> ', [('and', 'CC'), ('eat', 'NN'), ('him', 'PRP'), ('up', 'RP')])
('tags -> ', '     (and->CC) (eat->NN) (him->PRP) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('h', 'NN'), ('and', 'CC'), ('and', 'CC'), ('eat', 'VBD'), ('him', 'PRP'), ('up', 'RP')])
('tags -> ', '     (and->CC) (and->CC) (h->NN) (and->CC) (and->CC) (eat->VBD) (him->PRP) (up->RP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('what', 'WP'), ('does', 'VBZ'), ('it', 'PRP'), ('did', 'VBD'), ('his', 'PRP$'), ('grandfather', 'NN'), ('say', 'VBP'), ('to', 'TO'), ('him', 'PRP')])
('tags -> ', '     (and->CC) (and->CC) (what->WP) (does->VBZ) (it->PRP) (did->VBD) (his->PRP$) (grandfather->NN) (say->VBP) (to->TO) (him->PRP) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('told', 'VBD'), ('him', 'PRP'), ('to', 'TO'), ('stay', 'VB'), ('away', 'RB'), ('from', 'IN'), ('the', 'DT'), ('woods', 'NNS')])
('tags -> ', '     (he->PRP) (told->VBD) (him->PRP) (to->TO) (stay->VB) (away->RB) (from->IN) (the->DT) (woods->NNS) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'VBN'), ('the', 'DT'), ('wolf', 'NN'), ('could', 'MD'), ('come', 'VB'), ('close', 'RB'), ('and', 'CC'), ('he', 'PRP'), ('could', 'MD'), ('bite', 'VB'), ('him', 'PRP')])
('tags -> ', '     (be->VB) (cause->VBN) (the->DT) (wolf->NN) (could->MD) (come->VB) (close->RB) (and->CC) (he->PRP) (could->MD) (bite->VB) (him->PRP) ')
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('and', 'CC'), ('he', 'PRP'), ('told', 'VBD'), ('him', 'PRP')])
('tags -> ', '     (and->CC) (he->PRP) (and->CC) (he->PRP) (told->VBD) (him->PRP) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clears', 'NNS'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clears->NNS) (throat->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('told', 'VBD'), ('him', 'PRP'), ('to', 'TO'), ('stay', 'VB'), ('inside', 'IN'), ('the', 'DT'), ('gates', 'NNS'), ('didn', 'VBP'), ('t', 'IN'), ('he', 'PRP')])
('tags -> ', '     (he->PRP) (told->VBD) (him->PRP) (to->TO) (stay->VB) (inside->IN) (the->DT) (gates->NNS) (didn->VBP) (t->IN) (he->PRP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('not', 'RB'), ('to', 'TO'), ('leave', 'VB'), ('the', 'DT'), ('yard', 'NN')])
('tags -> ', '     (and->CC) (not->RB) (to->TO) (leave->VB) (the->DT) (yard->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('go', 'VB'), ('down', 'RP'), ('by', 'IN'), ('the', 'DT'), ('meadow', 'NN')])
('tags -> ', '     (and->CC) (go->VB) (down->RP) (by->IN) (the->DT) (meadow->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('then', 'RB'), ('the', 'DT'), ('wolf', 'NN'), ('could', 'MD'), ('get', 'VB'), ('him', 'PRP')])
('tags -> ', '     (be->VB) (cause->NN) (then->RB) (the->DT) (wolf->NN) (could->MD) (get->VB) (him->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('remember', 'VB'), ('the', 'DT'), ('man', 'NN'), ('who', 'WP'), ('acted', 'VBD'), ('out', 'RP'), ('all', 'PDT'), ('the', 'DT'), ('parts', 'NNS')])
('tags -> ', '     (remember->VB) (the->DT) (man->NN) (who->WP) (acted->VBD) (out->RP) (all->PDT) (the->DT) (parts->NNS) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('remember', 'VB'), ('the', 'DT'), ('mime', 'NN')])
('tags -> ', '     (remember->VB) (the->DT) (mime->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('did', 'VBD'), ('all', 'PDT'), ('the', 'DT'), ('parts', 'NNS')])
('tags -> ', '     (and->CC) (he->PRP) (did->VBD) (all->PDT) (the->DT) (parts->NNS) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('you', 'PRP'), ('did', 'VBD'), ('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('him', 'PRP')])
('tags -> ', '     (you->PRP) (did->VBD) (did->VBD) (you->PRP) (like->IN) (him->PRP) ')
candidates to check:
2
shake
shake shake 148
[('yeah', 'NN'), ('but', 'CC'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN'), ('when', 'WRB'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('up', 'RB'), ('the', 'DT'), ('hill', 'NN')]
['shake']
('tags initial-> ', [('yeah', 'NN'), ('but', 'CC'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN'), ('when', 'WRB'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('up', 'RB'), ('the', 'DT'), ('hill', 'NN')])
('tags -> ', '     (yeah->NN) (but->CC) (he->PRP) (didn->VBZ) (t->JJ) (shake->VB) (my->PRP$) (hand->NN) (when->WRB) (when->WRB) (i->NN) (was->VBD) (when->WRB) (i->NN) (was->VBD) (up->RB) (the->DT) (hill->NN) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('you', 'PRP'), ('were', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('audience', 'NN')])
('tags -> ', '     (when->WRB) (you->PRP) (were->VBD) (in->IN) (the->DT) (audience->NN) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('came', 'VBD'), ('down', 'RB'), ('the', 'DT'), ('audience', 'NN'), ('right', 'NN')])
('tags -> ', '     (when->WRB) (he->PRP) (came->VBD) (down->RB) (the->DT) (audience->NN) (right->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
shake
shake shake 148
[('because', 'IN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN')]
['shake']
('tags initial-> ', [('because', 'IN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (because->IN) (he->PRP) (didn->VBZ) (t->JJ) (shake->VB) (my->PRP$) (hand->NN) ')
candidates to check:
2
shake
shake shake 148
[('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'CC'), ('come', 'VB'), ('up', 'RP'), ('the', 'DT'), ('hill', 'NN'), ('and', 'CC'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN')]
['shake']
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'CC'), ('come', 'VB'), ('up', 'RP'), ('the', 'DT'), ('hill', 'NN'), ('and', 'CC'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (didn->VBZ) (t->CC) (come->VB) (up->RP) (the->DT) (hill->NN) (and->CC) (shake->VB) (my->PRP$) (hand->NN) ')
('tags initial-> ', [('mhm', 'NN'), ('that', 'IN'), ('made', 'VBD'), ('you', 'PRP'), ('sad', 'JJ'), ('huh', 'NN')])
('tags -> ', '     (mhm->NN) (that->IN) (made->VBD) (you->PRP) (sad->JJ) (huh->NN) ')
('tags initial-> ', [('but', 'CC'), ('then', 'RB'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (but->CC) (then->RB) (what->WP) (did->VBD) (you->PRP) (do->VB) ')
candidates to check:
1
shake
shake shake 148
[('then', 'RB'), ('i', 'VB'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')]
['shake']
('tags initial-> ', [('then', 'RB'), ('i', 'VB'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (then->RB) (i->VB) (shake->VB) (his->PRP$) (hand->NN) ')
('tags initial-> ', [('when', 'WRB')])
('tags -> ', '     (when->WRB) ')
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('was', 'VBD'), ('talking', 'VBG')])
('tags -> ', '     (when->WRB) (he->PRP) (was->VBD) (talking->VBG) ')
('tags initial-> ', [('yeah', 'NN'), ('afterwards', 'NNS'), ('huh', 'NN')])
('tags -> ', '     (yeah->NN) (afterwards->NNS) (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'RB'), ('why', 'WRB'), ('he', 'PRP'), ('s', 'VBD'), ('why', 'WRB'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'RB'), ('do', 'VBP'), ('this', 'DT'), ('www', 'NN'), ('noise', 'NN')])
('tags -> ', '     (yeah->RB) (why->WRB) (he->PRP) (s->VBD) (why->WRB) (he->PRP) (didn->VBZ) (t->RB) (do->VBP) (this->DT) (www->NN) (noise->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('why', 'WRB'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('do', 'VBP'), ('that', 'DT'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (why->WRB) (he->PRP) (didn->VBZ) (t->JJ) (do->VBP) (that->DT) (to->TO) (me->PRP) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('think', 'VB'), ('he', 'PRP'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'RB'), ('do', 'VBP'), ('that', 'DT'), ('to', 'TO'), ('you', 'PRP'), ('laughs', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (think->VB) (he->PRP) (was->VBD) (gon->VBG) (na->RB) (do->VBP) (that->DT) (to->TO) (you->PRP) (laughs->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('nice', 'JJ')])
('tags -> ', '     (he->PRP) (was->VBD) (nice->JJ) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('nice', 'JJ'), ('man', 'NN'), ('right', 'NN')])
('tags -> ', '     (he->PRP) (was->VBD) (a->DT) (nice->JJ) (man->NN) (right->NN) ')
candidates to check:
1
shake
shake shake 148
[('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('went', 'VBD'), ('up', 'RB'), ('to', 'TO'), ('him', 'PRP'), ('and', 'CC'), ('you', 'PRP'), ('asked', 'VBD'), ('him', 'PRP'), ('if', 'IN'), ('he', 'PRP'), ('would', 'MD'), ('shake', 'VB'), ('your', 'PRP$'), ('hand', 'NN')]
['shake']
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('went', 'VBD'), ('up', 'RB'), ('to', 'TO'), ('him', 'PRP'), ('and', 'CC'), ('you', 'PRP'), ('asked', 'VBD'), ('him', 'PRP'), ('if', 'IN'), ('he', 'PRP'), ('would', 'MD'), ('shake', 'VB'), ('your', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (you->PRP) (went->VBD) (up->RB) (to->TO) (him->PRP) (and->CC) (you->PRP) (asked->VBD) (him->PRP) (if->IN) (he->PRP) (would->MD) (shake->VB) (your->PRP$) (hand->NN) ')
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (and->CC) (he->PRP) (did->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('clears', 'VBZ'), ('throat', 'IN'), ('there', 'EX'), ('you', 'PRP'), ('go', 'VBP')])
('tags -> ', '     (www->NN) (clears->VBZ) (throat->IN) (there->EX) (you->PRP) (go->VBP) ')
candidates to check:
1
descended from food: [['N'], 'food', 32, 36]
('tags initial-> ', [('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('get', 'VBP'), ('the', 'DT'), ('food', 'NN'), ('in', 'IN'), ('there', 'EX'), ('first', 'JJ')])
('tags -> ', '     (why->WRB) (don->NN) (t->NN) (you->PRP) (get->VBP) (the->DT) (food->NN) (in->IN) (there->EX) (first->JJ) ')
candidates to check:
2
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('remember', 'VB'), ('everybody', 'NN'), ('s', 'JJ'), ('name', 'NN'), ('that', 'IN'), ('you', 'PRP'), ('saw', 'VBD'), ('this', 'DT'), ('weekend', 'NN')])
('tags -> ', '     (can->MD) (you->PRP) (remember->VB) (everybody->NN) (s->JJ) (name->NN) (that->IN) (you->PRP) (saw->VBD) (this->DT) (weekend->NN) ')
candidates to check:
3
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('all', 'DT'), ('your', 'PRP$'), ('cousins', 'NNS'), ('s', 'VBP'), ('name', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) (all->DT) (your->PRP$) (cousins->NNS) (s->VBP) (name->NN) ')
candidates to check:
1
('tags initial-> ', [('names', 'NNS')])
('tags -> ', '     (names->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('its', 'PRP$'), ('xxx', 'NN'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('people', 'NNS'), ('huh', 'VBP')])
('tags -> ', '     (its->PRP$) (xxx->NN) (a->DT) (lot->NN) (of->IN) (people->NNS) (huh->VBP) ')
('tags initial-> ', [('that', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('get', 'NN'), ('to', 'TO'), ('see', 'VB'), ('that', 'DT'), ('often', 'RB')])
('tags -> ', '     (that->IN) (you->PRP) (don->VBP) (t->JJ) (get->NN) (to->TO) (see->VB) (that->DT) (often->RB) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('saw', 'VBD'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('people', 'NNS'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'VB'), ('usually', 'RB'), ('get', 'VB'), ('to', 'TO'), ('see', 'VB')])
('tags -> ', '     (you->PRP) (saw->VBD) (a->DT) (lot->NN) (of->IN) (people->NNS) (you->PRP) (don->VBP) (t->VB) (usually->RB) (get->VB) (to->TO) (see->VB) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
3
('tags initial-> ', [('www', 'NN'), ('clears', 'NNS'), ('throat', 'NN'), ('who', 'WP'), ('were', 'VBD'), ('you', 'PRP'), ('playin', 'VBP'), ('g', 'JJ'), ('with', 'IN'), ('outside', 'JJ'), ('in', 'IN'), ('the', 'DT'), ('yard', 'NN')])
('tags -> ', '     (www->NN) (clears->NNS) (throat->NN) (who->WP) (were->VBD) (you->PRP) (playin->VBP) (g->JJ) (with->IN) (outside->JJ) (in->IN) (the->DT) (yard->NN) ')
candidates to check:
1
('tags initial-> ', [('um', 'JJ'), ('um', 'JJ'), ('one', 'CD'), ('of', 'IN'), ('my', 'PRP$'), ('friends', 'NNS')])
('tags -> ', '     (um->JJ) (um->JJ) (one->CD) (of->IN) (my->PRP$) (friends->NNS) ')
candidates to check:
1
('tags initial-> ', [('or', 'CC'), ('your', 'PRP$'), ('cousins', 'NNS')])
('tags -> ', '     (or->CC) (your->PRP$) (cousins->NNS) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clears', 'NNS'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clears->NNS) (throat->NN) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('know', 'VBP'), ('know', 'VBP'), ('them', 'PRP'), ('yet', 'RB')])
('tags -> ', '     (i->NN) (i->VBP) (don->VBP) (t->NN) (know->VBP) (know->VBP) (know->VBP) (them->PRP) (yet->RB) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('mean', 'VB'), ('you', 'PRP'), ('don', 'VB'), ('t', 'NNS'), ('know', 'VB'), ('them', 'PRP')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (mean->VB) (you->PRP) (don->VB) (t->NNS) (know->VB) (them->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('them', 'PRP')])
('tags -> ', '     (you->PRP) (know->VBP) (them->PRP) ')
candidates to check:
1
('tags initial-> ', [('there', 'RB'), ('s', 'JJ'), ('ste', 'NN'), ('ven', 'NN')])
('tags -> ', '     (there->RB) (s->JJ) (ste->NN) (ven->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('ste', 'NN'), ('ven', 'NNS'), ('and', 'CC'), ('who', 'WP'), ('else', 'RB')])
('tags -> ', '     (ste->NN) (ven->NNS) (and->CC) (who->WP) (else->RB) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('put', 'VB'), ('your', 'PRP$'), ('legs', 'NNS'), ('down', 'RP'), ('please', 'NN')])
('tags -> ', '     (put->VB) (your->PRP$) (legs->NNS) (down->RP) (please->NN) ')
('tags initial-> ', [('sighs', 'NNS')])
('tags -> ', '     (sighs->NNS) ')
('tags initial-> ', [('who', 'WP'), ('else', 'RB')])
('tags -> ', '     (who->WP) (else->RB) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('david', 'NN')])
('tags -> ', '     (david->NN) ')
('tags initial-> ', [('david', 'NN')])
('tags -> ', '     (david->NN) ')
('tags initial-> ', [('and', 'CC'), ('beth', 'VB')])
('tags -> ', '     (and->CC) (beth->VB) ')
('tags initial-> ', [('and', 'CC'), ('bethany', 'NN')])
('tags -> ', '     (and->CC) (bethany->NN) ')
('tags initial-> ', [('and', 'CC')])
('tags -> ', '     (and->CC) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('danny', 'JJ'), ('dean', 'NN')])
('tags -> ', '     (danny->JJ) (dean->NN) ')
('tags initial-> ', [('and', 'CC'), ('danny', 'VB')])
('tags -> ', '     (and->CC) (danny->VB) ')
('tags initial-> ', [('and', 'CC'), ('little', 'JJ')])
('tags -> ', '     (and->CC) (little->JJ) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('little', 'JJ'), ('paul', 'NN')])
('tags -> ', '     (little->JJ) (paul->NN) ')
('tags initial-> ', [('and', 'CC'), ('little', 'JJ'), ('paul', 'NN')])
('tags -> ', '     (and->CC) (little->JJ) (paul->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('was', 'VBD'), ('the', 'DT'), ('baby', 'NN'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (and->CC) (what->WP) (was->VBD) (the->DT) (baby->NN) (s->NN) (name->NN) ')
('tags initial-> ', [('um', 'JJ'), ('jason', 'NN')])
('tags -> ', '     (um->JJ) (jason->NN) ')
('tags initial-> ', [('nope', 'NN'), ('mark', 'NN')])
('tags -> ', '     (nope->NN) (mark->NN) ')
('tags initial-> ', [('mark', 'NN')])
('tags -> ', '     (mark->NN) ')
('tags initial-> ', [('and', 'CC'), ('little', 'JJ'), ('jennifer', 'NN'), ('and', 'CC'), ('little', 'JJ')])
('tags -> ', '     (and->CC) (little->JJ) (jennifer->NN) (and->CC) (little->JJ) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('mark', 'NN')])
('tags -> ', '     (mark->NN) ')
candidates to check:
2
('tags initial-> ', [('her', 'PRP$'), ('her', 'PRP$'), ('little', 'JJ'), ('brother', 'NN')])
('tags -> ', '     (her->PRP$) (her->PRP$) (little->JJ) (brother->NN) ')
('tags initial-> ', [('mark', 'NN'), ('what', 'WP')])
('tags -> ', '     (mark->NN) (what->WP) ')
('tags initial-> ', [('jennifer', 'NN'), ('and', 'CC'), ('little', 'JJ'), ('kenny', 'NN')])
('tags -> ', '     (jennifer->NN) (and->CC) (little->JJ) (kenny->NN) ')
('tags initial-> ', [('and', 'CC'), ('kenny', 'VB')])
('tags -> ', '     (and->CC) (kenny->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('why', 'WRB'), ('did', 'VBD'), ('kenny', 'VB'), ('do', 'VB'), ('the', 'DT'), ('www', 'NN'), ('loud', 'JJ'), ('noise', 'NN')])
('tags -> ', '     (but->CC) (why->WRB) (did->VBD) (kenny->VB) (do->VB) (the->DT) (www->NN) (loud->JJ) (noise->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'RB'), ('because', 'IN'), ('he', 'PRP'), ('was', 'VBD'), ('in', 'IN'), ('a', 'DT'), ('bad', 'JJ'), ('mood', 'NN')])
('tags -> ', '     (oh->RB) (because->IN) (he->PRP) (was->VBD) (in->IN) (a->DT) (bad->JJ) (mood->NN) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('tired', 'VBN')])
('tags -> ', '     (he->PRP) (was->VBD) (tired->VBN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('why', 'WRB'), ('was', 'VBD'), ('wasn', 'NN'), ('t', 'NN'), ('he', 'PRP'), ('in', 'IN'), ('a', 'DT'), ('bad', 'JJ'), ('mood', 'NN')])
('tags -> ', '     (well->RB) (why->WRB) (was->VBD) (wasn->NN) (t->NN) (he->PRP) (in->IN) (a->DT) (bad->JJ) (mood->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('cranky', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (was->VBD) (cranky->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('cranky', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (was->VBD) (cranky->NN) ')
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('tired', 'VBN')])
('tags -> ', '     (he->PRP) (was->VBD) (tired->VBN) ')
('tags initial-> ', [('yeah', 'NNS'), ('but', 'CC'), ('why', 'WRB'), ('does', 'VBZ'), ('he', 'PRP'), ('keep', 'VB'), ('doing', 'VBG'), ('this', 'DT')])
('tags -> ', '     (yeah->NNS) (but->CC) (why->WRB) (does->VBZ) (he->PRP) (keep->VB) (doing->VBG) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('www', 'JJ'), ('series', 'NN'), ('of', 'IN'), ('yelps', 'NNS')])
('tags -> ', '     (www->JJ) (series->NN) (of->IN) (yelps->NNS) ')
('tags initial-> ', [('xxx', 'JJ'), ('why', 'WRB'), ('did', 'VBD'), ('he', 'PRP'), ('keep', 'VB'), ('doing', 'VBG'), ('that', 'IN')])
('tags -> ', '     (xxx->JJ) (why->WRB) (did->VBD) (he->PRP) (keep->VB) (doing->VBG) (that->IN) ')
candidates to check:
2
('tags initial-> ', [('mostly', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('wanted', 'VBD'), ('more', 'JJR'), ('brownies', 'NNS')])
('tags -> ', '     (mostly->RB) (be->VB) (cause->NN) (he->PRP) (wanted->VBD) (more->JJR) (brownies->NNS) ')
candidates to check:
1
('tags initial-> ', [('that', 'IN'), ('his', 'PRP$'), ('sister', 'NN'), ('had', 'VBD')])
('tags -> ', '     (that->IN) (his->PRP$) (sister->NN) (had->VBD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('clears', 'NNS'), ('throat', 'NN')])
('tags -> ', '     (0->CD) (clears->NNS) (throat->NN) ')
candidates to check:
1
('tags initial-> ', [('does', 'VBZ'), ('that', 'IN')])
('tags -> ', '     (does->VBZ) (that->IN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
4
descended from food: [['N'], 'food', 30, 34]
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('likes', 'VBZ'), ('junk', 'NN'), ('food', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (likes->VBZ) (junk->NN) (food->NN) ')
candidates to check:
2
descended from food: [['N'], 'cupcakes', 28, 36]
descended from food: [['N'], 'cookie', 58, 64]
cookie
cookie cookie 507
[('because', 'IN'), ('kenny', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('cupcakes', 'NNS'), ('and', 'CC'), ('he', 'PRP'), ('dropped', 'VBD'), ('a', 'DT'), ('cookie', 'NN')]
['cookie']
('tags initial-> ', [('because', 'IN'), ('kenny', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('cupcakes', 'NNS'), ('and', 'CC'), ('he', 'PRP'), ('dropped', 'VBD'), ('a', 'DT'), ('cookie', 'NN')])
('tags -> ', '     (because->IN) (kenny->NN) (saw->VBD) (the->DT) (cupcakes->NNS) (and->CC) (he->PRP) (dropped->VBD) (a->DT) (cookie->NN) ')
('tags initial-> ', [('he', 'PRP'), ('yeah', 'MD'), ('ha', 'VB'), ('uhhuh', 'JJ')])
('tags -> ', '     (he->PRP) (yeah->MD) (ha->VB) (uhhuh->JJ) ')
candidates to check:
2
descended from food: [['N'], 'cupcake', 21, 28]
descended from food: [['N'], 'cookie', 46, 52]
cookie
cookie cookie 507
[('he', 'PRP'), ('saw', 'VBD'), ('the', 'DT'), ('cupcake', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('dropped', 'VBD'), ('a', 'DT'), ('cookie', 'NN')]
['cookie']
('tags initial-> ', [('he', 'PRP'), ('saw', 'VBD'), ('the', 'DT'), ('cupcake', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('dropped', 'VBD'), ('a', 'DT'), ('cookie', 'NN')])
('tags -> ', '     (he->PRP) (saw->VBD) (the->DT) (cupcake->NN) (and->CC) (he->PRP) (dropped->VBD) (a->DT) (cookie->NN) ')
candidates to check:
1
descended from food: [['N'], 'cookie', 24, 30]
cookie
cookie cookie 507
[('why', 'WRB'), ('d', 'NN'), ('he', 'PRP'), ('drop', 'VBZ'), ('the', 'DT'), ('cookie', 'NN')]
['cookie']
('tags initial-> ', [('why', 'WRB'), ('d', 'NN'), ('he', 'PRP'), ('drop', 'VBZ'), ('the', 'DT'), ('cookie', 'NN')])
('tags -> ', '     (why->WRB) (d->NN) (he->PRP) (drop->VBZ) (the->DT) (cookie->NN) ')
candidates to check:
1
descended from food: [['N'], 'cupcakes', 36, 44]
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('when', 'WRB'), ('he', 'PRP'), ('saw', 'VBD'), ('the', 'DT'), ('cupcakes', 'NNS')])
('tags -> ', '     (when->WRB) (he->PRP) (when->WRB) (he->PRP) (saw->VBD) (the->DT) (cupcakes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'cupcake', 48, 55]
('tags initial-> ', [('oh', 'RB'), ('because', 'IN'), ('he', 'PRP'), ('decided', 'VBD'), ('he', 'PRP'), ('wanted', 'VBD'), ('to', 'TO'), ('have', 'VB'), ('a', 'DT'), ('cupcake', 'NN'), ('instead', 'RB')])
('tags -> ', '     (oh->RB) (because->IN) (he->PRP) (decided->VBD) (he->PRP) (wanted->VBD) (to->TO) (have->VB) (a->DT) (cupcake->NN) (instead->RB) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('play', 'VB'), ('indians', 'NNS')])
('tags -> ', '     (did->VBD) (you->PRP) (play->VB) (indians->NNS) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('play', 'NN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->JJ) (play->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('everybody', 'NN'), ('else', 'RB'), ('did', 'VBD')])
('tags -> ', '     (but->CC) (everybody->NN) (else->RB) (did->VBD) ')
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('didn', 'NN'), ('t', 'NN'), ('play', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (didn->NN) (t->NN) (play->NN) ')
('tags initial-> ', [('how', 'WRB'), ('come', 'JJ')])
('tags -> ', '     (how->WRB) (come->JJ) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('they', 'PRP'), ('xxx', 'VBP')])
('tags -> ', '     (be->VB) (cause->NN) (they->PRP) (xxx->VBP) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('what', 'WP'), ('did', 'VBD'), ('aunt', 'NN'), ('julie', 'NN'), ('make', 'VBP'), ('special', 'JJ'), ('for', 'IN'), ('you', 'PRP'), ('guys', 'VBP'), ('xxx', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (what->WP) (did->VBD) (aunt->NN) (julie->NN) (make->VBP) (special->JJ) (for->IN) (you->PRP) (guys->VBP) (xxx->VB) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('hit', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (a->DT) (hit->JJ) (thing->NN) ')
candidates to check:
1
('tags initial-> ', [('pinata', 'NN')])
('tags -> ', '     (pinata->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (you->PRP) (do->VB) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('what', 'WDT'), ('was', 'VBD'), ('the', 'DT'), ('pinata', 'NN')])
('tags -> ', '     (what->WP) (what->WDT) (was->VBD) (the->DT) (pinata->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('to', 'TO'), ('it', 'PRP')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (to->TO) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('smacked', 'VBD'), ('the', 'DT'), ('birdie', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (smacked->VBD) (the->DT) (birdie->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'RB'), ('real', 'JJ'), ('hard', 'JJ'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (yeah->RB) (real->JJ) (hard->JJ) (like->IN) (this->DT) ')
candidates to check:
1
('tags initial-> ', [('smack', 'NN')])
('tags -> ', '     (smack->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('goed', 'VBD'), ('n', 'JJ'), ('way', 'NN'), ('up', 'RB'), ('to', 'TO'), ('to', 'TO'), ('the', 'DT'), ('sky', 'NN')])
('tags -> ', '     (and->CC) (it->PRP) (goed->VBD) (n->JJ) (way->NN) (up->RB) (to->TO) (to->TO) (the->DT) (sky->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
descended from food: [['N'], 'candy', 55, 60]
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('the', 'DT'), ('and', 'CC'), ('they', 'PRP'), ('dropped', 'VBD'), ('all', 'DT'), ('all', 'PDT'), ('the', 'DT'), ('candy', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (the->DT) (and->CC) (they->PRP) (dropped->VBD) (all->DT) (all->PDT) (the->DT) (candy->NN) ')
candidates to check:
1
descended from food: [['N'], 'gum', 21, 24]
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('got', 'VBD'), ('some', 'DT'), ('gum', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (got->VBD) (some->DT) (gum->NN) ')
candidates to check:
1
descended from food: [['N'], 'gum', 30, 33]
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('got', 'VBD'), ('some', 'DT'), ('more', 'RBR'), ('gum', 'NNS')])
('tags -> ', '     (and->CC) (i->NN) (got->VBD) (some->DT) (more->RBR) (gum->NNS) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('get', 'VBP'), ('i', 'JJ'), ('got', 'VBD'), ('some', 'DT'), ('too', 'RB')])
('tags -> ', '     (i->NN) (i->VBP) (get->VBP) (i->JJ) (got->VBD) (some->DT) (too->RB) ')
candidates to check:
1
descended from food: [['N'], 'gum', 25, 28]
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('some', 'DT'), ('two', 'CD'), ('gum', 'NNS')])
('tags -> ', '     (i->NN) (got->VBD) (some->DT) (two->CD) (gum->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (you->PRP) (did->VBD) ')
candidates to check:
2
descended from food: [['N'], 'gums', 18, 22]
gums
gums gums 332
[('you', 'PRP'), ('got', 'VBD'), ('two', 'CD'), ('gums', 'NNS'), ('and', 'CC'), ('anything', 'NN'), ('else', 'RB')]
['gums']
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('two', 'CD'), ('gums', 'NNS'), ('and', 'CC'), ('anything', 'NN'), ('else', 'RB')])
('tags -> ', '     (you->PRP) (got->VBD) (two->CD) (gums->NNS) (and->CC) (anything->NN) (else->RB) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('other', 'JJ'), ('kids', 'NNS'), ('play', 'VBP'), ('too', 'RB')])
('tags -> ', '     (did->VBD) (other->JJ) (kids->NNS) (play->VBP) (too->RB) ')
('tags initial-> ', [('who', 'WP'), ('else', 'RB'), ('played', 'VBD')])
('tags -> ', '     (who->WP) (else->RB) (played->VBD) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('cousin', 'NN')])
('tags -> ', '     (my->PRP$) (cousin->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('richard', 'NN'), ('and', 'CC'), ('nicholas', 'NNS')])
('tags -> ', '     (richard->NN) (and->CC) (nicholas->NNS) ')
('tags initial-> ', [('nicholas', 'NNS'), ('played', 'VBD'), ('too', 'RB')])
('tags -> ', '     (nicholas->NNS) (played->VBD) (too->RB) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('loud', 'JJ'), ('noise', 'NN')])
('tags -> ', '     (www->NN) (loud->JJ) (noise->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('laugh', 'NN'), ('at', 'IN'), ('me', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (laugh->NN) (at->IN) (me->PRP) ')
('tags initial-> ', [('ow', 'NN')])
('tags -> ', '     (ow->NN) ')
('tags initial-> ', [('then', 'RB'), ('don', 'VB'), ('t', 'JJ'), ('laugh', 'NN'), ('at', 'IN'), ('me', 'PRP')])
('tags -> ', '     (then->RB) (don->VB) (t->JJ) (laugh->NN) (at->IN) (me->PRP) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('funny', 'JJ')])
('tags -> ', '     (but->CC) (you->PRP) (re->VBP) (funny->JJ) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('funny', 'VBP'), ('little', 'JJ'), ('kid', 'NN')])
('tags -> ', '     (you->PRP) (funny->VBP) (little->JJ) (kid->NN) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('dry', 'VB'), ('run', 'VB'), ('your', 'PRP$'), ('papers', 'NNS'), ('today', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (dry->VB) (run->VB) (your->PRP$) (papers->NNS) (today->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('doin', 'VBP'), ('g', 'NNS')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (doin->VBP) (g->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('twisting', 'VBG'), ('your', 'PRP$'), ('arm', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (twisting->VBG) (your->PRP$) (arm->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('giggles', 'NNS')])
('tags -> ', '     (why->WRB) (giggles->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('gee', 'JJ'), ('thanks', 'NNS'), ('that', 'WDT'), ('feels', 'VBP'), ('much', 'RB'), ('better', 'JJR'), ('now', 'RB')])
('tags -> ', '     (gee->JJ) (thanks->NNS) (that->WDT) (feels->VBP) (much->RB) (better->JJR) (now->RB) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('loud', 'JJ'), ('noise', 'NN')])
('tags -> ', '     (www->NN) (loud->JJ) (noise->NN) ')
('tags initial-> ', [('you', 'PRP'), ('almost', 'RB'), ('done', 'VBN')])
('tags -> ', '     (you->PRP) (almost->RB) (done->VBN) ')
('tags initial-> ', [('finish', 'JJ'), ('eating', 'NN'), ('chi', 'NN')])
('tags -> ', '     (finish->JJ) (eating->NN) (chi->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('climb', 'VB'), ('up', 'RP'), ('the', 'DT'), ('tree', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (climb->VB) (up->RP) (the->DT) (tree->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('tree', 'NN'), ('wasn', 'NN'), ('t', 'NN'), ('it', 'PRP')])
('tags -> ', '     (that->DT) (was->VBD) (a->DT) (big->JJ) (tree->NN) (wasn->NN) (t->NN) (it->PRP) ')
('tags initial-> ', [('um', 'JJ'), ('i', 'NN'), ('couldn', 'VBP'), ('t', 'NN'), ('climb', 'NN'), ('up', 'IN'), ('there', 'RB'), ('xxx', 'NNS')])
('tags -> ', '     (um->JJ) (i->NN) (couldn->VBP) (t->NN) (climb->NN) (up->IN) (there->RB) (xxx->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('couldn', 'VBP'), ('t', 'VB')])
('tags -> ', '     (you->PRP) (couldn->VBP) (t->VB) ')
('tags initial-> ', [('who', 'WP'), ('did', 'VBD')])
('tags -> ', '     (who->WP) (did->VBD) ')
('tags initial-> ', [('but', 'CC'), ('but', 'CC'), ('i', 'NNS'), ('could', 'MD')])
('tags -> ', '     (but->CC) (but->CC) (i->NNS) (could->MD) ')
('tags initial-> ', [('and', 'CC'), ('beside', 'NN'), ('that', 'IN')])
('tags -> ', '     (and->CC) (beside->NN) (that->IN) ')
('tags initial-> ', [('i', 'NN'), ('i', 'NN'), ('left', 'VBD'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (i->NN) (left->VBD) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('xxx', 'VB'), ('climbed', 'VBD'), ('a', 'DT'), ('way', 'NN'), ('high', 'JJ')])
('tags -> ', '     (and->CC) (xxx->VB) (climbed->VBD) (a->DT) (way->NN) (high->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (you->PRP) (did->VBD) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('with', 'IN'), ('who', 'WP')])
('tags -> ', '     (with->IN) (who->WP) ')
candidates to check:
1
('tags initial-> ', [('to', 'TO'), ('the', 'DT'), ('to', 'TO'), ('the', 'DT'), ('clouds', 'NN')])
('tags -> ', '     (to->TO) (the->DT) (to->TO) (the->DT) (clouds->NN) ')
candidates to check:
1
('tags initial-> ', [('to', 'TO'), ('the', 'DT'), ('clouds', 'NN')])
('tags -> ', '     (to->TO) (the->DT) (clouds->NN) ')
('tags initial-> ', [('oh', 'UH'), ('my', 'PRP$'), ('goodness', 'NN')])
('tags -> ', '     (oh->UH) (my->PRP$) (goodness->NN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('fall', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (didn->VBP) (t->JJ) (fall->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('that', 'IN'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (that->IN) (s->VBD) (good->JJ) ')
('tags initial-> ', [('i', 'NN'), ('hold', 'VBP'), ('on', 'IN')])
('tags -> ', '     (i->NN) (hold->VBP) (on->IN) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('i', 'NN'), ('stand', 'VBP'), ('up', 'RP')])
('tags -> ', '     (i->NN) (i->VBP) (i->NN) (stand->VBP) (up->RP) ')
('tags initial-> ', [('i', 'NN'), ('stand', 'VBP'), ('up', 'IN'), ('and', 'CC'), ('i', 'JJ'), ('hold', 'VBP'), ('on', 'IN'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (i->NN) (stand->VBP) (up->IN) (and->CC) (i->JJ) (hold->VBP) (on->IN) (like->IN) (this->DT) ')
candidates to check:
2
turtle
turtle turtle 89
[('and', 'CC'), ('and', 'CC'), ('uh', 'JJ'), ('and', 'CC'), ('a', 'DT'), ('pretend', 'JJ'), ('turtle', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('get', 'VB'), ('me', 'PRP')]
['turtle']
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('uh', 'JJ'), ('and', 'CC'), ('a', 'DT'), ('pretend', 'JJ'), ('turtle', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('get', 'VB'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (and->CC) (uh->JJ) (and->CC) (a->DT) (pretend->JJ) (turtle->NN) (couldn->NN) (t->NN) (get->VB) (me->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('stood', 'VBD'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (stood->VBD) (up->RP) ')
candidates to check:
1
turtle
turtle turtle 89
[('and', 'CC'), ('you', 'PRP'), ('held', 'VBP'), ('on', 'IN'), ('like', 'IN'), ('that', 'DT'), ('and', 'CC'), ('the', 'DT'), ('turtle', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('get', 'NN'), ('you', 'PRP')]
['turtle']
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('held', 'VBP'), ('on', 'IN'), ('like', 'IN'), ('that', 'DT'), ('and', 'CC'), ('the', 'DT'), ('turtle', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('get', 'NN'), ('you', 'PRP')])
('tags -> ', '     (and->CC) (you->PRP) (held->VBP) (on->IN) (like->IN) (that->DT) (and->CC) (the->DT) (turtle->NN) (couldn->NN) (t->NN) (get->NN) (you->PRP) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
turtle
turtle turtle 89
[('where', 'WRB'), ('was', 'VBD'), ('the', 'DT'), ('turtle', 'NN')]
['turtle']
('tags initial-> ', [('where', 'WRB'), ('was', 'VBD'), ('the', 'DT'), ('turtle', 'NN')])
('tags -> ', '     (where->WRB) (was->VBD) (the->DT) (turtle->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('he', 'PRP'), ('was', 'VBD'), ('way', 'NN'), ('down', 'IN'), ('to', 'TO'), ('the', 'DT'), ('ground', 'NN')])
('tags -> ', '     (he->PRP) (he->PRP) (was->VBD) (way->NN) (down->IN) (to->TO) (the->DT) (ground->NN) ')
candidates to check:
3
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('say', 'VB'), ('i', 'JJ'), ('didn', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('turtles', 'NNS'), ('could', 'MD'), ('climb', 'VB'), ('the', 'DT'), ('trees', 'NNS')])
('tags -> ', '     (oh->UH) (i->NN) (was->VBD) (gon->VBG) (na->TO) (say->VB) (i->JJ) (didn->VBP) (t->JJ) (think->VBP) (turtles->NNS) (could->MD) (climb->VB) (the->DT) (trees->NNS) ')
('tags initial-> ', [('but', 'CC'), ('they', 'PRP'), ('could', 'MD')])
('tags -> ', '     (but->CC) (they->PRP) (could->MD) ')
('tags initial-> ', [('they', 'PRP'), ('can', 'MD')])
('tags -> ', '     (they->PRP) (can->MD) ')
candidates to check:
2
('tags initial-> ', [('pretend', 'NN'), ('turtles', 'NNS')])
('tags -> ', '     (pretend->NN) (turtles->NNS) ')
candidates to check:
2
('tags initial-> ', [('yup', 'NNS'), ('those', 'DT'), ('are', 'VBP'), ('pretend', 'JJ'), ('turtles', 'NNS')])
('tags -> ', '     (yup->NNS) (those->DT) (are->VBP) (pretend->JJ) (turtles->NNS) ')
candidates to check:
4
('tags initial-> ', [('oh', 'UH'), ('okay', 'MD'), ('be', 'VB'), ('cause', 'RB'), ('real', 'JJ'), ('turtles', 'NNS'), ('can', 'MD'), ('t', 'VB'), ('climb', 'NN'), ('trees', 'NNS')])
('tags -> ', '     (oh->UH) (okay->MD) (be->VB) (cause->RB) (real->JJ) (turtles->NNS) (can->MD) (t->VB) (climb->NN) (trees->NNS) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
3
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('they', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('the', 'DT'), ('arms', 'NNS'), ('and', 'CC'), ('the', 'DT'), ('legs', 'NN'), ('and', 'CC'), ('the', 'DT'), ('fingers', 'NNS'), ('they', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('climb', 'VB')])
('tags -> ', '     (be->VB) (cause->NN) (they->PRP) (don->VBP) (t->NNS) (have->VBP) (the->DT) (arms->NNS) (and->CC) (the->DT) (legs->NN) (and->CC) (the->DT) (fingers->NNS) (they->PRP) (need->VBP) (to->TO) (climb->VB) ')
('tags initial-> ', [('they', 'PRP'), ('can', 'MD'), ('swim', 'VB')])
('tags -> ', '     (they->PRP) (can->MD) (swim->VB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('they', 'PRP'), ('can', 'MD'), ('swim', 'VB'), ('very', 'RB'), ('well', 'RB')])
('tags -> ', '     (they->PRP) (can->MD) (swim->VB) (very->RB) (well->RB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('because', 'IN'), ('that', 'DT'), ('s', 'VBZ'), ('the', 'DT'), ('way', 'NN'), ('they', 'PRP'), ('re', 'VBP'), ('made', 'VBD')])
('tags -> ', '     (because->IN) (that->DT) (s->VBZ) (the->DT) (way->NN) (they->PRP) (re->VBP) (made->VBD) ')
candidates to check:
3
('tags initial-> ', [('on', 'IN'), ('only', 'RB'), ('fake', 'JJ'), ('turtles', 'NNS'), ('can', 'MD'), ('climb', 'VB'), ('up', 'RP'), ('the', 'DT'), ('tree', 'NN')])
('tags -> ', '     (on->IN) (only->RB) (fake->JJ) (turtles->NNS) (can->MD) (climb->VB) (up->RP) (the->DT) (tree->NN) ')
('tags initial-> ', [('sure', 'NN')])
('tags -> ', '     (sure->NN) ')
candidates to check:
2
('tags initial-> ', [('fake', 'JJ'), ('turtles', 'NNS'), ('can', 'MD'), ('do', 'VB'), ('whatever', 'WDT'), ('you', 'PRP'), ('want', 'VBP'), ('them', 'PRP'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (fake->JJ) (turtles->NNS) (can->MD) (do->VB) (whatever->WDT) (you->PRP) (want->VBP) (them->PRP) (to->TO) (do->VB) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('pretend', 'VB')])
('tags -> ', '     (they->PRP) (re->VBP) (pretend->VB) ')
candidates to check:
1
('tags initial-> ', [('ma', 'NN'), ('loud', 'NN')])
('tags -> ', '     (ma->NN) (loud->NN) ')
candidates to check:
5
('tags initial-> ', [('mama', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('na', 'TO'), ('go', 'VB'), ('get', 'VB'), ('some', 'DT'), ('l', 'NN'), ('nice', 'JJ'), ('tail', 'NN'), ('turtles', 'NNS'), ('wh', 'VBP'), ('when', 'WRB'), ('we', 'PRP'), ('wake', 'VBP'), ('up', 'RP')])
('tags -> ', '     (mama->NN) (i->NN) (wan->VBP) (na->TO) (go->VB) (get->VB) (some->DT) (l->NN) (nice->JJ) (tail->NN) (turtles->NNS) (wh->VBP) (when->WRB) (we->PRP) (wake->VBP) (up->RP) ')
('tags initial-> ', [('where', 'WRB'), ('are', 'VBP'), ('we', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('put', 'VB'), ('them', 'PRP')])
('tags -> ', '     (where->WRB) (are->VBP) (we->PRP) (gon->VBP) (na->TO) (put->VB) (them->PRP) ')
('tags initial-> ', [('n', 'IN'), ('no', 'DT'), ('i', 'NN'), ('wan', 'VBP'), ('na', 'TO'), ('get', 'VB')])
('tags -> ', '     (n->IN) (no->DT) (i->NN) (wan->VBP) (na->TO) (get->VB) ')
candidates to check:
7
turtle
turtle turtle 89
[('a', 'DT'), ('nice', 'JJ'), ('turtle', 'NN'), ('turtle', 'JJ'), ('n', 'JJ'), ('nice', 'JJ'), ('turtle', 'NN'), ('toys', 'NNS')]
['turtle']
('tags initial-> ', [('a', 'DT'), ('nice', 'JJ'), ('turtle', 'NN'), ('turtle', 'JJ'), ('n', 'JJ'), ('nice', 'JJ'), ('turtle', 'NN'), ('toys', 'NNS')])
('tags -> ', '     (a->DT) (nice->JJ) (turtle->NN) (turtle->JJ) (n->JJ) (nice->JJ) (turtle->NN) (toys->NNS) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('toys', 'NNS')])
('tags -> ', '     (oh->UH) (toys->NNS) ')
candidates to check:
4
turtle
turtle turtle 89
[('yeah', 'NN'), ('nice', 'JJ'), ('turtle', 'JJ'), ('things', 'NNS'), ('toys', 'NNS')]
['turtle']
('tags initial-> ', [('yeah', 'NN'), ('nice', 'JJ'), ('turtle', 'JJ'), ('things', 'NNS'), ('toys', 'NNS')])
('tags -> ', '     (yeah->NN) (nice->JJ) (turtle->JJ) (things->NNS) (toys->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB')])
('tags -> ', '     (can->MD) (i->VB) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('where', 'WRB'), ('there', 'EX'), ('are', 'VBP'), ('any', 'DT')])
('tags -> ', '     (you->PRP) (know->VBP) (where->WRB) (there->EX) (are->VBP) (any->DT) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('where', 'WRB'), ('they', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (where->WRB) (they->PRP) (are->VBP) ')
('tags initial-> ', [('where', 'WRB')])
('tags -> ', '     (where->WRB) ')
('tags initial-> ', [('i', 'NN'), ('dunno', 'VBP'), ('don', 'NN'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (dunno->VBP) (don->NN) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('think', 'NN'), ('they', 'PRP'), ('at', 'IN'), ('xxx', 'NNP'), ('world', 'NN')])
('tags -> ', '     (think->NN) (they->PRP) (at->IN) (xxx->NNP) (world->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('world', 'NN')])
('tags -> ', '     (xxx->JJ) (world->NN) ')
candidates to check:
2
('tags initial-> ', [('y', 'NN'), ('ye', 'NN'), ('yeah', 'NN'), ('that', 'WDT'), ('because', 'IN'), ('th', 'NN'), ('they', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('poo', 'NN'), ('poo', 'NN')])
('tags -> ', '     (y->NN) (ye->NN) (yeah->NN) (that->WDT) (because->IN) (th->NN) (they->PRP) (in->IN) (the->DT) (poo->NN) (poo->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('turtles', 'NNS'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (well->RB) (i->JJ) (don->VBP) (t->JJ) (want->VBP) (any->DT) (turtles->NNS) (like->IN) (that->DT) ')
candidates to check:
3
turtle
turtle turtle 89
[('and', 'CC'), ('the', 'DT'), ('turtle', 'JJ'), ('turtle', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('bum', 'NN'), ('bum', 'NN')]
['turtle']
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('turtle', 'JJ'), ('turtle', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('bum', 'NN'), ('bum', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (turtle->JJ) (turtle->NN) (is->VBZ) (a->DT) (bum->NN) (bum->NN) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('s', 'JJ'), ('your', 'PRP$'), ('baby', 'NN'), ('stacie', 'NN')])
('tags -> ', '     (how->WRB) (s->JJ) (your->PRP$) (baby->NN) (stacie->NN) ')
candidates to check:
2
('tags initial-> ', [('mama', 'NN'), ('i', 'NN'), ('look', 'VBP'), ('at', 'IN'), ('my', 'PRP$'), ('sneaker', 'NN')])
('tags -> ', '     (mama->NN) (i->NN) (look->VBP) (at->IN) (my->PRP$) (sneaker->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('uhoh', 'NN')])
('tags -> ', '     (uhoh->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('stepped', 'VBD'), ('on', 'IN'), ('something', 'NN'), ('already', 'RB')])
('tags -> ', '     (you->PRP) (stepped->VBD) (on->IN) (something->NN) (already->RB) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('brand', 'NN'), ('new', 'JJ'), ('sneakers', 'NNS')])
('tags -> ', '     (in->IN) (brand->NN) (new->JJ) (sneakers->NNS) ')
('tags initial-> ', [('my', 'PRP$'), ('goodness', 'NN')])
('tags -> ', '     (my->PRP$) (goodness->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (get->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('sneakers', 'NNS')])
('tags -> ', '     (sneakers->NNS) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('that', 'DT')])
('tags -> ', '     (what->WP) (is->VBZ) (that->DT) ')
candidates to check:
2
descended from food: [['N'], 'meatball', 8, 16]
('tags initial-> ', [('a', 'DT'), ('meatball', 'NN'), ('you', 'PRP'), ('dropped', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('floor', 'NN'), ('laughs', 'NNS')])
('tags -> ', '     (a->DT) (meatball->NN) (you->PRP) (dropped->VBD) (on->IN) (the->DT) (floor->NN) (laughs->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('stepped', 'VBD'), ('on', 'IN'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (stepped->VBD) (on->IN) (it->PRP) ')
('tags initial-> ', [('ew', 'NN')])
('tags -> ', '     (ew->NN) ')
('tags initial-> ', [('so', 'RB'), ('how', 'WRB'), ('was', 'VBD'), ('stacie', 'NN')])
('tags -> ', '     (so->RB) (how->WRB) (was->VBD) (stacie->NN) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('not', 'RB'), ('sick', 'JJ')])
('tags -> ', '     (she->PRP) (s->VBD) (not->RB) (sick->JJ) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
descended from food: [['N'], 'meatball', 46, 54]
('tags initial-> ', [('we', 'PRP'), ('had', 'VBD'), ('to', 'TO'), ('step', 'VB'), ('on', 'IN'), ('the', 'DT'), ('rest', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('meatball', 'VB')])
('tags -> ', '     (we->PRP) (had->VBD) (to->TO) (step->VB) (on->IN) (the->DT) (rest->NN) (of->IN) (it->PRP) (meatball->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('is', 'VBZ'), ('your', 'PRP$'), ('birthday', 'NN'), ('coming', 'VBG'), ('up', 'RP')])
('tags -> ', '     (is->VBZ) (your->PRP$) (birthday->NN) (coming->VBG) (up->RP) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('is', 'VBZ'), ('your', 'PRP$'), ('birthday', 'NN'), ('coming', 'VBG'), ('up', 'RP')])
('tags -> ', '     (is->VBZ) (your->PRP$) (birthday->NN) (coming->VBG) (up->RP) ')
('tags initial-> ', [('now', 'RB')])
('tags -> ', '     (now->RB) ')
('tags initial-> ', [('pretty', 'RB'), ('soon', 'RB')])
('tags -> ', '     (pretty->RB) (soon->RB) ')
('tags initial-> ', [('pretty', 'RB'), ('soon', 'RB')])
('tags -> ', '     (pretty->RB) (soon->RB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('have', 'VB'), ('a', 'DT'), ('birthday', 'NN'), ('soon', 'RB')])
('tags -> ', '     (you->PRP) (gon->VBP) (na->TO) (have->VB) (a->DT) (birthday->NN) (soon->RB) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('w', 'NNS'), ('are', 'VBP'), ('we', 'PRP'), ('am', 'VBP'), ('i', 'JJ'), ('gon', 'NN'), ('na', 'TO'), ('have', 'VB'), ('my', 'PRP$'), ('birthday', 'NN')])
('tags -> ', '     (i->NN) (w->NNS) (are->VBP) (we->PRP) (am->VBP) (i->JJ) (gon->NN) (na->TO) (have->VB) (my->PRP$) (birthday->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'JJ'), ('mean', 'VBP'), ('now', 'RB')])
('tags -> ', '     (i->JJ) (mean->VBP) (now->RB) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (are->VBP) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('am', 'VBP'), ('i', 'JJ'), ('gon', 'NN'), ('na', 'TO'), ('have', 'VB'), ('a', 'DT')])
('tags -> ', '     (am->VBP) (i->JJ) (gon->NN) (na->TO) (have->VB) (a->DT) ')
candidates to check:
5
('tags initial-> ', [('am', 'VBP'), ('am', 'VBP'), ('i', 'JJ'), ('gon', 'NN'), ('na', 'TO'), ('have', 'VB'), ('a', 'DT'), ('birt', 'NN'), ('the', 'DT'), ('birthday', 'NN'), ('par', 'NN'), ('ty', 'NN'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (am->VBP) (am->VBP) (i->JJ) (gon->NN) (na->TO) (have->VB) (a->DT) (birt->NN) (the->DT) (birthday->NN) (par->NN) (ty->NN) (in->IN) (here->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('how', 'WRB'), ('old', 'JJ'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (how->WRB) (old->JJ) (you->PRP) (re->VBP) (gon->VB) (na->TO) (be->VB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('how', 'WRB'), ('old', 'JJ')])
('tags -> ', '     (how->WRB) (old->JJ) ')
candidates to check:
3
('tags initial-> ', [('fours', 'NNS'), ('years', 'NNS'), ('old', 'JJ')])
('tags -> ', '     (fours->NNS) (years->NNS) (old->JJ) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('thought', 'VBD'), ('i', 'NN'), ('was', 'VBD'), ('three', 'CD'), ('years', 'NNS'), ('old', 'JJ')])
('tags -> ', '     (but->CC) (i->JJ) (thought->VBD) (i->NN) (was->VBD) (three->CD) (years->NNS) (old->JJ) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('are', 'VBP'), ('three', 'CD'), ('years', 'NNS'), ('old', 'JJ')])
('tags -> ', '     (you->PRP) (are->VBP) (three->CD) (years->NNS) (old->JJ) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('why', 'WRB'), ('on', 'IN'), ('your', 'PRP$'), ('birthday', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('turn', 'VB'), ('four', 'CD'), ('years', 'NNS'), ('old', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (why->WRB) (on->IN) (your->PRP$) (birthday->NN) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (turn->VB) (four->CD) (years->NNS) (old->JJ) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('the', 'DT'), ('next', 'JJ'), ('number', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (that->WDT) (s->VBZ) (the->DT) (next->JJ) (number->NN) ')
('tags initial-> ', [('aw', 'RB'), ('not', 'RB'), ('again', 'RB')])
('tags -> ', '     (aw->RB) (not->RB) (again->RB) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('where', 'WRB'), ('else', 'RB'), ('that', 'IN'), ('number', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (you->PRP) (know->VBP) (where->WRB) (else->RB) (that->IN) (number->NN) (is->VBZ) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('sit', 'NN'), ('up', 'RP')])
('tags -> ', '     (sit->NN) (up->RP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('your', 'PRP$'), ('telephone', 'NN'), ('number', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (your->PRP$) (telephone->NN) (number->NN) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('three', 'CD'), ('three', 'CD'), ('two', 'CD'), ('two', 'CD')])
('tags -> ', '     (four->CD) (five->CD) (three->CD) (three->CD) (two->CD) (two->CD) ')
candidates to check:
5
('tags initial-> ', [('what', 'WP'), ('n', 'VBD'), ('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('number', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('telephone', 'NN'), ('number', 'NN')])
('tags -> ', '     (what->WP) (n->VBD) (what->WP) (s->VBD) (the->DT) (first->JJ) (number->NN) (of->IN) (your->PRP$) (telephone->NN) (number->NN) ')
('tags initial-> ', [('um', 'JJ'), ('six', 'CD'), ('six', 'CD'), ('eight', 'CD')])
('tags -> ', '     (um->JJ) (six->CD) (six->CD) (eight->CD) ')
('tags initial-> ', [('one', 'CD'), ('oh', 'NN'), ('oh', 'NN')])
('tags -> ', '     (one->CD) (oh->NN) (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('same', 'JJ'), ('as', 'IN'), ('how', 'WRB'), ('old', 'JJ'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB')])
('tags -> ', '     (the->DT) (same->JJ) (as->IN) (how->WRB) (old->JJ) (you->PRP) (re->VBP) (gon->VB) (na->TO) (be->VB) ')
('tags initial-> ', [('four', 'CD')])
('tags -> ', '     (four->CD) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (be->VB) (cause->NN) (it->PRP) (is->VBZ) ')
candidates to check:
1
('tags initial-> ', [('just', 'RB'), ('happens', 'VBZ'), ('to', 'TO'), ('work', 'VB'), ('out', 'RP'), ('that', 'DT'), ('way', 'NN')])
('tags -> ', '     (just->RB) (happens->VBZ) (to->TO) (work->VB) (out->RP) (that->DT) (way->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('remember', 'VBP'), ('your', 'PRP$'), ('address', 'NN')])
('tags -> ', '     (you->PRP) (remember->VBP) (your->PRP$) (address->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) ')
candidates to check:
3
('tags initial-> ', [('where', 'WRB'), ('s', 'VB'), ('my', 'PRP$'), ('ad', 'NN'), ('address', 'NN')])
('tags -> ', '     (where->WRB) (s->VB) (my->PRP$) (ad->NN) (address->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) (it->PRP) (is->VBZ) ')
candidates to check:
1
('tags initial-> ', [('think', 'NN'), ('about', 'IN'), ('it', 'PRP'), ('for', 'IN'), ('a', 'DT'), ('minute', 'NN')])
('tags -> ', '     (think->NN) (about->IN) (it->PRP) (for->IN) (a->DT) (minute->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('tell', 'VB'), ('me', 'PRP')])
('tags -> ', '     (you->PRP) (can->MD) (tell->VB) (me->PRP) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'JJ'), ('bet', 'NN'), ('you', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (i->JJ) (bet->NN) (you->PRP) (do->VBP) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('address', 'NN'), ('is', 'VBZ'), ('where', 'WRB'), ('you', 'PRP'), ('live', 'VBP')])
('tags -> ', '     (your->PRP$) (address->NN) (is->VBZ) (where->WRB) (you->PRP) (live->VBP) ')
('tags initial-> ', [('where', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('live', 'VB')])
('tags -> ', '     (where->WRB) (do->VB) (you->PRP) (live->VB) ')
candidates to check:
2
('tags initial-> ', [('www', 'NN'), ('frustrated', 'VBD'), ('noise', 'NN')])
('tags -> ', '     (www->NN) (frustrated->VBD) (noise->NN) ')
('tags initial-> ', [('mar', 'NN')])
('tags -> ', '     (mar->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('lowell', 'NN'), ('massachusetts', 'NN')])
('tags -> ', '     (xxx->NN) (lowell->NN) (massachusetts->NN) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
('tags initial-> ', [('hm', 'NN'), ('pleased', 'VBD')])
('tags -> ', '     (hm->NN) (pleased->VBD) ')
('tags initial-> ', [('see', 'VB'), ('i', 'JJ'), ('knew', 'NNS'), ('you', 'PRP'), ('remembered', 'VBD')])
('tags -> ', '     (see->VB) (i->JJ) (knew->NNS) (you->PRP) (remembered->VBD) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
3
('tags initial-> ', [('um', 'JJ'), ('what', 'WP'), ('s', 'JJ'), ('my', 'PRP$'), ('telephone', 'NN'), ('number', 'NN')])
('tags -> ', '     (um->JJ) (what->WP) (s->JJ) (my->PRP$) (telephone->NN) (number->NN) ')
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('think', 'VB')])
('tags -> ', '     (let->VB) (me->PRP) (think->VB) ')
('tags initial-> ', [('four', 'CD')])
('tags -> ', '     (four->CD) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('it', 'PRP')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (it->PRP) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('three', 'CD'), ('three', 'CD'), ('two', 'CD'), ('two', 'CD')])
('tags -> ', '     (four->CD) (five->CD) (three->CD) (three->CD) (two->CD) (two->CD) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
('tags initial-> ', [('hm', 'NN'), ('pleased', 'VBD')])
('tags -> ', '     (hm->NN) (pleased->VBD) ')
('tags initial-> ', [('hm', 'NN'), ('let', 'VB'), ('me', 'PRP'), ('see', 'VB')])
('tags -> ', '     (hm->NN) (let->VB) (me->PRP) (see->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('s', 'VB'), ('your', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (and->CC) (what->WP) (s->VB) (your->PRP$) (name->NN) ')
candidates to check:
3
('tags initial-> ', [('chi', 'NNS'), ('full', 'JJ'), ('name', 'NN'), ('is', 'VBZ'), ('my', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (chi->NNS) (full->JJ) (name->NN) (is->VBZ) (my->PRP$) (name->NN) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('mommy', 'JJ'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (mommy->JJ) (s->NN) (name->NN) ')
candidates to check:
4
('tags initial-> ', [('mom', 'NN'), ('full', 'JJ'), ('name', 'NN'), ('xxx', 'NNP'), ('name', 'NN')])
('tags -> ', '     (mom->NN) (full->JJ) (name->NN) (xxx->NNP) (name->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('daddy', 'JJ'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (daddy->JJ) (s->NN) (name->NN) ')
('tags initial-> ', [('jake', 'NN'), ('adams', 'NNS'), ('fluellen', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (jake->NN) (adams->NNS) (fluellen->VBP) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('learning', 'VBG'), ('how', 'WRB'), ('to', 'TO'), ('spell', 'VB'), ('your', 'PRP$'), ('name', 'NN'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (you->PRP) (learning->VBG) (how->WRB) (to->TO) (spell->VB) (your->PRP$) (name->NN) (in->IN) (school->NN) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('three', 'CD'), ('three', 'CD'), ('two', 'CD'), ('two', 'CD'), ('eight', 'CD')])
('tags -> ', '     (four->CD) (five->CD) (three->CD) (three->CD) (two->CD) (two->CD) (eight->CD) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
('tags initial-> ', [('machine', 'NN')])
('tags -> ', '     (machine->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('your', 'PRP$'), ('telephone', 'NN'), ('number', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (your->PRP$) (telephone->NN) (number->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('you', 'PRP'), ('you', 'PRP'), ('re', 'VBP'), ('learning', 'VBG'), ('how', 'WRB'), ('to', 'TO'), ('spell', 'VB'), ('your', 'PRP$'), ('first', 'JJ'), ('name', 'NN'), ('in', 'IN'), ('school', 'NN'), ('right', 'NN')])
('tags -> ', '     (you->PRP) (you->PRP) (you->PRP) (re->VBP) (learning->VBG) (how->WRB) (to->TO) (spell->VB) (your->PRP$) (first->JJ) (name->NN) (in->IN) (school->NN) (right->NN) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('three', 'CD'), ('three', 'CD')])
('tags -> ', '     (four->CD) (five->CD) (three->CD) (three->CD) ')
('tags initial-> ', [('chi', 'NNS'), ('laughs', 'NNS')])
('tags -> ', '     (chi->NNS) (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('stop', 'NN'), ('that', 'IN')])
('tags -> ', '     (stop->NN) (that->IN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('like', 'IN'), ('a', 'DT'), ('broken', 'NN'), ('record', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (like->IN) (a->DT) (broken->NN) (record->NN) ')
('tags initial-> ', [('ah', 'NN'), ('sighs', 'NNS'), ('and', 'CC'), ('giggles', 'NNS')])
('tags -> ', '     (ah->NN) (sighs->NNS) (and->CC) (giggles->NNS) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('three', 'CD'), ('three', 'CD'), ('two', 'CD'), ('two', 'CD'), ('eight', 'CD')])
('tags -> ', '     (four->CD) (five->CD) (three->CD) (three->CD) (two->CD) (two->CD) (eight->CD) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
2
('tags initial-> ', [('how', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('spell', 'VB'), ('your', 'PRP$'), ('last', 'JJ'), ('name', 'NN')])
('tags -> ', '     (how->WRB) (do->VB) (you->PRP) (spell->VB) (your->PRP$) (last->JJ) (name->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('four', 'CD'), ('five', 'CD'), ('three', 'CD'), ('eight', 'CD'), ('two', 'CD'), ('two', 'CD'), ('laughs', 'NNS')])
('tags -> ', '     (four->CD) (five->CD) (three->CD) (eight->CD) (two->CD) (two->CD) (laughs->NNS) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('c', 'NNS'), ('l', 'NN')])
('tags -> ', '     (c->NNS) (l->NN) ')
('tags initial-> ', [('ay', 'NN'), ('iy', 'NN'), ('o', 'NN'), ('ay', 'NN'), ('z', 'NN'), ('l', 'NN'), ('z', 'NN'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN')])
('tags -> ', '     (ay->NN) (iy->NN) (o->NN) (ay->NN) (z->NN) (l->NN) (z->NN) (l->NN) (o->NN) (l->NN) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
('tags initial-> ', [('c', 'NNS'), ('l', 'VBP'), ('ay', 'JJ'), ('iy', 'NN'), ('o', 'NN'), ('ay', 'NN'), ('z', 'NN'), ('l', 'NN'), ('z', 'NN'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN')])
('tags -> ', '     (c->NNS) (l->VBP) (ay->JJ) (iy->NN) (o->NN) (ay->NN) (z->NN) (l->NN) (z->NN) (l->NN) (o->NN) (l->NN) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('giggles', 'NNS')])
('tags -> ', '     (giggles->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('over', 'RP'), ('julie', 'RB'), ('s', 'RB'), ('again', 'RB')])
('tags -> ', '     (you->PRP) (want->VBP) (to->TO) (go->VB) (over->RP) (julie->RB) (s->RB) (again->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('go', 'VB'), ('to', 'TO'), ('julie', 'VB'), ('s', 'NN'), ('again', 'RB')])
('tags -> ', '     (go->VB) (to->TO) (julie->VB) (s->NN) (again->RB) ')
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('fun', 'VBN'), ('huh', 'NN')])
('tags -> ', '     (you->PRP) (had->VBD) (fun->VBN) (huh->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('see', 'VB'), ('her', 'PRP$'), ('again', 'RB')])
('tags -> ', '     (yeah->NN) (i->NN) (want->VBP) (to->TO) (go->VB) (see->VB) (her->PRP$) (again->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB')])
('tags -> ', '     (can->MD) (i->VB) ')
('tags initial-> ', [('yeah', 'NN'), ('we', 'PRP'), ('ll', 'VBP'), ('go', 'VB'), ('again', 'RB'), ('sometime', 'RB')])
('tags -> ', '     (yeah->NN) (we->PRP) (ll->VBP) (go->VB) (again->RB) (sometime->RB) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('while', 'NN')])
('tags -> ', '     (in->IN) (a->DT) (little->JJ) (while->NN) ')
candidates to check:
2
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('people', 'NNS'), ('there', 'EX'), ('huh', 'VB')])
('tags -> ', '     (there->EX) (was->VBD) (a->DT) (lot->NN) (of->IN) (people->NNS) (there->EX) (huh->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('see', 'VB'), ('all', 'DT'), ('your', 'PRP$'), ('relatives', 'NNS')])
('tags -> ', '     (see->VB) (all->DT) (your->PRP$) (relatives->NNS) ')
snap
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dff5f710>)
[('watch', 'NN'), ('this', 'DT'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('snap', 'VB')]
['snap']
('tags initial-> ', [('watch', 'NN'), ('this', 'DT'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('snap', 'VB')])
('tags -> ', '     (watch->NN) (this->DT) (i->JJ) (m->NN) (gon->NN) (na->TO) (snap->VB) ')
('tags initial-> ', [('watch', 'NN')])
('tags -> ', '     (watch->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('watch', 'NN')])
('tags -> ', '     (watch->NN) ')
('tags initial-> ', [('pretty', 'RB'), ('good', 'JJ')])
('tags -> ', '     (pretty->RB) (good->JJ) ')
snap
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dff5fc68>)
[('want', 'NN'), ('to', 'TO'), ('hear', 'VB'), ('me', 'PRP'), ('snap', 'VB')]
['snap']
('tags initial-> ', [('want', 'NN'), ('to', 'TO'), ('hear', 'VB'), ('me', 'PRP'), ('snap', 'VB')])
('tags -> ', '     (want->NN) (to->TO) (hear->VB) (me->PRP) (snap->VB) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('pretty', 'RB'), ('good', 'JJ')])
('tags -> ', '     (pretty->RB) (good->JJ) ')
('tags initial-> ', [('ah', 'NN')])
('tags -> ', '     (ah->NN) ')
('tags initial-> ', [('how', 'WRB'), ('d', 'NN'), ('you', 'PRP'), ('learn', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (how->WRB) (d->NN) (you->PRP) (learn->VBP) (how->WRB) (to->TO) (do->VB) (that->DT) ')
('tags initial-> ', [('great', 'JJ')])
('tags -> ', '     (great->JJ) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('my', 'PRP$'), ('school', 'NN')])
('tags -> ', '     (at->IN) (my->PRP$) (school->NN) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('your', 'PRP$'), ('school', 'NN')])
('tags -> ', '     (at->IN) (your->PRP$) (school->NN) ')
('tags initial-> ', [('xxx', 'NNS'), ('wait', 'VBP')])
('tags -> ', '     (xxx->NNS) (wait->VBP) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('your', 'PRP$'), ('teacher', 'NN'), ('tell', 'NN'), ('you', 'PRP'), ('how', 'WRB'), ('to', 'TO'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (did->VBD) (your->PRP$) (teacher->NN) (tell->NN) (you->PRP) (how->WRB) (to->TO) (do->VB) (that->DT) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('which', 'WDT'), ('teacher', 'NN')])
('tags -> ', '     (which->WDT) (teacher->NN) ')
('tags initial-> ', [('um', 'JJ'), ('monique', 'NN')])
('tags -> ', '     (um->JJ) (monique->NN) ')
('tags initial-> ', [('monique', 'NN')])
('tags -> ', '     (monique->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('and', 'CC'), ('xxx', 'NN')])
('tags -> ', '     (yeah->NN) (and->CC) (xxx->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('come', 'NN'), ('here', 'RB')])
('tags -> ', '     (come->NN) (here->RB) ')
('tags initial-> ', [('sit', 'VB'), ('down', 'RP')])
('tags -> ', '     (sit->VB) (down->RP) ')
('tags initial-> ', [('come', 'NN'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (come->NN) (over->IN) (here->RB) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('just', 'RB'), ('finish', 'VB'), ('this', 'DT')])
('tags -> ', '     (just->RB) (finish->VB) (this->DT) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
loading solution set
calculating
set([(98, (18, 25)), (1048, (52, 56)), (1343, (9, 12)), (944, (8, 12)), (2963, (46, 54)), (121, (21, 30)), (2419, (58, 64)), (951, (49, 53)), (25, (6, 13)), (111, (14, 18)), (102, (25, 34)), (142, (27, 37)), (2433, (24, 30)), (987, (28, 32)), (2441, (48, 55)), (1801, (37, 41)), (22, (6, 13)), (118, (17, 21)), (1523, (17, 21)), (2437, (36, 44)), (909, (22, 30)), (2428, (46, 52)), (2555, (18, 22)), (2934, (8, 16)), (984, (14, 20)), (182, (52, 57))])
[((22, (6, 13)), '*CHI:\tpumpkin .\n'), ((25, (6, 13)), '*MOT:\tpumpkin ?\n'), ((98, (18, 25)), '*CHI:\t(.) is that sausage ?\n'), ((102, (25, 34)), "*MOT:\tno that's xxx [//] meatballs .\n"), ((111, (14, 18)), '*CHI:\tis that meat ?\n'), ((118, (17, 21)), "*MOT:\tyes that's meat .\n"), ((121, (21, 30)), '*CHI:\tis this [!] &m meatballs ?\n'), ((142, (27, 37)), '*CHI:\tGrandma [?] can make hamburgers ?\n'), ((182, (52, 57)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((909, (22, 30)), '*CHI:\t(..) I want the meatball .\n'), ((944, (8, 12)), '*CHI:\ta duck .\n'), ((951, (49, 53)), '*MOT:\t<did he take> [<] a little [!] bite of the duck ?\n'), ((984, (14, 20)), '*CHI:\tand put pepper on her ?\n'), ((987, (28, 32)), '*CHI:\t<and (.) and> [/] and salt on her ?\n'), ((1048, (52, 56)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1343, (9, 12)), '*CHI:\t++ egg [<] [?] .\n'), ((1523, (17, 21)), '*CHI:\the ate the duck alive .\n'), ((1801, (37, 41)), '*CHI:\t&-um [/] &-um the wolf ate the duck .\n'), ((2419, (58, 64)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2428, (46, 52)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2433, (24, 30)), "*MOT:\twhy'd he drop the cookie ?\n"), ((2437, (36, 44)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2441, (48, 55)), '*MOT:\toh because he decided he wanted to have a cupcake instead ?\n'), ((2555, (18, 22)), '*MOT:\tyou got two gums and anything else ?\n'), ((2934, (8, 16)), '*MOT:\ta meatball you dropped on the floor &=laughs .\n'), ((2963, (46, 54)), '*MOT:\t(.) we had to step on the rest of it [= meatball] .\n')]
set([(2414, (30, 34)), (2838, (22, 28)), (98, (18, 25)), (1048, (52, 56)), (2838, (54, 60)), (2160, (32, 36)), (155, (40, 44)), (2140, (65, 70)), (2844, (16, 22)), (1343, (9, 12)), (944, (8, 12)), (2963, (46, 54)), (121, (21, 30)), (2076, (24, 29)), (2838, (33, 39)), (2713, (44, 50)), (951, (49, 53)), (2428, (21, 28)), (1069, (18, 22)), (2555, (18, 22)), (877, (61, 65)), (3407, (22, 26)), (102, (25, 34)), (2057, (25, 30)), (2437, (36, 44)), (492, (33, 39)), (2080, (47, 52)), (142, (27, 37)), (2433, (24, 30)), (2419, (28, 36)), (987, (28, 32)), (2891, (18, 24)), (2441, (48, 55)), (1801, (37, 41)), (2539, (21, 24)), (22, (6, 13)), (118, (17, 21)), (1523, (17, 21)), (409, (15, 19)), (2722, (40, 46)), (231, (23, 27)), (2891, (29, 35)), (968, (35, 41)), (2419, (58, 64)), (2094, (13, 18)), (909, (22, 30)), (25, (6, 13)), (111, (14, 18)), (2533, (55, 60)), (2428, (46, 52)), (2542, (30, 33)), (2934, (8, 16)), (3393, (32, 36)), (984, (14, 20)), (182, (52, 57)), (2734, (20, 26)), (470, (15, 21)), (2548, (25, 28))])
[((22, (6, 13)), '*CHI:\tpumpkin .\n'), ((25, (6, 13)), '*MOT:\tpumpkin ?\n'), ((98, (18, 25)), '*CHI:\t(.) is that sausage ?\n'), ((102, (25, 34)), "*MOT:\tno that's xxx [//] meatballs .\n"), ((111, (14, 18)), '*CHI:\tis that meat ?\n'), ((118, (17, 21)), "*MOT:\tyes that's meat .\n"), ((121, (21, 30)), '*CHI:\tis this [!] &m meatballs ?\n'), ((142, (27, 37)), '*CHI:\tGrandma [?] can make hamburgers ?\n'), ((155, (40, 44)), "*MOT:\twhy don't you finish chewing your food so I can understand you .\n"), ((182, (52, 57)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((231, (23, 27)), '*CHI:\tan it got on her food .\n'), ((409, (15, 19)), '*MOT:\teat your food .\n'), ((470, (15, 21)), '*MOT:\tfor your supper ?\n'), ((492, (33, 39)), '*MOT:\tplay that after you finish supper .\n'), ((877, (61, 65)), "*CHI:\tI'm gonna sit on your [/] your lap and I'm bringing my food over here .\n"), ((909, (22, 30)), '*CHI:\t(..) I want the meatball .\n'), ((944, (8, 12)), '*CHI:\ta duck .\n'), ((951, (49, 53)), '*MOT:\t<did he take> [<] a little [!] bite of the duck ?\n'), ((968, (35, 41)), '*MOT:\twell why are you eating your supper ?\n'), ((984, (14, 20)), '*CHI:\tand put pepper on her ?\n'), ((987, (28, 32)), '*CHI:\t<and (.) and> [/] and salt on her ?\n'), ((1048, (52, 56)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1069, (18, 22)), '*MOT:\tfinish your food .\n'), ((1343, (9, 12)), '*CHI:\t++ egg [<] [?] .\n'), ((1523, (17, 21)), '*CHI:\the ate the duck alive .\n'), ((1801, (37, 41)), '*CHI:\t&-um [/] &-um the wolf ate the duck .\n'), ((2057, (25, 30)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2076, (24, 29)), "*CHI:\tbecause he didn't shake my hand .\n"), ((2080, (47, 52)), "*CHI:\t(be)cause he didn't come up the hill and shake my hand .\n"), ((2094, (13, 18)), '*CHI:\tthen I shake his hand .\n'), ((2140, (65, 70)), '*MOT:\t(be)cause you went up to him and you asked him if he would shake your hand ?\n'), ((2160, (32, 36)), "*MOT:\twhy don't you (.) get the food in there first ?\n"), ((2414, (30, 34)), '*MOT:\t(be)cause he likes junk food .\n'), ((2419, (28, 36)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2419, (58, 64)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2428, (21, 28)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2428, (46, 52)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2433, (24, 30)), "*MOT:\twhy'd he drop the cookie ?\n"), ((2437, (36, 44)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2441, (48, 55)), '*MOT:\toh because he decided he wanted to have a cupcake instead ?\n'), ((2533, (55, 60)), '*CHI:\tand [/] and the and they dropped all [/] all the candy .\n'), ((2539, (21, 24)), '*CHI:\tand I got some gum .\n'), ((2542, (30, 33)), '*CHI:\tand I got some more [!] gum .\n'), ((2548, (25, 28)), '*CHI:\tI got some (.) two gum .\n'), ((2555, (18, 22)), '*MOT:\tyou got two gums and anything else ?\n'), ((2713, (44, 50)), "*CHI:\t<and [/] and &-uh> [//] and a pretend turtle couldn't get me .\n"), ((2722, (40, 46)), "*MOT:\tand you held on like that and the turtle couldn't get you ?\n"), ((2734, (20, 26)), '*MOT:\twhere was the turtle ?\n'), ((2838, (22, 28)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2838, (33, 39)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2838, (54, 60)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2844, (16, 22)), '*CHI:\tyeah nice turtle (.) things [//] toys .\n'), ((2891, (18, 24)), '*CHI:\t(.) and the turtle [/] turtle is a bum+bum .\n'), ((2891, (29, 35)), '*CHI:\t(.) and the turtle [/] turtle is a bum+bum .\n'), ((2934, (8, 16)), '*MOT:\ta meatball you dropped on the floor &=laughs .\n'), ((2963, (46, 54)), '*MOT:\t(.) we had to step on the rest of it [= meatball] .\n'), ((3393, (32, 36)), "*CHI:\t(..) watch this I'm gonna snap .\n"), ((3407, (22, 26)), '*CHI:\twant to hear me snap ?\n')]
calculating accuracy and recall
correct labels:
set(['sausage', 'cupcakes', 'meat', 'meatballs', 'bacon', 'pepper', 'cupcake', 'gums', 'cookie', 'duck', 'meatball', 'salt', 'egg', 'hamburgers', 'pumpkin'])
predicted labels:
set(['turtle', 'shake', 'bacon', 'gum', 'duck', 'hamburgers', 'sausage', 'cupcakes', 'meatballs', 'snap', 'pumpkin', 'pepper', 'food', 'cupcake', 'cookie', 'supper', 'meat', 'egg', 'candy', 'gums', 'meatball', 'salt'])
file:HSLLD/HV1/MT//geomt1.cha
precision: 0.681818181818
recall: 1.0
true positives:['bacon', 'cookie', 'cupcake', 'cupcakes', 'duck', 'egg', 'gums', 'hamburgers', 'meat', 'meatball', 'meatballs', 'pepper', 'pumpkin', 'salt', 'sausage']
false positives: ['candy', 'food', 'gum', 'shake', 'snap', 'supper', 'turtle']
false negatives: []
# true pos: 15
# false pos: 7
# false neg: 0
HSLLD/HV1/MT//anamt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (look->NN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('okay', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('xxx', 'VB')])
('tags -> ', '     (okay->IN) (you->PRP) (re->VBP) (xxx->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('other', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (other->JJ) ')
('tags initial-> ', [('xxx', 'NN'), ('that', 'WDT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (xxx->NN) (that->WDT) (s->VBD) (right->JJ) ')
('tags initial-> ', [('here', 'RB'), ('mikey', 'NN')])
('tags -> ', '     (here->RB) (mikey->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'juice', 18, 23]
juice
juice juice 52
[('so', 'RB'), ('you', 'PRP'), ('want', 'VBP'), ('juice', 'NNS'), ('like', 'IN'), ('that', 'DT')]
['juice']
('tags initial-> ', [('so', 'RB'), ('you', 'PRP'), ('want', 'VBP'), ('juice', 'NNS'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (so->RB) (you->PRP) (want->VBP) (juice->NNS) (like->IN) (that->DT) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
descended from food: [['N'], 'cheese', 21, 27]
cheese
cheese cheese 280
[('i', 'NN'), ('like', 'IN'), ('it', 'PRP'), ('with', 'IN'), ('cheese', 'NN')]
['cheese']
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('it', 'PRP'), ('with', 'IN'), ('cheese', 'NN')])
('tags -> ', '     (i->NN) (like->IN) (it->PRP) (with->IN) (cheese->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
descended from food: [['N'], 'cheese', 27, 33]
cheese
cheese cheese 280
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('xxx', 'VBN'), ('cheese', 'NNS')]
['cheese']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('xxx', 'VBN'), ('cheese', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (xxx->VBN) (cheese->NNS) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
('tags initial-> ', [('okay', 'NN'), ('then', 'RB'), ('put', 'VBD'), ('it', 'PRP'), ('there', 'EX')])
('tags -> ', '     (okay->NN) (then->RB) (put->VBD) (it->PRP) (there->EX) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'NN')])
('tags -> ', '     (oh->UH) (xxx->NN) ')
('tags initial-> ', [('mariana', 'NN')])
('tags -> ', '     (mariana->NN) ')
candidates to check:
2
descended from food: [['N'], 'cheese', 28, 34]
cheese
cheese cheese 280
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('good', 'JJ'), ('cheese', 'NN'), ('look', 'NN')]
['cheese']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('good', 'JJ'), ('cheese', 'NN'), ('look', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (any->DT) (good->JJ) (cheese->NN) (look->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'IN'), ('the', 'DT'), ('lord', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (oh->IN) (the->DT) (lord->NN) (is->VBZ) (good->JJ) (to->TO) (me->PRP) ')
('tags initial-> ', [('sing', 'VBG'), ('good', 'JJ')])
('tags -> ', '     (sing->VBG) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('so', 'RB'), ('i', 'JJ'), ('thank', 'VBP'), ('the', 'DT'), ('lord', 'NN')])
('tags -> ', '     (and->CC) (so->RB) (i->JJ) (thank->VBP) (the->DT) (lord->NN) ')
candidates to check:
1
('tags initial-> ', [('thank', 'VB'), ('the', 'DT'), ('lord', 'NN')])
('tags -> ', '     (thank->VB) (the->DT) (lord->NN) ')
candidates to check:
4
apple
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfeea878>)
[('for', 'IN'), ('giving', 'VBG'), ('me', 'PRP'), ('the', 'DT'), ('things', 'NNS'), ('i', 'VBP'), ('need', 'VBP'), ('the', 'DT'), ('sun', 'NN'), ('and', 'CC'), ('the', 'DT'), ('rain', 'NN'), ('and', 'CC'), ('the', 'DT'), ('apple', 'NN'), ('seed', 'NN')]
['apple']
('tags initial-> ', [('for', 'IN'), ('giving', 'VBG'), ('me', 'PRP'), ('the', 'DT'), ('things', 'NNS'), ('i', 'VBP'), ('need', 'VBP'), ('the', 'DT'), ('sun', 'NN'), ('and', 'CC'), ('the', 'DT'), ('rain', 'NN'), ('and', 'CC'), ('the', 'DT'), ('apple', 'NN'), ('seed', 'NN')])
('tags -> ', '     (for->IN) (giving->VBG) (me->PRP) (the->DT) (things->NNS) (i->VBP) (need->VBP) (the->DT) (sun->NN) (and->CC) (the->DT) (rain->NN) (and->CC) (the->DT) (apple->NN) (seed->NN) ')
candidates to check:
4
apple
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1e01cd0e0>)
[('for', 'IN'), ('giving', 'VBG'), ('me', 'PRP'), ('the', 'DT'), ('things', 'NNS'), ('i', 'VBP'), ('need', 'VBP'), ('the', 'DT'), ('sun', 'NN'), ('and', 'CC'), ('the', 'DT'), ('rain', 'NN'), ('and', 'CC'), ('the', 'DT'), ('apple', 'NN'), ('seed', 'NN')]
['apple']
('tags initial-> ', [('for', 'IN'), ('giving', 'VBG'), ('me', 'PRP'), ('the', 'DT'), ('things', 'NNS'), ('i', 'VBP'), ('need', 'VBP'), ('the', 'DT'), ('sun', 'NN'), ('and', 'CC'), ('the', 'DT'), ('rain', 'NN'), ('and', 'CC'), ('the', 'DT'), ('apple', 'NN'), ('seed', 'NN')])
('tags -> ', '     (for->IN) (giving->VBG) (me->PRP) (the->DT) (things->NNS) (i->VBP) (need->VBP) (the->DT) (sun->NN) (and->CC) (the->DT) (rain->NN) (and->CC) (the->DT) (apple->NN) (seed->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('lord', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (the->DT) (lord->NN) (is->VBZ) (good->JJ) (to->TO) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('lord', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (the->DT) (lord->NN) (is->VBZ) (good->JJ) (to->TO) (me->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (xxx->NN) (mikey->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('lord', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (the->DT) (lord->NN) (is->VBZ) (good->JJ) (to->TO) (me->PRP) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('long', 'RB')])
('tags -> ', '     (that->DT) (s->VBZ) (long->RB) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('it', 'PRP'), ('mariana', 'VBD')])
('tags -> ', '     (do->VB) (you->PRP) (like->IN) (it->PRP) (mariana->VBD) ')
candidates to check:
1
descended from food: [['N'], 'juice', 23, 28]
juice
juice juice 52
[('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('that', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('that', 'DT'), ('juice', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (like->IN) (that->DT) (juice->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 10, 15]
juice
juice juice 52
[('xxx', 'NN'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('xxx', 'NN'), ('juice', 'NN')])
('tags -> ', '     (xxx->NN) (juice->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('how', 'WRB'), ('it', 'PRP'), ('s', 'VBZ'), ('called', 'VBN')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (how->WRB) (it->PRP) (s->VBZ) (called->VBN) ')
('tags initial-> ', [('to', 'TO'), ('die', 'VB'), ('dreaming', 'VBG')])
('tags -> ', '     (to->TO) (die->VB) (dreaming->VBG) ')
('tags initial-> ', [('because', 'IN'), ('it', 'PRP'), ('tastes', 'VBZ'), ('so', 'RB'), ('good', 'JJ')])
('tags -> ', '     (because->IN) (it->PRP) (tastes->VBZ) (so->RB) (good->JJ) ')
('tags initial-> ', [('what', 'WP'), ('tastes', 'VBZ'), ('so', 'RB'), ('good', 'JJ')])
('tags -> ', '     (what->WP) (tastes->VBZ) (so->RB) (good->JJ) ')
candidates to check:
1
descended from food: [['N'], 'juice', 15, 20]
juice
juice juice 52
[('this', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('this', 'DT'), ('juice', 'NN')])
('tags -> ', '     (this->DT) (juice->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 11, 15]
descended from food: [['N'], 'strawberries', 26, 38]
strawberries
strawberries strawberries 96
[('with', 'IN'), ('milk', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('strawberries', 'NNS')]
['strawberries']
milk
milk milk 46
[('with', 'IN'), ('milk', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('strawberries', 'NNS')]
['milk']
('tags initial-> ', [('with', 'IN'), ('milk', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('strawberries', 'NNS')])
('tags -> ', '     (with->IN) (milk->NN) (and->CC) (uh->JJ) (strawberries->NNS) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('it', 'PRP'), ('called', 'VBD')])
('tags -> ', '     (what->WP) (s->VBD) (it->PRP) (called->VBD) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBD'), ('a', 'DT'), ('die', 'NN'), ('dreaming', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (wan->NN) (t->NN) (t->VBD) (a->DT) (die->NN) (dreaming->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('just', 'RB'), ('the', 'DT'), ('name', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('xxx', 'VBZ'), ('xxx', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (just->RB) (the->DT) (name->NN) (of->IN) (it->PRP) (xxx->VBZ) (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('xxx', 'NNP'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (xxx->NNP) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('doesn', 'VBZ'), ('t', 'JJ'), ('mean', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('die', 'VB'), ('right', 'RB'), ('now', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('only', 'RB'), ('the', 'DT'), ('name', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('xxx', 'VBD')])
('tags -> ', '     (that->DT) (doesn->VBZ) (t->JJ) (mean->NN) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (die->VB) (right->RB) (now->RB) (it->PRP) (s->VBZ) (only->RB) (the->DT) (name->NN) (of->IN) (it->PRP) (xxx->VBD) ')
('tags initial-> ', [('zzz', 'NN'), ('is', 'VBZ'), ('out', 'RP')])
('tags -> ', '     (zzz->NN) (is->VBZ) (out->RP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('mariana', 'NN')])
('tags -> ', '     (mariana->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('only', 'RB'), ('the', 'DT'), ('dream', 'NN'), ('to', 'TO'), ('me', 'PRP')])
('tags -> ', '     (it->PRP) (s->VBZ) (only->RB) (the->DT) (dream->NN) (to->TO) (me->PRP) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('try', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN'), ('then', 'RB')])
('tags -> ', '     (try->NN) (to->TO) (eat->VB) (a->DT) (little->JJ) (bit->NN) (then->RB) ')
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('be', 'VB'), ('strong', 'JJ'), ('and', 'CC'), ('big', 'JJ'), ('like', 'IN'), ('jackie', 'NN')])
('tags -> ', '     (you->PRP) (wan->VBP) (t->JJ) (t->NN) (a->DT) (be->VB) (strong->JJ) (and->CC) (big->JJ) (like->IN) (jackie->NN) ')
('tags initial-> ', [('remember', 'VB'), ('jackie', 'NN')])
('tags -> ', '     (remember->VB) (jackie->NN) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('big', 'JJ'), ('you', 'PRP'), ('know', 'VBP'), ('why', 'WRB')])
('tags -> ', '     (she->PRP) (s->VBD) (big->JJ) (you->PRP) (know->VBP) (why->WRB) ')
('tags initial-> ', [('big', 'JJ')])
('tags -> ', '     (big->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 26, 30]
('tags initial-> ', [('because', 'IN'), ('she', 'PRP'), ('ate', 'VBD'), ('her', 'PRP'), ('food', 'NN')])
('tags -> ', '     (because->IN) (she->PRP) (ate->VBD) (her->PRP) (food->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('eating', 'VBG'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (m->VBP) (eating->VBG) (it->PRP) ')
('tags initial-> ', [('just', 'RB'), ('like', 'IN'), ('mikey', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (just->RB) (like->IN) (mikey->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('see', 'NN'), ('i', 'NNS'), ('make', 'VBP'), ('a', 'DT'), ('xxx', 'NN'), ('i', 'NN'), ('like', 'IN')])
('tags -> ', '     (see->NN) (i->NNS) (make->VBP) (a->DT) (xxx->NN) (i->NN) (like->IN) ')
('tags initial-> ', [('pretty', 'RB'), ('soon', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('mariana', 'VB')])
('tags -> ', '     (pretty->RB) (soon->RB) (you->PRP) (will->MD) (mariana->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('m', 'VBP'), ('a', 'DT'), ('eat', 'NN'), ('faster', 'RBR')])
('tags -> ', '     (well->RB) (i->RB) (m->VBP) (a->DT) (eat->NN) (faster->RBR) ')
('tags initial-> ', [('not', 'RB'), ('necessarily', 'RB')])
('tags -> ', '     (not->RB) (necessarily->RB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
descended from food: [['N'], 'food', 33, 37]
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('do', 'VB'), ('is', 'VBZ'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (do->VB) (is->VBZ) (eat->VB) (your->PRP$) (food->NN) ')
('tags initial-> ', [('and', 'CC'), ('maybe', 'RB'), ('half', 'NN'), ('of', 'IN'), ('that', 'DT')])
('tags -> ', '     (and->CC) (maybe->RB) (half->NN) (of->IN) (that->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (little->JJ) (bit->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('that', 'IN'), ('on', 'IN'), ('my', 'PRP$'), ('plate', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (that->IN) (on->IN) (my->PRP$) (plate->NN) ')
('tags initial-> ', [('eat', 'NN'), ('that', 'IN'), ('next', 'JJ')])
('tags -> ', '     (eat->NN) (that->IN) (next->JJ) ')
('tags initial-> ', [('take', 'VB'), ('it', 'PRP'), ('off', 'RP')])
('tags -> ', '     (take->VB) (it->PRP) (off->RP) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('see', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (to->TO) (see->VB) (it->PRP) ')
('tags initial-> ', [('wan', 'NN'), ('t', 'NN'), ('t', 'VBZ'), ('a', 'DT'), ('see', 'NN'), ('it', 'PRP')])
('tags -> ', '     (wan->NN) (t->NN) (t->VBZ) (a->DT) (see->NN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('take', 'VB'), ('it', 'PRP'), ('off', 'IN'), ('of', 'IN'), ('my', 'PRP$'), ('plate', 'NN')])
('tags -> ', '     (take->VB) (it->PRP) (off->IN) (of->IN) (my->PRP$) (plate->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('your', 'PRP$'), ('spoon', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (your->PRP$) (spoon->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('too', 'RB'), ('funny', 'JJ'), ('mariana', 'NNS')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (too->RB) (funny->JJ) (mariana->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('better', 'JJR')])
('tags -> ', '     (you->PRP) (know->VBP) (better->JJR) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('mikey', 'NN'), ('please', 'NN')])
('tags -> ', '     (mikey->NN) (please->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('take', 'VB'), ('it', 'PRP'), ('off', 'IN'), ('of', 'IN'), ('my', 'PRP$'), ('plate', 'NN'), ('take', 'VB'), ('it', 'PRP'), ('off', 'IN'), ('of', 'IN'), ('my', 'PRP$'), ('plate', 'NN')])
('tags -> ', '     (take->VB) (it->PRP) (off->IN) (of->IN) (my->PRP$) (plate->NN) (take->VB) (it->PRP) (off->IN) (of->IN) (my->PRP$) (plate->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (gon->VB) (na->TO) (do->VB) (that->DT) ')
('tags initial-> ', [('zzz', 'NNS'), ('take', 'VBP'), ('it', 'PRP'), ('off', 'RP')])
('tags -> ', '     (zzz->NNS) (take->VBP) (it->PRP) (off->RP) ')
('tags initial-> ', [('mariana', 'NN')])
('tags -> ', '     (mariana->NN) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP'), ('don', 'VBZ'), ('t', 'JJ'), ('eat', 'NN'), ('it', 'PRP')])
('tags -> ', '     (if->IN) (you->PRP) (don->VBP) (t->JJ) (want->VBP) (it->PRP) (don->VBZ) (t->JJ) (eat->NN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('it', 'PRP'), ('on', 'IN'), ('my', 'PRP$'), ('plate', 'NN'), ('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (it->PRP) (on->IN) (my->PRP$) (plate->NN) (zzz->NN) (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('get', 'VB'), ('it', 'PRP'), ('out', 'RP'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (get->VB) (it->PRP) (out->RP) (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'muffin', 14, 20]
muffin
muffin muffin 255
[('eat', 'VB'), ('the', 'DT'), ('muffin', 'NN'), ('then', 'RB')]
['muffin']
('tags initial-> ', [('eat', 'VB'), ('the', 'DT'), ('muffin', 'NN'), ('then', 'RB')])
('tags -> ', '     (eat->VB) (the->DT) (muffin->NN) (then->RB) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
water
water water 18
[('look', 'NN'), ('at', 'IN'), ('this', 'DT'), ('water', 'NN')]
['water']
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('this', 'DT'), ('water', 'NN')])
('tags -> ', '     (look->NN) (at->IN) (this->DT) (water->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('melting', 'VBG')])
('tags -> ', '     (it->PRP) (s->VBD) (melting->VBG) ')
('tags initial-> ', [('oh', 'UH'), ('wow', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('so', 'RB'), ('hot', 'JJ'), ('out', 'RP')])
('tags -> ', '     (oh->UH) (wow->NN) (it->PRP) (s->VBZ) (so->RB) (hot->JJ) (out->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('melting', 'VBG'), ('just', 'RB'), ('from', 'IN'), ('being', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (melting->VBG) (just->RB) (from->IN) (being->VBG) (on->IN) (the->DT) (table->NN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('believe', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (believe->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('food', 'NN'), ('s', 'NN'), ('melting', 'VBG'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('believe', 'VB'), ('it', 'PRP')])
('tags -> ', '     (all->PDT) (the->DT) (food->NN) (s->NN) (melting->VBG) (i->NN) (can->MD) (t->VB) (believe->VB) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('glad', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (glad->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('a', 'DT'), ('xxx', 'NN'), ('who', 'WP'), ('s', 'VBZ'), ('this', 'DT')])
('tags -> ', '     (i->NN) (got->VBD) (a->DT) (xxx->NN) (who->WP) (s->VBZ) (this->DT) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP'), ('i', 'VBZ'), ('ll', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('back', 'RB'), ('and', 'CC'), ('eat', 'VB'), ('it', 'PRP')])
('tags -> ', '     (if->IN) (you->PRP) (don->VBP) (t->JJ) (want->VBP) (it->PRP) (i->VBZ) (ll->PRP) (put->VBD) (it->PRP) (back->RB) (and->CC) (eat->VB) (it->PRP) ')
candidates to check:
1
descended from food: [['N'], 'muffin', 14, 20]
muffin
muffin muffin 255
[('eat', 'VB'), ('the', 'DT'), ('muffin', 'NN'), ('okay', 'NN')]
['muffin']
('tags initial-> ', [('eat', 'VB'), ('the', 'DT'), ('muffin', 'NN'), ('okay', 'NN')])
('tags -> ', '     (eat->VB) (the->DT) (muffin->NN) (okay->NN) ')
candidates to check:
2
descended from food: [['N'], 'vitamin', 34, 41]
descended from food: [['N'], 'dinner', 68, 74]
('tags initial-> ', [('hurry', 'NN'), ('up', 'RB'), ('and', 'CC'), ('i', 'VB'), ('ll', 'VBP'), ('get', 'VB'), ('you', 'PRP'), ('a', 'DT'), ('vitamin', 'NN'), ('after', 'IN'), ('you', 'PRP'), ('finish', 'VB'), ('your', 'PRP$'), ('dinner', 'NN')])
('tags -> ', '     (hurry->NN) (up->RB) (and->CC) (i->VB) (ll->VBP) (get->VB) (you->PRP) (a->DT) (vitamin->NN) (after->IN) (you->PRP) (finish->VB) (your->PRP$) (dinner->NN) ')
candidates to check:
2
descended from food: [['N'], 'popsicles', 13, 22]
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('popsicles', 'NNS')])
('tags -> ', '     (i->NN) (want->VBP) (popsicles->NNS) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 23, 31]
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'RB'), ('the', 'DT'), ('popsicle', 'NN'), ('too', 'RB')])
('tags -> ', '     (that->DT) (s->VBD) (right->RB) (the->DT) (popsicle->NN) (too->RB) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 13, 21]
('tags initial-> ', [('want', 'VB'), ('a', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (want->VB) (a->DT) (popsicle->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'food', 24, 28]
('tags initial-> ', [('then', 'RB'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (then->RB) (eat->VB) (your->PRP$) (food->NN) ')
candidates to check:
1
descended from food: [['N'], 'vitamin', 25, 32]
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('a', 'DT'), ('vitamin', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (don->VBP) (t->NN) (want->VBP) (a->DT) (vitamin->NN) ')
candidates to check:
2
descended from food: [['N'], 'vitamin', 30, 37]
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('won', 'VBD'), ('t', 'JJ'), ('eat', 'VB'), ('your', 'PRP$'), ('vitamin', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('no', 'DT'), ('problem', 'NN'), ('mariana', 'NN')])
('tags -> ', '     (then->RB) (you->PRP) (won->VBD) (t->JJ) (eat->VB) (your->PRP$) (vitamin->NN) (that->IN) (s->VBZ) (no->DT) (problem->NN) (mariana->NN) ')
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('won', 'VBD'), ('t', 'RP'), ('get', 'VB'), ('you', 'PRP'), ('xxx', 'VB')])
('tags -> ', '     (and->CC) (we->PRP) (won->VBD) (t->RP) (get->VB) (you->PRP) (xxx->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('so', 'RB'), ('good', 'JJ')])
('tags -> ', '     (this->DT) (is->VBZ) (so->RB) (good->JJ) ')
('tags initial-> ', [('right', 'RB'), ('mikey', 'NN')])
('tags -> ', '     (right->RB) (mikey->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (like->IN) (it->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'JJ'), ('ll', 'VBP'), ('put', 'VBN'), ('it', 'PRP'), ('there', 'EX')])
('tags -> ', '     (i->JJ) (ll->VBP) (put->VBN) (it->PRP) (there->EX) ')
('tags initial-> ', [('maybe', 'RB'), ('yours', 'PRP'), ('is', 'VBZ'), ('better', 'RBR')])
('tags -> ', '     (maybe->RB) (yours->PRP) (is->VBZ) (better->RBR) ')
('tags initial-> ', [('uh', 'NN'), ('huh', 'NN')])
('tags -> ', '     (uh->NN) (huh->NN) ')
candidates to check:
4
onions
onions onions 26
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('onions', 'NNS'), ('i', 'VBP'), ('don', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('hate', 'VBP'), ('onions', 'NNS')]
['onions']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('onions', 'NNS'), ('i', 'VBP'), ('don', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('hate', 'VBP'), ('onions', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (onions->NNS) (i->VBP) (don->VBP) (t->NN) (i->NN) (hate->VBP) (onions->NNS) ')
candidates to check:
1
onions
onions onions 26
[('i', 'JJ'), ('hate', 'VBP'), ('onions', 'NNS')]
['onions']
('tags initial-> ', [('i', 'JJ'), ('hate', 'VBP'), ('onions', 'NNS')])
('tags -> ', '     (i->JJ) (hate->VBP) (onions->NNS) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('ate', 'VBP'), ('enough', 'JJ')])
('tags -> ', '     (you->PRP) (ate->VBP) (enough->JJ) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 17, 25]
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('a', 'DT'), ('popsicle', 'NN'), ('you', 'PRP'), ('know', 'VBP'), ('what', 'WP'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (you->PRP) (want->VBP) (a->DT) (popsicle->NN) (you->PRP) (know->VBP) (what->WP) (to->TO) (do->VB) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NNS'), ('finished', 'VBD')])
('tags -> ', '     (i->JJ) (m->NNS) (finished->VBD) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (food->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NNS'), ('finished', 'VBD')])
('tags -> ', '     (i->JJ) (m->NNS) (finished->VBD) ')
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('that', 'DT')])
('tags -> ', '     (look->NN) (at->IN) (that->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('that', 'IN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (that->IN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBD'), ('a', 'DT'), ('eat', 'NN'), ('that', 'WDT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (wan->NN) (t->NN) (t->VBD) (a->DT) (eat->NN) (that->WDT) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 15, 23]
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('a', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (a->DT) (popsicle->NN) ')
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('eat', 'VB'), ('that', 'IN')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (eat->VB) (that->IN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('zzz', 'VB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (to->TO) (zzz->VB) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
candidates to check:
1
('tags initial-> ', [('mikey', 'JJ'), ('stop', 'VB'), ('acting', 'VBG'), ('like', 'IN'), ('a', 'DT'), ('baby', 'NN')])
('tags -> ', '     (mikey->JJ) (stop->VB) (acting->VBG) (like->IN) (a->DT) (baby->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO')])
('tags -> ', '     (zzz->NN) (i->NN) (don->VBP) (t->NN) (want->VBP) (to->TO) ')
candidates to check:
2
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('how', 'WRB'), ('eliza', 'JJ'), ('hits', 'VBZ'), ('her', 'PRP$'), ('her', 'PRP$'), ('daughters', 'NNS'), ('with', 'IN'), ('a', 'DT'), ('belt', 'NN'), ('when', 'WRB'), ('they', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('listen', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) (how->WRB) (eliza->JJ) (hits->VBZ) (her->PRP$) (her->PRP$) (daughters->NNS) (with->IN) (a->DT) (belt->NN) (when->WRB) (they->PRP) (don->VBP) (t->JJ) (listen->NN) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (you->PRP) (want->VBP) (me->PRP) (to->TO) (do->VB) (that->DT) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('okay', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('better', 'JJR')])
('tags -> ', '     (okay->IN) (you->PRP) (know->VBP) (better->JJR) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('help', 'NN'), ('you', 'PRP'), ('okay', 'VBP')])
('tags -> ', '     (i->NN) (ll->VBP) (help->NN) (you->PRP) (okay->VBP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
candidates to check:
1
('tags initial-> ', [('eat', 'NN'), ('a', 'DT'), ('bit', 'NN')])
('tags -> ', '     (eat->NN) (a->DT) (bit->NN) ')
('tags initial-> ', [('try', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (try->NN) (xxx->NN) ')
candidates to check:
1
onions
onions onions 26
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('those', 'DT'), ('onions', 'NNS')]
['onions']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('those', 'DT'), ('onions', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (those->DT) (onions->NNS) ')
('tags initial-> ', [('okay', 'NN'), ('i', 'NN'), ('took', 'VBD'), ('them', 'PRP'), ('out', 'RP')])
('tags -> ', '     (okay->NN) (i->NN) (took->VBD) (them->PRP) (out->RP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('good', 'JJ'), ('isn', 'NN'), ('t', 'NN'), ('it', 'PRP')])
('tags -> ', '     (it->PRP) (s->VBD) (good->JJ) (isn->NN) (t->NN) (it->PRP) ')
candidates to check:
2
onions
onions onions 26
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('onions', 'NNS')]
['onions']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('onions', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (onions->NNS) ')
candidates to check:
1
onions
onions onions 26
[('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('onions', 'NNS'), ('mikey', 'NN')]
['onions']
('tags initial-> ', [('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('onions', 'NNS'), ('mikey', 'NN')])
('tags -> ', '     (it->PRP) (doesn->VBZ) (t->NNS) (have->VBP) (any->DT) (onions->NNS) (mikey->NN) ')
('tags initial-> ', [('i', 'NN'), ('took', 'VBD'), ('them', 'PRP'), ('out', 'RP')])
('tags -> ', '     (i->NN) (took->VBD) (them->PRP) (out->RP) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('alright', 'NN'), ('mariana', 'NN')])
('tags -> ', '     (alright->NN) (mariana->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('finish', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (finish->VB) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 28, 36]
('tags initial-> ', [('uh', 'JJ'), ('mikey', 'NN'), ('s', 'NN'), ('having', 'VBG'), ('a', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (uh->JJ) (mikey->NN) (s->NN) (having->VBG) (a->DT) (popsicle->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 37, 45]
('tags initial-> ', [('maybe', 'RB'), ('mariana', 'JJ'), ('doesn', 'NNS'), ('t', 'VBP'), ('want', 'VBP'), ('any', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (maybe->RB) (mariana->JJ) (doesn->NNS) (t->VBP) (want->VBP) (any->DT) (popsicle->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('see', 'VBP'), ('her', 'PRP$'), ('eating', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (see->VBP) (her->PRP$) (eating->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', 14, 19]
honey
honey honey 304
[('come', 'VBN'), ('on', 'IN'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('honey', 'NN')])
('tags -> ', '     (come->VBN) (on->IN) (honey->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 16, 21]
juice
juice juice 52
[('drink', 'VB'), ('the', 'DT'), ('juice', 'NN'), ('too', 'RB')]
['juice']
('tags initial-> ', [('drink', 'VB'), ('the', 'DT'), ('juice', 'NN'), ('too', 'RB')])
('tags -> ', '     (drink->VB) (the->DT) (juice->NN) (too->RB) ')
('tags initial-> ', [('zzz', 'NN'), ('she', 'PRP'), ('looks', 'VBZ'), ('so', 'RB'), ('funny', 'JJ')])
('tags -> ', '     (zzz->NN) (she->PRP) (looks->VBZ) (so->RB) (funny->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('hungry', 'JJ'), ('huh', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (hungry->JJ) (huh->NN) (mikey->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('believe', 'VB'), ('how', 'WRB'), ('hot', 'JJ'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (believe->VB) (how->WRB) (hot->JJ) (it->PRP) (is->VBZ) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 25, 33]
('tags initial-> ', [('bet', 'VB'), ('it', 'PRP'), ('ll', 'JJ'), ('melt', 'VBD'), ('the', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (bet->VB) (it->PRP) (ll->JJ) (melt->VBD) (the->DT) (popsicle->NN) ')
('tags initial-> ', [('probably', 'RB')])
('tags -> ', '     (probably->RB) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('play', 'VB'), ('with', 'IN'), ('teresa', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (to->TO) (play->VB) (with->IN) (teresa->NN) ')
('tags initial-> ', [('there', 'RB')])
('tags -> ', '     (there->RB) ')
('tags initial-> ', [('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (up->RB) (there->RB) ')
('tags initial-> ', [('under', 'IN'), ('there', 'EX'), ('or', 'CC'), ('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (under->IN) (there->EX) (or->CC) (up->RB) (there->RB) ')
('tags initial-> ', [('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (up->RB) (there->RB) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('feed', 'NN'), ('him', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (feed->NN) (him->PRP) ')
candidates to check:
1
descended from food: [['N'], 'juice', 57, 62]
juice
juice juice 52
[('tell', 'NN'), ('tell', 'VB'), ('mariana', 'NN'), ('to', 'TO'), ('come', 'VB'), ('in', 'IN'), ('now', 'RB'), ('and', 'CC'), ('drink', 'VB'), ('the', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('tell', 'NN'), ('tell', 'VB'), ('mariana', 'NN'), ('to', 'TO'), ('come', 'VB'), ('in', 'IN'), ('now', 'RB'), ('and', 'CC'), ('drink', 'VB'), ('the', 'DT'), ('juice', 'NN')])
('tags -> ', '     (tell->NN) (tell->VB) (mariana->NN) (to->TO) (come->VB) (in->IN) (now->RB) (and->CC) (drink->VB) (the->DT) (juice->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('mariana', 'NN')])
('tags -> ', '     (mariana->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 57, 62]
juice
juice juice 52
[('mariana', 'NN'), ('mariana', 'VBZ'), ('come', 'VBN'), ('on', 'IN'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('mariana', 'NN'), ('mariana', 'VBZ'), ('come', 'VBN'), ('on', 'IN'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')])
('tags -> ', '     (mariana->NN) (mariana->VBZ) (come->VBN) (on->IN) (and->CC) (drink->VB) (your->PRP$) (juice->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
candidates to check:
1
descended from food: [['N'], 'juice', 29, 34]
juice
juice juice 52
[('okay', 'NN'), ('mariana', 'NN'), ('drink', 'VBP'), ('the', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('okay', 'NN'), ('mariana', 'NN'), ('drink', 'VBP'), ('the', 'DT'), ('juice', 'NN')])
('tags -> ', '     (okay->NN) (mariana->NN) (drink->VBP) (the->DT) (juice->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'muffin', 20, 26]
muffin
muffin muffin 255
[('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('muffin', 'NN')]
['muffin']
('tags initial-> ', [('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('muffin', 'NN')])
('tags -> ', '     (and->CC) (eat->VB) (your->PRP$) (muffin->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'muffin', 8, 14]
muffin
muffin muffin 255
[('a', 'DT'), ('muffin', 'NN')]
['muffin']
('tags initial-> ', [('a', 'DT'), ('muffin', 'NN')])
('tags -> ', '     (a->DT) (muffin->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 58, 63]
juice
juice juice 52
[('either', 'RB'), ('one', 'CD'), ('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('it', 'PRP'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('either', 'RB'), ('one', 'CD'), ('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('it', 'PRP'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')])
('tags -> ', '     (either->RB) (one->CD) (as->RB) (long->RB) (as->IN) (you->PRP) (eat->VBP) (it->PRP) (and->CC) (drink->VB) (your->PRP$) (juice->NN) ')
('tags initial-> ', [('hey', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (hey->NN) (mikey->NN) ')
candidates to check:
2
descended from food: [['N'], 'juice', 31, 36]
juice
juice juice 52
[('would', 'MD'), ('you', 'PRP'), ('like', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('juice', 'NNS')]
['juice']
('tags initial-> ', [('would', 'MD'), ('you', 'PRP'), ('like', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('juice', 'NNS')])
('tags -> ', '     (would->MD) (you->PRP) (like->VB) (some->DT) (more->RBR) (juice->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 48, 56]
('tags initial-> ', [('finish', 'NN'), ('that', 'IN'), ('xxx', 'NN'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('ll', 'VBP'), ('get', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (finish->NN) (that->IN) (xxx->NN) (and->CC) (then->RB) (i->VB) (ll->VBP) (get->VB) (you->PRP) (the->DT) (popsicle->NN) ')
('tags initial-> ', [('oh', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('so', 'RB'), ('hot', 'JJ')])
('tags -> ', '     (oh->IN) (it->PRP) (s->VBZ) (so->RB) (hot->JJ) ')
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('m', 'VBP'), ('sweating', 'VBG')])
('tags -> ', '     (oh->UH) (i->NN) (m->VBP) (sweating->VBG) ')
('tags initial-> ', [('right', 'RB'), ('here', 'RB'), ('please', 'VB'), ('mikey', 'NN')])
('tags -> ', '     (right->RB) (here->RB) (please->VB) (mikey->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('drink', 'VB'), ('this', 'DT'), ('because', 'IN'), ('my', 'PRP$'), ('throat', 'NN'), ('get', 'VB'), ('hurt', 'VBN')])
('tags -> ', '     (no->DT) (i->NN) (can->MD) (t->VB) (drink->VB) (this->DT) (because->IN) (my->PRP$) (throat->NN) (get->VB) (hurt->VBN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 24, 32]
('tags initial-> ', [('how', 'WRB'), ('can', 'MD'), ('you', 'PRP'), ('eat', 'VB'), ('a', 'DT'), ('popsicle', 'NN'), ('then', 'RB')])
('tags -> ', '     (how->WRB) (can->MD) (you->PRP) (eat->VB) (a->DT) (popsicle->NN) (then->RB) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('tummy', 'NN'), ('s', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('hurt', 'VB')])
('tags -> ', '     (your->PRP$) (tummy->NN) (s->NN) (gon->NN) (na->TO) (hurt->VB) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 28, 36]
('tags initial-> ', [('when', 'WRB'), ('you', 'PRP'), ('i', 'VBP'), ('eat', 'VBP'), ('a', 'DT'), ('popsicle', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN')])
('tags -> ', '     (when->WRB) (you->PRP) (i->VBP) (eat->VBP) (a->DT) (popsicle->NN) (i->NN) (don->VBP) (t->NN) (i->NN) (don->VBP) (t->NN) ')
candidates to check:
3
descended from food: [['N'], 'popsicle', 44, 52]
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('eating', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('ate', 'VBP'), ('a', 'DT'), ('popsicle', 'NN'), ('and', 'CC'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('hurt', 'VBN'), ('my', 'PRP$'), ('throat', 'NN')])
('tags -> ', '     (i->NN) (was->VBD) (eating->VBG) (in->IN) (the->DT) (store->NN) (and->CC) (i->JJ) (ate->VBP) (a->DT) (popsicle->NN) (and->CC) (i->NN) (didn->VBP) (t->NN) (hurt->VBN) (my->PRP$) (throat->NN) ')
('tags initial-> ', [('it', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('hurt', 'NN')])
('tags -> ', '     (it->PRP) (didn->VBZ) (t->JJ) (hurt->NN) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('okay', 'NN'), ('just', 'RB'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN'), ('left', 'VBD'), ('mikey', 'NN')])
('tags -> ', '     (okay->NN) (just->RB) (a->DT) (little->JJ) (bit->NN) (left->VBD) (mikey->NN) ')
candidates to check:
2
('tags initial-> ', [('two', 'CD'), ('more', 'JJR'), ('sips', 'NNS'), ('and', 'CC'), ('that', 'DT'), ('s', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (two->CD) (more->JJR) (sips->NNS) (and->CC) (that->DT) (s->VBD) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN'), ('ow', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (ow->NN) (zzz->NN) ')
candidates to check:
5
descended from food: [['N'], 'popsicle', 45, 53]
('tags initial-> ', [('good', 'JJ'), ('lord', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('drink', 'VBP'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('eat', 'VB'), ('a', 'DT'), ('popsicle', 'NN'), ('if', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('gon', 'VBG'), ('na', 'TO'), ('create', 'VB'), ('so', 'RB'), ('much', 'JJ'), ('pain', 'NN')])
('tags -> ', '     (good->JJ) (lord->NN) (if->IN) (you->PRP) (drink->VBP) (you->PRP) (can->MD) (t->VB) (eat->VB) (a->DT) (popsicle->NN) (if->IN) (it->PRP) (is->VBZ) (gon->VBG) (na->TO) (create->VB) (so->RB) (much->JJ) (pain->NN) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('throat', 'NN'), ('is', 'VBZ'), ('really', 'RB'), ('hurt', 'VBN')])
('tags -> ', '     (your->PRP$) (throat->NN) (is->VBZ) (really->RB) (hurt->VBN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
descended from food: [['N'], 'juice', 34, 39]
descended from food: [['N'], 'popsicle', 66, 74]
juice
juice juice 52
[('if', 'IN'), ('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('hurt', 'NN'), ('with', 'IN'), ('the', 'DT'), ('juice', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('won', 'VBD'), ('t', 'JJ'), ('hurt', 'NN'), ('with', 'IN'), ('a', 'DT'), ('popsicle', 'NN')]
['juice']
('tags initial-> ', [('if', 'IN'), ('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('hurt', 'NN'), ('with', 'IN'), ('the', 'DT'), ('juice', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('won', 'VBD'), ('t', 'JJ'), ('hurt', 'NN'), ('with', 'IN'), ('a', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (if->IN) (it->PRP) (doesn->VBZ) (t->JJ) (hurt->NN) (with->IN) (the->DT) (juice->NN) (then->RB) (it->PRP) (won->VBD) (t->JJ) (hurt->NN) (with->IN) (a->DT) (popsicle->NN) ')
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('see', 'VB')])
('tags -> ', '     (let->VB) (me->PRP) (see->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
descended from food: [['N'], 'popsicle', 28, 36]
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('have', 'VB'), ('a', 'DT'), ('popsicle', 'NN'), ('if', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('only', 'RB'), ('going', 'VBG'), ('to', 'TO'), ('hurt', 'VB'), ('your', 'PRP$'), ('hurt', 'FW'), ('your', 'PRP$'), ('throat', 'NN')])
('tags -> ', '     (then->RB) (you->PRP) (can->MD) (t->VB) (have->VB) (a->DT) (popsicle->NN) (if->IN) (it->PRP) (s->VBZ) (only->RB) (going->VBG) (to->TO) (hurt->VB) (your->PRP$) (hurt->FW) (your->PRP$) (throat->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'IN'), ('boy', 'NN'), ('i', 'NN'), ('guess', 'NN'), ('he', 'PRP'), ('s', 'VBZ'), ('sick', 'JJ')])
('tags -> ', '     (oh->IN) (boy->NN) (i->NN) (guess->NN) (he->PRP) (s->VBZ) (sick->JJ) ')
candidates to check:
1
('tags initial-> ', [('better', 'RBR'), ('take', 'VB'), ('him', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('doctor', 'NN')])
('tags -> ', '     (better->RBR) (take->VB) (him->PRP) (to->TO) (the->DT) (doctor->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('take', 'VB'), ('him', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('doctor', 'NN'), ('xxx', 'JJ'), ('right', 'RB'), ('now', 'RB')])
('tags -> ', '     (and->CC) (take->VB) (him->PRP) (to->TO) (the->DT) (doctor->NN) (xxx->JJ) (right->RB) (now->RB) ')
('tags initial-> ', [('mikey', 'NN')])
('tags -> ', '     (mikey->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (to->TO) (xxx->VB) ')
('tags initial-> ', [('zzz', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO')])
('tags -> ', '     (zzz->NN) (i->NN) (don->VBP) (t->NN) (want->VBP) (to->TO) ')
('tags initial-> ', [('finish', 'VB'), ('it', 'PRP')])
('tags -> ', '     (finish->VB) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN'), ('it', 'PRP'), ('hurts', 'VBZ')])
('tags -> ', '     (zzz->NN) (it->PRP) (hurts->VBZ) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
('tags initial-> ', [('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('hurt', 'NN')])
('tags -> ', '     (it->PRP) (doesn->VBZ) (t->JJ) (hurt->NN) ')
('tags initial-> ', [('ow', 'NN')])
('tags -> ', '     (ow->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 31, 39]
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('able', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('a', 'DT'), ('popsicle', 'NN'), ('so', 'RB'), ('xxx', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (able->JJ) (to->TO) (eat->VB) (a->DT) (popsicle->NN) (so->RB) (xxx->JJ) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
('tags initial-> ', [('how', 'WRB'), ('much', 'JJ'), ('is', 'VBZ'), ('there', 'RB')])
('tags -> ', '     (how->WRB) (much->JJ) (is->VBZ) (there->RB) ')
('tags initial-> ', [('mikey', 'NN')])
('tags -> ', '     (mikey->NN) ')
candidates to check:
2
('tags initial-> ', [('just', 'RB'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (just->RB) (a->DT) (little->JJ) (bit->NN) ')
('tags initial-> ', [('one', 'CD'), ('two', 'CD')])
('tags -> ', '     (one->CD) (two->CD) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('s', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (that->DT) (s->VBD) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('guys', 'VBP')])
('tags -> ', '     (oh->IN) (you->PRP) (guys->VBP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('ve', 'VBP'), ('lost', 'VBN'), ('your', 'PRP$'), ('appetite', 'JJ'), ('huh', 'NN'), ('mikey', 'NN'), ('and', 'CC'), ('mariana', 'NN')])
('tags -> ', '     (you->PRP) (ve->VBP) (lost->VBN) (your->PRP$) (appetite->JJ) (huh->NN) (mikey->NN) (and->CC) (mariana->NN) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('cold', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('cough', 'NN')])
('tags -> ', '     (i->NNS) (have->VBP) (a->DT) (cold->NN) (and->CC) (he->PRP) (has->VBZ) (a->DT) (cough->NN) ')
('tags initial-> ', [('why', 'WRB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBD'), ('a', 'DT'), ('eat', 'NN')])
('tags -> ', '     (why->WRB) (you->PRP) (don->VBP) (t->JJ) (wan->NN) (t->NN) (t->VBD) (a->DT) (eat->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
candidates to check:
1
('tags initial-> ', [('save', 'VB'), ('your', 'PRP$'), ('cups', 'NNS')])
('tags -> ', '     (save->VB) (your->PRP$) (cups->NNS) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('finished', 'VBN'), ('mariana', 'NNS')])
('tags -> ', '     (are->VBP) (you->PRP) (finished->VBN) (mariana->NNS) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('get', 'VB'), ('one', 'CD'), ('now', 'RB'), ('i', 'VBZ'), ('want', 'VBP'), ('mickey', 'NN'), ('mouse', 'NN')])
('tags -> ', '     (i->NN) (can->MD) (get->VB) (one->CD) (now->RB) (i->VBZ) (want->VBP) (mickey->NN) (mouse->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('which', 'WDT'), ('one', 'CD'), ('s', 'NN'), ('mickey', 'NN'), ('mouse', 'NN')])
('tags -> ', '     (i->NN) (know->VBP) (which->WDT) (one->CD) (s->NN) (mickey->NN) (mouse->NN) ')
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('only', 'RB'), ('three', 'CD'), ('mikey', 'NN')])
('tags -> ', '     (we->PRP) (have->VBP) (only->RB) (three->CD) (mikey->NN) ')
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('see', 'NN'), ('which', 'WDT'), ('xxx', 'VBP')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (see->NN) (which->WDT) (xxx->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('me', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('yellow', 'JJ'), ('one', 'NN')])
('tags -> ', '     (me->PRP) (want->VBP) (the->DT) (yellow->JJ) (one->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('yellow', 'JJ')])
('tags -> ', '     (we->PRP) (don->VBP) (t->NNS) (have->VBP) (any->DT) (yellow->JJ) ')
('tags initial-> ', [('do', 'VBP'), ('we', 'PRP'), ('mikey', 'VB')])
('tags -> ', '     (do->VBP) (we->PRP) (mikey->VB) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfec1950>)
[('orange', 'NN'), ('and', 'CC'), ('pink', 'NN'), ('and', 'CC'), ('rose', 'VBD')]
['orange']
('tags initial-> ', [('orange', 'NN'), ('and', 'CC'), ('pink', 'NN'), ('and', 'CC'), ('rose', 'VBD')])
('tags -> ', '     (orange->NN) (and->CC) (pink->NN) (and->CC) (rose->VBD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('xxx', 'NNP'), ('xxx', 'NNP')])
('tags -> ', '     (and->CC) (xxx->NNP) (xxx->NNP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 77, 82]
juice
juice juice 52
[('he', 'PRP'), ('says', 'VBZ'), ('he', 'PRP'), ('says', 'VBZ'), ('mikey', 'NN'), ('says', 'VBZ'), ('mikey', 'NN'), ('says', 'VBZ'), ('only', 'RB'), ('this', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('he', 'PRP'), ('says', 'VBZ'), ('he', 'PRP'), ('says', 'VBZ'), ('mikey', 'NN'), ('says', 'VBZ'), ('mikey', 'NN'), ('says', 'VBZ'), ('only', 'RB'), ('this', 'DT'), ('juice', 'NN')])
('tags -> ', '     (he->PRP) (says->VBZ) (he->PRP) (says->VBZ) (mikey->NN) (says->VBZ) (mikey->NN) (says->VBZ) (only->RB) (this->DT) (juice->NN) ')
('tags initial-> ', [('right', 'JJ'), ('mariana', 'NN'), ('xxx', 'NNP'), ('xxx', 'NN')])
('tags -> ', '     (right->JJ) (mariana->NN) (xxx->NNP) (xxx->NN) ')
('tags initial-> ', [('okay', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (okay->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('keeping', 'VBG'), ('it', 'PRP'), ('off', 'IN'), ('of', 'IN'), ('the', 'DT'), ('box', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (keeping->VBG) (it->PRP) (off->IN) (of->IN) (the->DT) (box->NN) ')
candidates to check:
1
descended from food: [['N'], 'grape', 25, 30]
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfec8d88>)
[('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('cherry', 'NN'), ('a', 'DT'), ('grape', 'NN'), ('and', 'CC'), ('an', 'DT'), ('orange', 'NN'), ('one', 'CD')]
['orange']
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('cherry', 'NN'), ('a', 'DT'), ('grape', 'NN'), ('and', 'CC'), ('an', 'DT'), ('orange', 'NN'), ('one', 'CD')])
('tags -> ', '     (we->PRP) (have->VBP) (a->DT) (cherry->NN) (a->DT) (grape->NN) (and->CC) (an->DT) (orange->NN) (one->CD) ')
('tags initial-> ', [('which', 'WDT'), ('one', 'CD'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (which->WDT) (one->CD) (do->VBP) (you->PRP) (want->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfed71b8>)
[('i', 'NN'), ('want', 'VBP'), ('the', 'DT'), ('orange', 'NN'), ('one', 'CD')]
['orange']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('the', 'DT'), ('orange', 'NN'), ('one', 'CD')])
('tags -> ', '     (i->NN) (want->VBP) (the->DT) (orange->NN) (one->CD) ')
candidates to check:
1
descended from food: [['N'], 'grape', 11, 16]
('tags initial-> ', [('the', 'DT'), ('grape', 'NN')])
('tags -> ', '     (the->DT) (grape->NN) ')
candidates to check:
1
descended from food: [['N'], 'grape', 10, 15]
('tags initial-> ', [('the', 'DT'), ('grape', 'NN')])
('tags -> ', '     (the->DT) (grape->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (xxx->NN) (i->NN) (want->VBP) (this->DT) ')
('tags initial-> ', [('i', 'JJ'), ('xxx', 'VBP'), ('like', 'IN'), ('this', 'DT'), ('one', 'NN')])
('tags -> ', '     (i->JJ) (xxx->VBP) (like->IN) (this->DT) (one->NN) ')
('tags initial-> ', [('this', 'DT')])
('tags -> ', '     (this->DT) ')
candidates to check:
1
descended from food: [['N'], 'grape', 15, 20]
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('a', 'DT'), ('grape', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (a->DT) (grape->NN) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('this', 'DT'), ('one', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (this->DT) (one->NN) ')
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('the', 'DT'), ('red', 'JJ'), ('one', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (i->NN) (like->IN) (the->DT) (red->JJ) (one->NN) (i->NN) (don->VBP) (t->NN) (like->IN) (this->DT) ')
('tags initial-> ', [('cherry', 'NN')])
('tags -> ', '     (cherry->NN) ')
('tags initial-> ', [('cherry', 'NN')])
('tags -> ', '     (cherry->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('ones', 'NNS'), ('do', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (what->WP) (ones->NNS) (do->VBP) (you->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('finish', 'VB'), ('that', 'DT'), ('mariana', 'NN'), ('before', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (you->PRP) (have->VBP) (to->TO) (finish->VB) (that->DT) (mariana->NN) (before->IN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('out', 'IN'), ('the', 'DT'), ('box', 'NN')])
('tags -> ', '     (xxx->NN) (out->IN) (the->DT) (box->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('you', 'PRP'), ('took', 'VBD'), ('them', 'PRP'), ('out', 'RP'), ('from', 'IN'), ('the', 'DT'), ('out', 'NN'), ('of', 'IN'), ('the', 'DT'), ('box', 'NN')])
('tags -> ', '     (why->WRB) (you->PRP) (took->VBD) (them->PRP) (out->RP) (from->IN) (the->DT) (out->NN) (of->IN) (the->DT) (box->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('the', 'DT'), ('box', 'NN'), ('for', 'IN')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (want->VB) (the->DT) (box->NN) (for->IN) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('eat', 'VB'), ('the', 'DT'), ('box', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (going->VBG) (to->TO) (eat->VB) (the->DT) (box->NN) ')
candidates to check:
3
descended from food: [['N'], 'popsicles', 24, 33]
('tags initial-> ', [('no', 'DT'), ('but', 'CC'), ('there', 'EX'), ('were', 'VBD'), ('popsicles', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('box', 'NN')])
('tags -> ', '     (no->DT) (but->CC) (there->EX) (were->VBD) (popsicles->NNS) (in->IN) (the->DT) (box->NN) ')
('tags initial-> ', [('there', 'EX'), ('were', 'VBD'), ('only', 'RB'), ('three', 'CD'), ('left', 'VBD'), ('mikey', 'NN')])
('tags -> ', '     (there->EX) (were->VBD) (only->RB) (three->CD) (left->VBD) (mikey->NN) ')
candidates to check:
3
('tags initial-> ', [('we', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('the', 'DT'), ('whole', 'JJ'), ('box', 'NN'), ('in', 'IN'), ('the', 'DT'), ('freezer', 'NN')])
('tags -> ', '     (we->PRP) (don->VBP) (t->JJ) (need->VBP) (the->DT) (whole->JJ) (box->NN) (in->IN) (the->DT) (freezer->NN) ')
candidates to check:
3
('tags initial-> ', [('but', 'CC'), ('those', 'DT'), ('those', 'DT'), ('in', 'IN'), ('m', 'NN'), ('in', 'IN'), ('boxes', 'NNS'), ('was', 'VBD'), ('in', 'IN'), ('in', 'IN'), ('a', 'DT'), ('box', 'NN'), ('xxx', 'NNP'), ('un', 'NN'), ('til', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (but->CC) (those->DT) (those->DT) (in->IN) (m->NN) (in->IN) (boxes->NNS) (was->VBD) (in->IN) (in->IN) (a->DT) (box->NN) (xxx->NNP) (un->NN) (til->NN) (tomorrow->NN) ')
candidates to check:
2
descended from food: [['N'], 'popsicles', 23, 32]
('tags initial-> ', [('there', 'EX'), ('re', 'VBZ'), ('no', 'DT'), ('more', 'RBR'), ('popsicles', 'NNS')])
('tags -> ', '     (there->EX) (re->VBZ) (no->DT) (more->RBR) (popsicles->NNS) ')
('tags initial-> ', [('no', 'DT'), ('more', 'RBR')])
('tags -> ', '     (no->DT) (more->RBR) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('remember', 'VB'), ('you', 'PRP'), ('gave', 'VBD'), ('one', 'CD'), ('to', 'TO'), ('pedro', 'VB'), ('one', 'CD'), ('to', 'TO'), ('joey', 'VB'), ('and', 'CC'), ('you', 'PRP'), ('had', 'VBD'), ('three', 'CD'), ('yesterday', 'NN')])
('tags -> ', '     (remember->VB) (you->PRP) (gave->VBD) (one->CD) (to->TO) (pedro->VB) (one->CD) (to->TO) (joey->VB) (and->CC) (you->PRP) (had->VBD) (three->CD) (yesterday->NN) ')
('tags initial-> ', [('and', 'CC'), ('mariana', 'VB'), ('had', 'VBD'), ('two', 'CD')])
('tags -> ', '     (and->CC) (mariana->VB) (had->VBD) (two->CD) ')
candidates to check:
2
descended from food: [['N'], 'popsicles', 36, 45]
('tags initial-> ', [('how', 'WRB'), ('can', 'MD'), ('you', 'PRP'), ('expect', 'VB'), ('to', 'TO'), ('be', 'VB'), ('more', 'JJR'), ('popsicles', 'NNS')])
('tags -> ', '     (how->WRB) (can->MD) (you->PRP) (expect->VB) (to->TO) (be->VB) (more->JJR) (popsicles->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('tomorrow', 'NN'), ('buy', 'VB'), ('more', 'JJR'), ('of', 'IN'), ('these', 'DT')])
('tags -> ', '     (tomorrow->NN) (buy->VB) (more->JJR) (of->IN) (these->DT) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('behave', 'VBP')])
('tags -> ', '     (if->IN) (you->PRP) (behave->VBP) ')
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('get', 'NN'), ('one', 'CD'), ('for', 'IN'), ('this', 'DT')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (get->NN) (one->CD) (for->IN) (this->DT) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('more', 'JJR'), ('for', 'IN'), ('them', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('uh', 'JJ'), ('d', 'NN'), ('we', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VBN'), ('na', 'TO'), ('have', 'VB'), ('no', 'DT'), ('more', 'JJR')])
('tags -> ', '     (no->DT) (more->JJR) (for->IN) (them->PRP) (be->VB) (cause->VBN) (uh->JJ) (d->NN) (we->PRP) (re->VBP) (not->RB) (gon->VBN) (na->TO) (have->VB) (no->DT) (more->JJR) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VBN'), ('na', 'TO'), ('have', 'VB'), ('no', 'DT'), ('more', 'JJR')])
('tags -> ', '     (we->PRP) (re->VBP) (not->RB) (gon->VBN) (na->TO) (have->VB) (no->DT) (more->JJR) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('more', 'JJR'), ('for', 'IN'), ('today', 'NN')])
('tags -> ', '     (no->DT) (more->JJR) (for->IN) (today->NN) ')
candidates to check:
2
descended from food: [['N'], 'popsicles', 31, 40]
('tags initial-> ', [('nuhhuh', 'RB'), ('when', 'WRB'), ('we', 'PRP'), ('get', 'VBP'), ('those', 'DT'), ('popsicles', 'NNS'), ('those', 'DT'), ('are', 'VBP'), ('for', 'IN'), ('the', 'DT'), ('picnic', 'NN')])
('tags -> ', '     (nuhhuh->RB) (when->WRB) (we->PRP) (get->VBP) (those->DT) (popsicles->NNS) (those->DT) (are->VBP) (for->IN) (the->DT) (picnic->NN) ')
candidates to check:
1
('tags initial-> ', [('those', 'DT'), ('are', 'VBP'), ('for', 'IN'), ('the', 'DT'), ('summer', 'NN')])
('tags -> ', '     (those->DT) (are->VBP) (for->IN) (the->DT) (summer->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('you', 'PRP'), ('cook', 'VBP')])
('tags -> ', '     (xxx->NN) (you->PRP) (cook->VBP) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('you', 'PRP'), ('cook', 'VBP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (know->VBP) (you->PRP) (cook->VBP) ')
candidates to check:
1
descended from food: [['N'], 'popsicles', 25, 34]
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('can', 'MD'), ('open', 'VB'), ('the', 'DT'), ('popsicles', 'NNS')])
('tags -> ', '     (and->CC) (i->NN) (can->MD) (open->VB) (the->DT) (popsicles->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('let', 'VB'), ('s', 'PRP'), ('finish', 'VB'), ('xxx', 'NNS')])
('tags -> ', '     (let->VB) (s->PRP) (finish->VB) (xxx->NNS) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 31, 39]
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('can', 'MD'), ('open', 'VB'), ('the', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (can->MD) (open->VB) (the->DT) (popsicle->NN) ')
('tags initial-> ', [('oh', 'NN'), ('i', 'NN'), ('see', 'VBP'), ('you', 'PRP'), ('can', 'MD')])
('tags -> ', '     (oh->NN) (i->NN) (see->VBP) (you->PRP) (can->MD) ')
('tags initial-> ', [('great', 'JJ'), ('mariana', 'NN')])
('tags -> ', '     (great->JJ) (mariana->NN) ')
candidates to check:
1
duck
duck duck 84
[('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (donald->JJ) (duck->NN) ')
('tags initial-> ', [('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('goofy', 'NN')])
('tags -> ', '     (no->DT) (that->WDT) (s->VBZ) (goofy->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('goofy', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (goofy->NN) ')
candidates to check:
1
('tags initial-> ', [('know', 'NNS'), ('who', 'WP'), ('wrote', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('letter', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (know->NNS) (who->WP) (wrote->VBD) (me->PRP) (a->DT) (letter->NN) (mikey->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('carmen', 'NNS')])
('tags -> ', '     (carmen->NNS) ')
('tags initial-> ', [('remember', 'VB'), ('carmen', 'NNS')])
('tags -> ', '     (remember->VB) (carmen->NNS) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('well', 'RB'), ('she', 'PRP'), ('wanted', 'VBD'), ('to', 'TO'), ('come', 'VB'), ('back', 'RB'), ('to', 'TO'), ('puerto', 'VB'), ('rico', 'NN')])
('tags -> ', '     (well->RB) (she->PRP) (wanted->VBD) (to->TO) (come->VB) (back->RB) (to->TO) (puerto->VB) (rico->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('she', 'PRP'), ('sent', 'VBD'), ('me', 'PRP'), ('this', 'DT'), ('letter', 'NN'), ('yesterday', 'NN')])
('tags -> ', '     (and->CC) (she->PRP) (sent->VBD) (me->PRP) (this->DT) (letter->NN) (yesterday->NN) ')
('tags initial-> ', [('you', 'PRP'), ('told', 'VBD'), ('xxx', 'CC'), ('he', 'PRP'), ('went', 'VBD'), ('away', 'RB')])
('tags -> ', '     (you->PRP) (told->VBD) (xxx->CC) (he->PRP) (went->VBD) (away->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NNS'), ('need', 'VBP'), ('her', 'PRP$')])
('tags -> ', '     (i->NNS) (need->VBP) (her->PRP$) ')
('tags initial-> ', [('why', 'WRB'), ('you', 'PRP'), ('need', 'VBP'), ('why', 'WRB'), ('you', 'PRP'), ('want', 'VBP'), ('xxx', 'JJ')])
('tags -> ', '     (why->WRB) (you->PRP) (need->VBP) (why->WRB) (you->PRP) (want->VBP) (xxx->JJ) ')
('tags initial-> ', [('oh', 'NN'), ('because', 'IN'), ('i', 'JJ'), ('enjoyed', 'VBD'), ('her', 'PRP$'), ('coming', 'VBG'), ('here', 'RB'), ('xxx', 'VB')])
('tags -> ', '     (oh->NN) (because->IN) (i->JJ) (enjoyed->VBD) (her->PRP$) (coming->VBG) (here->RB) (xxx->VB) ')
candidates to check:
2
('tags initial-> ', [('she', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('nice', 'JJ'), ('lady', 'NN'), ('wasn', 'NN'), ('t', 'NN'), ('she', 'PRP')])
('tags -> ', '     (she->PRP) (was->VBD) (a->DT) (nice->JJ) (lady->NN) (wasn->NN) (t->NN) (she->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('she', 'PRP'), ('told', 'VBD'), ('me', 'PRP'), ('to', 'TO'), ('say', 'VB'), ('hi', 'JJ'), ('q', 'NN'), ('to', 'TO'), ('you', 'PRP'), ('and', 'CC'), ('mariana', 'VB')])
('tags -> ', '     (she->PRP) (told->VBD) (me->PRP) (to->TO) (say->VB) (hi->JJ) (q->NN) (to->TO) (you->PRP) (and->CC) (mariana->VB) ')
candidates to check:
1
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('letter', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (letter->NN) ')
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('her', 'PRP$'), ('to', 'TO'), ('come', 'VB'), ('back', 'RB'), ('here', 'RB'), ('again', 'RB')])
('tags -> ', '     (but->CC) (i->JJ) (don->VBP) (t->NN) (want->VBP) (her->PRP$) (to->TO) (come->VB) (back->RB) (here->RB) (again->RB) ')
candidates to check:
1
descended from food: [['N'], 'honey', 10, 15]
honey
honey honey 304
[('why', 'WRB'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('why', 'WRB'), ('honey', 'NN')])
('tags -> ', '     (why->WRB) (honey->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('be', 'VB'), ('cause', 'VBN'), ('she', 'PRP'), ('always', 'RB'), ('says', 'VBZ'), ('that', 'IN')])
('tags -> ', '     (be->VB) (cause->NN) (be->VB) (cause->VBN) (she->PRP) (always->RB) (says->VBZ) (that->IN) ')
('tags initial-> ', [('what', 'WP'), ('does', 'VBZ'), ('she', 'PRP'), ('say', 'VB')])
('tags -> ', '     (what->WP) (does->VBZ) (she->PRP) (say->VB) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('always', 'RB'), ('say', 'VBP'), ('mariana', 'JJ'), ('mariana', 'JJ'), ('every', 'DT'), ('day', 'NN')])
('tags -> ', '     (she->PRP) (always->RB) (say->VBP) (mariana->JJ) (mariana->JJ) (every->DT) (day->NN) ')
candidates to check:
1
('tags initial-> ', [('every', 'DT'), ('day', 'NN')])
('tags -> ', '     (every->DT) (day->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('true', 'JJ'), ('mikey', 'NN')])
('tags -> ', '     (is->VBZ) (that->IN) (true->JJ) (mikey->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('she', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('say', 'VBP'), ('that', 'IN')])
('tags -> ', '     (she->PRP) (doesn->VBZ) (t->NNS) (say->VBP) (that->IN) ')
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('told', 'VBD'), ('her', 'PRP$')])
('tags -> ', '     (but->CC) (i->NN) (told->VBD) (her->PRP$) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('when', 'WRB'), ('when', 'WRB'), ('when', 'WRB'), ('you', 'PRP'), ('bring', 'VBP'), ('when', 'WRB'), ('you', 'PRP'), ('bring', 'VBP'), ('m', 'VB'), ('me', 'PRP'), ('xxx', 'VB'), ('the', 'DT'), ('xxx', 'NNP'), ('won', 'VBD'), ('t', 'NNS'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (when->WRB) (when->WRB) (when->WRB) (when->WRB) (you->PRP) (bring->VBP) (when->WRB) (you->PRP) (bring->VBP) (m->VB) (me->PRP) (xxx->VB) (the->DT) (xxx->NNP) (won->VBD) (t->NNS) (like->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('why', 'WRB'), ('he', 'PRP'), ('wants', 'VBZ'), ('his', 'PRP$'), ('cubby', 'NN'), ('to', 'TO'), ('be', 'VB'), ('there', 'RB')])
('tags -> ', '     (that->DT) (s->VBD) (why->WRB) (he->PRP) (wants->VBZ) (his->PRP$) (cubby->NN) (to->TO) (be->VB) (there->RB) ')
('tags initial-> ', [('oh', 'UH'), ('really', 'RB')])
('tags -> ', '     (oh->UH) (really->RB) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('nuhhuh', 'NN'), ('i', 'NN'), ('heard', 'VBD'), ('her', 'PRP$')])
('tags -> ', '     (nuhhuh->NN) (i->NN) (heard->VBD) (her->PRP$) ')
('tags initial-> ', [('uhhuh', 'JJ'), ('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->JJ) (uhhuh->NN) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('i', 'JJ'), ('heard', 'VBD'), ('her', 'PRP$')])
('tags -> ', '     (i->JJ) (heard->VBD) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('heard', 'VBD'), ('her', 'PRP$'), ('say', 'NN'), ('that', 'IN'), ('every', 'DT'), ('day', 'NN')])
('tags -> ', '     (i->JJ) (heard->VBD) (her->PRP$) (say->NN) (that->IN) (every->DT) (day->NN) ')
('tags initial-> ', [('mariana', 'NN'), ('mariana', 'NN')])
('tags -> ', '     (mariana->NN) (mariana->NN) ')
('tags initial-> ', [('when', 'WRB'), ('was', 'VBD'), ('i', 'NN')])
('tags -> ', '     (when->WRB) (was->VBD) (i->NN) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('i', 'NN'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('doctor', 'NN')])
('tags -> ', '     (when->WRB) (i->NN) (went->VBD) (to->TO) (the->DT) (doctor->NN) ')
('tags initial-> ', [('and', 'CC'), ('she', 'PRP'), ('stayed', 'VBD'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (and->CC) (she->PRP) (stayed->VBD) (with->IN) (you->PRP) ')
('tags initial-> ', [('oh', 'UH'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (oh->UH) (what->WP) (did->VBD) (you->PRP) (do->VB) ')
('tags initial-> ', [('um', 'IN'), ('we', 'PRP'), ('played', 'VBD')])
('tags -> ', '     (um->IN) (we->PRP) (played->VBD) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('played', 'VBD'), ('ghosts', 'NNS')])
('tags -> ', '     (we->PRP) (played->VBD) (ghosts->NNS) ')
candidates to check:
3
('tags initial-> ', [('mikey', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('ghost', 'NN'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('baby', 'NN'), ('and', 'CC'), ('carmen', 'NNS'), ('was', 'VBD'), ('the', 'DT'), ('mommy', 'NN')])
('tags -> ', '     (mikey->NN) (was->VBD) (the->DT) (ghost->NN) (and->CC) (i->NN) (was->VBD) (the->DT) (baby->NN) (and->CC) (carmen->NNS) (was->VBD) (the->DT) (mommy->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('i', 'NN'), ('was', 'VBD'), ('scaring', 'VBG'), ('you', 'PRP')])
('tags -> ', '     (and->CC) (i->NN) (was->VBD) (i->NN) (was->VBD) (scaring->VBG) (you->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('must', 'MD'), ('have', 'VB'), ('been', 'VBN'), ('fun', 'JJ'), ('huh', 'NN')])
('tags -> ', '     (must->MD) (have->VB) (been->VBN) (fun->JJ) (huh->NN) ')
('tags initial-> ', [('wan', 'NN'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('play', 'NN'), ('with', 'IN'), ('us', 'PRP')])
('tags -> ', '     (wan->NN) (t->NN) (t->NN) (a->DT) (play->NN) (with->IN) (us->PRP) ')
candidates to check:
1
('tags initial-> ', [('ghosts', 'NNS')])
('tags -> ', '     (ghosts->NNS) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('mikey', 'NN'), ('be', 'VB'), ('the', 'DT'), ('ghost', 'NN'), ('and', 'CC'), ('i', 'NN'), ('be', 'VB'), ('the', 'DT'), ('baby', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('be', 'VB'), ('the', 'DT'), ('mom', 'NN')])
('tags -> ', '     (and->CC) (mikey->NN) (be->VB) (the->DT) (ghost->NN) (and->CC) (i->NN) (be->VB) (the->DT) (baby->NN) (and->CC) (you->PRP) (be->VB) (the->DT) (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('mommy', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (the->DT) (mommy->NN) ')
candidates to check:
2
('tags initial-> ', [('zzz', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('real', 'JJ'), ('mommy', 'NN')])
('tags -> ', '     (zzz->NN) (i->NN) (m->VBP) (the->DT) (real->JJ) (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'WDT'), ('have', 'VBP'), ('to', 'TO'), ('pretend', 'VB'), ('mariana', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('mommy', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->WDT) (have->VBP) (to->TO) (pretend->VB) (mariana->NN) (i->NN) (m->VBP) (the->DT) (mommy->NN) ')
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('play', 'VB')])
('tags -> ', '     (but->CC) (you->PRP) (have->VBP) (to->TO) (play->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('now', 'RB')])
('tags -> ', '     (now->RB) ')
('tags initial-> ', [('maybe', 'RB'), ('when', 'WRB'), ('we', 'PRP'), ('re', 'VBP'), ('finished', 'VBN'), ('okay', 'NN')])
('tags -> ', '     (maybe->RB) (when->WRB) (we->PRP) (re->VBP) (finished->VBN) (okay->NN) ')
('tags initial-> ', [('now', 'RB')])
('tags -> ', '     (now->RB) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 41, 49]
('tags initial-> ', [('not', 'RB'), ('right', 'RB'), ('now', 'RB'), ('when', 'WRB'), ('you', 'PRP'), ('finish', 'VBP'), ('the', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (not->RB) (right->RB) (now->RB) (when->WRB) (you->PRP) (finish->VBP) (the->DT) (popsicle->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 17, 25]
('tags initial-> ', [('bite', 'VB'), ('your', 'PRP$'), ('popsicle', 'NN')])
('tags -> ', '     (bite->VB) (your->PRP$) (popsicle->NN) ')
('tags initial-> ', [('bite', 'VB'), ('your', 'PRP$'), ('popsicle', 'NN'), ('mariana', 'NN')])
('tags -> ', '     (bite->VB) (your->PRP$) (popsicle->NN) (mariana->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('i', 'JJ'), ('got', 'VBD'), ('mine', 'NN')])
('tags -> ', '     (i->NN) (got->VBD) (i->JJ) (got->VBD) (mine->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('see', 'VB'), ('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (see->VB) (look->NN) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('bite', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (bite->VBP) (it->PRP) ')
('tags initial-> ', [('oh', 'UH'), ('that', 'DT'), ('s', 'VBD'), ('cold', 'NN')])
('tags -> ', '     (oh->UH) (that->DT) (s->VBD) (cold->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'RB'), ('bite', 'NN'), ('it', 'PRP')])
('tags -> ', '     (xxx->RB) (bite->NN) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('do', 'VB'), ('this', 'DT')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (do->VB) (this->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('hot', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (hot->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('cold', 'JJ')])
('tags -> ', '     (they->PRP) (re->VBP) (cold->JJ) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'NN'), ('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->NN) (zzz->NN) (zzz->NN) ')
('tags initial-> ', [('supposed', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('cold', 'JJ'), ('mariana', 'NN')])
('tags -> ', '     (supposed->VBN) (to->TO) (be->VB) (cold->JJ) (mariana->NN) ')
('tags initial-> ', [('has', 'VBZ'), ('to', 'TO'), ('be', 'VB'), ('cold', 'JJ')])
('tags -> ', '     (has->VBZ) (to->TO) (be->VB) (cold->JJ) ')
('tags initial-> ', [('but', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('cold', 'NN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (but->CC) (it->PRP) (s->VBZ) (cold->NN) (for->IN) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('xxx', 'NNS'), ('supposed', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN')])
('tags -> ', '     (mom->NN) (xxx->NNS) (supposed->VBD) (to->TO) (go->VB) (to->TO) (the->DT) (store->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 9, 17]
('tags initial-> ', [('my', 'PRP$'), ('popsicle', 'NN'), ('melting', 'NN')])
('tags -> ', '     (my->PRP$) (popsicle->NN) (melting->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('it', 'PRP'), ('was', 'VBD'), ('so', 'RB'), ('hot', 'JJ'), ('out', 'RP'), ('yesterday', 'NN')])
('tags -> ', '     (yeah->NN) (it->PRP) (was->VBD) (so->RB) (hot->JJ) (out->RP) (yesterday->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('mommy', 'NN'), ('but', 'CC'), ('mine', 'JJ'), ('wasn', 'NN'), ('t', 'NN')])
('tags -> ', '     (mommy->NN) (but->CC) (mine->JJ) (wasn->NN) (t->NN) ')
candidates to check:
3
('tags initial-> ', [('do', 'VB'), ('something', 'NN'), ('rock', 'NN'), ('and', 'CC'), ('roll', 'NN')])
('tags -> ', '     (do->VB) (something->NN) (rock->NN) (and->CC) (roll->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'NN'), ('i', 'NNS'), ('have', 'VBP'), ('so', 'RB'), ('many', 'JJ'), ('things', 'NNS'), ('to', 'TO'), ('do', 'VB'), ('mikey', 'VB')])
('tags -> ', '     (oh->NN) (i->NNS) (have->VBP) (so->RB) (many->JJ) (things->NNS) (to->TO) (do->VB) (mikey->VB) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('to', 'TO'), ('make', 'VB'), ('phone', 'NN'), ('calls', 'NNS')])
('tags -> ', '     (i->NN) (got->VBD) (to->TO) (make->VB) (phone->NN) (calls->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (no->DT) (look->NN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('rock', 'NN'), ('and', 'CC'), ('roll', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (rock->NN) (and->CC) (roll->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('hungry', 'NN')])
('tags -> ', '     (xxx->NN) (hungry->NN) ')
candidates to check:
2
('tags initial-> ', [('see', 'VB'), ('i', 'JJ'), ('bet', 'NN'), ('you', 'PRP'), ('it', 'PRP'), ('do', 'VB'), ('rock', 'NN'), ('and', 'CC'), ('roll', 'NN')])
('tags -> ', '     (see->VB) (i->JJ) (bet->NN) (you->PRP) (it->PRP) (do->VB) (rock->NN) (and->CC) (roll->NN) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('about', 'IN'), ('rock', 'NN'), ('and', 'CC'), ('roll', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (how->WRB) (do->VB) (you->PRP) (know->VB) (about->IN) (rock->NN) (and->CC) (roll->NN) (mikey->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('how', 'WRB'), ('they', 'PRP'), ('got', 'VBD'), ('their', 'PRP$'), ('hair', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (how->WRB) (they->PRP) (got->VBD) (their->PRP$) (hair->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'VB'), ('me', 'PRP'), ('wanted', 'JJ'), ('to', 'TO'), ('buy', 'VB'), ('clothes', 'NNS'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (mommy->VB) (me->PRP) (wanted->JJ) (to->TO) (buy->VB) (clothes->NNS) (for->IN) (me->PRP) ')
('tags initial-> ', [('we', 'PRP'), ('will', 'MD')])
('tags -> ', '     (we->PRP) (will->MD) ')
('tags initial-> ', [('we', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (we->PRP) (did->VBD) ')
('tags initial-> ', [('we', 'PRP'), ('go', 'VBP'), ('ing', 'VBG')])
('tags -> ', '     (we->PRP) (go->VBP) (ing->VBG) ')
('tags initial-> ', [('but', 'CC'), ('me', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('again', 'RB'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (but->CC) (me->PRP) (want->VBP) (to->TO) (go->VB) (again->RB) (with->IN) (you->PRP) ')
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('again', 'RB'), ('don', 'VB'), ('t', 'NN'), ('worry', 'NN')])
('tags -> ', '     (we->PRP) (re->VBP) (going->VBG) (again->RB) (don->VB) (t->NN) (worry->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('then', 'RB'), ('let', 'VB'), ('s', 'PRP'), ('go', 'VB')])
('tags -> ', '     (xxx->NN) (then->RB) (let->VB) (s->PRP) (go->VB) ')
('tags initial-> ', [('mikey', 'NN')])
('tags -> ', '     (mikey->NN) ')
('tags initial-> ', [('mikey', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (mikey->NN) (xxx->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('we', 'PRP'), ('get', 'VBP'), ('xxx', 'JJ')])
('tags -> ', '     (don->NN) (t->NN) (we->PRP) (get->VBP) (xxx->JJ) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('we', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('about', 'IN'), ('clothes', 'NNS')])
('tags -> ', '     (no->DT) (we->PRP) (re->VBP) (talking->VBG) (about->IN) (clothes->NNS) ')
candidates to check:
1
('tags initial-> ', [('not', 'RB'), ('toys', 'VB')])
('tags -> ', '     (not->RB) (toys->VB) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'VB'), ('a', 'DT'), ('school', 'NN'), ('bag', 'NN')])
('tags -> ', '     (xxx->VB) (a->DT) (school->NN) (bag->NN) ')
('tags initial-> ', [('what', 'WP'), ('for', 'IN')])
('tags -> ', '     (what->WP) (for->IN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('a', 'DT'), ('school', 'NN'), ('bag', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (need->VBP) (a->DT) (school->NN) (bag->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('told', 'VBD'), ('me', 'PRP'), ('when', 'WRB'), ('we', 'PRP'), ('get', 'VBP'), ('back', 'RB'), ('we', 'PRP'), ('get', 'VBP'), ('a', 'DT'), ('school', 'NN'), ('bag', 'NN')])
('tags -> ', '     (you->PRP) (told->VBD) (me->PRP) (when->WRB) (we->PRP) (get->VBP) (back->RB) (we->PRP) (get->VBP) (a->DT) (school->NN) (bag->NN) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('school', 'NN'), ('bag', 'NN'), ('is', 'VBZ'), ('very', 'RB'), ('big', 'JJ'), ('and', 'CC'), ('very', 'RB'), ('expensive', 'JJ')])
('tags -> ', '     (that->DT) (school->NN) (bag->NN) (is->VBZ) (very->RB) (big->JJ) (and->CC) (very->RB) (expensive->JJ) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('got', 'VBD'), ('two', 'CD'), ('school', 'NN'), ('bags', 'NNS'), ('from', 'IN'), ('mikey', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (got->VBD) (two->CD) (school->NN) (bags->NNS) (from->IN) (mikey->NN) ')
candidates to check:
3
('tags initial-> ', [('besides', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('a', 'DT'), ('school', 'NN'), ('bag', 'NN')])
('tags -> ', '     (besides->IN) (you->PRP) (don->VBP) (t->JJ) (need->VBP) (a->DT) (school->NN) (bag->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('take', 'VB'), ('in', 'IN'), ('yours', 'NNS')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (have->VB) (to->TO) (take->VB) (in->IN) (yours->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('the', 'DT'), ('red', 'JJ'), ('one', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (i->NN) (don->VBP) (t->NN) (like->IN) (the->DT) (red->JJ) (one->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('red', 'JJ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (red->JJ) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('g', 'NN'), ('i', 'NN'), ('joe', 'NN')])
('tags -> ', '     (you->PRP) (like->IN) (the->DT) (g->NN) (i->NN) (joe->NN) ')
candidates to check:
2
('tags initial-> ', [('g', 'NN'), ('i', 'NN'), ('joe', 'VBP'), ('the', 'DT'), ('american', 'JJ'), ('hero', 'NN')])
('tags -> ', '     (g->NN) (i->NN) (joe->VBP) (the->DT) (american->JJ) (hero->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('like', 'VBP'), ('g', 'JJ'), ('g', 'NN'), ('i', 'NN'), ('joe', 'NN')])
('tags -> ', '     (i->NNS) (like->VBP) (g->JJ) (g->NN) (i->NN) (joe->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('the', 'DT'), ('g', 'NN'), ('i', 'NN'), ('joe', 'NN')])
('tags -> ', '     (i->NN) (like->IN) (the->DT) (g->NN) (i->NN) (joe->NN) ')
candidates to check:
1
('tags initial-> ', [('matches', 'NNS'), ('my', 'PRP$'), ('clothes', 'NNS')])
('tags -> ', '     (matches->NNS) (my->PRP$) (clothes->NNS) ')
candidates to check:
9
('tags initial-> ', [('mikey', 'NN'), ('two', 'CD'), ('more', 'JJR'), ('years', 'NNS'), ('mikey', 'RB'), ('when', 'WRB'), ('you', 'PRP'), ('go', 'VBP'), ('to', 'TO'), ('first', 'RB'), ('grade', 'VB'), ('i', 'NN'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('you', 'PRP'), ('a', 'DT'), ('very', 'RB'), ('nice', 'JJ'), ('school', 'NN'), ('bag', 'NN')])
('tags -> ', '     (mikey->NN) (two->CD) (more->JJR) (years->NNS) (mikey->RB) (when->WRB) (you->PRP) (go->VBP) (to->TO) (first->RB) (grade->VB) (i->NN) (m->NN) (gon->NN) (na->TO) (get->VB) (you->PRP) (a->DT) (very->RB) (nice->JJ) (school->NN) (bag->NN) ')
('tags initial-> ', [('in', 'IN'), ('the', 'DT')])
('tags -> ', '     (in->IN) (the->DT) ')
candidates to check:
2
('tags initial-> ', [('two', 'CD'), ('more', 'JJR'), ('years', 'NNS')])
('tags -> ', '     (two->CD) (more->JJR) (years->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->IN) (you->PRP) (don->VBP) (t->JJ) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('g', 'VB'), ('i', 'JJ'), ('joe', 'NN'), ('isn', 'NN'), ('t', 'IN'), ('g', 'NN'), ('i', 'NN'), ('joe', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (and->CC) (g->VB) (i->JJ) (joe->NN) (isn->NN) (t->IN) (g->NN) (i->NN) (joe->NN) (is->VBZ) ')
candidates to check:
3
('tags initial-> ', [('mommy', 'NN'), ('then', 'RB'), ('let', 'VB'), ('s', 'NN'), ('go', 'VB'), ('buy', 'NN'), ('clothes', 'NNS')])
('tags -> ', '     (mommy->NN) (then->RB) (let->VB) (s->NN) (go->VB) (buy->NN) (clothes->NNS) ')
('tags initial-> ', [('not', 'RB'), ('right', 'RB'), ('now', 'RB'), ('mariana', 'VB')])
('tags -> ', '     (not->RB) (right->RB) (now->RB) (mariana->VB) ')
candidates to check:
1
('tags initial-> ', [('let', 'VB'), ('s', 'JJ'), ('meet', 'VB'), ('in', 'IN'), ('the', 'DT'), ('steps', 'NNS')])
('tags -> ', '     (let->VB) (s->JJ) (meet->VB) (in->IN) (the->DT) (steps->NNS) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('mikey', 'NN'), ('comes', 'VBZ'), ('back', 'RB'), ('from', 'IN'), ('school', 'NN'), ('we', 'PRP'), ('can', 'MD'), ('go', 'VB')])
('tags -> ', '     (when->WRB) (mikey->NN) (comes->VBZ) (back->RB) (from->IN) (school->NN) (we->PRP) (can->MD) (go->VB) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('finished', 'VBD'), ('the', 'DT'), ('pocketbook', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (finished->VBD) (the->DT) (pocketbook->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('school', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (going->VBG) (to->TO) (school->NN) ')
('tags initial-> ', [('not', 'RB'), ('yet', 'RB')])
('tags -> ', '     (not->RB) (yet->RB) ')
('tags initial-> ', [('are', 'VBP'), ('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('go', 'VB'), ('cruising', 'VBG'), ('over', 'RB'), ('now', 'RB')])
('tags -> ', '     (are->VBP) (we->PRP) (going->VBG) (to->TO) (go->VB) (cruising->VBG) (over->RB) (now->RB) ')
('tags initial-> ', [('not', 'RB'), ('yet', 'RB')])
('tags -> ', '     (not->RB) (yet->RB) ')
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('cruising', 'NN'), ('over', 'IN')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (go->NN) (cruising->NN) (over->IN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('to', 'TO'), ('school', 'NN'), ('mikey', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (to->TO) (school->NN) (mikey->NN) (xxx->NN) ')
('tags initial-> ', [('no', 'DT'), ('me', 'PRP'), ('me', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (no->DT) (me->PRP) (me->PRP) (are->VBP) ')
('tags initial-> ', [('me', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (me->PRP) (are->VBP) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (go->VB) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBD'), ('go', 'VBP'), ('to', 'TO'), ('kindergarten', 'VB')])
('tags -> ', '     (i->NN) (ll->VBD) (go->VBP) (to->TO) (kindergarten->VB) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB'), ('kindergarten', 'VB')])
('tags -> ', '     (mommy->NN) (i->NN) (m->VBP) (gon->NN) (na->TO) (go->VB) (kindergarten->VB) ')
('tags initial-> ', [('yes', 'NNS'), ('you', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (yes->NNS) (you->PRP) (are->VBP) ')
('tags initial-> ', [('me', 'PRP'), ('too', 'RB'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (me->PRP) (too->RB) (with->IN) (me->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VB) (na->TO) (go->VB) (with->IN) (me->PRP) ')
('tags initial-> ', [('nuhhuh', 'RB'), ('xxx', 'MD'), ('not', 'RB'), ('yours', 'VB')])
('tags -> ', '     (nuhhuh->RB) (xxx->MD) (not->RB) (yours->VB) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('mom', 'NN'), ('mine', 'NN'), ('kindergarten', 'NN'), ('is', 'VBZ'), ('yellow', 'JJ')])
('tags -> ', '     (this->DT) (mom->NN) (mine->NN) (kindergarten->NN) (is->VBZ) (yellow->JJ) ')
('tags initial-> ', [('not', 'RB'), ('black', 'JJ')])
('tags -> ', '     (not->RB) (black->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('who', 'WP'), ('told', 'VBD'), ('who', 'WP'), ('told', 'VBD'), ('you', 'PRP'), ('that', 'IN'), ('mikey', 'JJ'), ('s', 'JJ'), ('school', 'NN'), ('is', 'VBZ'), ('black', 'JJ'), ('hey', 'NN'), ('mariana', 'NN')])
('tags -> ', '     (who->WP) (told->VBD) (who->WP) (told->VBD) (you->PRP) (that->IN) (mikey->JJ) (s->JJ) (school->NN) (is->VBZ) (black->JJ) (hey->NN) (mariana->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('mom', 'NN')])
('tags -> ', '     (no->DT) (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('kindergarten', 'NN'), ('is', 'VBZ'), ('black', 'JJ')])
('tags -> ', '     (in->IN) (the->DT) (kindergarten->NN) (is->VBZ) (black->JJ) ')
('tags initial-> ', [('my', 'PRP$'), ('my', 'PRP$'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (my->PRP$) (my->PRP$) (my->PRP$) (xxx->NN) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'JJ'), ('black', 'JJ')])
('tags -> ', '     (oh->UH) (xxx->JJ) (black->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('green', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBD) (green->JJ) ')
('tags initial-> ', [('black', 'JJ')])
('tags -> ', '     (black->JJ) ')
('tags initial-> ', [('green', 'JJ')])
('tags -> ', '     (green->JJ) ')
('tags initial-> ', [('green', 'JJ')])
('tags -> ', '     (green->JJ) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('xxx', 'NN'), ('green', 'NN')])
('tags -> ', '     (xxx->NN) (green->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('zzz', 'NN'), ('now', 'RB'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (zzz->NN) (now->RB) (you->PRP) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('my', 'PRP$'), ('my', 'PRP$'), ('school', 'NN'), ('s', 'NN'), ('red', 'VBD')])
('tags -> ', '     (my->PRP$) (my->PRP$) (my->PRP$) (school->NN) (s->NN) (red->VBD) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('mikey', 'NN'), ('s', 'JJ'), ('school', 'NN'), ('is', 'VBZ'), ('red', 'JJ')])
('tags -> ', '     (mikey->NN) (s->JJ) (school->NN) (is->VBZ) (red->JJ) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('my', 'PRP$'), ('kindergarten', 'NN'), ('is', 'VBZ'), ('yellow', 'JJ')])
('tags -> ', '     (and->CC) (my->PRP$) (kindergarten->NN) (is->VBZ) (yellow->JJ) ')
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('making', 'VBG'), ('up', 'RP'), ('things', 'NNS'), ('mariana', 'NNS')])
('tags -> ', '     (now->RB) (you->PRP) (re->VBP) (making->VBG) (up->RP) (things->NNS) (mariana->NNS) ')
candidates to check:
1
('tags initial-> ', [('our', 'PRP$'), ('kindergarten', 'NNS'), ('black', 'JJ')])
('tags -> ', '     (our->PRP$) (kindergarten->NNS) (black->JJ) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('mikey', 'NN'), ('check', 'NN'), ('and', 'CC'), ('see', 'VB'), ('what', 'WP'), ('time', 'NN'), ('it', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (oh->UH) (mikey->NN) (check->NN) (and->CC) (see->VB) (what->WP) (time->NN) (it->PRP) (is->VBZ) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('things', 'NNS'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (we->PRP) (have->VBP) (a->DT) (lot->NN) (of->IN) (things->NNS) (to->TO) (do->VB) ')
('tags initial-> ', [('i', 'NNS'), ('do', 'VBP')])
('tags -> ', '     (i->NNS) (do->VBP) ')
('tags initial-> ', [('i', 'NN'), ('do', 'VBP'), ('too', 'RB')])
('tags -> ', '     (i->NN) (do->VBP) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('school', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (xxx->JJ) (school->NN) (mikey->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('i', 'NNS'), ('need', 'VBP'), ('to', 'TO'), ('put', 'VB'), ('our', 'PRP$'), ('clothes', 'NNS'), ('away', 'RB')])
('tags -> ', '     (xxx->NN) (i->NNS) (need->VBP) (to->TO) (put->VB) (our->PRP$) (clothes->NNS) (away->RB) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('school', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (going->VBG) (to->TO) (school->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('need', 'VBP'), ('to', 'TO'), ('put', 'VB'), ('my', 'PRP$'), ('clothes', 'NNS'), ('away', 'RP'), ('first', 'JJ')])
('tags -> ', '     (but->CC) (i->JJ) (need->VBP) (to->TO) (put->VB) (my->PRP$) (clothes->NNS) (away->RP) (first->JJ) ')
candidates to check:
2
('tags initial-> ', [('okay', 'RB'), ('good', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (okay->RB) (good->JJ) (boy->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('helping', 'VBG'), ('mommy', 'NNS')])
('tags -> ', '     (xxx->NN) (helping->VBG) (mommy->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('my', 'PRP$'), ('clothes', 'NNS'), ('away', 'RB')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (put->VB) (my->PRP$) (clothes->NNS) (away->RB) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('put', 'VB'), ('my', 'PRP$'), ('clothes', 'NNS'), ('on', 'IN'), ('by', 'IN'), ('myself', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (put->VB) (my->PRP$) (clothes->NNS) (on->IN) (by->IN) (myself->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('can', 'MD'), ('i', 'VB'), ('put', 'VB'), ('my', 'PRP$')])
('tags -> ', '     (mommy->NN) (can->MD) (i->VB) (put->VB) (my->PRP$) ')
('tags initial-> ', [('there', 'RB'), ('you', 'PRP'), ('go', 'VBP')])
('tags -> ', '     (there->RB) (you->PRP) (go->VBP) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('can', 'MD'), ('i', 'VB'), ('put', 'VB'), ('my', 'PRP$'), ('clothes', 'NNS'), ('on', 'IN'), ('by', 'IN'), ('myself', 'NN')])
('tags -> ', '     (mommy->NN) (can->MD) (i->VB) (put->VB) (my->PRP$) (clothes->NNS) (on->IN) (by->IN) (myself->NN) ')
('tags initial-> ', [('you', 'PRP'), ('sure', 'VBP'), ('can', 'MD')])
('tags -> ', '     (you->PRP) (sure->VBP) (can->MD) ')
candidates to check:
1
('tags initial-> ', [('thanks', 'NNS')])
('tags -> ', '     (thanks->NNS) ')
candidates to check:
2
descended from food: [['N'], 'honey', 28, 33]
honey
honey honey 304
[('you', 'PRP'), ('finish', 'VBP'), ('that', 'IN'), ('first', 'JJ'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('you', 'PRP'), ('finish', 'VBP'), ('that', 'IN'), ('first', 'JJ'), ('honey', 'NN')])
('tags -> ', '     (you->PRP) (finish->VBP) (that->IN) (first->JJ) (honey->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('go', 'VB'), ('anywhere', 'RB')])
('tags -> ', '     (then->RB) (you->PRP) (can->MD) (go->VB) (anywhere->RB) ')
('tags initial-> ', [('anywhere', 'RB')])
('tags -> ', '     (anywhere->RB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('coat', 'NN')])
('tags -> ', '     (xxx->NN) (coat->NN) ')
('tags initial-> ', [('oh', 'UH'), ('no', 'DT'), ('don', 'NN'), ('t', 'RB'), ('do', 'VBP'), ('that', 'DT'), ('mikey', 'NN'), ('please', 'NN')])
('tags -> ', '     (oh->UH) (no->DT) (don->NN) (t->RB) (do->VBP) (that->DT) (mikey->NN) (please->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN')])
('tags -> ', '     (don->NN) (t->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('this', 'DT'), ('one', 'CD'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (this->DT) (one->CD) (over->IN) (here->RB) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('xxx', 'VB')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (xxx->VB) ')
('tags initial-> ', [('mikey', 'NN'), ('put', 'VBD'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (mikey->NN) (put->VBD) (it->PRP) (over->IN) (here->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('better', 'JJR'), ('mariana', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (better->JJR) (mariana->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'NN'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (be->VB) (cause->NN) (i->NN) (like->IN) (that->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('the', 'DT'), ('bills', 'NNS')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (get->VB) (the->DT) (bills->NNS) ')
('tags initial-> ', [('bye', 'NN'), ('mikey', 'NN')])
('tags -> ', '     (bye->NN) (mikey->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('that', 'IN')])
('tags -> ', '     (you->PRP) (like->VBP) (that->IN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('leave', 'VB'), ('the', 'DT'), ('paper', 'NN'), ('off', 'IN')])
('tags -> ', '     (leave->VB) (the->DT) (paper->NN) (off->IN) ')
('tags initial-> ', [('xxx', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('gon', 'NN'), ('na', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (xxx->RB) (be->VB) (cause->NN) (it->PRP) (s->VBZ) (gon->NN) (na->TO) (xxx->VB) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('leave', 'VBP'), ('the', 'DT'), ('paper', 'NN'), ('off', 'IN'), ('they', 'PRP'), ('will', 'MD'), ('fill', 'VB')])
('tags -> ', '     (if->IN) (you->PRP) (leave->VBP) (the->DT) (paper->NN) (off->IN) (they->PRP) (will->MD) (fill->VB) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('might', 'MD'), ('fill', 'VB')])
('tags -> ', '     (might->MD) (fill->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
duck
duck duck 84
[('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (donald->JJ) (duck->NN) ')
candidates to check:
1
duck
duck duck 84
[('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN'), ('mom', 'NN')]
['duck']
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN'), ('mom', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (donald->JJ) (duck->NN) (mom->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (like->IN) (it->PRP) ')
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('taste', 'VB'), ('it', 'PRP')])
('tags -> ', '     (let->VB) (me->PRP) (taste->VB) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('tastes', 'VBZ'), ('good', 'JJ'), ('mommy', 'NN')])
('tags -> ', '     (it->PRP) (tastes->VBZ) (good->JJ) (mommy->NN) ')
candidates to check:
2
('tags initial-> ', [('tastes', 'NNS'), ('good', 'JJ'), ('mama', 'NN')])
('tags -> ', '     (tastes->NNS) (good->JJ) (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('h', 'NN')])
('tags -> ', '     (a->DT) (h->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('we', 'PRP'), ('change', 'VB'), ('the', 'DT'), ('places', 'NNS')])
('tags -> ', '     (can->MD) (we->PRP) (change->VB) (the->DT) (places->NNS) ')
('tags initial-> ', [('too', 'RB'), ('sweet', 'JJ')])
('tags -> ', '     (too->RB) (sweet->JJ) ')
('tags initial-> ', [('too', 'RB'), ('sweet', 'JJ'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (too->RB) (sweet->JJ) (for->IN) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('change', 'NN')])
('tags -> ', '     (change->NN) ')
candidates to check:
1
('tags initial-> ', [('switch', 'NN')])
('tags -> ', '     (switch->NN) ')
candidates to check:
1
('tags initial-> ', [('switch', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (switch->NN) (xxx->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('beat', 'VB'), ('my', 'PRP$'), ('me', 'PRP'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (beat->VB) (my->PRP$) (me->PRP) (up->RP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('beating', 'VBG'), ('you', 'PRP'), ('up', 'RP'), ('huh', 'NNS')])
('tags -> ', '     (i->JJ) (m->VBP) (beating->VBG) (you->PRP) (up->RP) (huh->NNS) ')
('tags initial-> ', [('xxx', 'JJ'), ('let', 'VB'), ('me', 'PRP'), ('see', 'VB'), ('xxx', 'JJ')])
('tags -> ', '     (xxx->JJ) (let->VB) (me->PRP) (see->VB) (xxx->JJ) ')
('tags initial-> ', [('mariana', 'NNS'), ('too', 'RB'), ('whoa', 'VBP')])
('tags -> ', '     (mariana->NNS) (too->RB) (whoa->VBP) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('eating', 'VBG'), ('so', 'RB'), ('fast', 'RB')])
('tags -> ', '     (they->PRP) (re->VBP) (eating->VBG) (so->RB) (fast->RB) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('s', 'NN'), ('eating', 'VBG'), ('a', 'DT'), ('whole', 'JJ'), ('bunch', 'NN')])
('tags -> ', '     (mommy->NN) (s->NN) (eating->VBG) (a->DT) (whole->JJ) (bunch->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('too', 'RB'), ('sweet', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (too->RB) (sweet->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('fine', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (fine->JJ) ')
('tags initial-> ', [('not', 'RB'), ('sweet', 'VB')])
('tags -> ', '     (not->RB) (sweet->VB) ')
('tags initial-> ', [('fine', 'NN')])
('tags -> ', '     (fine->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('get', 'NN'), ('one', 'CD'), ('of', 'IN'), ('these', 'DT')])
('tags -> ', '     (i->NN) (wan->VBP) (t->NN) (t->NN) (a->DT) (get->NN) (one->CD) (of->IN) (these->DT) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('you', 'PRP'), ('like', 'IN'), ('eating', 'VBG'), ('those', 'DT')])
('tags -> ', '     (you->PRP) (like->IN) (you->PRP) (like->IN) (eating->VBG) (those->DT) ')
('tags initial-> ', [('yes', 'NNS'), ('i', 'NNS'), ('do', 'VBP')])
('tags -> ', '     (yes->NNS) (i->NNS) (do->VBP) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('mommy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (no->DT) (mommy->NN) (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('that', 'IN'), ('all', 'DT'), ('dark', 'NN'), ('and', 'CC'), ('goopy', 'NN'), ('o', 'NN')])
('tags -> ', '     (you->PRP) (like->VBP) (that->IN) (all->DT) (dark->NN) (and->CC) (goopy->NN) (o->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('we', 'PRP'), ('saw', 'VBD'), ('this', 'DT'), ('on', 'IN'), ('t', 'NN'), ('v', 'NN')])
('tags -> ', '     (mommy->NN) (we->PRP) (saw->VBD) (this->DT) (on->IN) (t->NN) (v->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('which', 'WDT'), ('program', 'NN'), ('is', 'VBZ'), ('that', 'IN'), ('mikey', 'NN')])
('tags -> ', '     (which->WDT) (program->NN) (is->VBZ) (that->IN) (mikey->NN) ')
candidates to check:
3
('tags initial-> ', [('love', 'NN'), ('tales', 'NNS')])
('tags -> ', '     (love->NN) (tales->NNS) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
duck
duck duck 84
[('duck', 'NN'), ('tales', 'NNS')]
['duck']
('tags initial-> ', [('duck', 'NN'), ('tales', 'NNS')])
('tags -> ', '     (duck->NN) (tales->NNS) ')
candidates to check:
1
duck
duck duck 84
[('this', 'DT'), ('xxx', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('tales', 'NNS')]
['duck']
('tags initial-> ', [('this', 'DT'), ('xxx', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('tales', 'NNS')])
('tags -> ', '     (this->DT) (xxx->NN) (was->VBD) (the->DT) (duck->NN) (tales->NNS) ')
('tags initial-> ', [('not', 'RB'), ('mickey', 'JJ'), ('mouse', 'NN')])
('tags -> ', '     (not->RB) (mickey->JJ) (mouse->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('xxx', 'NNP'), ('mickey', 'NN'), ('mouse', 'NN')])
('tags -> ', '     (xxx->JJ) (xxx->NNP) (mickey->NN) (mouse->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('mickey', 'NN'), ('mouse', 'NN'), ('dog', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (mickey->NN) (mouse->NN) (dog->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('pluto', 'NN'), ('is', 'VBZ'), ('was', 'VBD'), ('that', 'IN'), ('xxx', 'NN'), ('was', 'VBD')])
('tags -> ', '     (and->CC) (that->DT) (pluto->NN) (is->VBZ) (was->VBD) (that->IN) (xxx->NN) (was->VBD) ')
candidates to check:
3
duck
duck duck 84
[('like', 'IN'), ('the', 'DT'), ('duck', 'NN'), ('tales', 'NNS')]
['duck']
('tags initial-> ', [('like', 'IN'), ('the', 'DT'), ('duck', 'NN'), ('tales', 'NNS')])
('tags -> ', '     (like->IN) (the->DT) (duck->NN) (tales->NNS) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
4
duck
duck duck 84
[('the', 'DT'), ('duck', 'NN'), ('tales', 'VBZ'), ('don', 'JJ'), ('t', 'NN'), ('got', 'VBD'), ('a', 'DT'), ('dog', 'NN')]
['duck']
('tags initial-> ', [('the', 'DT'), ('duck', 'NN'), ('tales', 'VBZ'), ('don', 'JJ'), ('t', 'NN'), ('got', 'VBD'), ('a', 'DT'), ('dog', 'NN')])
('tags -> ', '     (the->DT) (duck->NN) (tales->VBZ) (don->JJ) (t->NN) (got->VBD) (a->DT) (dog->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('belongs', 'VBZ'), ('to', 'TO'), ('the', 'DT'), ('song', 'NN')])
('tags -> ', '     (it->PRP) (belongs->VBZ) (to->TO) (the->DT) (song->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('goes', 'VBZ'), ('xxx', 'JJ'), ('bingo', 'NNS'), ('remember', 'VB')])
('tags -> ', '     (it->PRP) (goes->VBZ) (xxx->JJ) (bingo->NNS) (remember->VB) ')
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('a', 'DT')])
('tags -> ', '     (there->EX) (was->VBD) (a->DT) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('dog', 'NN'), ('named', 'VBN'), ('bingo', 'NN'), ('was', 'VBD'), ('his', 'PRP$'), ('name', 'NN'), ('oh', 'NN')])
('tags -> ', '     (a->DT) (dog->NN) (named->VBN) (bingo->NN) (was->VBD) (his->PRP$) (name->NN) (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('xxx', 'NN'), ('who', 'WP'), ('had', 'VBD'), ('a', 'DT'), ('dog', 'NN'), ('and', 'CC'), ('bingo', 'NN'), ('was', 'VBD'), ('his', 'PRP$'), ('name', 'NN'), ('oh', 'NN')])
('tags -> ', '     (there->EX) (was->VBD) (xxx->NN) (who->WP) (had->VBD) (a->DT) (dog->NN) (and->CC) (bingo->NN) (was->VBD) (his->PRP$) (name->NN) (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('xxx', 'NN'), ('who', 'WP'), ('had', 'VBD'), ('a', 'DT'), ('dog', 'NN'), ('and', 'CC'), ('bingo', 'NN'), ('was', 'VBD'), ('his', 'PRP$'), ('name', 'NN'), ('oh', 'NN')])
('tags -> ', '     (there->EX) (was->VBD) (xxx->NN) (who->WP) (had->VBD) (a->DT) (dog->NN) (and->CC) (bingo->NN) (was->VBD) (his->PRP$) (name->NN) (oh->NN) ')
('tags initial-> ', [('b', 'NN'), ('l', 'NN'), ('i', 'NN'), ('l', 'VBP'), ('n', 'JJ'), ('l', 'NN'), ('g', 'NN'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN'), ('b', 'IN'), ('l', 'NN'), ('i', 'NN'), ('l', 'VBP'), ('n', 'JJ'), ('l', 'NN')])
('tags -> ', '     (b->NN) (l->NN) (i->NN) (l->VBP) (n->JJ) (l->NN) (g->NN) (l->NN) (o->NN) (l->NN) (b->IN) (l->NN) (i->NN) (l->VBP) (n->JJ) (l->NN) ')
('tags initial-> ', [('b', 'NN'), ('l', 'NN'), ('i', 'NN'), ('l', 'VBP'), ('n', 'JJ'), ('l', 'NN'), ('g', 'NN'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN'), ('b', 'IN'), ('l', 'NN'), ('i', 'NN'), ('l', 'VBP'), ('n', 'JJ'), ('l', 'NN')])
('tags -> ', '     (b->NN) (l->NN) (i->NN) (l->VBP) (n->JJ) (l->NN) (g->NN) (l->NN) (o->NN) (l->NN) (b->IN) (l->NN) (i->NN) (l->VBP) (n->JJ) (l->NN) ')
('tags initial-> ', [('g', 'NN'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN')])
('tags -> ', '     (g->NN) (l->NN) (o->NN) (l->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('go', 'VB'), ('k', 'NN'), ('bingo', 'NN'), ('k', 'NN'), ('and', 'CC'), ('bingo', 'NN'), ('was', 'VBD'), ('his', 'PRP$'), ('name', 'NN'), ('oh', 'NN')])
('tags -> ', '     (go->VB) (k->NN) (bingo->NN) (k->NN) (and->CC) (bingo->NN) (was->VBD) (his->PRP$) (name->NN) (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('ngo', 'JJ'), ('k', 'NN'), ('and', 'CC'), ('bingo', 'NN'), ('was', 'VBD'), ('his', 'PRP$'), ('name', 'NN'), ('oh', 'NN')])
('tags -> ', '     (ngo->JJ) (k->NN) (and->CC) (bingo->NN) (was->VBD) (his->PRP$) (name->NN) (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('xxx', 'VBP'), ('up', 'RP')])
('tags -> ', '     (mommy->NN) (i->NN) (xxx->VBP) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('mariana', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (why->WRB) (mariana->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('hurry', 'NN'), ('up', 'RP'), ('mommy', 'NN')])
('tags -> ', '     (hurry->NN) (up->RP) (mommy->NN) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('xxx', 'NN')])
('tags -> ', '     (she->PRP) (s->VBD) (xxx->NN) ')
('tags initial-> ', [('hurry', 'NN'), ('up', 'RP')])
('tags -> ', '     (hurry->NN) (up->RP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('coming', 'VBG')])
('tags -> ', '     (i->JJ) (m->VBP) (coming->VBG) ')
candidates to check:
1
('tags initial-> ', [('hurry', 'NN'), ('up', 'RP'), ('mama', 'NN')])
('tags -> ', '     (hurry->NN) (up->RP) (mama->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('waiting', 'VBG'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->JJ) (m->VBP) (waiting->VBG) (for->IN) (you->PRP) ')
('tags initial-> ', [('a', 'DT'), ('h', 'NN'), ('he', 'PRP'), ('xxx', 'VBD')])
('tags -> ', '     (a->DT) (h->NN) (he->PRP) (xxx->VBD) ')
candidates to check:
1
('tags initial-> ', [('maybe', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('xxx', "''"), ('to', 'TO'), ('beat', 'VB'), ('me', 'PRP'), ('up', 'RP'), ('mommy', 'NN')])
('tags -> ', "     (maybe->RB) (you->PRP) (re->VBP) (xxx->'') (to->TO) (beat->VB) (me->PRP) (up->RP) (mommy->NN) ")
('tags initial-> ', [('maybe', 'RB')])
('tags -> ', '     (maybe->RB) ')
('tags initial-> ', [('cold', 'JJ'), ('zzz', 'NN')])
('tags -> ', '     (cold->JJ) (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('wash', 'VB'), ('your', 'PRP$'), ('teeth', 'NNS'), ('xxx', 'VBP'), ('mariana', 'NN')])
('tags -> ', '     (now->RB) (you->PRP) (can->MD) (wash->VB) (your->PRP$) (teeth->NNS) (xxx->VBP) (mariana->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('doing', 'VBG')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (doing->VBG) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('cold', 'JJ')])
('tags -> ', '     (i->JJ) (m->VBP) (cold->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('xxx', 'JJ'), ('xxx', 'NNP'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (xxx->JJ) (xxx->NNP) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('mommy', 'NN'), ('beat', 'VBD'), ('me', 'PRP'), ('up', 'RP')])
('tags -> ', '     (oh->UH) (mommy->NN) (beat->VBD) (me->PRP) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (the->DT) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('second', 'JJ'), ('winner', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (the->DT) (second->JJ) (winner->NN) ')
('tags initial-> ', [('right', 'RB'), ('mariana', 'NN')])
('tags -> ', '     (right->RB) (mariana->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('still', 'RB'), ('eating', 'VBG')])
('tags -> ', '     (still->RB) (eating->VBG) ')
candidates to check:
3
descended from food: [['N'], 'honey', 24, 29]
honey
honey honey 304
[('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('matter', 'NN'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('matter', 'NN'), ('honey', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (the->DT) (matter->NN) (honey->NN) ')
candidates to check:
1
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('stomach', 'NN'), ('ache', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (a->DT) (stomach->NN) (ache->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('stomach', 'NN'), ('ache', 'NN')])
('tags -> ', '     (you->PRP) (got->VBD) (a->DT) (stomach->NN) (ache->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('because', 'IN'), ('mommy', 'NN'), ('says', 'VBZ'), ('so', 'RB')])
('tags -> ', '     (because->IN) (mommy->NN) (says->VBZ) (so->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('says', 'VBZ'), ('no', 'DT')])
('tags -> ', '     (xxx->NN) (says->VBZ) (no->DT) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('that', 'IN'), ('word', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (that->IN) (word->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('hiccups', 'NNS')])
('tags -> ', '     (i->NN) (got->VBD) (hiccups->NNS) ')
('tags initial-> ', [('okay', 'JJ'), ('wait', 'VBP'), ('a', 'DT'), ('second', 'JJ')])
('tags -> ', '     (okay->JJ) (wait->VBP) (a->DT) (second->JJ) ')
candidates to check:
3
('tags initial-> ', [('now', 'RB'), ('that', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('finished', 'VBN'), ('mariana', 'NN'), ('go', 'NN'), ('and', 'CC'), ('wash', 'VB'), ('your', 'PRP$'), ('hands', 'NNS'), ('and', 'CC'), ('teeth', 'NNS'), ('and', 'CC'), ('face', 'NN')])
('tags -> ', '     (now->RB) (that->IN) (you->PRP) (re->VBP) (finished->VBN) (mariana->NN) (go->NN) (and->CC) (wash->VB) (your->PRP$) (hands->NNS) (and->CC) (teeth->NNS) (and->CC) (face->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('too', 'RB')])
('tags -> ', '     (xxx->NN) (and->CC) (you->PRP) (too->RB) ')
loading solution set
calculating
set([(1481, (41, 49)), (163, (11, 15)), (723, (57, 62)), (850, (66, 74)), (69, (28, 34)), (650, (37, 45)), (1124, (24, 33)), (618, (19, 25)), (1217, (25, 34)), (1026, (77, 82)), (551, (15, 23)), (465, (30, 37)), (47, (21, 27)), (733, (29, 34)), (837, (45, 53)), (401, (19, 24)), (745, (8, 14)), (647, (28, 36)), (661, (16, 21)), (755, (58, 63)), (505, (19, 25)), (510, (17, 23)), (1202, (31, 40)), (915, (31, 39)), (1143, (23, 32)), (1489, (17, 25)), (1486, (17, 25)), (1164, (36, 45)), (163, (26, 38)), (133, (23, 28)), (438, (14, 20)), (865, (28, 36)), (37, (18, 23)), (850, (34, 39)), (792, (24, 32)), (809, (44, 52)), (505, (41, 47)), (137, (10, 15)), (739, (20, 26)), (1550, (9, 17)), (450, (23, 31)), (447, (13, 22)), (1226, (31, 39)), (714, (57, 62)), (462, (25, 32)), (441, (34, 41)), (804, (28, 36)), (608, (25, 31)), (53, (27, 33)), (689, (25, 33)), (390, (14, 20)), (526, (17, 25)), (623, (26, 32)), (763, (31, 36)), (160, (15, 20)), (770, (48, 56)), (453, (13, 21))])
[((37, (18, 23)), '*MOT:\tso you want juice like that (.) ?\n'), ((47, (21, 27)), '*BRO:\tI like it with cheese .\n'), ((53, (27, 33)), "*MOT:\tI don't have (.) xxx cheese .\n"), ((69, (28, 34)), "*MOT:\tI don't have any good cheese look .\n"), ((133, (23, 28)), '*MOT:\tdo you like that juice ?\n'), ((137, (10, 15)), '*CHI:\txxx juice .\n'), ((160, (15, 20)), '*MOT:\tthis (.) juice .\n'), ((163, (11, 15)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((163, (26, 38)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((390, (14, 20)), '*MOT:\teat the muffin then .\n'), ((401, (19, 24)), '*MOT:\tlook at this water .\n'), ((438, (14, 20)), '*MOT:\teat the muffin okay .\n'), ((441, (34, 41)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((447, (13, 22)), '*BRO:\tI want popsicles .\n'), ((450, (23, 31)), "*MOT:\tthat's right the popsicle too .\n"), ((453, (13, 21)), '*BRO:\twant a popsicle (.) ?\n'), ((462, (25, 32)), "*CHI:\tbut I don't want a vitamin .\n"), ((465, (30, 37)), "*MOT:\tthen you won't eat your vitamin that's no problem Mariana .\n"), ((505, (19, 25)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((505, (41, 47)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((510, (17, 23)), '*BRO:\tI hate [!] onions .\n'), ((526, (17, 25)), '*MOT:\tyou want a popsicle you know what to do .\n'), ((551, (15, 23)), '*BRO:\tI want a popsicle .\n'), ((608, (25, 31)), "*BRO:\tI don't like those onions .\n"), ((618, (19, 25)), "*BRO:\tI don't want onions .\n"), ((623, (26, 32)), "*MOT:\tit doesn't have any onions Mikey .\n"), ((647, (28, 36)), "*MOT:\t&-uh Mikey's having a popsicle .\n"), ((650, (37, 45)), "*MOT:\tmaybe Mariana doesn't want any popsicle (.) .\n"), ((661, (16, 21)), '*MOT:\tdrink the juice too (.) .\n'), ((689, (25, 33)), "*BRO:\tbet it'll melt the popsicle .\n"), ((714, (57, 62)), '*MOT:\ttell [/] tell Mariana to come in now and drink the juice .\n'), ((723, (57, 62)), '*BRO:\tMariana [!] Mariana [!] come on [?] and drink your juice .\n'), ((733, (29, 34)), '*MOT:\tokay Mariana drink the juice .\n'), ((739, (20, 26)), '*MOT:\tand eat your <muffin [?] > [>] .\n'), ((745, (8, 14)), '*CHI:\ta muffin ?\n'), ((755, (58, 63)), '*MOT:\teither one as long as you eat it (.) and drink your juice (.) .\n'), ((763, (31, 36)), '*MOT:\twould you like some more juice ?\n'), ((770, (48, 56)), "*MOT:\tfinish that xxx and then I'll get you the popsicle .\n"), ((792, (24, 32)), '*MOT:\thow can you eat a popsicle then (.) ?\n'), ((804, (28, 36)), "*BRO:\twhen you [//] I eat a popsicle <I don't> [/] I don't +...\n"), ((809, (44, 52)), "*BRO:\tI was eating in the store and I ate a popsicle and I didn't hurt my throat .\n"), ((837, (45, 53)), "*MOT:\tgood lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .\n"), ((850, (34, 39)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((850, (66, 74)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((865, (28, 36)), "*MOT:\tthen you can't have a popsicle if it's only going to <hurt your> [/] hurt your throat .\n"), ((915, (31, 39)), "*MOT:\tyou're not able to eat a popsicle <so xxx> [>] .\n"), ((1026, (77, 82)), '*CHI:\t<he says> [/] <he says> [//] <Mikey says> [>] [/] Mikey says only this juice .\n'), ((1124, (24, 33)), '*BRO:\tno but there were popsicles in the box .\n'), ((1143, (23, 32)), "*MOT:\tthere're no more popsicles .\n"), ((1164, (36, 45)), '*MOT:\thow can you expect to be more popsicles ?\n'), ((1202, (31, 40)), '*BRO:\tnuhhuh when we get those popsicles (.) those are for the picnic .\n'), ((1217, (25, 34)), '*CHI:\tand I can open the popsicles .\n'), ((1226, (31, 39)), '*CHI:\t<and I> [<] can open the popsicle .\n'), ((1481, (41, 49)), '*MOT:\t<not right now when you finish the popsicle> [>] .\n'), ((1486, (17, 25)), '*BRO:\t<bite your popsicle> [<] .\n'), ((1489, (17, 25)), '*BRO:\tbite your <popsicle Mariana> [>] .\n'), ((1550, (9, 17)), '*BRO:\tmy popsicle melting .\n')]
set([(1481, (41, 49)), (163, (11, 15)), (2346, (24, 29)), (723, (57, 62)), (850, (66, 74)), (69, (28, 34)), (650, (37, 45)), (1124, (24, 33)), (618, (19, 25)), (1217, (25, 34)), (1026, (77, 82)), (1315, (10, 15)), (551, (15, 23)), (465, (30, 37)), (47, (21, 27)), (101, (75, 80)), (837, (45, 53)), (733, (29, 34)), (1051, (18, 24)), (273, (33, 37)), (2175, (19, 23)), (745, (8, 14)), (1235, (-1, 3)), (647, (28, 36)), (661, (16, 21)), (1054, (11, 16)), (2040, (20, 24)), (1955, (28, 33)), (755, (58, 63)), (1235, (24, 28)), (505, (19, 25)), (510, (17, 23)), (1202, (31, 40)), (915, (31, 39)), (1143, (23, 32)), (2043, (20, 24)), (1071, (15, 20)), (1486, (17, 25)), (1164, (36, 45)), (2153, (23, 27)), (163, (26, 38)), (133, (23, 28)), (1018, (6, 12)), (438, (14, 20)), (865, (28, 36)), (526, (17, 25)), (850, (34, 39)), (2150, (6, 10)), (792, (24, 32)), (809, (44, 52)), (1226, (31, 39)), (93, (75, 80)), (505, (41, 47)), (763, (31, 36)), (137, (10, 15)), (739, (20, 26)), (2188, (10, 14)), (1550, (9, 17)), (1057, (10, 15)), (658, (14, 19)), (450, (23, 31)), (447, (13, 22)), (1041, (25, 30)), (459, (24, 28)), (534, (15, 19)), (241, (26, 30)), (714, (57, 62)), (462, (25, 32)), (441, (34, 41)), (804, (28, 36)), (608, (25, 31)), (53, (27, 33)), (689, (25, 33)), (390, (14, 20)), (441, (68, 74)), (37, (18, 23)), (623, (26, 32)), (401, (19, 24)), (160, (15, 20)), (770, (48, 56)), (453, (13, 21)), (1041, (38, 44))])
[((37, (18, 23)), '*MOT:\tso you want juice like that (.) ?\n'), ((47, (21, 27)), '*BRO:\tI like it with cheese .\n'), ((53, (27, 33)), "*MOT:\tI don't have (.) xxx cheese .\n"), ((69, (28, 34)), "*MOT:\tI don't have any good cheese look .\n"), ((93, (75, 80)), '*MOT:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((101, (75, 80)), '*BRO:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((133, (23, 28)), '*MOT:\tdo you like that juice ?\n'), ((137, (10, 15)), '*CHI:\txxx juice .\n'), ((160, (15, 20)), '*MOT:\tthis (.) juice .\n'), ((163, (11, 15)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((163, (26, 38)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((241, (26, 30)), '*MOT:\tbecause she ate her food .\n'), ((273, (33, 37)), '*MOT:\tyou have_to do is eat your food .\n'), ((390, (14, 20)), '*MOT:\teat the muffin then .\n'), ((401, (19, 24)), '*MOT:\tlook at this water .\n'), ((438, (14, 20)), '*MOT:\teat the muffin okay .\n'), ((441, (34, 41)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((441, (68, 74)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((447, (13, 22)), '*BRO:\tI want popsicles .\n'), ((450, (23, 31)), "*MOT:\tthat's right the popsicle too .\n"), ((453, (13, 21)), '*BRO:\twant a popsicle (.) ?\n'), ((459, (24, 28)), '*BRO:\tthen (.) eat your food !\n'), ((462, (25, 32)), "*CHI:\tbut I don't want a vitamin .\n"), ((465, (30, 37)), "*MOT:\tthen you won't eat your vitamin that's no problem Mariana .\n"), ((505, (19, 25)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((505, (41, 47)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((510, (17, 23)), '*BRO:\tI hate [!] onions .\n'), ((526, (17, 25)), '*MOT:\tyou want a popsicle you know what to do .\n'), ((534, (15, 19)), '*MOT:\teat your food .\n'), ((551, (15, 23)), '*BRO:\tI want a popsicle .\n'), ((608, (25, 31)), "*BRO:\tI don't like those onions .\n"), ((618, (19, 25)), "*BRO:\tI don't want onions .\n"), ((623, (26, 32)), "*MOT:\tit doesn't have any onions Mikey .\n"), ((647, (28, 36)), "*MOT:\t&-uh Mikey's having a popsicle .\n"), ((650, (37, 45)), "*MOT:\tmaybe Mariana doesn't want any popsicle (.) .\n"), ((658, (14, 19)), '*MOT:\tcome on honey [?] (.) .\n'), ((661, (16, 21)), '*MOT:\tdrink the juice too (.) .\n'), ((689, (25, 33)), "*BRO:\tbet it'll melt the popsicle .\n"), ((714, (57, 62)), '*MOT:\ttell [/] tell Mariana to come in now and drink the juice .\n'), ((723, (57, 62)), '*BRO:\tMariana [!] Mariana [!] come on [?] and drink your juice .\n'), ((733, (29, 34)), '*MOT:\tokay Mariana drink the juice .\n'), ((739, (20, 26)), '*MOT:\tand eat your <muffin [?] > [>] .\n'), ((745, (8, 14)), '*CHI:\ta muffin ?\n'), ((755, (58, 63)), '*MOT:\teither one as long as you eat it (.) and drink your juice (.) .\n'), ((763, (31, 36)), '*MOT:\twould you like some more juice ?\n'), ((770, (48, 56)), "*MOT:\tfinish that xxx and then I'll get you the popsicle .\n"), ((792, (24, 32)), '*MOT:\thow can you eat a popsicle then (.) ?\n'), ((804, (28, 36)), "*BRO:\twhen you [//] I eat a popsicle <I don't> [/] I don't +...\n"), ((809, (44, 52)), "*BRO:\tI was eating in the store and I ate a popsicle and I didn't hurt my throat .\n"), ((837, (45, 53)), "*MOT:\tgood lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .\n"), ((850, (34, 39)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((850, (66, 74)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((865, (28, 36)), "*MOT:\tthen you can't have a popsicle if it's only going to <hurt your> [/] hurt your throat .\n"), ((915, (31, 39)), "*MOT:\tyou're not able to eat a popsicle <so xxx> [>] .\n"), ((1018, (6, 12)), '*BRO:\torange and pink (.) and rose .\n'), ((1026, (77, 82)), '*CHI:\t<he says> [/] <he says> [//] <Mikey says> [>] [/] Mikey says only this juice .\n'), ((1041, (25, 30)), '*MOT:\twe have a cherry a grape and an orange one .\n'), ((1041, (38, 44)), '*MOT:\twe have a cherry a grape and an orange one .\n'), ((1051, (18, 24)), '*CHI:\tI want the <orange one> [>] .\n'), ((1054, (11, 16)), '*BRO:\t<the grape> [<] .\n'), ((1057, (10, 15)), '*BRO:\tthe grape .\n'), ((1071, (15, 20)), "*MOT:\tthat's a grape .\n"), ((1124, (24, 33)), '*BRO:\tno but there were popsicles in the box .\n'), ((1143, (23, 32)), "*MOT:\tthere're no more popsicles .\n"), ((1164, (36, 45)), '*MOT:\thow can you expect to be more popsicles ?\n'), ((1202, (31, 40)), '*BRO:\tnuhhuh when we get those popsicles (.) those are for the picnic .\n'), ((1217, (25, 34)), '*CHI:\tand I can open the popsicles .\n'), ((1226, (31, 39)), '*CHI:\t<and I> [<] can open the popsicle .\n'), ((1235, (-1, 3)), "*BRO:\tthat's (.) Donald Duck .\n"), ((1235, (24, 28)), "*BRO:\tthat's (.) Donald Duck .\n"), ((1315, (10, 15)), '*MOT:\twhy honey ?\n'), ((1481, (41, 49)), '*MOT:\t<not right now when you finish the popsicle> [>] .\n'), ((1486, (17, 25)), '*BRO:\t<bite your popsicle> [<] .\n'), ((1550, (9, 17)), '*BRO:\tmy popsicle melting .\n'), ((1955, (28, 33)), '*MOT:\tyou finish that first honey .\n'), ((2040, (20, 24)), "*BRO:\tthat's Donald_Duck .\n"), ((2043, (20, 24)), "*BRO:\tthat's Donald_Duck <Mom> [>] .\n"), ((2150, (6, 10)), '*MOT:\tDuck_Tales .\n'), ((2153, (23, 27)), '*BRO:\tthis xxx was the Duck_Tales .\n'), ((2175, (19, 23)), '*MOT:\tlike [?] the duck tales .\n'), ((2188, (10, 14)), "*BRO:\tthe duck tales don't got a dog .\n"), ((2346, (24, 29)), "*MOT:\twhat's the matter honey [>] ?\n")]
calculating accuracy and recall
correct labels:
set(['cheese', 'popsicle', 'muffin', 'vitamin', 'popsicles', 'water', 'juice', 'strawberries', 'onions', 'milk'])
predicted labels:
set(['', 'cheese', 'grape', 'apple', 'food', 'muffin', 'honey', 'vitamin', 'popsicles', 'water', 'juice', 'dinner', 'strawberries', 'duck', 'orange', 'onions', 'milk', 'popsicle'])
file:HSLLD/HV1/MT//anamt1.cha
precision: 0.555555555556
recall: 1.0
true positives:['cheese', 'juice', 'milk', 'muffin', 'onions', 'popsicle', 'popsicles', 'strawberries', 'vitamin', 'water']
false positives: ['', 'apple', 'dinner', 'duck', 'food', 'grape', 'honey', 'orange']
false negatives: []
# true pos: 10
# false pos: 8
# false neg: 0
HSLLD/HV1/MT//conmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('hot', 'JJ'), ('12', 'CD')])
('tags -> ', '     (hot->JJ) (12->CD) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (want->VB) (to->TO) (drink->VB) ')
candidates to check:
1
descended from food: [['N'], 'milk', 6, 10]
milk
milk milk 46
[('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN')])
('tags -> ', '     (milk->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 16, 21]
juice
juice juice 52
[('m', 'NN'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('m', 'NN'), ('juice', 'NN')])
('tags -> ', '     (m->NN) (juice->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 6, 10]
milk
milk milk 46
[('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN')])
('tags -> ', '     (milk->NN) ')
candidates to check:
6
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 11, 16]
descended from food: [['N'], 'milk', 6, 10]
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['juice']
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')])
('tags -> ', '     (milk->NN) (juice->NN) (milk->NN) ')
candidates to check:
6
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 11, 16]
descended from food: [['N'], 'milk', 6, 10]
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('zzz', 'NN')]
['juice']
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('zzz', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (milk->NN) (juice->NN) (milk->NN) (zzz->NN) ')
candidates to check:
6
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 11, 16]
descended from food: [['N'], 'milk', 6, 10]
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['juice']
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')])
('tags -> ', '     (milk->NN) (juice->NN) (milk->NN) ')
candidates to check:
26
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 15, 20]
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 15, 20]
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 15, 20]
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 15, 20]
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'juice', 15, 20]
descended from food: [['N'], 'milk', 6, 10]
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['juice']
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')])
('tags -> ', '     (milk->NN) (juice->NN) (milk->NN) (juice->NN) (milk->NN) (juice->NN) (milk->NN) (juice->NN) (milk->NN) (juice->NN) (milk->NN) ')
('tags initial-> ', [('oops', 'NNS')])
('tags -> ', '     (oops->NNS) ')
candidates to check:
1
descended from food: [['N'], 'supper', 30, 36]
('tags initial-> ', [('xxx', 'JJ'), ('jake', 'NN'), ('wants', 'VBZ'), ('xxx', 'JJ'), ('xxx', 'NNP'), ('supper', 'NN')])
('tags -> ', '     (xxx->JJ) (jake->NN) (wants->VBZ) (xxx->JJ) (xxx->NNP) (supper->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 10, 15]
juice
juice juice 52
[('no', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('no', 'DT'), ('juice', 'NN')])
('tags -> ', '     (no->DT) (juice->NN) ')
('tags initial-> ', [('i', 'NN'), ('shouldn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('asked', 'VBN'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (shouldn->VBP) (t->NNS) (have->VBP) (asked->VBN) (you->PRP) ')
('tags initial-> ', [('i', 'NN'), ('shouldn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('offered', 'VBN')])
('tags -> ', '     (i->NN) (shouldn->VBP) (t->NNS) (have->VBP) (offered->VBN) ')
('tags initial-> ', [('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (all->DT) (done->VBN) ')
('tags initial-> ', [('oh', 'UH'), ('my', 'PRP$'), ('goodness', 'NN')])
('tags -> ', '     (oh->UH) (my->PRP$) (goodness->NN) ')
candidates to check:
1
descended from food: [['N'], 'supper', 24, 30]
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('eat', 'VBP'), ('some', 'DT'), ('supper', 'NN'), ('now', 'RB'), ('before', 'IN'), ('i', 'NNS'), ('give', 'VBP'), ('you', 'PRP'), ('more', 'JJR'), ('okay', 'JJ'), ('11', 'CD')])
('tags -> ', '     (well->RB) (you->PRP) (eat->VBP) (some->DT) (supper->NN) (now->RB) (before->IN) (i->NNS) (give->VBP) (you->PRP) (more->JJR) (okay->JJ) (11->CD) ')
candidates to check:
2
('tags initial-> ', [('mama', 'NN'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('see', 'VB'), ('the', 'DT'), ('t', 'NN'), ('v', 'NN')])
('tags -> ', '     (mama->NN) (i->NN) (can->MD) (t->VB) (see->VB) (the->DT) (t->NN) (v->NN) ')
('tags initial-> ', [('oh', 'UH'), ('god', 'NN'), ('xxx', 'NNP'), ('terrible', 'JJ'), ('huh', 'NN')])
('tags -> ', '     (oh->UH) (god->NN) (xxx->NNP) (terrible->JJ) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('conner', 'NN'), ('s', 'NN'), ('by', 'IN'), ('the', 'DT'), ('t', 'NN'), ('v', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('not', 'RB'), ('fair', 'JJ')])
('tags -> ', '     (conner->NN) (s->NN) (by->IN) (the->DT) (t->NN) (v->NN) (that->WDT) (s->VBZ) (not->RB) (fair->JJ) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('go', 'VBP'), ('turn', 'VB'), ('it', 'PRP'), ('off', 'RP'), ('because', 'IN'), ('jake', 'NN'), ('s', 'NN'), ('missing', 'VBG'), ('it', 'PRP'), ('anyway', 'RB')])
('tags -> ', '     (i->NN) (ll->VBP) (go->VBP) (turn->VB) (it->PRP) (off->RP) (because->IN) (jake->NN) (s->NN) (missing->VBG) (it->PRP) (anyway->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP'), ('watch', 'VB'), ('it', 'PRP'), ('after', 'IN'), ('you', 'PRP'), ('eat', 'VBP')])
('tags -> ', '     (we->PRP) (ll->VBP) (watch->VB) (it->PRP) (after->IN) (you->PRP) (eat->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('won', 'VBD'), ('t', 'PRP'), ('miss', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (won->VBD) (t->PRP) (miss->VB) (it->PRP) ')
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('turn', 'VB'), ('it', 'PRP'), ('right', 'RB'), ('back', 'RB'), ('on', 'IN')])
('tags -> ', '     (and->CC) (then->RB) (you->PRP) (can->MD) (turn->VB) (it->PRP) (right->RB) (back->RB) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('go', 'VBP'), ('over', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('tape', 'NN')])
('tags -> ', '     (it->PRP) (doesn->VBZ) (t->JJ) (go->VBP) (over->IN) (it->PRP) (s->VBZ) (a->DT) (tape->NN) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('miss', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('xxx', 'NN'), ('or', 'CC'), ('it', 'PRP'), ('stay', 'VB'), ('on', 'IN'), ('all', 'DT'), ('day', 'NN')])
('tags -> ', '     (we->PRP) (gon->VBP) (na->TO) (miss->VB) (it->PRP) (on->IN) (xxx->NN) (or->CC) (it->PRP) (stay->VB) (on->IN) (all->DT) (day->NN) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('ll', 'VBP'), ('see', 'VB'), ('it', 'PRP'), ('right', 'RB'), ('where', 'WRB'), ('she', 'PRP'), ('shut', 'VBD'), ('it', 'PRP'), ('off', 'RP'), ('it', 'PRP'), ('ll', 'VBD'), ('go', 'VB'), ('right', 'JJ'), ('back', 'RB'), ('on', 'IN')])
('tags -> ', '     (no->DT) (you->PRP) (ll->VBP) (see->VB) (it->PRP) (right->RB) (where->WRB) (she->PRP) (shut->VBD) (it->PRP) (off->RP) (it->PRP) (ll->VBD) (go->VB) (right->JJ) (back->RB) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('the', 'DT'), ('good', 'JJ'), ('thing', 'NN'), ('about', 'IN'), ('it', 'PRP')])
('tags -> ', '     (that->DT) (s->VBD) (the->DT) (good->JJ) (thing->NN) (about->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('conner', 'NN'), ('because', 'IN'), ('mama', 'NN'), ('s', 'NN')])
('tags -> ', '     (yeah->NN) (conner->NN) (because->IN) (mama->NN) (s->NN) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('miss', 'VBP'), ('any', 'DT')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (miss->VBP) (any->DT) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('out', 'RP'), ('you', 'PRP'), ('just', 'RB'), ('turn', 'VB'), ('it', 'PRP'), ('off', 'RP'), ('and', 'CC'), ('when', 'WRB'), ('you', 'PRP'), ('come', 'VBP'), ('back', 'RB'), ('you', 'PRP'), ('pick', 'VBP'), ('up', 'RP'), ('from', 'IN'), ('where', 'WRB'), ('it', 'PRP'), ('was', 'VBD'), ('on', 'IN'), ('before', 'IN')])
('tags -> ', '     (if->IN) (you->PRP) (have->VBP) (to->TO) (go->VB) (out->RP) (you->PRP) (just->RB) (turn->VB) (it->PRP) (off->RP) (and->CC) (when->WRB) (you->PRP) (come->VBP) (back->RB) (you->PRP) (pick->VBP) (up->RP) (from->IN) (where->WRB) (it->PRP) (was->VBD) (on->IN) (before->IN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('ll', 'VBP'), ('tell', 'VBP'), ('you', 'PRP'), ('this', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (ll->VBP) (tell->VBP) (you->PRP) (this->DT) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NNS'), ('alright', 'VBD')])
('tags -> ', '     (xxx->NNS) (alright->VBD) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('believe', 'VBP'), ('may', 'MD'), ('s', 'VB'), ('not', 'RB'), ('home', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (believe->VBP) (may->MD) (s->VB) (not->RB) (home->NN) ')
('tags initial-> ', [('w', 'NN'), ('w', 'NN')])
('tags -> ', '     (w->NN) (w->NN) ')
('tags initial-> ', [('should', 'MD'), ('go', 'VB'), ('chasing', 'NN'), ('after', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (should->MD) (go->VB) (chasing->NN) (after->IN) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('put', 'VBD'), ('the', 'DT'), ('medicine', 'NN'), ('there', 'RB'), ('because', 'IN'), ('i', 'NN'), ('have', 'VBP'), ('to', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (i->NN) (put->VBD) (the->DT) (medicine->NN) (there->RB) (because->IN) (i->NN) (have->VBP) (to->TO) (xxx->VB) ')
('tags initial-> ', [('is', 'VBZ'), ('jessie', 'NN'), ('coming', 'VBG'), ('back', 'RB'), ('there', 'RB'), ('with', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (is->VBZ) (jessie->NN) (coming->VBG) (back->RB) (there->RB) (with->IN) (her->PRP$) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('jessie', 'JJ'), ('s', 'NN'), ('mother', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('either', 'DT'), ('pick', 'NN'), ('her', 'PRP$'), ('up', 'RP'), ('here', 'RB'), ('or', 'CC'), ('at', 'IN'), ('the', 'DT'), ('park', 'NN')])
('tags -> ', '     (well->RB) (jessie->JJ) (s->NN) (mother->NN) (was->VBD) (gon->VBG) (na->TO) (either->DT) (pick->NN) (her->PRP$) (up->RP) (here->RB) (or->CC) (at->IN) (the->DT) (park->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('uh', 'VB'), ('she', 'PRP'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('pick', 'VB'), ('her', 'PRP$'), ('up', 'RP'), ('at', 'IN'), ('five', 'CD'), ('thirty', 'NN')])
('tags -> ', '     (and->CC) (uh->VB) (she->PRP) (was->VBD) (gon->VBG) (na->TO) (pick->VB) (her->PRP$) (up->RP) (at->IN) (five->CD) (thirty->NN) ')
candidates to check:
4
('tags initial-> ', [('so', 'RB'), ('i', 'JJ'), ('imagine', 'VBP'), ('her', 'PRP$'), ('mom', 'NN'), ('s', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('give', 'VB'), ('may', 'MD'), ('a', 'DT'), ('ride', 'NN'), ('home', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('imagine', 'NN'), ('she', 'PRP'), ('must', 'MD'), ('be', 'VB'), ('picking', 'VBG'), ('her', 'PRP$'), ('up', 'IN'), ('about', 'RB'), ('now', 'RB'), ('otherwise', 'VB'), ('it', 'PRP'), ('s', 'VB'), ('all', 'DT'), ('screwed', 'VBD'), ('up', 'RP')])
('tags -> ', '     (so->RB) (i->JJ) (imagine->VBP) (her->PRP$) (mom->NN) (s->NN) (gon->NN) (na->TO) (give->VB) (may->MD) (a->DT) (ride->NN) (home->NN) (and->CC) (i->JJ) (imagine->NN) (she->PRP) (must->MD) (be->VB) (picking->VBG) (her->PRP$) (up->IN) (about->RB) (now->RB) (otherwise->VB) (it->PRP) (s->VB) (all->DT) (screwed->VBD) (up->RP) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('have', 'VB'), ('a', 'DT'), ('talk', 'NN'), ('with', 'IN'), ('her', 'PRP$'), ('about', 'IN'), ('not', 'RB'), ('coming', 'VBG'), ('home', 'NN')])
('tags -> ', '     (xxx->NNS) (have->VBP) (to->TO) (have->VB) (a->DT) (talk->NN) (with->IN) (her->PRP$) (about->IN) (not->RB) (coming->VBG) (home->NN) ')
candidates to check:
6
('tags initial-> ', [('she', 'PRP'), ('doesn', 'VBD'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('watch', 'NN'), ('on', 'IN'), ('but', 'CC'), ('still', 'RB'), ('an', 'DT'), ('hour', 'NN'), ('s', 'NN'), ('a', 'DT'), ('big', 'JJ'), ('difference', 'NN'), ('from', 'IN'), ('a', 'DT'), ('half', 'NN'), ('an', 'DT'), ('hour', 'NN')])
('tags -> ', '     (she->PRP) (doesn->VBD) (t->NNS) (have->VBP) (a->DT) (watch->NN) (on->IN) (but->CC) (still->RB) (an->DT) (hour->NN) (s->NN) (a->DT) (big->JJ) (difference->NN) (from->IN) (a->DT) (half->NN) (an->DT) (hour->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
5
('tags initial-> ', [('i', 'NN'), ('told', 'VBD'), ('her', 'PRP$'), ('i', 'NN'), ('was', 'VBD'), ('there', 'RB'), ('at', 'IN'), ('quarter', 'NN'), ('of', 'IN'), ('five', 'CD'), ('and', 'CC'), ('i', 'NN'), ('said', 'VBD'), ('come', 'JJ'), ('home', 'NN'), ('at', 'IN'), ('five', 'CD'), ('i', 'NNS'), ('mean', 'VBP'), ('in', 'IN'), ('a', 'DT'), ('half', 'NN'), ('an', 'DT'), ('hour', 'NN')])
('tags -> ', '     (i->NN) (told->VBD) (her->PRP$) (i->NN) (was->VBD) (there->RB) (at->IN) (quarter->NN) (of->IN) (five->CD) (and->CC) (i->NN) (said->VBD) (come->JJ) (home->NN) (at->IN) (five->CD) (i->NNS) (mean->VBP) (in->IN) (a->DT) (half->NN) (an->DT) (hour->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'RB'), ('well', 'RB'), ('she', 'PRP'), ('don', 'VBZ'), ('t', 'NN'), ('know', 'VBD'), ('a', 'DT'), ('half', 'JJ'), ('hour', 'NN')])
('tags -> ', '     (yeah->RB) (well->RB) (she->PRP) (don->VBZ) (t->NN) (know->VBD) (a->DT) (half->JJ) (hour->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('ought', 'MD'), ('to', 'TO'), ('carry', 'VB'), ('a', 'DT'), ('watch', 'NN'), ('around', 'IN'), ('with', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (she->PRP) (ought->MD) (to->TO) (carry->VB) (a->DT) (watch->NN) (around->IN) (with->IN) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('watch', 'NN')])
('tags -> ', '     (she->PRP) (has->VBZ) (a->DT) (watch->NN) ')
('tags initial-> ', [('conner', 'NN')])
('tags -> ', '     (conner->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (like->IN) (it->PRP) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('your', 'PRP$'), ('favorite', 'JJ')])
('tags -> ', '     (is->VBZ) (it->PRP) (your->PRP$) (favorite->JJ) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 11, 15]
milk
milk milk 46
[('more', 'RBR'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('more', 'RBR'), ('milk', 'NN')])
('tags -> ', '     (more->RBR) (milk->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 26, 30]
milk
milk milk 46
[('say', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('milk', 'NN'), ('please', 'NN')]
['milk']
('tags initial-> ', [('say', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('milk', 'NN'), ('please', 'NN')])
('tags -> ', '     (say->NN) (can->MD) (i->VB) (have->VBP) (more->JJR) (milk->NN) (please->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 22, 26]
milk
milk milk 46
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('milk', 'NN'), ('please', 'NN')]
['milk']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('milk', 'NN'), ('please', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (more->JJR) (milk->NN) (please->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('whoop', 'NN')])
('tags -> ', '     (whoop->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('boy', 'NN'), ('i', 'NN'), ('think', 'VBP'), ('i', 'NNS'), ('gave', 'VBD'), ('you', 'PRP'), ('guys', 'VB'), ('too', 'RB'), ('much', 'JJ')])
('tags -> ', '     (boy->NN) (i->NN) (think->VBP) (i->NNS) (gave->VBD) (you->PRP) (guys->VB) (too->RB) (much->JJ) ')
('tags initial-> ', [('i', 'NNS'), ('hope', 'VBP'), ('you', 'PRP'), ('can', 'MD'), ('eat', 'VB'), ('that', 'IN'), ('all', 'DT')])
('tags -> ', '     (i->NNS) (hope->VBP) (you->PRP) (can->MD) (eat->VB) (that->IN) (all->DT) ')
('tags initial-> ', [('that', 'IN'), ('s', 'VBD'), ('good', 'JJ'), ('for', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (that->IN) (s->VBD) (good->JJ) (for->IN) (you->PRP) (you->PRP) (know->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('try', 'VB'), ('to', 'TO'), ('eat', 'VB'), ('it', 'PRP'), ('all', 'DT'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (gon->VBP) (na->TO) (try->VB) (to->TO) (eat->VB) (it->PRP) (all->DT) (up->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('the', 'DT'), ('xxx', 'NN'), ('ones', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (the->DT) (xxx->NN) (ones->NNS) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (the->DT) (xxx->NN) ')
('tags initial-> ', [('the', 'DT'), ('what', 'WP')])
('tags -> ', '     (the->DT) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('shells', 'NNS')])
('tags -> ', '     (the->DT) (shells->NNS) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('th', 'IN'), ('these', 'DT'), ('ones', 'NNS'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (xxx->JJ) (th->IN) (these->DT) (ones->NNS) (right->RB) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('just', 'RB'), ('like', 'IN'), ('the', 'DT'), ('shells', 'NNS')])
('tags -> ', '     (just->RB) (like->IN) (the->DT) (shells->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
water
water water 18
[('xxx', 'NN'), ('just', 'RB'), ('a', 'DT'), ('quick', 'JJ'), ('glass', 'NN'), ('of', 'IN'), ('water', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('back', 'RB')]
['water']
('tags initial-> ', [('xxx', 'NN'), ('just', 'RB'), ('a', 'DT'), ('quick', 'JJ'), ('glass', 'NN'), ('of', 'IN'), ('water', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('back', 'RB')])
('tags -> ', '     (xxx->NN) (just->RB) (a->DT) (quick->JJ) (glass->NN) (of->IN) (water->NN) (and->CC) (we->PRP) (re->VBP) (gon->VB) (na->TO) (go->VB) (back->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'RB'), ('um', 'JJ'), ('what', 'WP'), ('what', 'WP'), ('s', 'VBZ'), ('this', 'DT'), ('business', 'NN'), ('of', 'IN'), ('an', 'DT'), ('hour', 'NN')])
('tags -> ', '     (yeah->RB) (um->JJ) (what->WP) (what->WP) (s->VBZ) (this->DT) (business->NN) (of->IN) (an->DT) (hour->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('said', 'VBD'), ('an', 'DT'), ('half', 'NN'), ('an', 'DT'), ('hour', 'NN')])
('tags -> ', '     (i->NN) (said->VBD) (an->DT) (half->NN) (an->DT) (hour->NN) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('i', 'VBP'), ('had', 'VBD'), ('to', 'TO'), ('we', 'PRP'), ('ready', 'JJ'), ('to', 'TO'), ('ready', 'VB'), ('to', 'TO'), ('pick', 'VB'), ('her', 'PRP$'), ('up', 'NN'), ('and', 'CC'), ('what', 'WP'), ('the', 'DT'), ('heck', 'NN'), ('is', 'VBZ'), ('xxx', 'JJ'), ('stuff', 'NN')])
('tags -> ', '     (well->RB) (we->PRP) (i->VBP) (had->VBD) (to->TO) (we->PRP) (ready->JJ) (to->TO) (ready->VB) (to->TO) (pick->VB) (her->PRP$) (up->NN) (and->CC) (what->WP) (the->DT) (heck->NN) (is->VBZ) (xxx->JJ) (stuff->NN) ')
candidates to check:
2
descended from food: [['N'], 'coffee', 18, 24]
coffee
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfdb27e8>)
[('that', 'DT'), ('s', 'VBZ'), ('that', 'IN'), ('coffee', 'NN'), ('i', 'NN'), ('made', 'VBN'), ('by', 'IN'), ('mistake', 'NN')]
['coffee']
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('that', 'IN'), ('coffee', 'NN'), ('i', 'NN'), ('made', 'VBN'), ('by', 'IN'), ('mistake', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (that->IN) (coffee->NN) (i->NN) (made->VBN) (by->IN) (mistake->NN) ')
candidates to check:
1
('tags initial-> ', [('shoot', 'NN')])
('tags -> ', '     (shoot->NN) ')
candidates to check:
3
descended from food: [['N'], 'coffee', 20, 26]
descended from food: [['N'], 'mix', 27, 30]
coffee
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfdbe950>)
[('this', 'DT'), ('dumb', 'JJ'), ('coffee', 'NN'), ('mix', 'NN')]
['coffee']
('tags initial-> ', [('this', 'DT'), ('dumb', 'JJ'), ('coffee', 'NN'), ('mix', 'NN')])
('tags -> ', '     (this->DT) (dumb->JJ) (coffee->NN) (mix->NN) ')
('tags initial-> ', [('hold', 'NN'), ('on', 'IN')])
('tags -> ', '     (hold->NN) (on->IN) ')
candidates to check:
5
fruit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfdc8dd0>)
[('there', 'RB'), ('s', 'JJ'), ('um', 'JJ'), ('fruit', 'NN'), ('punch', 'NN'), ('in', 'IN'), ('the', 'DT'), ('yellow', 'JJ'), ('jug', 'NN'), ('10', 'CD')]
['fruit']
('tags initial-> ', [('there', 'RB'), ('s', 'JJ'), ('um', 'JJ'), ('fruit', 'NN'), ('punch', 'NN'), ('in', 'IN'), ('the', 'DT'), ('yellow', 'JJ'), ('jug', 'NN'), ('10', 'CD')])
('tags -> ', '     (there->RB) (s->JJ) (um->JJ) (fruit->NN) (punch->NN) (in->IN) (the->DT) (yellow->JJ) (jug->NN) (10->CD) ')
candidates to check:
2
descended from food: [['N'], 'milk', 13, 17]
milk
milk milk 46
[('little', 'JJ'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('little', 'JJ'), ('milk', 'NN')])
('tags -> ', '     (little->JJ) (milk->NN) ')
candidates to check:
3
descended from food: [['N'], 'milk', 6, 10]
milk
milk milk 46
[('milk', 'NN'), ('mama', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN'), ('mama', 'NN')])
('tags -> ', '     (milk->NN) (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('may', 'MD'), ('go', 'VB'), ('go', 'VB'), ('wash', 'NN'), ('up', 'RB'), ('and', 'CC'), ('i', 'VB'), ('ll', 'VBP'), ('get', 'VB'), ('your', 'PRP$'), ('plate', 'NN'), ('ready', 'NN')])
('tags -> ', '     (may->MD) (go->VB) (go->VB) (wash->NN) (up->RB) (and->CC) (i->VB) (ll->VBP) (get->VB) (your->PRP$) (plate->NN) (ready->NN) ')
('tags initial-> ', [('okay', 'JJ'), ('let', 'VB'), ('me', 'PRP'), ('drink', 'VB'), ('this', 'DT')])
('tags -> ', '     (okay->JJ) (let->VB) (me->PRP) (drink->VB) (this->DT) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('jake', 'NN'), ('not', 'RB'), ('eating', 'VBG')])
('tags -> ', '     (jake->NN) (not->RB) (eating->VBG) ')
('tags initial-> ', [('bye', 'NN')])
('tags -> ', '     (bye->NN) ')
('tags initial-> ', [('bye', 'NN')])
('tags -> ', '     (bye->NN) ')
('tags initial-> ', [('bye', 'NN'), ('jessie', 'NN')])
('tags -> ', '     (bye->NN) (jessie->NN) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('that', 'IN')])
('tags -> ', '     (you->PRP) (want->VBP) (that->IN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('it', 'PRP'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (get->VB) (it->PRP) (for->IN) (you->PRP) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) ')
candidates to check:
2
descended from food: [['N'], 'spaghetti', 6, 15]
spaghetti
spaghetti spaghetti 100
[('spaghetti', 'NNS'), ('on', 'IN'), ('his', 'PRP$'), ('shirt', 'NN')]
['spaghetti']
('tags initial-> ', [('spaghetti', 'NNS'), ('on', 'IN'), ('his', 'PRP$'), ('shirt', 'NN')])
('tags -> ', '     (spaghetti->NNS) (on->IN) (his->PRP$) (shirt->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('try', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('my', 'PRP$'), ('belly', 'RB'), ('button', 'VB')])
('tags -> ', '     (try->NN) (to->TO) (eat->VB) (my->PRP$) (belly->RB) (button->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
4
('tags initial-> ', [('come', 'VB'), ('on', 'IN'), ('you', 'PRP'), ('guys', 'VBP'), ('don', 'JJ'), ('t', 'JJ'), ('fool', 'NN'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (come->VB) (on->IN) (you->PRP) (guys->VBP) (don->JJ) (t->JJ) (fool->NN) (at->IN) (the->DT) (table->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('stop', 'VB'), ('it', 'PRP')])
('tags -> ', '     (stop->VB) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
7
descended from food: [['N'], 'diet', 25, 29]
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('buy', 'NN'), ('xxx', 'NNP'), ('diet', 'NN'), ('soda', 'NN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->JJ) (buy->NN) (xxx->NNP) (diet->NN) (soda->NN) ')
('tags initial-> ', [('yes', 'RB'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (yes->RB) (i->NN) (did->VBD) ')
candidates to check:
1
peaches
peaches peaches 72
[('behind', 'IN'), ('the', 'DT'), ('peaches', 'NNS')]
['peaches']
('tags initial-> ', [('behind', 'IN'), ('the', 'DT'), ('peaches', 'NNS')])
('tags -> ', '     (behind->IN) (the->DT) (peaches->NNS) ')
candidates to check:
1
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('conner', 'NN'), ('i', 'NN'), ('did', 'VBD'), ('on', 'IN'), ('your', 'PRP$'), ('arm', 'NN')])
('tags -> ', '     (look->NN) (at->IN) (conner->NN) (i->NN) (did->VBD) (on->IN) (your->PRP$) (arm->NN) ')
('tags initial-> ', [('right', 'RB'), ('there', 'EX')])
('tags -> ', '     (right->RB) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('uh', 'JJ'), ('my', 'PRP$'), ('belly', 'RB'), ('hurts', 'NNS')])
('tags -> ', '     (uh->JJ) (my->PRP$) (belly->RB) (hurts->NNS) ')
('tags initial-> ', [('well', 'RB'), ('then', 'RB'), ('go', 'VB'), ('slower', 'JJR')])
('tags -> ', '     (well->RB) (then->RB) (go->VB) (slower->JJR) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBZ'), ('a', 'DT')])
('tags -> ', '     (no->DT) (i->JJ) (don->VBP) (t->JJ) (wan->NN) (t->NN) (t->VBZ) (a->DT) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('take', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('rest', 'NN'), ('and', 'CC'), ('then', 'RB'), ('eat', 'VB'), ('more', 'RBR')])
('tags -> ', '     (well->RB) (take->VB) (a->DT) (little->JJ) (rest->NN) (and->CC) (then->RB) (eat->VB) (more->RBR) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 46, 50]
milk
milk milk 46
[('xxx', 'NN'), ('because', 'IN'), ('you', 'PRP'), ('drank', 'VBP'), ('all', 'DT'), ('of', 'IN'), ('that', 'DT'), ('milk', 'NN'), ('so', 'RB'), ('fast', 'RB'), ('that', 'IN'), ('s', 'NN'), ('probably', 'RB'), ('why', 'WRB')]
['milk']
('tags initial-> ', [('xxx', 'NN'), ('because', 'IN'), ('you', 'PRP'), ('drank', 'VBP'), ('all', 'DT'), ('of', 'IN'), ('that', 'DT'), ('milk', 'NN'), ('so', 'RB'), ('fast', 'RB'), ('that', 'IN'), ('s', 'NN'), ('probably', 'RB'), ('why', 'WRB')])
('tags -> ', '     (xxx->NN) (because->IN) (you->PRP) (drank->VBP) (all->DT) (of->IN) (that->DT) (milk->NN) (so->RB) (fast->RB) (that->IN) (s->NN) (probably->RB) (why->WRB) ')
candidates to check:
1
descended from food: [['N'], 'milk', 26, 30]
milk
milk milk 46
[('you', 'PRP'), ('drank', 'VBP'), ('all', 'PDT'), ('that', 'DT'), ('milk', 'NN'), ('up', 'RP')]
['milk']
('tags initial-> ', [('you', 'PRP'), ('drank', 'VBP'), ('all', 'PDT'), ('that', 'DT'), ('milk', 'NN'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (drank->VBP) (all->PDT) (that->DT) (milk->NN) (up->RP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('welcome', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (welcome->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('hot', 'JJ')])
('tags -> ', '     (is->VBZ) (it->PRP) (hot->JJ) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('good', 'JJ')])
('tags -> ', '     (is->VBZ) (it->PRP) (good->JJ) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
descended from food: [['N'], 'diet', 22, 26]
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('on', 'IN'), ('may', 'MD'), ('s', 'VB'), ('diet', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (on->IN) (may->MD) (s->VB) (diet->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'NN'), ('being', 'VBG'), ('good', 'JJ')])
('tags -> ', '     (i->NN) (m->NN) (being->VBG) (good->JJ) ')
candidates to check:
4
('tags initial-> ', [('xxx', 'JJ'), ('favorite', 'JJ'), ('thing', 'NN'), ('was', 'VBD'), ('shells', 'NNS'), ('9', 'CD')])
('tags -> ', '     (xxx->JJ) (favorite->JJ) (thing->NN) (was->VBD) (shells->NNS) (9->CD) ')
('tags initial-> ', [('whoa', 'NN')])
('tags -> ', '     (whoa->NN) ')
candidates to check:
1
('tags initial-> ', [('those', 'DT'), ('shells', 'NNS'), ('are', 'VBP')])
('tags -> ', '     (those->DT) (shells->NNS) (are->VBP) ')
candidates to check:
1
descended from food: [['N'], 'tomato', 18, 24]
tomato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfd77950>)
[('here', 'RB'), ('have', 'VBP'), ('a', 'DT'), ('tomato', 'NN'), ('jake', 'NN')]
['tomato']
('tags initial-> ', [('here', 'RB'), ('have', 'VBP'), ('a', 'DT'), ('tomato', 'NN'), ('jake', 'NN')])
('tags -> ', '     (here->RB) (have->VBP) (a->DT) (tomato->NN) (jake->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
candidates to check:
3
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) (no->DT) (no->DT) (no->DT) ')
('tags initial-> ', [('wh', 'NN'), ('where', 'WRB'), ('you', 'PRP'), ('found', 'VBD'), ('these', 'DT')])
('tags -> ', '     (wh->NN) (where->WRB) (you->PRP) (found->VBD) (these->DT) ')
candidates to check:
3
('tags initial-> ', [('at', 'IN'), ('the', 'DT'), ('grocery', 'NN'), ('store', 'NN')])
('tags -> ', '     (at->IN) (the->DT) (grocery->NN) (store->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('no', 'DT'), ('what', 'WP')])
('tags -> ', '     (no->DT) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('fit', 'VBP'), ('on', 'IN'), ('your', 'PRP$'), ('thumb', 'NN'), ('huh', 'NN')])
('tags -> ', '     (they->PRP) (fit->VBP) (on->IN) (your->PRP$) (thumb->NN) (huh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('like', 'IN'), ('on', 'IN'), ('me', 'PRP'), ('too', 'RB'), ('but', 'CC')])
('tags -> ', '     (like->IN) (on->IN) (me->PRP) (too->RB) (but->CC) ')
candidates to check:
1
('tags initial-> ', [('fit', 'NN'), ('on', 'IN'), ('your', 'PRP$'), ('tongue', 'NN')])
('tags -> ', '     (fit->NN) (on->IN) (your->PRP$) (tongue->NN) ')
candidates to check:
3
('tags initial-> ', [('oh', 'RB'), ('good', 'JJ'), ('well', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('thing', 'NN'), ('they', 'PRP'), ('fit', 'VBP'), ('on', 'IN'), ('your', 'PRP$'), ('tongue', 'NN')])
('tags -> ', '     (oh->RB) (good->JJ) (well->NN) (it->PRP) (s->VBZ) (a->DT) (good->JJ) (thing->NN) (they->PRP) (fit->VBP) (on->IN) (your->PRP$) (tongue->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('look', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (look->NN) (i->NN) (want->VBP) (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('what', 'WP')])
('tags -> ', '     (you->PRP) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('a', 'DT'), ('bowl', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (a->DT) (bowl->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
2
descended from food: [['N'], 'food', 22, 26]
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('talk', 'NN'), ('with', 'IN'), ('food', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (talk->NN) (with->IN) (food->NN) (in->IN) (your->PRP$) (mouth->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('me', 'PRP'), ('some', 'DT'), ('xxx', 'VBP')])
('tags -> ', '     (give->VB) (me->PRP) (some->DT) (xxx->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('more', 'JJR'), ('right', 'JJ')])
('tags -> ', '     (you->PRP) (want->VBP) (more->JJR) (right->JJ) ')
candidates to check:
1
descended from food: [['N'], 'tomato', 14, 20]
tomato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfd8b050>)
[('another', 'DT'), ('tomato', 'NN')]
['tomato']
('tags initial-> ', [('another', 'DT'), ('tomato', 'NN')])
('tags -> ', '     (another->DT) (tomato->NN) ')
candidates to check:
1
cucumber
cucumber cucumber 12
[('cucumber', 'NN')]
['cucumber']
('tags initial-> ', [('cucumber', 'NN')])
('tags -> ', '     (cucumber->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('more', 'RBR'), ('cucum', 'JJ'), ('ber', 'NN')])
('tags -> ', '     (more->RBR) (cucum->JJ) (ber->NN) ')
candidates to check:
1
lettuce
lettuce lettuce 16
[('some', 'DT'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('some', 'DT'), ('lettuce', 'NN')])
('tags -> ', '     (some->DT) (lettuce->NN) ')
candidates to check:
1
lettuce
lettuce lettuce 16
[('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('lettuce', 'NN')])
('tags -> ', '     (lettuce->NN) ')
candidates to check:
2
lettuce
lettuce lettuce 16
[('i', 'NNS'), ('like', 'VBP'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('i', 'NNS'), ('like', 'VBP'), ('lettuce', 'NN')])
('tags -> ', '     (i->NNS) (like->VBP) (lettuce->NN) ')
('tags initial-> ', [('alright', 'RB'), ('hold', 'NN'), ('on', 'IN')])
('tags -> ', '     (alright->RB) (hold->NN) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('doctor', 'NN'), ('come', 'NN')])
('tags -> ', '     (the->DT) (doctor->NN) (come->NN) ')
candidates to check:
5
descended from food: [['N'], 'tomatoes', 42, 50]
lettuce
lettuce lettuce 16
[('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('whole', 'JJ'), ('bowl', 'NN'), ('with', 'IN'), ('two', 'CD'), ('tomatoes', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('lettuce', 'NN')]
['lettuce']
tomatoes
tomatoes tomatoes 213
[('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('whole', 'JJ'), ('bowl', 'NN'), ('with', 'IN'), ('two', 'CD'), ('tomatoes', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('lettuce', 'NN')]
['tomatoes']
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('whole', 'JJ'), ('bowl', 'NN'), ('with', 'IN'), ('two', 'CD'), ('tomatoes', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('lettuce', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (a->DT) (whole->JJ) (bowl->NN) (with->IN) (two->CD) (tomatoes->NNS) (and->CC) (a->DT) (piece->NN) (of->IN) (lettuce->NN) ')
('tags initial-> ', [('ah', 'NN'), ('yum', 'NN'), ('yum', 'NN')])
('tags -> ', '     (ah->NN) (yum->NN) (yum->NN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('use', 'IN'), ('your', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (don->NN) (t->NN) (use->IN) (your->PRP$) (hands->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('um', 'VB')])
('tags -> ', '     (you->PRP) (gon->VBP) (na->TO) (um->VB) ')
('tags initial-> ', [('hold', 'NN'), ('on', 'IN')])
('tags -> ', '     (hold->NN) (on->IN) ')
candidates to check:
2
lettuce
lettuce lettuce 16
[('conner', 'NN'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('conner', 'NN'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('lettuce', 'NN')])
('tags -> ', '     (conner->NN) (do->VBP) (you->PRP) (want->VB) (lettuce->NN) ')
('tags initial-> ', [('i', 'NN'), ('do', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (do->VBP) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'tomatoes', 22, 30]
tomatoes
tomatoes tomatoes 213
[('and', 'CC'), ('do', 'VB'), ('you', 'PRP'), ('want', 'VB'), ('tomatoes', 'NNS'), ('too', 'RB')]
['tomatoes']
('tags initial-> ', [('and', 'CC'), ('do', 'VB'), ('you', 'PRP'), ('want', 'VB'), ('tomatoes', 'NNS'), ('too', 'RB')])
('tags -> ', '     (and->CC) (do->VB) (you->PRP) (want->VB) (tomatoes->NNS) (too->RB) ')
candidates to check:
1
lettuce
lettuce lettuce 16
[('no', 'DT'), ('just', 'RB'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('no', 'DT'), ('just', 'RB'), ('lettuce', 'NN')])
('tags -> ', '     (no->DT) (just->RB) (lettuce->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('to', 'TO'), ('matoes', 'VB')])
('tags -> ', '     (no->DT) (to->TO) (matoes->VB) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('all', 'DT')])
('tags -> ', '     (that->DT) (s->VBZ) (all->DT) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('all', 'PDT'), ('that', 'DT'), ('s', 'VBP'), ('all', 'PDT'), ('that', 'IN'), ('all', 'DT')])
('tags -> ', '     (that->DT) (s->VBZ) (all->PDT) (that->DT) (s->VBP) (all->PDT) (that->IN) (all->DT) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('all', 'DT')])
('tags -> ', '     (that->DT) (s->VBZ) (all->DT) ')
('tags initial-> ', [('i', 'NN'), ('love', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (love->VBP) (you->PRP) ')
candidates to check:
1
descended from food: [['N'], 'diet', 23, 27]
dressing
dressing dressing 169
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('diet', 'JJ'), ('dressing', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('may', 'MD')]
['dressing']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('diet', 'JJ'), ('dressing', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('may', 'MD')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (any->DT) (diet->JJ) (dressing->NN) (for->IN) (you->PRP) (may->MD) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('that', 'DT')])
('tags -> ', '     (what->WP) (is->VBZ) (that->DT) ')
candidates to check:
1
descended from food: [['N'], 'salad', 47, 52]
dressing
dressing dressing 169
[('oh', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('have', 'VB'), ('dressing', 'VBG'), ('on', 'IN'), ('your', 'PRP$'), ('salad', 'NN')]
['dressing']
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('have', 'VB'), ('dressing', 'VBG'), ('on', 'IN'), ('your', 'PRP$'), ('salad', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (can->MD) (t->VB) (have->VB) (dressing->VBG) (on->IN) (your->PRP$) (salad->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
candidates to check:
1
dressing
dressing dressing 169
[('put', 'VB'), ('your', 'PRP$'), ('finger', 'NN'), ('dressing', 'VBG')]
['dressing']
('tags initial-> ', [('put', 'VB'), ('your', 'PRP$'), ('finger', 'NN'), ('dressing', 'VBG')])
('tags -> ', '     (put->VB) (your->PRP$) (finger->NN) (dressing->VBG) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('but', 'CC'), ('it', 'PRP'), ('defeats', 'VBZ'), ('the', 'DT'), ('purpose', 'NN'), ('to', 'TO')])
('tags -> ', '     (yeah->NN) (but->CC) (it->PRP) (defeats->VBZ) (the->DT) (purpose->NN) (to->TO) ')
candidates to check:
1
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('one', 'CD'), ('page', 'NN'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (there->EX) (was->VBD) (one->CD) (page->NN) (in->IN) (here->RB) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
3
descended from food: [['N'], 'diet', 52, 56]
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('one', 'CD'), ('piece', 'NN'), ('of', 'IN'), ('paper', 'NN'), ('in', 'IN'), ('here', 'RB'), ('with', 'IN'), ('the', 'DT'), ('diet', 'NN')])
('tags -> ', '     (there->EX) (was->VBD) (one->CD) (piece->NN) (of->IN) (paper->NN) (in->IN) (here->RB) (with->IN) (the->DT) (diet->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'RB'), ('right', 'RB'), ('there', 'EX')])
('tags -> ', '     (it->PRP) (s->RB) (right->RB) (there->EX) ')
('tags initial-> ', [('there', 'RB')])
('tags -> ', '     (there->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (like->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('that', 'DT'), ('one', 'CD'), ('mom', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (that->DT) (one->CD) (mom->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'VB'), ('you', 'PRP'), ('put', 'VB'), ('th', 'RP'), ('th', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->VB) (you->PRP) (put->VB) (th->RP) (th->NN) (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (it->PRP) ')
candidates to check:
1
descended from food: [['N'], 'dressing', 29, 37]
dressing
dressing dressing 169
[('oh', 'IN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('the', 'DT'), ('dressing', 'NN')]
['dressing']
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('the', 'DT'), ('dressing', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (didn->VBP) (t->JJ) (want->VBP) (the->DT) (dressing->NN) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('wanted', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (no->DT) (i->NN) (didn->VBP) (t->NN) (wanted->VBD) (it->PRP) ')
candidates to check:
1
lettuce
lettuce lettuce 16
[('you', 'PRP'), ('just', 'RB'), ('want', 'VBP'), ('the', 'DT'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('you', 'PRP'), ('just', 'RB'), ('want', 'VBP'), ('the', 'DT'), ('lettuce', 'NN')])
('tags -> ', '     (you->PRP) (just->RB) (want->VBP) (the->DT) (lettuce->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'salad', 30, 35]
('tags initial-> ', [('w', 'NN'), ('w', 'NN'), ('with', 'IN'), ('salad', 'NN')])
('tags -> ', '     (w->NN) (w->NN) (with->IN) (salad->NN) ')
('tags initial-> ', [('oh', 'UH'), ('come', 'NN'), ('on', 'IN')])
('tags -> ', '     (oh->UH) (come->NN) (on->IN) ')
candidates to check:
1
descended from food: [['N'], 'salad', 11, 16]
('tags initial-> ', [('with', 'IN'), ('salad', 'NN')])
('tags -> ', '     (with->IN) (salad->NN) ')
('tags initial-> ', [('sit', 'NN')])
('tags -> ', '     (sit->NN) ')
candidates to check:
2
descended from food: [['N'], 'salad', 11, 16]
('tags initial-> ', [('with', 'IN'), ('salad', 'NN'), ('with', 'IN'), ('some', 'DT'), ('more', 'RBR'), ('to', 'TO'), ('matoes', 'VB')])
('tags -> ', '     (with->IN) (salad->NN) (with->IN) (some->DT) (more->RBR) (to->TO) (matoes->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) (no->DT) (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('one', 'CD'), ('more', 'JJR')])
('tags -> ', '     (one->CD) (more->JJR) ')
candidates to check:
1
('tags initial-> ', [('two', 'CD'), ('mores', 'NNS'), ('c', 'VBP')])
('tags -> ', '     (two->CD) (mores->NNS) (c->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
lettuce
lettuce lettuce 16
[('xxx', 'NN'), ('lettuce', 'NN'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('xxx', 'NN'), ('lettuce', 'NN'), ('lettuce', 'NN')])
('tags -> ', '     (xxx->NN) (lettuce->NN) (lettuce->NN) ')
('tags initial-> ', [('you', 'PRP'), ('hurt', 'VBP'), ('me', 'PRP')])
('tags -> ', '     (you->PRP) (hurt->VBP) (me->PRP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('sorry', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (sorry->NN) ')
candidates to check:
1
lettuce
lettuce lettuce 16
[('i', 'NN'), ('want', 'VBP'), ('two', 'CD'), ('more', 'JJR'), ('the', 'DT'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('two', 'CD'), ('more', 'JJR'), ('the', 'DT'), ('lettuce', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (two->CD) (more->JJR) (the->DT) (lettuce->NN) ')
('tags initial-> ', [('okay', 'NNS'), ('jake', 'NN')])
('tags -> ', '     (okay->NNS) (jake->NN) ')
('tags initial-> ', [('okay', 'NN'), ('conner', 'NN')])
('tags -> ', '     (okay->NN) (conner->NN) ')
candidates to check:
1
lettuce
lettuce lettuce 16
[('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('lettuce', 'NN')]
['lettuce']
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('lettuce', 'NN')])
('tags -> ', '     (you->PRP) (like->IN) (the->DT) (lettuce->NN) ')
candidates to check:
5
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('a', 'DT'), ('little', 'JJ'), ('bunny', 'JJ'), ('rabbit', 'NN')])
('tags -> ', '     (you->PRP) (like->VBP) (a->DT) (little->JJ) (bunny->JJ) (rabbit->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('zzz', 'NN')])
('tags -> ', '     (no->DT) (zzz->NN) ')
candidates to check:
2
dressing
dressing dressing 169
[('you', 'PRP'), ('have', 'VBP'), ('plenty', 'NN'), ('of', 'IN'), ('dressing', 'VBG'), ('there', 'EX'), ('jake', 'NN')]
['dressing']
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('plenty', 'NN'), ('of', 'IN'), ('dressing', 'VBG'), ('there', 'EX'), ('jake', 'NN')])
('tags -> ', '     (you->PRP) (have->VBP) (plenty->NN) (of->IN) (dressing->VBG) (there->EX) (jake->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('but', 'CC'), ('i', 'VB'), ('want', 'VBP'), ('more', 'JJR')])
('tags -> ', '     (i->NN) (know->VBP) (that->IN) (but->CC) (i->VB) (want->VBP) (more->JJR) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('i', 'VBP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('that', 'DT'), ('on', 'IN')])
('tags -> ', '     (i->NN) (i->VBP) (i->VBP) (don->VBP) (t->NNS) (like->IN) (that->DT) (on->IN) ')
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('got', 'VBD'), ('it', 'PRP'), ('all', 'DT'), ('over', 'IN'), ('you', 'PRP')])
('tags -> ', '     (oh->IN) (you->PRP) (got->VBD) (it->PRP) (all->DT) (over->IN) (you->PRP) ')
candidates to check:
2
fat
fat fat 900
[('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('fat', 'JJ'), ('cow', 'NN')]
['fat']
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('fat', 'JJ'), ('cow', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (a->DT) (fat->JJ) (cow->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('sweet', 'JJ'), ('and', 'CC'), ('spicy', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (sweet->JJ) (and->CC) (spicy->NN) ')
('tags initial-> ', [('and', 'CC'), ('spicy', 'VB'), ('yes', 'NNS')])
('tags -> ', '     (and->CC) (spicy->VB) (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('spicy', 'NN'), ('for', 'IN'), ('your', 'PRP$'), ('tongue', 'NN')])
('tags -> ', '     (spicy->NN) (for->IN) (your->PRP$) (tongue->NN) ')
candidates to check:
2
('tags initial-> ', [('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (little->JJ) (bit->NN) ')
('tags initial-> ', [('and', 'CC'), ('this', 'DT'), ('is', 'VBZ'), ('spicy', 'NN')])
('tags -> ', '     (and->CC) (this->DT) (is->VBZ) (spicy->NN) ')
candidates to check:
4
descended from food: [['N'], 'diet', 63, 67]
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('where', 'WRB'), ('the', 'DT'), ('other', 'JJ'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('um', 'JJ'), ('paper', 'NN'), ('of', 'IN'), ('my', 'PRP$'), ('diet', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (where->WRB) (the->DT) (other->JJ) (part->NN) (of->IN) (the->DT) (um->JJ) (paper->NN) (of->IN) (my->PRP$) (diet->NN) (is->VBZ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'CC'), ('full', 'JJ')])
('tags -> ', '     (xxx->CC) (full->JJ) ')
candidates to check:
6
descended from food: [['N'], 'lunch', 42, 47]
descended from food: [['N'], 'salad', 108, 113]
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('that', 'DT'), ('little', 'JJ'), ('piece', 'NN'), ('xxx', 'NNP'), ('my', 'PRP$'), ('lunch', 'NN'), ('and', 'CC'), ('when', 'WRB'), ('i', 'NN'), ('got', 'VBD'), ('to', 'TO'), ('my', 'PRP$'), ('drink', 'NN'), ('and', 'CC'), ('when', 'WRB'), ('i', 'NN'), ('got', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('end', 'NN'), ('of', 'IN'), ('the', 'DT'), ('salad', 'NN'), ('i', 'NN'), ('was', 'VBD'), ('full', 'JJ')])
('tags -> ', '     (yeah->NN) (i->NN) (had->VBD) (that->DT) (little->JJ) (piece->NN) (xxx->NNP) (my->PRP$) (lunch->NN) (and->CC) (when->WRB) (i->NN) (got->VBD) (to->TO) (my->PRP$) (drink->NN) (and->CC) (when->WRB) (i->NN) (got->VBD) (to->TO) (the->DT) (end->NN) (of->IN) (the->DT) (salad->NN) (i->NN) (was->VBD) (full->JJ) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('stomach', 'NN'), ('is', 'VBZ'), ('shrinking', 'VBG')])
('tags -> ', '     (your->PRP$) (stomach->NN) (is->VBZ) (shrinking->VBG) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('shrinking', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('inside', 'NN'), ('and', 'CC'), ('then', 'RB'), ('after', 'IN'), ('it', 'PRP'), ('shrinks', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('inside', 'NN'), ('it', 'PRP'), ('ll', 'VBZ'), ('shrink', 'NN'), ('on', 'IN'), ('the', 'DT'), ('outside', 'NN')])
('tags -> ', '     (shrinking->VBG) (on->IN) (the->DT) (inside->NN) (and->CC) (then->RB) (after->IN) (it->PRP) (shrinks->VBZ) (on->IN) (the->DT) (inside->NN) (it->PRP) (ll->VBZ) (shrink->NN) (on->IN) (the->DT) (outside->NN) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (i->JJ) (m->VBP) (all->DT) (done->VBN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) ')
('tags initial-> ', [('yes', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('eat', 'VB'), ('some', 'DT'), ('more', 'RBR')])
('tags -> ', '     (yes->RB) (you->PRP) (can->MD) (eat->VB) (some->DT) (more->RBR) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBZ'), ('a', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (wan->NN) (t->NN) (t->VBZ) (a->DT) ')
('tags initial-> ', [('you', 'PRP'), ('did', 'VBD'), ('alright', 'RB'), ('but', 'CC'), ('couldn', 'JJ'), ('t', 'NN'), ('you', 'PRP'), ('eat', 'VBP'), ('a', 'DT'), ('little', 'RB'), ('more', 'RBR')])
('tags -> ', '     (you->PRP) (did->VBD) (alright->RB) (but->CC) (couldn->JJ) (t->NN) (you->PRP) (eat->VBP) (a->DT) (little->RB) (more->RBR) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('couple', 'NN'), ('more', 'RBR'), ('bites', 'NNS')])
('tags -> ', '     (a->DT) (couple->NN) (more->RBR) (bites->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('more', 'JJR')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (more->JJR) ')
('tags initial-> ', [('could', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('a', 'DT')])
('tags -> ', '     (could->MD) (i->VB) (have->VBP) (a->DT) ')
('tags initial-> ', [('alright', 'NN'), ('conner', 'NN'), ('go', 'VBP'), ('wash', 'VBZ'), ('up', 'RP'), ('then', 'RB')])
('tags -> ', '     (alright->NN) (conner->NN) (go->VBP) (wash->VBZ) (up->RP) (then->RB) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('mine', 'NN'), ('ma', 'NN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (mine->NN) (ma->NN) (i->JJ) (don->VBP) (t->NN) (want->VBP) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'salad', 27, 32]
('tags initial-> ', [('jake', 'NN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('salad', 'NN')])
('tags -> ', '     (jake->NN) (you->PRP) (didn->VBP) (t->JJ) (eat->NN) (salad->NN) ')
candidates to check:
2
descended from food: [['N'], 'tomato', 21, 27]
tomato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfd49248>)
[('this', 'DT'), ('is', 'VBZ'), ('a', 'DT'), ('big', 'JJ'), ('tomato', 'NN')]
['tomato']
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('a', 'DT'), ('big', 'JJ'), ('tomato', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (a->DT) (big->JJ) (tomato->NN) ')
('tags initial-> ', [('i', 'NN'), ('did', 'VBD'), ('a', 'DT'), ('i', 'NN'), ('eat', 'VBP'), ('the', 'DT'), ('i', 'NN'), ('eat', 'VBP'), ('the', 'DT'), ('i', 'NN'), ('eat', 'VBP'), ('that', 'WDT'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (i->NN) (did->VBD) (a->DT) (i->NN) (eat->VBP) (the->DT) (i->NN) (eat->VBP) (the->DT) (i->NN) (eat->VBP) (that->WDT) (right->RB) (here->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('eat', 'VBP'), ('that', 'WDT'), ('right', 'RB'), ('there', 'EX')])
('tags -> ', '     (i->NN) (eat->VBP) (that->WDT) (right->RB) (there->EX) ')
('tags initial-> ', [('xxx', 'NN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('eat', 'VB'), ('some', 'DT'), ('more', 'RBR')])
('tags -> ', '     (xxx->NN) (you->PRP) (have->VBP) (to->TO) (eat->VB) (some->DT) (more->RBR) ')
('tags initial-> ', [('xxx', 'NN'), ('no', 'DT')])
('tags -> ', '     (xxx->NN) (no->DT) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('but', 'CC'), ('i', 'RB'), ('have', 'VBP'), ('a', 'DT'), ('belly', 'RB'), ('ache', 'NN')])
('tags -> ', '     (no->DT) (but->CC) (i->RB) (have->VBP) (a->DT) (belly->RB) (ache->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('go', 'VBP'), ('blow', 'VB'), ('your', 'PRP$'), ('nose', 'NN')])
('tags -> ', '     (why->WRB) (don->NN) (t->NN) (you->PRP) (go->VBP) (blow->VB) (your->PRP$) (nose->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (i->JJ) (m->VBP) (all->DT) (done->VBN) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB')])
('tags -> ', '     (no->DT) (you->PRP) (re->VBP) (not->RB) ')
('tags initial-> ', [('yes', 'NNS'), ('am', 'VBP')])
('tags -> ', '     (yes->NNS) (am->VBP) ')
('tags initial-> ', [('conner', 'NN'), ('you', 'PRP'), ('stay', 'VBP'), ('out', 'IN'), ('of', 'IN'), ('this', 'DT')])
('tags -> ', '     (conner->NN) (you->PRP) (stay->VBP) (out->IN) (of->IN) (this->DT) ')
candidates to check:
4
('tags initial-> ', [('jake', 'NN'), ('go', 'VB'), ('blow', 'IN'), ('your', 'PRP$'), ('nose', 'JJ'), ('and', 'CC'), ('we', 'PRP'), ('ll', 'VBP'), ('see', 'VB'), ('maybe', 'RB'), ('your', 'PRP$'), ('belly', 'RB'), ('will', 'MD'), ('have', 'VB'), ('more', 'JJR'), ('room', 'NN'), ('after', 'IN'), ('that', 'DT')])
('tags -> ', '     (jake->NN) (go->VB) (blow->IN) (your->PRP$) (nose->JJ) (and->CC) (we->PRP) (ll->VBP) (see->VB) (maybe->RB) (your->PRP$) (belly->RB) (will->MD) (have->VB) (more->JJR) (room->NN) (after->IN) (that->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('haven', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('anything', 'NN')])
('tags -> ', '     (you->PRP) (haven->VBP) (t->JJ) (eat->NN) (anything->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('wash', 'VB'), ('your', 'PRP$'), ('face', 'NN'), ('conner', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (wash->VB) (your->PRP$) (face->NN) (conner->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('did', 'VBD'), ('i', 'RB'), ('eat', 'VB'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB'), ('and', 'CC'), ('one', 'CD'), ('right', 'NN'), ('there', 'RB'), ('and', 'CC'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB')])
('tags -> ', '     (yeah->NN) (i->NN) (did->VBD) (i->RB) (eat->VB) (one->CD) (right->NN) (here->RB) (and->CC) (one->CD) (right->NN) (there->RB) (and->CC) (one->CD) (right->NN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('got', 'VBD'), ('xxx', 'JJ'), ('eat', 'NN'), ('on', 'IN'), ('your', 'PRP$'), ('face', 'NN'), ('jake', 'NN')])
('tags -> ', '     (xxx->NN) (i->NN) (got->VBD) (xxx->JJ) (eat->NN) (on->IN) (your->PRP$) (face->NN) (jake->NN) ')
('tags initial-> ', [('one', 'CD'), ('right', 'NN'), ('here', 'RB'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB'), ('and', 'CC'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB')])
('tags -> ', '     (one->CD) (right->NN) (here->RB) (one->CD) (right->NN) (here->RB) (and->CC) (one->CD) (right->NN) (here->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('one', 'CD'), ('right', 'NN'), ('here', 'RB'), ('and', 'CC'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB'), ('and', 'CC'), ('one', 'CD'), ('right', 'NN'), ('here', 'RB')])
('tags -> ', '     (one->CD) (right->NN) (here->RB) (and->CC) (one->CD) (right->NN) (here->RB) (and->CC) (one->CD) (right->NN) (here->RB) ')
('tags initial-> ', [('how', 'WRB'), ('many', 'JJ'), ('does', 'VBZ'), ('that', 'DT'), ('make', 'VB')])
('tags -> ', '     (how->WRB) (many->JJ) (does->VBZ) (that->DT) (make->VB) ')
('tags initial-> ', [('three', 'CD')])
('tags -> ', '     (three->CD) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('all', 'DT')])
('tags -> ', '     (that->DT) (s->VBZ) (all->DT) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'RB'), ('three', 'CD'), ('more', 'JJR'), ('then', 'RB')])
('tags -> ', '     (how->WRB) (about->RB) (three->CD) (more->JJR) (then->RB) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('wan', 'NN'), ('t', 'NN'), ('t', 'VBZ'), ('a', 'DT')])
('tags -> ', '     (don->NN) (t->NN) (wan->NN) (t->NN) (t->VBZ) (a->DT) ')
('tags initial-> ', [('one', 'CD'), ('more', 'JJR')])
('tags -> ', '     (one->CD) (more->JJR) ')
('tags initial-> ', [('one', 'CD'), ('more', 'JJR')])
('tags -> ', '     (one->CD) (more->JJR) ')
('tags initial-> ', [('three', 'CD'), ('more', 'JJR')])
('tags -> ', '     (three->CD) (more->JJR) ')
('tags initial-> ', [('one', 'CD'), ('more', 'JJR')])
('tags -> ', '     (one->CD) (more->JJR) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('more', 'JJR'), ('then', 'RB'), ('go', 'VB'), ('blow', 'IN'), ('your', 'PRP$'), ('nose', 'NN'), ('and', 'CC'), ('come', 'VB'), ('back', 'RB'), ('and', 'CC'), ('have', 'VBP'), ('three', 'CD'), ('more', 'JJR')])
('tags -> ', '     (one->CD) (more->JJR) (then->RB) (go->VB) (blow->IN) (your->PRP$) (nose->NN) (and->CC) (come->VB) (back->RB) (and->CC) (have->VBP) (three->CD) (more->JJR) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('pretend', 'NN'), ('crying', 'NN')])
('tags -> ', '     (pretend->NN) (crying->NN) ')
('tags initial-> ', [('jake', 'NN')])
('tags -> ', '     (jake->NN) ')
candidates to check:
1
('tags initial-> ', [('alright', 'RB'), ('eat', 'VB'), ('one', 'CD'), ('more', 'JJR'), ('and', 'CC'), ('go', 'VB'), ('blow', 'VB'), ('your', 'PRP$'), ('nose', 'NN')])
('tags -> ', '     (alright->RB) (eat->VB) (one->CD) (more->JJR) (and->CC) (go->VB) (blow->VB) (your->PRP$) (nose->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('eat', 'VB'), ('no', 'DT'), ('more', 'JJR')])
('tags -> ', '     (xxx->NN) (i->NN) (don->VBP) (t->NN) (want->VBP) (to->TO) (eat->VB) (no->DT) (more->JJR) ')
candidates to check:
3
descended from food: [['N'], 'lunch', 38, 43]
('tags initial-> ', [('well', 'RB'), ('then', 'RB'), ('i', 'VB'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('save', 'VB'), ('it', 'PRP'), ('for', 'IN'), ('lunch', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (well->RB) (then->RB) (i->VB) (m->NN) (gon->NN) (na->TO) (save->VB) (it->PRP) (for->IN) (lunch->NN) (tomorrow->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('wash', 'VB'), ('your', 'PRP$'), ('hands', 'NNS'), ('and', 'CC'), ('face', 'NN'), ('too', 'RB')])
('tags -> ', '     (wash->VB) (your->PRP$) (hands->NNS) (and->CC) (face->NN) (too->RB) ')
loading solution set
calculating
set([(51, (63, 68)), (889, (19, 26)), (819, (29, 37)), (48, (6, 16)), (722, (9, 19)), (686, (66, 73)), (51, (47, 51)), (686, (42, 50)), (44, (6, 16)), (390, (13, 17)), (51, (69, 73)), (51, (6, 10)), (36, (6, 10)), (48, (17, 21)), (719, (14, 21)), (39, (6, 16)), (394, (6, 10)), (51, (58, 62)), (578, (18, 24)), (368, (18, 24)), (654, (14, 20)), (51, (52, 57)), (291, (22, 26)), (769, (26, 34)), (80, (24, 30)), (441, (6, 15)), (51, (36, 40)), (658, (6, 14)), (44, (17, 21)), (828, (30, 37)), (901, (25, 33)), (51, (30, 35)), (51, (15, 20)), (486, (17, 24)), (869, (18, 25)), (30, (16, 21)), (288, (26, 30)), (671, (6, 13)), (760, (47, 52)), (479, (25, 34)), (527, (26, 30)), (51, (25, 29)), (675, (13, 20)), (665, (11, 21)), (745, (23, 36)), (346, (32, 37)), (869, (10, 17)), (760, (24, 32)), (847, (32, 42)), (51, (41, 46)), (281, (11, 15)), (878, (26, 33)), (521, (46, 50)), (26, (6, 10)), (62, (10, 15)), (715, (22, 30)), (39, (17, 21)), (668, (11, 18)), (708, (25, 32))])
[((26, (6, 10)), '*CHI:\tmilk [!] .\n'), ((30, (16, 21)), '*JAK:\t<&m> [//] juice .\n'), ((36, (6, 10)), '*FAT:\tmilk .\n'), ((39, (6, 16)), '*MOT:\tmilk juice milk .\n'), ((39, (17, 21)), '*MOT:\tmilk juice milk .\n'), ((44, (6, 16)), '*CHI:\tmilk juice milk zzz .\n'), ((44, (17, 21)), '*CHI:\tmilk juice milk zzz .\n'), ((48, (6, 16)), '*FAT:\tmilk juice milk .\n'), ((48, (17, 21)), '*FAT:\tmilk juice milk .\n'), ((51, (6, 10)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (15, 20)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (25, 29)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (30, 35)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (36, 40)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (41, 46)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (47, 51)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (52, 57)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (58, 62)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (63, 68)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (69, 73)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((62, (10, 15)), '*JAK:\t<no juice> [<] .\n'), ((80, (24, 30)), '*MOT:\twell you eat some supper now before I give you more okay (11.) ?\n'), ((281, (11, 15)), '*CHI:\tmore milk (.) .\n'), ((288, (26, 30)), '*MOT:\tsay can I have more milk please .\n'), ((291, (22, 26)), '*CHI:\tcan I have more milk please .\n'), ((346, (32, 37)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((368, (18, 24)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((390, (13, 17)), '*CHI:\tlittle milk ?\n'), ((394, (6, 10)), '*CHI:\tmilk Mama ?\n'), ((441, (6, 15)), '*MOT:\tspaghetti on his shirt .\n'), ((479, (25, 34)), "*SIS:\tyou didn't buy xxx diet soda ?\n"), ((486, (17, 24)), '*MOT:\tbehind the peaches .\n'), ((521, (46, 50)), "*MOT:\t<xxx> [<] because you drank all of that milk so fast that's probably why .\n"), ((527, (26, 30)), '*JAK:\tyou drank all that <milk> [>] up .\n'), ((578, (18, 24)), '*MOT:\there have a tomato Jake .\n'), ((654, (14, 20)), '*MOT:\tanother tomato ?\n'), ((658, (6, 14)), '*MOT:\tcucumber ?\n'), ((665, (11, 21)), '*CHI:\tmore cucum(ber) .\n'), ((668, (11, 18)), '*MOT:\tsome lettuce .\n'), ((671, (6, 13)), '*MOT:\tlettuce ?\n'), ((675, (13, 20)), '*JAK:\tI like lettuce !\n'), ((686, (42, 50)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (66, 73)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((708, (25, 32)), '*MOT:\tConner do you want lettuce ?\n'), ((715, (22, 30)), '*MOT:\tand do you want tomatoes too ?\n'), ((719, (14, 21)), '*CHI:\tno just lettuce .\n'), ((722, (9, 19)), '*CHI:\tno (to)matoes !\n'), ((745, (23, 36)), "*MOT:\tI don't have any diet dressing for you May .\n"), ((760, (24, 32)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (47, 52)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((769, (26, 34)), '*SIS:\tput your finger [?] dressing .\n'), ((819, (29, 37)), "*MOT:\toh you didn't want the dressing ?\n"), ((828, (30, 37)), '*MOT:\t<you just> [<] want the lettuce ?\n'), ((847, (32, 42)), '*JAK:\twith salad with some more (to)matoes .\n'), ((869, (10, 17)), '*CHI:\txxx lettuce lettuce .\n'), ((869, (18, 25)), '*CHI:\txxx lettuce lettuce .\n'), ((878, (26, 33)), '*JAK:\tI want two more the lettuce .\n'), ((889, (19, 26)), '*MOT:\tyou like the lettuce ?\n'), ((901, (25, 33)), '*MOT:\tyou have plenty of dressing there Jake .\n')]
set([(51, (63, 68)), (558, (22, 26)), (48, (6, 10)), (39, (11, 16)), (44, (11, 16)), (51, (36, 40)), (686, (66, 73)), (786, (52, 56)), (51, (47, 51)), (686, (42, 50)), (377, (20, 26)), (527, (26, 30)), (390, (13, 17)), (51, (69, 73)), (51, (6, 10)), (36, (6, 10)), (479, (25, 29)), (48, (17, 21)), (719, (14, 21)), (760, (47, 52)), (394, (6, 10)), (51, (58, 62)), (578, (18, 24)), (889, (19, 26)), (368, (18, 24)), (654, (14, 20)), (59, (30, 36)), (51, (52, 57)), (291, (22, 26)), (637, (22, 26)), (80, (24, 30)), (847, (11, 16)), (915, (12, 15)), (828, (30, 37)), (441, (6, 15)), (708, (25, 32)), (658, (6, 14)), (26, (6, 10)), (769, (26, 34)), (1189, (38, 43)), (901, (25, 33)), (51, (30, 35)), (51, (15, 20)), (486, (17, 24)), (869, (18, 25)), (30, (16, 21)), (288, (26, 30)), (745, (28, 36)), (521, (46, 50)), (1028, (21, 27)), (835, (30, 35)), (946, (42, 47)), (671, (6, 13)), (384, (19, 24)), (819, (29, 37)), (44, (6, 10)), (39, (6, 10)), (51, (25, 29)), (1023, (27, 32)), (675, (13, 20)), (841, (11, 16)), (346, (32, 37)), (869, (10, 17)), (760, (24, 32)), (51, (41, 46)), (281, (11, 15)), (878, (26, 33)), (934, (63, 67)), (48, (11, 16)), (44, (17, 21)), (62, (10, 15)), (715, (22, 30)), (39, (17, 21)), (745, (23, 27)), (668, (11, 18)), (377, (27, 30)), (946, (108, 113))])
[((26, (6, 10)), '*CHI:\tmilk [!] .\n'), ((30, (16, 21)), '*JAK:\t<&m> [//] juice .\n'), ((36, (6, 10)), '*FAT:\tmilk .\n'), ((39, (6, 10)), '*MOT:\tmilk juice milk .\n'), ((39, (11, 16)), '*MOT:\tmilk juice milk .\n'), ((39, (17, 21)), '*MOT:\tmilk juice milk .\n'), ((44, (6, 10)), '*CHI:\tmilk juice milk zzz .\n'), ((44, (11, 16)), '*CHI:\tmilk juice milk zzz .\n'), ((44, (17, 21)), '*CHI:\tmilk juice milk zzz .\n'), ((48, (6, 10)), '*FAT:\tmilk juice milk .\n'), ((48, (11, 16)), '*FAT:\tmilk juice milk .\n'), ((48, (17, 21)), '*FAT:\tmilk juice milk .\n'), ((51, (6, 10)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (15, 20)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (25, 29)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (30, 35)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (36, 40)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (41, 46)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (47, 51)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (52, 57)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (58, 62)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (63, 68)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (69, 73)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((59, (30, 36)), '*MOT:\txxx Jake wants xxx <xxx supper> [>] .\n'), ((62, (10, 15)), '*JAK:\t<no juice> [<] .\n'), ((80, (24, 30)), '*MOT:\twell you eat some supper now before I give you more okay (11.) ?\n'), ((281, (11, 15)), '*CHI:\tmore milk (.) .\n'), ((288, (26, 30)), '*MOT:\tsay can I have more milk please .\n'), ((291, (22, 26)), '*CHI:\tcan I have more milk please .\n'), ((346, (32, 37)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((368, (18, 24)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((377, (20, 26)), '*SIS:\tthis dumb [?] coffee mix .\n'), ((377, (27, 30)), '*SIS:\tthis dumb [?] coffee mix .\n'), ((384, (19, 24)), "*MOT:\tthere's &-um fruit punch in the yellow jug (10.) .\n"), ((390, (13, 17)), '*CHI:\tlittle milk ?\n'), ((394, (6, 10)), '*CHI:\tmilk Mama ?\n'), ((441, (6, 15)), '*MOT:\tspaghetti on his shirt .\n'), ((479, (25, 29)), "*SIS:\tyou didn't buy xxx diet soda ?\n"), ((486, (17, 24)), '*MOT:\tbehind the peaches .\n'), ((521, (46, 50)), "*MOT:\t<xxx> [<] because you drank all of that milk so fast that's probably why .\n"), ((527, (26, 30)), '*JAK:\tyou drank all that <milk> [>] up .\n'), ((558, (22, 26)), "*MOT:\tthat's on May's diet .\n"), ((578, (18, 24)), '*MOT:\there have a tomato Jake .\n'), ((637, (22, 26)), "*MOT:\tdon't talk with food in your mouth .\n"), ((654, (14, 20)), '*MOT:\tanother tomato ?\n'), ((658, (6, 14)), '*MOT:\tcucumber ?\n'), ((668, (11, 18)), '*MOT:\tsome lettuce .\n'), ((671, (6, 13)), '*MOT:\tlettuce ?\n'), ((675, (13, 20)), '*JAK:\tI like lettuce !\n'), ((686, (42, 50)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (66, 73)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((708, (25, 32)), '*MOT:\tConner do you want lettuce ?\n'), ((715, (22, 30)), '*MOT:\tand do you want tomatoes too ?\n'), ((719, (14, 21)), '*CHI:\tno just lettuce .\n'), ((745, (23, 27)), "*MOT:\tI don't have any diet dressing for you May .\n"), ((745, (28, 36)), "*MOT:\tI don't have any diet dressing for you May .\n"), ((760, (24, 32)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (47, 52)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((769, (26, 34)), '*SIS:\tput your finger [?] dressing .\n'), ((786, (52, 56)), '*SIS:\tthere was one piece of paper in here with the diet .\n'), ((819, (29, 37)), "*MOT:\toh you didn't want the dressing ?\n"), ((828, (30, 37)), '*MOT:\t<you just> [<] want the lettuce ?\n'), ((835, (30, 35)), '*JAK:\t<&w> [/] <&w> [/] <with salad> [>] .\n'), ((841, (11, 16)), '*JAK:\twith salad .\n'), ((847, (11, 16)), '*JAK:\twith salad with some more (to)matoes .\n'), ((869, (10, 17)), '*CHI:\txxx lettuce lettuce .\n'), ((869, (18, 25)), '*CHI:\txxx lettuce lettuce .\n'), ((878, (26, 33)), '*JAK:\tI want two more the lettuce .\n'), ((889, (19, 26)), '*MOT:\tyou like the lettuce ?\n'), ((901, (25, 33)), '*MOT:\tyou have plenty of dressing there Jake .\n'), ((915, (12, 15)), "*CHI:\tI'm a fat cow !\n"), ((934, (63, 67)), '*SIS:\tdo you know where the other part of the &-um paper of my diet is ?\n'), ((946, (42, 47)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((946, (108, 113)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((1023, (27, 32)), "*CHI:\tJake you <didn't eat salad> [>] .\n"), ((1028, (21, 27)), '*MOT:\t<this is a big tomato> [<] .\n'), ((1189, (38, 43)), "*MOT:\twell then I'm gonna save it for lunch tomorrow .\n")]
calculating accuracy and recall
correct labels:
set(['diet soda', 'peaches', 'coffee', 'salad', 'lettuce', 'diet dressing', '(to)matoes', 'cucum(ber)', 'water', 'juice', 'cucumber', 'tomato', 'supper', 'dressing', 'milk juice', 'spaghetti', 'milk', 'tomatoes'])
predicted labels:
set(['tomato', 'peaches', 'coffee', 'salad', 'mix', 'food', 'dressing', 'diet', 'water', 'juice', 'fruit', 'cucumber', 'fat', 'lunch', 'supper', 'lettuce', 'spaghetti', 'milk', 'tomatoes'])
file:HSLLD/HV1/MT//conmt1.cha
precision: 0.684210526316
recall: 0.722222222222
true positives:['coffee', 'cucumber', 'dressing', 'juice', 'lettuce', 'milk', 'peaches', 'salad', 'spaghetti', 'supper', 'tomato', 'tomatoes', 'water']
false positives: ['diet', 'fat', 'food', 'fruit', 'lunch', 'mix']
false negatives: ['(to)matoes', 'cucum(ber)', 'diet dressing', 'diet soda', 'milk juice']
# true pos: 13
# false pos: 6
# false neg: 5
HSLLD/HV1/MT//sopmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//sopmt1.cha
HSLLD/HV1/MT//ethmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('xxx', 'RB'), ('yellow', 'JJ'), ('and', 'CC'), ('bl', 'JJ'), ('ue', 'JJ'), ('blue', 'NN'), ('and', 'CC'), ('green', 'JJ'), ('and', 'CC'), ('red', 'JJ')])
('tags -> ', '     (xxx->RB) (yellow->JJ) (and->CC) (bl->JJ) (ue->JJ) (blue->NN) (and->CC) (green->JJ) (and->CC) (red->JJ) ')
candidates to check:
4
descended from food: [['N'], 'food', 71, 75]
('tags initial-> ', [('alright', 'JJ'), ('please', 'NN'), ('color', 'NN'), ('something', 'NN'), ('while', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('waiting', 'VBG'), ('for', 'IN'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (alright->JJ) (please->NN) (color->NN) (something->NN) (while->IN) (you->PRP) (re->VBP) (waiting->VBG) (for->IN) (your->PRP$) (food->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 63, 67]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfc77680>)
[('you', 'PRP'), ('may', 'MD'), ('wh', 'VB'), ('ile', 'NN'), ('just', 'RB'), ('while', 'IN'), ('i', 'NNS'), ('s', 'VBP'), ('cut', 'VBN'), ('up', 'RP'), ('the', 'DT'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('you', 'PRP'), ('may', 'MD'), ('wh', 'VB'), ('ile', 'NN'), ('just', 'RB'), ('while', 'IN'), ('i', 'NNS'), ('s', 'VBP'), ('cut', 'VBN'), ('up', 'RP'), ('the', 'DT'), ('meat', 'NN')])
('tags -> ', '     (you->PRP) (may->MD) (wh->VB) (ile->NN) (just->RB) (while->IN) (i->NNS) (s->VBP) (cut->VBN) (up->RP) (the->DT) (meat->NN) ')
('tags initial-> ', [('pull', 'VB'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (pull->VB) (it->PRP) (out->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('only', 'RB'), ('sing', 'VBG'), ('this', 'DT'), ('in', 'IN'), ('the', 'DT'), ('encore', 'NN'), ('last', 'JJ'), ('night', 'NN')])
('tags -> ', '     (did->VBD) (he->PRP) (only->RB) (sing->VBG) (this->DT) (in->IN) (the->DT) (encore->NN) (last->JJ) (night->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('sorry', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (sorry->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('he', 'PRP'), ('only', 'RB'), ('sing', 'VBG'), ('this', 'DT'), ('in', 'IN'), ('the', 'DT'), ('encore', 'NN')])
('tags -> ', '     (did->VBD) (he->PRP) (only->RB) (sing->VBG) (this->DT) (in->IN) (the->DT) (encore->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('just', 'RB'), ('wondering', 'VBG'), ('where', 'WRB'), ('it', 'PRP'), ('is', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('concert', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (just->RB) (wondering->VBG) (where->WRB) (it->PRP) (is->VBZ) (in->IN) (the->DT) (concert->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('d', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('tape', 'NN')])
('tags -> ', '     (i->NN) (d->NNS) (have->VBP) (a->DT) (tape->NN) ')
candidates to check:
3
('tags initial-> ', [('for', 'IN'), ('the', 'DT'), ('audio', 'NN'), ('tape', 'NN')])
('tags -> ', '     (for->IN) (the->DT) (audio->NN) (tape->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('the', 'DT'), ('tops', 'NNS'), ('of', 'IN'), ('this', 'DT'), ('is', 'VBZ'), ('six', 'CD')])
('tags -> ', '     (i->NN) (think->VBP) (the->DT) (tops->NNS) (of->IN) (this->DT) (is->VBZ) (six->CD) ')
('tags initial-> ', [('stand', 'NN'), ('by', 'IN')])
('tags -> ', '     (stand->NN) (by->IN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('tension', 'NN'), ('just', 'RB'), ('xxx', 'VB'), ('might', 'MD'), ('be', 'VB'), ('out', 'RP')])
('tags -> ', '     (and->CC) (the->DT) (tension->NN) (just->RB) (xxx->VB) (might->MD) (be->VB) (out->RP) ')
('tags initial-> ', [('xxx', 'NN'), ('this', 'DT')])
('tags -> ', '     (xxx->NN) (this->DT) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('i', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('put', 'VB'), ('the', 'DT'), ('rest', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('uh', 'NN')])
('tags -> ', '     (so->RB) (i->RB) (have->VBP) (to->TO) (put->VB) (the->DT) (rest->NN) (of->IN) (it->PRP) (on->IN) (the->DT) (uh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('start', 'VB'), ('on', 'IN'), ('the', 'DT'), ('second', 'JJ'), ('side', 'NN'), ('of', 'IN'), ('the', 'DT'), ('tape', 'NN'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (start->VB) (on->IN) (the->DT) (second->JJ) (side->NN) (of->IN) (the->DT) (tape->NN) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('lose', 'VB'), ('more', 'JJR'), ('o', 'JJ'), ('f', 'NN'), ('of', 'IN'), ('philip', 'NN'), ('flack', 'NN'), ('than', 'IN'), ('anything', 'NN'), ('else', 'JJ')])
('tags -> ', '     (lose->VB) (more->JJR) (o->JJ) (f->NN) (of->IN) (philip->NN) (flack->NN) (than->IN) (anything->NN) (else->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
5
('tags initial-> ', [('the', 'DT'), ('second', 'JJ'), ('side', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('side', 'NN'), ('that', 'IN'), ('i', 'NN'), ('had', 'VBD'), ('the', 'DT'), ('encores', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('encore', 'NN'), ('on', 'IN')])
('tags -> ', '     (the->DT) (second->JJ) (side->NN) (is->VBZ) (the->DT) (side->NN) (that->IN) (i->NN) (had->VBD) (the->DT) (encores->NNS) (on->IN) (the->DT) (encore->NN) (on->IN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('i', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('that', 'DT'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('use', 'VB'), ('my', 'PRP$'), ('little', 'JJ'), ('cassette', 'NN')])
('tags -> ', '     (so->RB) (i->RB) (have->VBP) (to->TO) (get->VB) (that->DT) (to->TO) (be->VB) (able->JJ) (to->TO) (use->VB) (my->PRP$) (little->JJ) (cassette->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('do', 'VBP'), ('that', 'IN'), ('right', 'NN'), ('now', 'RB')])
('tags -> ', '     (i->NN) (ll->VBP) (do->VBP) (that->IN) (right->NN) (now->RB) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('suzanne', 'NN'), ('s', 'NN'), ('sister', 'NN'), ('did', 'VBD'), ('the', 'DT'), ('new', 'JJ'), ('york', 'NN'), ('bit', 'NN')])
('tags -> ', '     (suzanne->NN) (s->NN) (sister->NN) (did->VBD) (the->DT) (new->JJ) (york->NN) (bit->NN) ')
candidates to check:
1
descended from food: [['N'], 'biscuits', 19, 27]
biscuits
biscuits biscuits 263
[('xxx', 'NN'), ('and', 'CC'), ('um', 'JJ'), ('biscuits', 'NNS')]
['biscuits']
('tags initial-> ', [('xxx', 'NN'), ('and', 'CC'), ('um', 'JJ'), ('biscuits', 'NNS')])
('tags -> ', '     (xxx->NN) (and->CC) (um->JJ) (biscuits->NNS) ')
candidates to check:
1
('tags initial-> ', [('thanks', 'NNS')])
('tags -> ', '     (thanks->NNS) ')
('tags initial-> ', [('sorry', 'NN'), ('harve', 'NN')])
('tags -> ', '     (sorry->NN) (harve->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('okay', 'RP')])
('tags -> ', '     (that->DT) (s->VBZ) (okay->RP) ')
('tags initial-> ', [('uh', 'NNS'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('some', 'DT'), ('quick', 'NN')])
('tags -> ', '     (uh->NNS) (do->VBP) (you->PRP) (want->VB) (some->DT) (quick->NN) ')
('tags initial-> ', [('m', 'NN'), ('e', 'VB'), ('me', 'PRP')])
('tags -> ', '     (m->NN) (e->VB) (me->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('quick', 'NN')])
('tags -> ', '     (quick->NN) ')
candidates to check:
3
descended from food: [['N'], 'strawberry', 18, 28]
descended from food: [['N'], 'chocolate', 32, 41]
strawberry
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfc87248>)
[('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('strawberry', 'NN'), ('or', 'CC'), ('chocolate', 'NN')]
['strawberry']
chocolate
chocolate chocolate 598
[('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('strawberry', 'NN'), ('or', 'CC'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('strawberry', 'NN'), ('or', 'CC'), ('chocolate', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (strawberry->NN) (or->CC) (chocolate->NN) ')
candidates to check:
1
descended from food: [['N'], 'chocolate', 6, 15]
chocolate
chocolate chocolate 598
[('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('chocolate', 'NN')])
('tags -> ', '     (chocolate->NN) ')
candidates to check:
1
descended from food: [['N'], 'chicken', 19, 26]
chicken
chicken chicken 234
[('so', 'RB'), ('how', 'WRB'), ('s', 'JJ'), ('the', 'DT'), ('chicken', 'NN'), ('look', 'NN')]
['chicken']
('tags initial-> ', [('so', 'RB'), ('how', 'WRB'), ('s', 'JJ'), ('the', 'DT'), ('chicken', 'NN'), ('look', 'NN')])
('tags -> ', '     (so->RB) (how->WRB) (s->JJ) (the->DT) (chicken->NN) (look->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'RB'), ('good', 'JJ')])
('tags -> ', '     (oh->RB) (good->JJ) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('looks', 'VBZ'), ('good', 'JJ')])
('tags -> ', '     (it->PRP) (looks->VBZ) (good->JJ) ')
candidates to check:
5
('tags initial-> ', [('ring', 'VBG'), ('around', 'IN'), ('the', 'DT'), ('rosy', 'JJ'), ('pocket', 'NN'), ('full', 'JJ'), ('of', 'IN'), ('ashes', 'NNS'), ('ashes', 'IN'), ('we', 'PRP'), ('all', 'DT'), ('fall', 'VBP'), ('down', 'RP')])
('tags -> ', '     (ring->VBG) (around->IN) (the->DT) (rosy->JJ) (pocket->NN) (full->JJ) (of->IN) (ashes->NNS) (ashes->IN) (we->PRP) (all->DT) (fall->VBP) (down->RP) ')
candidates to check:
5
('tags initial-> ', [('mommy', 'NN'), ('s', 'NN'), ('using', 'VBG'), ('my', 'PRP$'), ('old', 'JJ'), ('placemat', 'NN'), ('today', 'NN')])
('tags -> ', '     (mommy->NN) (s->NN) (using->VBG) (my->PRP$) (old->JJ) (placemat->NN) (today->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('using', 'VBG'), ('your', 'PRP$'), ('new', 'JJ'), ('placemat', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (re->VBP) (using->VBG) (your->PRP$) (new->JJ) (placemat->NN) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'NN'), ('i', 'NN'), ('thought', 'VBD'), ('he', 'PRP'), ('might', 'MD'), ('want', 'VB'), ('to', 'TO'), ('try', 'VB'), ('his', 'PRP$'), ('new', 'JJ'), ('placemat', 'NN')])
('tags -> ', '     (yeah->NN) (i->NN) (thought->VBD) (he->PRP) (might->MD) (want->VB) (to->TO) (try->VB) (his->PRP$) (new->JJ) (placemat->NN) ')
('tags initial-> ', [('there', 'RB'), ('xxx', 'NN')])
('tags -> ', '     (there->RB) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NNS'), ('so', 'RB'), ('good', 'JJ')])
('tags -> ', '     (xxx->NNS) (so->RB) (good->JJ) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('clean', 'NN'), ('this', 'DT'), ('plate', 'NN')])
('tags -> ', '     (clean->NN) (this->DT) (plate->NN) ')
candidates to check:
1
('tags initial-> ', [('pardon', 'NN')])
('tags -> ', '     (pardon->NN) ')
candidates to check:
1
('tags initial-> ', [('cl', 'JJ'), ('ean', 'JJ'), ('clean', 'NN'), ('this', 'DT'), ('cup', 'VBZ'), ('out', 'RP')])
('tags -> ', '     (cl->JJ) (ean->JJ) (clean->NN) (this->DT) (cup->VBZ) (out->RP) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('something', 'NN'), ('over', 'IN'), ('it', 'PRP')])
('tags -> ', '     (so->RB) (you->PRP) (d->VBP) (like->IN) (something->NN) (over->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('s', 'VBZ'), ('going', 'VBG'), ('to', 'TO'), ('put', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('dinosaur', 'NN')])
('tags -> ', '     (daddy->NN) (s->VBZ) (going->VBG) (to->TO) (put->VB) (it->PRP) (in->IN) (your->PRP$) (dinosaur->NN) ')
candidates to check:
1
('tags initial-> ', [('not', 'RB'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (not->RB) (my->PRP$) (xxx->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
6
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('figured', 'VBN'), ('since', 'IN'), ('you', 'PRP'), ('have', 'VBP'), ('your', 'PRP$'), ('dinosaur', 'JJ'), ('placement', 'NN'), ('might', 'MD'), ('as', 'RB'), ('well', 'RB'), ('have', 'VB'), ('your', 'PRP$'), ('dinosaur', 'NNS'), ('cup', 'VBP')])
('tags -> ', '     (well->RB) (i->RB) (figured->VBN) (since->IN) (you->PRP) (have->VBP) (your->PRP$) (dinosaur->JJ) (placement->NN) (might->MD) (as->RB) (well->RB) (have->VB) (your->PRP$) (dinosaur->NNS) (cup->VBP) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('i', 'JJ'), ('ll', 'VBP'), ('wash', 'NN'), ('this', 'DT'), ('for', 'IN'), ('another', 'DT'), ('time', 'NN')])
('tags -> ', '     (so->RB) (i->JJ) (ll->VBP) (wash->NN) (this->DT) (for->IN) (another->DT) (time->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('match', 'NN')])
('tags -> ', '     (xxx->NNS) (match->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
2
('tags initial-> ', [('mat', 'NN'), ('ch', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('drink', 'NN')])
('tags -> ', '     (mat->NN) (ch->NN) (is->VBZ) (a->DT) (drink->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBD')])
('tags -> ', '     (i->NN) (think->VBP) (it->PRP) (s->VBD) ')
candidates to check:
5
('tags initial-> ', [('where', 'WRB'), ('s', 'PDT'), ('those', 'DT'), ('little', 'JJ'), ('stuff', 'JJ'), ('points', 'NNS')])
('tags -> ', '     (where->WRB) (s->PDT) (those->DT) (little->JJ) (stuff->JJ) (points->NNS) ')
candidates to check:
2
('tags initial-> ', [('these', 'DT'), ('little', 'JJ'), ('points', 'NNS')])
('tags -> ', '     (these->DT) (little->JJ) (points->NNS) ')
candidates to check:
5
('tags initial-> ', [('oh', 'IN'), ('they', 'PRP'), ('re', 'VBP'), ('supposed', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('like', 'IN'), ('grass', 'NN'), ('and', 'CC'), ('plants', 'NNS'), ('and', 'CC'), ('things', 'NNS'), ('like', 'IN'), ('that', 'DT'), ('in', 'IN'), ('the', 'DT'), ('uh', 'NN'), ('the', 'DT'), ('landscape', 'NN'), ('all', 'DT'), ('around', 'IN'), ('the', 'DT'), ('dinosaurs', 'NNS')])
('tags -> ', '     (oh->IN) (they->PRP) (re->VBP) (supposed->VBN) (to->TO) (be->VB) (like->IN) (grass->NN) (and->CC) (plants->NNS) (and->CC) (things->NNS) (like->IN) (that->DT) (in->IN) (the->DT) (uh->NN) (the->DT) (landscape->NN) (all->DT) (around->IN) (the->DT) (dinosaurs->NNS) ')
('tags initial-> ', [('but', 'CC'), ('right', 'RB'), ('here', 'RB'), ('they', 'PRP'), ('look', 'VBP'), ('sharp', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('they', 'PRP')])
('tags -> ', '     (but->CC) (right->RB) (here->RB) (they->PRP) (look->VBP) (sharp->JJ) (don->NN) (t->NN) (they->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('there', 'RB'), ('you', 'PRP'), ('go', 'VBP')])
('tags -> ', '     (there->RB) (you->PRP) (go->VBP) ')
('tags initial-> ', [('warm', 'NN')])
('tags -> ', '     (warm->NN) ')
candidates to check:
1
descended from food: [['N'], 'chicken', 10, 17]
chicken
chicken chicken 234
[('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('too', 'RB')]
['chicken']
('tags initial-> ', [('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('too', 'RB')])
('tags -> ', '     (the->DT) (chicken->NN) (is->VBZ) (too->RB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
descended from food: [['N'], 'chicken', 10, 17]
chicken
chicken chicken 234
[('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('should', 'MD'), ('be', 'VB'), ('pretty', 'JJ'), ('cool', 'NN')]
['chicken']
('tags initial-> ', [('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('should', 'MD'), ('be', 'VB'), ('pretty', 'JJ'), ('cool', 'NN')])
('tags -> ', '     (the->DT) (chicken->NN) (is->VBZ) (should->MD) (be->VB) (pretty->JJ) (cool->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('cut', 'NN'), ('that', 'WDT'), ('one', 'CD'), ('and', 'CC'), ('the', 'DT'), ('next', 'JJ'), ('one', 'NN'), ('you', 'PRP'), ('have', 'VBP'), ('i', 'VBN'), ('won', 'VBD'), ('t', 'JJ'), ('cut', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('just', 'RB'), ('eat', 'VB'), ('it', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('it', 'PRP'), ('will', 'MD'), ('be', 'VB'), ('cooled', 'VBN'), ('off', 'RP')])
('tags -> ', '     (i->NN) (ll->VBP) (cut->NN) (that->WDT) (one->CD) (and->CC) (the->DT) (next->JJ) (one->NN) (you->PRP) (have->VBP) (i->VBN) (won->VBD) (t->JJ) (cut->NN) (you->PRP) (can->MD) (just->RB) (eat->VB) (it->PRP) (be->VB) (cause->VBN) (it->PRP) (will->MD) (be->VB) (cooled->VBN) (off->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
4
('tags initial-> ', [('i', 'JJ'), ('knew', 'VBD'), ('bro', 'JJ'), ('wouldn', 'NN'), ('t', 'NNS'), ('make', 'VBP'), ('it', 'PRP'), ('home', 'NN'), ('i', 'NN'), ('hope', 'VBP'), ('he', 'PRP'), ('made', 'VBD'), ('it', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('library', 'NN')])
('tags -> ', '     (i->JJ) (knew->VBD) (bro->JJ) (wouldn->NN) (t->NNS) (make->VBP) (it->PRP) (home->NN) (i->NN) (hope->VBP) (he->PRP) (made->VBD) (it->PRP) (to->TO) (the->DT) (library->NN) ')
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('wouldn', 'VBP'), ('t', 'NN')])
('tags -> ', '     (oh->UH) (i->NN) (wouldn->VBP) (t->NN) ')
candidates to check:
3
('tags initial-> ', [('on', 'IN'), ('time', 'NN'), ('to', 'TO'), ('get', 'VB'), ('to', 'TO'), ('xxx', 'VB'), ('work', 'NN'), ('done', 'VBN'), ('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('so', 'RB'), ('early', 'JJ'), ('he', 'PRP'), ('s', 'VBD'), ('first', 'RB')])
('tags -> ', '     (on->IN) (time->NN) (to->TO) (get->VB) (to->TO) (xxx->VB) (work->NN) (done->VBN) (be->VB) (cause->NN) (it->PRP) (s->VBZ) (so->RB) (early->JJ) (he->PRP) (s->VBD) (first->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
4
('tags initial-> ', [('his', 'PRP$'), ('twenty', 'NN'), ('dollars', 'NNS'), ('that', 'IN'), ('he', 'PRP'), ('got', 'VBD'), ('for', 'IN'), ('his', 'PRP$'), ('birthday', 'NN'), ('yesterday', 'NN')])
('tags -> ', '     (his->PRP$) (twenty->NN) (dollars->NNS) (that->IN) (he->PRP) (got->VBD) (for->IN) (his->PRP$) (birthday->NN) (yesterday->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('is', 'VBZ'), ('burning', 'VBG'), ('in', 'IN'), ('his', 'PRP$'), ('pocket', 'NN'), ('already', 'RB')])
('tags -> ', '     (is->VBZ) (burning->VBG) (in->IN) (his->PRP$) (pocket->NN) (already->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('been', 'VBN')])
('tags -> ', '     (it->PRP) (s->VBD) (been->VBN) ')
candidates to check:
9
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('why', 'WRB'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('need', 'VB'), ('money', 'NN'), ('to', 'TO'), ('come', 'VB'), ('home', 'NN'), ('from', 'IN'), ('the', 'DT'), ('library', 'NN'), ('yesterday', 'NN'), ('he', 'PRP'), ('said', 'VBD'), ('i', 'JJ'), ('ll', 'NNS'), ('have', 'VBP'), ('enough', 'VBN'), ('to', 'TO')])
('tags -> ', '     (that->DT) (s->VBD) (why->WRB) (he->PRP) (didn->VBZ) (t->JJ) (need->VB) (money->NN) (to->TO) (come->VB) (home->NN) (from->IN) (the->DT) (library->NN) (yesterday->NN) (he->PRP) (said->VBD) (i->JJ) (ll->NNS) (have->VBP) (enough->VBN) (to->TO) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
chicken
chicken chicken 234
[('i', 'JJ'), ('m', 'NN'), ('afraid', 'VBD'), ('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('uh', 'JJ'), ('not', 'RB'), ('as', 'RB'), ('well', 'RB'), ('cooked', 'VBN'), ('as', 'IN'), ('as', 'RB'), ('usual', 'JJ')]
['chicken']
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('afraid', 'VBD'), ('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('uh', 'JJ'), ('not', 'RB'), ('as', 'RB'), ('well', 'RB'), ('cooked', 'VBN'), ('as', 'IN'), ('as', 'RB'), ('usual', 'JJ')])
('tags -> ', '     (i->JJ) (m->NN) (afraid->VBD) (the->DT) (chicken->NN) (is->VBZ) (uh->JJ) (not->RB) (as->RB) (well->RB) (cooked->VBN) (as->IN) (as->RB) (usual->JJ) ')
candidates to check:
1
descended from food: [['N'], 'biscuits', 59, 67]
biscuits
biscuits biscuits 263
[('well', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('it', 'PRP'), ('s', 'VBZ'), ('probably', 'RB'), ('better', 'RBR'), ('cooked', 'VBN'), ('than', 'IN'), ('the', 'DT'), ('biscuits', 'NNS'), ('though', 'IN')]
['biscuits']
('tags initial-> ', [('well', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('it', 'PRP'), ('s', 'VBZ'), ('probably', 'RB'), ('better', 'RBR'), ('cooked', 'VBN'), ('than', 'IN'), ('the', 'DT'), ('biscuits', 'NNS'), ('though', 'IN')])
('tags -> ', '     (well->RB) (it->PRP) (s->VBZ) (it->PRP) (s->VBZ) (probably->RB) (better->RBR) (cooked->VBN) (than->IN) (the->DT) (biscuits->NNS) (though->IN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('they', 'PRP'), ('ll', 'VBP'), ('both', 'DT'), ('be', 'VB'), ('nice', 'JJ'), ('and', 'CC'), ('tender', 'NN'), ('on', 'IN'), ('the', 'DT'), ('inside', 'NN')])
('tags -> ', '     (well->RB) (they->PRP) (ll->VBP) (both->DT) (be->VB) (nice->JJ) (and->CC) (tender->NN) (on->IN) (the->DT) (inside->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
5
descended from food: [['N'], 'barbecue', 46, 54]
barbecue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfc044d0>)
[('well', 'RB'), ('i', 'RB'), ('told', 'VBD'), ('nathaniel', 'CC'), ('that', 'IN'), ('going', 'VBG'), ('out', 'IN'), ('to', 'TO'), ('barbecue', 'VB'), ('saves', 'NNS'), ('more', 'JJR'), ('of', 'IN'), ('a', 'DT'), ('symbolic', 'JJ'), ('cash', 'NN'), ('than', 'IN'), ('after', 'IN'), ('it', 'PRP'), ('was', 'VBD'), ('started', 'VBN'), ('barbecuing', 'VBG'), ('season', 'NN')]
['barbecue']
('tags initial-> ', [('well', 'RB'), ('i', 'RB'), ('told', 'VBD'), ('nathaniel', 'CC'), ('that', 'IN'), ('going', 'VBG'), ('out', 'IN'), ('to', 'TO'), ('barbecue', 'VB'), ('saves', 'NNS'), ('more', 'JJR'), ('of', 'IN'), ('a', 'DT'), ('symbolic', 'JJ'), ('cash', 'NN'), ('than', 'IN'), ('after', 'IN'), ('it', 'PRP'), ('was', 'VBD'), ('started', 'VBN'), ('barbecuing', 'VBG'), ('season', 'NN')])
('tags -> ', '     (well->RB) (i->RB) (told->VBD) (nathaniel->CC) (that->IN) (going->VBG) (out->IN) (to->TO) (barbecue->VB) (saves->NNS) (more->JJR) (of->IN) (a->DT) (symbolic->JJ) (cash->NN) (than->IN) (after->IN) (it->PRP) (was->VBD) (started->VBN) (barbecuing->VBG) (season->NN) ')
candidates to check:
3
('tags initial-> ', [('just', 'RB'), ('to', 'TO'), ('celebrate', 'VB'), ('the', 'DT'), ('first', 'JJ'), ('day', 'NN'), ('of', 'IN'), ('spring', 'NN')])
('tags -> ', '     (just->RB) (to->TO) (celebrate->VB) (the->DT) (first->JJ) (day->NN) (of->IN) (spring->NN) ')
candidates to check:
3
descended from food: [['N'], 'chicken', 16, 23]
chicken
chicken chicken 234
[('how', 'WRB'), ('s', 'VBZ'), ('the', 'DT'), ('chicken', 'NN'), ('munchkin', 'NN')]
['chicken']
('tags initial-> ', [('how', 'WRB'), ('s', 'VBZ'), ('the', 'DT'), ('chicken', 'NN'), ('munchkin', 'NN')])
('tags -> ', '     (how->WRB) (s->VBZ) (the->DT) (chicken->NN) (munchkin->NN) ')
('tags initial-> ', [('nice', 'JJ')])
('tags -> ', '     (nice->JJ) ')
candidates to check:
2
('tags initial-> ', [('barbecuing', 'VBG'), ('a', 'DT'), ('long', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (barbecuing->VBG) (a->DT) (long->JJ) (thing->NN) ')
candidates to check:
2
('tags initial-> ', [('barbecuing', 'VBG'), ('it', 'PRP'), ('s', 'VBD'), ('a', 'DT'), ('long', 'JJ'), ('thing', 'NN'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (barbecuing->VBG) (it->PRP) (s->VBD) (a->DT) (long->JJ) (thing->NN) (to->TO) (do->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('it', 'PRP'), ('takes', 'VBZ'), ('awhile', 'NN')])
('tags -> ', '     (it->PRP) (takes->VBZ) (awhile->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('just', 'RB'), ('can', 'MD'), ('t', 'VB'), ('turn', 'VB'), ('the', 'DT'), ('coals', 'NNS'), ('on', 'IN')])
('tags -> ', '     (be->VB) (cause->NN) (you->PRP) (just->RB) (can->MD) (t->VB) (turn->VB) (the->DT) (coals->NNS) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('like', 'IN'), ('you', 'PRP'), ('do', 'VBP'), ('an', 'DT'), ('oven', 'NN')])
('tags -> ', '     (like->IN) (you->PRP) (do->VBP) (an->DT) (oven->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('when', 'WRB'), ('you', 'PRP'), ('cook', 'VBP'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('oven', 'NN'), ('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('taste', 'NN'), ('this', 'DT'), ('good', 'JJ')])
('tags -> ', '     (but->CC) (when->WRB) (you->PRP) (cook->VBP) (it->PRP) (in->IN) (the->DT) (oven->NN) (it->PRP) (doesn->VBZ) (t->JJ) (taste->NN) (this->DT) (good->JJ) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('excuse', 'IN'), ('me', 'PRP'), ('i', 'JJ'), ('m', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('check', 'VB'), ('the', 'DT')])
('tags -> ', '     (excuse->IN) (me->PRP) (i->JJ) (m->VBP) (going->VBG) (to->TO) (check->VB) (the->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('a', 'DT'), ('napkin', 'NN')])
('tags -> ', '     (here->RB) (a->DT) (napkin->NN) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('napkin', 'NN')])
('tags -> ', '     (my->PRP$) (napkin->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('this', 'DT'), ('one', 'NN')])
('tags -> ', '     (this->DT) (one->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('leave', 'VBP'), ('it', 'PRP'), ('on', 'IN'), ('in', 'IN'), ('the', 'DT'), ('show', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('finished', 'VBD')])
('tags -> ', '     (i->NN) (ll->VBP) (leave->VBP) (it->PRP) (on->IN) (in->IN) (the->DT) (show->NN) (then->RB) (it->PRP) (s->VBZ) (all->DT) (finished->VBD) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('all', 'DT'), ('fit', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('tape', 'NN')])
('tags -> ', '     (it->PRP) (all->DT) (fit->VBP) (on->IN) (the->DT) (tape->NN) ')
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('lucky', 'JJ')])
('tags -> ', '     (you->PRP) (got->VBD) (lucky->JJ) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('stuff', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (a->DT) (lot->NN) (of->IN) (stuff->NN) ')
candidates to check:
1
honey
honey honey 304
[('do', 'VBP'), ('you', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('use', 'VB'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('use', 'VB'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN'), ('honey', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (have->VB) (to->TO) (use->VB) (the->DT) (bath->NN) (room->NN) (honey->NN) ')
('tags initial-> ', [('no', 'DT'), ('just', 'RB')])
('tags -> ', '     (no->DT) (just->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
6
('tags initial-> ', [('just', 'RB'), ('just', 'RB'), ('how', 'WRB'), ('uh', 'JJ'), ('how', 'WRB'), ('many', 'JJ'), ('people', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('sand', 'NN'), ('yard', 'RB'), ('sit', 'VBZ'), ('this', 'DT'), ('way', 'NN')])
('tags -> ', '     (just->RB) (just->RB) (how->WRB) (uh->JJ) (how->WRB) (many->JJ) (people->NNS) (in->IN) (the->DT) (sand->NN) (yard->RB) (sit->VBZ) (this->DT) (way->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('they', 'PRP'), ('sit', 'VBP'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (they->PRP) (sit->VBP) (like->IN) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('wriggle', 'VBP'), ('in', 'IN'), ('their', 'PRP$'), ('seats', 'NNS'), ('in', 'IN'), ('nathaniel', 'JJ'), ('land', 'NN')])
('tags -> ', '     (they->PRP) (wriggle->VBP) (in->IN) (their->PRP$) (seats->NNS) (in->IN) (nathaniel->JJ) (land->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('does', 'VBZ'), ('it', 'PRP'), ('have', 'VB'), ('rickety', 'VBN'), ('chairs', 'NNS')])
('tags -> ', '     (does->VBZ) (it->PRP) (have->VB) (rickety->VBN) (chairs->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('don', 'JJ'), ('t', 'NN'), ('we', 'PRP'), ('turn', 'VBP'), ('the', 'DT'), ('sound', 'NN'), ('and', 'CC'), ('xxx', 'VB'), ('it', 'PRP'), ('off', 'RP')])
('tags -> ', '     (why->WRB) (don->JJ) (t->NN) (we->PRP) (turn->VBP) (the->DT) (sound->NN) (and->CC) (xxx->VB) (it->PRP) (off->RP) ')
('tags initial-> ', [('okay', 'RB'), ('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (okay->RB) (thank->NN) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('welcome', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (welcome->JJ) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('just', 'RB'), ('a', 'DT'), ('spill', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (just->RB) (a->DT) (spill->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('spilled', 'VBD'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (spilled->VBD) (a->DT) (little->JJ) (bit->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('okay', 'RB'), ('well', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('a', 'DT'), ('little', 'JJ')])
('tags -> ', '     (okay->RB) (well->RB) (it->PRP) (s->VBZ) (just->RB) (a->DT) (little->JJ) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('you', 'PRP'), ('got', 'VBD'), ('the', 'DT'), ('napkin', 'NN'), ('there', 'EX'), ('fast', 'RB')])
('tags -> ', '     (you->PRP) (you->PRP) (got->VBD) (the->DT) (napkin->NN) (there->EX) (fast->RB) ')
candidates to check:
2
descended from food: [['N'], 'biscuits', 32, 40]
biscuits
biscuits biscuits 263
[('the', 'DT'), ('bi', 'NN'), ('s', 'NN'), ('cuits', 'VBZ'), ('the', 'DT'), ('biscuits', 'NNS'), ('aren', 'VBP'), ('t', 'NN'), ('burned', 'VBD')]
['biscuits']
('tags initial-> ', [('the', 'DT'), ('bi', 'NN'), ('s', 'NN'), ('cuits', 'VBZ'), ('the', 'DT'), ('biscuits', 'NNS'), ('aren', 'VBP'), ('t', 'NN'), ('burned', 'VBD')])
('tags -> ', '     (the->DT) (bi->NN) (s->NN) (cuits->VBZ) (the->DT) (biscuits->NNS) (aren->VBP) (t->NN) (burned->VBD) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('just', 'RB'), ('about', 'IN'), ('the', 'DT'), ('way', 'NN'), ('they', 'PRP'), ('they', 'PRP'), ('re', 'VBP'), ('supposed', 'VBN'), ('to', 'TO'), ('be', 'VB')])
('tags -> ', '     (they->PRP) (re->VBP) (just->RB) (about->IN) (the->DT) (way->NN) (they->PRP) (they->PRP) (re->VBP) (supposed->VBN) (to->TO) (be->VB) ')
('tags initial-> ', [('oh', 'UH'), ('really', 'RB')])
('tags -> ', '     (oh->UH) (really->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('guess', 'VBP'), ('the', 'DT'), ('reason', 'NN'), ('i', 'NN'), ('was', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('take', 'VB'), ('them', 'PRP'), ('out', 'RP'), ('before', 'IN'), ('is', 'VBZ'), ('be', 'VB'), ('cause', 'NN'), ('i', 'NN'), ('i', 'VBP'), ('like', 'IN'), ('them', 'PRP'), ('better', 'JJR'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (guess->VBP) (the->DT) (reason->NN) (i->NN) (was->VBD) (going->VBG) (to->TO) (take->VB) (them->PRP) (out->RP) (before->IN) (is->VBZ) (be->VB) (cause->NN) (i->NN) (i->VBP) (like->IN) (them->PRP) (better->JJR) (xxx->NN) ')
('tags initial-> ', [('under', 'IN'), ('done', 'VBN')])
('tags -> ', '     (under->IN) (done->VBN) ')
('tags initial-> ', [('not', 'RB'), ('under', 'IN'), ('done', 'VBN'), ('but', 'CC'), ('done', 'VBN'), ('just', 'RB'), ('right', 'JJ')])
('tags -> ', '     (not->RB) (under->IN) (done->VBN) (but->CC) (done->VBN) (just->RB) (right->JJ) ')
candidates to check:
5
('tags initial-> ', [('well', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('that', 'DT'), ('light', 'JJ'), ('golden', 'JJ'), ('brown', 'NN'), ('across', 'IN'), ('the', 'DT'), ('top', 'NN')])
('tags -> ', '     (well->RB) (it->PRP) (s->VBZ) (just->RB) (that->DT) (light->JJ) (golden->JJ) (brown->NN) (across->IN) (the->DT) (top->NN) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('light', 'JJ'), ('golden', 'JJ'), ('brown', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (light->JJ) (golden->JJ) (brown->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('medium', 'JJ'), ('golden', 'JJ'), ('brown', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (medium->JJ) (golden->JJ) (brown->NN) ')
('tags initial-> ', [('but', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('burnt', 'VB')])
('tags -> ', '     (but->CC) (it->PRP) (s->VBZ) (not->RB) (burnt->VB) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
candidates to check:
4
('tags initial-> ', [('the', 'DT'), ('other', 'JJ'), ('way', 'NN'), ('the', 'DT'), ('mushy', 'JJ'), ('part', 'NN'), ('is', 'VBZ'), ('supposed', 'VBN'), ('to', 'TO'), ('be', 'VB'), ('flaky', 'JJ')])
('tags -> ', '     (the->DT) (other->JJ) (way->NN) (the->DT) (mushy->JJ) (part->NN) (is->VBZ) (supposed->VBN) (to->TO) (be->VB) (flaky->JJ) ')
('tags initial-> ', [('yeah', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('true', 'JJ')])
('tags -> ', '     (yeah->NN) (that->WDT) (s->VBZ) (true->JJ) ')
('tags initial-> ', [('i', 'NN'), ('liked', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (liked->VBD) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('true', 'JJ'), ('when', 'WRB'), ('mushy', 'NN'), ('then', 'RB'), ('i', 'VBZ'), ('can', 'MD'), ('t', 'VB'), ('separate', 'JJ'), ('these', 'DT'), ('little', 'JJ'), ('uh', 'NN'), ('layers', 'NNS')])
('tags -> ', '     (true->JJ) (when->WRB) (mushy->NN) (then->RB) (i->VBZ) (can->MD) (t->VB) (separate->JJ) (these->DT) (little->JJ) (uh->NN) (layers->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('those', 'DT'), ('calendars', 'NNS'), ('are', 'VBP'), ('so', 'RB'), ('good', 'JJ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (those->DT) (calendars->NNS) (are->VBP) (so->RB) (good->JJ) (to->TO) (eat->VB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('those', 'DT'), ('calendars', 'NNS'), ('are', 'VBP'), ('so', 'RB'), ('good', 'JJ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (those->DT) (calendars->NNS) (are->VBP) (so->RB) (good->JJ) (to->TO) (eat->VB) ')
candidates to check:
1
('tags initial-> ', [('those', 'DT'), ('calendars', 'NNS')])
('tags -> ', '     (those->DT) (calendars->NNS) ')
('tags initial-> ', [('what', 'WP'), ('this', 'DT')])
('tags -> ', '     (what->WP) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('these', 'DT'), ('barbecued', 'VBD'), ('calendars', 'NNS')])
('tags -> ', '     (these->DT) (barbecued->VBD) (calendars->NNS) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('mean', 'VBP'), ('that', 'IN'), ('real', 'JJ'), ('calendar', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (no->DT) (i->JJ) (mean->VBP) (that->IN) (real->JJ) (calendar->NN) (is->VBZ) (good->JJ) (to->TO) (eat->VB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('eat', 'VB'), ('the', 'DT'), ('calendar', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (to->TO) (eat->VB) (the->DT) (calendar->NN) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('a', 'DT'), ('calendar', 'NN')])
('tags -> ', '     (when->WRB) (did->VBD) (you->PRP) (eat->VB) (a->DT) (calendar->NN) ')
candidates to check:
1
('tags initial-> ', [('in', 'IN'), ('what', 'WP'), ('in', 'IN'), ('what', 'WP'), ('month', 'NN'), ('would', 'MD'), ('you', 'PRP'), ('start', 'VB'), ('eating', 'VBG')])
('tags -> ', '     (in->IN) (what->WP) (in->IN) (what->WP) (month->NN) (would->MD) (you->PRP) (start->VB) (eating->VBG) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('every', 'DT'), ('time', 'NN'), ('we', 'PRP'), ('eat', 'VBP')])
('tags -> ', '     (well->RB) (every->DT) (time->NN) (we->PRP) (eat->VBP) ')
candidates to check:
3
('tags initial-> ', [('every', 'DT'), ('time', 'NN'), ('people', 'NNS'), ('eat', 'VBP')])
('tags -> ', '     (every->DT) (time->NN) (people->NNS) (eat->VBP) ')
candidates to check:
1
('tags initial-> ', [('else', 'RB'), ('when', 'WRB'), ('people', 'NNS'), ('eat', 'VBP')])
('tags -> ', '     (else->RB) (when->WRB) (people->NNS) (eat->VBP) ')
candidates to check:
1
('tags initial-> ', [('nathaniel', 'NNS'), ('are', 'VBP'), ('you', 'PRP'), ('sure', 'JJ'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN')])
('tags -> ', '     (nathaniel->NNS) (are->VBP) (you->PRP) (sure->JJ) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (bath->NN) (room->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('how', 'WRB')])
('tags -> ', '     (how->WRB) ')
candidates to check:
3
descended from food: [['N'], 'food', 60, 64]
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN'), ('come', 'VBN'), ('back', 'RB'), ('and', 'CC'), ('have', 'VBP'), ('food', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('after', 'IN'), ('that', 'DT')])
('tags -> ', '     (if->IN) (you->PRP) (have->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (bath->NN) (room->NN) (come->VBN) (back->RB) (and->CC) (have->VBP) (food->NN) (to->TO) (eat->VB) (after->IN) (that->DT) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('eat', 'NN')])
('tags -> ', '     (xxx->NN) (eat->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
2
('tags initial-> ', [('go', 'VB'), ('pee', 'NN'), ('pee', 'NN')])
('tags -> ', '     (go->VB) (pee->NN) (pee->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('how', 'WRB'), ('they', 'PRP'), ('sit', 'VBP'), ('nathaniel', 'DT'), ('down', 'RP')])
('tags -> ', '     (that->DT) (s->VBZ) (how->WRB) (they->PRP) (sit->VBP) (nathaniel->DT) (down->RP) ')
candidates to check:
2
('tags initial-> ', [('just', 'RB'), ('to', 'TO'), ('avoid', 'VB'), ('confrontation', 'NN')])
('tags -> ', '     (just->RB) (to->TO) (avoid->VB) (confrontation->NN) ')
chicken
chicken chicken 234
[('oh', 'IN'), ('the', 'DT'), ('chicken', 'NN'), ('s', 'NN'), ('xxx', 'NN')]
['chicken']
('tags initial-> ', [('oh', 'IN'), ('the', 'DT'), ('chicken', 'NN'), ('s', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (oh->IN) (the->DT) (chicken->NN) (s->NN) (xxx->NN) ')
('tags initial-> ', [('it', 'PRP'), ('is', 'VBZ'), ('overdone', 'RB'), ('but', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('still', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('barbecued', 'VBN')])
('tags -> ', '     (it->PRP) (is->VBZ) (overdone->RB) (but->CC) (it->PRP) (s->VBZ) (still->RB) (it->PRP) (s->VBZ) (barbecued->VBN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('would', 'MD'), ('be', 'VB'), ('very', 'RB'), ('unhealthy', 'JJ'), ('to', 'TO'), ('have', 'VB'), ('that', 'DT'), ('like', 'IN'), ('that', 'DT'), ('all', 'PDT'), ('the', 'DT'), ('time', 'NN')])
('tags -> ', '     (and->CC) (it->PRP) (would->MD) (be->VB) (very->RB) (unhealthy->JJ) (to->TO) (have->VB) (that->DT) (like->IN) (that->DT) (all->PDT) (the->DT) (time->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
4
('tags initial-> ', [('what', 'WP'), ('the', 'DT'), ('hell', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('day', 'NN'), ('of', 'IN'), ('spring', 'NN')])
('tags -> ', '     (what->WP) (the->DT) (hell->NN) (it->PRP) (s->VBD) (the->DT) (first->JJ) (day->NN) (of->IN) (spring->NN) ')
candidates to check:
8
descended from food: [['N'], 'barbecue', 24, 32]
barbecue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfb90b48>)
[('usually', 'RB'), ('the', 'DT'), ('first', 'JJ'), ('barbecue', 'NN'), ('of', 'IN'), ('the', 'DT'), ('year', 'NN'), ('the', 'DT'), ('chicken', 'NN'), ('isn', 'NN'), ('t', 'NN'), ('cooked', 'VBD'), ('right', 'JJ'), ('it', 'PRP'), ('takes', 'VBZ'), ('a', 'DT'), ('couple', 'NN'), ('times', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('warm', 'NN'), ('weather', 'NN')]
['barbecue']
chicken
chicken chicken 234
[('usually', 'RB'), ('the', 'DT'), ('first', 'JJ'), ('barbecue', 'NN'), ('of', 'IN'), ('the', 'DT'), ('year', 'NN'), ('the', 'DT'), ('chicken', 'NN'), ('isn', 'NN'), ('t', 'NN'), ('cooked', 'VBD'), ('right', 'JJ'), ('it', 'PRP'), ('takes', 'VBZ'), ('a', 'DT'), ('couple', 'NN'), ('times', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('warm', 'NN'), ('weather', 'NN')]
['chicken']
('tags initial-> ', [('usually', 'RB'), ('the', 'DT'), ('first', 'JJ'), ('barbecue', 'NN'), ('of', 'IN'), ('the', 'DT'), ('year', 'NN'), ('the', 'DT'), ('chicken', 'NN'), ('isn', 'NN'), ('t', 'NN'), ('cooked', 'VBD'), ('right', 'JJ'), ('it', 'PRP'), ('takes', 'VBZ'), ('a', 'DT'), ('couple', 'NN'), ('times', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('warm', 'NN'), ('weather', 'NN')])
('tags -> ', '     (usually->RB) (the->DT) (first->JJ) (barbecue->NN) (of->IN) (the->DT) (year->NN) (the->DT) (chicken->NN) (isn->NN) (t->NN) (cooked->VBD) (right->JJ) (it->PRP) (takes->VBZ) (a->DT) (couple->NN) (times->NNS) (in->IN) (the->DT) (warm->NN) (weather->NN) ')
candidates to check:
3
descended from food: [['N'], 'barbecue', 81, 89]
barbecue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfb96b90>)
[('in', 'IN'), ('the', 'DT'), ('warm', 'JJ'), ('weather', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('still', 'RB'), ('cook', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('just', 'RB'), ('stay', 'VB'), ('out', 'RB'), ('there', 'RB'), ('with', 'IN'), ('the', 'DT'), ('barbecue', 'NN')]
['barbecue']
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('warm', 'JJ'), ('weather', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('still', 'RB'), ('cook', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('just', 'RB'), ('stay', 'VB'), ('out', 'RB'), ('there', 'RB'), ('with', 'IN'), ('the', 'DT'), ('barbecue', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (warm->JJ) (weather->NN) (you->PRP) (can->MD) (still->RB) (cook->VB) (it->PRP) (and->CC) (just->RB) (stay->VB) (out->RB) (there->RB) (with->IN) (the->DT) (barbecue->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('cold', 'JJ'), ('weather', 'NN'), ('you', 'PRP'), ('say', 'VBP'), ('let', 'VB'), ('s', 'JJ'), ('cook', 'VB'), ('this', 'DT'), ('sucker', 'NN'), ('fast', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (cold->JJ) (weather->NN) (you->PRP) (say->VBP) (let->VB) (s->JJ) (cook->VB) (this->DT) (sucker->NN) (fast->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('hi', 'NN'), ('ma', 'NN')])
('tags -> ', '     (hi->NN) (ma->NN) ')
candidates to check:
4
('tags initial-> ', [('the', 'DT'), ('sky', 'NN'), ('is', 'VBZ'), ('all', 'DT'), ('overcast', 'NN'), ('and', 'CC'), ('today', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('night', 'NN'), ('that', 'IN'), ('i', 'NN'), ('was', 'VBD'), ('telling', 'VBG'), ('uh', 'JJ'), ('melanie', 'NN'), ('about', 'IN'), ('the', 'DT'), ('sky', 'NN')])
('tags -> ', '     (the->DT) (sky->NN) (is->VBZ) (all->DT) (overcast->NN) (and->CC) (today->NN) (is->VBZ) (the->DT) (night->NN) (that->IN) (i->NN) (was->VBD) (telling->VBG) (uh->JJ) (melanie->NN) (about->IN) (the->DT) (sky->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('overcast', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (overcast->JJ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
('tags initial-> ', [('bec', 'NN'), ('ause', 'NN'), ('when', 'WRB'), ('i', 'NN'), ('looked', 'VBD'), ('out', 'RP'), ('the', 'DT'), ('window', 'NN'), ('up', 'RP'), ('front', 'RB'), ('the', 'DT'), ('sky', 'NN'), ('was', 'VBD'), ('all', 'DT'), ('gray', 'JJ')])
('tags -> ', '     (bec->NN) (ause->NN) (when->WRB) (i->NN) (looked->VBD) (out->RP) (the->DT) (window->NN) (up->RP) (front->RB) (the->DT) (sky->NN) (was->VBD) (all->DT) (gray->JJ) ')
candidates to check:
3
('tags initial-> ', [('we', 'PRP'), ('just', 'RB'), ('watched', 'VBD'), ('the', 'DT'), ('sun', 'NN'), ('set', 'NN')])
('tags -> ', '     (we->PRP) (just->RB) (watched->VBD) (the->DT) (sun->NN) (set->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'RB'), ('good', 'JJ')])
('tags -> ', '     (oh->RB) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('maybe', 'RB'), ('we', 'PRP'), ('can', 'MD'), ('go', 'VB'), ('out', 'RP'), ('tonight', 'NN'), ('and', 'CC'), ('see', 'VB'), ('if', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('uh', 'VB'), ('notice', 'RB'), ('where', 'WRB'), ('mars', 'NNS'), ('and', 'CC'), ('venus', 'NN'), ('and', 'CC'), ('the', 'DT'), ('pleiades', 'NNS'), ('moon', 'NN'), ('are', 'VBP')])
('tags -> ', '     (maybe->RB) (we->PRP) (can->MD) (go->VB) (out->RP) (tonight->NN) (and->CC) (see->VB) (if->IN) (we->PRP) (can->MD) (uh->VB) (notice->RB) (where->WRB) (mars->NNS) (and->CC) (venus->NN) (and->CC) (the->DT) (pleiades->NNS) (moon->NN) (are->VBP) ')
candidates to check:
2
('tags initial-> ', [('um', 'JJ'), ('come', 'NN'), ('to', 'TO'), ('school', 'NN'), ('and', 'CC'), ('ma', 'NN'), ('tell', 'VBP'), ('them', 'PRP'), ('i', 'VB'), ('m', 'MD'), ('not', 'RB'), ('coming', 'VBG'), ('today', 'NN')])
('tags -> ', '     (um->JJ) (come->NN) (to->TO) (school->NN) (and->CC) (ma->NN) (tell->VBP) (them->PRP) (i->VB) (m->MD) (not->RB) (coming->VBG) (today->NN) ')
candidates to check:
3
('tags initial-> ', [('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (there->EX) (s->VBZ) (no->DT) (school->NN) (today->NN) ')
('tags initial-> ', [('but', 'CC'), ('tell', 'VB'), ('them', 'PRP'), ('i', 'VB'), ('m', 'MD'), ('not', 'RB'), ('coming', 'VBG')])
('tags -> ', '     (but->CC) (tell->VB) (them->PRP) (i->VB) (m->MD) (not->RB) (coming->VBG) ')
candidates to check:
2
('tags initial-> ', [('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('one', 'NN'), ('there', 'RB'), ('to', 'TO'), ('answer', 'VB'), ('the', 'DT'), ('phone', 'NN')])
('tags -> ', '     (there->EX) (s->VBZ) (no->DT) (one->NN) (there->RB) (to->TO) (answer->VB) (the->DT) (phone->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('sunday', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (sunday->NN) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('all', 'DT'), ('home', 'NN'), ('eating', 'NN')])
('tags -> ', '     (they->PRP) (re->VBP) (all->DT) (home->NN) (eating->NN) ')
candidates to check:
1
('tags initial-> ', [('even', 'RB'), ('the', 'DT'), ('teachers', 'NNS')])
('tags -> ', '     (even->RB) (the->DT) (teachers->NNS) ')
candidates to check:
1
('tags initial-> ', [('even', 'RB'), ('the', 'DT'), ('teachers', 'NNS')])
('tags -> ', '     (even->RB) (the->DT) (teachers->NNS) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('going', 'VBG'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('school', 'NN'), ('when', 'WRB'), ('they', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO')])
('tags -> ', '     (they->PRP) (re->VBP) (not->RB) (going->VBG) (to->TO) (go->VB) (to->TO) (school->NN) (when->WRB) (they->PRP) (don->VBP) (t->NNS) (have->VBP) (to->TO) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('have', 'VBP'), ('families', 'NNS'), ('too', 'RB'), ('you', 'PRP'), ('know', 'VBP'), ('that', 'IN')])
('tags -> ', '     (they->PRP) (have->VBP) (families->NNS) (too->RB) (you->PRP) (know->VBP) (that->IN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('gail', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('son', 'NN'), ('and', 'CC'), ('karen', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('son', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (gail->NN) (has->VBZ) (a->DT) (son->NN) (and->CC) (karen->NN) (has->VBZ) (a->DT) (son->NN) ')
candidates to check:
1
('tags initial-> ', [('blow', 'VB'), ('your', 'PRP$'), ('nose', 'JJ'), ('please', 'NN')])
('tags -> ', '     (blow->VB) (your->PRP$) (nose->JJ) (please->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('his', 'PRP$'), ('son', 'NN'), ('christopher', 'NN')])
('tags -> ', '     (i->NN) (know->VBP) (his->PRP$) (son->NN) (christopher->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('his', 'PRP$'), ('son', 'NN')])
('tags -> ', '     (he->PRP) (s->VBD) (his->PRP$) (son->NN) ')
candidates to check:
1
('tags initial-> ', [('blow', 'NN')])
('tags -> ', '     (blow->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('i', 'VBZ'), ('heard', 'VBP'), ('it', 'PRP'), ('alright', 'VBD')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (i->VBZ) (heard->VBP) (it->PRP) (alright->VBD) ')
('tags initial-> ', [('heehee', 'NNS'), ('yes', 'NNS')])
('tags -> ', '     (heehee->NNS) (yes->NNS) ')
candidates to check:
4
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('how', 'WRB'), ('you', 'PRP'), ('make', 'VBP'), ('blow', 'VB'), ('your', 'PRP$'), ('nose', 'NN'), ('in', 'IN'), ('nathaniel', 'JJ'), ('land', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (how->WRB) (you->PRP) (make->VBP) (blow->VB) (your->PRP$) (nose->NN) (in->IN) (nathaniel->JJ) (land->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('think', 'VBP'), ('karen', 'NNS'), ('is', 'VBZ'), ('probably', 'RB'), ('home', 'NN'), ('with', 'IN'), ('christopher', 'JJR'), ('right', 'NN'), ('now', 'RB')])
('tags -> ', '     (well->RB) (i->JJ) (think->VBP) (karen->NNS) (is->VBZ) (probably->RB) (home->NN) (with->IN) (christopher->JJR) (right->NN) (now->RB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('christopher', 'NN')])
('tags -> ', '     (christopher->NN) ')
candidates to check:
5
('tags initial-> ', [('well', 'RB'), ('shouldn', 'JJ'), ('t', 'NN'), ('shouldn', 'NN'), ('t', 'NN'), ('he', 'PRP'), ('have', 'VB'), ('his', 'PRP$'), ('mummy', 'NN'), ('home', 'NN'), ('with', 'IN'), ('him', 'PRP'), ('on', 'IN'), ('one', 'CD'), ('day', 'NN'), ('a', 'DT'), ('week', 'NN')])
('tags -> ', '     (well->RB) (shouldn->JJ) (t->NN) (shouldn->NN) (t->NN) (he->PRP) (have->VB) (his->PRP$) (mummy->NN) (home->NN) (with->IN) (him->PRP) (on->IN) (one->CD) (day->NN) (a->DT) (week->NN) ')
('tags initial-> ', [('or', 'CC'), ('two', 'CD')])
('tags -> ', '     (or->CC) (two->CD) ')
candidates to check:
2
('tags initial-> ', [('aren', 'NNS'), ('t', 'VBP'), ('you', 'PRP'), ('sad', 'JJ'), ('when', 'WRB'), ('your', 'PRP$'), ('mummy', 'NN'), ('goes', 'VBZ'), ('to', 'TO'), ('work', 'VB')])
('tags -> ', '     (aren->NNS) (t->VBP) (you->PRP) (sad->JJ) (when->WRB) (your->PRP$) (mummy->NN) (goes->VBZ) (to->TO) (work->VB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('aren', 'NNS'), ('t', 'VBP'), ('you', 'PRP'), ('sad', 'JJ'), ('when', 'WRB'), ('your', 'PRP$'), ('mummy', 'NN'), ('goes', 'VBZ'), ('to', 'TO'), ('work', 'VB')])
('tags -> ', '     (aren->NNS) (t->VBP) (you->PRP) (sad->JJ) (when->WRB) (your->PRP$) (mummy->NN) (goes->VBZ) (to->TO) (work->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('get', 'VBP'), ('the', 'DT'), ('toy', 'NN'), ('that', 'WDT'), ('doesn', 'VBZ'), ('t', 'JJ'), ('talk', 'NN')])
('tags -> ', '     (i->NN) (get->VBP) (the->DT) (toy->NN) (that->WDT) (doesn->VBZ) (t->JJ) (talk->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('wind', 'VBP'), ('th', 'JJ'), ('is', 'VBZ'), ('this', 'DT'), ('thing', 'NN'), ('in', 'IN'), ('back', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('toy', 'NN'), ('it', 'PRP'), ('will', 'MD'), ('talk', 'VB')])
('tags -> ', '     (if->IN) (you->PRP) (wind->VBP) (th->JJ) (is->VBZ) (this->DT) (thing->NN) (in->IN) (back->NN) (of->IN) (your->PRP$) (toy->NN) (it->PRP) (will->MD) (talk->VB) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 30, 36]
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('wait', 'NN'), ('un', 'NN'), ('til', 'NN'), ('after', 'IN'), ('dinner', 'NN'), ('then', 'RB')])
('tags -> ', '     (i->NN) (ll->VBP) (wait->NN) (un->NN) (til->NN) (after->IN) (dinner->NN) (then->RB) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('wanted', 'VBN'), ('to', 'TO'), ('talk', 'VB'), ('too', 'RB'), ('much', 'JJ'), ('instead', 'RB'), ('of', 'IN'), ('eating', 'VBG')])
('tags -> ', '     (i->NN) (i->VBP) (wanted->VBN) (to->TO) (talk->VB) (too->RB) (much->JJ) (instead->RB) (of->IN) (eating->VBG) ')
('tags initial-> ', [('hi', 'NN')])
('tags -> ', '     (hi->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('judy', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (judy->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'RB'), ('eat', 'VB'), ('up', 'RP')])
('tags -> ', '     (okay->RB) (eat->VB) (up->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('toys', 'NN'), ('at', 'IN'), ('our', 'PRP$'), ('table', 'NN')])
('tags -> ', '     (no->DT) (toys->NN) (at->IN) (our->PRP$) (table->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('toys', 'NN'), ('at', 'IN'), ('our', 'PRP$'), ('table', 'NN')])
('tags -> ', '     (no->DT) (toys->NN) (at->IN) (our->PRP$) (table->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('didn', 'NN'), ('t', 'VBP'), ('play', 'VB'), ('any', 'DT'), ('toy', 'NN'), ('at', 'IN'), ('our', 'PRP$'), ('table', 'NN')])
('tags -> ', '     (i->NN) (didn->NN) (t->VBP) (play->VB) (any->DT) (toy->NN) (at->IN) (our->PRP$) (table->NN) ')
('tags initial-> ', [('not', 'RB'), ('me', 'PRP')])
('tags -> ', '     (not->RB) (me->PRP) ')
candidates to check:
5
('tags initial-> ', [('dylan', 'NN'), ('s', 'NN'), ('in', 'IN'), ('his', 'PRP$'), ('last', 'JJ'), ('minute', 'JJ'), ('thing', 'NN'), ('again', 'RB')])
('tags -> ', '     (dylan->NN) (s->NN) (in->IN) (his->PRP$) (last->JJ) (minute->JJ) (thing->NN) (again->RB) ')
candidates to check:
4
('tags initial-> ', [('um', 'NN'), ('he', 'PRP'), ('said', 'VBD'), ('he', 'PRP'), ('couldn', 'VBD'), ('t', 'NN'), ('use', 'IN'), ('the', 'DT'), ('emotional', 'JJ'), ('side', 'NN'), ('because', 'IN'), ('he', 'PRP'), ('his', 'PRP$'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('xxx', 'NN'), ('was', 'VBD'), ('um', 'JJ'), ('very', 'RB'), ('specific', 'JJ')])
('tags -> ', '     (um->NN) (he->PRP) (said->VBD) (he->PRP) (couldn->VBD) (t->NN) (use->IN) (the->DT) (emotional->JJ) (side->NN) (because->IN) (he->PRP) (his->PRP$) (part->NN) (of->IN) (the->DT) (xxx->NN) (was->VBD) (um->JJ) (very->RB) (specific->JJ) ')
('tags initial-> ', [('wh', 'NN'), ('at', 'IN')])
('tags -> ', '     (wh->NN) (at->IN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('economics', 'NNS'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (it->PRP) (was->VBD) (on->IN) (the->DT) (economics->NNS) (of->IN) (it->PRP) ')
('tags initial-> ', [('brendan', 'NN'), ('you', 'PRP'), ('really', 'RB'), ('should', 'MD'), ('have', 'VB'), ('done', 'VBN'), ('this', 'DT'), ('before', 'IN')])
('tags -> ', '     (brendan->NN) (you->PRP) (really->RB) (should->MD) (have->VB) (done->VBN) (this->DT) (before->IN) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('they', 'PRP'), ('what', 'WDT'), ('are', 'VBP'), ('those', 'DT'), ('things', 'NNS'), ('called', 'VBD'), ('when', 'WRB')])
('tags -> ', '     (what->WP) (do->VBP) (they->PRP) (what->WDT) (are->VBP) (those->DT) (things->NNS) (called->VBD) (when->WRB) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('put', 'VBD'), ('that', 'IN'), ('near', 'IN'), ('your', 'PRP$'), ('ear', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (put->VBD) (that->IN) (near->IN) (your->PRP$) (ear->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('very', 'RB'), ('sharp', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (very->RB) (sharp->JJ) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yuck', 'NN')])
('tags -> ', '     (oh->UH) (yuck->NN) ')
('tags initial-> ', [('now', 'RB'), ('this', 'DT'), ('is', 'VBZ'), ('there', 'RB'), ('goes', 'VBZ'), ('up', 'RP'), ('here', 'RB')])
('tags -> ', '     (now->RB) (this->DT) (is->VBZ) (there->RB) (goes->VBZ) (up->RP) (here->RB) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) ')
('tags initial-> ', [('nathaniel', 'RB'), ('no', 'DT')])
('tags -> ', '     (nathaniel->RB) (no->DT) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('swing', 'VBG'), ('your', 'PRP$'), ('head', 'NN'), ('around', 'IN'), ('while', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('eating', 'VBG')])
('tags -> ', '     (don->NN) (t->NN) (swing->VBG) (your->PRP$) (head->NN) (around->IN) (while->IN) (you->PRP) (re->VBP) (eating->VBG) ')
('tags initial-> ', [('a', 'DT'), ('re', 'NN'), ('you', 'PRP'), ('drinking', 'VBG'), ('your', 'PRP$'), ('quick', 'NN')])
('tags -> ', '     (a->DT) (re->NN) (you->PRP) (drinking->VBG) (your->PRP$) (quick->NN) ')
('tags initial-> ', [('but', 'CC'), ('but', 'CC'), ('i', 'JJ'), ('m', 'NN'), ('eating', 'VBG')])
('tags -> ', '     (but->CC) (but->CC) (i->JJ) (m->NN) (eating->VBG) ')
('tags initial-> ', [('i', 'JJ'), ('mean', 'VBP'), ('between', 'IN'), ('bites', 'NNS')])
('tags -> ', '     (i->JJ) (mean->VBP) (between->IN) (bites->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('swinging', 'VBG'), ('the', 'DT'), ('head', 'NN')])
('tags -> ', '     (no->DT) (swinging->VBG) (the->DT) (head->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN')])
('tags -> ', '     (daddy->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('so', 'RB'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('think', 'VB'), ('of', 'IN'), ('the', 'DT'), ('presents', 'NNS'), ('that', 'WDT'), ('mac', 'VBP'), ('and', 'CC'), ('melanie', 'VBP'), ('gave', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (and->CC) (so->RB) (what->WP) (did->VBD) (you->PRP) (think->VB) (of->IN) (the->DT) (presents->NNS) (that->WDT) (mac->VBP) (and->CC) (melanie->VBP) (gave->VBD) (you->PRP) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('good', 'JJ')])
('tags -> ', '     (they->PRP) (re->VBP) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('at', 'IN'), ('least', 'JJS'), ('i', 'JJ'), ('didn', 'VBP'), ('t', 'NNS'), ('know', 'VBP'), ('they', 'PRP'), ('gave', 'VBD'), ('presents', 'NNS'), ('to', 'TO'), ('people', 'NNS')])
('tags -> ', '     (well->RB) (at->IN) (least->JJS) (i->JJ) (didn->VBP) (t->NNS) (know->VBP) (they->PRP) (gave->VBD) (presents->NNS) (to->TO) (people->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('see', 'VB'), ('them', 'PRP'), ('at', 'IN'), ('christmas', 'NN'), ('time', 'NN')])
('tags -> ', '     (well->RB) (we->PRP) (didn->VBP) (t->JJ) (see->VB) (them->PRP) (at->IN) (christmas->NN) (time->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
9
('tags initial-> ', [('because', 'IN'), ('every', 'DT'), ('time', 'NN'), ('they', 'PRP'), ('were', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('come', 'VB'), ('down', 'RP'), ('here', 'RB'), ('they', 'PRP'), ('had', 'VBD'), ('snow', 'VBN'), ('and', 'CC'), ('every', 'DT'), ('time', 'NN'), ('we', 'PRP'), ('were', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('go', 'VB'), ('up', 'RP'), ('there', 'RB'), ('the', 'DT'), ('weather', 'NN'), ('was', 'VBD'), ('bad', 'JJ'), ('so', 'IN'), ('we', 'PRP'), ('had', 'VBD'), ('to', 'TO'), ('wait', 'VB'), ('un', 'JJ'), ('til', 'NN'), ('yesterday', 'NN'), ('to', 'TO'), ('see', 'VB'), ('them', 'PRP'), ('and', 'CC'), ('so', 'RB'), ('we', 'PRP'), ('gave', 'VBD'), ('we', 'PRP'), ('gave', 'VBD'), ('michael', 'PRP'), ('his', 'PRP$'), ('birthday', 'JJ'), ('present', 'JJ'), ('be', 'VB'), ('cause', 'NN'), ('we', 'PRP'), ('gave', 'VBD'), ('them', 'PRP'), ('their', 'PRP$'), ('christmas', 'NN'), ('present', 'NN'), ('before', 'IN'), ('christmas', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (because->IN) (every->DT) (time->NN) (they->PRP) (were->VBD) (going->VBG) (to->TO) (come->VB) (down->RP) (here->RB) (they->PRP) (had->VBD) (snow->VBN) (and->CC) (every->DT) (time->NN) (we->PRP) (were->VBD) (going->VBG) (to->TO) (go->VB) (up->RP) (there->RB) (the->DT) (weather->NN) (was->VBD) (bad->JJ) (so->IN) (we->PRP) (had->VBD) (to->TO) (wait->VB) (un->JJ) (til->NN) (yesterday->NN) (to->TO) (see->VB) (them->PRP) (and->CC) (so->RB) (we->PRP) (gave->VBD) (we->PRP) (gave->VBD) (michael->PRP) (his->PRP$) (birthday->JJ) (present->JJ) (be->VB) (cause->NN) (we->PRP) (gave->VBD) (them->PRP) (their->PRP$) (christmas->NN) (present->NN) (before->IN) (christmas->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('re', 'VBP'), ('their', 'PRP$'), ('friends', 'NNS')])
('tags -> ', '     (and->CC) (we->PRP) (re->VBP) (their->PRP$) (friends->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('but', 'CC'), ('at', 'IN'), ('least', 'JJS'), ('i', 'JJ'), ('didn', 'VBP'), ('t', 'JJ'), ('give', 'VBP'), ('melanie', 'NN'), ('a', 'DT'), ('present', 'JJ')])
('tags -> ', '     (but->CC) (at->IN) (least->JJS) (i->JJ) (didn->VBP) (t->JJ) (give->VBP) (melanie->NN) (a->DT) (present->JJ) ')
('tags initial-> ', [('we', 'PRP'), ('well', 'VBP')])
('tags -> ', '     (we->PRP) (well->VBP) ')
candidates to check:
4
descended from food: [['N'], 'honey', -1, 4]
honey
honey honey 304
[('we', 'PRP'), ('gave', 'VBD'), ('her', 'PRP'), ('her', 'PRP$'), ('birthday', 'JJ'), ('present', 'JJ'), ('honey', 'NN'), ('in', 'IN'), ('august', 'NN'), ('when', 'WRB'), ('she', 'PRP'), ('had', 'VBD'), ('her', 'PRP'), ('birthday', 'NN')]
['honey']
('tags initial-> ', [('we', 'PRP'), ('gave', 'VBD'), ('her', 'PRP'), ('her', 'PRP$'), ('birthday', 'JJ'), ('present', 'JJ'), ('honey', 'NN'), ('in', 'IN'), ('august', 'NN'), ('when', 'WRB'), ('she', 'PRP'), ('had', 'VBD'), ('her', 'PRP'), ('birthday', 'NN')])
('tags -> ', '     (we->PRP) (gave->VBD) (her->PRP) (her->PRP$) (birthday->JJ) (present->JJ) (honey->NN) (in->IN) (august->NN) (when->WRB) (she->PRP) (had->VBD) (her->PRP) (birthday->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('gave', 'VBD'), ('her', 'PRP'), ('her', 'PRP$'), ('christmas', 'JJ'), ('present', 'JJ'), ('before', 'IN'), ('christmas', 'NN'), ('and', 'CC'), ('what', 'WP'), ('they', 'PRP'), ('gave', 'VBD'), ('you', 'PRP'), ('was', 'VBD'), ('your', 'PRP$'), ('christmas', 'NN'), ('present', 'NN'), ('yesterday', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (gave->VBD) (her->PRP) (her->PRP$) (christmas->JJ) (present->JJ) (before->IN) (christmas->NN) (and->CC) (what->WP) (they->PRP) (gave->VBD) (you->PRP) (was->VBD) (your->PRP$) (christmas->NN) (present->NN) (yesterday->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('michael', 'PRP'), ('s', 'VBP'), ('birthday', 'NN'), ('was', 'VBD'), ('in', 'IN'), ('january', 'JJ')])
('tags -> ', '     (but->CC) (michael->PRP) (s->VBP) (birthday->NN) (was->VBD) (in->IN) (january->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('never', 'RB'), ('saw', 'VBD'), ('him', 'PRP'), ('in', 'IN'), ('january', 'NN'), ('so', 'IN'), ('that', 'DT'), ('s', 'NN'), ('why', 'WRB'), ('he', 'PRP'), ('got', 'VBD'), ('his', 'PRP$'), ('present', 'JJ'), ('yesterday', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (never->RB) (saw->VBD) (him->PRP) (in->IN) (january->NN) (so->IN) (that->DT) (s->NN) (why->WRB) (he->PRP) (got->VBD) (his->PRP$) (present->JJ) (yesterday->NN) ')
candidates to check:
1
('tags initial-> ', [('melanie', 'NN'), ('remembers', 'NNS'), ('that', 'IN'), ('we', 'PRP'), ('gave', 'VBD'), ('her', 'PRP'), ('present', 'NN'), ('before', 'IN')])
('tags -> ', '     (melanie->NN) (remembers->NNS) (that->IN) (we->PRP) (gave->VBD) (her->PRP) (present->NN) (before->IN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('they', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('give', 'VB'), ('me', 'PRP'), ('a', 'DT'), ('pr', 'JJ'), ('esent', 'JJ'), ('present', 'NN'), ('on', 'IN'), ('my', 'PRP$'), ('birthday', 'NN')])
('tags -> ', '     (but->CC) (they->PRP) (didn->VBP) (t->JJ) (give->VB) (me->PRP) (a->DT) (pr->JJ) (esent->JJ) (present->NN) (on->IN) (my->PRP$) (birthday->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('be', 'VB'), ('cause', 'VB'), ('your', 'PRP$'), ('birthday', 'NN'), ('is', 'VBZ'), ('coming', 'VBG'), ('up', 'RP'), ('next', 'JJ'), ('month', 'NN')])
('tags -> ', '     (be->VB) (cause->VB) (your->PRP$) (birthday->NN) (is->VBZ) (coming->VBG) (up->RP) (next->JJ) (month->NN) ')
candidates to check:
2
('tags initial-> ', [('last', 'JJ'), ('year', 'NN'), ('they', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (last->JJ) (year->NN) (they->PRP) (did->VBD) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
5
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('your', 'PRP$'), ('your', 'PRP$'), ('video', 'NN'), ('tapes', 'NNS'), ('with', 'IN'), ('uh', 'JJ'), ('cartoons', 'NNS'), ('on', 'IN'), ('them', 'PRP')])
('tags -> ', '     (you->PRP) (know->VBP) (your->PRP$) (your->PRP$) (video->NN) (tapes->NNS) (with->IN) (uh->JJ) (cartoons->NNS) (on->IN) (them->PRP) ')
candidates to check:
1
('tags initial-> ', [('um', 'NN'), ('which', 'WDT'), ('cartoons', 'NNS'), ('were', 'VBD'), ('they', 'PRP')])
('tags -> ', '     (um->NN) (which->WDT) (cartoons->NNS) (were->VBD) (they->PRP) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('know', 'VBP'), ('bugs', 'NNS'), ('bunny', 'NNS'), ('and', 'CC'), ('things', 'NNS'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (know->VBP) (bugs->NNS) (bunny->NNS) (and->CC) (things->NNS) (like->IN) (that->DT) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
6
('tags initial-> ', [('those', 'DT'), ('were', 'VBD'), ('from', 'IN'), ('michael', 'NN'), ('and', 'CC'), ('melanie', 'NN'), ('and', 'CC'), ('they', 'PRP'), ('give', 'VBP'), ('you', 'PRP'), ('the', 'DT'), ('sweatshirt', 'NN'), ('that', 'IN'), ('a', 'DT'), ('sweatshirt', 'NN'), ('that', 'IN'), ('you', 'PRP'), ('wore', 'VBP'), ('yesterday', 'NN'), ('and', 'CC'), ('uh', 'NN'), ('they', 'PRP'), ('ve', 'VBD'), ('given', 'VBN'), ('you', 'PRP'), ('other', 'JJ'), ('presents', 'NNS'), ('too', 'RB')])
('tags -> ', '     (those->DT) (were->VBD) (from->IN) (michael->NN) (and->CC) (melanie->NN) (and->CC) (they->PRP) (give->VBP) (you->PRP) (the->DT) (sweatshirt->NN) (that->IN) (a->DT) (sweatshirt->NN) (that->IN) (you->PRP) (wore->VBP) (yesterday->NN) (and->CC) (uh->NN) (they->PRP) (ve->VBD) (given->VBN) (you->PRP) (other->JJ) (presents->NNS) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('those', 'DT'), ('are', 'VBP'), ('the', 'DT'), ('ones', 'NNS'), ('i', 'VBP'), ('remember', 'VBP')])
('tags -> ', '     (but->CC) (those->DT) (are->VBP) (the->DT) (ones->NNS) (i->VBP) (remember->VBP) ')
candidates to check:
4
('tags initial-> ', [('did', 'VBD'), ('they', 'PRP'), ('ma', 'VB'), ('give', 'VB'), ('me', 'PRP'), ('the', 'DT'), ('pin', 'NN'), ('cushion', 'NN'), ('um', 'JJ'), ('tapes', 'NNS')])
('tags -> ', '     (did->VBD) (they->PRP) (ma->VB) (give->VB) (me->PRP) (the->DT) (pin->NN) (cushion->NN) (um->JJ) (tapes->NNS) ')
('tags initial-> ', [('yes', 'UH'), ('yes', 'NNS')])
('tags -> ', '     (yes->UH) (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ'), ('they', 'PRP'), ('gave', 'VBD'), ('you', 'PRP'), ('that', 'IN'), ('the', 'DT'), ('tape', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) (they->PRP) (gave->VBD) (you->PRP) (that->IN) (the->DT) (tape->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('mean', 'VBP'), ('the', 'DT'), ('uh', 'NN'), ('the', 'DT'), ('xxx', 'NN'), ('whose', 'WP$'), ('that', 'IN'), ('guy', 'NN'), ('who', 'WP'), ('uh', 'VBZ'), ('gets', 'VBZ'), ('all', 'PDT'), ('those', 'DT'), ('pins', 'NNS'), ('out', 'RP')])
('tags -> ', '     (but->CC) (you->PRP) (mean->VBP) (the->DT) (uh->NN) (the->DT) (xxx->NN) (whose->WP$) (that->IN) (guy->NN) (who->WP) (uh->VBZ) (gets->VBZ) (all->PDT) (those->DT) (pins->NNS) (out->RP) ')
candidates to check:
1
('tags initial-> ', [('cush', 'NN'), ('c', 'NN'), ('quash', 'NN'), ('c', 'NN')])
('tags -> ', '     (cush->NN) (c->NN) (quash->NN) (c->NN) ')
candidates to check:
7
('tags initial-> ', [('the', 'DT'), ('pin', 'NN'), ('cushion', 'NN'), ('man', 'NN'), ('who', 'WP'), ('pops', 'VBZ'), ('the', 'DT'), ('balloons', 'NNS')])
('tags -> ', '     (the->DT) (pin->NN) (cushion->NN) (man->NN) (who->WP) (pops->VBZ) (the->DT) (balloons->NNS) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('him', 'PRP')])
('tags -> ', '     (what->WP) (about->IN) (him->PRP) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('he', 'PRP'), ('cuts', 'VBZ'), ('balloons', 'NNS')])
('tags -> ', '     (well->RB) (he->PRP) (cuts->VBZ) (balloons->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('very', 'RB'), ('nice', 'JJ')])
('tags -> ', '     (and->CC) (that->DT) (s->VBZ) (not->RB) (very->RB) (nice->JJ) ')
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB')])
('tags -> ', '     (no->DT) (it->PRP) (s->VBZ) (not->RB) ')
candidates to check:
9
('tags initial-> ', [('next', 'JJ'), ('time', 'NN'), ('when', 'WRB'), ('we', 'PRP'), ('see', 'VBP'), ('the', 'DT'), ('pin', 'NN'), ('cushion', 'NN'), ('guy', 'NN'), ('tell', 'VBP'), ('him', 'PRP'), ('to', 'TO'), ('not', 'RB'), ('um', 'VB'), ('uh', 'JJ'), ('cut', 'VB'), ('the', 'DT'), ('balloons', 'NNS')])
('tags -> ', '     (next->JJ) (time->NN) (when->WRB) (we->PRP) (see->VBP) (the->DT) (pin->NN) (cushion->NN) (guy->NN) (tell->VBP) (him->PRP) (to->TO) (not->RB) (um->VB) (uh->JJ) (cut->VB) (the->DT) (balloons->NNS) ')
('tags initial-> ', [('tell', 'VB'), ('him', 'PRP'), ('not', 'RB'), ('to', 'TO')])
('tags -> ', '     (tell->VB) (him->PRP) (not->RB) (to->TO) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('mean', 'VBP'), ('tell', 'VB'), ('him', 'PRP'), ('not', 'RB'), ('to', 'TO'), ('pop', 'VB'), ('the', 'DT'), ('balloons', 'NNS')])
('tags -> ', '     (you->PRP) (mean->VBP) (tell->VB) (him->PRP) (not->RB) (to->TO) (pop->VB) (the->DT) (balloons->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('tell', 'VB'), ('him', 'PRP'), ('too', 'RB'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (you->PRP) (can->MD) (tell->VB) (him->PRP) (too->RB) (you->PRP) (know->VBP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('doesn', 'VBZ'), ('t', 'RB'), ('listen', 'VBN'), ('to', 'TO'), ('people', 'NNS')])
('tags -> ', '     (be->VB) (cause->NN) (he->PRP) (doesn->VBZ) (t->RB) (listen->VBN) (to->TO) (people->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('except', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('cartoon', 'NN'), ('than', 'IN')])
('tags -> ', '     (except->IN) (it->PRP) (s->VBZ) (a->DT) (cartoon->NN) (than->IN) ')
candidates to check:
4
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'NN'), ('he', 'PRP'), ('ll', 'VBZ'), ('stop', 'JJ'), ('popping', 'NN'), ('balloons', 'NNS'), ('because', 'IN'), ('on', 'IN'), ('the', 'DT'), ('video', 'NN'), ('he', 'PRP'), ('s', 'VBD'), ('always', 'RB'), ('uh', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('video', 'NN')])
('tags -> ', '     (i->NN) (i->VBP) (don->VBP) (t->JJ) (think->NN) (he->PRP) (ll->VBZ) (stop->JJ) (popping->NN) (balloons->NNS) (because->IN) (on->IN) (the->DT) (video->NN) (he->PRP) (s->VBD) (always->RB) (uh->VBN) (on->IN) (the->DT) (video->NN) ')
('tags initial-> ', [('popping', 'VBG')])
('tags -> ', '     (popping->VBG) ')
candidates to check:
2
('tags initial-> ', [('popping', 'VBG'), ('balloons', 'NNS')])
('tags -> ', '     (popping->VBG) (balloons->NNS) ')
('tags initial-> ', [('popping', 'VBG')])
('tags -> ', '     (popping->VBG) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('don', 'VB'), ('t', 'VBP'), ('the', 'DT'), ('balloons', 'NNS'), ('win', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('end', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (don->VB) (t->VBP) (the->DT) (balloons->NNS) (win->VBP) (in->IN) (the->DT) (end->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('don', 'NN'), ('t', 'VBD'), ('the', 'DT'), ('balloons', 'NNS'), ('win', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('end', 'NN')])
('tags -> ', '     (don->NN) (t->VBD) (the->DT) (balloons->NNS) (win->VBP) (in->IN) (the->DT) (end->NN) ')
candidates to check:
7
('tags initial-> ', [('don', 'NNS'), ('t', 'VBP'), ('they', 'PRP'), ('find', 'VBP'), ('their', 'PRP$'), ('way', 'NN'), ('to', 'TO'), ('get', 'VB'), ('rid', 'JJ'), ('of', 'IN'), ('the', 'DT'), ('pin', 'NN'), ('cushion', 'NN'), ('man', 'NN')])
('tags -> ', '     (don->NNS) (t->VBP) (they->PRP) (find->VBP) (their->PRP$) (way->NN) (to->TO) (get->VB) (rid->JJ) (of->IN) (the->DT) (pin->NN) (cushion->NN) (man->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yes', 'NNS')])
('tags -> ', '     (oh->UH) (yes->NNS) ')
('tags initial-> ', [('do', 'VBP'), ('they', 'PRP')])
('tags -> ', '     (do->VBP) (they->PRP) ')
('tags initial-> ', [('how', 'WRB')])
('tags -> ', '     (how->WRB) ')
('tags initial-> ', [('i', 'NN'), ('forget', 'NN')])
('tags -> ', '     (i->NN) (forget->NN) ')
candidates to check:
1
('tags initial-> ', [('maybe', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('have', 'VBP'), ('to', 'TO'), ('watch', 'VB'), ('the', 'DT'), ('cartoon', 'NN'), ('again', 'RB'), ('soon', 'RB'), ('to', 'TO'), ('see', 'VB'), ('how', 'WRB')])
('tags -> ', '     (maybe->RB) (we->PRP) (ll->VBP) (have->VBP) (to->TO) (watch->VB) (the->DT) (cartoon->NN) (again->RB) (soon->RB) (to->TO) (see->VB) (how->WRB) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('how', 'WRB'), ('they', 'PRP'), ('put', 'VBD'), ('stuff', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (know->VBP) (how->WRB) (they->PRP) (put->VBD) (stuff->NN) (in->IN) (it->PRP) ')
candidates to check:
8
('tags initial-> ', [('they', 'PRP'), ('put', 'VBD'), ('mm', 'PRP'), ('stu', 'VBP'), ('ff', 'JJ'), ('they', 'PRP'), ('put', 'VBD'), ('playdough', 'RP'), ('in', 'IN'), ('everything', 'NN'), ('and', 'CC'), ('then', 'RB'), ('they', 'PRP'), ('swim', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('pin', 'NN'), ('cush', 'NN'), ('c', 'NN'), ('guy', 'NN')])
('tags -> ', '     (they->PRP) (put->VBD) (mm->PRP) (stu->VBP) (ff->JJ) (they->PRP) (put->VBD) (playdough->RP) (in->IN) (everything->NN) (and->CC) (then->RB) (they->PRP) (swim->VBP) (on->IN) (the->DT) (pin->NN) (cush->NN) (c->NN) (guy->NN) ')
candidates to check:
6
('tags initial-> ', [('pin', 'NN'), ('cushion', 'NN'), ('guy', 'NN')])
('tags -> ', '     (pin->NN) (cushion->NN) (guy->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('s', 'VBZ'), ('how', 'WRB'), ('the', 'DT'), ('ending', 'VBG'), ('goes', 'VBZ')])
('tags -> ', '     (and->CC) (that->DT) (s->VBZ) (how->WRB) (the->DT) (ending->VBG) (goes->VBZ) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('he', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('pop', 'VB'), ('their', 'PRP$'), ('balloons', 'NNS'), ('any', 'DT'), ('more', 'RBR'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (no->DT) (he->PRP) (can->MD) (t->VB) (pop->VB) (their->PRP$) (balloons->NNS) (any->DT) (more->RBR) (like->IN) (that->DT) ')
('tags initial-> ', [('n', 'JJ'), ('o', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (n->JJ) (o->NN) (yeah->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
('tags initial-> ', [('good', 'JJ'), ('memory', 'NN'), ('nathaniel', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'JJ'), ('remember', 'NN'), ('that', 'IN'), ('part', 'NN')])
('tags -> ', '     (good->JJ) (memory->NN) (nathaniel->NN) (i->NN) (didn->VBP) (t->JJ) (remember->NN) (that->IN) (part->NN) ')
('tags initial-> ', [('you', 'PRP'), ('ll', 'VBP'), ('have', 'VBP'), ('to', 'TO'), ('see', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (ll->VBP) (have->VBP) (to->TO) (see->VB) (it->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('another', 'DT'), ('piece', 'NN'), ('of', 'IN')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (another->DT) (piece->NN) (of->IN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN'), ('my', 'PRP$'), ('t', 'NN'), ('v', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) (my->PRP$) (t->NN) (v->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 28, 35]
chicken
chicken chicken 234
[('want', 'VB'), ('another', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('chicken', 'NN')]
['chicken']
('tags initial-> ', [('want', 'VB'), ('another', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('chicken', 'NN')])
('tags -> ', '     (want->VB) (another->DT) (piece->NN) (of->IN) (chicken->NN) ')
('tags initial-> ', [('uh', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (uh->NN) (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('pieces', 'NNS')])
('tags -> ', '     (a->DT) (couple->NN) (of->IN) (pieces->NNS) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('has', 'VBZ'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('bone', 'NN')])
('tags -> ', '     (it->PRP) (has->VBZ) (a->DT) (lot->NN) (of->IN) (bone->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('let', 'VB'), ('us', 'PRP'), ('see', 'VB'), ('if', 'IN'), ('i', 'JJ')])
('tags -> ', '     (let->VB) (us->PRP) (see->VB) (if->IN) (i->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('here', 'RB'), ('here', 'RB'), ('you', 'PRP'), ('go', 'VBP')])
('tags -> ', '     (here->RB) (here->RB) (you->PRP) (go->VBP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('sorry', 'NN')])
('tags -> ', '     (sorry->NN) ')
('tags initial-> ', [('oh', 'UH'), ('that', 'DT'), ('s', 'VBD'), ('alright', 'NN')])
('tags -> ', '     (oh->UH) (that->DT) (s->VBD) (alright->NN) ')
candidates to check:
4
descended from food: [['N'], 'biscuits', 25, 33]
descended from food: [['N'], 'chicken', 43, 50]
descended from food: [['N'], 'biscuits', 25, 33]
biscuits
biscuits biscuits 263
[('i', 'NNS'), ('like', 'VBP'), ('to', 'TO'), ('wrap', 'VB'), ('the', 'DT'), ('biscuits', 'NNS'), ('and', 'CC'), ('have', 'VBP'), ('chicken', 'VBN'), ('and', 'CC'), ('biscuits', 'NNS')]
['biscuits']
chicken
chicken chicken 234
[('i', 'NNS'), ('like', 'VBP'), ('to', 'TO'), ('wrap', 'VB'), ('the', 'DT'), ('biscuits', 'NNS'), ('and', 'CC'), ('have', 'VBP'), ('chicken', 'VBN'), ('and', 'CC'), ('biscuits', 'NNS')]
['chicken']
('tags initial-> ', [('i', 'NNS'), ('like', 'VBP'), ('to', 'TO'), ('wrap', 'VB'), ('the', 'DT'), ('biscuits', 'NNS'), ('and', 'CC'), ('have', 'VBP'), ('chicken', 'VBN'), ('and', 'CC'), ('biscuits', 'NNS')])
('tags -> ', '     (i->NNS) (like->VBP) (to->TO) (wrap->VB) (the->DT) (biscuits->NNS) (and->CC) (have->VBP) (chicken->VBN) (and->CC) (biscuits->NNS) ')
candidates to check:
3
('tags initial-> ', [('want', 'NN'), ('to', 'TO'), ('watch', 'VB'), ('television', 'NN'), ('with', 'IN'), ('me', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('my', 'PRP$'), ('television', 'NN'), ('that', 'IN'), ('i', 'NN'), ('got', 'VBD'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (want->NN) (to->TO) (watch->VB) (television->NN) (with->IN) (me->PRP) (on->IN) (the->DT) (my->PRP$) (television->NN) (that->IN) (i->NN) (got->VBD) (right->RB) (here->RB) ')
('tags initial-> ', [('who', 'WP'), ('wants', 'VBZ'), ('to', 'TO'), ('watch', 'VB'), ('it', 'PRP'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (who->WP) (wants->VBZ) (to->TO) (watch->VB) (it->PRP) (with->IN) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('raise', 'VB'), ('your', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (raise->VB) (your->PRP$) (hands->NNS) ')
('tags initial-> ', [('not', 'RB'), ('me', 'PRP')])
('tags -> ', '     (not->RB) (me->PRP) ')
candidates to check:
2
descended from food: [['N'], 'dinner', 20, 26]
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('eat', 'VB'), ('dinner', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) (eat->VB) (dinner->NN) ')
candidates to check:
1
('tags initial-> ', [('raise', 'VB'), ('your', 'PRP$'), ('hand', 'NN')])
('tags -> ', '     (raise->VB) (your->PRP$) (hand->NN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('to', 'TO')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (to->TO) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('should', 'MD'), ('eat', 'VB'), ('instead', 'RB'), ('of', 'IN'), ('playing', 'VBG'), ('television', 'NN'), ('don', 'NN'), ('t', 'IN'), ('you', 'PRP'), ('think', 'VBP')])
('tags -> ', '     (i->JJ) (think->VBP) (we->PRP) (should->MD) (eat->VB) (instead->RB) (of->IN) (playing->VBG) (television->NN) (don->NN) (t->IN) (you->PRP) (think->VBP) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('my', 'PRP$'), ('television', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (my->PRP$) (television->NN) ')
candidates to check:
3
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('turn', 'VB'), ('your', 'PRP$'), ('television', 'NN'), ('off', 'IN'), ('for', 'IN'), ('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('minutes', 'NNS')])
('tags -> ', '     (can->MD) (you->PRP) (turn->VB) (your->PRP$) (television->NN) (off->IN) (for->IN) (a->DT) (couple->NN) (of->IN) (minutes->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('off', 'RP')])
('tags -> ', '     (it->PRP) (s->VBD) (off->RP) ')
('tags initial-> ', [('oh', 'RB'), ('good', 'JJ')])
('tags -> ', '     (oh->RB) (good->JJ) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('put', 'VB'), ('it', 'PRP'), ('away', 'RP')])
('tags -> ', '     (can->MD) (you->PRP) (put->VB) (it->PRP) (away->RP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('but', 'CC'), ('down', 'IN'), ('there', 'RB')])
('tags -> ', '     (but->CC) (down->IN) (there->RB) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('until', 'IN'), ('i', 'JJ'), ('eat', 'NN')])
('tags -> ', '     (until->IN) (i->JJ) (eat->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('about', 'IN'), ('seven', 'CD'), ('minutes', 'NNS'), ('to', 'TO'), ('six', 'CD')])
('tags -> ', '     (it->PRP) (s->VBZ) (about->IN) (seven->CD) (minutes->NNS) (to->TO) (six->CD) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('noise', 'NN'), ('bugs', 'NNS'), ('me', 'PRP')])
('tags -> ', '     (that->DT) (noise->NN) (bugs->NNS) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('noise', 'NN')])
('tags -> ', '     (what->WP) (noise->NN) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('that', 'IN'), ('that', 'DT'), ('noise', 'NN'), ('from', 'IN'), ('the', 'DT'), ('re', 'NN'), ('frigerator', 'NN'), ('it', 'PRP'), ('bugs', 'VBZ'), ('me', 'PRP')])
('tags -> ', '     (but->CC) (that->IN) (that->DT) (noise->NN) (from->IN) (the->DT) (re->NN) (frigerator->NN) (it->PRP) (bugs->VBZ) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('the', 'DT'), ('fan', 'NN'), ('uh', 'NN'), ('that', 'IN'), ('you', 'PRP'), ('must', 'MD'), ('hear', 'VB')])
('tags -> ', '     (i->NN) (think->VBP) (it->PRP) (s->VBZ) (the->DT) (fan->NN) (uh->NN) (that->IN) (you->PRP) (must->MD) (hear->VB) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('the', 'DT'), ('refrigerator', 'NN'), ('just', 'RB'), ('kicked', 'VBN'), ('on', 'IN')])
('tags -> ', '     (no->DT) (the->DT) (refrigerator->NN) (just->RB) (kicked->VBN) (on->IN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('never', 'RB'), ('mind', 'NN')])
('tags -> ', '     (never->RB) (mind->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'DT'), ('bugs', 'NNS'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (that->DT) (bugs->NNS) (me->PRP) ')
('tags initial-> ', [('well', 'RB'), ('tough', 'JJ')])
('tags -> ', '     (well->RB) (tough->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('ll', 'VBP'), ('tell', 'VBP'), ('that', 'IN'), ('to', 'TO'), ('stop', 'VB')])
('tags -> ', '     (i->JJ) (ll->VBP) (tell->VBP) (that->IN) (to->TO) (stop->VB) ')
candidates to check:
1
('tags initial-> ', [('stop', 'NN'), ('that', 'DT'), ('refrigerator', 'NN')])
('tags -> ', '     (stop->NN) (that->DT) (refrigerator->NN) ')
candidates to check:
6
('tags initial-> ', [('oh', 'UH'), ('don', 'NN'), ('t', 'NNS'), ('say', 'VBP'), ('that', 'IN'), ('because', 'IN'), ('if', 'IN'), ('the', 'DT'), ('refrigerator', 'NN'), ('stops', 'VBZ'), ('everything', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('freezer', 'NN'), ('will', 'MD'), ('thaw', 'VB'), ('and', 'CC'), ('it', 'PRP'), ('will', 'MD'), ('not', 'RB'), ('be', 'VB'), ('any', 'DT'), ('good', 'JJ'), ('and', 'CC'), ('everything', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('in', 'IN'), ('the', 'DT'), ('refrigerator', 'NN'), ('will', 'MD'), ('get', 'VB'), ('warm', 'JJ'), ('and', 'CC'), ('it', 'PRP'), ('willn', 'VBD'), ('t', 'RB'), ('be', 'VB'), ('cold', 'VBN'), ('anymore', 'RB')])
('tags -> ', '     (oh->UH) (don->NN) (t->NNS) (say->VBP) (that->IN) (because->IN) (if->IN) (the->DT) (refrigerator->NN) (stops->VBZ) (everything->NN) (that->WDT) (s->VBZ) (in->IN) (the->DT) (freezer->NN) (will->MD) (thaw->VB) (and->CC) (it->PRP) (will->MD) (not->RB) (be->VB) (any->DT) (good->JJ) (and->CC) (everything->NN) (that->WDT) (s->VBZ) (in->IN) (the->DT) (refrigerator->NN) (will->MD) (get->VB) (warm->JJ) (and->CC) (it->PRP) (willn->VBD) (t->RB) (be->VB) (cold->VBN) (anymore->RB) ')
candidates to check:
3
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('keep', 'VB'), ('everything', 'NN'), ('cold', 'NN'), ('in', 'IN'), ('the', 'DT'), ('re', 'NN'), ('frige', 'NN'), ('rator', 'NN')])
('tags -> ', '     (we->PRP) (have->VBP) (to->TO) (keep->VB) (everything->NN) (cold->NN) (in->IN) (the->DT) (re->NN) (frige->NN) (rator->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('why', 'WRB'), ('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('refrigerator', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (why->WRB) (we->PRP) (have->VBP) (a->DT) (refrigerator->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('makes', 'VBZ'), ('that', 'IN'), ('noise', 'NN'), ('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('working', 'VBG'), ('right', 'RB')])
('tags -> ', '     (and->CC) (it->PRP) (makes->VBZ) (that->IN) (noise->NN) (be->VB) (cause->NN) (it->PRP) (s->VBD) (working->VBG) (right->RB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('s', 'VBD'), ('a', 'DT'), ('quiet', 'JJ'), ('noise', 'NN')])
('tags -> ', '     (and->CC) (it->PRP) (s->VBD) (a->DT) (quiet->JJ) (noise->NN) ')
candidates to check:
1
('tags initial-> ', [('dylan', 'NN'), ('is', 'VBZ'), ('probably', 'RB'), ('at', 'IN'), ('the', 'DT'), ('library', 'NN'), ('until', 'IN'), ('they', 'PRP'), ('re', 'VBP'), ('closed', 'VBD')])
('tags -> ', '     (dylan->NN) (is->VBZ) (probably->RB) (at->IN) (the->DT) (library->NN) (until->IN) (they->PRP) (re->VBP) (closed->VBD) ')
('tags initial-> ', [('you', 'PRP'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (you->PRP) (think->VBP) (so->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('left', 'VBD'), ('here', 'RB'), ('it', 'PRP'), ('was', 'VBD'), ('after', 'IN'), ('two', 'CD')])
('tags -> ', '     (when->WRB) (he->PRP) (left->VBD) (here->RB) (it->PRP) (was->VBD) (after->IN) (two->CD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('s', 'VBZ'), ('going', 'VBG'), ('to', 'TO'), ('earling', 'VBG'), ('s', 'JJ'), ('house', 'NN'), ('today', 'NN')])
('tags -> ', '     (and->CC) (he->PRP) (s->VBZ) (going->VBG) (to->TO) (earling->VBG) (s->JJ) (house->NN) (today->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('know', 'VBP'), ('he', 'PRP'), ('probably', 'RB'), ('didn', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('to', 'TO'), ('the', 'DT'), ('library', 'NN'), ('before', 'IN'), ('three', 'CD'), ('thirty', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (know->VBP) (he->PRP) (probably->RB) (didn->VBD) (t->JJ) (get->NN) (to->TO) (the->DT) (library->NN) (before->IN) (three->CD) (thirty->NN) ')
('tags initial-> ', [('probably', 'RB'), ('not', 'RB')])
('tags -> ', '     (probably->RB) (not->RB) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('library', 'JJ'), ('closes', 'NNS'), ('at', 'IN')])
('tags -> ', '     (the->DT) (library->JJ) (closes->NNS) (at->IN) ')
('tags initial-> ', [('five', 'CD'), ('thirty', 'NN')])
('tags -> ', '     (five->CD) (thirty->NN) ')
candidates to check:
1
('tags initial-> ', [('five', 'CD'), ('five', 'CD'), ('thirty', 'NN')])
('tags -> ', '     (five->CD) (five->CD) (thirty->NN) ')
candidates to check:
1
('tags initial-> ', [('five', 'CD'), ('or', 'CC'), ('five', 'CD'), ('thirty', 'NNS')])
('tags -> ', '     (five->CD) (or->CC) (five->CD) (thirty->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('sorry', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('get', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (m->VBP) (sorry->NN) (i->NN) (didn->VBP) (t->NN) (get->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('saying', 'VBG'), ('if', 'IN'), ('the', 'DT'), ('library', 'JJ'), ('wasn', 'NN'), ('t', 'NN'), ('open', 'JJ'), ('that', 'IN'), ('s', 'NN'), ('alright', 'NN')])
('tags -> ', '     (he->PRP) (was->VBD) (saying->VBG) (if->IN) (the->DT) (library->JJ) (wasn->NN) (t->NN) (open->JJ) (that->IN) (s->NN) (alright->NN) ')
candidates to check:
4
('tags initial-> ', [('other', 'JJ'), ('kids', 'NNS'), ('will', 'MD'), ('be', 'VB'), ('done', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('books', 'NNS'), ('they', 'PRP'), ('took', 'VBD'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('library', 'NN'), ('and', 'CC'), ('and', 'CC'), ('i', 'NNS'), ('can', 'MD'), ('look', 'VB'), ('at', 'IN'), ('them', 'PRP'), ('and', 'CC'), ('mine', 'VB')])
('tags -> ', '     (other->JJ) (kids->NNS) (will->MD) (be->VB) (done->VBN) (with->IN) (the->DT) (books->NNS) (they->PRP) (took->VBD) (out->IN) (of->IN) (the->DT) (library->NN) (and->CC) (and->CC) (i->NNS) (can->MD) (look->VB) (at->IN) (them->PRP) (and->CC) (mine->VB) ')
candidates to check:
5
('tags initial-> ', [('so', 'RB'), ('social', 'JJ'), ('studies', 'NNS'), ('isn', 'VBP'), ('t', 'IN'), ('the', 'DT'), ('first', 'JJ'), ('thing', 'NN'), ('they', 'PRP'), ('had', 'VBD'), ('in', 'IN'), ('mind', 'NN')])
('tags -> ', '     (so->RB) (social->JJ) (studies->NNS) (isn->VBP) (t->IN) (the->DT) (first->JJ) (thing->NN) (they->PRP) (had->VBD) (in->IN) (mind->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('nathaniel', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('crazy', 'JJ')])
('tags -> ', '     (nathaniel->NN) (you->PRP) (re->VBP) (crazy->JJ) ')
candidates to check:
2
('tags initial-> ', [('when', 'WRB'), ('would', 'MD'), ('you', 'PRP'), ('have', 'VB'), ('time', 'NN')])
('tags -> ', '     (when->WRB) (would->MD) (you->PRP) (have->VB) (time->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('now', 'RB'), ('xxx', 'VBZ'), ('eat', 'NN'), ('this', 'DT')])
('tags -> ', '     (now->RB) (xxx->VBZ) (eat->NN) (this->DT) ')
candidates to check:
3
('tags initial-> ', [('is', 'VBZ'), ('this', 'DT'), ('song', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('singing', 'VBG'), ('something', 'NN'), ('you', 'PRP'), ('learned', 'VBN'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (is->VBZ) (this->DT) (song->NN) (he->PRP) (was->VBD) (singing->VBG) (something->NN) (you->PRP) (learned->VBN) (in->IN) (school->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('henry', 'NN'), ('knows', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (henry->NN) (knows->VBZ) (it->PRP) ')
('tags initial-> ', [('henry', 'NN')])
('tags -> ', '     (henry->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('make', 'VB'), ('a', 'DT'), ('cabin', 'NN')])
('tags -> ', '     (make->VB) (a->DT) (cabin->NN) ')
candidates to check:
2
('tags initial-> ', [('make', 'VB'), ('your', 'PRP$'), ('cabin', 'NN'), ('for', 'IN'), ('the', 'DT'), ('song', 'NN'), ('please', 'NN')])
('tags -> ', '     (make->VB) (your->PRP$) (cabin->NN) (for->IN) (the->DT) (song->NN) (please->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
5
('tags initial-> ', [('in', 'IN'), ('your', 'PRP$'), ('cabin', 'NN'), ('in', 'IN'), ('the', 'DT'), ('wood', 'NN'), ('a', 'DT'), ('little', 'JJ'), ('man', 'NN'), ('by', 'IN'), ('a', 'DT'), ('window', 'NN'), ('stood', 'VBD'), ('saw', 'VBD'), ('a', 'DT'), ('rabbit', 'NN'), ('hopping', 'NN'), ('by', 'IN'), ('quiet', 'JJ'), ('as', 'IN'), ('can', 'MD'), ('be', 'VB')])
('tags -> ', '     (in->IN) (your->PRP$) (cabin->NN) (in->IN) (the->DT) (wood->NN) (a->DT) (little->JJ) (man->NN) (by->IN) (a->DT) (window->NN) (stood->VBD) (saw->VBD) (a->DT) (rabbit->NN) (hopping->NN) (by->IN) (quiet->JJ) (as->IN) (can->MD) (be->VB) ')
('tags initial-> ', [('help', 'VB'), ('me', 'PRP')])
('tags -> ', '     (help->VB) (me->PRP) ')
('tags initial-> ', [('help', 'VB'), ('me', 'PRP')])
('tags -> ', '     (help->VB) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('rabbit', 'NN')])
('tags -> ', '     (the->DT) (rabbit->NN) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('quiet', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (talking->VBG) (quiet->JJ) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBD'), ('trying', 'VBG'), ('to', 'TO'), ('learn', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (m->VBD) (trying->VBG) (to->TO) (learn->VB) (it->PRP) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('why', 'WRB')])
('tags -> ', '     (that->DT) (s->VBZ) (why->WRB) ')
('tags initial-> ', [('go', 'VB'), ('ahead', 'RB')])
('tags -> ', '     (go->VB) (ahead->RB) ')
candidates to check:
2
('tags initial-> ', [('before', 'IN'), ('the', 'DT'), ('hunter', 'NN'), ('shoot', 'NN'), ('me', 'PRP'), ('dead', 'JJ'), ('little', 'JJ'), ('rabbit', 'NN'), ('come', 'VB'), ('inside', 'IN'), ('safely', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('hide', 'VB')])
('tags -> ', '     (before->IN) (the->DT) (hunter->NN) (shoot->NN) (me->PRP) (dead->JJ) (little->JJ) (rabbit->NN) (come->VB) (inside->IN) (safely->RB) (you->PRP) (will->MD) (hide->VB) ')
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('this', 'DT'), ('cabin', 'NN')])
('tags -> ', '     (now->RB) (this->DT) (cabin->NN) ')
candidates to check:
5
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('cabin', 'NN'), ('in', 'IN'), ('the', 'DT'), ('woods', 'NNS'), ('a', 'DT'), ('little', 'JJ'), ('man', 'NN'), ('by', 'IN'), ('the', 'DT'), ('window', 'NN'), ('stood', 'VBD')])
('tags -> ', '     (in->IN) (the->DT) (cabin->NN) (in->IN) (the->DT) (woods->NNS) (a->DT) (little->JJ) (man->NN) (by->IN) (the->DT) (window->NN) (stood->VBD) ')
candidates to check:
1
('tags initial-> ', [('rabbit', 'NN')])
('tags -> ', '     (rabbit->NN) ')
candidates to check:
5
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('cabin', 'NN'), ('in', 'IN'), ('the', 'DT'), ('woods', 'NNS'), ('a', 'DT'), ('little', 'JJ'), ('man', 'NN'), ('by', 'IN'), ('the', 'DT'), ('window', 'NN'), ('stood', 'VBD')])
('tags -> ', '     (in->IN) (the->DT) (cabin->NN) (in->IN) (the->DT) (woods->NNS) (a->DT) (little->JJ) (man->NN) (by->IN) (the->DT) (window->NN) (stood->VBD) ')
candidates to check:
1
('tags initial-> ', [('rabbit', 'NN')])
('tags -> ', '     (rabbit->NN) ')
('tags initial-> ', [('go', 'VB'), ('ahead', 'RB')])
('tags -> ', '     (go->VB) (ahead->RB) ')
candidates to check:
1
('tags initial-> ', [('saw', 'VBD'), ('a', 'DT'), ('rabbit', 'NN'), ('hopping', 'NN'), ('by', 'IN')])
('tags -> ', '     (saw->VBD) (a->DT) (rabbit->NN) (hopping->NN) (by->IN) ')
candidates to check:
1
('tags initial-> ', [('saw', 'VBD'), ('a', 'DT'), ('rabbit', 'NN'), ('hopping', 'NN'), ('by', 'IN')])
('tags -> ', '     (saw->VBD) (a->DT) (rabbit->NN) (hopping->NN) (by->IN) ')
candidates to check:
1
('tags initial-> ', [('rab', 'JJ'), ('bit', 'NN'), ('hopping', 'NN'), ('by', 'IN')])
('tags -> ', '     (rab->JJ) (bit->NN) (hopping->NN) (by->IN) ')
('tags initial-> ', [('quiet', 'JJ'), ('as', 'IN'), ('can', 'MD'), ('be', 'VB'), ('help', 'VB'), ('me', 'PRP')])
('tags -> ', '     (quiet->JJ) (as->IN) (can->MD) (be->VB) (help->VB) (me->PRP) ')
('tags initial-> ', [('help', 'VB'), ('me', 'PRP')])
('tags -> ', '     (help->VB) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('rabbit', 'NN'), ('said', 'VBD'), ('before', 'IN'), ('the', 'DT'), ('hunter', 'NN'), ('shoots', 'VB'), ('me', 'PRP'), ('dead', 'JJ')])
('tags -> ', '     (the->DT) (rabbit->NN) (said->VBD) (before->IN) (the->DT) (hunter->NN) (shoots->VB) (me->PRP) (dead->JJ) ')
candidates to check:
2
('tags initial-> ', [('little', 'JJ'), ('rabbit', 'NN'), ('come', 'VB'), ('inside', 'IN')])
('tags -> ', '     (little->JJ) (rabbit->NN) (come->VB) (inside->IN) ')
('tags initial-> ', [('hunter', 'NN'), ('shoots', 'NNS'), ('me', 'PRP'), ('dead', 'JJ')])
('tags -> ', '     (hunter->NN) (shoots->NNS) (me->PRP) (dead->JJ) ')
candidates to check:
2
('tags initial-> ', [('little', 'JJ'), ('rabbit', 'NN'), ('come', 'VB'), ('inside', 'IN')])
('tags -> ', '     (little->JJ) (rabbit->NN) (come->VB) (inside->IN) ')
('tags initial-> ', [('safely', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('hide', 'VB')])
('tags -> ', '     (safely->RB) (you->PRP) (will->MD) (hide->VB) ')
('tags initial-> ', [('safely', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('hide', 'VB')])
('tags -> ', '     (safely->RB) (you->PRP) (will->MD) (hide->VB) ')
candidates to check:
3
('tags initial-> ', [('now', 'RB'), ('a', 'DT'), ('big', 'JJ'), ('cabin', 'NN'), ('and', 'CC'), ('this', 'DT'), ('time', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('loud', 'JJ')])
('tags -> ', '     (now->RB) (a->DT) (big->JJ) (cabin->NN) (and->CC) (this->DT) (time->NN) (it->PRP) (s->VBD) (gon->VB) (na->TO) (be->VB) (loud->JJ) ')
('tags initial-> ', [('how', 'WRB'), ('s', 'NN'), ('that', 'IN')])
('tags -> ', '     (how->WRB) (s->NN) (that->IN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('cabin', 'NN'), ('in', 'IN'), ('the', 'DT'), ('woods', 'NNS')])
('tags -> ', '     (in->IN) (the->DT) (cabin->NN) (in->IN) (the->DT) (woods->NNS) ')
candidates to check:
2
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('cabin', 'NN'), ('in', 'IN'), ('the', 'DT'), ('woods', 'NNS')])
('tags -> ', '     (in->IN) (the->DT) (cabin->NN) (in->IN) (the->DT) (woods->NNS) ')
candidates to check:
3
('tags initial-> ', [('a', 'DT'), ('little', 'JJ'), ('man', 'NN'), ('by', 'IN'), ('a', 'DT'), ('window', 'NN'), ('stood', 'VBD')])
('tags -> ', '     (a->DT) (little->JJ) (man->NN) (by->IN) (a->DT) (window->NN) (stood->VBD) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('while', 'IN')])
('tags -> ', '     (and->CC) (while->IN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('the', 'DT'), ('rabbit', 'NN'), ('s', 'JJ'), ('hopping', 'NN'), ('by', 'IN'), ('safely', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('hide', 'VB')])
('tags -> ', '     (the->DT) (rabbit->NN) (s->JJ) (hopping->NN) (by->IN) (safely->RB) (you->PRP) (will->MD) (hide->VB) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('skipped', 'VBD'), ('a', 'DT'), ('whole', 'JJ'), ('bunch', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('more', 'RBR'), ('didn', 'JJ'), ('t', 'NN'), ('you', 'PRP')])
('tags -> ', '     (you->PRP) (skipped->VBD) (a->DT) (whole->JJ) (bunch->NN) (of->IN) (it->PRP) (more->RBR) (didn->JJ) (t->NN) (you->PRP) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('skip', 'NN'), ('any', 'DT')])
('tags -> ', '     (no->DT) (i->NN) (didn->VBP) (t->NN) (skip->NN) (any->DT) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('a', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('a', 'DT'), ('fun', 'NN'), ('song', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (a->DT) (that->WDT) (s->VBZ) (a->DT) (fun->NN) (song->NN) ')
honey
honey honey 304
[('i', 'NN'), ('learned', 'VBD'), ('it', 'PRP'), ('from', 'IN'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('i', 'NN'), ('learned', 'VBD'), ('it', 'PRP'), ('from', 'IN'), ('honey', 'NN')])
('tags -> ', '     (i->NN) (learned->VBD) (it->PRP) (from->IN) (honey->NN) ')
honey
honey honey 304
[('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('nice', 'JJ'), ('one', 'CD'), ('of', 'IN'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('nice', 'JJ'), ('one', 'CD'), ('of', 'IN'), ('honey', 'NN')])
('tags -> ', '     (that->DT) (was->VBD) (a->DT) (nice->JJ) (one->CD) (of->IN) (honey->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('hear', 'VBP'), ('that', 'IN'), ('one', 'CD'), ('daddy', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (hear->VBP) (that->IN) (one->CD) (daddy->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'RB'), ('heard', 'VBP'), ('it', 'PRP'), ('all', 'PDT'), ('the', 'DT'), ('way', 'NN'), ('from', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('room', 'NN')])
('tags -> ', '     (i->RB) (heard->VBP) (it->PRP) (all->PDT) (the->DT) (way->NN) (from->IN) (the->DT) (other->JJ) (room->NN) ')
('tags initial-> ', [('i', 'NN'), ('thought', 'VBD'), ('you', 'PRP'), ('would', 'MD')])
('tags -> ', '     (i->NN) (thought->VBD) (you->PRP) (would->MD) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('hear', 'VB'), ('it', 'PRP'), ('again', 'RB')])
('tags -> ', '     (daddy->NN) (want->VBP) (to->TO) (hear->VB) (it->PRP) (again->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
3
('tags initial-> ', [('i', 'VB'), ('one', 'CD'), ('that', 'WDT'), ('i', 'VBP'), ('d', 'VBP'), ('like', 'IN'), ('to', 'TO'), ('hear', 'VB'), ('is', 'VBZ'), ('uh', 'JJ'), ('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB')])
('tags -> ', '     (i->VB) (one->CD) (that->WDT) (i->VBP) (d->VBP) (like->IN) (to->TO) (hear->VB) (is->VBZ) (uh->JJ) (love->NN) (is->VBZ) (something->NN) (if->IN) (you->PRP) (give->VBP) (it->PRP) (away->RB) ')
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('that', 'DT'), ('one', 'CD')])
('tags -> ', '     (i->NN) (like->IN) (that->DT) (one->CD) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('little', 'JJ'), ('ra', 'JJ'), ('bbit', 'NN'), ('what', 'WP')])
('tags -> ', '     (little->JJ) (ra->JJ) (bbit->NN) (what->WP) ')
candidates to check:
4
('tags initial-> ', [('uh', 'NN'), ('i', 'NN'), ('would', 'MD'), ('like', 'VB'), ('to', 'TO'), ('hear', 'VB'), ('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB')])
('tags -> ', '     (uh->NN) (i->NN) (would->MD) (like->VB) (to->TO) (hear->VB) (love->NN) (is->VBZ) (something->NN) (if->IN) (you->PRP) (give->VBP) (it->PRP) (away->RB) ')
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('that', 'DT'), ('one', 'CD')])
('tags -> ', '     (i->NN) (like->IN) (that->DT) (one->CD) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('hear', 'VB'), ('it', 'PRP'), ('too', 'RB')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (hear->VB) (it->PRP) (too->RB) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
3
('tags initial-> ', [('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB')])
('tags -> ', '     (love->NN) (is->VBZ) (something->NN) (if->IN) (you->PRP) (give->VBP) (it->PRP) (away->RB) (give->VBP) (it->PRP) (away->RB) ')
candidates to check:
3
('tags initial-> ', [('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB'), ('you', 'PRP'), ('end', 'VBP'), ('up', 'RP'), ('having', 'VBG'), ('more', 'JJR')])
('tags -> ', '     (love->NN) (is->VBZ) (something->NN) (if->IN) (you->PRP) (give->VBP) (it->PRP) (away->RB) (you->PRP) (end->VBP) (up->RP) (having->VBG) (more->JJR) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('like', 'IN'), ('a', 'DT'), ('magic', 'JJ'), ('penny', 'NN'), ('hold', 'VB'), ('it', 'PRP'), ('tight', 'JJ'), ('and', 'CC'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('friends', 'NNS'), ('that', 'WDT'), ('are', 'VBP'), ('near', 'IN')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (like->IN) (a->DT) (magic->JJ) (penny->NN) (hold->VB) (it->PRP) (tight->JJ) (and->CC) (you->PRP) (don->VBP) (t->NNS) (have->VBP) (any->DT) (friends->NNS) (that->WDT) (are->VBP) (near->IN) ')
candidates to check:
1
('tags initial-> ', [('have', 'VBP'), ('so', 'RB'), ('many', 'JJ'), ('and', 'CC'), ('o', 'JJ'), ('ver', 'NN'), ('o', 'NN'), ('ver', 'NN'), ('over', 'IN'), ('the', 'DT'), ('floor', 'NN')])
('tags -> ', '     (have->VBP) (so->RB) (many->JJ) (and->CC) (o->JJ) (ver->NN) (o->NN) (ver->NN) (over->IN) (the->DT) (floor->NN) ')
candidates to check:
3
('tags initial-> ', [('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB')])
('tags -> ', '     (love->NN) (is->VBZ) (something->NN) (if->IN) (you->PRP) (give->VBP) (it->PRP) (away->RB) (give->VBP) (it->PRP) (away->RB) ')
candidates to check:
3
('tags initial-> ', [('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('give', 'VBP'), ('it', 'PRP'), ('away', 'RB'), ('you', 'PRP'), ('end', 'VBP'), ('up', 'RP'), ('having', 'VBG'), ('more', 'JJR')])
('tags -> ', '     (love->NN) (is->VBZ) (something->NN) (if->IN) (you->PRP) (give->VBP) (it->PRP) (away->RB) (you->PRP) (end->VBP) (up->RP) (having->VBG) (more->JJR) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'NN')])
('tags -> ', '     (oh->UH) (xxx->NN) ')
candidates to check:
5
('tags initial-> ', [('want', 'NN'), ('to', 'TO'), ('hear', 'VB'), ('the', 'DT'), ('other', 'JJ'), ('love', 'NN'), ('song', 'NN')])
('tags -> ', '     (want->NN) (to->TO) (hear->VB) (the->DT) (other->JJ) (love->NN) (song->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('if', 'IN'), ('there', 'EX'), ('whirling', 'VBG'), ('swirling', 'NN')])
('tags -> ', '     (if->IN) (there->EX) (whirling->VBG) (swirling->NN) ')
('tags initial-> ', [('sure', 'NN')])
('tags -> ', '     (sure->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('love', 'NN')])
('tags -> ', '     (love->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('love', 'NN')])
('tags -> ', '     (what->WP) (is->VBZ) (love->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('is', 'VBZ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (what->WP) (is->VBZ) ')
candidates to check:
1
('tags initial-> ', [('only', 'RB'), ('you', 'PRP'), ('know', 'VBP'), ('this', 'DT'), ('song', 'NN'), ('here', 'RB')])
('tags -> ', '     (only->RB) (you->PRP) (know->VBP) (this->DT) (song->NN) (here->RB) ')
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN')])
('tags -> ', '     (no->DT) (i->JJ) (don->VBP) (t->NN) ')
('tags initial-> ', [('then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('sing', 'VBG'), ('that', 'IN'), ('one', 'CD'), ('right', 'NN')])
('tags -> ', '     (then->RB) (you->PRP) (can->MD) (t->VB) (sing->VBG) (that->IN) (one->CD) (right->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (be->VB) (cause->NN) (i->JJ) (don->VBP) (t->NN) (know->VBP) (it->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('when', 'WRB'), ('you', 'PRP'), ('do', 'VBP'), ('learn', 'VB'), ('it', 'PRP'), ('better', 'JJR'), ('will', 'MD'), ('you', 'PRP'), ('sing', 'VBG'), ('it', 'PRP'), ('to', 'TO'), ('us', 'PRP')])
('tags -> ', '     (when->WRB) (you->PRP) (do->VBP) (learn->VB) (it->PRP) (better->JJR) (will->MD) (you->PRP) (sing->VBG) (it->PRP) (to->TO) (us->PRP) ')
('tags initial-> ', [('at', 'IN'), ('open', 'JJ'), ('center', 'NN'), ('i', 'NN'), ('learn', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (at->IN) (open->JJ) (center->NN) (i->NN) (learn->VBP) (it->PRP) ')
candidates to check:
10
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('time', 'NN'), ('i', 'NN'), ('ever', 'RB'), ('heard', 'VBD'), ('that', 'IN'), ('second', 'JJ'), ('part', 'NN'), ('of', 'IN'), ('love', 'NN'), ('is', 'VBZ'), ('something', 'NN'), ('that', 'WDT'), ('about', 'IN'), ('the', 'DT'), ('penny', 'NN'), ('part', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (the->DT) (first->JJ) (time->NN) (i->NN) (ever->RB) (heard->VBD) (that->IN) (second->JJ) (part->NN) (of->IN) (love->NN) (is->VBZ) (something->NN) (that->WDT) (about->IN) (the->DT) (penny->NN) (part->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('never', 'RB'), ('heard', 'VBD'), ('that', 'IN'), ('part', 'NN'), ('before', 'IN')])
('tags -> ', '     (i->NN) (never->RB) (heard->VBD) (that->IN) (part->NN) (before->IN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('very', 'RB'), ('pretty', 'RB')])
('tags -> ', '     (that->DT) (s->VBD) (very->RB) (pretty->RB) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('like', 'IN'), ('a', 'DT'), ('magic', 'JJ'), ('penny', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (like->IN) (a->DT) (magic->JJ) (penny->NN) ')
candidates to check:
3
('tags initial-> ', [('love', 'NN'), ('is', 'VBZ'), ('like', 'IN'), ('a', 'DT'), ('magic', 'JJ'), ('penny', 'NN')])
('tags -> ', '     (love->NN) (is->VBZ) (like->IN) (a->DT) (magic->JJ) (penny->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('turn', 'VB'), ('the', 'DT'), ('overhead', 'JJ'), ('light', 'NN'), ('off', 'RP')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (turn->VB) (the->DT) (overhead->JJ) (light->NN) (off->RP) ')
candidates to check:
1
('tags initial-> ', [('sun', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('like', 'IN'), ('a', 'DT'), ('ma', 'NN'), ('gic', 'NN'), ('why', 'WRB'), ('are', 'VBP'), ('you', 'PRP'), ('turning', 'VBG'), ('off', 'RP'), ('the', 'DT'), ('light', 'NN')])
('tags -> ', '     (sun->NN) (it->PRP) (s->VBZ) (just->RB) (like->IN) (a->DT) (ma->NN) (gic->NN) (why->WRB) (are->VBP) (you->PRP) (turning->VBG) (off->RP) (the->DT) (light->NN) ')
('tags initial-> ', [('just', 'RB'), ('just', 'RB'), ('one', 'CD'), ('of', 'IN'), ('them', 'PRP')])
('tags -> ', '     (just->RB) (just->RB) (one->CD) (of->IN) (them->PRP) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('still', 'RB'), ('have', 'VBP'), ('the', 'DT'), ('two', 'CD'), ('other', 'JJ'), ('lights', 'NNS'), ('on', 'IN'), ('in', 'IN'), ('the', 'DT'), ('room', 'NN')])
('tags -> ', '     (you->PRP) (still->RB) (have->VBP) (the->DT) (two->CD) (other->JJ) (lights->NNS) (on->IN) (in->IN) (the->DT) (room->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('turn', 'VB'), ('that', 'DT'), ('light', 'VBD'), ('off', 'RP')])
('tags -> ', '     (why->WRB) (did->VBD) (you->PRP) (turn->VB) (that->DT) (light->VBD) (off->RP) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('now', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('daddy', 'JJ'), ('s', 'JJ'), ('turn', 'NN'), ('to', 'TO'), ('have', 'VB'), ('the', 'DT'), ('lights', 'NNS'), ('the', 'DT'), ('way', 'NN'), ('he', 'PRP'), ('likes', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (now->RB) (it->PRP) (s->VBZ) (daddy->JJ) (s->JJ) (turn->NN) (to->TO) (have->VB) (the->DT) (lights->NNS) (the->DT) (way->NN) (he->PRP) (likes->VBZ) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('turn', 'VBP'), ('the', 'DT'), ('fan', 'NN'), ('back', 'RB'), ('on', 'IN')])
('tags -> ', '     (i->NN) (ll->VBP) (turn->VBP) (the->DT) (fan->NN) (back->RB) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('the', 'DT'), ('fan', 'NN')])
('tags -> ', '     (but->CC) (we->PRP) (don->VBP) (t->JJ) (need->VBP) (the->DT) (fan->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('nice', 'JJ'), ('to', 'TO'), ('to', 'TO'), ('have', 'VB'), ('the', 'DT'), ('fan', 'NN'), ('on', 'IN'), ('low', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (nice->JJ) (to->TO) (to->TO) (have->VB) (the->DT) (fan->NN) (on->IN) (low->JJ) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('have', 'VB'), ('a', 'DT'), ('a', 'DT'), ('cigarette', 'NN'), ('if', 'IN'), ('that', 'DT'), ('wouldn', 'VBZ'), ('t', 'RB'), ('be', 'VB'), ('objectionable', 'JJ')])
('tags -> ', '     (i->NN) (was->VBD) (going->VBG) (to->TO) (have->VB) (a->DT) (a->DT) (cigarette->NN) (if->IN) (that->DT) (wouldn->VBZ) (t->RB) (be->VB) (objectionable->JJ) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('does', 'VBZ'), ('that', 'IN'), ('mean', 'VB'), ('you', 'PRP'), ('want', 'VBP'), ('t', 'VB'), ('a', 'DT'), ('be', 'VB'), ('excused', 'VBN')])
('tags -> ', '     (does->VBZ) (that->IN) (mean->VB) (you->PRP) (want->VBP) (t->VB) (a->DT) (be->VB) (excused->VBN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('come', 'VB'), ('back', 'RB'), ('to', 'TO'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (come->VB) (back->RB) (to->TO) (the->DT) (table->NN) ')
('tags initial-> ', [('oh', 'UH'), ('bring', 'VBG'), ('it', 'PRP'), ('have', 'VBP'), ('it', 'PRP'), ('here', 'RB')])
('tags -> ', '     (oh->UH) (bring->VBG) (it->PRP) (have->VBP) (it->PRP) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('that', 'DT'), ('s', 'VBP'), ('why', 'WRB'), ('you', 'PRP'), ('wanted', 'VBD'), ('the', 'DT'), ('fan', 'NN'), ('on', 'IN')])
('tags -> ', '     (oh->UH) (that->DT) (s->VBP) (why->WRB) (you->PRP) (wanted->VBD) (the->DT) (fan->NN) (on->IN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('mean', 'VBP'), ('if', 'IN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('sit', 'VB'), ('and', 'CC'), ('smoke', 'VB'), ('in', 'IN'), ('the', 'DT'), ('kitchen', 'NN'), ('might', 'MD'), ('as', 'RB'), ('well', 'RB'), ('turn', 'IN'), ('the', 'DT'), ('overhead', 'JJ'), ('fan', 'NN'), ('on', 'IN')])
('tags -> ', '     (i->JJ) (mean->VBP) (if->IN) (i->NNS) (have->VBP) (to->TO) (sit->VB) (and->CC) (smoke->VB) (in->IN) (the->DT) (kitchen->NN) (might->MD) (as->RB) (well->RB) (turn->IN) (the->DT) (overhead->JJ) (fan->NN) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('idea', 'NN')])
('tags -> ', '     (good->JJ) (idea->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('my', 'PRP$'), ('tummy', 'NN')])
('tags -> ', '     (oh->UH) (my->PRP$) (tummy->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('just', 'RB'), ('sitting', 'VBG'), ('here', 'RB'), ('eating', 'VBG'), ('while', 'IN')])
('tags -> ', '     (we->PRP) (re->VBP) (just->RB) (sitting->VBG) (here->RB) (eating->VBG) (while->IN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('your', 'PRP$'), ('toy', 'NN'), ('mom', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (your->PRP$) (toy->NN) (mom->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'IN'), ('realize', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('eaten', 'VBN'), ('that', 'IN'), ('much', 'JJ')])
('tags -> ', '     (i->NN) (didn->VBP) (t->IN) (realize->NN) (i->NN) (had->VBD) (eaten->VBN) (that->IN) (much->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('here', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('toy', 'NN'), ('mom', 'NN')])
('tags -> ', '     (here->RB) (s->VB) (your->PRP$) (toy->NN) (mom->NN) ')
candidates to check:
3
('tags initial-> ', [('wind', 'NN'), ('uh', 'NN'), ('that', 'IN'), ('thing', 'NN'), ('in', 'IN'), ('back', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('toy', 'NN')])
('tags -> ', '     (wind->NN) (uh->NN) (that->IN) (thing->NN) (in->IN) (back->NN) (of->IN) (your->PRP$) (toy->NN) ')
candidates to check:
4
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('toys', 'NNS'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('munchkin', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (any->DT) (toys->NNS) (at->IN) (the->DT) (table->NN) (munchkin->NN) ')
('tags initial-> ', [('get', 'VB'), ('away', 'RP'), ('xxx', 'NN')])
('tags -> ', '     (get->VB) (away->RP) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('on', 'IN'), ('the', 'DT'), ('seat', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (on->IN) (the->DT) (seat->NN) ')
candidates to check:
4
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('toys', 'NNS'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('munchkin', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (any->DT) (toys->NNS) (at->IN) (the->DT) (table->NN) (munchkin->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('nathaniel', 'VBN'), ('the', 'DT'), ('boy', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('sit', 'VB'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (can->MD) (be->VB) (nathaniel->VBN) (the->DT) (boy->NN) (you->PRP) (can->MD) (sit->VB) (at->IN) (the->DT) (table->NN) ')
candidates to check:
2
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('a', 'DT'), ('toy', 'NN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('in', 'IN'), ('your', 'PRP$'), ('toybox', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (want->VBP) (to->TO) (be->VB) (a->DT) (toy->NN) (you->PRP) (have->VBP) (to->TO) (go->VB) (in->IN) (your->PRP$) (toybox->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('h', 'NN')])
('tags -> ', '     (a->DT) (h->NN) ')
candidates to check:
5
descended from food: [['N'], 'dinner', 11, 17]
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('dinner', 'NN'), ('time', 'NN'), ('not', 'RB'), ('play', 'VB'), ('time', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (dinner->NN) (time->NN) (not->RB) (play->VB) (time->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('the', 'DT'), ('teacher', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (the->DT) (teacher->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('m', 'NNS'), ('doing', 'VBG')])
('tags -> ', '     (and->CC) (i->VB) (m->NNS) (doing->VBG) ')
('tags initial-> ', [('uh', 'NN'), ('uh', 'NN')])
('tags -> ', '     (uh->NN) (uh->NN) ')
candidates to check:
1
('tags initial-> ', [('something', 'NN')])
('tags -> ', '     (something->NN) ')
('tags initial-> ', [('uh', 'NN'), ('uh', 'NN')])
('tags -> ', '     (uh->NN) (uh->NN) ')
candidates to check:
4
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('sitting', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('wrong', 'JJ'), ('seat', 'NN'), ('then', 'RB'), ('that', 'DT'), ('seat', 'NN'), ('is', 'VBZ'), ('for', 'IN'), ('nathaniel', 'VBG'), ('the', 'DT'), ('boy', 'NN')])
('tags -> ', '     (well->RB) (you->PRP) (re->VBP) (sitting->VBG) (in->IN) (the->DT) (wrong->JJ) (seat->NN) (then->RB) (that->DT) (seat->NN) (is->VBZ) (for->IN) (nathaniel->VBG) (the->DT) (boy->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('m', 'VBP'), ('pretending', 'VBG'), ('it', 'PRP'), ('s', 'VBZ'), ('for', 'IN'), ('um', 'JJ'), ('the', 'DT'), ('teacher', 'NN')])
('tags -> ', '     (well->RB) (i->JJ) (m->VBP) (pretending->VBG) (it->PRP) (s->VBZ) (for->IN) (um->JJ) (the->DT) (teacher->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('pretending', 'VBG'), ('it', 'PRP'), ('s', 'VBZ'), ('for', 'IN'), ('the', 'DT'), ('teacher', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (pretending->VBG) (it->PRP) (s->VBZ) (for->IN) (the->DT) (teacher->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('just', 'RB'), ('pretending', 'VBG'), ('that', 'IN')])
('tags -> ', '     (i->JJ) (m->NN) (just->RB) (pretending->VBG) (that->IN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('m', 'VBP'), ('pretending', 'VBG'), ('that', 'IN'), ('i', 'JJ'), ('m', 'VBP'), ('writing', 'VBG'), ('a', 'DT'), ('letter', 'NN'), ('to', 'TO'), ('the', 'DT'), ('other', 'JJ'), ('teacher', 'NN'), ('who', 'WP'), ('s', 'VBZ'), ('away', 'RB')])
('tags -> ', '     (and->CC) (i->VB) (m->VBP) (pretending->VBG) (that->IN) (i->JJ) (m->VBP) (writing->VBG) (a->DT) (letter->NN) (to->TO) (the->DT) (other->JJ) (teacher->NN) (who->WP) (s->VBZ) (away->RB) ')
candidates to check:
2
('tags initial-> ', [('where', 'WRB'), ('is', 'VBZ'), ('the', 'DT'), ('other', 'JJ'), ('teacher', 'NN'), ('away', 'RB'), ('at', 'IN')])
('tags -> ', '     (where->WRB) (is->VBZ) (the->DT) (other->JJ) (teacher->NN) (away->RB) (at->IN) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('home', 'NN')])
('tags -> ', '     (at->IN) (home->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('other', 'JJ'), ('teachers', 'NNS'), ('is', 'VBZ'), ('sick', 'JJ')])
('tags -> ', '     (the->DT) (other->JJ) (teachers->NNS) (is->VBZ) (sick->JJ) ')
candidates to check:
2
descended from food: [['N'], 'dinner', 108, 114]
('tags initial-> ', [('well', 'RB'), ('teacher', 'RB'), ('i', 'JJ'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('make', 'VB'), ('sure', 'JJ'), ('you', 'PRP'), ('drink', 'VBP'), ('your', 'PRP$'), ('quick', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('make', 'VB'), ('sure', 'JJ'), ('you', 'PRP'), ('finish', 'VB'), ('your', 'PRP$'), ('dinner', 'NN')])
('tags -> ', '     (well->RB) (teacher->RB) (i->JJ) (want->VBP) (you->PRP) (to->TO) (make->VB) (sure->JJ) (you->PRP) (drink->VBP) (your->PRP$) (quick->JJ) (and->CC) (i->JJ) (want->VBP) (you->PRP) (to->TO) (make->VB) (sure->JJ) (you->PRP) (finish->VB) (your->PRP$) (dinner->NN) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('letter', 'NN')])
('tags -> ', '     (here->RB) (s->VBZ) (a->DT) (letter->NN) ')
('tags initial-> ', [('well', 'RB'), ('what', 'WP'), ('does', 'VBZ'), ('it', 'PRP'), ('say', 'VB')])
('tags -> ', '     (well->RB) (what->WP) (does->VBZ) (it->PRP) (say->VB) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('read', 'VB'), ('it', 'PRP'), ('until', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('teacher', 'NN'), ('comes', 'VBZ'), ('back', 'RB')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (read->VB) (it->PRP) (until->IN) (the->DT) (other->JJ) (teacher->NN) (comes->VBZ) (back->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('tomorrow', 'NN')])
('tags -> ', '     (tomorrow->NN) ')
('tags initial-> ', [('hey', 'NN'), ('teach', 'VBP'), ('make', 'VB'), ('sure', 'JJ'), ('you', 'PRP'), ('uh', 'VBP'), ('finish', 'JJ'), ('drinking', 'NN'), ('your', 'PRP$'), ('quick', 'NN')])
('tags -> ', '     (hey->NN) (teach->VBP) (make->VB) (sure->JJ) (you->PRP) (uh->VBP) (finish->JJ) (drinking->NN) (your->PRP$) (quick->NN) ')
('tags initial-> ', [('whoa', 'NN')])
('tags -> ', '     (whoa->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('now', 'RB'), ('today', 'NN'), ('today', 'NN'), ('there', 'RB'), ('the', 'DT'), ('other', 'JJ'), ('teacher', 'NN'), ('s', 'NN'), ('back', 'RB')])
('tags -> ', '     (now->RB) (today->NN) (today->NN) (there->RB) (the->DT) (other->JJ) (teacher->NN) (s->NN) (back->RB) ')
candidates to check:
2
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('if', 'IN'), ('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('a', 'DT'), ('newer', 'JJR'), ('information', 'NN'), ('please', 'NN'), ('almanac', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (if->IN) (we->PRP) (have->VBP) (a->DT) (a->DT) (newer->JJR) (information->NN) (please->NN) (almanac->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'NN'), ('we', 'PRP'), ('do', 'VBP'), ('that', 'DT'), ('s', 'VB'), ('the', 'DT'), ('only', 'JJ'), ('one', 'NN'), ('as', 'RB'), ('far', 'RB'), ('as', 'IN'), ('i', 'NNS'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->NN) (we->PRP) (do->VBP) (that->DT) (s->VB) (the->DT) (only->JJ) (one->NN) (as->RB) (far->RB) (as->IN) (i->NNS) (know->VBP) ')
candidates to check:
3
('tags initial-> ', [('no', 'DT'), ('hot', 'JJ'), ('el', 'VBZ'), ('the', 'DT'), ('hotel', 'NN'), ('um', 'JJ'), ('book', 'NN')])
('tags -> ', '     (no->DT) (hot->JJ) (el->VBZ) (the->DT) (hotel->NN) (um->JJ) (book->NN) ')
candidates to check:
2
('tags initial-> ', [('would', 'MD'), ('that', 'WDT'), ('have', 'VBP'), ('been', 'VBN'), ('something', 'NN'), ('for', 'IN'), ('dylan', 'NN'), ('to', 'TO'), ('look', 'VB'), ('in', 'IN')])
('tags -> ', '     (would->MD) (that->WDT) (have->VBP) (been->VBN) (something->NN) (for->IN) (dylan->NN) (to->TO) (look->VB) (in->IN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('is', 'VBZ'), ('that', 'DT'), ('why', 'WRB'), ('you', 'PRP'), ('pulled', 'VBD'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (is->VBZ) (that->DT) (why->WRB) (you->PRP) (pulled->VBD) (it->PRP) (out->RP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('hotel', 'NN')])
('tags -> ', '     (the->DT) (hotel->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'RB'), ('even', 'RB'), ('think', 'VBP'), ('of', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->NN) (didn->VBP) (t->RB) (even->RB) (think->VBP) (of->IN) (that->DT) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('hotel', 'NN'), ('uh', 'JJ'), ('book', 'NN')])
('tags -> ', '     (the->DT) (hotel->NN) (uh->JJ) (book->NN) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('not', 'RB'), ('a', 'DT'), ('book', 'NN'), ('about', 'IN'), ('hotels', 'NNS')])
('tags -> ', '     (no->DT) (that->WDT) (s->VBZ) (not->RB) (a->DT) (book->NN) (about->IN) (hotels->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
5
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('a', 'DT'), ('book', 'NN'), ('that', 'WDT'), ('has', 'VBZ'), ('all', 'DT'), ('facts', 'NNS'), ('in', 'IN'), ('it', 'PRP'), ('about', 'IN'), ('different', 'JJ'), ('thing', 'NN'), ('you', 'PRP'), ('need', 'VBP'), ('and', 'CC'), ('after', 'IN'), ('use', 'NN'), ('dylan', 'NN'), ('s', 'VBZ'), ('napkin', 'JJ'), ('since', 'IN'), ('he', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('here', 'RB')])
('tags -> ', '     (it->PRP) (s->VBD) (a->DT) (book->NN) (that->WDT) (has->VBZ) (all->DT) (facts->NNS) (in->IN) (it->PRP) (about->IN) (different->JJ) (thing->NN) (you->PRP) (need->VBP) (and->CC) (after->IN) (use->NN) (dylan->NN) (s->VBZ) (napkin->JJ) (since->IN) (he->PRP) (s->VBZ) (not->RB) (here->RB) ')
('tags initial-> ', [('okay', 'NN'), ('i', 'NN'), ('ll', 'VBP'), ('do', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (okay->NN) (i->NN) (ll->VBP) (do->VBP) (it->PRP) ')
candidates to check:
3
('tags initial-> ', [('please', 'VB'), ('wipe', 'VB'), ('your', 'PRP$'), ('hand', 'NN'), ('with', 'IN'), ('it', 'PRP'), ('because', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('keep', 'VBP'), ('touching', 'VBG'), ('your', 'PRP$'), ('eyes', 'NNS'), ('and', 'CC'), ('your', 'PRP$'), ('hands', 'NNS'), ('are', 'VBP'), ('greasy', 'JJ')])
('tags -> ', '     (please->VB) (wipe->VB) (your->PRP$) (hand->NN) (with->IN) (it->PRP) (because->IN) (you->PRP) (you->PRP) (keep->VBP) (touching->VBG) (your->PRP$) (eyes->NNS) (and->CC) (your->PRP$) (hands->NNS) (are->VBP) (greasy->JJ) ')
('tags initial-> ', [('th', 'NN'), ('at', 'IN'), ('that', 'DT'), ('s', 'NN'), ('right', 'RB')])
('tags -> ', '     (th->NN) (at->IN) (that->DT) (s->NN) (right->RB) ')
candidates to check:
1
('tags initial-> ', [('take', 'VB'), ('dylan', 'NN'), ('s', 'JJ'), ('napkin', 'NN')])
('tags -> ', '     (take->VB) (dylan->NN) (s->JJ) (napkin->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'NN'), ('do', 'VBP'), ('another', 'DT'), ('one', 'NN')])
('tags -> ', '     (i->NN) (ll->NN) (do->VBP) (another->DT) (one->NN) ')
('tags initial-> ', [('i', 'JJ'), ('steal', 'VBP'), ('it', 'PRP'), ('from', 'IN'), ('him', 'PRP')])
('tags -> ', '     (i->JJ) (steal->VBP) (it->PRP) (from->IN) (him->PRP) ')
('tags initial-> ', [('okay', 'NN'), ('and', 'CC'), ('i', 'NN'), ('will', 'MD'), ('replace', 'VB'), ('it', 'PRP')])
('tags -> ', '     (okay->NN) (and->CC) (i->NN) (will->MD) (replace->VB) (it->PRP) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 24, 30]
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('comes', 'VBZ'), ('for', 'IN'), ('dinner', 'NN')])
('tags -> ', '     (when->WRB) (he->PRP) (comes->VBZ) (for->IN) (dinner->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('ll', 'MD'), ('have', 'VB'), ('no', 'DT'), ('napkins', 'NNS'), ('for', 'IN'), ('get', 'NN'), ('clean', 'JJ')])
('tags -> ', '     (he->PRP) (ll->MD) (have->VB) (no->DT) (napkins->NNS) (for->IN) (get->NN) (clean->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'JJ'), ('greedy', 'NN'), ('brother', 'NN'), ('you', 'PRP')])
('tags -> ', '     (oh->JJ) (greedy->NN) (brother->NN) (you->PRP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('i', 'JJ'), ('m', 'VBP'), ('ernie', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (i->JJ) (m->VBP) (ernie->NN) ')
candidates to check:
2
('tags initial-> ', [('bert', 'NN'), ('foll', 'NN'), ('ow', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('game', 'NN'), ('called', 'VBN'), ('follow', 'VBP'), ('the', 'DT'), ('arrow', 'NN')])
('tags -> ', '     (bert->NN) (foll->NN) (ow->IN) (it->PRP) (s->VBZ) (a->DT) (game->NN) (called->VBN) (follow->VBP) (the->DT) (arrow->NN) ')
('tags initial-> ', [('play', 'NN'), ('it', 'PRP')])
('tags -> ', '     (play->NN) (it->PRP) ')
('tags initial-> ', [('follow', 'VB'), ('the', 'DT'), ('arrows', 'NNS')])
('tags -> ', '     (follow->VB) (the->DT) (arrows->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('bird', 'NN')])
('tags -> ', '     (this->DT) (bird->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('he', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('do', 'VBP'), ('that', 'IN')])
('tags -> ', '     (he->PRP) (doesn->VBZ) (t->JJ) (do->VBP) (that->IN) ')
('tags initial-> ', [('he', 'PRP'), ('says', 'VBZ'), ('zzz', 'NN'), ('q', 'NN')])
('tags -> ', '     (he->PRP) (says->VBZ) (zzz->NN) (q->NN) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
('tags initial-> ', [('try', 'NN'), ('that', 'WDT')])
('tags -> ', '     (try->NN) (that->WDT) ')
candidates to check:
4
cake
cake cake 412
[('i', 'NN'), ('think', 'VBP'), ('maybe', 'RB'), ('we', 'PRP'), ('should', 'MD'), ('celebrate', 'VB'), ('brook', 'NN'), ('s', 'NN'), ('birthday', 'NN'), ('today', 'NN'), ('even', 'RB'), ('though', 'IN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('cake', 'NN')]
['cake']
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('maybe', 'RB'), ('we', 'PRP'), ('should', 'MD'), ('celebrate', 'VB'), ('brook', 'NN'), ('s', 'NN'), ('birthday', 'NN'), ('today', 'NN'), ('even', 'RB'), ('though', 'IN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('cake', 'NN')])
('tags -> ', '     (i->NN) (think->VBP) (maybe->RB) (we->PRP) (should->MD) (celebrate->VB) (brook->NN) (s->NN) (birthday->NN) (today->NN) (even->RB) (though->IN) (we->PRP) (don->VBP) (t->NNS) (have->VBP) (a->DT) (cake->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('we', 'PRP'), ('could', 'MD'), ('make', 'VB'), ('one', 'CD')])
('tags -> ', '     (we->PRP) (could->MD) (make->VB) (one->CD) ')
('tags initial-> ', [('i', 'NN'), ('was', 'VBD')])
('tags -> ', '     (i->NN) (was->VBD) ')
candidates to check:
4
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('just', 'RB'), ('looking', 'VBG'), ('at', 'IN'), ('the', 'DT'), ('suicide', 'NN'), ('rates', 'NNS'), ('around', 'IN'), ('the', 'DT'), ('world', 'NN')])
('tags -> ', '     (i->NN) (was->VBD) (just->RB) (looking->VBG) (at->IN) (the->DT) (suicide->NN) (rates->NNS) (around->IN) (the->DT) (world->NN) ')
('tags initial-> ', [('we', 'PRP'), ('could', 'MD')])
('tags -> ', '     (we->PRP) (could->MD) ')
candidates to check:
2
descended from food: [['N'], 'eggs', 23, 27]
eggs
eggs eggs 131
[('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('with', 'IN'), ('eggs', 'NNS')]
['eggs']
cake
cake cake 412
[('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('with', 'IN'), ('eggs', 'NNS')]
['cake']
('tags initial-> ', [('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('with', 'IN'), ('eggs', 'NNS')])
('tags -> ', '     (make->VB) (a->DT) (cake->NN) (with->IN) (eggs->NNS) ')
('tags initial-> ', [('for', 'IN'), ('nineteen', 'JJ'), ('seventy', 'NN'), ('three', 'CD')])
('tags -> ', '     (for->IN) (nineteen->JJ) (seventy->NN) (three->CD) ')
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP')])
('tags -> ', '     (we->PRP) (ll->VBP) ')
candidates to check:
2
descended from food: [['N'], 'eggs', 12, 16]
eggs
eggs eggs 131
[('need', 'NN'), ('eggs', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN')]
['eggs']
cake
cake cake 412
[('need', 'NN'), ('eggs', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN')]
['cake']
('tags initial-> ', [('need', 'NN'), ('eggs', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN')])
('tags -> ', '     (need->NN) (eggs->NNS) (to->TO) (make->VB) (a->DT) (cake->NN) ')
('tags initial-> ', [('no', 'DT'), ('that', 'WDT'), ('s', 'VBP'), ('from', 'IN'), ('nineteen', 'JJ'), ('seventy', 'NN'), ('one', 'CD')])
('tags -> ', '     (no->DT) (that->WDT) (s->VBP) (from->IN) (nineteen->JJ) (seventy->NN) (one->CD) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('up', 'RB'), ('un', 'JJ'), ('til', 'NN'), ('nineteen', 'JJ'), ('seventy', 'NN'), ('one', 'CD')])
('tags -> ', '     (up->RB) (un->JJ) (til->NN) (nineteen->JJ) (seventy->NN) (one->CD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
8
('tags initial-> ', [('and', 'CC'), ('mexico', 'NN'), ('has', 'VBZ'), ('the', 'DT'), ('lowest', 'JJS'), ('suicide', 'NN'), ('rate', 'NN'), ('at', 'IN'), ('one', 'CD'), ('point', 'NN'), ('six', 'CD'), ('per', 'IN'), ('thousand', 'NN'), ('and', 'CC'), ('hungary', 'NN'), ('has', 'VBZ'), ('the', 'DT'), ('highest', 'JJS'), ('at', 'IN'), ('twenty', 'JJ'), ('nine', 'CD'), ('point', 'NN'), ('six', 'CD'), ('per', 'IN'), ('one', 'CD'), ('hundred', 'CD'), ('thousand', 'NN')])
('tags -> ', '     (and->CC) (mexico->NN) (has->VBZ) (the->DT) (lowest->JJS) (suicide->NN) (rate->NN) (at->IN) (one->CD) (point->NN) (six->CD) (per->IN) (thousand->NN) (and->CC) (hungary->NN) (has->VBZ) (the->DT) (highest->JJS) (at->IN) (twenty->JJ) (nine->CD) (point->NN) (six->CD) (per->IN) (one->CD) (hundred->CD) (thousand->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('wonder', 'VBP'), ('what', 'WP'), ('what', 'WP'), ('what', 'WP'), ('it', 'PRP'), ('is', 'VBZ'), ('xxx', 'JJ'), ('about', 'IN'), ('those', 'DT'), ('countries', 'NNS')])
('tags -> ', '     (i->JJ) (wonder->VBP) (what->WP) (what->WP) (what->WP) (it->PRP) (is->VBZ) (xxx->JJ) (about->IN) (those->DT) (countries->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
2
('tags initial-> ', [('ireland', 'NN'), ('has', 'VBZ'), ('a', 'DT'), ('very', 'RB'), ('low', 'JJ')])
('tags -> ', '     (ireland->NN) (has->VBZ) (a->DT) (very->RB) (low->JJ) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('rate', 'NN')])
('tags -> ', '     (rate->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) ')
candidates to check:
5
('tags initial-> ', [('west', 'NN'), ('berlin', 'NN'), ('has', 'VBZ'), ('an', 'DT'), ('astronomical', 'JJ'), ('rate', 'NN'), ('but', 'CC'), ('the', 'DT'), ('rest', 'NN'), ('of', 'IN'), ('west', 'JJS'), ('germany', 'JJ'), ('doesn', 'NN'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('a', 'DT'), ('huge', 'JJ'), ('rate', 'NN')])
('tags -> ', '     (west->NN) (berlin->NN) (has->VBZ) (an->DT) (astronomical->JJ) (rate->NN) (but->CC) (the->DT) (rest->NN) (of->IN) (west->JJS) (germany->JJ) (doesn->NN) (t->NNS) (have->VBP) (a->DT) (a->DT) (huge->JJ) (rate->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBD'), ('trying', 'VBG'), ('to', 'TO'), ('talk', 'VB'), ('to', 'TO'), ('mom', 'VB')])
('tags -> ', '     (i->JJ) (m->VBD) (trying->VBG) (to->TO) (talk->VB) (to->TO) (mom->VB) ')
candidates to check:
1
descended from food: [['N'], 'honey', -1, 4]
honey
honey honey 304
[('what', 'WP'), ('is', 'VBZ'), ('it', 'PRP'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('it', 'PRP'), ('honey', 'NN')])
('tags -> ', '     (what->WP) (is->VBZ) (it->PRP) (honey->NN) ')
candidates to check:
1
descended from food: [['N'], 'eggs', 30, 34]
eggs
eggs eggs 131
[('well', 'RB'), ('do', 'VBP'), ('we', 'PRP'), ('have', 'VB'), ('any', 'DT'), ('eggs', 'NNS')]
['eggs']
('tags initial-> ', [('well', 'RB'), ('do', 'VBP'), ('we', 'PRP'), ('have', 'VB'), ('any', 'DT'), ('eggs', 'NNS')])
('tags -> ', '     (well->RB) (do->VBP) (we->PRP) (have->VB) (any->DT) (eggs->NNS) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
6
descended from food: [['N'], 'honey', -1, 4]
honey
honey honey 304
[('honey', 'NN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('have', 'VBP'), ('time', 'NN'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('tonight', 'NN')]
['honey']
cake
cake cake 412
[('honey', 'NN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('have', 'VBP'), ('time', 'NN'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('tonight', 'NN')]
['cake']
('tags initial-> ', [('honey', 'NN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('have', 'VBP'), ('time', 'NN'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('tonight', 'NN')])
('tags -> ', '     (honey->NN) (we->PRP) (don->VBP) (t->RB) (have->VBP) (time->NN) (to->TO) (make->VB) (a->DT) (cake->NN) (tonight->NN) ')
candidates to check:
3
('tags initial-> ', [('daddy', 'NN'), ('and', 'CC'), ('i', 'VB'), ('both', 'DT'), ('have', 'VBP'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('things', 'NNS'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (daddy->NN) (and->CC) (i->VB) (both->DT) (have->VBP) (a->DT) (lot->NN) (of->IN) (things->NNS) (to->TO) (do->VB) ')
candidates to check:
2
cake
cake cake 412
[('so', 'RB'), ('brook', 'JJ'), ('doesn', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('cake', 'NN')]
['cake']
('tags initial-> ', [('so', 'RB'), ('brook', 'JJ'), ('doesn', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('cake', 'NN')])
('tags -> ', '     (so->RB) (brook->JJ) (doesn->NN) (t->NN) (eat->NN) (cake->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('have', 'VBP'), ('other', 'JJ'), ('sweets', 'NNS')])
('tags -> ', '     (and->CC) (we->PRP) (have->VBP) (other->JJ) (sweets->NNS) ')
candidates to check:
2
descended from food: [['N'], 'food', 38, 42]
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('can', 'MD'), ('of', 'IN'), ('cat', 'NN'), ('food', 'NN'), ('i', 'NN'), ('bought', 'VBD'), ('for', 'IN'), ('brook', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('that', 'DT'), ('present', 'JJ'), ('that', 'IN'), ('i', 'NN'), ('got', 'VBD'), ('him', 'PRP')])
('tags -> ', '     (i->JJ) (think->VBP) (i->NNS) (have->VBP) (a->DT) (can->MD) (of->IN) (cat->NN) (food->NN) (i->NN) (bought->VBD) (for->IN) (brook->NN) (and->CC) (i->NN) (have->VBP) (that->DT) (present->JJ) (that->IN) (i->NN) (got->VBD) (him->PRP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('rabbit', 'NN'), ('s', 'JJ'), ('foot', 'NN')])
('tags -> ', '     (the->DT) (rabbit->NN) (s->JJ) (foot->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('get', 'VB'), ('a', 'DT'), ('purple', 'JJ'), ('one', 'CD'), ('for', 'IN'), ('him', 'PRP')])
('tags -> ', '     (yeah->NN) (did->VBD) (you->PRP) (get->VB) (a->DT) (purple->JJ) (one->CD) (for->IN) (him->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfa7a7e8>)
[('i', 'NN'), ('just', 'RB'), ('got', 'VBD'), ('him', 'PRP'), ('that', 'IN'), ('orange', 'NN'), ('one', 'CD')]
['orange']
('tags initial-> ', [('i', 'NN'), ('just', 'RB'), ('got', 'VBD'), ('him', 'PRP'), ('that', 'IN'), ('orange', 'NN'), ('one', 'CD')])
('tags -> ', '     (i->NN) (just->RB) (got->VBD) (him->PRP) (that->IN) (orange->NN) (one->CD) ')
candidates to check:
4
('tags initial-> ', [('so', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('sing', 'VB'), ('happy', 'JJ'), ('birthday', 'NN'), ('to', 'TO'), ('him', 'PRP'), ('and', 'CC'), ('we', 'PRP'), ('can', 'MD'), ('eat', 'VB'), ('our', 'PRP$'), ('own', 'JJ'), ('sweets', 'NNS')])
('tags -> ', '     (so->IN) (we->PRP) (can->MD) (sing->VB) (happy->JJ) (birthday->NN) (to->TO) (him->PRP) (and->CC) (we->PRP) (can->MD) (eat->VB) (our->PRP$) (own->JJ) (sweets->NNS) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('give', 'VB'), ('him', 'PRP'), ('the', 'DT'), ('can', 'MD'), ('of', 'IN'), ('cat', 'NN'), ('food', 'NN')])
('tags -> ', '     (we->PRP) (can->MD) (give->VB) (him->PRP) (the->DT) (can->MD) (of->IN) (cat->NN) (food->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('new', 'JJ'), ('flavor', 'NN'), ('that', 'IN'), ('they', 'PRP'), ('make', 'VBP')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (new->JJ) (flavor->NN) (that->IN) (they->PRP) (make->VBP) ')
('tags initial-> ', [('oh', 'RB'), ('well', 'RB'), ('what', 'WP')])
('tags -> ', '     (oh->RB) (well->RB) (what->WP) ')
('tags initial-> ', [('mcdonald', 'NNS'), ('s', 'VBP')])
('tags -> ', '     (mcdonald->NNS) (s->VBP) ')
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('ll', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('share', 'NN'), ('his', 'PRP$'), ('with', 'IN'), ('liz', 'NN')])
('tags -> ', '     (and->CC) (he->PRP) (ll->RB) (have->VBP) (to->TO) (share->NN) (his->PRP$) (with->IN) (liz->NN) ')
candidates to check:
1
('tags initial-> ', [('mcdonald', 'NNS'), ('s', 'VBP')])
('tags -> ', '     (mcdonald->NNS) (s->VBP) ')
candidates to check:
3
descended from food: [['N'], 'food', 18, 22]
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('s', 'VBD'), ('cat', 'NN'), ('food', 'NN')])
('tags -> ', '     (no->DT) (it->PRP) (s->VBD) (cat->NN) (food->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('new', 'JJ'), ('flavor', 'NN'), ('i', 'NN'), ('got', 'VBD'), ('him', 'PRP')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (new->JJ) (flavor->NN) (i->NN) (got->VBD) (him->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
10
white fish
white fish white fish 119
[('white', 'JJ'), ('fish', 'JJ'), ('ocean', 'NN'), ('white', 'JJ'), ('fish', 'JJ'), ('flavor', 'NN')]
['white', 'fish']
fish
fish fish 305
[('white', 'JJ'), ('fish', 'JJ'), ('ocean', 'NN'), ('white', 'JJ'), ('fish', 'JJ'), ('flavor', 'NN')]
['fish']
('tags initial-> ', [('white', 'JJ'), ('fish', 'JJ'), ('ocean', 'NN'), ('white', 'JJ'), ('fish', 'JJ'), ('flavor', 'NN')])
('tags -> ', '     (white->JJ) (fish->JJ) (ocean->NN) (white->JJ) (fish->JJ) (flavor->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
6
('tags initial-> ', [('does', 'VBZ'), ('cats', 'NNS'), ('like', 'IN'), ('to', 'TO'), ('eat', 'VB'), ('ocean', 'JJ'), ('white', 'JJ'), ('flavor', 'NN')])
('tags -> ', '     (does->VBZ) (cats->NNS) (like->IN) (to->TO) (eat->VB) (ocean->JJ) (white->JJ) (flavor->NN) ')
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('find', 'VB'), ('out', 'RP')])
('tags -> ', '     (well->RB) (we->PRP) (ll->VBP) (find->VB) (out->RP) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('imagine', 'VBP'), ('they', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (i->NN) (i->VBP) (imagine->VBP) (they->PRP) (do->VBP) ')
candidates to check:
3
('tags initial-> ', [('so', 'IN'), ('we', 'PRP'), ('should', 'MD'), ('do', 'VB'), ('that', 'DT'), ('today', 'NN'), ('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('a', 'DT'), ('very', 'RB'), ('busy', 'JJ'), ('week', 'NN')])
('tags -> ', '     (so->IN) (we->PRP) (should->MD) (do->VB) (that->DT) (today->NN) (be->VB) (cause->NN) (it->PRP) (s->VBZ) (going->VBG) (to->TO) (be->VB) (a->DT) (very->RB) (busy->JJ) (week->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('for', 'IN'), ('me', 'PRP'), ('too', 'RB')])
('tags -> ', '     (for->IN) (me->PRP) (too->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('very', 'RB'), ('busy', 'JJ'), ('week', 'NN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (very->RB) (busy->JJ) (week->NN) (for->IN) (me->PRP) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('very', 'RB'), ('busy', 'JJ'), ('wake', 'NN'), ('week', 'NN'), ('for', 'IN'), ('us', 'PRP'), ('us', 'PRP'), ('three', 'CD')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (very->RB) (busy->JJ) (wake->NN) (week->NN) (for->IN) (us->PRP) (us->PRP) (three->CD) ')
candidates to check:
7
('tags initial-> ', [('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('um', 'JJ'), ('four', 'CD'), ('part', 'NN'), ('series', 'NN'), ('with', 'IN'), ('andy', 'JJ'), ('cervick', 'NN'), ('in', 'IN'), ('it', 'PRP'), ('which', 'WDT'), ('was', 'VBD'), ('the', 'DT'), ('nights', 'NNS'), ('of', 'IN'), ('the', 'DT'), ('museum', 'NN'), ('school', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('to', 'TO'), ('cancel', 'VB')])
('tags -> ', '     (i->NN) (had->VBD) (a->DT) (um->JJ) (four->CD) (part->NN) (series->NN) (with->IN) (andy->JJ) (cervick->NN) (in->IN) (it->PRP) (which->WDT) (was->VBD) (the->DT) (nights->NNS) (of->IN) (the->DT) (museum->NN) (school->NN) (i->NN) (had->VBD) (to->TO) (cancel->VB) ')
candidates to check:
1
('tags initial-> ', [('tonight', 'NN')])
('tags -> ', '     (tonight->NN) ')
candidates to check:
6
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('um', 'JJ'), ('one', 'CD'), ('of', 'IN'), ('these', 'DT'), ('uh', 'IN'), ('the', 'DT'), ('math', 'NN'), ('class', 'NN'), ('schedule', 'NN'), ('we', 'PRP'), ('ll', 'VBP'), ('be', 'VB'), ('having', 'VBG')])
('tags -> ', '     (it->PRP) (was->VBD) (um->JJ) (one->CD) (of->IN) (these->DT) (uh->IN) (the->DT) (math->NN) (class->NN) (schedule->NN) (we->PRP) (ll->VBP) (be->VB) (having->VBG) ')
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('knew', 'VBD'), ('i', 'JJ'), ('just', 'RB'), ('took', 'VBD'), ('it', 'PRP'), ('tentatively', 'RB'), ('and', 'CC'), ('i', 'VB'), ('uh', 'VBP'), ('told', 'VBN'), ('kathy', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (knew->VBD) (i->JJ) (just->RB) (took->VBD) (it->PRP) (tentatively->RB) (and->CC) (i->VB) (uh->VBP) (told->VBN) (kathy->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('might', 'MD'), ('have', 'VB'), ('to', 'TO'), ('cancel', 'VB'), ('so', 'RB'), ('she', 'PRP'), ('just', 'RB'), ('xxx', 'CD'), ('and', 'CC'), ('i', 'VB'), ('called', 'VBD'), ('her', 'PRP'), ('friday', 'NN')])
('tags -> ', '     (i->NN) (might->MD) (have->VB) (to->TO) (cancel->VB) (so->RB) (she->PRP) (just->RB) (xxx->CD) (and->CC) (i->VB) (called->VBD) (her->PRP) (friday->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
5
('tags initial-> ', [('so', 'IN'), ('she', 'PRP'), ('would', 'MD'), ('have', 'VB'), ('time', 'NN'), ('before', 'IN'), ('she', 'PRP'), ('goes', 'VBZ'), ('away', 'RB'), ('uh', 'JJ'), ('it', 'PRP'), ('s', 'JJ'), ('vacation', 'NN'), ('time', 'NN'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (so->IN) (she->PRP) (would->MD) (have->VB) (time->NN) (before->IN) (she->PRP) (goes->VBZ) (away->RB) (uh->JJ) (it->PRP) (s->JJ) (vacation->NN) (time->NN) (you->PRP) (know->VBP) ')
candidates to check:
7
('tags initial-> ', [('the', 'DT'), ('uh', 'NN'), ('colleges', 'NNS'), ('have', 'VBP'), ('their', 'PRP$'), ('uh', 'JJ'), ('spring', 'NN'), ('vacation', 'NN'), ('this', 'DT'), ('coming', 'VBG'), ('week', 'NN')])
('tags -> ', '     (the->DT) (uh->NN) (colleges->NNS) (have->VBP) (their->PRP$) (uh->JJ) (spring->NN) (vacation->NN) (this->DT) (coming->VBG) (week->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('what', 'WP'), ('what', 'WP'), ('does', 'VBZ'), ('they', 'PRP'), ('call', 'VB'), ('its', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (mom->NN) (what->WP) (what->WP) (does->VBZ) (they->PRP) (call->VB) (its->PRP$) (name->NN) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('says', 'VBZ'), ('information', 'NN'), ('please', 'NN'), ('almanac', 'NN'), ('atlas', 'NNS'), ('and', 'CC'), ('yearbook', 'NN')])
('tags -> ', '     (it->PRP) (says->VBZ) (information->NN) (please->NN) (almanac->NN) (atlas->NNS) (and->CC) (yearbook->NN) ')
candidates to check:
1
('tags initial-> ', [('uh', 'NN'), ('except', 'IN'), ('not', 'RB'), ('mass', 'VB'), ('eye', 'NN'), ('i', 'NN'), ('guess', 'NN')])
('tags -> ', '     (uh->NN) (except->IN) (not->RB) (mass->VB) (eye->NN) (i->NN) (guess->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('m', 'NN'), ('working', 'VBG'), ('at', 'IN'), ('mass', 'NN'), ('eye', 'NN'), ('this', 'DT'), ('week', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (i->JJ) (m->NN) (working->VBG) (at->IN) (mass->NN) (eye->NN) (this->DT) (week->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('so', 'RB')])
('tags -> ', '     (i->NN) (guess->NN) (so->RB) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('m', 'NN'), ('om', 'NN'), ('i', 'NN'), ('guess', 'NN'), ('that', 'IN'), ('s', 'JJ'), ('my', 'PRP$'), ('show', 'NN')])
('tags -> ', '     (i->NN) (guess->NN) (m->NN) (om->NN) (i->NN) (guess->NN) (that->IN) (s->JJ) (my->PRP$) (show->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', -1, 4]
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('honey', 'NN')])
('tags -> ', '     (what->WP) (honey->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('that', 'IN'), ('s', 'JJ'), ('my', 'PRP$'), ('show', 'NN')])
('tags -> ', '     (i->NN) (guess->NN) (that->IN) (s->JJ) (my->PRP$) (show->NN) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ')])
('tags -> ', '     (what->WP) (is->VBZ) ')
candidates to check:
3
('tags initial-> ', [('that', 'DT'), ('show', 'NN'), ('xxx', 'VBD')])
('tags -> ', '     (that->DT) (show->NN) (xxx->VBD) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('it', 'PRP'), ('is', 'VBZ'), ('that', 'IN'), ('s', 'NN'), ('on', 'IN'), ('television', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (what->WP) (it->PRP) (is->VBZ) (that->IN) (s->NN) (on->IN) (television->NN) ')
candidates to check:
3
('tags initial-> ', [('well', 'RB'), ('thanks', 'NNS'), ('hon', 'VBP')])
('tags -> ', '     (well->RB) (thanks->NNS) (hon->VBP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('welcome', 'JJ'), ('love', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (welcome->JJ) (love->NN) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 23, 29]
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('put', 'VB'), ('bro', 'RP'), ('s', 'NN'), ('dinner', 'NN'), ('away', 'RB'), ('and', 'CC'), ('he', 'PRP'), ('can', 'MD'), ('have', 'VB'), ('it', 'PRP'), ('when', 'WRB'), ('he', 'PRP'), ('gets', 'VBZ'), ('back', 'RB')])
('tags -> ', '     (we->PRP) (can->MD) (put->VB) (bro->RP) (s->NN) (dinner->NN) (away->RB) (and->CC) (he->PRP) (can->MD) (have->VB) (it->PRP) (when->WRB) (he->PRP) (gets->VBZ) (back->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 26, 33]
chicken
chicken chicken 234
[('think', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('enough', 'JJ'), ('chicken', 'NN'), ('for', 'IN'), ('him', 'PRP')]
['chicken']
('tags initial-> ', [('think', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('enough', 'JJ'), ('chicken', 'NN'), ('for', 'IN'), ('him', 'PRP')])
('tags -> ', '     (think->NN) (that->IN) (s->VBZ) (enough->JJ) (chicken->NN) (for->IN) (him->PRP) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('should', 'MD'), ('we', 'PRP')])
('tags -> ', '     (should->MD) (we->PRP) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) ')
candidates to check:
3
('tags initial-> ', [('should', 'MD'), ('we', 'PRP'), ('uh', 'VB'), ('turn', 'VBP'), ('that', 'IN'), ('the', 'DT'), ('tape', 'NN'), ('recorder', 'NN'), ('off', 'IN')])
('tags -> ', '     (should->MD) (we->PRP) (uh->VB) (turn->VBP) (that->IN) (the->DT) (tape->NN) (recorder->NN) (off->IN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('get', 'VB'), ('back', 'RB'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (get->VB) (back->RB) (in->IN) (here->RB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('go', 'VB')])
('tags -> ', '     (where->WRB) (did->VBD) (you->PRP) (go->VB) ')
candidates to check:
3
('tags initial-> ', [('in', 'IN'), ('the', 'DT'), ('living', 'NN'), ('room', 'NN')])
('tags -> ', '     (in->IN) (the->DT) (living->NN) (room->NN) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('finish', 'VB'), ('up', 'RP')])
('tags -> ', '     (i->NN) (want->VBP) (you->PRP) (to->TO) (finish->VB) (up->RP) ')
('tags initial-> ', [('finish', 'VB'), ('up', 'RP'), ('what', 'WP')])
('tags -> ', '     (finish->VB) (up->RP) (what->WP) ')
('tags initial-> ', [('eating', 'VBG')])
('tags -> ', '     (eating->VBG) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('busy', 'JJ'), ('bee', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (a->DT) (busy->JJ) (bee->NN) ')
('tags initial-> ', [('the', 'DT'), ('big', 'JJ')])
('tags -> ', '     (the->DT) (big->JJ) ')
candidates to check:
4
descended from food: [['N'], 'honey', -1, 4]
honey
honey honey 304
[('and', 'CC'), ('could', 'MD'), ('you', 'PRP'), ('sit', 'VB'), ('put', 'VB'), ('your', 'PRP$'), ('fishing', 'NN'), ('rod', 'VB'), ('down', 'RP'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('and', 'CC'), ('could', 'MD'), ('you', 'PRP'), ('sit', 'VB'), ('put', 'VB'), ('your', 'PRP$'), ('fishing', 'NN'), ('rod', 'VB'), ('down', 'RP'), ('honey', 'NN')])
('tags -> ', '     (and->CC) (could->MD) (you->PRP) (sit->VB) (put->VB) (your->PRP$) (fishing->NN) (rod->VB) (down->RP) (honey->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('seven', 'CD'), ('seventeen', 'JJ'), ('federal', 'JJ'), ('prisoners', 'NNS')])
('tags -> ', '     (seven->CD) (seventeen->JJ) (federal->JJ) (prisoners->NNS) ')
candidates to check:
9
descended from food: [['N'], 'gum', 6, 9]
descended from food: [['N'], 'gum', 6, 9]
('tags initial-> ', [('gum', 'JJ'), ('drop', 'NN'), ('gum', 'NN'), ('drop', 'NN')])
('tags -> ', '     (gum->JJ) (drop->NN) (gum->NN) (drop->NN) ')
candidates to check:
7
descended from food: [['N'], 'gum', 28, 31]
descended from food: [['N'], 'gum', 28, 31]
('tags initial-> ', [('not', 'RB'), ('by', 'IN'), ('the', 'DT'), ('hair', 'NN'), ('of', 'IN'), ('my', 'PRP$'), ('gum', 'NN'), ('gum', 'NN'), ('drop', 'NN')])
('tags -> ', '     (not->RB) (by->IN) (the->DT) (hair->NN) (of->IN) (my->PRP$) (gum->NN) (gum->NN) (drop->NN) ')
candidates to check:
4
('tags initial-> ', [('maybe', 'RB'), ('we', 'PRP'), ('should', 'MD'), ('have', 'VB'), ('told', 'VBD'), ('him', 'PRP'), ('to', 'TO'), ('look', 'VB'), ('up', 'RP'), ('something', 'NN'), ('like', 'IN'), ('do', 'VBP'), ('something', 'NN'), ('like', 'IN'), ('that', 'DT'), ('and', 'CC'), ('then', 'RB'), ('update', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('library', 'NN')])
('tags -> ', '     (maybe->RB) (we->PRP) (should->MD) (have->VB) (told->VBD) (him->PRP) (to->TO) (look->VB) (up->RP) (something->NN) (like->IN) (do->VBP) (something->NN) (like->IN) (that->DT) (and->CC) (then->RB) (update->VB) (it->PRP) (in->IN) (the->DT) (library->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
5
('tags initial-> ', [('i', 'NN'), ('thought', 'VBD'), ('i', 'NN'), ('had', 'VBD'), ('gotten', 'VBN'), ('another', 'DT'), ('information', 'NN'), ('please', 'NN'), ('almanac', 'NN'), ('since', 'IN'), ('we', 'PRP'), ('ve', 'VBP'), ('been', 'VBN'), ('together', 'RB'), ('but', 'CC'), ('one', 'CD'), ('year', 'NN'), ('possibly', 'RB'), ('my', 'PRP$'), ('mother', 'NN'), ('had', 'VBD'), ('given', 'VBN'), ('me', 'PRP'), ('one', 'CD')])
('tags -> ', '     (i->NN) (thought->VBD) (i->NN) (had->VBD) (gotten->VBN) (another->DT) (information->NN) (please->NN) (almanac->NN) (since->IN) (we->PRP) (ve->VBP) (been->VBN) (together->RB) (but->CC) (one->CD) (year->NN) (possibly->RB) (my->PRP$) (mother->NN) (had->VBD) (given->VBN) (me->PRP) (one->CD) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('remember', 'VB'), ('it', 'PRP'), ('at', 'IN'), ('all', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (remember->VB) (it->PRP) (at->IN) (all->DT) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (good->JJ) (boy->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'UH'), ('yucky', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (oh->UH) (yucky->JJ) (boy->NN) ')
candidates to check:
1
('tags initial-> ', [('put', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('plate', 'NN')])
('tags -> ', '     (put->VB) (it->PRP) (on->IN) (the->DT) (plate->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('put', 'VB'), ('too', 'RB'), ('much', 'JJ'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (put->VB) (too->RB) (much->JJ) (in->IN) (your->PRP$) (mouth->NN) ')
candidates to check:
2
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('napkin', 'JJ'), ('use', 'NN'), ('a', 'DT'), ('napkin', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (a->DT) (napkin->JJ) (use->NN) (a->DT) (napkin->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('whatever', 'WDT'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('do', 'VB'), ('than', 'IN')])
('tags -> ', '     (whatever->WDT) (you->PRP) (have->VBP) (to->TO) (do->VB) (than->IN) ')
('tags initial-> ', [('you', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('spit', 'VB'), ('it', 'PRP'), ('out', 'RP'), ('spit', 'VB'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (you->PRP) (need->VBP) (to->TO) (spit->VB) (it->PRP) (out->RP) (spit->VB) (it->PRP) (out->RP) ')
candidates to check:
3
descended from food: [['N'], 'dinner', 11, 17]
('tags initial-> ', [('this', 'DT'), ('dinner', 'NN'), ('was', 'VBD'), ('something', 'NN')])
('tags -> ', '     (this->DT) (dinner->NN) (was->VBD) (something->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('kind', 'NN'), ('of', 'IN'), ('yucky', 'NN'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (kind->NN) (of->IN) (yucky->NN) (you->PRP) (know->VBP) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (are->VBP) (you->PRP) (all->DT) (done->VBN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'milk', 14, 18]
milk
milk milk 46
[('is', 'VBZ'), ('your', 'PRP$'), ('milk', 'NN'), ('finished', 'VBN')]
['milk']
('tags initial-> ', [('is', 'VBZ'), ('your', 'PRP$'), ('milk', 'NN'), ('finished', 'VBN')])
('tags -> ', '     (is->VBZ) (your->PRP$) (milk->NN) (finished->VBN) ')
candidates to check:
1
('tags initial-> ', [('want', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('show', 'VB')])
('tags -> ', '     (want->VB) (me->PRP) (to->TO) (show->VB) ')
('tags initial-> ', [('good', 'JJ'), ('yes', 'NNS')])
('tags -> ', '     (good->JJ) (yes->NNS) ')
candidates to check:
2
('tags initial-> ', [('oh', 'RB'), ('good', 'JJ'), ('thank', 'NN'), ('you', 'PRP'), ('very', 'RB'), ('much', 'RB')])
('tags -> ', '     (oh->RB) (good->JJ) (thank->NN) (you->PRP) (very->RB) (much->RB) ')
candidates to check:
1
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('roll', 'VB'), ('up', 'RP'), ('your', 'PRP$'), ('sleeves', 'NNS'), ('so', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('wash', 'VB'), ('them', 'PRP')])
('tags -> ', '     (let->VB) (me->PRP) (roll->VB) (up->RP) (your->PRP$) (sleeves->NNS) (so->IN) (you->PRP) (can->MD) (wash->VB) (them->PRP) ')
('tags initial-> ', [('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (i->NN) (did->VBD) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('both', 'DT'), ('of', 'IN'), ('them', 'PRP')])
('tags -> ', '     (both->DT) (of->IN) (them->PRP) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
loading solution set
calculating
set([(317, (10, 17)), (2568, (27, 31)), (2568, (12, 16)), (2716, (6, 14)), (2707, (7, 15)), (2988, (15, 23)), (750, (13, 20)), (168, (6, 15)), (2732, (6, 16)), (150, (32, 37)), (425, (16, 23)), (2349, (58, 63)), (2559, (13, 17)), (2988, (6, 14)), (1504, (55, 63)), (775, (53, 60)), (309, (10, 17)), (584, (32, 40)), (2376, (56, 61)), (2537, (91, 95)), (2637, (30, 34)), (137, (19, 27)), (171, (19, 26)), (2991, (32, 40)), (2559, (23, 27)), (393, (59, 67)), (161, (6, 11)), (3082, (14, 18)), (164, (18, 28)), (2897, (26, 33)), (2654, (27, 31)), (2732, (23, 33)), (1504, (43, 50)), (1504, (25, 33)), (33, (63, 67)), (1092, (30, 35)), (2644, (41, 45)), (1464, (28, 35)), (387, (25, 32)), (164, (32, 41))])
[((33, (63, 67)), '*MOT:\tyou may <wh(ile)> [//] just while I <&s> [//] cut up the meat .\n'), ((137, (19, 27)), '*MOT:\txxx and &-um biscuits .\n'), ((150, (32, 37)), '*FAT:\t&-uh (.) do you want some Quick ?\n'), ((161, (6, 11)), '*CHI:\tQuick .\n'), ((164, (18, 28)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((164, (32, 41)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((168, (6, 15)), '*CHI:\tchocolate .\n'), ((171, (19, 26)), "*MOT:\tso how's the chicken look ?\n"), ((309, (10, 17)), '*CHI:\tthe chicken is too ?\n'), ((317, (10, 17)), '*MOT:\tthe chicken is [//] should be pretty cool .\n'), ((387, (25, 32)), "*FAT:\tI'm afraid the (.) chicken is &-uh (.) not as well cooked as [/] as usual .\n"), ((393, (59, 67)), "*MOT:\twell <it's> [/] it's probably better cooked than the biscuits though .\n"), ((425, (16, 23)), "*FAT:\thow's the chicken Munchkin ?\n"), ((584, (32, 40)), "*FAT:\t<the bi(s)cuits> [//] the biscuits aren't burned .\n"), ((750, (13, 20)), "*MOT:\toh the chicken's xxx .\n"), ((775, (53, 60)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((1092, (30, 35)), '*FAT:\t(a)re you drinking your Quick ?\n'), ((1464, (28, 35)), '*MOT:\twant another piece of chicken ?\n'), ((1504, (25, 33)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (43, 50)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (55, 63)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((2349, (58, 63)), '*FAT:\twell teacher I want you to make sure you drink your Quick and I want you to make sure you finish your dinner .\n'), ((2376, (56, 61)), '*FAT:\they teach make sure you &-uh finish drinking your Quick .\n'), ((2537, (91, 95)), "*MOT:\tI think maybe we should celebrate Brook's birthday today even though we don't have a cake .\n"), ((2559, (13, 17)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2559, (23, 27)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2568, (12, 16)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2568, (27, 31)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2637, (30, 34)), '*CHI:\twell (.) do we have any eggs ?\n'), ((2644, (41, 45)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2654, (27, 31)), "*MOT:\tso Brook doesn't eat cake .\n"), ((2707, (7, 15)), "*CHI:\t<McDonald's> [>] ?\n"), ((2716, (6, 14)), "*CHI:\tMcDonald's ?\n"), ((2732, (6, 16)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2732, (23, 33)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2897, (26, 33)), "*MOT:\tthink that's enough chicken for him ?\n"), ((2988, (6, 14)), '*CHI:\tgum drop gum drop .\n'), ((2988, (15, 23)), '*CHI:\tgum drop gum drop .\n'), ((2991, (32, 40)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((3082, (14, 18)), '*MOT:\tis your milk finished ?\n')]
set([(317, (10, 17)), (2568, (27, 31)), (20, (71, 75)), (2568, (12, 16)), (2988, (6, 9)), (1527, (20, 26)), (2991, (28, 31)), (513, (41, 46)), (715, (60, 64)), (750, (13, 20)), (784, (81, 89)), (168, (6, 15)), (2732, (6, 16)), (2887, (23, 29)), (1940, (24, 29)), (2660, (38, 42)), (425, (16, 23)), (2633, (17, 22)), (2349, (108, 114)), (2975, (56, 61)), (2559, (13, 17)), (410, (46, 54)), (2897, (26, 33)), (1504, (55, 63)), (2861, (11, 16)), (775, (53, 60)), (309, (10, 17)), (584, (32, 40)), (2537, (91, 95)), (3060, (11, 17)), (2637, (30, 34)), (1171, (39, 44)), (137, (19, 27)), (171, (19, 26)), (978, (30, 36)), (2559, (23, 27)), (2682, (26, 32)), (393, (59, 67)), (2478, (24, 30)), (2644, (-1, 4)), (164, (18, 28)), (2290, (11, 17)), (2654, (27, 31)), (2644, (6, 11)), (2720, (18, 22)), (1504, (43, 50)), (2975, (-1, 4)), (1504, (25, 33)), (33, (63, 67)), (775, (24, 32)), (2644, (41, 45)), (2633, (-1, 4)), (1943, (29, 34)), (1464, (28, 35)), (387, (25, 32)), (1171, (-1, 4)), (3082, (14, 18)), (164, (32, 41)), (2861, (-1, 4)), (2732, (23, 33))])
[((20, (71, 75)), "*MOT:\talright please [?] color something while you're waiting for your food ?\n"), ((33, (63, 67)), '*MOT:\tyou may <wh(ile)> [//] just while I <&s> [//] cut up the meat .\n'), ((137, (19, 27)), '*MOT:\txxx and &-um biscuits .\n'), ((164, (18, 28)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((164, (32, 41)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((168, (6, 15)), '*CHI:\tchocolate .\n'), ((171, (19, 26)), "*MOT:\tso how's the chicken look ?\n"), ((309, (10, 17)), '*CHI:\tthe chicken is too ?\n'), ((317, (10, 17)), '*MOT:\tthe chicken is [//] should be pretty cool .\n'), ((387, (25, 32)), "*FAT:\tI'm afraid the (.) chicken is &-uh (.) not as well cooked as [/] as usual .\n"), ((393, (59, 67)), "*MOT:\twell <it's> [/] it's probably better cooked than the biscuits though .\n"), ((410, (46, 54)), '*FAT:\twell I told Nathaniel that going out to barbecue saves more of a symbolic cash than after it was started barbecuing season .\n'), ((425, (16, 23)), "*FAT:\thow's the chicken Munchkin ?\n"), ((513, (41, 46)), '*MOT:\tdo you have_to use the bath+room , Honey ?\n'), ((584, (32, 40)), "*FAT:\t<the bi(s)cuits> [//] the biscuits aren't burned .\n"), ((715, (60, 64)), '*MOT:\tif you have_to go to the bath+room come back and have food to eat after that .\n'), ((750, (13, 20)), "*MOT:\toh the chicken's xxx .\n"), ((775, (24, 32)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (53, 60)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((784, (81, 89)), '*FAT:\tin the warm weather you can still cook it and just stay out there with the barbecue .\n'), ((978, (30, 36)), "*MOT:\tI'll wait (un)til after dinner then .\n"), ((1171, (-1, 4)), '*MOT:\twe gave her her birthday present Honey in August when she had her birthday .\n'), ((1171, (39, 44)), '*MOT:\twe gave her her birthday present Honey in August when she had her birthday .\n'), ((1464, (28, 35)), '*MOT:\twant another piece of chicken ?\n'), ((1504, (25, 33)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (43, 50)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (55, 63)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1527, (20, 26)), '*FAT:\tI want to eat dinner .\n'), ((1940, (24, 29)), '*CHI:\tI learned it from Honey [?] .\n'), ((1943, (29, 34)), '*MOT:\tthat was a nice one of Honey .\n'), ((2290, (11, 17)), "*MOT:\tit's dinner time not play time .\n"), ((2349, (108, 114)), '*FAT:\twell teacher I want you to make sure you drink your Quick and I want you to make sure you finish your dinner .\n'), ((2478, (24, 30)), '*MOT:\twhen he comes for dinner .\n'), ((2537, (91, 95)), "*MOT:\tI think maybe we should celebrate Brook's birthday today even though we don't have a cake .\n"), ((2559, (13, 17)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2559, (23, 27)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2568, (12, 16)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2568, (27, 31)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2633, (-1, 4)), '*MOT:\twhat is it Honey ?\n'), ((2633, (17, 22)), '*MOT:\twhat is it Honey ?\n'), ((2637, (30, 34)), '*CHI:\twell (.) do we have any eggs ?\n'), ((2644, (-1, 4)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2644, (6, 11)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2644, (41, 45)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2654, (27, 31)), "*MOT:\tso Brook doesn't eat cake .\n"), ((2660, (38, 42)), '*MOT:\tI think (.) I have a can of cat food I bought for Brook and I have that present that I got him ?\n'), ((2682, (26, 32)), '*MOT:\tI just got him that orange one .\n'), ((2720, (18, 22)), "*MOT:\tno it's cat food .\n"), ((2732, (6, 16)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2732, (23, 33)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2861, (-1, 4)), '*MOT:\twhat Honey ?\n'), ((2861, (11, 16)), '*MOT:\twhat Honey ?\n'), ((2887, (23, 29)), "*FAT:\twe can put Bro's dinner away and he can have it when he gets back .\n"), ((2897, (26, 33)), "*MOT:\tthink that's enough chicken for him ?\n"), ((2975, (-1, 4)), '*FAT:\tand could you sit [///] put your fishing rod down Honey .\n'), ((2975, (56, 61)), '*FAT:\tand could you sit [///] put your fishing rod down Honey .\n'), ((2988, (6, 9)), '*CHI:\tgum drop gum drop .\n'), ((2991, (28, 31)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((3060, (11, 17)), '*MOT:\tthis dinner was something [!] .\n'), ((3082, (14, 18)), '*MOT:\tis your milk finished ?\n')]
calculating accuracy and recall
correct labels:
set(['meat', 'mcdonald', 'gum drop', 'eggs', 'chocolate', 'strawberry', 'cake', 'quick', 'chicken', 'biscuits', 'milk', 'white fish'])
predicted labels:
set(['', 'meat', 'orange', 'food', 'eggs', 'gum', 'chocolate', 'honey', 'strawberry', 'dinner', 'white fish', 'cake', 'barbecue', 'chicken', 'biscuits', 'milk'])
file:HSLLD/HV1/MT//ethmt1.cha
precision: 0.5625
recall: 0.75
true positives:['biscuits', 'cake', 'chicken', 'chocolate', 'eggs', 'meat', 'milk', 'strawberry', 'white fish']
false positives: ['', 'barbecue', 'dinner', 'food', 'gum', 'honey', 'orange']
false negatives: ['gum drop', 'mcdonald', 'quick']
# true pos: 9
# false pos: 7
# false neg: 3
HSLLD/HV1/MT//brtmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
descended from food: [['N'], 'food', 25, 29]
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN'), ('amen', 'NNS')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (our->PRP$) (food->NN) (amen->NNS) ')
candidates to check:
1
descended from food: [['N'], 'food', 25, 29]
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN'), ('amen', 'NNS')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (our->PRP$) (food->NN) (amen->NNS) ')
candidates to check:
1
('tags initial-> ', [('time', 'NN'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (time->NN) (to->TO) (eat->VB) ')
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('come', 'VB'), ('on', 'IN')])
('tags -> ', '     (it->PRP) (was->VBD) (gon->VBG) (na->TO) (come->VB) (on->IN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 49, 53]
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('god', 'NN'), ('is', 'VBZ'), ('great', 'JJ'), ('thank', 'NN'), ('him', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (god->NN) (is->VBZ) (good->JJ) (god->NN) (is->VBZ) (great->JJ) (thank->NN) (him->PRP) (for->IN) (our->PRP$) (food->NN) ')
('tags initial-> ', [('amen', 'NNS')])
('tags -> ', '     (amen->NNS) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('amen', 'NNS')])
('tags -> ', '     (amen->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
4
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('fun', 'VBN'), ('today', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VBP) (fun->VBN) (today->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VB'), ('fun', 'VBN'), ('at', 'IN'), ('the', 'DT'), ('clinic', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VB) (fun->VBN) (at->IN) (the->DT) (clinic->NN) ')
('tags initial-> ', [('uhhum', 'NN')])
('tags -> ', '     (uhhum->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('about', 'IN'), ('it', 'PRP')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (like->IN) (about->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
('tags initial-> ', [('i', 'NN'), ('thought', 'VBD'), ('you', 'PRP'), ('said', 'VBD'), ('you', 'PRP'), ('liked', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (thought->VBD) (you->PRP) (said->VBD) (you->PRP) (liked->VBD) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('told', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (told->VBD) (you->PRP) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('i', 'NN'), ('told', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (told->VBD) (you->PRP) ')
('tags initial-> ', [('no', 'DT'), ('and', 'CC'), ('i', 'VB'), ('m', 'VBP'), ('asking', 'VBG'), ('you', 'PRP')])
('tags -> ', '     (no->DT) (and->CC) (i->VB) (m->VBP) (asking->VBG) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
candidates to check:
5
('tags initial-> ', [('you', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('brave', 'JJ'), ('girl', 'NN'), ('today', 'NN'), ('huh', 'VBP')])
('tags -> ', '     (you->PRP) (was->VBD) (a->DT) (brave->JJ) (girl->NN) (today->NN) (huh->VBP) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('this', 'DT'), ('ice', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (this->DT) (ice->NN) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'tonic', 44, 49]
('tags initial-> ', [('just', 'RB'), ('leave', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('there', 'EX'), ('it', 'PRP'), ('ll', 'VBZ'), ('keep', 'VB'), ('the', 'DT'), ('tonic', 'JJ'), ('cold', 'NN')])
('tags -> ', '     (just->RB) (leave->VB) (it->PRP) (in->IN) (there->EX) (it->PRP) (ll->VBZ) (keep->VB) (the->DT) (tonic->JJ) (cold->NN) ')
candidates to check:
1
descended from food: [['N'], 'tonic', 45, 50]
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('get', 'VB'), ('the', 'DT'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('get', 'VB'), ('the', 'DT'), ('tonic', 'NN')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (get->VB) (the->DT) (i->NN) (can->MD) (t->VB) (get->VB) (the->DT) (tonic->NN) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('put', 'VBD'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('cup', 'NN')])
('tags -> ', '     (here->RB) (put->VBD) (it->PRP) (in->IN) (your->PRP$) (cup->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('welcome', 'NN')])
('tags -> ', '     (welcome->NN) ')
('tags initial-> ', [('taste', 'NN'), ('good', 'JJ')])
('tags -> ', '     (taste->NN) (good->JJ) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VB'), ('fun', 'VBN'), ('at', 'IN'), ('auntie', 'JJ'), ('vi', 'FW'), ('s', 'NN'), ('house', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VB) (fun->VBN) (at->IN) (auntie->JJ) (vi->FW) (s->NN) (house->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('who', 'WP')])
('tags -> ', '     (and->CC) (who->WP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('theodore', 'NN')])
('tags -> ', '     (theodore->NN) ')
('tags initial-> ', [('oh', 'UH'), ('theodore', 'NN')])
('tags -> ', '     (oh->UH) (theodore->NN) ')
('tags initial-> ', [('he', 'PRP'), ('came', 'VBD'), ('over', 'RB'), ('again', 'RB')])
('tags -> ', '     (he->PRP) (came->VBD) (over->RB) (again->RB) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'NN')])
('tags -> ', '     (oh->UH) (xxx->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('jason', 'NN')])
('tags -> ', '     (jason->NN) ')
('tags initial-> ', [('jason', 'NN')])
('tags -> ', '     (jason->NN) ')
candidates to check:
2
('tags initial-> ', [('more', 'RBR'), ('ice', 'NN')])
('tags -> ', '     (more->RBR) (ice->NN) ')
candidates to check:
2
descended from food: [['N'], 'tonic', 11, 16]
('tags initial-> ', [('more', 'RBR'), ('tonic', 'JJ')])
('tags -> ', '     (more->RBR) (tonic->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 28, 32]
('tags initial-> ', [('yeah', 'NN'), ('eat', 'CC'), ('some', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('food', 'NN'), ('then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (yeah->NN) (eat->CC) (some->DT) (of->IN) (your->PRP$) (food->NN) (then->RB) (you->PRP) (can->MD) (have->VB) (some->DT) (more->JJR) (to->TO) (drink->VB) ')
('tags initial-> ', [('why', 'WRB'), ('won', 'VBD'), ('t', 'NN'), ('come', 'NN'), ('on', 'IN')])
('tags -> ', '     (why->WRB) (won->VBD) (t->NN) (come->NN) (on->IN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) ')
('tags initial-> ', [('why', 'WRB'), ('then', 'RB'), ('why', 'WRB'), ('xxx', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (why->WRB) (then->RB) (why->WRB) (xxx->VBP) (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('aren', 'NNS'), ('t', 'VBP'), ('you', 'PRP'), ('glad', 'VBP'), ('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('back', 'RB'), ('to', 'TO'), ('school', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (aren->NNS) (t->VBP) (you->PRP) (glad->VBP) (you->PRP) (re->VBP) (going->VBG) (back->RB) (to->TO) (school->NN) (tomorrow->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('because', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('whining', 'VBG')])
('tags -> ', '     (because->IN) (i->JJ) (don->VBP) (t->NN) (want->VBP) (to->TO) (whining->VBG) ')
candidates to check:
2
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('miss', 'VBP'), ('all', 'DT'), ('your', 'PRP$'), ('friends', 'NNS'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (miss->VBP) (all->DT) (your->PRP$) (friends->NNS) (in->IN) (school->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 16, 20]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfcbca70>)
[('want', 'VB'), ('some', 'DT'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('want', 'VB'), ('some', 'DT'), ('meat', 'NN')])
('tags -> ', '     (want->VB) (some->DT) (meat->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 6, 10]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfcbc998>)
[('meat', 'NN')]
['meat']
('tags initial-> ', [('meat', 'NN')])
('tags -> ', '     (meat->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 6, 10]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfcbc440>)
[('meat', 'NN')]
['meat']
('tags initial-> ', [('meat', 'NN')])
('tags -> ', '     (meat->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('ll', 'NN'), ('just', 'RB'), ('have', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('piece', 'NN')])
('tags -> ', '     (i->JJ) (ll->NN) (just->RB) (have->VB) (a->DT) (little->JJ) (piece->NN) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('that', 'IN'), ('much', 'JJ')])
('tags -> ', '     (no->DT) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (that->IN) (much->JJ) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('this', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (have->VBP) (this->DT) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('this', 'DT'), ('piece', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (this->DT) (piece->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('welcome', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (welcome->JJ) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('miss', 'VBP'), ('your', 'PRP$'), ('teacher', 'NN')])
('tags -> ', '     (you->PRP) (miss->VBP) (your->PRP$) (teacher->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('they', 'PRP'), ('miss', 'VBP'), ('you', 'PRP'), ('too', 'RB')])
('tags -> ', '     (they->PRP) (miss->VBP) (you->PRP) (too->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('who', 'WP'), ('i', 'VBP'), ('saw', 'VBD'), ('today', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (know->VBP) (who->WP) (i->VBP) (saw->VBD) (today->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('lionel', 'NN')])
('tags -> ', '     (lionel->NN) ')
('tags initial-> ', [('and', 'CC'), ('carmen', 'NNS')])
('tags -> ', '     (and->CC) (carmen->NNS) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('and', 'CC'), ('carmen', 'NNS')])
('tags -> ', '     (and->CC) (carmen->NNS) ')
('tags initial-> ', [('who', 'WP'), ('else', 'RB')])
('tags -> ', '     (who->WP) (else->RB) ')
candidates to check:
2
('tags initial-> ', [('carmen', 'NNS'), ('s', 'VBP'), ('what', 'WP'), ('s', 'VBD'), ('her', 'PRP'), ('two', 'CD'), ('boys', 'NNS'), ('names', 'NNS')])
('tags -> ', '     (carmen->NNS) (s->VBP) (what->WP) (s->VBD) (her->PRP) (two->CD) (boys->NNS) (names->NNS) ')
('tags initial-> ', [('jose', 'NN')])
('tags -> ', '     (jose->NN) ')
('tags initial-> ', [('jose', 'NN'), ('and', 'CC'), ('miguel', 'NN')])
('tags -> ', '     (jose->NN) (and->CC) (miguel->NN) ')
('tags initial-> ', [('uhhum', 'NN')])
('tags -> ', '     (uhhum->NN) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('name', 'NN'), ('is', 'VBZ'), ('xxx', 'JJ')])
('tags -> ', '     (his->PRP$) (name->NN) (is->VBZ) (xxx->JJ) ')
('tags initial-> ', [('why', 'WRB'), ('won', 'VBD'), ('t', 'NN'), ('it', 'PRP'), ('come', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (why->WRB) (won->VBD) (t->NN) (it->PRP) (come->VBZ) (on->IN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) ')
candidates to check:
3
('tags initial-> ', [('mom', 'NN'), ('could', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('some', 'DT'), ('more', 'RBR'), ('drink', 'NNS')])
('tags -> ', '     (mom->NN) (could->MD) (i->VB) (have->VBP) (some->DT) (more->RBR) (drink->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'NN'), ('go', 'VBP'), ('out', 'RP'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('still', 'RB'), ('go', 'VB'), ('outside', 'IN')])
('tags -> ', '     (i->NN) (go->VBP) (out->RP) (you->PRP) (want->VBP) (to->TO) (still->RB) (go->VB) (outside->IN) ')
candidates to check:
1
('tags initial-> ', [('murmur', 'NN')])
('tags -> ', '     (murmur->NN) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'JJ'), ('bus', 'NN'), ('pass', 'NN')])
('tags -> ', '     (xxx->JJ) (bus->NN) (pass->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('you', 'PRP'), ('finished', 'VBD'), ('brittany', 'NN')])
('tags -> ', '     (you->PRP) (finished->VBD) (brittany->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NN'), ('am', 'VBP'), ('too', 'RB')])
('tags -> ', '     (i->NN) (am->VBP) (too->RB) ')
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('good', 'JJ'), ('huh', 'NN')])
('tags -> ', '     (that->DT) (was->VBD) (good->JJ) (huh->NN) ')
('tags initial-> ', [('was', 'VBD'), ('it', 'PRP'), ('good', 'JJ')])
('tags -> ', '     (was->VBD) (it->PRP) (good->JJ) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
loading solution set
calculating
set([(240, (6, 10)), (230, (16, 20)), (237, (6, 10))])
[((230, (16, 20)), '*CHI:\twant some meat .\n'), ((237, (6, 10)), '*CHI:\tmeat .\n'), ((240, (6, 10)), '*MOT:\tmeat ?\n')]
set([(178, (11, 16)), (240, (6, 10)), (181, (28, 32)), (99, (44, 49)), (104, (45, 50)), (32, (49, 53)), (230, (16, 20)), (15, (25, 29)), (18, (25, 29)), (237, (6, 10))])
[((15, (25, 29)), '*MOT:\t<thank you for our food amen> [>] .\n'), ((18, (25, 29)), '*CHI:\t<thank you for our food amen>[<] .\n'), ((32, (49, 53)), '*CHI:\tGod is good God is great thank him for our food .\n'), ((99, (44, 49)), "*MOT:\tjust leave it in there it'll keep the tonic cold .\n"), ((104, (45, 50)), "*CHI:\t<I can't get the> [//] I can't get the tonic .\n"), ((178, (11, 16)), '*CHI:\tmore tonic .\n'), ((181, (28, 32)), '*MOT:\tyeah eat some of your food then you can have some more to drink .\n'), ((230, (16, 20)), '*CHI:\twant some meat .\n'), ((237, (6, 10)), '*CHI:\tmeat .\n'), ((240, (6, 10)), '*MOT:\tmeat ?\n')]
calculating accuracy and recall
correct labels:
set(['meat'])
predicted labels:
set(['food', 'tonic', 'meat'])
file:HSLLD/HV1/MT//brtmt1.cha
precision: 0.333333333333
recall: 1.0
true positives:['meat']
false positives: ['food', 'tonic']
false negatives: []
# true pos: 1
# false pos: 2
# false neg: 0
HSLLD/HV1/MT//aprmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('hey', 'RB'), ('now', 'RB'), ('we', 'PRP'), ('can', 'MD'), ('get', 'VB'), ('ready', 'JJ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (hey->RB) (now->RB) (we->PRP) (can->MD) (get->VB) (ready->JJ) (to->TO) (eat->VB) ')
('tags initial-> ', [('come', 'VB'), ('on', 'IN'), ('you', 'PRP'), ('wan', 'VBP'), ('na', 'NNS'), ('say', 'VB'), ('your', 'PRP$'), ('grace', 'NN')])
('tags -> ', '     (come->VB) (on->IN) (you->PRP) (wan->VBP) (na->NNS) (say->VB) (your->PRP$) (grace->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('gobbling', 'VBG'), ('sounds', 'NNS')])
('tags -> ', '     (xxx->NN) (gobbling->VBG) (sounds->NNS) ')
('tags initial-> ', [('xxx', 'NNS'), ('say', 'VBP'), ('your', 'PRP$'), ('grace', 'NN')])
('tags -> ', '     (xxx->NNS) (say->VBP) (your->PRP$) (grace->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('ha', 'NN'), ('ve', 'NN'), ('none', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (ha->NN) (ve->NN) (none->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('ll', 'VBP'), ('have', 'VB'), ('some', 'DT'), ('in', 'IN'), ('a', 'DT'), ('minute', 'NN')])
('tags -> ', '     (you->PRP) (ll->VBP) (have->VB) (some->DT) (in->IN) (a->DT) (minute->NN) ')
candidates to check:
1
('tags initial-> ', [('say', 'VB'), ('your', 'PRP$'), ('grace', 'NN')])
('tags -> ', '     (say->VB) (your->PRP$) (grace->NN) ')
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('great', 'JJ')])
('tags -> ', '     (god->NN) (is->VBZ) (great->JJ) ')
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('good', 'JJ')])
('tags -> ', '     (god->NN) (is->VBZ) (good->JJ) ')
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('good', 'JJ')])
('tags -> ', '     (god->NN) (is->VBZ) (good->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 32, 36]
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('thank', 'VBD'), ('him', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN'), ('amen', 'NNS')])
('tags -> ', '     (and->CC) (we->PRP) (thank->VBD) (him->PRP) (for->IN) (our->PRP$) (food->NN) (amen->NNS) ')
candidates to check:
1
descended from food: [['N'], 'food', 32, 36]
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('thank', 'VBD'), ('him', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN'), ('amen', 'NNS')])
('tags -> ', '     (and->CC) (we->PRP) (thank->VBD) (him->PRP) (for->IN) (our->PRP$) (food->NN) (amen->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (too->RB) ')
('tags initial-> ', [('okay', 'IN'), ('gwen', 'NNS'), ('can', 'MD'), ('see', 'VB'), ('help', 'VB'), ('you', 'PRP'), ('all', 'DT')])
('tags -> ', '     (okay->IN) (gwen->NNS) (can->MD) (see->VB) (help->VB) (you->PRP) (all->DT) ')
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('got', 'VBN'), ('my', 'PRP$')])
('tags -> ', '     (i->NNS) (have->VBP) (got->VBN) (my->PRP$) ')
candidates to check:
1
('tags initial-> ', [('get', 'VB'), ('you', 'PRP'), ('going', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (get->VB) (you->PRP) (going->VBG) (on->IN) (the->DT) (table->NN) ')
candidates to check:
1
corn
corn corn 419
[('you', 'PRP'), ('want', 'VBP'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('corn', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (corn->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('that', 'IN'), ('one', 'CD')])
('tags -> ', '     (i->NN) (want->VBP) (that->IN) (one->CD) ')
('tags initial-> ', [('how', 'WRB'), ('a', 'DT'), ('bout', 'NN'), ('you', 'PRP'), ('wink', 'VBP')])
('tags -> ', '     (how->WRB) (a->DT) (bout->NN) (you->PRP) (wink->VBP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('um', 'NN')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (our->PRP$) (um->NN) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 6, 14]
potatoes
potatoes potatoes 62
[('potatoes', 'NNS'), ('there', 'RB')]
['potatoes']
('tags initial-> ', [('potatoes', 'NNS'), ('there', 'RB')])
('tags -> ', '     (potatoes->NNS) (there->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('anybody', 'NN'), ('want', 'VBP'), ('anything', 'NN'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (anybody->NN) (want->VBP) (anything->NN) (to->TO) (drink->VB) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('april', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (april->VB) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 28, 36]
potatoes
potatoes potatoes 62
[('thank', 'NN'), ('i', 'NN'), ('like', 'IN'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('thank', 'NN'), ('i', 'NN'), ('like', 'IN'), ('potatoes', 'NNS')])
('tags -> ', '     (thank->NN) (i->NN) (like->IN) (potatoes->NNS) ')
('tags initial-> ', [('xxx', 'JJ'), ('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('mommy', 'NN')])
('tags -> ', '     (xxx->JJ) (thank->NN) (you->PRP) (for->IN) (mommy->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('something', 'NN'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (you->PRP) (want->VBP) (something->NN) (to->TO) (drink->VB) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (xxx->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('granski', 'NN')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (granski->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('god', 'NN')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (god->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('thank', 'VB'), ('you', 'PRP'), ('for', 'IN'), ('the', 'DT'), ('kids', 'NNS')])
('tags -> ', '     (and->CC) (thank->VB) (you->PRP) (for->IN) (the->DT) (kids->NNS) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('thank', 'VB'), ('you', 'PRP'), ('for', 'IN'), ('the', 'DT'), ('kids', 'NNS')])
('tags -> ', '     (and->CC) (thank->VB) (you->PRP) (for->IN) (the->DT) (kids->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('my', 'PRP$'), ('school', 'NN')])
('tags -> ', '     (at->IN) (my->PRP$) (school->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('kids', 'VBD')])
('tags -> ', '     (what->WP) (kids->VBD) ')
('tags initial-> ', [('oh', 'UH'), ('okay', 'NN')])
('tags -> ', '     (oh->UH) (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('my', 'PRP$'), ('teacher', 'NN')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (my->PRP$) (teacher->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 23, 27]
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('for', 'IN'), ('my', 'PRP$'), ('food', 'NN'), ('amen', 'NNS')])
('tags -> ', '     (thank->NN) (you->PRP) (for->IN) (my->PRP$) (food->NN) (amen->NNS) ')
('tags initial-> ', [('amen', 'NNS')])
('tags -> ', '     (amen->NNS) ')
('tags initial-> ', [('amen', 'NNS')])
('tags -> ', '     (amen->NNS) ')
('tags initial-> ', [('what', 'WP'), ('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('to', 'TO'), ('drink', 'VB'), ('april', 'NN')])
('tags -> ', '     (what->WP) (would->MD) (you->PRP) (like->IN) (to->TO) (drink->VB) (april->NN) ')
('tags initial-> ', [('what', 'WP'), ('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('to', 'TO'), ('have', 'VB'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (what->WP) (would->MD) (you->PRP) (like->IN) (to->TO) (have->VB) (to->TO) (drink->VB) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('koolaid', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (koolaid->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('to', 'TO'), ('have', 'VB'), ('for', 'IN'), ('drink', 'NN')])
('tags -> ', '     (what->WP) (would->MD) (you->PRP) (like->IN) (to->TO) (have->VB) (for->IN) (drink->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 6, 10]
milk
milk milk 46
[('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN')])
('tags -> ', '     (milk->NN) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('whatchu', 'VBP'), ('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (you->PRP) (want->VBP) (some->DT) (whatchu->VBP) (what->WP) (do->VBP) (you->PRP) (want->VB) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) ')
('tags initial-> ', [('koolaid', 'NN')])
('tags -> ', '     (koolaid->NN) ')
('tags initial-> ', [('koolaid', 'NN')])
('tags -> ', '     (koolaid->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 21, 25]
milk
milk milk 46
[('we', 'PRP'), ('got', 'VBD'), ('koolaid', 'VBN'), ('milk', 'NN'), ('and', 'CC'), ('water', 'NN')]
['milk']
water
water water 18
[('we', 'PRP'), ('got', 'VBD'), ('koolaid', 'VBN'), ('milk', 'NN'), ('and', 'CC'), ('water', 'NN')]
['water']
('tags initial-> ', [('we', 'PRP'), ('got', 'VBD'), ('koolaid', 'VBN'), ('milk', 'NN'), ('and', 'CC'), ('water', 'NN')])
('tags -> ', '     (we->PRP) (got->VBD) (koolaid->VBN) (milk->NN) (and->CC) (water->NN) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('got', 'VBD'), ('air', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (got->VBD) (air->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
('tags initial-> ', [('anybody', 'NN'), ('want', 'VBP'), ('air', 'NN')])
('tags -> ', '     (anybody->NN) (want->VBP) (air->NN) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('air', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (air->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('so', 'RB'), ('april', 'JJ')])
('tags -> ', '     (so->RB) (april->JJ) ')
('tags initial-> ', [('tell', 'VB'), ('me', 'PRP'), ('what', 'WP'), ('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (tell->VB) (me->PRP) (what->WP) (you->PRP) (did->VBD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
7
('tags initial-> ', [('tell', 'VB'), ('me', 'PRP'), ('what', 'WP'), ('happened', 'VBD'), ('at', 'IN'), ('your', 'PRP$'), ('school', 'NN'), ('today', 'NN'), ('whatchu', 'VBP'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('and', 'CC'), ('the', 'DT'), ('kids', 'NNS'), ('do', 'VBP'), ('at', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (tell->VB) (me->PRP) (what->WP) (happened->VBD) (at->IN) (your->PRP$) (school->NN) (today->NN) (whatchu->VBP) (what->WP) (did->VBD) (you->PRP) (and->CC) (the->DT) (kids->NNS) (do->VBP) (at->IN) (school->NN) (today->NN) ')
candidates to check:
3
('tags initial-> ', [('name', 'NN'), ('some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('kids', 'NNS'), ('go', 'VBP'), ('to', 'TO'), ('your', 'PRP$'), ('school', 'NN')])
('tags -> ', '     (name->NN) (some->DT) (of->IN) (the->DT) (kids->NNS) (go->VBP) (to->TO) (your->PRP$) (school->NN) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('at', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (at->IN) (school->NN) (today->NN) ')
candidates to check:
2
('tags initial-> ', [('auntie', 'NN'), ('mary', 'NN'), ('will', 'MD'), ('tell', 'VB'), ('you', 'PRP'), ('something', 'NN')])
('tags -> ', '     (auntie->NN) (mary->NN) (will->MD) (tell->VB) (you->PRP) (something->NN) ')
candidates to check:
4
('tags initial-> ', [('what', 'WP'), ('s', 'VBZ'), ('your', 'PRP$'), ('bus', 'NN'), ('driver', 'NN'), ('s', 'VB'), ('what', 'WP'), ('s', 'VB'), ('your', 'PRP$'), ('van', 'NN'), ('driver', 'NN'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBZ) (your->PRP$) (bus->NN) (driver->NN) (s->VB) (what->WP) (s->VB) (your->PRP$) (van->NN) (driver->NN) (s->NN) (name->NN) ')
candidates to check:
1
('tags initial-> ', [('auntie', 'NN'), ('mary', 'NN')])
('tags -> ', '     (auntie->NN) (mary->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('your', 'PRP$'), ('van', 'NN'), ('driver', 'NN'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (your->PRP$) (van->NN) (driver->NN) (s->NN) (name->NN) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('kids', 'NNS'), ('name', 'NN'), ('that', 'WDT'), ('ride', 'VBP'), ('on', 'IN'), ('your', 'PRP$'), ('van', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (some->DT) (of->IN) (the->DT) (kids->NNS) (name->NN) (that->WDT) (ride->VBP) (on->IN) (your->PRP$) (van->NN) ')
('tags initial-> ', [('joey', 'NN')])
('tags -> ', '     (joey->NN) ')
('tags initial-> ', [('eat', 'NN')])
('tags -> ', '     (eat->NN) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 23, 31]
potatoes
potatoes potatoes 62
[('eat', 'VB'), ('some', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('eat', 'VB'), ('some', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('potatoes', 'NNS')])
('tags -> ', '     (eat->VB) (some->DT) (of->IN) (your->PRP$) (potatoes->NNS) ')
candidates to check:
3
descended from food: [['N'], 'chicken', 19, 26]
chicken
chicken chicken 234
[('anybody', 'NN'), ('want', 'VBP'), ('chicken', 'NN')]
['chicken']
('tags initial-> ', [('anybody', 'NN'), ('want', 'VBP'), ('chicken', 'NN')])
('tags -> ', '     (anybody->NN) (want->VBP) (chicken->NN) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('april', 'NN'), ('you', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('mouth', 'NN'), ('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('use', 'VBP'), ('your', 'PRP$'), ('mouth', 'NN'), ('and', 'CC'), ('stop', 'VB'), ('it', 'PRP')])
('tags -> ', '     (april->NN) (you->PRP) (got->VBD) (a->DT) (mouth->NN) (why->WRB) (don->NN) (t->NN) (you->PRP) (use->VBP) (your->PRP$) (mouth->NN) (and->CC) (stop->VB) (it->PRP) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('at', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (at->IN) (school->NN) (today->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('april', 'NN')])
('tags -> ', '     (april->NN) ')
('tags initial-> ', [('april', 'NN')])
('tags -> ', '     (april->NN) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('at', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (at->IN) (school->NN) (today->NN) ')
('tags initial-> ', [('mm', 'NN'), ('no', 'DT')])
('tags -> ', '     (mm->NN) (no->DT) ')
('tags initial-> ', [('i', 'NN'), ('dunno', 'VBP'), ('don', 'NN'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (dunno->VBP) (don->NN) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('tell', 'VB'), ('me', 'PRP'), ('some', 'DT'), ('games', 'NNS'), ('you', 'PRP'), ('played', 'VBP')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (tell->VB) (me->PRP) (some->DT) (games->NNS) (you->PRP) (played->VBP) ')
candidates to check:
3
('tags initial-> ', [('over', 'IN'), ('at', 'IN'), ('zayres', 'NNS'), ('yesterday', 'NN'), ('gwen', 'VBP'), ('i', 'NN'), ('filled', 'VBN'), ('out', 'RP'), ('one', 'CD'), ('of', 'IN'), ('those', 'DT'), ('parers', 'NNS'), ('over', 'IN'), ('there', 'RB'), ('so', 'RB'), ('that', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('go', 'VB'), ('take', 'VB'), ('a', 'DT'), ('portrait', 'NN'), ('together', 'RB')])
('tags -> ', '     (over->IN) (at->IN) (zayres->NNS) (yesterday->NN) (gwen->VBP) (i->NN) (filled->VBN) (out->RP) (one->CD) (of->IN) (those->DT) (parers->NNS) (over->IN) (there->RB) (so->RB) (that->IN) (we->PRP) (can->MD) (go->VB) (take->VB) (a->DT) (portrait->NN) (together->RB) ')
('tags initial-> ', [('oh', 'UH'), ('really', 'RB')])
('tags -> ', '     (oh->UH) (really->RB) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('we', 'PRP'), ('go', 'VBP'), ('over', 'RP'), ('on', 'IN'), ('thirteenth', 'NN'), ('of', 'IN'), ('august', 'NN'), ('at', 'IN'), ('three', 'CD'), ('o', 'NN'), ('clock', 'NN'), ('on', 'IN'), ('a', 'DT'), ('sunday', 'JJ'), ('me', 'PRP'), ('erica', 'JJ'), ('and', 'CC'), ('april', 'JJ'), ('and', 'CC'), ('salina', 'NN')])
('tags -> ', '     (yeah->NN) (we->PRP) (go->VBP) (over->RP) (on->IN) (thirteenth->NN) (of->IN) (august->NN) (at->IN) (three->CD) (o->NN) (clock->NN) (on->IN) (a->DT) (sunday->JJ) (me->PRP) (erica->JJ) (and->CC) (april->JJ) (and->CC) (salina->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('next', 'JJ'), ('sunday', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (next->JJ) (sunday->NN) ')
('tags initial-> ', [('sunday', 'NN'), ('after', 'IN'), ('this', 'DT'), ('one', 'NN')])
('tags -> ', '     (sunday->NN) (after->IN) (this->DT) (one->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('go', 'VB'), ('and', 'CC'), ('have', 'VB'), ('us', 'PRP'), ('a', 'DT'), ('portrait', 'NN'), ('taken', 'VBN'), ('together', 'RB')])
('tags -> ', '     (we->PRP) (gon->VBP) (na->TO) (go->VB) (and->CC) (have->VB) (us->PRP) (a->DT) (portrait->NN) (taken->VBN) (together->RB) ')
('tags initial-> ', [('sounds', 'NNS'), ('good', 'JJ')])
('tags -> ', '     (sounds->NNS) (good->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('the', 'DT'), ('one', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('dad', 'NN'), ('and', 'CC'), ('i', 'NN'), ('taken', 'VBN'), ('on', 'IN')])
('tags -> ', '     (that->DT) (s->VBD) (the->DT) (one->NN) (i->NN) (had->VBD) (dad->NN) (and->CC) (i->NN) (taken->VBN) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('so', 'IN'), ('we', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('have', 'VB'), ('to', 'TO'), ('make', 'VB'), ('sure', 'JJ'), ('that', 'IN'), ('y', 'VBP'), ('all', 'DT'), ('d', 'NN'), ('hair', 'NN'), ('has', 'VBZ'), ('been', 'VBN'), ('freshly', 'RB'), ('beautifully', 'RB'), ('done', 'VBN')])
('tags -> ', '     (so->IN) (we->PRP) (gon->VBP) (na->TO) (have->VB) (to->TO) (make->VB) (sure->JJ) (that->IN) (y->VBP) (all->DT) (d->NN) (hair->NN) (has->VBZ) (been->VBN) (freshly->RB) (beautifully->RB) (done->VBN) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP')])
('tags -> ', '     (you->PRP) (want->VBP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('better', 'JJR'), ('get', 'VB'), ('it', 'PRP'), ('done', 'VBN'), ('too', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('m', 'VBP'), ('leaving', 'VBG'), ('and', 'CC'), ('i', 'JJ'), ('m', 'NN'), ('going', 'VBG'), ('away', 'RB'), ('again', 'RB'), ('next', 'JJ'), ('weekend', 'NN'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (better->JJR) (get->VB) (it->PRP) (done->VBN) (too->RB) (be->VB) (cause->NN) (i->JJ) (m->VBP) (leaving->VBG) (and->CC) (i->JJ) (m->NN) (going->VBG) (away->RB) (again->RB) (next->JJ) (weekend->NN) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('next', 'JJ'), ('is', 'VBZ'), ('the', 'DT'), ('weekend', 'NN'), ('of', 'IN'), ('the', 'DT'), ('seventh', 'JJ')])
('tags -> ', '     (next->JJ) (is->VBZ) (the->DT) (weekend->NN) (of->IN) (the->DT) (seventh->JJ) ')
('tags initial-> ', [('um', 'JJ'), ('um', 'JJ'), ('um', 'JJ'), ('gwenski', 'NN')])
('tags -> ', '     (um->JJ) (um->JJ) (um->JJ) (gwenski->NN) ')
candidates to check:
1
('tags initial-> ', [('uh', 'JJ'), ('huh', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB'), ('that', 'IN'), ('weekend', 'NN'), ('too', 'RB')])
('tags -> ', '     (uh->JJ) (huh->NN) (i->NN) (m->VBP) (gon->NN) (na->TO) (go->VB) (that->IN) (weekend->NN) (too->RB) ')
candidates to check:
5
('tags initial-> ', [('that', 'IN'), ('other', 'JJ'), ('kids', 'NNS'), ('name', 'NN'), ('is', 'VBZ'), ('ricky', 'JJ'), ('and', 'CC'), ('priscilla', 'NN'), ('and', 'CC'), ('joanna', 'NN'), ('and', 'CC'), ('tyrone', 'NN'), ('and', 'CC'), ('ricky', 'NN'), ('and', 'CC')])
('tags -> ', '     (that->IN) (other->JJ) (kids->NNS) (name->NN) (is->VBZ) (ricky->JJ) (and->CC) (priscilla->NN) (and->CC) (joanna->NN) (and->CC) (tyrone->NN) (and->CC) (ricky->NN) (and->CC) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP')])
('tags -> ', '     (and->CC) (what->WP) ')
('tags initial-> ', [('and', 'CC'), ('april', 'NN')])
('tags -> ', '     (and->CC) (april->NN) ')
candidates to check:
6
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('little', 'JJ'), ('girl', 'JJ'), ('name', 'NN'), ('on', 'IN'), ('you', 'PRP'), ('van', 'VBP'), ('s', 'JJ'), ('name', 'NN'), ('april', 'NN')])
('tags -> ', '     (and->CC) (what->WP) (s->VBD) (the->DT) (little->JJ) (girl->JJ) (name->NN) (on->IN) (you->PRP) (van->VBP) (s->JJ) (name->NN) (april->NN) ')
candidates to check:
2
('tags initial-> ', [('your', 'PRP$'), ('little', 'JJ'), ('friend', 'NN')])
('tags -> ', '     (your->PRP$) (little->JJ) (friend->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBZ'), ('her', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBZ) (her->PRP$) (name->NN) ')
('tags initial-> ', [('veronica', 'NN')])
('tags -> ', '     (veronica->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBZ'), ('her', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBZ) (her->PRP$) (name->NN) ')
('tags initial-> ', [('veronica', 'NN')])
('tags -> ', '     (veronica->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBZ'), ('her', 'PRP$'), ('name', 'NN')])
('tags -> ', '     (what->WP) (s->VBZ) (her->PRP$) (name->NN) ')
('tags initial-> ', [('monica', 'NN')])
('tags -> ', '     (monica->NN) ')
('tags initial-> ', [('veronica', 'NN')])
('tags -> ', '     (veronica->NN) ')
candidates to check:
5
descended from food: [['N'], 'food', 64, 68]
cream
cream cream 72
[('and', 'CC'), ('maybe', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('sit', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('talk', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('or', 'CC'), ('and', 'CC'), ('probably', 'RB'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('afterwards', 'NNS')]
['cream']
ice cream
ice cream ice cream 265
[('and', 'CC'), ('maybe', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('sit', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('talk', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('or', 'CC'), ('and', 'CC'), ('probably', 'RB'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('afterwards', 'NNS')]
['ice', 'cream']
('tags initial-> ', [('and', 'CC'), ('maybe', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('sit', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('talk', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('or', 'CC'), ('and', 'CC'), ('probably', 'RB'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('afterwards', 'NNS')])
('tags -> ', '     (and->CC) (maybe->RB) (if->IN) (you->PRP) (sit->VBP) (at->IN) (the->DT) (table->NN) (talk->NN) (and->CC) (eat->VB) (your->PRP$) (food->NN) (or->CC) (and->CC) (probably->RB) (can->MD) (have->VB) (some->DT) (ice->NN) (cream->NN) (afterwards->NNS) ')
candidates to check:
4
cream
cream cream 72
[('who', 'WP'), ('want', 'VBP'), ('ice', 'NN'), ('cream', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('who', 'WP'), ('want', 'VBP'), ('ice', 'NN'), ('cream', 'NN')]
['ice', 'cream']
('tags initial-> ', [('who', 'WP'), ('want', 'VBP'), ('ice', 'NN'), ('cream', 'NN')])
('tags -> ', '     (who->WP) (want->VBP) (ice->NN) (cream->NN) ')
('tags initial-> ', [('not', 'RB'), ('me', 'PRP')])
('tags -> ', '     (not->RB) (me->PRP) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('have', 'VBP'), ('to', 'TO'), ('do', 'VB'), ('you', 'PRP'), ('hair', 'VB'), ('girls', 'NNS'), ('hair', 'NN'), ('thursday', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('m', 'NN'), ('leaving', 'VBG'), ('friday', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (a->DT) (have->VBP) (to->TO) (do->VB) (you->PRP) (hair->VB) (girls->NNS) (hair->NN) (thursday->RB) (be->VB) (cause->NN) (i->JJ) (m->NN) (leaving->VBG) (friday->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('nice', 'JJ'), ('beautiful', 'JJ'), ('style', 'NN')])
('tags -> ', '     (a->DT) (nice->JJ) (beautiful->JJ) (style->NN) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('you', 'PRP'), ('speaking', 'VBG'), ('of', 'IN'), ('the', 'DT'), ('tenth', 'NN')])
('tags -> ', '     (so->RB) (you->PRP) (speaking->VBG) (of->IN) (the->DT) (tenth->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
6
('tags initial-> ', [('be', 'VB'), ('cause', 'VBN'), ('me', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('me', 'PRP'), ('and', 'CC'), ('her', 'PRP$'), ('go', 'NN'), ('to', 'TO'), ('we', 'PRP'), ('go', 'VB'), ('to', 'TO'), ('her', 'PRP$'), ('um', 'JJ'), ('school', 'NN'), ('day', 'NN'), ('thing', 'NN'), ('that', 'WDT'), ('friday', 'VBZ'), ('the', 'DT'), ('eleventh', 'NN')])
('tags -> ', '     (be->VB) (cause->VBN) (me->PRP) (be->VB) (cause->VBN) (me->PRP) (and->CC) (her->PRP$) (go->NN) (to->TO) (we->PRP) (go->VB) (to->TO) (her->PRP$) (um->JJ) (school->NN) (day->NN) (thing->NN) (that->WDT) (friday->VBZ) (the->DT) (eleventh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('next', 'JJ'), ('weekend', 'NN'), ('huh', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (next->JJ) (weekend->NN) (huh->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('that', 'IN'), ('s', 'JJ'), ('next', 'JJ'), ('friday', 'NN'), ('uhhuh', 'NN')])
('tags -> ', '     (yeah->NN) (that->IN) (s->JJ) (next->JJ) (friday->NN) (uhhuh->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('how', 'WRB'), ('you', 'PRP'), ('doing', 'VBG'), ('xxx', 'VB')])
('tags -> ', '     (how->WRB) (you->PRP) (doing->VBG) (xxx->VB) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'honey', 24, 29]
honey
honey honey 304
[('this', 'DT'), ('is', 'VBZ'), ('delicious', 'JJ'), ('honey', 'NN'), ('got', 'VBD'), ('all', 'DT'), ('up', 'RB'), ('on', 'IN'), ('my', 'PRP$'), ('dress', 'NN')]
['honey']
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('delicious', 'JJ'), ('honey', 'NN'), ('got', 'VBD'), ('all', 'DT'), ('up', 'RB'), ('on', 'IN'), ('my', 'PRP$'), ('dress', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (delicious->JJ) (honey->NN) (got->VBD) (all->DT) (up->RB) (on->IN) (my->PRP$) (dress->NN) ')
('tags initial-> ', [('laughing', 'VBG')])
('tags -> ', '     (laughing->VBG) ')
candidates to check:
4
descended from food: [['N'], 'diet', 66, 70]
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('m', 'VBP'), ('trying', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('back', 'RB'), ('in', 'IN'), ('form', 'NN'), ('again', 'RB'), ('so', 'RB'), ('um', 'JJ'), ('on', 'IN'), ('my', 'PRP$'), ('diet', 'JJ'), ('today', 'NN')])
('tags -> ', '     (well->RB) (i->JJ) (m->VBP) (trying->VBG) (to->TO) (get->VB) (back->RB) (in->IN) (form->NN) (again->RB) (so->RB) (um->JJ) (on->IN) (my->PRP$) (diet->JJ) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'RB'), ('been', 'VBN'), ('on', 'IN'), ('mine', 'NN'), ('all', 'DT'), ('week', 'NN')])
('tags -> ', '     (i->RB) (been->VBN) (on->IN) (mine->NN) (all->DT) (week->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('why', 'WRB'), ('i', 'JJ'), ('m', 'NN'), ('hungry', 'NN'), ('today', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (why->WRB) (i->JJ) (m->NN) (hungry->NN) (today->NN) ')
('tags initial-> ', [('the', 'DT'), ('next', 'JJ')])
('tags -> ', '     (the->DT) (next->JJ) ')
candidates to check:
4
('tags initial-> ', [('when', 'WRB'), ('i', 'NN'), ('go', 'VBP'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('tomorrow', 'NN'), ('and', 'CC'), ('get', 'VB'), ('my', 'PRP$'), ('sodas', 'NNS')])
('tags -> ', '     (when->WRB) (i->NN) (go->VBP) (to->TO) (the->DT) (store->NN) (tomorrow->NN) (and->CC) (get->VB) (my->PRP$) (sodas->NNS) ')
candidates to check:
3
descended from food: [['N'], 'diet', 30, 34]
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('buyin', 'JJ'), ('g', 'NN'), ('everything', 'NN'), ('diet', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (buyin->JJ) (g->NN) (everything->NN) (diet->NN) ')
candidates to check:
12
descended from food: [['N'], 'diet', 6, 10]
descended from food: [['N'], 'diet', 6, 10]
descended from food: [['N'], 'diet', 6, 10]
ginger ale
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df97b7a0>)
[('diet', 'JJ'), ('sprite', 'JJ'), ('diet', 'JJ'), ('slice', 'NN'), ('diet', 'JJ'), ('ginger', 'NN'), ('ale', 'NN')]
['ginger', 'ale']
ginger
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df97bfc8>)
[('diet', 'JJ'), ('sprite', 'JJ'), ('diet', 'JJ'), ('slice', 'NN'), ('diet', 'JJ'), ('ginger', 'NN'), ('ale', 'NN')]
['ginger']
sprite
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dff1e290>)
[('diet', 'JJ'), ('sprite', 'JJ'), ('diet', 'JJ'), ('slice', 'NN'), ('diet', 'JJ'), ('ginger', 'NN'), ('ale', 'NN')]
['sprite']
('tags initial-> ', [('diet', 'JJ'), ('sprite', 'JJ'), ('diet', 'JJ'), ('slice', 'NN'), ('diet', 'JJ'), ('ginger', 'NN'), ('ale', 'NN')])
('tags -> ', '     (diet->JJ) (sprite->JJ) (diet->JJ) (slice->NN) (diet->JJ) (ginger->NN) (ale->NN) ')
('tags initial-> ', [('and', 'CC'), ('um', 'NN'), ('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('uh', 'JJ'), ('slim', 'JJ'), ('fast', 'NN')])
('tags -> ', '     (and->CC) (um->NN) (i->NN) (have->VBP) (my->PRP$) (uh->JJ) (slim->JJ) (fast->NN) ')
candidates to check:
2
descended from food: [['N'], 'lunch', 17, 22]
descended from food: [['N'], 'dinner', 34, 40]
('tags initial-> ', [('eat', 'NN'), ('it', 'PRP'), ('for', 'IN'), ('lunch', 'NN'), ('or', 'CC'), ('for', 'IN'), ('dinner', 'NN')])
('tags -> ', '     (eat->NN) (it->PRP) (for->IN) (lunch->NN) (or->CC) (for->IN) (dinner->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('uh', 'NN'), ('i', 'VBP'), ('knew', 'VBD'), ('this', 'DT'), ('stuff', 'NN'), ('on', 'IN'), ('this', 'DT'), ('table', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('tempt', 'VB'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (uh->NN) (i->VBP) (knew->VBD) (this->DT) (stuff->NN) (on->IN) (this->DT) (table->NN) (was->VBD) (gon->VBG) (na->TO) (tempt->VB) (me->PRP) ')
candidates to check:
1
descended from food: [['N'], 'salad', 28, 33]
('tags initial-> ', [('i', 'RB'), ('been', 'VBN'), ('living', 'VBG'), ('on', 'IN'), ('salad', 'NN')])
('tags -> ', '     (i->RB) (been->VBN) (living->VBG) (on->IN) (salad->NN) ')
candidates to check:
3
descended from food: [['N'], 'salad', 26, 31]
('tags initial-> ', [('i', 'NN'), ('ve', 'VBP'), ('been', 'VBN'), ('living', 'VBG'), ('on', 'IN'), ('salad', 'NN'), ('for', 'IN'), ('the', 'DT'), ('last', 'JJ'), ('week', 'NN')])
('tags -> ', '     (i->NN) (ve->VBP) (been->VBN) (living->VBG) (on->IN) (salad->NN) (for->IN) (the->DT) (last->JJ) (week->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('ll', 'VBP'), ('tell', 'NN'), ('you', 'PRP'), ('my', 'PRP$'), ('body', 'NN'), ('s', 'VBZ'), ('getting', 'VBG'), ('weak', 'JJ')])
('tags -> ', '     (and->CC) (i->VB) (ll->VBP) (tell->NN) (you->PRP) (my->PRP$) (body->NN) (s->VBZ) (getting->VBG) (weak->JJ) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
1
descended from food: [['N'], 'foods', 102, 107]
('tags initial-> ', [('well', 'RB'), ('well', 'RB'), ('i', 'JJ'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('try', 'VB'), ('it', 'PRP'), ('instead', 'RB'), ('is', 'VBZ'), ('xxx', 'JJ'), ('is', 'VBZ'), ('try', 'NN'), ('to', 'TO'), ('try', 'VB'), ('to', 'TO'), ('xxx', 'VB'), ('to', 'TO'), ('eat', 'VB'), ('just', 'RB'), ('about', 'IN'), ('the', 'DT'), ('foods', 'NNS'), ('that', 'IN'), ('i', 'VBP'), ('d', 'VBP'), ('like', 'IN'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (well->RB) (well->RB) (i->JJ) (m->VBP) (gon->NN) (na->TO) (try->VB) (it->PRP) (instead->RB) (is->VBZ) (xxx->JJ) (is->VBZ) (try->NN) (to->TO) (try->VB) (to->TO) (xxx->VB) (to->TO) (eat->VB) (just->RB) (about->IN) (the->DT) (foods->NNS) (that->IN) (i->VBP) (d->VBP) (like->IN) (to->TO) (eat->VB) ')
candidates to check:
5
descended from food: [['N'], 'meal', 49, 53]
descended from food: [['N'], 'diet', 64, 68]
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('m', 'NN'), ('just', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('try', 'VB'), ('to', 'TO'), ('cut', 'VB'), ('out', 'RP'), ('a', 'DT'), ('meal', 'NN'), ('and', 'CC'), ('drink', 'VB'), ('diet', 'JJ'), ('soda', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (m->NN) (just->RB) (gon->VB) (na->TO) (try->VB) (to->TO) (cut->VB) (out->RP) (a->DT) (meal->NN) (and->CC) (drink->VB) (diet->JJ) (soda->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('really', 'RB'), ('don', 'JJ'), ('t', 'NN'), ('eat', 'NN'), ('all', 'PDT'), ('that', 'RB'), ('much', 'JJ'), ('anyway', 'RB')])
('tags -> ', '     (be->VB) (cause->NN) (i->JJ) (really->RB) (don->JJ) (t->NN) (eat->NN) (all->PDT) (that->RB) (much->JJ) (anyway->RB) ')
candidates to check:
6
descended from food: [['N'], 'diet', 72, 76]
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('the', 'DT'), ('soda', 'NN'), ('so', 'RB'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('drink', 'VB'), ('nothin', 'JJ'), ('g', 'NN'), ('but', 'CC'), ('diet', 'JJ'), ('sodas', 'NNS'), ('and', 'CC')])
('tags -> ', '     (i->NN) (think->VBP) (it->PRP) (s->VBZ) (the->DT) (soda->NN) (so->RB) (i->JJ) (m->NN) (gon->NN) (na->TO) (drink->VB) (nothin->JJ) (g->NN) (but->CC) (diet->JJ) (sodas->NNS) (and->CC) ')
candidates to check:
12
descended from food: [['N'], 'lunch', 21, 26]
descended from food: [['N'], 'ham', 47, 50]
descended from food: [['N'], 'sandwich', 51, 59]
descended from food: [['N'], 'lunch', 21, 26]
descended from food: [['N'], 'apple', 91, 96]
ham
ham ham 141
[('so', 'RB'), ('today', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('took', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('spice', 'NN'), ('ham', 'NN'), ('sandwich', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('lunch', 'NN'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('had', 'VBD'), ('an', 'DT'), ('apple', 'NN')]
['ham']
apple
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df97df38>)
[('so', 'RB'), ('today', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('took', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('spice', 'NN'), ('ham', 'NN'), ('sandwich', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('lunch', 'NN'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('had', 'VBD'), ('an', 'DT'), ('apple', 'NN')]
['apple']
('tags initial-> ', [('so', 'RB'), ('today', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('took', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('spice', 'NN'), ('ham', 'NN'), ('sandwich', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('lunch', 'NN'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('had', 'VBD'), ('an', 'DT'), ('apple', 'NN')])
('tags -> ', '     (so->RB) (today->NN) (i->NN) (had->VBD) (lunch->NN) (and->CC) (took->VBD) (me->PRP) (a->DT) (spice->NN) (ham->NN) (sandwich->NN) (to->TO) (eat->VB) (lunch->NN) (and->CC) (then->RB) (i->VB) (had->VBD) (an->DT) (apple->NN) ')
candidates to check:
4
descended from food: [['N'], 'diet', 27, 31]
descended from food: [['N'], 'lunch', 43, 48]
sprite
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df984830>)
[('and', 'CC'), ('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('um', 'JJ'), ('diet', 'JJ'), ('sprite', 'NN'), ('for', 'IN'), ('lunch', 'NN')]
['sprite']
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('um', 'JJ'), ('diet', 'JJ'), ('sprite', 'NN'), ('for', 'IN'), ('lunch', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (had->VBD) (a->DT) (um->JJ) (diet->JJ) (sprite->NN) (for->IN) (lunch->NN) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 41, 47]
('tags initial-> ', [('and', 'CC'), ('this', 'DT'), ('right', 'NN'), ('here', 'RB'), ('be', 'VB'), ('my', 'PRP$'), ('uh', 'JJ'), ('dinner', 'NN'), ('right', 'NN'), ('here', 'RB')])
('tags -> ', '     (and->CC) (this->DT) (right->NN) (here->RB) (be->VB) (my->PRP$) (uh->JJ) (dinner->NN) (right->NN) (here->RB) ')
candidates to check:
2
descended from food: [['N'], 'lunch', 48, 53]
('tags initial-> ', [('and', 'CC'), ('tomorrow', 'NN'), ('i', 'NN'), ('ll', 'VBP'), ('drink', 'VB'), ('this', 'DT'), ('for', 'IN'), ('uh', 'JJ'), ('lunch', 'NN')])
('tags -> ', '     (and->CC) (tomorrow->NN) (i->NN) (ll->VBP) (drink->VB) (this->DT) (for->IN) (uh->JJ) (lunch->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('when', 'WRB'), ('i', 'JJ'), ('come', 'VBP'), ('home', 'NN'), ('and', 'CC'), ('cook', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (and->CC) (when->WRB) (i->JJ) (come->VBP) (home->NN) (and->CC) (cook->NN) (tomorrow->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('i', 'NN'), ('got', 'VBD'), ('some', 'DT'), ('broccoli', 'NN'), ('in', 'IN'), ('there', 'EX')]
['broccoli']
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('some', 'DT'), ('broccoli', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (i->NN) (got->VBD) (some->DT) (broccoli->NN) (in->IN) (there->EX) ')
candidates to check:
14
descended from food: [['N'], 'pork', 35, 39]
descended from food: [['N'], 'pork', 35, 39]
descended from food: [['N'], 'food', 115, 119]
broccoli
broccoli broccoli 30
[('and', 'CC'), ('uh', 'JJ'), ('xxx', 'NN'), ('and', 'CC'), ('put', 'VB'), ('pork', 'NN'), ('chops', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('that', 'DT'), ('baby', 'NN'), ('pork', 'NN'), ('chops', 'NNS'), ('and', 'CC'), ('fix', 'VB'), ('the', 'DT'), ('broccoli', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('food', 'NN'), ('tomorrow', 'NN')]
['broccoli']
pork
pork pork 541
[('and', 'CC'), ('uh', 'JJ'), ('xxx', 'NN'), ('and', 'CC'), ('put', 'VB'), ('pork', 'NN'), ('chops', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('that', 'DT'), ('baby', 'NN'), ('pork', 'NN'), ('chops', 'NNS'), ('and', 'CC'), ('fix', 'VB'), ('the', 'DT'), ('broccoli', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('food', 'NN'), ('tomorrow', 'NN')]
['pork']
('tags initial-> ', [('and', 'CC'), ('uh', 'JJ'), ('xxx', 'NN'), ('and', 'CC'), ('put', 'VB'), ('pork', 'NN'), ('chops', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('that', 'DT'), ('baby', 'NN'), ('pork', 'NN'), ('chops', 'NNS'), ('and', 'CC'), ('fix', 'VB'), ('the', 'DT'), ('broccoli', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('food', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (and->CC) (uh->JJ) (xxx->NN) (and->CC) (put->VB) (pork->NN) (chops->NNS) (to->TO) (make->VB) (that->DT) (baby->NN) (pork->NN) (chops->NNS) (and->CC) (fix->VB) (the->DT) (broccoli->NN) (and->CC) (i->NN) (have->VBP) (food->NN) (tomorrow->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('try', 'VB'), ('to', 'TO'), ('see', 'VB'), ('if', 'IN'), ('i', 'NNS'), ('can', 'MD'), ('do', 'VB'), ('it', 'PRP'), ('that', 'DT'), ('way', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (m->NN) (gon->NN) (na->TO) (try->VB) (to->TO) (see->VB) (if->IN) (i->NNS) (can->MD) (do->VB) (it->PRP) (that->DT) (way->NN) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('tomorrow', 'NN'), ('when', 'WRB'), ('i', 'NN'), ('come', 'VBP'), ('home', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('come', 'VB'), ('over', 'IN'), ('there', 'RB'), ('see', 'VB'), ('if', 'IN'), ('i', 'NNS'), ('can', 'MD'), ('borrow', 'VB'), ('xxx', 'VB'), ('a', 'DT'), ('mat', 'NN')])
('tags -> ', '     (and->CC) (tomorrow->NN) (when->WRB) (i->NN) (come->VBP) (home->NN) (i->NN) (m->VBP) (gon->NN) (na->TO) (come->VB) (over->IN) (there->RB) (see->VB) (if->IN) (i->NNS) (can->MD) (borrow->VB) (xxx->VB) (a->DT) (mat->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('um', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('start', 'VB'), ('some', 'DT'), ('exercise', 'NN')])
('tags -> ', '     (and->CC) (um->JJ) (i->NN) (m->VBP) (gon->NN) (na->TO) (start->VB) (some->DT) (exercise->NN) ')
candidates to check:
7
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('try', 'NN'), ('to', 'TO'), ('get', 'VB'), ('back', 'RB'), ('to', 'TO'), ('in', 'IN'), ('the', 'DT'), ('habit', 'NN'), ('like', 'IN'), ('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('few', 'JJ'), ('years', 'NNS'), ('ago', 'RB'), ('while', 'IN'), ('you', 'PRP'), ('was', 'VBD'), ('used', 'VBN'), ('to', 'TO'), ('do', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('my', 'PRP$'), ('house', 'NN'), ('four', 'CD'), ('and', 'CC'), ('five', 'CD'), ('days', 'NNS'), ('a', 'DT'), ('week', 'NN'), ('steadily', 'RB')])
('tags -> ', '     (i->NN) (m->VBP) (a->DT) (try->NN) (to->TO) (get->VB) (back->RB) (to->TO) (in->IN) (the->DT) (habit->NN) (like->IN) (i->NN) (had->VBD) (a->DT) (few->JJ) (years->NNS) (ago->RB) (while->IN) (you->PRP) (was->VBD) (used->VBN) (to->TO) (do->VB) (it->PRP) (in->IN) (my->PRP$) (house->NN) (four->CD) (and->CC) (five->CD) (days->NNS) (a->DT) (week->NN) (steadily->RB) ')
candidates to check:
2
('tags initial-> ', [('year', 'NN'), ('in', 'IN'), ('and', 'CC'), ('year', 'NN'), ('out', 'RP')])
('tags -> ', '     (year->NN) (in->IN) (and->CC) (year->NN) (out->RP) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('xxx', 'VBG'), ('it', 'PRP'), ('was', 'VBD'), ('just', 'RB'), ('a', 'DT'), ('way', 'NN'), ('of', 'IN'), ('life', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (xxx->VBG) (it->PRP) (was->VBD) (just->RB) (a->DT) (way->NN) (of->IN) (life->NN) ')
candidates to check:
6
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('mean', 'VBP'), ('but', 'CC'), ('then', 'RB'), ('i', 'VB'), ('got', 'VBD'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('habit', 'NN'), ('when', 'WRB'), ('i', 'NN'), ('got', 'VBD'), ('work', 'NN'), ('and', 'CC'), ('got', 'VBD'), ('lazy', 'JJ'), ('and', 'CC'), ('used', 'VBN'), ('to', 'TO'), ('do', 'VB'), ('it', 'PRP'), ('at', 'IN'), ('least', 'JJS'), ('four', 'CD'), ('or', 'CC'), ('five', 'CD'), ('days', 'NNS'), ('a', 'DT'), ('week', 'NN'), ('every', 'DT'), ('day', 'NN'), ('xxx', 'VB')])
('tags -> ', '     (but->CC) (i->JJ) (mean->VBP) (but->CC) (then->RB) (i->VB) (got->VBD) (out->IN) (of->IN) (the->DT) (habit->NN) (when->WRB) (i->NN) (got->VBD) (work->NN) (and->CC) (got->VBD) (lazy->JJ) (and->CC) (used->VBN) (to->TO) (do->VB) (it->PRP) (at->IN) (least->JJS) (four->CD) (or->CC) (five->CD) (days->NNS) (a->DT) (week->NN) (every->DT) (day->NN) (xxx->VB) ')
('tags initial-> ', [('and', 'CC'), ('see', 'VB'), ('that', 'DT'), ('was', 'VBD'), ('good', 'JJ'), ('cause', 'NN'), ('it', 'PRP'), ('kept', 'VBD'), ('it', 'PRP'), ('kept', 'VBD'), ('it', 'PRP'), ('down', 'RP'), ('good', 'JJ')])
('tags -> ', '     (and->CC) (see->VB) (that->DT) (was->VBD) (good->JJ) (cause->NN) (it->PRP) (kept->VBD) (it->PRP) (kept->VBD) (it->PRP) (down->RP) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('never', 'RB'), ('on', 'IN'), ('never', 'RB'), ('on', 'IN'), ('the', 'DT'), ('weekends', 'NNS')])
('tags -> ', '     (never->RB) (on->IN) (never->RB) (on->IN) (the->DT) (weekends->NNS) ')
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('used', 'VBN'), ('to', 'TO'), ('have', 'VB'), ('elka', 'VBN'), ('come', 'VBN'), ('over', 'IN'), ('here', 'RB'), ('and', 'CC'), ('uh', 'RB'), ('do', 'VB'), ('it', 'PRP'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (then->RB) (i->VB) (used->VBN) (to->TO) (have->VB) (elka->VBN) (come->VBN) (over->IN) (here->RB) (and->CC) (uh->RB) (do->VB) (it->PRP) (with->IN) (me->PRP) ')
('tags initial-> ', [('but', 'CC'), ('uh', 'IN'), ('she', 'PRP'), ('never', 'RB'), ('did', 'VBD'), ('come', 'VB')])
('tags -> ', '     (but->CC) (uh->IN) (she->PRP) (never->RB) (did->VBD) (come->VB) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('just', 'RB'), ('in', 'IN'), ('that', 'DT'), ('habit', 'NN'), ('of', 'IN'), ('every', 'DT'), ('day', 'NN')])
('tags -> ', '     (but->CC) (i->NN) (was->VBD) (just->RB) (in->IN) (that->DT) (habit->NN) (of->IN) (every->DT) (day->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('ever', 'RB'), ('since', 'IN'), ('my', 'PRP$'), ('mat', 'NN'), ('that', 'IN'), ('i', 'NN'), ('used', 'VBN'), ('to', 'TO'), ('do', 'VB'), ('it', 'PRP'), ('on', 'IN')])
('tags -> ', '     (and->CC) (ever->RB) (since->IN) (my->PRP$) (mat->NN) (that->IN) (i->NN) (used->VBN) (to->TO) (do->VB) (it->PRP) (on->IN) ')
candidates to check:
9
egg
egg egg 357
[('my', 'PRP$'), ('hospital', 'NN'), ('egg', 'NN'), ('crate', 'JJ'), ('thing', 'NN'), ('got', 'VBD'), ('tore', 'RB'), ('up', 'RP')]
['egg']
('tags initial-> ', [('my', 'PRP$'), ('hospital', 'NN'), ('egg', 'NN'), ('crate', 'JJ'), ('thing', 'NN'), ('got', 'VBD'), ('tore', 'RB'), ('up', 'RP')])
('tags -> ', '     (my->PRP$) (hospital->NN) (egg->NN) (crate->JJ) (thing->NN) (got->VBD) (tore->RB) (up->RP) ')
candidates to check:
5
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('tried', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('floor', 'NN'), ('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('time', 'NN'), ('and', 'CC'), ('my', 'PRP$'), ('backbone', 'NN'), ('d', 'NN'), ('be', 'VB'), ('diggin', 'JJ'), ('g', 'NN'), ('into', 'IN'), ('the', 'DT'), ('floor', 'NN')])
('tags -> ', '     (and->CC) (i->VB) (tried->VBN) (on->IN) (the->DT) (floor->NN) (a->DT) (couple->NN) (of->IN) (time->NN) (and->CC) (my->PRP$) (backbone->NN) (d->NN) (be->VB) (diggin->JJ) (g->NN) (into->IN) (the->DT) (floor->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('horrible', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (horrible->JJ) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('i', 'VB'), ('wish', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('tried', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('bed', 'NN'), ('but', 'CC'), ('the', 'DT'), ('bed', 'NN'), ('is', 'VBZ'), ('too', 'RB'), ('soft', 'JJ')])
('tags -> ', '     (and->CC) (i->VB) (wish->JJ) (and->CC) (i->JJ) (tried->VBN) (on->IN) (the->DT) (bed->NN) (but->CC) (the->DT) (bed->NN) (is->VBZ) (too->RB) (soft->JJ) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('just', 'RB'), ('can', 'MD'), ('t', 'VB'), ('do', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('bed', 'NN'), ('like', 'IN'), ('you', 'PRP'), ('could', 'MD'), ('on', 'IN'), ('something', 'NN'), ('hard', 'JJ'), ('and', 'CC'), ('firm', 'NN')])
('tags -> ', '     (you->PRP) (just->RB) (can->MD) (t->VB) (do->VB) (it->PRP) (on->IN) (the->DT) (bed->NN) (like->IN) (you->PRP) (could->MD) (on->IN) (something->NN) (hard->JJ) (and->CC) (firm->NN) ')
candidates to check:
4
('tags initial-> ', [('so', 'RB'), ('tomorrow', 'NN'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('try', 'VB'), ('to', 'TO'), ('get', 'VB'), ('into', 'IN'), ('form', 'NN'), ('so', 'IN'), ('i', 'JJ'), ('can', 'MD'), ('see', 'VB'), ('by', 'IN'), ('my', 'PRP$'), ('birthday', 'JJ'), ('october', 'IN'), ('if', 'IN'), ('i', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('lost', 'VBN'), ('these', 'DT'), ('these', 'DT'), ('pounds', 'NNS'), ('a', 'DT'), ('round', 'NN'), ('here', 'RB')])
('tags -> ', '     (so->RB) (tomorrow->NN) (i->JJ) (m->NN) (gon->NN) (na->TO) (try->VB) (to->TO) (get->VB) (into->IN) (form->NN) (so->IN) (i->JJ) (can->MD) (see->VB) (by->IN) (my->PRP$) (birthday->JJ) (october->IN) (if->IN) (i->NNS) (can->MD) (be->VB) (lost->VBN) (these->DT) (these->DT) (pounds->NNS) (a->DT) (round->NN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('make', 'VBP'), ('my', 'PRP$'), ('face', 'NN'), ('kinda', 'NN'), ('xxx', 'VBD'), ('the', 'DT'), ('first', 'JJ')])
('tags -> ', '     (you->PRP) (make->VBP) (my->PRP$) (face->NN) (kinda->NN) (xxx->VBD) (the->DT) (first->JJ) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('start', 'VBP'), ('losin', 'NN'), ('g', 'NN'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (start->VBP) (losin->NN) (g->NN) (my->PRP$) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('lose', 'VBP'), ('xxx', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('a', 'DT'), ('little', 'JJ'), ('came', 'VBD'), ('off', 'RP'), ('around', 'IN'), ('here', 'RB')])
('tags -> ', '     (xxx->NN) (i->NN) (lose->VBP) (xxx->IN) (it->PRP) (s->VBZ) (just->RB) (a->DT) (little->JJ) (came->VBD) (off->RP) (around->IN) (here->RB) ')
('tags initial-> ', [('just', 'RB'), ('a', 'DT'), ('little', 'JJ'), ('there', 'EX')])
('tags -> ', '     (just->RB) (a->DT) (little->JJ) (there->EX) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('they', 'PRP'), ('said', 'VBD'), ('just', 'RB'), ('earlier', 'JJR'), ('where', 'WRB'), ('it', 'PRP'), ('need', 'VB'), ('to', 'TO'), ('be', 'VB'), ('firm', 'JJ'), ('up', 'RP')])
('tags -> ', '     (well->RB) (they->PRP) (said->VBD) (just->RB) (earlier->JJR) (where->WRB) (it->PRP) (need->VB) (to->TO) (be->VB) (firm->JJ) (up->RP) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 28, 35]
chicken
chicken chicken 234
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('chicken', 'NNS')]
['chicken']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('chicken', 'NNS')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (more->JJR) (chicken->NNS) ')
('tags initial-> ', [('when', 'WRB'), ('it', 'PRP'), ('firm', 'VBD'), ('it', 'PRP'), ('don', 'VBZ'), ('t', 'JJ'), ('necessarily', 'RB')])
('tags -> ', '     (when->WRB) (it->PRP) (firm->VBD) (it->PRP) (don->VBZ) (t->JJ) (necessarily->RB) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'JJ'), ('really', 'RB'), ('haven', 'JJ'), ('t', 'NNS'), ('even', 'RB'), ('been', 'VBN'), ('have', 'VBP'), ('a', 'DT'), ('appetite', 'NN'), ('that', 'WDT'), ('much', 'RB'), ('for', 'IN'), ('last', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (i->JJ) (really->RB) (haven->JJ) (t->NNS) (even->RB) (been->VBN) (have->VBP) (a->DT) (appetite->NN) (that->WDT) (much->RB) (for->IN) (last->JJ) (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'chicken', 36, 43]
chicken
chicken chicken 234
[('grandma', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('chicken', 'NNS')]
['chicken']
('tags initial-> ', [('grandma', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('chicken', 'NNS')])
('tags -> ', '     (grandma->NN) (can->MD) (i->VB) (have->VB) (some->DT) (more->JJR) (chicken->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 25, 32]
chicken
chicken chicken 234
[('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('chicken', 'NNS')]
['chicken']
('tags initial-> ', [('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('chicken', 'NNS')])
('tags -> ', '     (can->MD) (have->VB) (some->DT) (more->JJR) (chicken->NNS) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 17, 25]
potatoes
potatoes potatoes 62
[('what', 'WP'), ('about', 'IN'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('potatoes', 'NNS')])
('tags -> ', '     (what->WP) (about->IN) (potatoes->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('eat', 'NN'), ('xxx', 'JJ'), ('xxx', 'NNP'), ('too', 'RB'), ('baby', 'RB')])
('tags -> ', '     (eat->NN) (xxx->JJ) (xxx->NNP) (too->RB) (baby->RB) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 18, 26]
potatoes
potatoes potatoes 62
[('she', 'PRP'), ('ate', 'VBD'), ('her', 'PRP'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('she', 'PRP'), ('ate', 'VBD'), ('her', 'PRP'), ('potatoes', 'NNS')])
('tags -> ', '     (she->PRP) (ate->VBD) (her->PRP) (potatoes->NNS) ')
candidates to check:
2
descended from food: [['N'], 'potatoes', 15, 23]
potatoes
potatoes potatoes 62
[('you', 'PRP'), ('want', 'VBP'), ('potatoes', 'NNS'), ('april', 'VB')]
['potatoes']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('potatoes', 'NNS'), ('april', 'VB')])
('tags -> ', '     (you->PRP) (want->VBP) (potatoes->NNS) (april->VB) ')
('tags initial-> ', [('you', 'PRP'), ('whipped', 'VBD'), ('yours', 'VB'), ('off', 'RP'), ('too', 'RB'), ('didn', 'JJ'), ('t', 'NN'), ('ya', 'NN'), ('you', 'PRP')])
('tags -> ', '     (you->PRP) (whipped->VBD) (yours->VB) (off->RP) (too->RB) (didn->JJ) (t->NN) (ya->NN) (you->PRP) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('mess', 'NN'), ('th', 'NN'), ('em', 'VBZ'), ('up', 'RP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (mess->NN) (th->NN) (em->VBZ) (up->RP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('the', 'DT'), ('last', 'JJ'), ('time', 'NN'), ('gwen', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (the->DT) (last->JJ) (time->NN) (gwen->NN) ')
('tags initial-> ', [('i', 'NN'), ('had', 'VBD'), ('xxx', 'VBN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('i', 'NN'), ('was', 'VBD'), ('thinkin', 'JJ'), ('g', 'NN')])
('tags -> ', '     (i->NN) (had->VBD) (xxx->VBN) (i->JJ) (don->VBP) (t->NN) (know->VBP) (what->WP) (i->NN) (was->VBD) (thinkin->JJ) (g->NN) ')
candidates to check:
2
water
water water 18
[('i', 'NN'), ('put', 'VBD'), ('all', 'DT'), ('that', 'IN'), ('water', 'NN'), ('in', 'IN'), ('that', 'DT'), ('thing', 'NN')]
['water']
('tags initial-> ', [('i', 'NN'), ('put', 'VBD'), ('all', 'DT'), ('that', 'IN'), ('water', 'NN'), ('in', 'IN'), ('that', 'DT'), ('thing', 'NN')])
('tags -> ', '     (i->NN) (put->VBD) (all->DT) (that->IN) (water->NN) (in->IN) (that->DT) (thing->NN) ')
candidates to check:
3
descended from food: [['N'], 'potatoes', 35, 43]
potatoes
potatoes potatoes 62
[('that', 'DT'), ('whole', 'JJ'), ('big', 'JJ'), ('package', 'NN'), ('of', 'IN'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('that', 'DT'), ('whole', 'JJ'), ('big', 'JJ'), ('package', 'NN'), ('of', 'IN'), ('potatoes', 'NNS')])
('tags -> ', '     (that->DT) (whole->JJ) (big->JJ) (package->NN) (of->IN) (potatoes->NNS) ')
candidates to check:
3
descended from food: [['N'], 'potatoes', 19, 27]
potatoes
potatoes potatoes 62
[('and', 'CC'), ('then', 'RB'), ('the', 'DT'), ('potatoes', 'NNS'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('water', 'NN'), ('in', 'IN'), ('there', 'EX')]
['potatoes']
water
water water 18
[('and', 'CC'), ('then', 'RB'), ('the', 'DT'), ('potatoes', 'NNS'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('water', 'NN'), ('in', 'IN'), ('there', 'EX')]
['water']
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('the', 'DT'), ('potatoes', 'NNS'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('water', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (and->CC) (then->RB) (the->DT) (potatoes->NNS) (didn->VBP) (t->NNS) (have->VBP) (enough->JJ) (water->NN) (in->IN) (there->EX) ')
candidates to check:
2
water
water water 18
[('i', 'NN'), ('tried', 'VBD'), ('to', 'TO'), ('add', 'VB'), ('more', 'JJR'), ('water', 'NN'), ('to', 'TO'), ('it', 'PRP')]
['water']
('tags initial-> ', [('i', 'NN'), ('tried', 'VBD'), ('to', 'TO'), ('add', 'VB'), ('more', 'JJR'), ('water', 'NN'), ('to', 'TO'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (tried->VBD) (to->TO) (add->VB) (more->JJR) (water->NN) (to->TO) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('things', 'NNS'), ('became', 'VBD')])
('tags -> ', '     (and->CC) (the->DT) (things->NNS) (became->VBD) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('great', 'JJ'), ('big', 'JJ'), ('mess', 'NN')])
('tags -> ', '     (it->PRP) (was->VBD) (a->DT) (great->JJ) (big->JJ) (mess->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('today', 'NN'), ('i', 'NN'), ('said', 'VBD'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('make', 'VB'), ('sure', 'JJ'), ('this', 'DT'), ('is', 'VBZ'), ('gon', 'VBG'), ('na', 'TO'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (so->RB) (today->NN) (i->NN) (said->VBD) (i->JJ) (m->NN) (gon->NN) (na->TO) (make->VB) (sure->JJ) (this->DT) (is->VBZ) (gon->VBG) (na->TO) (a->DT) (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'potatoes', 66, 74]
potatoes
potatoes potatoes 62
[('so', 'IN'), ('it', 'PRP'), ('turned', 'VBD'), ('out', 'RP'), ('to', 'TO'), ('be', 'VB'), ('just', 'RB'), ('enough', 'RB'), ('p', 'JJ'), ('just', 'RB'), ('enough', 'RB'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('so', 'IN'), ('it', 'PRP'), ('turned', 'VBD'), ('out', 'RP'), ('to', 'TO'), ('be', 'VB'), ('just', 'RB'), ('enough', 'RB'), ('p', 'JJ'), ('just', 'RB'), ('enough', 'RB'), ('potatoes', 'NNS')])
('tags -> ', '     (so->IN) (it->PRP) (turned->VBD) (out->RP) (to->TO) (be->VB) (just->RB) (enough->RB) (p->JJ) (just->RB) (enough->RB) (potatoes->NNS) ')
('tags initial-> ', [('what', 'WDT'), ('are', 'VBP'), ('these', 'DT')])
('tags -> ', '     (what->WDT) (are->VBP) (these->DT) ')
candidates to check:
1
('tags initial-> ', [('po', 'NN'), ('tatoes', 'NNS')])
('tags -> ', '     (po->NN) (tatoes->NNS) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('is', 'VBZ'), ('this', 'DT'), ('here', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (is->VBZ) (this->DT) (here->RB) ')
candidates to check:
1
descended from food: [['N'], 'chicken', 6, 13]
chicken
chicken chicken 234
[('chicken', 'NN')]
['chicken']
('tags initial-> ', [('chicken', 'NN')])
('tags -> ', '     (chicken->NN) ')
candidates to check:
1
corn
corn corn 419
[('corn', 'NN')]
['corn']
('tags initial-> ', [('corn', 'NN')])
('tags -> ', '     (corn->NN) ')
candidates to check:
1
corn
corn corn 419
[('corn', 'NN')]
['corn']
('tags initial-> ', [('corn', 'NN')])
('tags -> ', '     (corn->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('cooking', 'VBG'), ('just', 'RB'), ('enough', 'RB'), ('for', 'IN'), ('the', 'DT'), ('folks', 'NNS'), ('i', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('feed', 'VB')])
('tags -> ', '     (i->NN) (was->VBD) (cooking->VBG) (just->RB) (enough->RB) (for->IN) (the->DT) (folks->NNS) (i->NN) (was->VBD) (gon->VBG) (na->TO) (feed->VB) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('and', 'CC'), ('it', 'PRP'), ('come', 'VBD'), ('out', 'RP'), ('better', 'RBR'), ('when', 'WRB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('cook', 'NN'), ('it', 'PRP'), ('too', 'RB'), ('long', 'RB')])
('tags -> ', '     (i->NN) (know->VBP) (and->CC) (it->PRP) (come->VBD) (out->RP) (better->RBR) (when->WRB) (you->PRP) (don->VBP) (t->JJ) (cook->NN) (it->PRP) (too->RB) (long->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('she', 'PRP'), ('s', 'VBD'), ('talking', 'VBG'), ('alright', 'JJ'), ('april', 'NNS'), ('lips', 'NNS'), ('be', 'VB'), ('going', 'VBG'), ('together', 'RB'), ('to', 'TO'), ('much', 'VB'), ('when', 'WRB'), ('she', 'PRP'), ('eat', 'VBD'), ('to', 'TO'), ('be', 'VB'), ('conversatin', 'JJ'), ('g', 'NN'), ('wp', 'NN')])
('tags -> ', '     (she->PRP) (she->PRP) (s->VBD) (talking->VBG) (alright->JJ) (april->NNS) (lips->NNS) (be->VB) (going->VBG) (together->RB) (to->TO) (much->VB) (when->WRB) (she->PRP) (eat->VBD) (to->TO) (be->VB) (conversatin->JJ) (g->NN) (wp->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('the', 'DT'), ('thing', 'NN'), ('in', 'IN'), ('front', 'NN'), ('of', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (that->DT) (s->VBD) (the->DT) (thing->NN) (in->IN) (front->NN) (of->IN) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('that', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (oh->UH) (that->DT) (xxx->NN) ')
candidates to check:
6
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('talk', 'VB'), ('on', 'IN'), ('the', 'DT'), ('tape', 'NN'), ('recorder', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('a', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('a', 'DT'), ('tape', 'NN'), ('recorder', 'NN'), ('you', 'PRP'), ('talk', 'VBP'), ('into', 'IN'), ('it', 'PRP'), ('and', 'CC'), ('we', 'PRP'), ('can', 'MD'), ('play', 'VB'), ('it', 'PRP'), ('back', 'RB'), ('and', 'CC'), ('hear', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (want->VBP) (to->TO) (talk->VB) (on->IN) (the->DT) (tape->NN) (recorder->NN) (that->WDT) (s->VBZ) (a->DT) (that->WDT) (s->VBZ) (a->DT) (tape->NN) (recorder->NN) (you->PRP) (talk->VBP) (into->IN) (it->PRP) (and->CC) (we->PRP) (can->MD) (play->VB) (it->PRP) (back->RB) (and->CC) (hear->VBP) (it->PRP) ')
('tags initial-> ', [('so', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('hear', 'VB'), ('it', 'PRP')])
('tags -> ', '     (so->IN) (you->PRP) (can->MD) (hear->VB) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('need', 'VBP'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (we->PRP) (need->VBP) (a->DT) (lot->NN) (of->IN) (her->PRP$) ')
candidates to check:
3
('tags initial-> ', [('not', 'RB'), ('you', 'PRP'), ('tonight', 'VBP'), ('you', 'PRP'), ('tomorrow', 'NN'), ('night', 'NN')])
('tags -> ', '     (not->RB) (you->PRP) (tonight->VBP) (you->PRP) (tomorrow->NN) (night->NN) ')
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP'), ('take', 'VB'), ('auntie', 'JJ'), ('s', 'NNS'), ('it', 'PRP'), ('don', 'VBZ'), ('t', 'JJ'), ('work', 'NN')])
('tags -> ', '     (we->PRP) (ll->VBP) (take->VB) (auntie->JJ) (s->NNS) (it->PRP) (don->VBZ) (t->JJ) (work->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('remember', 'VBP'), ('when', 'WRB'), ('we', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('brockton', 'NN'), ('fair', 'NN')])
('tags -> ', '     (you->PRP) (remember->VBP) (when->WRB) (we->PRP) (went->VBD) (to->TO) (the->DT) (brockton->NN) (fair->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('went', 'VBD'), ('to', 'TO'), ('brockton', 'VB'), ('fair', 'NN')])
('tags -> ', '     (i->JJ) (went->VBD) (to->TO) (brockton->VB) (fair->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('april', 'NN'), ('to', 'TO'), ('tell', 'VB'), ('me', 'PRP'), ('about', 'IN'), ('when', 'WRB'), ('we', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('brockton', 'NN'), ('fair', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (april->NN) (to->TO) (tell->VB) (me->PRP) (about->IN) (when->WRB) (we->PRP) (went->VBD) (to->TO) (the->DT) (brockton->NN) (fair->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('we', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (we->PRP) (do->VB) ')
candidates to check:
1
('tags initial-> ', [('touch', 'PDT'), ('the', 'DT'), ('animals', 'NNS')])
('tags -> ', '     (touch->PDT) (the->DT) (animals->NNS) ')
('tags initial-> ', [('speak', 'VB'), ('up', 'RP')])
('tags -> ', '     (speak->VB) (up->RP) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (hear->VB) (you->PRP) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('we', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (we->PRP) (do->VB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('tell', 'VB'), ('me', 'PRP'), ('what', 'WP'), ('we', 'PRP'), ('did', 'VBD'), ('at', 'IN'), ('the', 'DT'), ('fair', 'NN')])
('tags -> ', '     (tell->VB) (me->PRP) (what->WP) (we->PRP) (did->VBD) (at->IN) (the->DT) (fair->NN) ')
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('enjoy', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (didn->NN) (t->NN) (you->PRP) (enjoy->VBP) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('stuff', 'NN'), ('is', 'VBZ'), ('really', 'RB'), ('good', 'JJ')])
('tags -> ', '     (this->DT) (stuff->NN) (is->VBZ) (really->RB) (good->JJ) ')
candidates to check:
3
descended from food: [['N'], 'milk', 28, 32]
milk
milk milk 46
[('even', 'RB'), ('with', 'IN'), ('the', 'DT'), ('skim', 'NN'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('even', 'RB'), ('with', 'IN'), ('the', 'DT'), ('skim', 'NN'), ('milk', 'NN')])
('tags -> ', '     (even->RB) (with->IN) (the->DT) (skim->NN) (milk->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 31, 35]
milk shake
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df926248>)
[('kinda', 'NN'), ('kind', 'NN'), ('of', 'IN'), ('like', 'IN'), ('a', 'DT'), ('milk', 'NN'), ('shake', 'NN'), ('xxx', 'NN')]
['milk', 'shake']
milk
milk milk 46
[('kinda', 'NN'), ('kind', 'NN'), ('of', 'IN'), ('like', 'IN'), ('a', 'DT'), ('milk', 'NN'), ('shake', 'NN'), ('xxx', 'NN')]
['milk']
shake
shake shake 148
[('kinda', 'NN'), ('kind', 'NN'), ('of', 'IN'), ('like', 'IN'), ('a', 'DT'), ('milk', 'NN'), ('shake', 'NN'), ('xxx', 'NN')]
['shake']
('tags initial-> ', [('kinda', 'NN'), ('kind', 'NN'), ('of', 'IN'), ('like', 'IN'), ('a', 'DT'), ('milk', 'NN'), ('shake', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (kinda->NN) (kind->NN) (of->IN) (like->IN) (a->DT) (milk->NN) (shake->NN) (xxx->NN) ')
('tags initial-> ', [('mhm', 'NN'), ('it', 'PRP'), ('sure', 'JJ'), ('is', 'VBZ')])
('tags -> ', '     (mhm->NN) (it->PRP) (sure->JJ) (is->VBZ) ')
candidates to check:
4
('tags initial-> ', [('only', 'RB'), ('thing', 'NN'), ('they', 'PRP'), ('do', 'VBP'), ('um', 'JJ'), ('is', 'VBZ'), ('sometime', 'RB'), ('after', 'IN'), ('so', 'RB'), ('many', 'JJ'), ('days', 'NNS'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (only->RB) (thing->NN) (they->PRP) (do->VBP) (um->JJ) (is->VBZ) (sometime->RB) (after->IN) (so->RB) (many->JJ) (days->NNS) (of->IN) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('enough', 'RB')])
('tags -> ', '     (you->PRP) (had->VBD) (enough->RB) ')
candidates to check:
2
('tags initial-> ', [('yeah', 'NN'), ('mhm', 'NN'), ('but', 'CC'), ('um', 'JJ'), ('maybe', 'RB'), ('that', 'IN'), ('s', 'JJ'), ('part', 'NN'), ('of', 'IN'), ('the', 'DT'), ('program', 'NN')])
('tags -> ', '     (yeah->NN) (mhm->NN) (but->CC) (um->JJ) (maybe->RB) (that->IN) (s->JJ) (part->NN) (of->IN) (the->DT) (program->NN) ')
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('shoot', 'VB'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (shoot->VB) (it->PRP) (out->RP) ')
candidates to check:
1
descended from food: [['N'], 'honey', 6, 11]
honey
honey honey 304
[('honey', 'NN'), ('i', 'NN'), ('tell', 'VBP'), ('you', 'PRP'), ('what', 'WP')]
['honey']
('tags initial-> ', [('honey', 'NN'), ('i', 'NN'), ('tell', 'VBP'), ('you', 'PRP'), ('what', 'WP')])
('tags -> ', '     (honey->NN) (i->NN) (tell->VBP) (you->PRP) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('haven', 'VBP'), ('t', 'NN'), ('xxx', 'NNP'), ('eat', 'NN'), ('any', 'DT')])
('tags -> ', '     (i->NN) (haven->VBP) (t->NN) (xxx->NNP) (eat->NN) (any->DT) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('call', 'VB'), ('it', 'PRP')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (call->VB) (it->PRP) ')
candidates to check:
4
oats
oats oats 389
[('oats', 'NNS'), ('and', 'CC'), ('bran', 'NN'), ('cereal', 'NN')]
['oats']
cereal
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df91ae60>)
[('oats', 'NNS'), ('and', 'CC'), ('bran', 'NN'), ('cereal', 'NN')]
['cereal']
('tags initial-> ', [('oats', 'NNS'), ('and', 'CC'), ('bran', 'NN'), ('cereal', 'NN')])
('tags -> ', '     (oats->NNS) (and->CC) (bran->NN) (cereal->NN) ')
candidates to check:
3
descended from food: [['N'], 'honey', 30, 35]
oats
oats oats 389
[('oats', 'NNS'), ('and', 'CC'), ('oats', 'NNS'), ('and', 'CC'), ('honey', 'NN')]
['oats']
honey
honey honey 304
[('oats', 'NNS'), ('and', 'CC'), ('oats', 'NNS'), ('and', 'CC'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('oats', 'NNS'), ('and', 'CC'), ('oats', 'NNS'), ('and', 'CC'), ('honey', 'NN')])
('tags -> ', '     (oats->NNS) (and->CC) (oats->NNS) (and->CC) (honey->NN) ')
candidates to check:
3
descended from food: [['N'], 'honey', 27, 32]
honey
honey honey 304
[('somethin', 'JJ'), ('g', 'NN'), ('nut', 'NN'), ('and', 'CC'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('somethin', 'JJ'), ('g', 'NN'), ('nut', 'NN'), ('and', 'CC'), ('honey', 'NN')])
('tags -> ', '     (somethin->JJ) (g->NN) (nut->NN) (and->CC) (honey->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ate', 'VBP'), ('some', 'DT'), ('this', 'DT'), ('morning', 'NN')])
('tags -> ', '     (i->NN) (ate->VBP) (some->DT) (this->DT) (morning->NN) ')
('tags initial-> ', [('oh', 'UH'), ('man', 'NN'), ('what', 'WP'), ('did', 'VBD'), ('i', 'VB'), ('do', 'VBP'), ('that', 'DT'), ('for', 'IN')])
('tags -> ', '     (oh->UH) (man->NN) (what->WP) (did->VBD) (i->VB) (do->VBP) (that->DT) (for->IN) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
candidates to check:
1
('tags initial-> ', [('auntie', 'NN'), ('may', 'MD'), ('xxx', 'VB')])
('tags -> ', '     (auntie->NN) (may->MD) (xxx->VB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 33, 40]
fried chicken
fried chicken fried chicken 234
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('fried', 'JJ'), ('chicken', 'NN'), ('whispering', 'NN')]
['fried', 'chicken']
chicken
chicken chicken 234
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('fried', 'JJ'), ('chicken', 'NN'), ('whispering', 'NN')]
['chicken']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('fried', 'JJ'), ('chicken', 'NN'), ('whispering', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VB) (some->DT) (more->RBR) (fried->JJ) (chicken->NN) (whispering->NN) ')
('tags initial-> ', [('why', 'WRB'), ('are', 'VBP'), ('you', 'PRP'), ('whispering', 'VBG')])
('tags -> ', '     (why->WRB) (are->VBP) (you->PRP) (whispering->VBG) ')
candidates to check:
4
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('any', 'DT'), ('other', 'JJ'), ('time', 'NN'), ('she', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('mouth', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (any->DT) (other->JJ) (time->NN) (she->PRP) (got->VBD) (a->DT) (big->JJ) (mouth->NN) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('auntie', 'JJ'), ('mabel', 'NN'), ('we', 'PRP'), ('went', 'VBD'), ('on', 'IN'), ('an', 'DT'), ('airplane', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('was', 'VBD'), ('on', 'IN'), ('a', 'DT'), ('um', 'NN'), ('on', 'IN'), ('a', 'DT'), ('ladybug', 'NN'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('sliding', 'VBG'), ('on', 'IN'), ('da', 'NN'), ('the', 'DT'), ('slide', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('cut', 'NN'), ('myself', 'NN'), ('on', 'IN'), ('my', 'PRP$'), ('face', 'NN')])
('tags -> ', '     (and->CC) (auntie->JJ) (mabel->NN) (we->PRP) (went->VBD) (on->IN) (an->DT) (airplane->NN) (and->CC) (we->PRP) (was->VBD) (on->IN) (a->DT) (um->NN) (on->IN) (a->DT) (ladybug->NN) (and->CC) (i->NN) (was->VBD) (sliding->VBG) (on->IN) (da->NN) (the->DT) (slide->NN) (and->CC) (i->JJ) (cut->NN) (myself->NN) (on->IN) (my->PRP$) (face->NN) ')
('tags initial-> ', [('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (you->PRP) (did->VBD) ')
('tags initial-> ', [('yes', 'RB'), ('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (yes->RB) (you->PRP) (did->VBD) ')
('tags initial-> ', [('yeah', 'NN'), ('uhhuh', 'JJ'), ('she', 'PRP'), ('s', 'VBD'), ('talking', 'VBG'), ('a', 'DT'), ('bout', 'NN'), ('when', 'WRB'), ('she', 'PRP'), ('sliding', 'VBG'), ('on', 'IN')])
('tags -> ', '     (yeah->NN) (uhhuh->JJ) (she->PRP) (s->VBD) (talking->VBG) (a->DT) (bout->NN) (when->WRB) (she->PRP) (sliding->VBG) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('mhm', 'NN'), ('sliding', 'VBG'), ('on', 'IN'), ('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('slide', 'NN'), ('huh', 'NN')])
('tags -> ', '     (mhm->NN) (sliding->VBG) (on->IN) (that->DT) (was->VBD) (a->DT) (big->JJ) (slide->NN) (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('big', 'JJ'), ('slide', 'NN'), ('found', 'VBD'), ('out', 'IN'), ('it', 'PRP'), ('was', 'VBD'), ('to', 'TO'), ('big', 'JJ'), ('for', 'IN'), ('you', 'PRP'), ('huh', 'VBP'), ('salina', 'VB')])
('tags -> ', '     (it->PRP) (was->VBD) (a->DT) (big->JJ) (slide->NN) (found->VBD) (out->IN) (it->PRP) (was->VBD) (to->TO) (big->JJ) (for->IN) (you->PRP) (huh->VBP) (salina->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('heavy', 'JJ'), ('headed', 'VBD'), ('too', 'RB')])
('tags -> ', '     (and->CC) (heavy->JJ) (headed->VBD) (too->RB) ')
('tags initial-> ', [('but', 'CC'), ('it', 'PRP'), ('was', 'VBD'), ('too', 'RB'), ('xxx', 'JJ')])
('tags -> ', '     (but->CC) (it->PRP) (was->VBD) (too->RB) (xxx->JJ) ')
('tags initial-> ', [('yep', 'NN'), ('but', 'CC'), ('he', 'PRP'), ('came', 'VBD'), ('down', 'RB'), ('slidin', 'RB'), ('g', 'NN'), ('to', 'TO'), ('the', 'DT'), ('left', 'NN'), ('too', 'RB')])
('tags -> ', '     (yep->NN) (but->CC) (he->PRP) (came->VBD) (down->RB) (slidin->RB) (g->NN) (to->TO) (the->DT) (left->NN) (too->RB) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('in', 'IN'), ('new', 'JJ'), ('york', 'NN'), ('gettin', 'NN'), ('g', 'NN'), ('beat', 'VBD'), ('up', 'RP')])
('tags -> ', '     (he->PRP) (s->VBZ) (in->IN) (new->JJ) (york->NN) (gettin->NN) (g->NN) (beat->VBD) (up->RP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('scared', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('back', 'RB'), ('down', 'RB'), ('there', 'RB')])
('tags -> ', '     (i->JJ) (m->NN) (scared->VBD) (to->TO) (go->VB) (back->RB) (down->RB) (there->RB) ')
('tags initial-> ', [('where', 'WRB'), ('y', 'NN'), ('all', 'DT'), ('d', 'JJ'), ('people', 'NNS'), ('s', 'VBP'), ('and', 'CC'), ('gwen', 'NN'), ('and', 'CC'), ('xxx', 'NN'), ('and', 'CC'), ('y', 'VB'), ('all', 'DT'), ('d', 'JJ'), ('eat', 'NN'), ('and', 'CC')])
('tags -> ', '     (where->WRB) (y->NN) (all->DT) (d->JJ) (people->NNS) (s->VBP) (and->CC) (gwen->NN) (and->CC) (xxx->NN) (and->CC) (y->VB) (all->DT) (d->JJ) (eat->NN) (and->CC) ')
candidates to check:
1
('tags initial-> ', [('everybody', 'NN'), ('was', 'VBD'), ('laughing', 'VBG'), ('at', 'IN'), ('me', 'PRP')])
('tags -> ', '     (everybody->NN) (was->VBD) (laughing->VBG) (at->IN) (me->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
4
('tags initial-> ', [('after', 'IN'), ('this', 'DT'), ('y', 'NN'), ('all', 'DT'), ('d', 'NN'), ('can', 'MD'), ('and', 'CC'), ('sit', 'VB'), ('down', 'RP'), ('a', 'DT'), ('while', 'NN'), ('maybe', 'RB'), ('later', 'RB'), ('on', 'IN'), ('after', 'IN'), ('i', 'JJ'), ('take', 'VBP'), ('my', 'PRP$'), ('bath', 'NN')])
('tags -> ', '     (after->IN) (this->DT) (y->NN) (all->DT) (d->NN) (can->MD) (and->CC) (sit->VB) (down->RP) (a->DT) (while->NN) (maybe->RB) (later->RB) (on->IN) (after->IN) (i->JJ) (take->VBP) (my->PRP$) (bath->NN) ')
candidates to check:
2
('tags initial-> ', [('auntie', 'JJ'), ('mabel', 'NN'), ('everybody', 'NN')])
('tags -> ', '     (auntie->JJ) (mabel->NN) (everybody->NN) ')
candidates to check:
1
('tags initial-> ', [('about', 'IN'), ('the', 'DT'), ('cat', 'NN')])
('tags -> ', '     (about->IN) (the->DT) (cat->NN) ')
candidates to check:
3
('tags initial-> ', [('the', 'DT'), ('cat', 'NN'), ('inside', 'IN'), ('the', 'DT'), ('red', 'JJ'), ('book', 'NN')])
('tags -> ', '     (the->DT) (cat->NN) (inside->IN) (the->DT) (red->JJ) (book->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('ll', 'VBP'), ('read', 'VBP'), ('the', 'DT'), ('story', 'NN'), ('about', 'IN'), ('the', 'DT'), ('cat', 'NN'), ('before', 'IN'), ('you', 'PRP'), ('two', 'CD'), ('go', 'VBP'), ('to', 'TO'), ('bed', 'VB'), ('okay', 'NN')])
('tags -> ', '     (i->JJ) (ll->VBP) (read->VBP) (the->DT) (story->NN) (about->IN) (the->DT) (cat->NN) (before->IN) (you->PRP) (two->CD) (go->VBP) (to->TO) (bed->VB) (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('auntie', 'NN'), ('mabel', 'NN')])
('tags -> ', '     (auntie->NN) (mabel->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('um', 'JJ'), ('um', 'NNS'), ('are', 'VBP'), ('we', 'PRP')])
('tags -> ', '     (um->JJ) (um->NNS) (are->VBP) (we->PRP) ')
('tags initial-> ', [('whatchu', 'VB'), ('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (whatchu->VB) (what->WP) (do->VBP) (you->PRP) (want->VB) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('april', 'NN')])
('tags -> ', '     (and->CC) (what->WP) (april->NN) ')
candidates to check:
1
('tags initial-> ', [('dog', 'NN')])
('tags -> ', '     (dog->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('dog', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (dog->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('member', 'NN'), ('that', 'WDT'), ('story', 'NN'), ('about', 'IN'), ('the', 'DT'), ('dog', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (member->NN) (that->WDT) (story->NN) (about->IN) (the->DT) (dog->NN) ')
candidates to check:
4
('tags initial-> ', [('what', 'WP'), ('happened', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('story', 'NN'), ('a', 'DT'), ('bout', 'IN'), ('the', 'DT'), ('cat', 'NN'), ('and', 'CC'), ('the', 'DT'), ('dog', 'NN'), ('tell', 'NN'), ('gwen', 'VBZ'), ('a', 'DT'), ('bout', 'NN'), ('that', 'WDT'), ('story', 'NN')])
('tags -> ', '     (what->WP) (happened->VBD) (in->IN) (the->DT) (story->NN) (a->DT) (bout->IN) (the->DT) (cat->NN) (and->CC) (the->DT) (dog->NN) (tell->NN) (gwen->VBZ) (a->DT) (bout->NN) (that->WDT) (story->NN) ')
('tags initial-> ', [('come', 'VB'), ('on', 'IN'), ('you', 'PRP'), ('love', 'VBP'), ('to', 'TO'), ('talk', 'VB'), ('talk', 'NN')])
('tags -> ', '     (come->VB) (on->IN) (you->PRP) (love->VBP) (to->TO) (talk->VB) (talk->NN) ')
('tags initial-> ', [('tell', 'VB'), ('me', 'PRP'), ('about', 'IN'), ('it', 'PRP')])
('tags -> ', '     (tell->VB) (me->PRP) (about->IN) (it->PRP) ')
candidates to check:
3
('tags initial-> ', [('tell', 'VB'), ('me', 'PRP'), ('about', 'IN'), ('what', 'WP'), ('happened', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('dog', 'NN'), ('and', 'CC'), ('the', 'DT'), ('cat', 'NN'), ('in', 'IN'), ('the', 'DT'), ('book', 'NN')])
('tags -> ', '     (tell->VB) (me->PRP) (about->IN) (what->WP) (happened->VBD) (to->TO) (the->DT) (dog->NN) (and->CC) (the->DT) (cat->NN) (in->IN) (the->DT) (book->NN) ')
('tags initial-> ', [('tell', 'VB'), ('me', 'PRP'), ('so', 'RB'), ('i', 'RB'), ('know', 'VBP')])
('tags -> ', '     (tell->VB) (me->PRP) (so->RB) (i->RB) (know->VBP) ')
candidates to check:
2
('tags initial-> ', [('i', 'NNS'), ('like', 'VBP'), ('to', 'TO'), ('hear', 'VB'), ('stories', 'NNS'), ('too', 'RB')])
('tags -> ', '     (i->NNS) (like->VBP) (to->TO) (hear->VB) (stories->NNS) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('how', 'WRB'), ('to', 'TO'), ('read', 'VB'), ('the', 'DT'), ('book', 'NN'), ('yet', 'RB')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (how->WRB) (to->TO) (read->VB) (the->DT) (book->NN) (yet->RB) ')
candidates to check:
6
('tags initial-> ', [('i', 'NN'), ('saw', 'VBD'), ('this', 'DT'), ('nice', 'JJ'), ('thing', 'NN'), ('that', 'WDT'), ('gregory', 'NN'), ('had', 'VBD'), ('would', 'MD'), ('just', 'RB'), ('perfect', 'VB'), ('for', 'IN'), ('you', 'PRP'), ('all', 'DT'), ('but', 'CC'), ('it', 'PRP'), ('need', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('laid', 'VBN'), ('away', 'RB'), ('now', 'RB'), ('because', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('like', 'IN'), ('a', 'DT'), ('it', 'PRP'), ('comes', 'VBZ'), ('up', 'RP'), ('you', 'PRP'), ('carry', 'VBP'), ('it', 'PRP'), ('in', 'IN'), ('a', 'DT'), ('case', 'NN'), ('and', 'CC'), ('when', 'WRB'), ('it', 'PRP'), ('opens', 'VBZ'), ('up', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('like', 'IN'), ('a', 'DT'), ('computer', 'NN'), ('screen', 'NN')])
('tags -> ', '     (i->NN) (saw->VBD) (this->DT) (nice->JJ) (thing->NN) (that->WDT) (gregory->NN) (had->VBD) (would->MD) (just->RB) (perfect->VB) (for->IN) (you->PRP) (all->DT) (but->CC) (it->PRP) (need->VBP) (to->TO) (be->VB) (laid->VBN) (away->RB) (now->RB) (because->IN) (it->PRP) (s->VBZ) (like->IN) (a->DT) (it->PRP) (comes->VBZ) (up->RP) (you->PRP) (carry->VBP) (it->PRP) (in->IN) (a->DT) (case->NN) (and->CC) (when->WRB) (it->PRP) (opens->VBZ) (up->IN) (it->PRP) (s->VBZ) (like->IN) (a->DT) (computer->NN) (screen->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
6
('tags initial-> ', [('the', 'DT'), ('buttons', 'NNS'), ('you', 'PRP'), ('push', 'VBP'), ('got', 'VBN'), ('buttons', 'NNS'), ('on', 'IN'), ('got', 'NNS'), ('keys', 'NNS'), ('on', 'IN'), ('it', 'PRP'), ('like', 'IN'), ('a', 'DT'), ('computer', 'NN'), ('has', 'VBZ')])
('tags -> ', '     (the->DT) (buttons->NNS) (you->PRP) (push->VBP) (got->VBN) (buttons->NNS) (on->IN) (got->NNS) (keys->NNS) (on->IN) (it->PRP) (like->IN) (a->DT) (computer->NN) (has->VBZ) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('push', 'VBP'), ('one', 'CD'), ('and', 'CC'), ('it', 'PRP'), ('returns', 'VBZ'), ('and', 'CC'), ('you', 'PRP'), ('ll', 'VBP'), ('get', 'VB'), ('like', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('make', 'VB'), ('music', 'NN')])
('tags -> ', '     (you->PRP) (push->VBP) (one->CD) (and->CC) (it->PRP) (returns->VBZ) (and->CC) (you->PRP) (ll->VBP) (get->VB) (like->IN) (you->PRP) (can->MD) (make->VB) (music->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('when', 'WRB'), ('you', 'PRP'), ('made', 'VBD'), ('the', 'DT'), ('music', 'NN'), ('it', 'PRP'), ('will', 'MD'), ('play', 'VB'), ('back', 'RB'), ('just', 'RB'), ('what', 'WP'), ('you', 'PRP'), ('put', 'VBP'), ('in', 'IN')])
('tags -> ', '     (and->CC) (when->WRB) (you->PRP) (made->VBD) (the->DT) (music->NN) (it->PRP) (will->MD) (play->VB) (back->RB) (just->RB) (what->WP) (you->PRP) (put->VBP) (in->IN) ')
candidates to check:
2
('tags initial-> ', [('then', 'RB'), ('it', 'PRP'), ('got', 'VBD'), ('one', 'CD'), ('where', 'WRB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('math', 'RB'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (then->RB) (it->PRP) (got->VBD) (one->CD) (where->WRB) (it->PRP) (has->VBZ) (got->VBN) (math->RB) (in->IN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBD'), ('letters', 'NNS')])
('tags -> ', '     (it->PRP) (has->VBZ) (got->VBD) (letters->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBD'), ('sounds', 'NNS')])
('tags -> ', '     (and->CC) (it->PRP) (has->VBZ) (got->VBD) (sounds->NNS) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('make', 'VBP'), ('certain', 'JJ'), ('sounds', 'NNS'), ('and', 'CC'), ('it', 'PRP'), ('picks', 'VBZ'), ('it', 'PRP'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (make->VBP) (certain->JJ) (sounds->NNS) (and->CC) (it->PRP) (picks->VBZ) (it->PRP) (up->RP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('really', 'RB'), ('nice', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (really->RB) (nice->JJ) (thing->NN) ')
('tags initial-> ', [('but', 'CC'), ('that', 'DT'), ('sounds', 'VBZ'), ('xxx', 'JJ')])
('tags -> ', '     (but->CC) (that->DT) (sounds->VBZ) (xxx->JJ) ')
candidates to check:
3
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('one', 'CD'), ('of', 'IN'), ('those', 'DT'), ('texas', 'JJ'), ('instrument', 'NN'), ('toys', 'NNS')])
('tags -> ', '     (it->PRP) (s->VBD) (one->CD) (of->IN) (those->DT) (texas->JJ) (instrument->NN) (toys->NNS) ')
candidates to check:
1
('tags initial-> ', [('oh', 'RB'), ('well', 'RB'), ('xxx', 'NNP'), ('texas', 'NN'), ('instrument', 'NN'), ('xxx', 'NNP'), ('huh', 'NN')])
('tags -> ', '     (oh->RB) (well->RB) (xxx->NNP) (texas->NN) (instrument->NN) (xxx->NNP) (huh->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('really', 'RB'), ('nice', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (really->RB) (nice->JJ) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('mandi', 'NN'), ('said', 'VBD'), ('she', 'PRP'), ('paid', 'VBD'), ('seventy', 'RB'), ('nine', 'CD'), ('dollars', 'NNS'), ('for', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (think->VBP) (mandi->NN) (said->VBD) (she->PRP) (paid->VBD) (seventy->RB) (nine->CD) (dollars->NNS) (for->IN) (it->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('but', 'CC'), ('it', 'PRP'), ('s', 'VBD'), ('real', 'JJ'), ('nice', 'JJ')])
('tags -> ', '     (but->CC) (it->PRP) (s->VBD) (real->JJ) (nice->JJ) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('he', 'PRP'), ('has', 'VBZ'), ('the', 'DT'), ('time', 'NN'), ('to', 'TO'), ('go', 'VB'), ('in', 'IN'), ('and', 'CC'), ('find', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('put', 'VB'), ('in', 'IN'), ('on', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (he->PRP) (has->VBZ) (the->DT) (time->NN) (to->TO) (go->VB) (in->IN) (and->CC) (find->VB) (it->PRP) (and->CC) (put->VB) (in->IN) (on->IN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('around', 'IN'), ('christmas', 'JJ'), ('time', 'NN'), ('things', 'NNS'), ('don', 'VBP'), ('t', 'RB'), ('go', 'VBP'), ('xxx', 'JJ')])
('tags -> ', '     (xxx->NN) (around->IN) (christmas->JJ) (time->NN) (things->NNS) (don->VBP) (t->RB) (go->VBP) (xxx->JJ) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('havin', 'JJ'), ('g', 'NN'), ('problems', 'NNS')])
('tags -> ', '     (and->CC) (i->NN) (was->VBD) (havin->JJ) (g->NN) (problems->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('havin', 'JJ'), ('g', 'NN'), ('problems', 'NNS'), ('with', 'IN'), ('it', 'PRP'), ('myself', 'PRP')])
('tags -> ', '     (i->NN) (was->VBD) (havin->JJ) (g->NN) (problems->NNS) (with->IN) (it->PRP) (myself->PRP) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('when', 'WRB'), ('you', 'PRP'), ('do', 'VBP'), ('they', 'PRP'), ('have', 'VB'), ('you', 'PRP'), ('wr', 'VBP'), ('you', 'PRP'), ('spell', 'VBP'), ('somethin', 'JJ'), ('g', 'NN'), ('wrong', 'JJ'), ('or', 'CC'), ('you', 'PRP'), ('have', 'VBP'), ('the', 'DT'), ('wrong', 'JJ'), ('number', 'NN'), ('they', 'PRP'), ('xxx', 'VBP'), ('they', 'PRP'), ('teach', 'VBP'), ('you', 'PRP'), ('letters', 'NNS'), ('first', 'RB')])
('tags -> ', '     (and->CC) (when->WRB) (you->PRP) (do->VBP) (they->PRP) (have->VB) (you->PRP) (wr->VBP) (you->PRP) (spell->VBP) (somethin->JJ) (g->NN) (wrong->JJ) (or->CC) (you->PRP) (have->VBP) (the->DT) (wrong->JJ) (number->NN) (they->PRP) (xxx->VBP) (they->PRP) (teach->VBP) (you->PRP) (letters->NNS) (first->RB) ')
candidates to check:
2
('tags initial-> ', [('then', 'RB'), ('it', 'PRP'), ('goes', 'VBZ'), ('from', 'IN'), ('the', 'DT'), ('letters', 'NNS'), ('to', 'TO'), ('your', 'PRP$'), ('numbers', 'NNS'), ('and', 'CC'), ('teach', 'VB'), ('you', 'PRP'), ('how', 'WRB'), ('to', 'TO'), ('s', 'VB'), ('recognize', 'VB'), ('th', 'NNS'), ('em', 'VB'), ('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('it', 'PRP'), ('and', 'CC'), ('you', 'PRP'), ('push', 'VBP'), ('th', 'JJ'), ('em', 'NN')])
('tags -> ', '     (then->RB) (it->PRP) (goes->VBZ) (from->IN) (the->DT) (letters->NNS) (to->TO) (your->PRP$) (numbers->NNS) (and->CC) (teach->VB) (you->PRP) (how->WRB) (to->TO) (s->VB) (recognize->VB) (th->NNS) (em->VB) (when->WRB) (you->PRP) (see->VBP) (it->PRP) (and->CC) (you->PRP) (push->VBP) (th->JJ) (em->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('i', 'NN'), ('d', 'VBP'), ('ask', 'NN'), ('you', 'PRP'), ('is', 'VBZ'), ('this', 'DT'), ('a', 'DT'), ('e', 'JJ'), ('l', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('d', 'VBP'), ('say', 'VB'), ('yes', 'UH'), ('q', 'NN')])
('tags -> ', '     (i->NN) (d->VBP) (ask->NN) (you->PRP) (is->VBZ) (this->DT) (a->DT) (e->JJ) (l->NN) (and->CC) (you->PRP) (d->VBP) (say->VB) (yes->UH) (q->NN) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('say', 'VBP'), ('yes', 'UH'), ('q', 'NN'), ('and', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('wrong', 'JJ'), ('they', 'PRP'), ('say', 'VBP'), ('you', 'PRP'), ('are', 'VBP'), ('wr', 'JJ'), ('wrong', 'JJ')])
('tags -> ', '     (if->IN) (you->PRP) (say->VBP) (yes->UH) (q->NN) (and->CC) (it->PRP) (s->VBZ) (wrong->JJ) (they->PRP) (say->VBP) (you->PRP) (are->VBP) (wr->JJ) (wrong->JJ) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('not', 'RB'), ('an', 'DT'), ('e', 'NN'), ('l', 'NN'), ('this', 'DT'), ('is', 'VBZ'), ('an', 'DT'), ('a', 'DT'), ('l', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (not->RB) (an->DT) (e->NN) (l->NN) (this->DT) (is->VBZ) (an->DT) (a->DT) (l->NN) ')
('tags initial-> ', [('even', 'RB'), ('if', 'IN'), ('it', 'PRP'), ('isn', 'VBZ'), ('t', 'NN')])
('tags -> ', '     (even->RB) (if->IN) (it->PRP) (isn->VBZ) (t->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('really', 'RB'), ('nice', 'JJ'), ('toy', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (really->RB) (nice->JJ) (toy->NN) ')
candidates to check:
2
('tags initial-> ', [('wow', 'NN'), ('that', 'WDT'), ('sounds', 'VBZ'), ('like', 'IN'), ('a', 'DT'), ('nice', 'JJ'), ('toy', 'NN')])
('tags -> ', '     (wow->NN) (that->WDT) (sounds->VBZ) (like->IN) (a->DT) (nice->JJ) (toy->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('nice', 'JJ'), ('one', 'CD')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (nice->JJ) (one->CD) ')
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (well->RB) (we->PRP) (gon->VBP) (na->TO) (xxx->VB) ')
('tags initial-> ', [('yeah', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('that', 'IN'), ('s', 'NN'), ('why', 'WRB'), ('she', 'PRP'), ('says', 'VBZ'), ('she', 'PRP'), ('got', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (yeah->RB) (be->VB) (cause->NN) (that->IN) (s->NN) (why->WRB) (she->PRP) (says->VBZ) (she->PRP) (got->VBD) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('uhhuh', 'NN')])
('tags -> ', '     (xxx->NN) (uhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('have', 'VBP'), ('some', 'DT'), ('nice', 'JJ'), ('ones', 'NNS')])
('tags -> ', '     (they->PRP) (have->VBP) (some->DT) (nice->JJ) (ones->NNS) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('they', 'PRP'), ('all', 'DT'), ('need', 'VBP')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (they->PRP) (all->DT) (need->VBP) ')
candidates to check:
1
('tags initial-> ', [('stuff', 'NN'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (stuff->NN) (like->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('something', 'NN'), ('that', 'WDT'), ('s', 'VBD'), ('learning', 'VBG'), ('uhhuh', 'NN')])
('tags -> ', '     (something->NN) (that->WDT) (s->VBD) (learning->VBG) (uhhuh->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('play', 'NN'), ('with', 'IN'), ('the', 'DT'), ('babies', 'NNS'), ('anyway', 'RB')])
('tags -> ', '     (be->VB) (cause->NN) (you->PRP) (don->VBP) (t->JJ) (play->NN) (with->IN) (the->DT) (babies->NNS) (anyway->RB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('do', 'VBP'), ('them', 'PRP'), ('a', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (do->VBP) (them->PRP) (a->DT) (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('enough', 'JJ'), ('babies', 'NNS'), ('to', 'TO'), ('last', 'JJ'), ('you', 'PRP'), ('for', 'IN'), ('ten', 'CD'), ('years', 'NNS')])
('tags -> ', '     (you->PRP) (got->VBD) (enough->JJ) (babies->NNS) (to->TO) (last->JJ) (you->PRP) (for->IN) (ten->CD) (years->NNS) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('ve', 'VBP'), ('got', 'VBD'), ('enough', 'JJ'), ('toys', 'NN'), ('at', 'IN'), ('home', 'NN')])
('tags -> ', '     (i->NN) (ve->VBP) (got->VBD) (enough->JJ) (toys->NN) (at->IN) (home->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'JJ'), ('xxx', 'NN'), ('pampers', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('this', 'DT'), ('morning', 'NN')])
('tags -> ', '     (xxx->JJ) (xxx->NN) (pampers->NNS) (on->IN) (the->DT) (table->NN) (this->DT) (morning->NN) ')
candidates to check:
1
('tags initial-> ', [('whose', 'WP$'), ('baby', 'NN'), ('s', 'NN'), ('panties', 'NNS'), ('is', 'VBZ'), ('this', 'DT')])
('tags -> ', '     (whose->WP$) (baby->NN) (s->NN) (panties->NNS) (is->VBZ) (this->DT) ')
candidates to check:
2
('tags initial-> ', [('whose', 'WP$'), ('babies', 'NNS'), ('panties', 'NNS'), ('were', 'VBD'), ('those', 'DT'), ('april', 'NNS')])
('tags -> ', '     (whose->WP$) (babies->NNS) (panties->NNS) (were->VBD) (those->DT) (april->NNS) ')
candidates to check:
7
('tags initial-> ', [('those', 'DT'), ('panties', 'NNS'), ('i', 'VBP'), ('had', 'VBD'), ('the', 'DT'), ('other', 'JJ'), ('day', 'NN'), ('for', 'IN'), ('the', 'DT'), ('baby', 'NN'), ('whose', 'WP$'), ('doll', 'NN'), ('panties', 'NNS'), ('was', 'VBD'), ('those', 'DT')])
('tags -> ', '     (those->DT) (panties->NNS) (i->VBP) (had->VBD) (the->DT) (other->JJ) (day->NN) (for->IN) (the->DT) (baby->NN) (whose->WP$) (doll->NN) (panties->NNS) (was->VBD) (those->DT) ')
candidates to check:
1
('tags initial-> ', [('for', 'IN'), ('my', 'PRP$'), ('baby', 'NN')])
('tags -> ', '     (for->IN) (my->PRP$) (baby->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('for', 'IN'), ('my', 'PRP$'), ('baby', 'NN')])
('tags -> ', '     (for->IN) (my->PRP$) (baby->NN) ')
candidates to check:
3
('tags initial-> ', [('oh', 'IN'), ('they', 'PRP'), ('your', 'PRP$'), ('baby', 'NN'), ('panties', 'NNS')])
('tags -> ', '     (oh->IN) (they->PRP) (your->PRP$) (baby->NN) (panties->NNS) ')
candidates to check:
2
('tags initial-> ', [('my', 'PRP$'), ('baby', 'NN'), ('don', 'NN'), ('t', 'NN'), ('ha', 'NN'), ('ve', 'VBZ'), ('no', 'DT'), ('panties', 'NNS')])
('tags -> ', '     (my->PRP$) (baby->NN) (don->NN) (t->NN) (ha->NN) (ve->VBZ) (no->DT) (panties->NNS) ')
candidates to check:
1
('tags initial-> ', [('does', 'VBZ'), ('she', 'PRP'), ('have', 'VB'), ('a', 'DT'), ('pamper', 'NN')])
('tags -> ', '     (does->VBZ) (she->PRP) (have->VB) (a->DT) (pamper->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('does', 'VBZ'), ('your', 'PRP$'), ('baby', 'NN'), ('have', 'VBP'), ('a', 'DT'), ('pamper', 'NN')])
('tags -> ', '     (does->VBZ) (your->PRP$) (baby->NN) (have->VBP) (a->DT) (pamper->NN) ')
('tags initial-> ', [('well', 'RB'), ('does', 'VBZ'), ('she', 'PRP')])
('tags -> ', '     (well->RB) (does->VBZ) (she->PRP) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('how', 'WRB'), ('to', 'TO'), ('change', 'VB'), ('her', 'PRP$'), ('pamper', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (how->WRB) (to->TO) (change->VB) (her->PRP$) (pamper->NN) ')
candidates to check:
4
('tags initial-> ', [('um', 'JJ'), ('my', 'PRP$'), ('bar', 'NN'), ('my', 'PRP$'), ('barbie', 'NN'), ('doll', 'NN'), ('don', 'NN'), ('t', 'NN')])
('tags -> ', '     (um->JJ) (my->PRP$) (bar->NN) (my->PRP$) (barbie->NN) (doll->NN) (don->NN) (t->NN) ')
candidates to check:
6
descended from food: [['N'], 'cabbage', 9, 16]
cabbage
cabbage cabbage 28
[('my', 'PRP$'), ('cabbage', 'NN'), ('patch', 'NN'), ('do', 'VB'), ('every', 'DT'), ('time', 'NN'), ('she', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('um', 'JJ'), ('bottle', 'NN'), ('and', 'CC'), ('and', 'CC'), ('a', 'DT'), ('pamper', 'NN')]
['cabbage']
('tags initial-> ', [('my', 'PRP$'), ('cabbage', 'NN'), ('patch', 'NN'), ('do', 'VB'), ('every', 'DT'), ('time', 'NN'), ('she', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('um', 'JJ'), ('bottle', 'NN'), ('and', 'CC'), ('and', 'CC'), ('a', 'DT'), ('pamper', 'NN')])
('tags -> ', '     (my->PRP$) (cabbage->NN) (patch->NN) (do->VB) (every->DT) (time->NN) (she->PRP) (have->VBP) (a->DT) (um->JJ) (bottle->NN) (and->CC) (and->CC) (a->DT) (pamper->NN) ')
('tags initial-> ', [('really', 'RB')])
('tags -> ', '     (really->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
6
('tags initial-> ', [('tomorrow', 'NN'), ('afternoon', 'NN'), ('thanksgiving', 'VBG')])
('tags -> ', '     (tomorrow->NN) (afternoon->NN) (thanksgiving->VBG) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('xxx', 'VB'), ('to', 'TO'), ('the', 'DT'), ('state', 'NN'), ('house', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (you->PRP) (to->TO) (xxx->VB) (to->TO) (the->DT) (state->NN) (house->NN) (xxx->NN) ')
('tags initial-> ', [('oh', 'UH'), ('okay', 'NN')])
('tags -> ', '     (oh->UH) (okay->NN) ')
('tags initial-> ', [('out', 'IN'), ('there', 'RB'), ('in', 'IN'), ('mattapan', 'NN')])
('tags -> ', '     (out->IN) (there->RB) (in->IN) (mattapan->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('on', 'IN'), ('morgan', 'JJ'), ('street', 'NN')])
('tags -> ', '     (on->IN) (morgan->JJ) (street->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('knew', 'VBD'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (knew->VBD) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('that', 'IN'), ('building', 'VBG'), ('where', 'WRB'), ('we', 'PRP'), ('turn', 'VBP'), ('at', 'IN'), ('xxx', 'NNS')])
('tags -> ', '     (it->PRP) (s->VBZ) (that->IN) (building->VBG) (where->WRB) (we->PRP) (turn->VBP) (at->IN) (xxx->NNS) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('turn', 'VBP'), ('the', 'DT'), ('corner', 'NN'), ('there', 'RB')])
('tags -> ', '     (you->PRP) (turn->VBP) (the->DT) (corner->NN) (there->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('corner', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) (the->DT) (corner->NN) (xxx->NN) ')
candidates to check:
4
('tags initial-> ', [('okay', 'NN'), ('today', 'NN'), ('is', 'VBZ'), ('today', 'NN'), ('and', 'CC'), ('tomorrow', 'NN'), ('s', 'NN'), ('tomorrow', 'NN'), ('huh', 'NN')])
('tags -> ', '     (okay->NN) (today->NN) (is->VBZ) (today->NN) (and->CC) (tomorrow->NN) (s->NN) (tomorrow->NN) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('today', 'NN')])
('tags -> ', '     (xxx->NNS) (today->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('day', 'NN'), ('the', 'DT'), ('day', 'NN'), ('for', 'IN'), ('the', 'DT'), ('big', 'JJ'), ('one', 'NN')])
('tags -> ', '     (the->DT) (day->NN) (the->DT) (day->NN) (for->IN) (the->DT) (big->JJ) (one->NN) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('she', 'PRP'), ('xxx', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('start', 'VBP'), ('making', 'VBG'), ('xxx', 'NN')])
('tags -> ', '     (so->RB) (she->PRP) (xxx->JJ) (and->CC) (i->JJ) (start->VBP) (making->VBG) (xxx->NN) ')
candidates to check:
4
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('i', 'NN'), ('might', 'MD'), ('leave', 'VB'), ('work', 'NN'), ('early', 'RB'), ('tomorrow', 'NN'), ('anyway', 'RB')])
('tags -> ', '     (be->VB) (cause->NN) (i->NN) (might->MD) (leave->VB) (work->NN) (early->RB) (tomorrow->NN) (anyway->RB) ')
('tags initial-> ', [('i', 'NN'), ('definitely', 'RB'), ('am', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('leave', 'VB'), ('early', 'JJ'), ('thursday', 'NN')])
('tags -> ', '     (i->NN) (definitely->RB) (am->VBP) (gon->VBG) (na->TO) (leave->VB) (early->JJ) (thursday->NN) ')
candidates to check:
3
('tags initial-> ', [('to', 'TO'), ('get', 'VB'), ('everything', 'NN'), ('straightened', 'VBN'), ('out', 'RP'), ('and', 'CC'), ('everything', 'NN'), ('done', 'VBN')])
('tags -> ', '     (to->TO) (get->VB) (everything->NN) (straightened->VBN) (out->RP) (and->CC) (everything->NN) (done->VBN) ')
('tags initial-> ', [('xxx', 'NNS'), ('are', 'VBP'), ('you', 'PRP'), ('leavin', 'JJ'), ('g', 'NNS'), ('on', 'IN'), ('friday', 'NN')])
('tags -> ', '     (xxx->NNS) (are->VBP) (you->PRP) (leavin->JJ) (g->NNS) (on->IN) (friday->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('next', 'JJ'), ('friday', 'NN'), ('too', 'RB')])
('tags -> ', '     (next->JJ) (friday->NN) (too->RB) ')
candidates to check:
1
('tags initial-> ', [('let', 'VB'), ('s', 'NNS'), ('make', 'VB'), ('him', 'PRP'), ('xxx', 'VB'), ('no', 'DT'), ('school', 'NN')])
('tags -> ', '     (let->VB) (s->NNS) (make->VB) (him->PRP) (xxx->VB) (no->DT) (school->NN) ')
candidates to check:
3
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('they', 'PRP'), ('re', 'VBP'), ('havin', 'JJ'), ('g', 'NN'), ('it', 'PRP'), ('the', 'DT'), ('family', 'NN'), ('reunion', 'NN'), ('till', 'IN'), ('next', 'JJ'), ('friday', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (they->PRP) (re->VBP) (havin->JJ) (g->NN) (it->PRP) (the->DT) (family->NN) (reunion->NN) (till->IN) (next->JJ) (friday->NN) ')
candidates to check:
1
('tags initial-> ', [('school', 'NN')])
('tags -> ', '     (school->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('xxx', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('spend', 'VB'), ('a', 'DT'), ('weekend', 'NN'), ('in', 'IN'), ('new', 'JJ'), ('york', 'NN'), ('this', 'DT'), ('week', 'NN')])
('tags -> ', '     (so->RB) (i->JJ) (m->NN) (gon->NN) (na->TO) (spend->VB) (a->DT) (weekend->NN) (in->IN) (new->JJ) (york->NN) (this->DT) (week->NN) ')
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('enough', 'VBN'), ('april', 'NN')])
('tags -> ', '     (you->PRP) (had->VBD) (enough->VBN) (april->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('sure', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (sure->JJ) ')
('tags initial-> ', [('can', 'MD'), ('t', 'VB'), ('you', 'PRP'), ('speak', 'VB')])
('tags -> ', '     (can->MD) (t->VB) (you->PRP) (speak->VB) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('stop', 'VB'), ('shaking', 'VBG'), ('your', 'PRP$'), ('head', 'NN'), ('and', 'CC'), ('say', 'VB'), ('yes', 'UH'), ('q', 'NN')])
('tags -> ', '     (well->RB) (stop->VB) (shaking->VBG) (your->PRP$) (head->NN) (and->CC) (say->VB) (yes->UH) (q->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('wipe', 'VB'), ('your', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (wipe->VB) (your->PRP$) (hands->NNS) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('you', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('napkin', 'NN'), ('for', 'IN')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (you->PRP) (have->VBP) (a->DT) (napkin->NN) (for->IN) ')
candidates to check:
2
('tags initial-> ', [('wash', 'VB'), ('your', 'PRP$'), ('hands', 'NNS'), ('and', 'CC'), ('wipe', 'VB'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (wash->VB) (your->PRP$) (hands->NNS) (and->CC) (wipe->VB) (your->PRP$) (mouth->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicles', 34, 43]
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('just', 'RB'), ('to', 'TO'), ('wrap', 'VB'), ('up', 'RP'), ('popsicles', 'NNS'), ('with', 'IN')])
('tags -> ', '     (they->PRP) (re->VBP) (not->RB) (just->RB) (to->TO) (wrap->VB) (up->RP) (popsicles->NNS) (with->IN) ')
candidates to check:
1
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('man', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (a->DT) (man->NN) (xxx->NN) ')
('tags initial-> ', [('he', 'PRP'), ('said', 'VBD'), ('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (he->PRP) (said->VBD) (come->VBN) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('work', 'NN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (xxx->JJ) (work->NN) (for->IN) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('come', 'VBN'), ('on', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (come->VBN) (on->IN) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('over', 'IN'), ('here', 'RB'), ('xxx', 'NNS')])
('tags -> ', '     (xxx->NN) (over->IN) (here->RB) (xxx->NNS) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (know->VBP) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('see', 'VBP')])
('tags -> ', '     (you->PRP) (see->VBP) ')
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('just', 'RB'), ('talkin', 'JJ'), ('g', 'NN'), ('now', 'RB')])
('tags -> ', '     (we->PRP) (re->VBP) (just->RB) (talkin->JJ) (g->NN) (now->RB) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('finished', 'VBN'), ('get', 'VB'), ('back', 'RB'), ('up', 'IN'), ('there', 'RB')])
('tags -> ', '     (if->IN) (you->PRP) (re->VBP) (not->RB) (finished->VBN) (get->VB) (back->RB) (up->IN) (there->RB) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('dropping', 'VBG'), ('stuff', 'VB'), ('all', 'DT'), ('over', 'IN'), ('the', 'DT'), ('floor', 'NN')])
('tags -> ', '     (you->PRP) (dropping->VBG) (stuff->VB) (all->DT) (over->IN) (the->DT) (floor->NN) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('still', 'RB'), ('eating', 'VBG'), ('sit', 'VBP'), ('down', 'RP')])
('tags -> ', '     (if->IN) (you->PRP) (still->RB) (eating->VBG) (sit->VBP) (down->RP) ')
candidates to check:
2
descended from food: [['N'], 'potatoes', 38, 46]
potatoes
potatoes potatoes 62
[('and', 'CC'), ('eat', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('those', 'DT'), ('good', 'JJ'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('and', 'CC'), ('eat', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('those', 'DT'), ('good', 'JJ'), ('potatoes', 'NNS')])
('tags -> ', '     (and->CC) (eat->VB) (some->DT) (more->JJR) (of->IN) (those->DT) (good->JJ) (potatoes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 32, 40]
potatoes
potatoes potatoes 62
[('eat', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('those', 'DT'), ('potatoes', 'NNS')]
['potatoes']
('tags initial-> ', [('eat', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('those', 'DT'), ('potatoes', 'NNS')])
('tags -> ', '     (eat->VB) (some->DT) (more->JJR) (of->IN) (those->DT) (potatoes->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('ate', 'VBP'), ('all', 'DT'), ('mine', 'NN')])
('tags -> ', '     (i->JJ) (ate->VBP) (all->DT) (mine->NN) ')
('tags initial-> ', [('yep', 'NN'), ('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (yep->NN) (you->PRP) (did->VBD) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('just', 'RB'), ('pop', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('there', 'EX'), ('ladies', 'NNS')])
('tags -> ', '     (xxx->NN) (just->RB) (pop->VB) (it->PRP) (in->IN) (there->EX) (ladies->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBD) (good->JJ) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('hit', 'VBD'), ('my', 'PRP$'), ('spot', 'NN')])
('tags -> ', '     (it->PRP) (hit->VBD) (my->PRP$) (spot->NN) ')
('tags initial-> ', [('yes', 'NNS'), ('indeed', 'RB')])
('tags -> ', '     (yes->NNS) (indeed->RB) ')
candidates to check:
3
descended from food: [['N'], 'diet', 40, 44]
('tags initial-> ', [('xxx', 'NN'), ('is', 'VBZ'), ('on', 'IN'), ('a', 'DT'), ('on', 'IN'), ('a', 'DT'), ('noncooking', 'JJ'), ('diet', 'NN')])
('tags -> ', '     (xxx->NN) (is->VBZ) (on->IN) (a->DT) (on->IN) (a->DT) (noncooking->JJ) (diet->NN) ')
candidates to check:
2
cereal
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df8318c0>)
[('she', 'PRP'), ('eats', 'VBZ'), ('cereal', 'NN')]
['cereal']
('tags initial-> ', [('she', 'PRP'), ('eats', 'VBZ'), ('cereal', 'NN')])
('tags -> ', '     (she->PRP) (eats->VBZ) (cereal->NN) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'NN'), ('no', 'DT'), ('wonder', 'NN'), ('i', 'NN'), ('lost', 'VBD'), ('weight', 'NN')])
('tags -> ', '     (xxx->NN) (no->DT) (wonder->NN) (i->NN) (lost->VBD) (weight->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('lost', 'VBD'), ('eight', 'CD'), ('pounds', 'NNS')])
('tags -> ', '     (i->NN) (lost->VBD) (eight->CD) (pounds->NNS) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('a', 'DT'), ('old', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (a->DT) (old->JJ) (xxx->NN) ')
candidates to check:
2
cereal
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df844320>)
[('i', 'NN'), ('got', 'VBD'), ('find', 'VBP'), ('a', 'DT'), ('new', 'JJ'), ('cereal', 'NN')]
['cereal']
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('find', 'VBP'), ('a', 'DT'), ('new', 'JJ'), ('cereal', 'NN')])
('tags -> ', '     (i->NN) (got->VBD) (find->VBP) (a->DT) (new->JJ) (cereal->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('get', 'VB'), ('up', 'RP'), ('early', 'RB')])
('tags -> ', '     (get->VB) (up->RP) (early->RB) ')
candidates to check:
1
('tags initial-> ', [('drive', 'NN'), ('into', 'IN'), ('pennsylvania', 'NN'), ('to', 'TO'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (drive->NN) (into->IN) (pennsylvania->NN) (to->TO) (the->DT) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('let', 'VB'), ('her', 'PRP'), ('hear', 'VB'), ('what', 'WP'), ('we', 'PRP')])
('tags -> ', '     (let->VB) (her->PRP) (hear->VB) (what->WP) (we->PRP) ')
loading solution set
calculating
set([(1059, (27, 40)), (1000, (31, 41)), (1031, (6, 26)), (873, (6, 13)), (190, (30, 35)), (598, (27, 38)), (1034, (21, 35)), (270, (19, 26)), (551, (26, 31)), (590, (91, 96)), (876, (6, 10)), (802, (18, 26)), (184, (6, 13)), (163, (13, 20)), (621, (95, 103)), (621, (68, 78)), (267, (23, 31)), (833, (19, 27)), (783, (36, 43)), (1682, (32, 40)), (866, (6, 16)), (583, (26, 30)), (1728, (23, 29)), (790, (25, 32)), (525, (49, 54)), (1677, (38, 46)), (858, (66, 74)), (190, (21, 25)), (190, (13, 20)), (533, (6, 17)), (533, (18, 28)), (571, (64, 73)), (1034, (7, 11)), (70, (21, 25)), (533, (38, 48)), (621, (35, 45)), (443, (15, 24)), (879, (6, 10)), (172, (6, 10)), (536, (34, 43)), (590, (41, 59)), (793, (17, 25)), (548, (28, 33)), (187, (6, 13)), (805, (15, 23)), (99, (28, 36)), (1037, (19, 32)), (433, (103, 112)), (618, (17, 25)), (85, (6, 14)), (830, (35, 43)), (771, (28, 35)), (1634, (34, 43))])
[((70, (21, 25)), '*AUN:\t<you want> [<] corn ?\n'), ((85, (6, 14)), '*MOT:\tpotatoes there .\n'), ((99, (28, 36)), '*COU:\tthank [//] I like (.) potatoes .\n'), ((163, (13, 20)), '*COU:\tI want koolaid [>] .\n'), ((172, (6, 10)), '*CHI:\tmilk [?] .\n'), ((184, (6, 13)), '*CHI:\tkoolaid [>] .\n'), ((187, (6, 13)), '*COU:\tkoolaid [<] .\n'), ((190, (13, 20)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (21, 25)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (30, 35)), '*MOT:\twe got koolaid milk and water .\n'), ((267, (23, 31)), '*AUN:\teat some of your potatoes .\n'), ((270, (19, 26)), '*MOT:\tanybody want chicken ?\n'), ((433, (103, 112)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((443, (15, 24)), '*MOT:\twho want ice cream ?\n'), ((525, (49, 54)), '*MOT:\twhen I go to the store tomorrow and get my sodas .\n'), ((533, (6, 17)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (18, 28)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (38, 48)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((536, (34, 43)), '*MOT:\tand &-um (.) I have my &-uh slim fast .\n'), ((548, (28, 33)), '*AUN:\t<I been living on (.) salad> [<] .\n'), ((551, (26, 31)), "*AUN:\tI've been living on salad for the last week .\n"), ((571, (64, 73)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((583, (26, 30)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((590, (41, 59)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (91, 96)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((598, (27, 38)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((618, (17, 25)), '*MOT:\tI got some broccoli in there .\n'), ((621, (35, 45)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (68, 78)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (95, 103)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((771, (28, 35)), '*COU:\t<can I have> [<] more chicken ?\n'), ((783, (36, 43)), '*COU:\t<grandma can I have some more chicken> [<] ?\n'), ((790, (25, 32)), '*COU:\tcan have some more chicken ?\n'), ((793, (17, 25)), '*MOT:\twhat about potatoes ?\n'), ((802, (18, 26)), '*AUN:\tshe ate her potatoes .\n'), ((805, (15, 23)), '*MOT:\tyou want potatoes April ?\n'), ((830, (35, 43)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((833, (19, 27)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((858, (66, 74)), '*MOT:\tso it turned out to be (.) <just enough &p> [/] just enough potatoes .\n'), ((866, (6, 16)), '*CHI:\t(po)tatoes .\n'), ((873, (6, 13)), '*CHI:\tchicken ?\n'), ((876, (6, 10)), '*COU:\tcorn [>] .\n'), ((879, (6, 10)), '*CHI:\tcorn [<] .\n'), ((1000, (31, 41)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1031, (6, 26)), '*AUN:\toats and bran cereal ?\n'), ((1034, (7, 11)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1034, (21, 35)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1037, (19, 32)), '*AUN:\tsomethin(g) <nut and honey> [>] ?\n'), ((1059, (27, 40)), '*CHI:\tcan I have some more fried chicken &=whispering .\n'), ((1634, (34, 43)), "*MOT:\tthey're not just to wrap up popsicles with .\n"), ((1677, (38, 46)), '*MOT:\tand eat some more of those good potatoes .\n'), ((1682, (32, 40)), '*MOT:\t+^ eat some more of those potatoes !\n'), ((1728, (23, 29)), '*AUN:\tI got find a new cereal [>] .\n')]
set([(1059, (27, 40)), (571, (64, 68)), (1000, (31, 41)), (1034, (30, 35)), (590, (21, 26)), (53, (32, 36)), (873, (6, 13)), (190, (30, 35)), (1022, (6, 11)), (603, (41, 47)), (621, (68, 72)), (551, (26, 31)), (590, (51, 59)), (876, (6, 10)), (802, (18, 26)), (539, (34, 40)), (507, (66, 70)), (621, (95, 103)), (1707, (40, 44)), (838, (33, 38)), (1031, (20, 26)), (825, (24, 29)), (267, (23, 31)), (608, (48, 53)), (598, (32, 38)), (1486, (9, 16)), (1682, (32, 40)), (833, (47, 52)), (1677, (38, 46)), (598, (43, 48)), (879, (6, 10)), (1728, (23, 29)), (790, (25, 32)), (621, (115, 119)), (1034, (21, 25)), (1034, (7, 11)), (562, (102, 107)), (500, (24, 29)), (530, (30, 34)), (1037, (27, 32)), (858, (66, 74)), (190, (21, 25)), (270, (19, 26)), (621, (35, 39)), (70, (21, 25)), (533, (6, 10)), (48, (32, 36)), (533, (11, 17)), (571, (49, 53)), (443, (15, 24)), (172, (6, 10)), (1031, (6, 10)), (144, (23, 27)), (793, (17, 25)), (548, (28, 33)), (805, (15, 23)), (598, (27, 31)), (997, (28, 32)), (539, (17, 22)), (99, (28, 36)), (533, (-1, 5)), (1634, (34, 43)), (598, (-1, 5)), (533, (38, 48)), (583, (72, 76)), (433, (103, 112)), (833, (19, 27)), (618, (17, 25)), (85, (6, 14)), (830, (35, 43)), (433, (64, 68)), (709, (18, 21)), (1710, (18, 24)), (590, (47, 50)), (783, (36, 43)), (771, (28, 35)), (590, (91, 96))])
[((48, (32, 36)), '*MOT:\t<and we thank him for our food amen> [>] .\n'), ((53, (32, 36)), '*CHI:\t<and we thank him for our food amen> [<] .\n'), ((70, (21, 25)), '*AUN:\t<you want> [<] corn ?\n'), ((85, (6, 14)), '*MOT:\tpotatoes there .\n'), ((99, (28, 36)), '*COU:\tthank [//] I like (.) potatoes .\n'), ((144, (23, 27)), '*CHI:\tthank you for my food (.) amen .\n'), ((172, (6, 10)), '*CHI:\tmilk [?] .\n'), ((190, (21, 25)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (30, 35)), '*MOT:\twe got koolaid milk and water .\n'), ((267, (23, 31)), '*AUN:\teat some of your potatoes .\n'), ((270, (19, 26)), '*MOT:\tanybody want chicken ?\n'), ((433, (64, 68)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((433, (103, 112)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((443, (15, 24)), '*MOT:\twho want ice cream ?\n'), ((500, (24, 29)), '*AUN:\tthis is delicious honey got all up on my dress .\n'), ((507, (66, 70)), "*MOT:\twell I'm trying to get back in form again so &-um (.) on my diet today .\n"), ((530, (30, 34)), "*MOT:\tI'm buyin(g) everything diet .\n"), ((533, (-1, 5)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (6, 10)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (11, 17)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (38, 48)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((539, (17, 22)), '*MOT:\teat it for lunch (.) or for dinner .\n'), ((539, (34, 40)), '*MOT:\teat it for lunch (.) or for dinner .\n'), ((548, (28, 33)), '*AUN:\t<I been living on (.) salad> [<] .\n'), ((551, (26, 31)), "*AUN:\tI've been living on salad for the last week .\n"), ((562, (102, 107)), "*MOT:\twell [/] well I'm gonna try it instead <is xxx> [//] is try to try to xxx to eat just about the foods that I'd like to eat .\n"), ((571, (49, 53)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((571, (64, 68)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((583, (72, 76)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((590, (21, 26)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (47, 50)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (51, 59)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (91, 96)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((598, (-1, 5)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((598, (27, 31)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((598, (32, 38)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((598, (43, 48)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((603, (41, 47)), '*MOT:\tand this right here be my &-uh (.) dinner right here .\n'), ((608, (48, 53)), "*MOT:\tand tomorrow I'll drink this for &-uh (.) lunch .\n"), ((618, (17, 25)), '*MOT:\tI got some broccoli in there .\n'), ((621, (35, 39)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (68, 72)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (95, 103)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (115, 119)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((709, (18, 21)), '*MOT:\tmy hospital egg crate thing (.) got tore [?] up .\n'), ((771, (28, 35)), '*COU:\t<can I have> [<] more chicken ?\n'), ((783, (36, 43)), '*COU:\t<grandma can I have some more chicken> [<] ?\n'), ((790, (25, 32)), '*COU:\tcan have some more chicken ?\n'), ((793, (17, 25)), '*MOT:\twhat about potatoes ?\n'), ((802, (18, 26)), '*AUN:\tshe ate her potatoes .\n'), ((805, (15, 23)), '*MOT:\tyou want potatoes April ?\n'), ((825, (24, 29)), '*MOT:\t+^ I put all that water in that thing .\n'), ((830, (35, 43)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((833, (19, 27)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((833, (47, 52)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((838, (33, 38)), '*MOT:\t+^ I tried to add (.) more water to it .\n'), ((858, (66, 74)), '*MOT:\tso it turned out to be (.) <just enough &p> [/] just enough potatoes .\n'), ((873, (6, 13)), '*CHI:\tchicken ?\n'), ((876, (6, 10)), '*COU:\tcorn [>] .\n'), ((879, (6, 10)), '*CHI:\tcorn [<] .\n'), ((997, (28, 32)), '*MOT:\t+^ even with the skim milk .\n'), ((1000, (31, 41)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1022, (6, 11)), '*AUN:\thoney I tell you what .\n'), ((1031, (6, 10)), '*AUN:\toats and bran cereal ?\n'), ((1031, (20, 26)), '*AUN:\toats and bran cereal ?\n'), ((1034, (7, 11)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1034, (21, 25)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1034, (30, 35)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1037, (27, 32)), '*AUN:\tsomethin(g) <nut and honey> [>] ?\n'), ((1059, (27, 40)), '*CHI:\tcan I have some more fried chicken &=whispering .\n'), ((1486, (9, 16)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1634, (34, 43)), "*MOT:\tthey're not just to wrap up popsicles with .\n"), ((1677, (38, 46)), '*MOT:\tand eat some more of those good potatoes .\n'), ((1682, (32, 40)), '*MOT:\t+^ eat some more of those potatoes !\n'), ((1707, (40, 44)), '*AUN:\txxx is <on a> [/] on a noncooking diet .\n'), ((1710, (18, 24)), '*AUN:\t+^ she eats cereal .\n'), ((1728, (23, 29)), '*AUN:\tI got find a new cereal [>] .\n')]
calculating accuracy and recall
correct labels:
set(['diet soda', 'milk shake', 'apple', 'fried chicken', 'slim fast', 'chicken', 'oats and honey', 'milk', 'ice cream', 'ginger+ale', 'oats and bran cereal', 'popsicles', 'nut and honey', 'diet sprite', 'corn', 'water', 'cereal', '(po)tatoes', 'broccoli', 'koolaid', 'salad', 'oats', 'potatoes', 'sodas', 'spice ham sandwich', 'pork chops', 'soda', 'diet slice'])
predicted labels:
set(['', 'milk shake', 'pork', 'apple', 'fried chicken', 'honey', 'foods', 'chicken', 'milk', 'ice cream', 'ginger+ale', 'ham', 'popsicles', 'sandwich', 'sprite', 'food', 'corn', 'diet', 'water', 'lunch', 'cereal', 'cabbage', 'broccoli', 'salad', 'oats', 'potatoes', 'dinner', 'egg', 'meal'])
file:HSLLD/HV1/MT//aprmt1.cha
precision: 0.51724137931
recall: 0.535714285714
true positives:['apple', 'broccoli', 'cereal', 'chicken', 'corn', 'fried chicken', 'ginger+ale', 'ice cream', 'milk', 'milk shake', 'oats', 'popsicles', 'potatoes', 'salad', 'water']
false positives: ['', 'cabbage', 'diet', 'dinner', 'egg', 'food', 'foods', 'ham', 'honey', 'lunch', 'meal', 'pork', 'sandwich', 'sprite']
false negatives: ['(po)tatoes', 'diet slice', 'diet soda', 'diet sprite', 'koolaid', 'nut and honey', 'oats and bran cereal', 'oats and honey', 'pork chops', 'slim fast', 'soda', 'sodas', 'spice ham sandwich']
# true pos: 15
# false pos: 14
# false neg: 13
HSLLD/HV1/MT//jermt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jermt1.cha
HSLLD/HV1/MT//brimt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('what', 'WP'), ('don', 'VBZ'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('ryan', 'JJ')])
('tags -> ', '     (what->WP) (don->VBZ) (t->NN) (you->PRP) (want->VBP) (ryan->JJ) ')
('tags initial-> ', [('guess', 'NN')])
('tags -> ', '     (guess->NN) ')
('tags initial-> ', [('what', 'WP'), ('would', 'MD'), ('you', 'PRP'), ('like', 'VB')])
('tags -> ', '     (what->WP) (would->MD) (you->PRP) (like->VB) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('cup', 'NN')])
('tags -> ', '     (a->DT) (cup->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('i', 'NN'), ('got', 'VBD'), ('yyy', 'RB')])
('tags -> ', '     (i->NN) (got->VBD) (yyy->RB) ')
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('pick', 'VB'), ('one', 'CD'), ('or', 'CC'), ('the', 'DT'), ('other', 'JJ'), ('we', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('have', 'VB'), ('two', 'CD')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (pick->VB) (one->CD) (or->CC) (the->DT) (other->JJ) (we->PRP) (can->MD) (t->VB) (have->VB) (two->CD) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('you', 'PRP'), ('a', 'DT'), ('cup', 'NN')])
('tags -> ', '     (i->NN) (ll->VBP) (get->VB) (you->PRP) (a->DT) (cup->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (want->VB) ')
('tags initial-> ', [('this', 'DT')])
('tags -> ', '     (this->DT) ')
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('what', 'WP'), ('you', 'PRP'), ('want', 'VBP')])
('tags -> ', '     (is->VBZ) (that->IN) (what->WP) (you->PRP) (want->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('happy', 'JJ'), ('now', 'RB')])
('tags -> ', '     (you->PRP) (happy->JJ) (now->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('who', 'WP'), ('um', 'VBZ'), ('put', 'VBD'), ('the', 'DT'), ('paintings', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('floor', 'NN'), ('that', 'IN'), ('you', 'PRP'), ('made', 'VBD')])
('tags -> ', '     (who->WP) (um->VBZ) (put->VBD) (the->DT) (paintings->NNS) (on->IN) (the->DT) (floor->NN) (that->IN) (you->PRP) (made->VBD) ')
('tags initial-> ', [('brian', 'NN'), ('did', 'VBD')])
('tags -> ', '     (brian->NN) (did->VBD) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('those', 'DT'), ('are', 'VBP'), ('pretty', 'JJ'), ('with', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('all', 'PDT'), ('the', 'DT'), ('colors', 'NNS'), ('brian', 'VBP')])
('tags -> ', '     (those->DT) (are->VBP) (pretty->JJ) (with->IN) (all->PDT) (the->DT) (all->PDT) (the->DT) (colors->NNS) (brian->VBP) ')
('tags initial-> ', [('are', 'VBP'), ('they', 'PRP'), ('yours', 'RB'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (are->VBP) (they->PRP) (yours->RB) (over->IN) (here->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('think', 'VB'), ('it', 'PRP'), ('s', 'RB'), ('raining', 'VBG'), ('again', 'RB')])
('tags -> ', '     (think->VB) (it->PRP) (s->RB) (raining->VBG) (again->RB) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBD'), ('going', 'VBG'), ('back', 'RB'), ('out', 'IN'), ('though', 'IN')])
('tags -> ', '     (i->NN) (m->VBD) (going->VBG) (back->RB) (out->IN) (though->IN) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('re', 'VBP'), ('getting', 'VBG'), ('thunder', 'NN'), ('and', 'CC'), ('lightning', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('think', 'VBP'), ('you', 'PRP'), ('ll', 'VBP'), ('be', 'VB'), ('going', 'VBG'), ('back', 'RB'), ('out', 'RP'), ('again', 'RB')])
('tags -> ', '     (i->JJ) (think->VBP) (we->PRP) (re->VBP) (getting->VBG) (thunder->NN) (and->CC) (lightning->NN) (i->NN) (don->VBP) (t->NN) (think->VBP) (you->PRP) (ll->VBP) (be->VB) (going->VBG) (back->RB) (out->RP) (again->RB) ')
candidates to check:
2
('tags initial-> ', [('if', 'IN'), ('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('thunder', 'NN'), ('or', 'CC'), ('um', 'JJ'), ('if', 'IN'), ('there', 'EX'), ('s', 'JJ'), ('thunder', 'NN'), ('out', 'IN')])
('tags -> ', '     (if->IN) (there->EX) (s->VBZ) (no->DT) (thunder->NN) (or->CC) (um->JJ) (if->IN) (there->EX) (s->JJ) (thunder->NN) (out->IN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('to', 'TO'), ('be', 'VB'), ('outside', 'JJ'), ('in', 'IN'), ('thunder', 'NN'), ('and', 'CC'), ('lightning', 'NN'), ('do', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (to->TO) (be->VB) (outside->JJ) (in->IN) (thunder->NN) (and->CC) (lightning->NN) (do->VBP) (you->PRP) ')
candidates to check:
2
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('only', 'RB'), ('thunder', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (only->RB) (thunder->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
candidates to check:
4
('tags initial-> ', [('remember', 'VB'), ('the', 'DT'), ('other', 'JJ'), ('night', 'NN'), ('brian', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('thunder', 'NN'), ('and', 'CC'), ('lightning', 'NN')])
('tags -> ', '     (remember->VB) (the->DT) (other->JJ) (night->NN) (brian->IN) (all->PDT) (the->DT) (thunder->NN) (and->CC) (lightning->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('should', 'MD'), ('have', 'VB'), ('saw', 'VBD'), ('the', 'DT'), ('big', 'JJ'), ('mom', 'NN')])
('tags -> ', '     (you->PRP) (should->MD) (have->VB) (saw->VBD) (the->DT) (big->JJ) (mom->NN) ')
candidates to check:
2
descended from food: [['N'], 'butter', 31, 37]
descended from food: [['N'], 'noodles', 45, 52]
butter
butter butter 499
[('put', 'VB'), ('your', 'PRP$'), ('put', 'VB'), ('your', 'PRP$'), ('butter', 'NN'), ('on', 'IN'), ('the', 'DT'), ('noodles', 'NNS'), ('okay', 'VBP')]
['butter']
noodles
noodles noodles 138
[('put', 'VB'), ('your', 'PRP$'), ('put', 'VB'), ('your', 'PRP$'), ('butter', 'NN'), ('on', 'IN'), ('the', 'DT'), ('noodles', 'NNS'), ('okay', 'VBP')]
['noodles']
('tags initial-> ', [('put', 'VB'), ('your', 'PRP$'), ('put', 'VB'), ('your', 'PRP$'), ('butter', 'NN'), ('on', 'IN'), ('the', 'DT'), ('noodles', 'NNS'), ('okay', 'VBP')])
('tags -> ', '     (put->VB) (your->PRP$) (put->VB) (your->PRP$) (butter->NN) (on->IN) (the->DT) (noodles->NNS) (okay->VBP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('should', 'MD'), ('have', 'VB'), ('saw', 'VBN'), ('today', 'NN')])
('tags -> ', '     (you->PRP) (should->MD) (have->VB) (saw->VBN) (today->NN) ')
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD'), ('pouring', 'VBG'), ('hard', 'JJ'), ('coming', 'VBG'), ('down', 'RP'), ('hard', 'RB')])
('tags -> ', '     (it->PRP) (was->VBD) (pouring->VBG) (hard->JJ) (coming->VBG) (down->RP) (hard->RB) ')
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('outside', 'JJ')])
('tags -> ', '     (i->NN) (was->VBD) (outside->JJ) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('get', 'VB'), ('all', 'DT'), ('wet', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (get->VB) (all->DT) (wet->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('had', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('zzz', 'JJ'), ('my', 'PRP$'), ('zzz', 'NN')])
('tags -> ', '     (we->PRP) (had->VBD) (to->TO) (go->VB) (zzz->JJ) (my->PRP$) (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('riding', 'VBG'), ('my', 'PRP$'), ('bike', 'NN'), ('and', 'CC'), ('then', 'RB')])
('tags -> ', '     (i->NN) (was->VBD) (riding->VBG) (my->PRP$) (bike->NN) (and->CC) (then->RB) ')
candidates to check:
1
('tags initial-> ', [('who', 'WP'), ('put', 'VBD'), ('your', 'PRP$'), ('bike', 'NN'), ('away', 'RB')])
('tags -> ', '     (who->WP) (put->VBD) (your->PRP$) (bike->NN) (away->RB) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VB'), ('your', 'PRP$'), ('bike', 'NN'), ('huh', 'NN'), ('brian', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VB) (your->PRP$) (bike->NN) (huh->NN) (brian->NN) ')
candidates to check:
2
('tags initial-> ', [('he', 'PRP'), ('had', 'VBD'), ('his', 'PRP$'), ('big', 'JJ'), ('wheel', 'NN')])
('tags -> ', '     (he->PRP) (had->VBD) (his->PRP$) (big->JJ) (wheel->NN) ')
('tags initial-> ', [('not', 'RB'), ('my', 'PRP$'), ('big', 'JJ'), ('one', 'NN')])
('tags -> ', '     (not->RB) (my->PRP$) (big->JJ) (one->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('little', 'JJ'), ('bike', 'NN')])
('tags -> ', '     (the->DT) (little->JJ) (bike->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('not', 'RB'), ('the', 'DT'), ('big', 'JJ'), ('one', 'NN')])
('tags -> ', '     (not->RB) (the->DT) (big->JJ) (one->NN) ')
('tags initial-> ', [('i', 'NN'), ('hate', 'VBP'), ('the', 'DT')])
('tags -> ', '     (i->NN) (hate->VBP) (the->DT) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('liked', 'VBD'), ('that', 'IN'), ('nice', 'JJ'), ('black', 'JJ'), ('and', 'CC'), ('red', 'JJ'), ('bike', 'NN')])
('tags -> ', '     (you->PRP) (liked->VBD) (that->IN) (nice->JJ) (black->JJ) (and->CC) (red->JJ) (bike->NN) ')
candidates to check:
2
('tags initial-> ', [('bought', 'VBN'), ('you', 'PRP'), ('a', 'DT'), ('little', 'JJ'), ('basket', 'NN'), ('for', 'IN'), ('it', 'PRP'), ('didn', 'VBZ'), ('t', 'NN'), ('i', 'NN')])
('tags -> ', '     (bought->VBN) (you->PRP) (a->DT) (little->JJ) (basket->NN) (for->IN) (it->PRP) (didn->VBZ) (t->NN) (i->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('old', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (old->JJ) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('more', 'JJR'), ('sean', 'JJ')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (more->JJR) (sean->JJ) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (think->VBP) (so->RB) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('a', 'DT'), ('little', 'JJ')])
('tags -> ', '     (a->DT) (little->JJ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
6
('tags initial-> ', [('what', 'WP'), ('shall', 'MD'), ('we', 'PRP'), ('do', 'VB'), ('this', 'DT'), ('week', 'NN'), ('end', 'NN'), ('fourth', 'JJ'), ('of', 'IN'), ('july', 'NN')])
('tags -> ', '     (what->WP) (shall->MD) (we->PRP) (do->VB) (this->DT) (week->NN) (end->NN) (fourth->JJ) (of->IN) (july->NN) ')
('tags initial-> ', [('well', 'RB')])
('tags -> ', '     (well->RB) ')
candidates to check:
2
('tags initial-> ', [('when', 'WRB'), ('the', 'DT'), ('xxx', 'NNP'), ('taperecorder', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('come', 'VB'), ('on', 'IN')])
('tags -> ', '     (when->WRB) (the->DT) (xxx->NNP) (taperecorder->NN) (gon->NN) (na->TO) (come->VB) (on->IN) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('first', 'JJ')])
('tags -> ', '     (this->DT) (is->VBZ) (the->DT) (first->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('going', 'VBG'), ('to', 'TO'), ('come', 'VB'), ('on', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('going', 'VBG'), ('to', 'TO'), ('listen', 'VB'), ('to', 'TO'), ('us', 'PRP'), ('brian', 'VB')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (going->VBG) (to->TO) (come->VB) (on->IN) (it->PRP) (s->VBZ) (going->VBG) (to->TO) (listen->VB) (to->TO) (us->PRP) (brian->VB) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('today', 'NN'), ('s', 'VBD'), ('the', 'DT'), ('fir', 'NN'), ('st', 'VBD'), ('it', 'PRP'), ('s', 'VBZ'), ('listening', 'VBG'), ('to', 'TO'), ('us', 'PRP'), ('okay', 'VB')])
('tags -> ', '     (today->NN) (s->VBD) (the->DT) (fir->NN) (st->VBD) (it->PRP) (s->VBZ) (listening->VBG) (to->TO) (us->PRP) (okay->VB) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('playing', 'VBG'), ('you', 'PRP'), ('a', 'DT'), ('song', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (playing->VBG) (you->PRP) (a->DT) (song->NN) ')
candidates to check:
1
('tags initial-> ', [('brian', 'JJ'), ('tomorrow', 'NN'), ('is', 'VBZ'), ('today', 'NN'), ('s', 'VB'), ('the', 'DT'), ('first', 'JJ'), ('of', 'IN'), ('july', 'NN')])
('tags -> ', '     (brian->JJ) (tomorrow->NN) (is->VBZ) (today->NN) (s->VB) (the->DT) (first->JJ) (of->IN) (july->NN) ')
candidates to check:
1
('tags initial-> ', [('tomorrow', 'NN'), ('is', 'VBZ'), ('the', 'DT'), ('second', 'JJ')])
('tags -> ', '     (tomorrow->NN) (is->VBZ) (the->DT) (second->JJ) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('sunday', 'JJ'), ('s', 'VBP'), ('the', 'DT'), ('third', 'JJ'), ('and', 'CC'), ('then', 'RB'), ('monday', 'JJ'), ('brian', 'IN'), ('we', 'PRP'), ('light', 'VBD'), ('off', 'RP'), ('firecrackers', 'NNS'), ('at', 'IN'), ('night', 'NN')])
('tags -> ', '     (and->CC) (then->RB) (sunday->JJ) (s->VBP) (the->DT) (third->JJ) (and->CC) (then->RB) (monday->JJ) (brian->IN) (we->PRP) (light->VBD) (off->RP) (firecrackers->NNS) (at->IN) (night->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('have', 'VB'), ('some', 'DT'), ('firecrackers', 'NNS')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (have->VB) (some->DT) (firecrackers->NNS) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NNS'), ('hope', 'VBP'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ')])
('tags -> ', '     (i->NNS) (hope->VBP) (you->PRP) (don->VBP) (t->JJ) ')
('tags initial-> ', [('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (up->RB) (there->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (up->RB) (there->RB) ')
('tags initial-> ', [('and', 'CC'), ('one', 'CD')])
('tags -> ', '     (and->CC) (one->CD) ')
candidates to check:
4
snap
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1dfa06cb0>)
[('i', 'NNS'), ('have', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('those', 'DT'), ('snap', 'JJ'), ('things', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('throw', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('ground', 'NN')]
['snap']
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('those', 'DT'), ('snap', 'JJ'), ('things', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('throw', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('ground', 'NN')])
('tags -> ', '     (i->NNS) (have->VBP) (some->DT) (of->IN) (those->DT) (snap->JJ) (things->NNS) (that->IN) (you->PRP) (throw->VBP) (on->IN) (the->DT) (ground->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('they', 'PRP'), ('re', 'VBD'), ('right', 'RB'), ('up', 'IN'), ('there', 'RB')])
('tags -> ', '     (yeah->NN) (they->PRP) (re->VBD) (right->RB) (up->IN) (there->RB) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('firecrackers', 'NNS'), ('though', 'IN')])
('tags -> ', '     (they->PRP) (re->VBP) (not->RB) (firecrackers->NNS) (though->IN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('a', 'DT'), ('bite', 'NN'), ('brian', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (a->DT) (bite->NN) (brian->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('else', 'RB'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (what->WP) (else->RB) (we->PRP) (re->VBP) (going->VBG) (to->TO) (do->VB) ')
candidates to check:
2
('tags initial-> ', [('maybe', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('get', 'VB'), ('to', 'TO'), ('go', 'VB'), ('boating', 'NN'), ('again', 'RB')])
('tags -> ', '     (maybe->RB) (we->PRP) (ll->VBP) (get->VB) (to->TO) (go->VB) (boating->NN) (again->RB) ')
candidates to check:
4
('tags initial-> ', [('did', 'VBD'), ('uh', 'VB'), ('did', 'VBD'), ('you', 'PRP'), ('look', 'VB'), ('at', 'IN'), ('any', 'DT'), ('of', 'IN'), ('the', 'DT'), ('books', 'NNS'), ('from', 'IN'), ('the', 'DT'), ('library', 'NN'), ('today', 'NN')])
('tags -> ', '     (did->VBD) (uh->VB) (did->VBD) (you->PRP) (look->VB) (at->IN) (any->DT) (of->IN) (the->DT) (books->NNS) (from->IN) (the->DT) (library->NN) (today->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('take', 'VB'), ('them', 'PRP'), ('back', 'RP'), ('y', 'JJ'), ('ou', 'NN'), ('know', 'VBP')])
('tags -> ', '     (but->CC) (you->PRP) (have->VBP) (to->TO) (take->VB) (them->PRP) (back->RP) (y->JJ) (ou->NN) (know->VBP) ')
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('care', 'NN')])
('tags -> ', '     (well->RB) (i->JJ) (don->VBP) (t->NN) (care->NN) ')
candidates to check:
1
('tags initial-> ', [('today', 'NN')])
('tags -> ', '     (today->NN) ')
('tags initial-> ', [('not', 'RB'), ('yet', 'RB'), ('but', 'CC'), ('we', 'PRP'), ('better', 'JJR'), ('start', 'VB'), ('readin', 'NN'), ('g', 'NN'), ('th', 'NN'), ('em', 'NN')])
('tags -> ', '     (not->RB) (yet->RB) (but->CC) (we->PRP) (better->JJR) (start->VB) (readin->NN) (g->NN) (th->NN) (em->NN) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 18, 24]
('tags initial-> ', [('maybe', 'RB'), ('after', 'IN'), ('dinner', 'NN'), ('we', 'PRP'), ('can', 'MD'), ('do', 'VB'), ('another', 'DT'), ('one', 'NN')])
('tags -> ', '     (maybe->RB) (after->IN) (dinner->NN) (we->PRP) (can->MD) (do->VB) (another->DT) (one->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('of', 'IN'), ('the', 'DT'), ('books', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('brought', 'VBD'), ('maybe', 'RB'), ('brian', 'JJ'), ('and', 'CC'), ('then', 'RB'), ('another', 'DT'), ('one', 'NN'), ('that', 'WDT'), ('sean', 'VBZ'), ('got', 'VBD')])
('tags -> ', '     (one->CD) (of->IN) (the->DT) (books->NNS) (that->IN) (you->PRP) (brought->VBD) (maybe->RB) (brian->JJ) (and->CC) (then->RB) (another->DT) (one->NN) (that->WDT) (sean->VBZ) (got->VBD) ')
('tags initial-> ', [('then', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('do', 'VB'), ('another', 'DT'), ('one', 'CD'), ('then', 'RB'), ('i', 'VBZ'), ('got', 'VBD'), ('and', 'CC'), ('then', 'RB'), ('sean', 'VB'), ('then', 'RB'), ('me', 'PRP'), ('me', 'PRP'), ('then', 'RB')])
('tags -> ', '     (then->RB) (we->PRP) (ll->VBP) (do->VB) (another->DT) (one->CD) (then->RB) (i->VBZ) (got->VBD) (and->CC) (then->RB) (sean->VB) (then->RB) (me->PRP) (me->PRP) (then->RB) ')
candidates to check:
2
('tags initial-> ', [('sean', 'JJ'), ('when', 'WRB'), ('we', 'PRP'), ('have', 'VBP'), ('time', 'NN'), ('we', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('take', 'VBP'), ('that', 'IN'), ('many', 'JJ'), ('out', 'RP')])
('tags -> ', '     (sean->JJ) (when->WRB) (we->PRP) (have->VBP) (time->NN) (we->PRP) (didn->VBP) (t->JJ) (take->VBP) (that->IN) (many->JJ) (out->RP) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('enough', 'JJ')])
('tags -> ', '     (we->PRP) (have->VBP) (enough->JJ) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('raining', 'VBG')])
('tags -> ', '     (is->VBZ) (it->PRP) (raining->VBG) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('raining', 'VBG'), ('out', 'RP')])
('tags -> ', '     (is->VBZ) (it->PRP) (raining->VBG) (out->RP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('sean', 'NN'), ('are', 'VBP'), ('you', 'PRP'), ('done', 'VBN'), ('eating', 'VBG')])
('tags -> ', '     (sean->NN) (are->VBP) (you->PRP) (done->VBN) (eating->VBG) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('go', 'VB'), ('out', 'RP')])
('tags -> ', '     (can->MD) (i->VB) (go->VB) (out->RP) ')
candidates to check:
2
descended from food: [['N'], 'applesauce', 20, 30]
applesauce
applesauce applesauce 76
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('applesauce', 'NN'), ('or', 'CC'), ('somethin', 'JJ'), ('g', 'NN')]
['applesauce']
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('applesauce', 'NN'), ('or', 'CC'), ('somethin', 'JJ'), ('g', 'NN')])
('tags -> ', '     (you->PRP) (want->VBP) (some->DT) (applesauce->NN) (or->CC) (somethin->JJ) (g->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'dessert', 6, 13]
('tags initial-> ', [('dessert', 'NN')])
('tags -> ', '     (dessert->NN) ')
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('wait', 'NN'), ('un', 'NN'), ('til', 'NN'), ('later', 'RB')])
('tags -> ', '     (you->PRP) (wan->VBP) (t->JJ) (t->NN) (a->DT) (wait->NN) (un->NN) (til->NN) (later->RB) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB')])
('tags -> ', '     (can->MD) (i->VB) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('raining', 'VBG'), ('outside', 'JJ')])
('tags -> ', '     (is->VBZ) (it->PRP) (raining->VBG) (outside->JJ) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('doesn', 'NN'), ('t', 'NN'), ('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (doesn->NN) (t->NN) (look->NN) (it->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB')])
('tags -> ', '     (can->MD) (i->VB) ')
candidates to check:
3
descended from food: [['N'], 'supper', 59, 65]
('tags initial-> ', [('your', 'PRP$'), ('plate', 'NN'), ('s', 'CC'), ('full', 'JJ'), ('you', 'PRP'), ('ll', 'VBP'), ('have', 'VBP'), ('to', 'TO'), ('wait', 'VB'), ('un', 'JJ'), ('til', 'NN'), ('we', 'PRP'), ('eat', 'VBP'), ('supper', 'JJR'), ('and', 'CC'), ('then', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('go', 'VB'), ('out', 'RP')])
('tags -> ', '     (your->PRP$) (plate->NN) (s->CC) (full->JJ) (you->PRP) (ll->VBP) (have->VBP) (to->TO) (wait->VB) (un->JJ) (til->NN) (we->PRP) (eat->VBP) (supper->JJR) (and->CC) (then->RB) (you->PRP) (can->MD) (go->VB) (out->RP) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('mine', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (mine->NN) ')
('tags initial-> ', [('brian', 'NN'), ('you', 'PRP'), ('finish', 'VBP'), ('first', 'RB')])
('tags -> ', '     (brian->NN) (you->PRP) (finish->VBP) (first->RB) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('almost', 'RB'), ('done', 'VBN')])
('tags -> ', '     (you->PRP) (re->VBP) (almost->RB) (done->VBN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
('tags initial-> ', [('is', 'VBZ'), ('this', 'DT'), ('a', 'DT'), ('cap', 'NN'), ('gun', 'NN')])
('tags -> ', '     (is->VBZ) (this->DT) (a->DT) (cap->NN) (gun->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('do', 'VBP'), ('the', 'DT'), ('cackles', 'NNS'), ('in', 'IN')])
('tags -> ', '     (you->PRP) (do->VBP) (the->DT) (cackles->NNS) (in->IN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('mine', 'JJ'), ('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (it->PRP) (s->VBZ) (not->RB) (mine->JJ) (is->VBZ) (it->PRP) ')
('tags initial-> ', [('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (in->IN) (here->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('way', 'NN')])
('tags -> ', '     (this->DT) (way->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('done', 'VBN'), ('with', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('legos', 'NN')])
('tags -> ', '     (you->PRP) (done->VBN) (with->IN) (all->PDT) (the->DT) (legos->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'VB'), ('na', 'TO'), ('still', 'RB'), ('play', 'VB'), ('with', 'IN'), ('th', 'JJ'), ('em', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->VB) (na->TO) (still->RB) (play->VB) (with->IN) (th->JJ) (em->NN) ')
('tags initial-> ', [('okay', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('forget', 'NN'), ('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('pick', 'VB'), ('them', 'PRP'), ('all', 'DT'), ('up', 'RB'), ('after', 'IN'), ('we', 'PRP'), ('re', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (okay->JJ) (don->NN) (t->NN) (forget->NN) (you->PRP) (have->VBP) (to->TO) (pick->VB) (them->PRP) (all->DT) (up->RB) (after->IN) (we->PRP) (re->VBP) (done->VBN) ')
candidates to check:
1
descended from food: [['N'], 'supper', 12, 18]
('tags initial-> ', [('after', 'IN'), ('supper', 'JJR'), ('you', 'PRP'), ('can', 'MD'), ('finish', 'VB'), ('playin', 'NN'), ('g', 'NN')])
('tags -> ', '     (after->IN) (supper->JJR) (you->PRP) (can->MD) (finish->VB) (playin->NN) (g->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('show', 'VB'), ('me', 'PRP'), ('what', 'WP'), ('you', 'PRP'), ('made', 'VBD')])
('tags -> ', '     (show->VB) (me->PRP) (what->WP) (you->PRP) (made->VBD) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('find', 'VB'), ('the', 'DT'), ('little', 'JJ'), ('house', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (find->VB) (the->DT) (little->JJ) (house->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
candidates to check:
2
descended from food: [['N'], 'supper', 33, 39]
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('finish', 'VB'), ('eating', 'VBG'), ('your', 'PRP$'), ('supper', 'NN'), ('before', 'IN'), ('you', 'PRP'), ('play', 'VBP'), ('with', 'IN'), ('the', 'DT'), ('gun', 'NN'), ('sean', 'NN')])
('tags -> ', '     (can->MD) (you->PRP) (finish->VB) (eating->VBG) (your->PRP$) (supper->NN) (before->IN) (you->PRP) (play->VBP) (with->IN) (the->DT) (gun->NN) (sean->NN) ')
candidates to check:
1
('tags initial-> ', [('brain', 'NN')])
('tags -> ', '     (brain->NN) ')
candidates to check:
1
('tags initial-> ', [('shoots', 'NNS')])
('tags -> ', '     (shoots->NNS) ')
('tags initial-> ', [('brian', 'NN')])
('tags -> ', '     (brian->NN) ')
candidates to check:
1
('tags initial-> ', [('put', 'VBD'), ('the', 'DT'), ('toy', 'NN'), ('down', 'RP')])
('tags -> ', '     (put->VBD) (the->DT) (toy->NN) (down->RP) ')
('tags initial-> ', [('and', 'CC'), ('then', 'RB'), ('finish', 'VB'), ('and', 'CC'), ('then', 'RB'), ('play', 'VB')])
('tags -> ', '     (and->CC) (then->RB) (finish->VB) (and->CC) (then->RB) (play->VB) ')
candidates to check:
1
('tags initial-> ', [('shoots', 'NNS')])
('tags -> ', '     (shoots->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('ryan', 'NN')])
('tags -> ', '     (ryan->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('brian', 'NN')])
('tags -> ', '     (brian->NN) ')
('tags initial-> ', [('oh', 'UH'), ('brian', 'NN')])
('tags -> ', '     (oh->UH) (brian->NN) ')
('tags initial-> ', [('one', 'CD')])
('tags -> ', '     (one->CD) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('two', 'CD')])
('tags -> ', '     (two->CD) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('three', 'CD')])
('tags -> ', '     (three->CD) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('would', 'MD'), ('like', 'VB'), ('to', 'TO'), ('hold', 'VB'), ('the', 'DT'), ('toy', 'NN')])
('tags -> ', '     (i->NN) (would->MD) (like->VB) (to->TO) (hold->VB) (the->DT) (toy->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('un', 'JJ'), ('til', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('eating', 'NN')])
('tags -> ', '     (un->JJ) (til->NN) (you->PRP) (re->VBP) (done->VBN) (eating->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('more', 'JJR')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (any->DT) (more->JJR) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (you->PRP) (re->VBP) (all->DT) (done->VBN) ')
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('only', 'RB'), ('one', 'CD'), ('bite', 'NN'), ('left', 'VBD'), ('in', 'IN'), ('here', 'RB')])
('tags -> ', '     (there->RB) (s->VBZ) (only->RB) (one->CD) (bite->NN) (left->VBD) (in->IN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('shoots', 'NNS')])
('tags -> ', '     (shoots->NNS) ')
candidates to check:
1
('tags initial-> ', [('two', 'CD'), ('bites', 'NNS')])
('tags -> ', '     (two->CD) (bites->NNS) ')
('tags initial-> ', [('look', 'NN')])
('tags -> ', '     (look->NN) ')
candidates to check:
1
('tags initial-> ', [('two', 'CD'), ('bites', 'NNS')])
('tags -> ', '     (two->CD) (bites->NNS) ')
candidates to check:
1
('tags initial-> ', [('shoots', 'NNS')])
('tags -> ', '     (shoots->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('finish', 'VB'), ('that', 'DT'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (you->PRP) (can->MD) (finish->VB) (that->DT) (for->IN) (me->PRP) ')
('tags initial-> ', [('please', 'NN')])
('tags -> ', '     (please->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('one', 'CD'), ('bite', 'NN')])
('tags -> ', '     (one->CD) (bite->NN) ')
candidates to check:
1
('tags initial-> ', [('how', 'WRB'), ('a', 'DT'), ('bout', 'NN'), ('one', 'CD'), ('bite', 'NN'), ('not', 'RB'), ('two', 'CD')])
('tags -> ', '     (how->WRB) (a->DT) (bout->NN) (one->CD) (bite->NN) (not->RB) (two->CD) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('okay', 'NN'), ('and', 'CC'), ('if', 'IN'), ('it', 'PRP'), ('stops', 'VBZ'), ('rainin', 'JJ'), ('g', 'NN'), ('i', 'NN'), ('ll', 'VBP'), ('take', 'VB'), ('you', 'PRP'), ('outside', 'RB'), ('again', 'RB')])
('tags -> ', '     (okay->NN) (and->CC) (if->IN) (it->PRP) (stops->VBZ) (rainin->JJ) (g->NN) (i->NN) (ll->VBP) (take->VB) (you->PRP) (outside->RB) (again->RB) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('magic', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (magic->JJ) ')
candidates to check:
2
('tags initial-> ', [('cat', 'NN'), ('s', 'NN'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('your', 'PRP$'), ('legos', 'NN')])
('tags -> ', '     (cat->NN) (s->NN) (going->VBG) (to->TO) (get->VB) (your->PRP$) (legos->NN) ')
candidates to check:
1
('tags initial-> ', [('shoots', 'NNS')])
('tags -> ', '     (shoots->NNS) ')
('tags initial-> ', [('one', 'CD'), ('more', 'JJR'), ('bite', 'NN')])
('tags -> ', '     (one->CD) (more->JJR) (bite->NN) ')
('tags initial-> ', [('one', 'CD'), ('more', 'JJR'), ('bite', 'NN')])
('tags -> ', '     (one->CD) (more->JJR) (bite->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('freeze', 'NN')])
('tags -> ', '     (freeze->NN) ')
candidates to check:
1
('tags initial-> ', [('wan', 'NN'), ('t', 'NN'), ('i', 'NN'), ('put', 'VBD'), ('a', 'DT'), ('cap', 'NN'), ('in', 'IN'), ('this', 'DT'), ('and', 'CC'), ('shoot', 'NN'), ('you', 'PRP')])
('tags -> ', '     (wan->NN) (t->NN) (i->NN) (put->VBD) (a->DT) (cap->NN) (in->IN) (this->DT) (and->CC) (shoot->NN) (you->PRP) ')
('tags initial-> ', [('that', 'DT'), ('wouldn', 'VBD'), ('t', 'JJ'), ('be', 'VB'), ('very', 'RB'), ('nice', 'RB'), ('would', 'MD'), ('it', 'PRP')])
('tags -> ', '     (that->DT) (wouldn->VBD) (t->JJ) (be->VB) (very->RB) (nice->RB) (would->MD) (it->PRP) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('silly', 'RB'), ('kid', 'NN')])
('tags -> ', '     (silly->RB) (kid->NN) ')
('tags initial-> ', [('ow', 'NN')])
('tags -> ', '     (ow->NN) ')
loading solution set
calculating
set([(452, (20, 30)), (148, (45, 52)), (148, (31, 37))])
[((148, (31, 37)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (45, 52)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((452, (20, 30)), '*MOT:\tyou want some applesauce or somethin(g) ?\n')]
set([(560, (12, 18)), (148, (45, 52)), (487, (59, 65)), (459, (6, 13)), (452, (20, 30)), (148, (31, 37)), (336, (27, 31)), (576, (33, 39)), (394, (18, 24))])
[((148, (31, 37)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (45, 52)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((336, (27, 31)), '*MOT:\tI have some of those snap things that you throw on the ground .\n'), ((394, (18, 24)), '*MOT:\tmaybe after dinner we can do another one (.) ?\n'), ((452, (20, 30)), '*MOT:\tyou want some applesauce or somethin(g) ?\n'), ((459, (6, 13)), '*MOT:\tdessert ?\n'), ((487, (59, 65)), "*MOT:\tyour plate's full you'll have_to wait (un)til we eat supper and then you can go out .\n"), ((560, (12, 18)), '*MOT:\tafter supper you can finish playin(g) .\n'), ((576, (33, 39)), '*MOT:\tcan you finish eating your supper before you play with the gun Sean ?\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'noodles', 'applesauce'])
predicted labels:
set(['butter', 'dessert', 'dinner', 'applesauce', 'supper', 'snap', 'noodles'])
file:HSLLD/HV1/MT//brimt1.cha
precision: 0.428571428571
recall: 1.0
true positives:['applesauce', 'butter', 'noodles']
false positives: ['dessert', 'dinner', 'snap', 'supper']
false negatives: []
# true pos: 3
# false pos: 4
# false neg: 0
HSLLD/HV1/MT//zanmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//zanmt1.cha
HSLLD/HV1/MT//todmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//todmt1.cha
HSLLD/HV1/MT//jasmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jasmt1.cha
HSLLD/HV1/MT//paumt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//paumt1.cha
HSLLD/HV1/MT//chamt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//chamt1.cha
HSLLD/HV1/MT//gilmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('make', 'VB'), ('some', 'DT'), ('phone', 'NN'), ('calls', 'NNS')])
('tags -> ', '     (come->VBN) (on->IN) (make->VB) (some->DT) (phone->NN) (calls->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
4
('tags initial-> ', [('bro', 'NN'), ('there', 'EX'), ('goes', 'VBZ'), ('a', 'DT'), ('fire', 'NN'), ('hat', 'NN')])
('tags -> ', '     (bro->NN) (there->EX) (goes->VBZ) (a->DT) (fire->NN) (hat->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('always', 'RB'), ('like', 'IN'), ('hats', 'NNS'), ('well', 'RB'), ('here', 'RB')])
('tags -> ', '     (you->PRP) (always->RB) (like->IN) (hats->NNS) (well->RB) (here->RB) ')
('tags initial-> ', [('here', 'RB'), ('goes', 'VBZ'), ('one', 'CD')])
('tags -> ', '     (here->RB) (goes->VBZ) (one->CD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('doesn', 'NN'), ('t', 'NN'), ('he', 'PRP'), ('look', 'VBZ'), ('like', 'IN'), ('a', 'DT'), ('fireman', 'NN'), ('huh', 'NN')])
('tags -> ', '     (doesn->NN) (t->NN) (he->PRP) (look->VBZ) (like->IN) (a->DT) (fireman->NN) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('chi', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('an', 'DT'), ('old', 'JJ'), ('lady', 'NN'), ('s', 'VBZ'), ('hat', 'WP')])
('tags -> ', '     (chi->NN) (that->WDT) (s->VBZ) (an->DT) (old->JJ) (lady->NN) (s->VBZ) (hat->WP) ')
('tags initial-> ', [('where', 'WRB'), ('they', 'PRP'), ('get', 'VBP'), ('that', 'IN'), ('from', 'IN')])
('tags -> ', '     (where->WRB) (they->PRP) (get->VBP) (that->IN) (from->IN) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('that', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (like->VBP) (that->DT) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('likes', 'VBZ'), ('that', 'IN'), ('the', 'DT'), ('hat', 'NN')])
('tags -> ', '     (she->PRP) (likes->VBZ) (that->IN) (the->DT) (hat->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('she', 'PRP'), ('thinks', 'VBZ'), ('this', 'DT'), ('is', 'VBZ'), ('funny', 'JJ')])
('tags -> ', '     (she->PRP) (thinks->VBZ) (this->DT) (is->VBZ) (funny->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('let', 'NN'), ('s', 'NN'), ('build', 'VB'), ('some', 'DT'), ('blocks', 'NNS'), ('chi', 'VBP')])
('tags -> ', '     (come->VBN) (on->IN) (let->NN) (s->NN) (build->VB) (some->DT) (blocks->NNS) (chi->VBP) ')
candidates to check:
1
descended from food: [['N'], 'tea', 29, 32]
tea
tea tea 2
[('what', 'WP'), ('about', 'IN'), ('having', 'VBG'), ('some', 'DT'), ('tea', 'NN')]
['tea']
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('having', 'VBG'), ('some', 'DT'), ('tea', 'NN')])
('tags -> ', '     (what->WP) (about->IN) (having->VBG) (some->DT) (tea->NN) ')
('tags initial-> ', [('eeee', 'NN'), ('b', 'NN'), ('eehee', 'NN'), ('b', 'NN')])
('tags -> ', '     (eeee->NN) (b->NN) (eehee->NN) (b->NN) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('let', 'NN'), ('s', 'PRP'), ('get', 'VB'), ('organized', 'VBN'), ('here', 'RB')])
('tags -> ', '     (come->VBN) (on->IN) (let->NN) (s->PRP) (get->VB) (organized->VBN) (here->RB) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
('tags initial-> ', [('eee', 'NN'), ('b', 'NN'), ('eee', 'NN'), ('b', 'NN'), ('eee', 'NN'), ('b', 'NN')])
('tags -> ', '     (eee->NN) (b->NN) (eee->NN) (b->NN) (eee->NN) (b->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('here', 'RB'), ('chi', 'JJ'), ('look', 'VBP'), ('xxx', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (here->RB) (chi->JJ) (look->VBP) (xxx->JJ) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('cooking', 'NN')])
('tags -> ', '     (xxx->NN) (cooking->NN) ')
candidates to check:
1
descended from food: [['N'], 'tea', 36, 39]
tea
tea tea 2
[('she', 'PRP'), ('s', 'VBD'), ('always', 'RB'), ('servin', 'VBN'), ('g', 'NN'), ('me', 'PRP'), ('tea', 'IN')]
['tea']
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('always', 'RB'), ('servin', 'VBN'), ('g', 'NN'), ('me', 'PRP'), ('tea', 'IN')])
('tags -> ', '     (she->PRP) (s->VBD) (always->RB) (servin->VBN) (g->NN) (me->PRP) (tea->IN) ')
('tags initial-> ', [('you', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('do', 'VB'), ('some', 'DT'), ('cooking', 'NN'), ('chi', 'NN')])
('tags -> ', '     (you->PRP) (going->VBG) (to->TO) (do->VB) (some->DT) (cooking->NN) (chi->NN) ')
('tags initial-> ', [('2', 'CD'), ('don', 'JJ'), ('t', 'NN'), ('break', 'NN'), ('it', 'PRP')])
('tags -> ', '     (2->CD) (don->JJ) (t->NN) (break->NN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('build', 'VB'), ('something', 'NN')])
('tags -> ', '     (you->PRP) (gon->VBP) (na->TO) (build->VB) (something->NN) ')
('tags initial-> ', [('2', 'CD'), ('no', 'DT')])
('tags -> ', '     (2->CD) (no->DT) ')
('tags initial-> ', [('you', 'PRP'), ('zzz', 'VBP')])
('tags -> ', '     (you->PRP) (zzz->VBP) ')
('tags initial-> ', [('okay', 'NN'), ('chi', 'NN')])
('tags -> ', '     (okay->NN) (chi->NN) ')
('tags initial-> ', [('2', 'CD'), ('ew', 'NN'), ('you', 'PRP'), ('look', 'VBP'), ('ugly', 'RB')])
('tags -> ', '     (2->CD) (ew->NN) (you->PRP) (look->VBP) (ugly->RB) ')
('tags initial-> ', [('ew', 'NN'), ('you', 'PRP'), ('look', 'VBP'), ('ugly', 'RB')])
('tags -> ', '     (ew->NN) (you->PRP) (look->VBP) (ugly->RB) ')
('tags initial-> ', [('2', 'CD'), ('i', 'JJ'), ('don', 'NN'), ('t', 'NN')])
('tags -> ', '     (2->CD) (i->JJ) (don->NN) (t->NN) ')
candidates to check:
3
('tags initial-> ', [('see', 'VB'), ('bro', 'NN'), ('is', 'VBZ'), ('enjoying', 'VBG'), ('the', 'DT'), ('toys', 'NNS'), ('more', 'JJR'), ('than', 'IN'), ('you', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (see->VB) (bro->NN) (is->VBZ) (enjoying->VBG) (the->DT) (toys->NNS) (more->JJR) (than->IN) (you->PRP) (are->VBP) ')
('tags initial-> ', [('that', 'DT'), ('don', 'VBZ'), ('t', 'JJ'), ('go', 'VB'), ('in', 'IN'), ('there', 'RB')])
('tags -> ', '     (that->DT) (don->VBZ) (t->JJ) (go->VB) (in->IN) (there->RB) ')
candidates to check:
1
('tags initial-> ', [('1', 'CD'), ('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('phone', 'NN')])
('tags -> ', '     (1->CD) (you->PRP) (like->IN) (the->DT) (phone->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('he', 'PRP'), ('likes', 'VBZ'), ('the', 'DT'), ('phone', 'NN')])
('tags -> ', '     (yeah->NN) (he->PRP) (likes->VBZ) (the->DT) (phone->NN) ')
('tags initial-> ', [('see', 'VB'), ('xxx', 'IN'), ('they', 'PRP'), ('were', 'VBD'), ('going', 'VBG'), ('like', 'IN'), ('that', 'DT'), ('huh', 'NN')])
('tags -> ', '     (see->VB) (xxx->IN) (they->PRP) (were->VBD) (going->VBG) (like->IN) (that->DT) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('chi', 'NN'), ('a', 'DT'), ('call', 'NN')])
('tags -> ', '     (give->VB) (chi->NN) (a->DT) (call->NN) ')
candidates to check:
1
('tags initial-> ', [('tell', 'VB'), ('chi', 'NNS'), ('to', 'TO'), ('pick', 'VB'), ('up', 'RP'), ('her', 'PRP$'), ('phone', 'NN')])
('tags -> ', '     (tell->VB) (chi->NNS) (to->TO) (pick->VB) (up->RP) (her->PRP$) (phone->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('this', 'DT'), ('hat', 'NN')])
('tags -> ', '     (you->PRP) (like->IN) (this->DT) (hat->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('they', 'PRP'), ('ll', 'VBP'), ('get', 'VB'), ('back', 'RB'), ('this', 'DT'), ('hat', 'NN'), ('from', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (they->PRP) (ll->VBP) (get->VB) (back->RB) (this->DT) (hat->NN) (from->IN) (you->PRP) ')
candidates to check:
2
('tags initial-> ', [('chi', 'NNS'), ('do', 'VBP'), ('you', 'PRP'), ('like', 'IN'), ('to', 'TO'), ('build', 'VB'), ('blocks', 'NNS')])
('tags -> ', '     (chi->NNS) (do->VBP) (you->PRP) (like->IN) (to->TO) (build->VB) (blocks->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('2', 'CD'), ('come', 'VBN'), ('on', 'IN'), ('cook', 'NN')])
('tags -> ', '     (2->CD) (come->VBN) (on->IN) (cook->NN) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('wan', 'VBP'), ('na', 'TO'), ('build', 'VB')])
('tags -> ', '     (no->DT) (i->NN) (wan->VBP) (na->TO) (build->VB) ')
('tags initial-> ', [('i', 'NN'), ('wan', 'VBP'), ('na', 'TO'), ('build', 'VB')])
('tags -> ', '     (i->NN) (wan->VBP) (na->TO) (build->VB) ')
('tags initial-> ', [('2', 'CD'), ('want', 'VBP'), ('some', 'DT')])
('tags -> ', '     (2->CD) (want->VBP) (some->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('build', 'JJ'), ('something', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (want->VBP) (build->JJ) (something->NN) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN')])
('tags -> ', '     (don->NN) (t->NN) ')
candidates to check:
2
('tags initial-> ', [('stop', 'NN'), ('bro', 'NN')])
('tags -> ', '     (stop->NN) (bro->NN) ')
('tags initial-> ', [('2', 'CD'), ('what', 'WP'), ('did', 'VBD'), ('i', 'VB'), ('do', 'VB')])
('tags -> ', '     (2->CD) (what->WP) (did->VBD) (i->VB) (do->VB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('taking', 'VBG'), ('my', 'PRP$'), ('stuff', 'NN')])
('tags -> ', '     (you->PRP) (taking->VBG) (my->PRP$) (stuff->NN) ')
('tags initial-> ', [('2', 'CD'), ('it', 'PRP'), ('isn', 'JJ'), ('t', 'NN'), ('yours', 'NNS')])
('tags -> ', '     (2->CD) (it->PRP) (isn->JJ) (t->NN) (yours->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (xxx->NN) ')
('tags initial-> ', [('2', 'CD'), ('xxx', 'NN')])
('tags -> ', '     (2->CD) (xxx->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('2', 'CD'), ('don', 'JJ'), ('t', 'NN'), ('break', 'NN'), ('it', 'PRP')])
('tags -> ', '     (2->CD) (don->JJ) (t->NN) (break->NN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('2', 'CD'), ('xxx', 'JJ'), ('break', 'NN'), ('it', 'PRP')])
('tags -> ', '     (2->CD) (xxx->JJ) (break->NN) (it->PRP) ')
('tags initial-> ', [('2', 'CD'), ('told', 'VBD'), ('you', 'PRP'), ('not', 'RB'), ('to', 'TO'), ('break', 'VB'), ('it', 'PRP')])
('tags -> ', '     (2->CD) (told->VBD) (you->PRP) (not->RB) (to->TO) (break->VB) (it->PRP) ')
('tags initial-> ', [('already', 'RB'), ('did', 'VBD')])
('tags -> ', '     (already->RB) (did->VBD) ')
('tags initial-> ', [('wh', 'NN'), ('oo', 'MD'), ('ps', 'VB'), ('wh', 'JJ'), ('oo', 'NNS'), ('ps', 'VBP')])
('tags -> ', '     (wh->NN) (oo->MD) (ps->VB) (wh->JJ) (oo->NNS) (ps->VBP) ')
('tags initial-> ', [('this', 'DT'), ('go', 'VBP'), ('in', 'IN'), ('there', 'RB')])
('tags -> ', '     (this->DT) (go->VBP) (in->IN) (there->RB) ')
('tags initial-> ', [('xxx', 'JJ'), ('wh', 'NN'), ('oop', 'NN'), ('s', 'NN')])
('tags -> ', '     (xxx->JJ) (wh->NN) (oop->NN) (s->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('2', 'CD'), ('i', 'NN'), ('want', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('them', 'PRP'), ('blocks', 'NNS'), ('chi', 'VBP'), ('is', 'VBZ'), ('playing', 'VBG'), ('with', 'IN')])
('tags -> ', '     (2->CD) (i->NN) (want->VBP) (one->CD) (of->IN) (them->PRP) (blocks->NNS) (chi->VBP) (is->VBZ) (playing->VBG) (with->IN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('2', 'CD'), ('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (2->CD) (thank->NN) (you->PRP) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('bro', 'NN')])
('tags -> ', '     (here->RB) (bro->NN) ')
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('he', 'PRP'), ('go', 'VB')])
('tags -> ', '     (where->WRB) (did->VBD) (he->PRP) (go->VB) ')
candidates to check:
1
('tags initial-> ', [('kitchen', 'NN')])
('tags -> ', '     (kitchen->NN) ')
candidates to check:
2
('tags initial-> ', [('go', 'VB'), ('get', 'NN'), ('bro', 'NN')])
('tags -> ', '     (go->VB) (get->NN) (bro->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('take', 'VB'), ('come', 'VBN'), ('here', 'RB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (take->VB) (come->VBN) (here->RB) ')
('tags initial-> ', [('1', 'CD'), ('zzz', 'NN')])
('tags -> ', '     (1->CD) (zzz->NN) ')
('tags initial-> ', [('come', 'NN'), ('here', 'RB')])
('tags -> ', '     (come->NN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('swipe', 'VBD'), ('the', 'DT'), ('toys', 'NNS')])
('tags -> ', '     (don->NN) (t->NN) (swipe->VBD) (the->DT) (toys->NNS) ')
('tags initial-> ', [('come', 'NN'), ('here', 'RB')])
('tags -> ', '     (come->NN) (here->RB) ')
loading solution set
calculating
set([(121, (36, 39)), (90, (29, 32))])
[((90, (29, 32)), '*MOT:\twhat about having some tea ?\n'), ((121, (36, 39)), "*MOT:\tshe's always servin(g) me [!] tea (.) .\n")]
set([(121, (36, 39)), (90, (29, 32))])
[((90, (29, 32)), '*MOT:\twhat about having some tea ?\n'), ((121, (36, 39)), "*MOT:\tshe's always servin(g) me [!] tea (.) .\n")]
calculating accuracy and recall
correct labels:
set(['tea'])
predicted labels:
set(['tea'])
file:HSLLD/HV1/MT//gilmt1.cha
precision: 1.0
recall: 1.0
true positives:['tea']
false positives: []
false negatives: []
# true pos: 1
# false pos: 0
# false neg: 0
HSLLD/HV1/MT//tamtp1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//tamtp1.cha
HSLLD/HV1/MT//aimmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('talk', 'VB'), ('d', 'NN'), ('is', 'VBZ'), ('is', 'VBZ'), ('is', 'VBZ'), ('there', 'RB'), ('blinkin', 'JJ'), ('g', 'NNS'), ('too', 'RB')])
('tags -> ', '     (it->PRP) (s->VBZ) (not->RB) (gon->VB) (na->TO) (talk->VB) (d->NN) (is->VBZ) (is->VBZ) (is->VBZ) (there->RB) (blinkin->JJ) (g->NNS) (too->RB) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBP'), ('there', 'EX'), ('blinkin', 'JJ'), ('g', 'NN')])
('tags -> ', '     (that->DT) (s->VBP) (there->EX) (blinkin->JJ) (g->NN) ')
('tags initial-> ', [('and', 'CC'), ('is', 'VBZ'), ('off', 'RP')])
('tags -> ', '     (and->CC) (is->VBZ) (off->RP) ')
('tags initial-> ', [('xxx', 'NNS'), ('off', 'RP')])
('tags -> ', '     (xxx->NNS) (off->RP) ')
('tags initial-> ', [('that', 'DT'), ('is', 'VBZ'), ('off', 'RP')])
('tags -> ', '     (that->DT) (is->VBZ) (off->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'JJ'), ('look', 'VB'), ('this', 'DT'), ('off', 'RP')])
('tags -> ', '     (daddy->JJ) (look->VB) (this->DT) (off->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('off', 'IN')])
('tags -> ', '     (off->IN) ')
('tags initial-> ', [('off', 'IN')])
('tags -> ', '     (off->IN) ')
('tags initial-> ', [('off', 'IN')])
('tags -> ', '     (off->IN) ')
('tags initial-> ', [('off', 'IN'), ('off', 'RP'), ('off', 'RP'), ('off', 'RP')])
('tags -> ', '     (off->IN) (off->RP) (off->RP) (off->RP) ')
candidates to check:
3
('tags initial-> ', [('daddy', 'JJ'), ('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (daddy->JJ) (look->NN) (it->PRP) ')
('tags initial-> ', [('off', 'IN'), ('off', 'RP'), ('off', 'RP'), ('off', 'RP')])
('tags -> ', '     (off->IN) (off->RP) (off->RP) (off->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN'), ('aimee', 'NN')])
('tags -> ', '     (okay->NN) (aimee->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('go', 'VB'), ('sit', 'NN'), ('down', 'RP')])
('tags -> ', '     (go->VB) (sit->NN) (down->RP) ')
candidates to check:
3
descended from food: [['N'], 'supper', 12, 18]
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('supper', 'JJR'), ('time', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (supper->JJR) (time->NN) ')
('tags initial-> ', [('off', 'IN'), ('off', 'RP'), ('off', 'RP'), ('off', 'RP'), ('off', 'RP')])
('tags -> ', '     (off->IN) (off->RP) (off->RP) (off->RP) (off->RP) ')
('tags initial-> ', [('okay', 'NN'), ('aimee', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('enough', 'JJ')])
('tags -> ', '     (okay->NN) (aimee->NN) (that->WDT) (s->VBZ) (enough->JJ) ')
('tags initial-> ', [('oin', 'NN'), ('wp', 'NN'), ('oin', 'NN'), ('wp', 'NN'), ('oin', 'NN'), ('wp', 'NN')])
('tags -> ', '     (oin->NN) (wp->NN) (oin->NN) (wp->NN) (oin->NN) (wp->NN) ')
('tags initial-> ', [('aimee', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('enough', 'JJ')])
('tags -> ', '     (aimee->NN) (that->WDT) (s->VBZ) (enough->JJ) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('the', 'DT'), ('pots', 'NNS'), ('down', 'RP')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (put->VB) (the->DT) (pots->NNS) (down->RP) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('blouse', 'NN'), ('is', 'VBZ'), ('dirty', 'JJ')])
('tags -> ', '     (that->DT) (blouse->NN) (is->VBZ) (dirty->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (need->VBP) (it->PRP) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('put', 'VBD'), ('it', 'PRP'), ('on', 'IN')])
('tags -> ', '     (don->NN) (t->NN) (put->VBD) (it->PRP) (on->IN) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('to', 'TO'), ('put', 'VB'), ('it', 'PRP'), ('on', 'IN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (need->VBP) (to->TO) (put->VB) (it->PRP) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('go', 'VB'), ('out', 'RP'), ('and', 'CC'), ('put', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('drawer', 'NN')])
('tags -> ', '     (go->VB) (out->RP) (and->CC) (put->VB) (it->PRP) (in->IN) (the->DT) (drawer->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('right', 'NN'), ('here', 'RB'), ('is', 'VBZ'), ('dirty', 'JJ')])
('tags -> ', '     (mommy->NN) (right->NN) (here->RB) (is->VBZ) (dirty->JJ) ')
('tags initial-> ', [('daba', 'NN'), ('b', 'NN')])
('tags -> ', '     (daba->NN) (b->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'JJ'), ('look', 'NN'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (mommy->JJ) (look->NN) (it->PRP) (over->IN) (here->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'NN'), ('because', 'IN'), ('you', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('school', 'NN'), ('with', 'IN'), ('it', 'PRP')])
('tags -> ', '     (that->DT) (s->NN) (because->IN) (you->PRP) (went->VBD) (to->TO) (school->NN) (with->IN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('dirty', 'NN')])
('tags -> ', '     (xxx->NN) (dirty->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('fall', 'NN')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (fall->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('fall', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (fall->NN) (in->IN) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('didn', 'NN'), ('t', 'NN'), ('fall', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (xxx->JJ) (didn->NN) (t->NN) (fall->NN) (in->IN) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'VB'), ('my', 'PRP$'), ('xxx', 'NN')])
('tags -> ', '     (xxx->VB) (my->PRP$) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('happy', 'JJ'), ('bir', 'NN'), ('thday', 'NN'), ('xxx', 'VB')])
('tags -> ', '     (happy->JJ) (bir->NN) (thday->NN) (xxx->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('aimee', 'NN')])
('tags -> ', '     (aimee->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('happy', 'JJ'), ('birthday', 'NN'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (happy->JJ) (birthday->NN) (to->TO) (you->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('happy', 'JJ'), ('birthday', 'NN'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (happy->JJ) (birthday->NN) (to->TO) (you->PRP) ')
candidates to check:
2
('tags initial-> ', [('happy', 'JJ'), ('birthday', 'NN'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (happy->JJ) (birthday->NN) (to->TO) (you->PRP) ')
('tags initial-> ', [('how', 'WRB'), ('old', 'JJ'), ('are', 'VBP'), ('you', 'PRP'), ('now', 'RB')])
('tags -> ', '     (how->WRB) (old->JJ) (are->VBP) (you->PRP) (now->RB) ')
('tags initial-> ', [('how', 'WRB'), ('old', 'JJ'), ('are', 'VBP'), ('you', 'PRP'), ('now', 'RB')])
('tags -> ', '     (how->WRB) (old->JJ) (are->VBP) (you->PRP) (now->RB) ')
('tags initial-> ', [('how', 'WRB'), ('old', 'JJ'), ('are', 'VBP'), ('you', 'PRP'), ('now', 'RB')])
('tags -> ', '     (how->WRB) (old->JJ) (are->VBP) (you->PRP) (now->RB) ')
('tags initial-> ', [('know', 'VB')])
('tags -> ', '     (know->VB) ')
candidates to check:
1
('tags initial-> ', [('wan', 'NN'), ('t', 'NN'), ('t', 'IN'), ('a', 'DT'), ('say', 'JJ'), ('my', 'PRP$'), ('prayers', 'NNS')])
('tags -> ', '     (wan->NN) (t->NN) (t->IN) (a->DT) (say->JJ) (my->PRP$) (prayers->NNS) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('h', 'NN'), ('ow', 'IN'), ('i', 'NN'), ('i', 'VBP'), ('daddy', 'VBP'), ('i', 'NN'), ('know', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (know->VBP) (h->NN) (ow->IN) (i->NN) (i->VBP) (daddy->VBP) (i->NN) (know->VBP) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('our', 'PRP$'), ('father', 'NN'), ('in', 'IN'), ('heaven', 'JJ'), ('xxx', 'NNS'), ('amen', 'NNS')])
('tags -> ', '     (our->PRP$) (father->NN) (in->IN) (heaven->JJ) (xxx->NNS) (amen->NNS) ')
('tags initial-> ', [('oh', 'UH'), ('that', 'IN'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (oh->UH) (that->IN) (s->VBD) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('say', 'VB'), ('your', 'PRP$'), ('prayers', 'NNS'), ('real', 'JJ'), ('good', 'JJ')])
('tags -> ', '     (you->PRP) (can->MD) (say->VB) (your->PRP$) (prayers->NNS) (real->JJ) (good->JJ) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('say', 'VB'), ('that', 'IN')])
('tags -> ', '     (i->NN) (can->MD) (say->VB) (that->IN) ')
candidates to check:
5
('tags initial-> ', [('i', 'NN'), ('pledge', 'VBP'), ('allegiance', 'NN'), ('to', 'TO'), ('the', 'DT'), ('flag', 'NN'), ('of', 'IN'), ('the', 'DT'), ('united', 'JJ'), ('states', 'NNS'), ('of', 'IN'), ('america', 'NN'), ('and', 'CC'), ('to', 'TO'), ('the', 'DT'), ('republic', 'NN'), ('for', 'IN'), ('which', 'WDT'), ('it', 'PRP'), ('stands', 'VBZ'), ('one', 'CD'), ('nation', 'NN'), ('under', 'IN'), ('god', 'NN')])
('tags -> ', '     (i->NN) (pledge->VBP) (allegiance->NN) (to->TO) (the->DT) (flag->NN) (of->IN) (the->DT) (united->JJ) (states->NNS) (of->IN) (america->NN) (and->CC) (to->TO) (the->DT) (republic->NN) (for->IN) (which->WDT) (it->PRP) (stands->VBZ) (one->CD) (nation->NN) (under->IN) (god->NN) ')
('tags initial-> ', [('elizabeth', 'VB'), ('what', 'WP'), ('happened', 'VBD')])
('tags -> ', '     (elizabeth->VB) (what->WP) (happened->VBD) ')
candidates to check:
2
('tags initial-> ', [('with', 'IN'), ('liberty', 'NN'), ('and', 'CC'), ('justice', 'NN'), ('for', 'IN'), ('all', 'DT')])
('tags -> ', '     (with->IN) (liberty->NN) (and->CC) (justice->NN) (for->IN) (all->DT) ')
('tags initial-> ', [('elizabeth', 'NNS')])
('tags -> ', '     (elizabeth->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('elizabeth', 'NNS')])
('tags -> ', '     (elizabeth->NNS) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NNS'), ('look', 'VBP')])
('tags -> ', '     (mommy->NNS) (look->VBP) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NNS'), ('look', 'VBP')])
('tags -> ', '     (mommy->NNS) (look->VBP) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP'), ('okay', 'NN')])
('tags -> ', '     (i->NN) (xxx->VBP) (okay->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('pledge', 'NN'), ('alle', 'NN'), ('giance', 'NN')])
('tags -> ', '     (pledge->NN) (alle->NN) (giance->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('hear', 'NN'), ('this', 'DT'), ('one', 'CD')])
('tags -> ', '     (mommy->NN) (hear->NN) (this->DT) (one->CD) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('hear', 'NN'), ('this', 'DT'), ('one', 'CD')])
('tags -> ', '     (mommy->NN) (hear->NN) (this->DT) (one->CD) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('pledge', 'VBP'), ('allegiance', 'NN'), ('to', 'TO'), ('the', 'DT'), ('flag', 'NN'), ('of', 'IN'), ('united', 'JJ'), ('states', 'NNS'), ('of', 'IN'), ('amer', 'NN'), ('ica', 'NN')])
('tags -> ', '     (i->NN) (pledge->VBP) (allegiance->NN) (to->TO) (the->DT) (flag->NN) (of->IN) (united->JJ) (states->NNS) (of->IN) (amer->NN) (ica->NN) ')
candidates to check:
3
('tags initial-> ', [('and', 'CC'), ('to', 'TO'), ('the', 'DT'), ('republic', 'NN'), ('for', 'IN'), ('which', 'WDT'), ('it', 'PRP'), ('stands', 'VBZ'), ('one', 'CD'), ('nation', 'NN'), ('under', 'IN'), ('god', 'NN'), ('indivisible', 'JJ'), ('and', 'CC'), ('xxx', 'JJ'), ('justice', 'NN'), ('for', 'IN'), ('all', 'DT')])
('tags -> ', '     (and->CC) (to->TO) (the->DT) (republic->NN) (for->IN) (which->WDT) (it->PRP) (stands->VBZ) (one->CD) (nation->NN) (under->IN) (god->NN) (indivisible->JJ) (and->CC) (xxx->JJ) (justice->NN) (for->IN) (all->DT) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
('tags initial-> ', [('pretty', 'RB'), ('good', 'JJ'), ('huh', 'NN')])
('tags -> ', '     (pretty->RB) (good->JJ) (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('what', 'WP'), ('else', 'RB'), ('you', 'PRP'), ('learn', 'VBP'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (now->RB) (what->WP) (else->RB) (you->PRP) (learn->VBP) (in->IN) (school->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('else', 'RB'), ('you', 'PRP'), ('say', 'VBP'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (what->WP) (else->RB) (you->PRP) (say->VBP) (in->IN) (school->NN) ')
('tags initial-> ', [('say', 'VB'), ('a', 'DT'), ('l', 'NN'), ('b', 'NN'), ('l', 'NN'), ('c', 'NN'), ('l', 'NN')])
('tags -> ', '     (say->VB) (a->DT) (l->NN) (b->NN) (l->NN) (c->NN) (l->NN) ')
('tags initial-> ', [('a', 'DT'), ('l', 'NN'), ('b', 'NN'), ('l', 'NN'), ('c', 'NN'), ('l', 'NN')])
('tags -> ', '     (a->DT) (l->NN) (b->NN) (l->NN) (c->NN) (l->NN) ')
('tags initial-> ', [('e', 'NN'), ('l', 'NN'), ('f', 'NN'), ('l', 'NN'), ('g', 'NN'), ('l', 'NN')])
('tags -> ', '     (e->NN) (l->NN) (f->NN) (l->NN) (g->NN) (l->NN) ')
('tags initial-> ', [('e', 'NN'), ('l', 'NN'), ('f', 'NN'), ('l', 'NN'), ('g', 'NN'), ('l', 'NN')])
('tags -> ', '     (e->NN) (l->NN) (f->NN) (l->NN) (g->NN) (l->NN) ')
('tags initial-> ', [('h', 'NN'), ('l', 'NN'), ('i', 'NN'), ('l', 'VBP'), ('j', 'NN'), ('l', 'NN')])
('tags -> ', '     (h->NN) (l->NN) (i->NN) (l->VBP) (j->NN) (l->NN) ')
('tags initial-> ', [('h', 'NN'), ('l', 'NN'), ('i', 'NN'), ('l', 'VBP'), ('j', 'NN'), ('l', 'NN')])
('tags -> ', '     (h->NN) (l->NN) (i->NN) (l->VBP) (j->NN) (l->NN) ')
('tags initial-> ', [('l', 'NN'), ('l', 'NN'), ('m', 'NN'), ('l', 'NN'), ('n', 'JJ'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN'), ('p', 'NN'), ('l', 'NN')])
('tags -> ', '     (l->NN) (l->NN) (m->NN) (l->NN) (n->JJ) (l->NN) (o->NN) (l->NN) (p->NN) (l->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('l', 'NN'), ('l', 'NN'), ('m', 'NN'), ('l', 'NN'), ('n', 'JJ'), ('l', 'NN'), ('o', 'NN'), ('l', 'NN'), ('p', 'NN'), ('l', 'NN')])
('tags -> ', '     (l->NN) (l->NN) (m->NN) (l->NN) (n->JJ) (l->NN) (o->NN) (l->NN) (p->NN) (l->NN) ')
('tags initial-> ', [('q', 'NN'), ('l', 'NN'), ('r', 'NN'), ('l', 'NN'), ('s', 'NN'), ('l', 'NN')])
('tags -> ', '     (q->NN) (l->NN) (r->NN) (l->NN) (s->NN) (l->NN) ')
('tags initial-> ', [('q', 'NN'), ('l', 'NN'), ('r', 'NN'), ('l', 'NN'), ('s', 'NN'), ('l', 'NN')])
('tags -> ', '     (q->NN) (l->NN) (r->NN) (l->NN) (s->NN) (l->NN) ')
('tags initial-> ', [('t', 'NN'), ('l', 'NN'), ('u', 'JJ'), ('l', 'NN'), ('v', 'NN'), ('l', 'NN')])
('tags -> ', '     (t->NN) (l->NN) (u->JJ) (l->NN) (v->NN) (l->NN) ')
('tags initial-> ', [('t', 'NN'), ('l', 'NN'), ('u', 'JJ'), ('l', 'NN'), ('v', 'NN'), ('l', 'NN')])
('tags -> ', '     (t->NN) (l->NN) (u->JJ) (l->NN) (v->NN) (l->NN) ')
('tags initial-> ', [('w', 'NN'), ('l', 'NN'), ('x', 'NNP'), ('l', 'NN')])
('tags -> ', '     (w->NN) (l->NN) (x->NNP) (l->NN) ')
('tags initial-> ', [('w', 'NN'), ('l', 'NN'), ('x', 'NNP'), ('l', 'NN')])
('tags -> ', '     (w->NN) (l->NN) (x->NNP) (l->NN) ')
('tags initial-> ', [('y', 'NN'), ('l', 'NN'), ('and', 'CC'), ('z', 'NN'), ('l', 'NN')])
('tags -> ', '     (y->NN) (l->NN) (and->CC) (z->NN) (l->NN) ')
('tags initial-> ', [('y', 'NN'), ('l', 'NN'), ('and', 'CC'), ('z', 'NN'), ('l', 'NN')])
('tags -> ', '     (y->NN) (l->NN) (and->CC) (z->NN) (l->NN) ')
('tags initial-> ', [('say', 'VB'), ('it', 'PRP'), ('over', 'RP')])
('tags -> ', '     (say->VB) (it->PRP) (over->RP) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('alphabet', 'NN')])
('tags -> ', '     (xxx->NN) (alphabet->NN) ')
('tags initial-> ', [('over', 'IN')])
('tags -> ', '     (over->IN) ')
('tags initial-> ', [('over', 'IN')])
('tags -> ', '     (over->IN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('was', 'VBD'), ('that', 'IN'), ('song', 'NN'), ('was', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (mommy->NN) (was->VBD) (that->IN) (song->NN) (was->VBD) (good->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('that', 'IN'), ('song', 'NN'), ('was', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (yeah->NN) (that->IN) (song->NN) (was->VBD) (good->JJ) ')
('tags initial-> ', [('how', 'WRB'), ('how', 'WRB'), ('much', 'RB'), ('you', 'PRP'), ('can', 'MD'), ('count', 'VB'), ('to', 'TO')])
('tags -> ', '     (how->WRB) (how->WRB) (much->RB) (you->PRP) (can->MD) (count->VB) (to->TO) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('count', 'VB')])
('tags -> ', '     (can->MD) (you->PRP) (count->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('say', 'VB')])
('tags -> ', '     (say->VB) ')
('tags initial-> ', [('please', 'NN')])
('tags -> ', '     (please->NN) ')
candidates to check:
4
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('zoo', 'VB'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (zoo->VB) (tomorrow->NN) ')
candidates to check:
3
('tags initial-> ', [('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (zoo->NN) (tomorrow->NN) ')
candidates to check:
4
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
candidates to check:
1
('tags initial-> ', [('stay', 'VB'), ('all', 'DT'), ('day', 'NN')])
('tags -> ', '     (stay->VB) (all->DT) (day->NN) ')
candidates to check:
3
('tags initial-> ', [('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('you', 'PRP')])
('tags -> ', '     (how->WRB) (about->IN) (you->PRP) (you->PRP) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('will', 'MD'), ('come', 'VB'), ('too', 'RB'), ('too', 'RB'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (will->MD) (come->VB) (too->RB) (too->RB) (too->RB) ')
candidates to check:
3
('tags initial-> ', [('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (we->PRP) (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('goin', 'VBP'), ('g', 'JJ'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (we->PRP) (goin->VBP) (g->JJ) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
candidates to check:
1
('tags initial-> ', [('zoo', 'NN')])
('tags -> ', '     (zoo->NN) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('you', 'PRP')])
('tags -> ', '     (how->WRB) (about->IN) (you->PRP) (you->PRP) (you->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('will', 'MD'), ('come', 'VB'), ('too', 'RB'), ('too', 'RB'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (will->MD) (come->VB) (too->RB) (too->RB) (too->RB) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'VB'), ('my', 'PRP$'), ('school', 'NN'), ('teacher', 'NN')])
('tags -> ', '     (xxx->VB) (my->PRP$) (school->NN) (teacher->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (we->PRP) (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
4
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
candidates to check:
9
('tags initial-> ', [('zoo', 'NN'), ('tomorrow', 'NN'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (zoo->NN) (tomorrow->NN) (zoo->NN) (tomorrow->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('stay', 'VBP'), ('all', 'DT'), ('day', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (stay->VBP) (all->DT) (day->NN) ')
candidates to check:
3
('tags initial-> ', [('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (we->PRP) (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('you', 'PRP')])
('tags -> ', '     (how->WRB) (about->IN) (you->PRP) (you->PRP) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('will', 'MD'), ('come', 'VB'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (will->MD) (come->VB) (too->RB) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
('tags initial-> ', [('too', 'RB'), ('too', 'RB'), ('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (too->RB) (too->RB) (we->PRP) (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (xxx->NN) ')
('tags initial-> ', [('like', 'IN'), ('right', 'RB'), ('now', 'RB'), ('xxx', 'VBP')])
('tags -> ', '     (like->IN) (right->RB) (now->RB) (xxx->VBP) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'NN'), ('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'VB'), ('how', 'WRB'), ('about', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('you', 'PRP')])
('tags -> ', '     (xxx->NN) (we->PRP) (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->VB) (how->WRB) (about->IN) (you->PRP) (you->PRP) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('will', 'MD'), ('come', 'VB'), ('too', 'RB'), ('too', 'RB'), ('too', 'RB'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (you->PRP) (will->MD) (come->VB) (too->RB) (too->RB) (too->RB) (we->PRP) (re->VBP) (going->VBG) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('better', 'JJR'), ('stay', 'VB'), ('off', 'IN'), ('this', 'DT')])
('tags -> ', '     (you->PRP) (better->JJR) (stay->VB) (off->IN) (this->DT) ')
candidates to check:
1
('tags initial-> ', [('stay', 'VB'), ('off', 'RP'), ('xxx', 'NN')])
('tags -> ', '     (stay->VB) (off->RP) (xxx->NN) ')
candidates to check:
4
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
candidates to check:
3
('tags initial-> ', [('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (zoo->NN) (tomorrow->NN) ')
candidates to check:
3
('tags initial-> ', [('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (zoo->NN) (tomorrow->NN) ')
candidates to check:
4
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('stay', 'VBP'), ('all', 'DT'), ('day', 'NN')])
('tags -> ', '     (xxx->NNS) (stay->VBP) (all->DT) (day->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'JJ'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (xxx->JJ) (zoo->NN) (zoo->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('you', 'PRP'), ('you', 'PRP'), ('you', 'PRP')])
('tags -> ', '     (how->WRB) (about->IN) (you->PRP) (you->PRP) (you->PRP) ')
('tags initial-> ', [('go', 'VB'), ('away', 'RP')])
('tags -> ', '     (go->VB) (away->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
17
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN'), ('zoo', 'NN'), ('tomorrow', 'NN'), ('zoo', 'NN'), ('tomorrow', 'NN'), ('zoo', 'NN'), ('tomorrow', 'NN'), ('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) (zoo->NN) (tomorrow->NN) (zoo->NN) (tomorrow->NN) (zoo->NN) (tomorrow->NN) (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('tutti', 'NNS'), ('wp', 'VBP'), ('frutti', 'NNS'), ('wp', 'VBP')])
('tags -> ', '     (tutti->NNS) (wp->VBP) (frutti->NNS) (wp->VBP) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NNS'), ('look', 'VBP')])
('tags -> ', '     (mommy->NNS) (look->VBP) ')
candidates to check:
1
('tags initial-> ', [('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (look->NN) (it->PRP) ')
('tags initial-> ', [('tutti', 'NNS'), ('wp', 'VBP'), ('frutti', 'NNS'), ('wp', 'VBP')])
('tags -> ', '     (tutti->NNS) (wp->VBP) (frutti->NNS) (wp->VBP) ')
('tags initial-> ', [('oh', 'UH'), ('lutti', 'NNS'), ('wp', 'VBP')])
('tags -> ', '     (oh->UH) (lutti->NNS) (wp->VBP) ')
('tags initial-> ', [('aloppa', 'NN'), ('wp', 'NN'), ('boowa', 'NN'), ('wp', 'NN'), ('poloppaypo', 'NN'), ('wp', 'NN')])
('tags -> ', '     (aloppa->NN) (wp->NN) (boowa->NN) (wp->NN) (poloppaypo->NN) (wp->NN) ')
candidates to check:
1
('tags initial-> ', [('get', 'VB'), ('out', 'RP'), ('my', 'PRP$'), ('stuff', 'NN')])
('tags -> ', '     (get->VB) (out->RP) (my->PRP$) (stuff->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBZ'), ('all', 'DT'), ('this', 'DT'), ('junk', 'NN')])
('tags -> ', '     (what->WP) (s->VBZ) (all->DT) (this->DT) (junk->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'JJ'), ('let', 'NN'), ('s', 'VB'), ('get', 'VB'), ('rid', 'JJ'), ('of', 'IN'), ('my', 'PRP$'), ('stuff', 'NN')])
('tags -> ', '     (mommy->JJ) (let->NN) (s->VB) (get->VB) (rid->JJ) (of->IN) (my->PRP$) (stuff->NN) ')
('tags initial-> ', [('and', 'CC'), ('now', 'RB'), ('i', 'VBZ'), ('come', 'VBP'), ('on', 'IN')])
('tags -> ', '     (and->CC) (now->RB) (i->VBZ) (come->VBP) (on->IN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('get', 'VB'), ('rid', 'JJ'), ('of', 'IN'), ('my', 'PRP$'), ('stuff', 'NN')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (get->VB) (rid->JJ) (of->IN) (my->PRP$) (stuff->NN) ')
('tags initial-> ', [('oh', 'UH'), ('look', 'NN')])
('tags -> ', '     (oh->UH) (look->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('look', 'VB'), ('it', 'PRP'), ('this', 'DT'), ('gold', 'NN')])
('tags -> ', '     (oh->UH) (look->VB) (it->PRP) (this->DT) (gold->NN) ')
candidates to check:
2
('tags initial-> ', [('look', 'VB'), ('it', 'PRP'), ('this', 'DT'), ('little', 'JJ'), ('pretty', 'JJ'), ('stuff', 'NN')])
('tags -> ', '     (look->VB) (it->PRP) (this->DT) (little->JJ) (pretty->JJ) (stuff->NN) ')
candidates to check:
1
('tags initial-> ', [('look', 'VB'), ('it', 'PRP'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (look->VB) (it->PRP) (right->RB) (here->RB) ')
candidates to check:
2
('tags initial-> ', [('pretty', 'RB'), ('stuff', 'NN')])
('tags -> ', '     (pretty->RB) (stuff->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'VB'), ('how', 'WRB'), ('do', 'VB'), ('i', 'VB'), ('get', 'VB'), ('rid', 'JJ'), ('of', 'IN'), ('my', 'PRP$'), ('stuff', 'NN')])
('tags -> ', '     (mommy->VB) (how->WRB) (do->VB) (i->VB) (get->VB) (rid->JJ) (of->IN) (my->PRP$) (stuff->NN) ')
candidates to check:
4
('tags initial-> ', [('mommy', 'JJ'), ('mommy', 'NN'), ('we', 'PRP'), ('we', 'PRP'), ('goin', 'VBP'), ('g', 'JJ'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('zoo', 'NN'), ('zoo', 'NN')])
('tags -> ', '     (mommy->JJ) (mommy->NN) (we->PRP) (we->PRP) (goin->VBP) (g->JJ) (to->TO) (the->DT) (zoo->NN) (zoo->NN) (zoo->NN) ')
candidates to check:
4
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP'), ('to', 'TO'), ('the', 'DT'), ('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) (to->TO) (the->DT) (zoo->NN) (tomorrow->NN) ')
candidates to check:
3
('tags initial-> ', [('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (zoo->NN) (tomorrow->NN) ')
candidates to check:
3
('tags initial-> ', [('zoo', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (zoo->NN) (tomorrow->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('taking', 'VBG'), ('us', 'PRP')])
('tags -> ', '     (daddy->NN) (taking->VBG) (us->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'NN'), ('babies', 'NNS'), ('can', 'MD'), ('t', 'VB'), ('do', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (think->NN) (babies->NNS) (can->MD) (t->VB) (do->VB) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hurry', 'NN'), ('up', 'RP'), ('aimee', 'NN'), ('hurry', 'NN')])
('tags -> ', '     (hurry->NN) (up->RP) (aimee->NN) (hurry->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('hurry', 'VBZ'), ('up', 'RP')])
('tags -> ', '     (xxx->NN) (hurry->VBZ) (up->RP) ')
('tags initial-> ', [('hurry', 'NN'), ('up', 'RP'), ('aimee', 'NN')])
('tags -> ', '     (hurry->NN) (up->RP) (aimee->NN) ')
('tags initial-> ', [('hey', 'NN'), ('look', 'NN')])
('tags -> ', '     (hey->NN) (look->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'JJ'), ('look', 'NN')])
('tags -> ', '     (daddy->JJ) (look->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 21, 25]
milk
milk milk 46
[('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('milk', 'NN'), ('please', 'NN')]
['milk']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('milk', 'NN'), ('please', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (get->VB) (some->DT) (milk->NN) (please->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
descended from food: [['N'], 'chocolate', 27, 36]
chocolate
chocolate chocolate 598
[('mommy', 'NN'), ('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('mommy', 'NN'), ('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN')])
('tags -> ', '     (mommy->NN) (can->MD) (i->VB) (get->VB) (some->DT) (chocolate->NN) ')
candidates to check:
2
descended from food: [['N'], 'chocolate', 21, 30]
descended from food: [['N'], 'milk', 39, 43]
milk
milk milk 46
[('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN'), ('too', 'RB'), ('and', 'CC'), ('milk', 'VB'), ('too', 'RB')]
['milk']
chocolate
chocolate chocolate 598
[('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN'), ('too', 'RB'), ('and', 'CC'), ('milk', 'VB'), ('too', 'RB')]
['chocolate']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN'), ('too', 'RB'), ('and', 'CC'), ('milk', 'VB'), ('too', 'RB')])
('tags -> ', '     (can->MD) (i->VB) (get->VB) (some->DT) (chocolate->NN) (too->RB) (and->CC) (milk->VB) (too->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'chocolate', 14, 23]
chocolate
chocolate chocolate 598
[('xxx', 'NN'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('xxx', 'NN'), ('chocolate', 'NN')])
('tags -> ', '     (xxx->NN) (chocolate->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'chocolate', 15, 24]
milk
milk milk 46
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['milk']
chocolate
chocolate chocolate 598
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')])
('tags -> ', '     (milk->NN) (and->CC) (chocolate->NN) ')
candidates to check:
4
descended from food: [['N'], 'milk', 19, 23]
descended from food: [['N'], 'chocolate', 28, 37]
milk
milk milk 46
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['milk']
chocolate
chocolate chocolate 598
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (want->VBP) (milk->NN) (and->CC) (chocolate->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 6, 10]
descended from food: [['N'], 'chocolate', 15, 24]
milk
milk milk 46
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['milk']
chocolate
chocolate chocolate 598
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['chocolate']
('tags initial-> ', [('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')])
('tags -> ', '     (milk->NN) (and->CC) (chocolate->NN) ')
shake
shake shake 148
[('and', 'CC'), ('shake', 'VB'), ('good', 'JJ'), ('up', 'RP')]
['shake']
('tags initial-> ', [('and', 'CC'), ('shake', 'VB'), ('good', 'JJ'), ('up', 'RP')])
('tags -> ', '     (and->CC) (shake->VB) (good->JJ) (up->RP) ')
shake
shake shake 148
[('and', 'CC'), ('shake', 'VB'), ('it', 'PRP'), ('up', 'RP')]
['shake']
('tags initial-> ', [('and', 'CC'), ('shake', 'VB'), ('it', 'PRP'), ('up', 'RP')])
('tags -> ', '     (and->CC) (shake->VB) (it->PRP) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('give', 'VB'), ('me', 'PRP'), ('a', 'DT'), ('spoon', 'NN')])
('tags -> ', '     (and->CC) (give->VB) (me->PRP) (a->DT) (spoon->NN) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('me', 'PRP'), ('a', 'DT'), ('spoon', 'NN')])
('tags -> ', '     (give->VB) (me->PRP) (a->DT) (spoon->NN) ')
('tags initial-> ', [('ya', 'NN'), ('wp', 'WRB'), ('hahaha', 'NN'), ('wp', 'NN')])
('tags -> ', '     (ya->NN) (wp->WRB) (hahaha->NN) (wp->NN) ')
('tags initial-> ', [('i', 'NN'), ('found', 'VBD'), ('that', 'IN'), ('now', 'RB')])
('tags -> ', '     (i->NN) (found->VBD) (that->IN) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('the', 'DT'), ('stuff', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (the->DT) (stuff->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('spin', 'VB'), ('around', 'RP')])
('tags -> ', '     (mommy->NN) (i->NN) (m->VBP) (gon->NN) (na->TO) (spin->VB) (around->RP) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('spin', 'VBP'), ('around', 'IN')])
('tags -> ', '     (mommy->NN) (i->NN) (spin->VBP) (around->IN) ')
candidates to check:
2
('tags initial-> ', [('take', 'VB'), ('any', 'DT'), ('xxx', 'NN'), ('now', 'RB'), ('because', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('get', 'VB'), ('a', 'DT'), ('beatin', 'NN'), ('g', 'NN')])
('tags -> ', '     (take->VB) (any->DT) (xxx->NN) (now->RB) (because->IN) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (get->VB) (a->DT) (beatin->NN) (g->NN) ')
('tags initial-> ', [('go', 'VB'), ('sit', 'NN'), ('down', 'RP')])
('tags -> ', '     (go->VB) (sit->NN) (down->RP) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
4
('tags initial-> ', [('let', 'VB'), ('me', 'PRP'), ('do', 'VB'), ('it', 'PRP'), ('because', 'IN'), ('i', 'NN'), ('can', 'MD'), ('just', 'RB'), ('see', 'VB'), ('you', 'PRP'), ('making', 'VBG'), ('a', 'DT'), ('whole', 'JJ'), ('mess', 'NN'), ('of', 'IN'), ('this', 'DT'), ('whole', 'JJ'), ('place', 'NN')])
('tags -> ', '     (let->VB) (me->PRP) (do->VB) (it->PRP) (because->IN) (i->NN) (can->MD) (just->RB) (see->VB) (you->PRP) (making->VBG) (a->DT) (whole->JJ) (mess->NN) (of->IN) (this->DT) (whole->JJ) (place->NN) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (mommy->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('have', 'VBP'), ('no', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NNS) (have->VBP) (no->DT) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('mommy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (mommy->NN) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('mommy', 'VBP')])
('tags -> ', '     (thank->NN) (you->PRP) (mommy->VBP) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('so', 'RB'), ('xxx', 'JJ')])
('tags -> ', '     (what->WP) (s->VBD) (so->RB) (xxx->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('why', 'WRB'), ('does', 'VBZ'), ('he', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('scream', 'VB'), ('like', 'IN'), ('this', 'DT')])
('tags -> ', '     (why->WRB) (does->VBZ) (he->PRP) (have->VB) (to->TO) (scream->VB) (like->IN) (this->DT) ')
candidates to check:
1
('tags initial-> ', [('junior', 'JJ'), ('please', 'NN')])
('tags -> ', '     (junior->JJ) (please->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (xxx->NN) (mommy->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hey', 'NN'), ('mommy', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (hey->NN) (mommy->NN) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('need', 'VB'), ('some', 'DT'), ('help', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (need->VB) (some->DT) (help->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('aimee', 'NN')])
('tags -> ', '     (aimee->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('uh', 'VB'), ('watch', 'VB'), ('what', 'WP'), ('robbie', 'NN'), ('is', 'VBZ'), ('doing', 'VBG'), ('downstairs', 'NNS')])
('tags -> ', '     (can->MD) (you->PRP) (uh->VB) (watch->VB) (what->WP) (robbie->NN) (is->VBZ) (doing->VBG) (downstairs->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('bathing', 'VBG')])
('tags -> ', '     (he->PRP) (s->VBD) (bathing->VBG) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('having', 'VBG'), ('a', 'DT'), ('bath', 'NN')])
('tags -> ', '     (he->PRP) (s->VBZ) (having->VBG) (a->DT) (bath->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('well', 'RB'), ('see', 'VB'), ('if', 'IN'), ('he', 'PRP'), ('s', 'VBD'), ('finished', 'VBN')])
('tags -> ', '     (well->RB) (see->VB) (if->IN) (he->PRP) (s->VBD) (finished->VBN) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('he', 'PRP'), ('look', 'MD'), ('like', 'VB'), ('xxx', 'NN')])
('tags -> ', '     (he->PRP) (look->MD) (like->VB) (xxx->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('okay', 'IN'), ('it', 'PRP'), ('s', 'VBD'), ('time', 'NN'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (okay->IN) (it->PRP) (s->VBD) (time->NN) (to->TO) (eat->VB) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 26, 32]
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('robbie', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('dinner', 'NN')])
('tags -> ', '     (come->VBN) (on->IN) (robbie->NN) (it->PRP) (s->VBD) (dinner->NN) ')
('tags initial-> ', [('we', 'PRP'), ('eat', 'VBP')])
('tags -> ', '     (we->PRP) (eat->VBP) ')
candidates to check:
1
('tags initial-> ', [('dinnertime', 'NN')])
('tags -> ', '     (dinnertime->NN) ')
candidates to check:
1
('tags initial-> ', [('dinnertime', 'NN')])
('tags -> ', '     (dinnertime->NN) ')
candidates to check:
1
('tags initial-> ', [('dinnertime', 'NN')])
('tags -> ', '     (dinnertime->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('www', 'NN')])
('tags -> ', '     (www->NN) ')
candidates to check:
1
('tags initial-> ', [('please', 'VB'), ('turn', 'VB'), ('off', 'RP'), ('the', 'DT'), ('tv', 'NN')])
('tags -> ', '     (please->VB) (turn->VB) (off->RP) (the->DT) (tv->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('have', 'VBP'), ('this', 'DT'), ('thing', 'NN'), ('on', 'IN'), ('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (have->VBP) (this->DT) (thing->NN) (on->IN) (you->PRP) (know->VBP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('still', 'RB'), ('blinkin', 'JJ'), ('g', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (still->RB) (blinkin->JJ) (g->NN) (mommy->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) (no->DT) (no->DT) (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
5
descended from food: [['N'], 'food', 38, 42]
('tags initial-> ', [('aimee', 'NN'), ('you', 'PRP'), ('gon', 'VBP'), ('na', 'TO'), ('eat', 'VB'), ('lots', 'NNS'), ('of', 'IN'), ('food', 'NN'), ('tonight', 'NN')])
('tags -> ', '     (aimee->NN) (you->PRP) (gon->VBP) (na->TO) (eat->VB) (lots->NNS) (of->IN) (food->NN) (tonight->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
5
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN'), ('tonight', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBD) (a->DT) (little->JJ) (bit->NN) (tonight->JJ) ')
('tags initial-> ', [('robbie', 'NN'), ('come', 'VB'), ('on', 'IN')])
('tags -> ', '     (robbie->NN) (come->VB) (on->IN) ')
candidates to check:
3
('tags initial-> ', [('mommy', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (mommy->NN) (that->WDT) (s->VBZ) (a->DT) (little->JJ) (bit->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('a', 'DT'), ('little', 'JJ')])
('tags -> ', '     (yeah->NN) (that->WDT) (s->VBZ) (a->DT) (little->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('starting', 'VBG')])
('tags -> ', '     (i->NN) (starting->VBG) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('wait', 'VB'), ('a', 'DT'), ('minute', 'NN')])
('tags -> ', '     (wait->VB) (a->DT) (minute->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('taking', 'VBG'), ('a', 'DT'), ('little', 'JJ'), ('forks', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (taking->VBG) (a->DT) (little->JJ) (forks->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'JJ'), ('xxx', 'CD'), ('people', 'NNS')])
('tags -> ', '     (oh->JJ) (xxx->CD) (people->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('thank', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) (thank->VBP) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('thank', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) (thank->VBP) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('robbie', 'NN'), ('come', 'VB'), ('on', 'IN')])
('tags -> ', '     (robbie->NN) (come->VB) (on->IN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('robbie', 'NN'), ('has', 'VBZ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (xxx->NN) (robbie->NN) (has->VBZ) (to->TO) (eat->VB) ')
('tags initial-> ', [('aimee', 'NN')])
('tags -> ', '     (aimee->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('robbie', 'NN'), ('has', 'VBZ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (robbie->NN) (has->VBZ) (to->TO) (eat->VB) ')
('tags initial-> ', [('robbie', 'NN'), ('has', 'VBZ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (robbie->NN) (has->VBZ) (to->TO) (eat->VB) ')
('tags initial-> ', [('aimee', 'NN'), ('has', 'VBZ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (aimee->NN) (has->VBZ) (to->TO) (eat->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('has', 'VBZ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (daddy->NN) (has->VBZ) (to->TO) (eat->VB) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('xxx', 'NN'), ('you', 'PRP'), ('hungry', 'VBP')])
('tags -> ', '     (daddy->NN) (xxx->NN) (you->PRP) (hungry->VBP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('hungry', 'JJ')])
('tags -> ', '     (are->VBP) (you->PRP) (hungry->JJ) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('you', 'PRP'), ('hungry', 'VBP')])
('tags -> ', '     (mommy->NN) (you->PRP) (hungry->VBP) ')
('tags initial-> ', [('yes', 'NNS'), ('i', 'VBP'), ('am', 'VBP')])
('tags -> ', '     (yes->NNS) (i->VBP) (am->VBP) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP')])
('tags -> ', '     (are->VBP) (you->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('say', 'VB'), ('the', 'DT')])
('tags -> ', '     (say->VB) (the->DT) ')
('tags initial-> ', [('say', 'VB'), ('the', 'DT'), ('grace', 'NN')])
('tags -> ', '     (say->VB) (the->DT) (grace->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 64, 68]
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('great', 'JJ'), ('god', 'NN'), ('is', 'VBZ'), ('good', 'JJ'), ('let', 'VB'), ('us', 'PRP'), ('thank', 'VB'), ('him', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN'), ('amen', 'NNS')])
('tags -> ', '     (god->NN) (is->VBZ) (great->JJ) (god->NN) (is->VBZ) (good->JJ) (let->VB) (us->PRP) (thank->VB) (him->PRP) (for->IN) (our->PRP$) (food->NN) (amen->NNS) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('say', 'VB'), ('xxx', 'NN'), ('over', 'IN')])
('tags -> ', '     (say->VB) (xxx->NN) (over->IN) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
('tags initial-> ', [('be', 'VB'), ('good', 'JJ')])
('tags -> ', '     (be->VB) (good->JJ) ')
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('grace', 'JJ'), ('and', 'CC'), ('god', 'NN'), ('is', 'VBZ'), ('good', 'JJ')])
('tags -> ', '     (god->NN) (is->VBZ) (grace->JJ) (and->CC) (god->NN) (is->VBZ) (good->JJ) ')
('tags initial-> ', [('and', 'CC'), ('we', 'PRP')])
('tags -> ', '     (and->CC) (we->PRP) ')
candidates to check:
1
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('or', 'CC'), ('the', 'DT'), ('rest', 'NN'), ('i', 'NN'), ('ve', 'NN'), ('said', 'VBD')])
('tags -> ', '     (thank->NN) (you->PRP) (or->CC) (the->DT) (rest->NN) (i->NN) (ve->NN) (said->VBD) ')
candidates to check:
1
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('god', 'VBP'), ('for', 'IN'), ('every', 'DT'), ('day', 'NN')])
('tags -> ', '     (thank->NN) (you->PRP) (god->VBP) (for->IN) (every->DT) (day->NN) ')
('tags initial-> ', [('amen', 'NNS')])
('tags -> ', '     (amen->NNS) ')
('tags initial-> ', [('god', 'NN'), ('is', 'VBZ'), ('grace', 'JJ'), ('and', 'CC'), ('god', 'NN'), ('is', 'VBZ'), ('good', 'JJ')])
('tags -> ', '     (god->NN) (is->VBZ) (grace->JJ) (and->CC) (god->NN) (is->VBZ) (good->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 31, 35]
('tags initial-> ', [('and', 'CC'), ('we', 'PRP'), ('thank', 'VBD'), ('him', 'PRP'), ('for', 'IN'), ('our', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (and->CC) (we->PRP) (thank->VBD) (him->PRP) (for->IN) (our->PRP$) (food->NN) ')
('tags initial-> ', [('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('mine', 'NN')])
('tags -> ', '     (no->DT) (that->WDT) (s->VBZ) (mine->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('doing', 'VBG')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (doing->VBG) ')
('tags initial-> ', [('aimee', 'NN')])
('tags -> ', '     (aimee->NN) ')
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP')])
('tags -> ', '     (you->PRP) (know->VBP) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('me', 'PRP')])
('tags -> ', '     (me->PRP) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) ')
('tags initial-> ', [('you', 'PRP'), ('eat', 'VBP'), ('this', 'DT'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (eat->VBP) (this->DT) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('got', 'VBD'), ('no', 'DT'), ('flower', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (got->VBD) (no->DT) (flower->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('got', 'VBD'), ('no', 'DT'), ('flower', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (got->VBD) (no->DT) (flower->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('flower', 'NN')])
('tags -> ', '     (xxx->NN) (flower->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ve', 'NN'), ('got', 'VBD'), ('the', 'DT'), ('flower', 'NN')])
('tags -> ', '     (i->NN) (ve->NN) (got->VBD) (the->DT) (flower->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'juice', 26, 31]
juice
juice juice 52
[('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('get', 'VBP'), ('some', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('get', 'VBP'), ('some', 'DT'), ('juice', 'NN')])
('tags -> ', '     (didn->NN) (t->NN) (you->PRP) (get->VBP) (some->DT) (juice->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('baby', 'NN')])
('tags -> ', '     (xxx->NN) (baby->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('care', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (care->NN) ')
candidates to check:
2
descended from food: [['N'], 'juice', 32, 37]
juice
juice juice 52
[('daddy', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('ask', 'NN'), ('for', 'IN'), ('no', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('daddy', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('ask', 'NN'), ('for', 'IN'), ('no', 'DT'), ('juice', 'NN')])
('tags -> ', '     (daddy->NN) (i->NN) (didn->VBP) (t->NN) (ask->NN) (for->IN) (no->DT) (juice->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('okay', 'RB'), ('watch', 'NN'), ('out', 'IN'), ('for', 'IN'), ('my', 'PRP$'), ('fork', 'NN'), ('boy', 'NN')])
('tags -> ', '     (okay->RB) (watch->NN) (out->IN) (for->IN) (my->PRP$) (fork->NN) (boy->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 10, 15]
juice
juice juice 52
[('xxx', 'JJ'), ('juice', 'NN'), ('thank', 'NN'), ('you', 'PRP')]
['juice']
('tags initial-> ', [('xxx', 'JJ'), ('juice', 'NN'), ('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (xxx->JJ) (juice->NN) (thank->NN) (you->PRP) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('hate', 'NN'), ('on', 'IN'), ('my', 'PRP$'), ('skirt', 'NN')])
('tags -> ', '     (i->JJ) (hate->NN) (on->IN) (my->PRP$) (skirt->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (you->PRP) (want->VBP) (to->TO) (eat->VB) ')
candidates to check:
1
('tags initial-> ', [('huh', 'NN'), ('baby', 'NN')])
('tags -> ', '     (huh->NN) (baby->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN')])
('tags -> ', '     (daddy->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('a', 'DT'), ('good', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (a->DT) (good->JJ) (boy->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN')])
('tags -> ', '     (daddy->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('0', 'CD')])
('tags -> ', '     (0->CD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('right', 'RB'), ('there', 'EX')])
('tags -> ', '     (right->RB) (there->EX) ')
candidates to check:
2
descended from food: [['N'], 'food', 33, 37]
('tags initial-> ', [('but', 'CC'), ('daddy', 'VB'), ('it', 'PRP'), ('was', 'VBD'), ('behind', 'IN'), ('my', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (but->CC) (daddy->VB) (it->PRP) (was->VBD) (behind->IN) (my->PRP$) (food->NN) ')
('tags initial-> ', [('just', 'RB'), ('put', 'VB'), ('it', 'PRP'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (just->RB) (put->VB) (it->PRP) (right->RB) (here->RB) ')
candidates to check:
3
('tags initial-> ', [('xxx', 'JJ'), ('junior', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (junior->NN) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'juice', 32, 37]
juice
juice juice 52
[('i', 'NN'), ('am', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('bring', 'VB'), ('some', 'DT'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('i', 'NN'), ('am', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('bring', 'VB'), ('some', 'DT'), ('juice', 'NN')])
('tags -> ', '     (i->NN) (am->VBP) (gon->VBG) (na->TO) (bring->VB) (some->DT) (juice->NN) ')
('tags initial-> ', [('oh', 'UH'), ('gosh', 'NN')])
('tags -> ', '     (oh->UH) (gosh->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('said', 'VBD')])
('tags -> ', '     (xxx->NN) (i->NN) (said->VBD) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('no', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (well->RB) (no->DT) (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'juice', 20, 25]
juice
juice juice 52
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('juice', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (get->VB) (juice->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('no', 'DT'), ('they', 'PRP'), ('don', 'VBP'), ('t', 'JJ')])
('tags -> ', '     (no->DT) (they->PRP) (don->VBP) (t->JJ) ')
candidates to check:
1
descended from food: [['N'], 'food', 24, 28]
('tags initial-> ', [('they', 'PRP'), ('eat', 'VBP'), ('all', 'PDT'), ('this', 'DT'), ('food', 'NN')])
('tags -> ', '     (they->PRP) (eat->VBP) (all->PDT) (this->DT) (food->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('they', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (they->PRP) (do->VBP) ')
('tags initial-> ', [('they', 'PRP'), ('eat', 'VBP'), ('all', 'PDT'), ('this', 'DT')])
('tags -> ', '     (they->PRP) (eat->VBP) (all->PDT) (this->DT) ')
candidates to check:
1
descended from food: [['N'], 'potatoes', 6, 14]
potatoes
potatoes potatoes 62
[('potatoes', 'NNS'), ('only', 'RB')]
['potatoes']
('tags initial-> ', [('potatoes', 'NNS'), ('only', 'RB')])
('tags -> ', '     (potatoes->NNS) (only->RB) ')
candidates to check:
1
descended from food: [['N'], 'food', 27, 31]
('tags initial-> ', [('they', 'PRP'), ('do', 'VBP'), ('eat', 'VB'), ('all', 'PDT'), ('this', 'DT'), ('food', 'NN')])
('tags -> ', '     (they->PRP) (do->VBP) (eat->VB) (all->PDT) (this->DT) (food->NN) ')
candidates to check:
4
('tags initial-> ', [('xxx', 'NNS'), ('have', 'VBP'), ('room', 'NN'), ('for', 'IN'), ('one', 'CD'), ('more', 'JJR'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NNS) (have->VBP) (room->NN) (for->IN) (one->CD) (more->JJR) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('alright', 'RB'), ('eat', 'NN')])
('tags -> ', '     (alright->RB) (eat->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('da', 'NN'), ('b', 'NN')])
('tags -> ', '     (da->NN) (b->NN) ')
candidates to check:
3
('tags initial-> ', [('junior', 'NN')])
('tags -> ', '     (junior->NN) ')
('tags initial-> ', [('leave', 'VB'), ('it', 'PRP'), ('alone', 'RB')])
('tags -> ', '     (leave->VB) (it->PRP) (alone->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
pepper
pepper pepper 27
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('no', 'DT'), ('pepper', 'NN')]
['pepper']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('no', 'DT'), ('pepper', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (no->DT) (pepper->NN) ')
candidates to check:
2
pepper
pepper pepper 27
[('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('pepper', 'NN')]
['pepper']
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('pepper', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (like->IN) (pepper->NN) ')
('tags initial-> ', [('sometimes', 'RB')])
('tags -> ', '     (sometimes->RB) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('burns', 'VBZ'), ('my', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (it->PRP) (burns->VBZ) (my->PRP$) (mouth->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('burn', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (it->PRP) (doesn->VBZ) (t->JJ) (burn->IN) (your->PRP$) (mouth->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('look', 'NN'), ('at', 'IN'), ('daddy', 'NN'), ('he', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (but->CC) (look->NN) (at->IN) (daddy->NN) (he->PRP) (like->IN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('daddy', 'NN'), ('you', 'PRP'), ('has', 'VBZ'), ('our', 'PRP$'), ('bowl', 'NN')])
('tags -> ', '     (daddy->NN) (you->PRP) (has->VBZ) (our->PRP$) (bowl->NN) ')
('tags initial-> ', [('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (right->RB) (here->RB) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('use', 'VBP'), ('our', 'PRP$'), ('flower', 'NN')])
('tags -> ', '     (we->PRP) (use->VBP) (our->PRP$) (flower->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('why', 'WRB'), ('xxx', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (why->WRB) (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('that', 'IN')])
('tags -> ', '     (and->CC) (that->IN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('why', 'WRB'), ('xxx', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (why->WRB) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('wan', 'VBP'), ('t', 'VB'), ('a', 'DT'), ('flower', 'NN')])
('tags -> ', '     (you->PRP) (wan->VBP) (t->VB) (a->DT) (flower->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'soup', 24, 28]
soup
soup soup 72
[('want', 'VB'), ('some', 'DT'), ('of', 'IN'), ('this', 'DT'), ('soup', 'NN'), ('xxx', 'NN')]
['soup']
('tags initial-> ', [('want', 'VB'), ('some', 'DT'), ('of', 'IN'), ('this', 'DT'), ('soup', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (want->VB) (some->DT) (of->IN) (this->DT) (soup->NN) (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'soup', 10, 14]
soup
soup soup 72
[('xxx', 'NN'), ('soup', 'NN'), ('bowl', 'NN')]
['soup']
('tags initial-> ', [('xxx', 'NN'), ('soup', 'NN'), ('bowl', 'NN')])
('tags -> ', '     (xxx->NN) (soup->NN) (bowl->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('ready', 'JJ'), ('to', 'TO'), ('go', 'VB'), ('hm', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (ready->JJ) (to->TO) (go->VB) (hm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('we', 'PRP'), ('ready', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('now', 'RB')])
('tags -> ', '     (daddy->NN) (we->PRP) (ready->VBP) (to->TO) (go->VB) (now->RB) ')
candidates to check:
2
('tags initial-> ', [('mommy', 'NN'), ('you', 'PRP'), ('mommy', 'VBP'), ('fan', 'VB'), ('me', 'PRP')])
('tags -> ', '     (mommy->NN) (you->PRP) (mommy->VBP) (fan->VB) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('ve', 'VBP'), ('become', 'VBN'), ('hot', 'JJ')])
('tags -> ', '     (i->NN) (ve->VBP) (become->VBN) (hot->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('mommy', 'NN'), ('fan', 'NN'), ('me', 'PRP')])
('tags -> ', '     (mommy->NN) (fan->NN) (me->PRP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('because', 'IN')])
('tags -> ', '     (because->IN) ')
('tags initial-> ', [('fan', 'NN'), ('me', 'PRP')])
('tags -> ', '     (fan->NN) (me->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('am', 'VBP'), ('hot', 'JJ')])
('tags -> ', '     (am->VBP) (hot->JJ) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('yes', 'NNS'), ('i', 'VBP'), ('am', 'VBP')])
('tags -> ', '     (yes->NNS) (i->VBP) (am->VBP) ')
('tags initial-> ', [('xxx', 'NNS'), ('still', 'RB')])
('tags -> ', '     (xxx->NNS) (still->RB) ')
candidates to check:
1
descended from food: [['N'], 'food', 20, 24]
('tags initial-> ', [('just', 'RB'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('aimee', 'NN')])
('tags -> ', '     (just->RB) (eat->VB) (your->PRP$) (food->NN) (aimee->NN) ')
candidates to check:
2
('tags initial-> ', [('here', 'RB'), ('just', 'RB'), ('try', 'VB'), ('this', 'DT'), ('whole', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (here->RB) (just->RB) (try->VB) (this->DT) (whole->JJ) (thing->NN) ')
('tags initial-> ', [('just', 'RB'), ('wan', 'WRB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('play', 'NN'), ('with', 'IN'), ('it', 'PRP'), ('and', 'CC'), ('eat', 'VB'), ('it', 'PRP')])
('tags -> ', '     (just->RB) (wan->WRB) (t->JJ) (t->NN) (a->DT) (play->NN) (with->IN) (it->PRP) (and->CC) (eat->VB) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('already', 'RB'), ('ate', 'VB'), ('that', 'IN')])
('tags -> ', '     (i->NN) (already->RB) (ate->VB) (that->IN) ')
candidates to check:
2
descended from food: [['N'], 'breakfast', 20, 29]
('tags initial-> ', [('something', 'NN'), ('for', 'IN'), ('breakfast', 'NN')])
('tags -> ', '     (something->NN) (for->IN) (breakfast->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('stop', 'NN'), ('screaming', 'NN')])
('tags -> ', '     (stop->NN) (screaming->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('wrong', 'JJ'), ('with', 'IN'), ('him', 'PRP')])
('tags -> ', '     (what->WP) (s->VBD) (wrong->JJ) (with->IN) (him->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('pulling', 'VBG'), ('it', 'PRP'), ('out', 'RP')])
('tags -> ', '     (he->PRP) (s->VBZ) (pulling->VBG) (it->PRP) (out->RP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('stop', 'VB'), ('the', 'DT'), ('eating', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (stop->VB) (the->DT) (eating->NN) ')
candidates to check:
3
('tags initial-> ', [('baby', 'NN'), ('you', 'PRP'), ('are', 'VBP'), ('a', 'DT'), ('mean', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (baby->NN) (you->PRP) (are->VBP) (a->DT) (mean->JJ) (boy->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('baby', 'NN'), ('he', 'PRP'), ('like', 'IN'), ('that', 'DT'), ('part', 'NN')])
('tags -> ', '     (xxx->JJ) (look->NN) (at->IN) (baby->NN) (he->PRP) (like->IN) (that->DT) (part->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'meat', 29, 33]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df752098>)
[('xxx', 'NN'), ('i', 'NN'), ('picked', 'VBD'), ('up', 'RP'), ('my', 'PRP$'), ('own', 'JJ'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('picked', 'VBD'), ('up', 'RP'), ('my', 'PRP$'), ('own', 'JJ'), ('meat', 'NN')])
('tags -> ', '     (xxx->NN) (i->NN) (picked->VBD) (up->RP) (my->PRP$) (own->JJ) (meat->NN) ')
('tags initial-> ', [('xxx', 'RB'), ('he', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (xxx->RB) (he->PRP) (like->IN) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('too', 'RB'), ('baby', 'VB')])
('tags -> ', '     (you->PRP) (too->RB) (baby->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('too', 'RB'), ('baby', 'VB')])
('tags -> ', '     (you->PRP) (too->RB) (baby->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('okay', 'NN'), ('junior', 'NN')])
('tags -> ', '     (okay->NN) (junior->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mosquito', 'NN')])
('tags -> ', '     (mosquito->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
pepper
pepper pepper 27
[('pepper', 'NN')]
['pepper']
('tags initial-> ', [('pepper', 'NN')])
('tags -> ', '     (pepper->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'JJ'), ('start', 'NN'), ('with', 'IN'), ('that', 'DT')])
('tags -> ', '     (don->NN) (t->JJ) (start->NN) (with->IN) (that->DT) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'VBD'), ('push', 'NN'), ('back', 'RB'), ('my', 'PRP$'), ('hands', 'NNS')])
('tags -> ', '     (don->NN) (t->VBD) (push->NN) (back->RB) (my->PRP$) (hands->NNS) ')
candidates to check:
2
('tags initial-> ', [('young', 'JJ'), ('man', 'NN')])
('tags -> ', '     (young->JJ) (man->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('here', 'RB'), ('just', 'RB'), ('one', 'CD'), ('second', 'NN')])
('tags -> ', '     (here->RB) (just->RB) (one->CD) (second->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 41, 45]
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('you', 'PRP'), ('wan', 'VBP'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('get', 'NN'), ('into', 'IN'), ('my', 'PRP$'), ('food', 'NN'), ('but', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('going', 'VBG'), ('to', 'TO')])
('tags -> ', '     (i->NN) (know->VBP) (you->PRP) (wan->VBP) (t->JJ) (t->NN) (a->DT) (get->NN) (into->IN) (my->PRP$) (food->NN) (but->CC) (you->PRP) (re->VBP) (not->RB) (going->VBG) (to->TO) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('mean', 'NN'), ('boy', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (a->DT) (mean->NN) (boy->NN) ')
('tags initial-> ', [('he', 'PRP'), ('is', 'VBZ')])
('tags -> ', '     (he->PRP) (is->VBZ) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('one', 'CD'), ('two', 'CD'), ('good', 'JJ')])
('tags -> ', '     (one->CD) (two->CD) (good->JJ) ')
candidates to check:
5
('tags initial-> ', [('do', 'VB'), ('good', 'JJ'), ('do', 'VB'), ('xxx', 'NNS')])
('tags -> ', '     (do->VB) (good->JJ) (do->VB) (xxx->NNS) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('go', 'VB'), ('play', 'NN')])
('tags -> ', '     (go->VB) (play->NN) ')
('tags initial-> ', [('go', 'VB'), ('play', 'NN')])
('tags -> ', '     (go->VB) (play->NN) ')
('tags initial-> ', [('go', 'VB'), ('play', 'NN')])
('tags -> ', '     (go->VB) (play->NN) ')
('tags initial-> ', [('go', 'VB'), ('play', 'NN')])
('tags -> ', '     (go->VB) (play->NN) ')
candidates to check:
1
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('your', 'PRP$'), ('shoes', 'NNS')])
('tags -> ', '     (look->NN) (at->IN) (your->PRP$) (shoes->NNS) ')
candidates to check:
1
('tags initial-> ', [('shoes', 'NNS')])
('tags -> ', '     (shoes->NNS) ')
candidates to check:
1
('tags initial-> ', [('look', 'NN'), ('at', 'IN'), ('shoes', 'NNS')])
('tags -> ', '     (look->NN) (at->IN) (shoes->NNS) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
candidates to check:
2
('tags initial-> ', [('go', 'VB'), ('bring', 'VB'), ('your', 'PRP$'), ('shoes', 'NNS'), ('for', 'IN'), ('daddy', 'NN')])
('tags -> ', '     (go->VB) (bring->VB) (your->PRP$) (shoes->NNS) (for->IN) (daddy->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('bring', 'NN'), ('shoes', 'NNS')])
('tags -> ', '     (bring->NN) (shoes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('xxx', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (xxx->VB) (your->PRP$) (food->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 10, 14]
('tags initial-> ', [('xxx', 'JJ'), ('food', 'NN'), ('aimee', 'NN')])
('tags -> ', '     (xxx->JJ) (food->NN) (aimee->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('how', 'WRB'), ('come', 'VB'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('hungry', 'JJ')])
('tags -> ', '     (how->WRB) (come->VB) (you->PRP) (re->VBP) (not->RB) (hungry->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('was', 'VBD'), ('xxx', 'RB'), ('this', 'DT'), ('afternoon', 'NN')])
('tags -> ', '     (that->DT) (was->VBD) (xxx->RB) (this->DT) (afternoon->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'applesauce', 32, 42]
applesauce
applesauce applesauce 76
[('eat', 'NN'), ('eat', 'NN'), ('eat', 'VB'), ('your', 'PRP$'), ('applesauce', 'NN')]
['applesauce']
('tags initial-> ', [('eat', 'NN'), ('eat', 'NN'), ('eat', 'VB'), ('your', 'PRP$'), ('applesauce', 'NN')])
('tags -> ', '     (eat->NN) (eat->NN) (eat->VB) (your->PRP$) (applesauce->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('but', 'CC'), ('i', 'VBP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (but->CC) (i->VBP) (like->IN) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (like->IN) (it->PRP) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('baby', 'NN')])
('tags -> ', '     (baby->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
descended from food: [['N'], 'dinner', 19, 25]
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('eatin', 'JJ'), ('g', 'NN'), ('dinner', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (eatin->JJ) (g->NN) (dinner->NN) ')
candidates to check:
1
water
water water 18
[('i', 'NN'), ('want', 'VBP'), ('that', 'IN'), ('water', 'NN')]
['water']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('that', 'IN'), ('water', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (that->IN) (water->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('hot', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBD) (hot->JJ) ')
candidates to check:
3
water
water water 18
[('need', 'VB'), ('some', 'DT'), ('water', 'NN'), ('xxx', 'NN')]
['water']
('tags initial-> ', [('need', 'VB'), ('some', 'DT'), ('water', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (need->VB) (some->DT) (water->NN) (xxx->NN) ')
candidates to check:
1
water
water water 18
[('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('water', 'NN'), ('xxx', 'NN')]
['water']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('water', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (some->DT) (water->NN) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('must', 'MD'), ('ha', 'VB'), ('ve', 'NN'), ('been', 'VBN'), ('xxx', 'JJ')])
('tags -> ', '     (xxx->NN) (must->MD) (ha->VB) (ve->NN) (been->VBN) (xxx->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('ome', 'NN'), ('b', 'NN')])
('tags -> ', '     (ome->NN) (b->NN) ')
('tags initial-> ', [('ome', 'NN'), ('b', 'NN')])
('tags -> ', '     (ome->NN) (b->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('wait', 'VB'), ('outside', 'IN'), ('for', 'IN'), ('me', 'PRP')])
('tags -> ', '     (can->MD) (you->PRP) (wait->VB) (outside->IN) (for->IN) (me->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('kind', 'NN'), ('of', 'IN'), ('xxx', 'NN'), ('is', 'VBZ'), ('this', 'DT')])
('tags -> ', '     (what->WP) (kind->NN) (of->IN) (xxx->NN) (is->VBZ) (this->DT) ')
candidates to check:
3
descended from food: [['N'], 'food', 42, 46]
('tags initial-> ', [('nobody', 'NN'), ('ain', 'VBP'), ('t', 'IN'), ('nobody', 'NN'), ('ain', 'VBP'), ('t', 'JJ'), ('xxx', 'FW'), ('food', 'NN'), ('there', 'RB')])
('tags -> ', '     (nobody->NN) (ain->VBP) (t->IN) (nobody->NN) (ain->VBP) (t->JJ) (xxx->FW) (food->NN) (there->RB) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('nobody', 'NN'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (be->VB) (cause->NN) (nobody->NN) (like->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('nobody', 'NN')])
('tags -> ', '     (nobody->NN) ')
candidates to check:
1
('tags initial-> ', [('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (look->NN) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
4
descended from food: [['N'], 'food', 26, 30]
('tags initial-> ', [('daddy', 'NNS'), ('make', 'VBP'), ('your', 'PRP$'), ('food', 'NN'), ('one', 'CD'), ('more', 'JJR'), ('xxx', 'NN')])
('tags -> ', '     (daddy->NNS) (make->VBP) (your->PRP$) (food->NN) (one->CD) (more->JJR) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('stop', 'NN'), ('tapping', 'NN'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN')])
('tags -> ', '     (xxx->JJ) (stop->NN) (tapping->NN) (on->IN) (the->DT) (table->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('that', 'IN')])
('tags -> ', '     (xxx->NN) (that->IN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'NN'), ('you', 'PRP'), ('too', 'RB')])
('tags -> ', '     (that->DT) (s->NN) (you->PRP) (too->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'UH'), ('oh', 'UH'), ('oh', 'NN')])
('tags -> ', '     (oh->UH) (oh->UH) (oh->NN) ')
('tags initial-> ', [('oh', 'UH'), ('oh', 'UH'), ('oh', 'NN')])
('tags -> ', '     (oh->UH) (oh->UH) (oh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('no', 'DT'), ('no', 'DT')])
('tags -> ', '     (no->DT) (no->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('why', 'WRB'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (why->WRB) (you->PRP) (can->MD) (t->VB) (do->VB) (that->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('y', 'RB'), ('all', 'DT'), ('d', 'NN'), ('had', 'VBD'), ('enough', 'JJ')])
('tags -> ', '     (y->RB) (all->DT) (d->NN) (had->VBD) (enough->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('y', 'RB'), ('all', 'DT'), ('d', 'NN'), ('had', 'VBD'), ('enough', 'JJ'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (y->RB) (all->DT) (d->NN) (had->VBD) (enough->JJ) (to->TO) (eat->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 29, 33]
milk
milk milk 46
[('don', 'NN'), ('t', 'NN'), ('throw', 'VB'), ('away', 'RP'), ('that', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('throw', 'VB'), ('away', 'RP'), ('that', 'DT'), ('milk', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (throw->VB) (away->RP) (that->DT) (milk->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'JJ'), ('bottle', 'NN')])
('tags -> ', '     (xxx->JJ) (bottle->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('d', 'VBZ'), ('id', 'NN'), ('you', 'PRP'), ('do', 'VBP'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (d->VBZ) (id->NN) (you->PRP) (do->VBP) (in->IN) (school->NN) (today->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('d', 'VBZ'), ('id', 'NN'), ('you', 'PRP'), ('do', 'VBP'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (d->VBZ) (id->NN) (you->PRP) (do->VBP) (in->IN) (school->NN) (today->NN) ')
('tags initial-> ', [('i', 'NN'), ('color', 'NN')])
('tags -> ', '     (i->NN) (color->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('went', 'VBD'), ('outside', 'RB'), ('to', 'TO'), ('the', 'DT'), ('park', 'NN')])
('tags -> ', '     (i->JJ) (went->VBD) (outside->RB) (to->TO) (the->DT) (park->NN) ')
('tags initial-> ', [('went', 'VBD'), ('walking', 'VBG')])
('tags -> ', '     (went->VBD) (walking->VBG) ')
candidates to check:
1
('tags initial-> ', [('went', 'VBD'), ('out', 'RP'), ('wi', 'NN'), ('th', 'NN'), ('um', 'JJ'), ('wi', 'NN'), ('th', 'NN'), ('xxx', 'NN'), ('for', 'IN'), ('a', 'DT'), ('walk', 'NN'), ('and', 'CC'), ('xxx', 'NN')])
('tags -> ', '     (went->VBD) (out->RP) (wi->NN) (th->NN) (um->JJ) (wi->NN) (th->NN) (xxx->NN) (for->IN) (a->DT) (walk->NN) (and->CC) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('something', 'NN')])
('tags -> ', '     (xxx->NNS) (something->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (food->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (food->NN) ')
candidates to check:
3
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('home', 'RB'), ('all', 'DT'), ('day', 'NN')])
('tags -> ', '     (i->NN) (was->VBD) (home->RB) (all->DT) (day->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (food->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('my', 'PRP$'), ('arm', 'NN'), ('it', 'PRP'), ('itches', 'VBZ'), ('me', 'PRP')])
('tags -> ', '     (be->VB) (cause->NN) (my->PRP$) (arm->NN) (it->PRP) (itches->VBZ) (me->PRP) ')
('tags initial-> ', [('aimee', 'NN'), ('hurry', 'VBZ'), ('up', 'RP')])
('tags -> ', '     (aimee->NN) (hurry->VBZ) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'VB'), ('my', 'PRP$'), ('arm', 'NN'), ('is', 'VBZ'), ('itching', 'VBG'), ('xxx', 'NNS')])
('tags -> ', '     (xxx->VB) (my->PRP$) (arm->NN) (is->VBZ) (itching->VBG) (xxx->NNS) ')
candidates to check:
3
descended from food: [['N'], 'food', 51, 55]
('tags initial-> ', [('yeah', 'NN'), ('but', 'CC'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('your', 'PRP$'), ('arms', 'NNS'), ('for', 'IN'), ('eating', 'VBG'), ('food', 'NN')])
('tags -> ', '     (yeah->NN) (but->CC) (you->PRP) (don->VBP) (t->JJ) (need->VBP) (your->PRP$) (arms->NNS) (for->IN) (eating->VBG) (food->NN) ')
candidates to check:
4
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('ta', 'RB'), ('go', 'VB'), ('to', 'TO'), ('bed', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('got', 'VBD'), ('ta', 'RB'), ('go', 'VB'), ('to', 'TO'), ('school', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (you->PRP) (got->VBD) (ta->RB) (go->VB) (to->TO) (bed->RB) (be->VB) (cause->NN) (you->PRP) (got->VBD) (ta->RB) (go->VB) (to->TO) (school->NN) (tomorrow->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('bit', 'NN'), ('past', 'IN'), ('your', 'PRP$'), ('bedtime', 'NN'), ('so', 'RB'), ('hurry', 'VBZ'), ('up', 'RP')])
('tags -> ', '     (and->CC) (it->PRP) (s->VBZ) (a->DT) (bit->NN) (past->IN) (your->PRP$) (bedtime->NN) (so->RB) (hurry->VBZ) (up->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('why', 'WRB'), ('have', 'VBP'), ('you', 'PRP'), ('xxx', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (why->WRB) (have->VBP) (you->PRP) (xxx->VBP) (it->PRP) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('through', 'IN'), ('mom', 'NN')])
('tags -> ', '     (i->NN) (m->VBP) (through->IN) (mom->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 20, 24]
milk
milk milk 46
[('you', 'PRP'), ('drink', 'VBP'), ('any', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('you', 'PRP'), ('drink', 'VBP'), ('any', 'DT'), ('milk', 'NN')])
('tags -> ', '     (you->PRP) (drink->VBP) (any->DT) (milk->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
descended from food: [['N'], 'milk', 20, 24]
milk
milk milk 46
[('you', 'PRP'), ('drink', 'VBP'), ('any', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('you', 'PRP'), ('drink', 'VBP'), ('any', 'DT'), ('milk', 'NN')])
('tags -> ', '     (you->PRP) (drink->VBP) (any->DT) (milk->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (xxx->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'VB'), ('my', 'PRP$'), ('stomach', 'NN'), ('hurts', 'NNS')])
('tags -> ', '     (xxx->VB) (my->PRP$) (stomach->NN) (hurts->NNS) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN')])
('tags -> ', '     (xxx->NN) (i->NNS) (have->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (bath->NN) (room->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('always', 'RB'), ('say', 'VBP'), ('your', 'PRP$'), ('stomach', 'NN'), ('hurts', 'NNS')])
('tags -> ', '     (you->PRP) (always->RB) (say->VBP) (your->PRP$) (stomach->NN) (hurts->NNS) ')
candidates to check:
1
descended from food: [['N'], 'food', 15, 19]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (food->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('my', 'PRP$'), ('stomach', 'NN'), ('hurts', 'NNS')])
('tags -> ', '     (but->CC) (my->PRP$) (stomach->NN) (hurts->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('always', 'RB'), ('keep', 'VB'), ('saying', 'VBG'), ('xxx', 'NN')])
('tags -> ', '     (you->PRP) (always->RB) (keep->VB) (saying->VBG) (xxx->NN) ')
candidates to check:
4
descended from food: [['N'], 'food', 14, 18]
('tags initial-> ', [('xxx', 'NN'), ('has', 'VBZ'), ('food', 'NN'), ('tonight', 'NN')])
('tags -> ', '     (xxx->NN) (has->VBZ) (food->NN) (tonight->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (yeah->NN) (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (yeah->NN) (mommy->NN) ')
candidates to check:
2
descended from food: [['N'], 'food', 25, 29]
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('eat', 'VBP'), ('all', 'DT'), ('my', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (eat->VBP) (all->DT) (my->PRP$) (food->NN) ')
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (but->CC) (i->NN) (did->VBD) ')
('tags initial-> ', [('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (i->NN) (did->VBD) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('eat', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (eat->NN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('eat', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (i->JJ) (eat->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('hungry', 'JJ')])
('tags -> ', '     (mommy->NN) (i->NNS) (m->VBP) (not->RB) (hungry->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('xxx', 'VBP')])
('tags -> ', '     (mommy->NN) (i->NN) (xxx->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('still', 'RB'), ('got', 'VBD'), ('xxx', 'JJ'), ('mommy', 'NN')])
('tags -> ', '     (i->NN) (still->RB) (got->VBD) (xxx->JJ) (mommy->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('may', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('some', 'DT')])
('tags -> ', '     (may->MD) (i->VB) (have->VBP) (some->DT) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('nobody', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (nobody->NN) (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
loading solution set
calculating
set([(887, (15, 24)), (1991, (32, 42)), (884, (19, 23)), (884, (28, 37)), (1633, (10, 14)), (2031, (22, 27)), (1499, (6, 14)), (881, (15, 24)), (2046, (18, 23)), (1409, (10, 15)), (881, (6, 10)), (1399, (32, 37)), (864, (21, 30)), (1549, (18, 24)), (1545, (22, 28)), (2276, (20, 24)), (2284, (20, 24)), (1468, (32, 37)), (1481, (20, 25)), (864, (39, 43)), (887, (6, 10)), (852, (21, 25)), (873, (14, 23)), (2043, (16, 21)), (860, (27, 36)), (1841, (6, 12)), (1386, (26, 31)), (1630, (24, 28))])
[((852, (21, 25)), '*CHI:\tcan I get some milk please (.) ?\n'), ((860, (27, 36)), '*CHI:\tMommy can I get some chocolate (.) ?\n'), ((864, (21, 30)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((864, (39, 43)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((873, (14, 23)), '*CHI:\txxx [>] chocolate .\n'), ((881, (6, 10)), '*CHI:\tmilk and chocolate .\n'), ((881, (15, 24)), '*CHI:\tmilk and chocolate .\n'), ((884, (19, 23)), '*CHI:\tMommy I want milk and chocolate .\n'), ((884, (28, 37)), '*CHI:\tMommy I want milk and chocolate .\n'), ((887, (6, 10)), '*CHI:\tmilk and chocolate (.) .\n'), ((887, (15, 24)), '*CHI:\tmilk and chocolate (.) .\n'), ((1386, (26, 31)), "*BRO:\tdidn't you get some juice ?\n"), ((1399, (32, 37)), "*CHI:\tDaddy I didn't ask for no juice .\n"), ((1409, (10, 15)), '*CHI:\txxx juice thank you .\n'), ((1468, (32, 37)), '*MOT:\tI am [!] gonna bring some juice .\n'), ((1481, (20, 25)), "*MOT:\tI'm gonna get juice .\n"), ((1499, (6, 14)), '*MOT:\tpotatoes only [?] (.) .\n'), ((1545, (22, 28)), "*CHI:\tI don't like no pepper .\n"), ((1549, (18, 24)), '*CHI:\tdo you like pepper ?\n'), ((1630, (24, 28)), '*MOT:\twant some of this soup xxx ?\n'), ((1633, (10, 14)), '*BRO:\txxx soup bowl ?\n'), ((1841, (6, 12)), '*CHI:\tpepper (.) .\n'), ((1991, (32, 42)), '*MOT:\t<eat [/] eat [/] eat your applesauce> [<] .\n'), ((2031, (22, 27)), '*CHI:\tI want that [?] water .\n'), ((2043, (16, 21)), '*FAT:\tneed some water xxx .\n'), ((2046, (18, 23)), '*CHI:\tI want some water xxx .\n'), ((2276, (20, 24)), '*MOT:\tyou drink any milk ?\n'), ((2284, (20, 24)), '*MOT:\tyou drink any milk ?\n')]
set([(887, (15, 24)), (1771, (29, 33)), (884, (19, 23)), (2217, (15, 19)), (1327, (31, 35)), (852, (21, 25)), (1633, (10, 14)), (1991, (32, 42)), (2324, (14, 18)), (884, (28, 37)), (891, (10, 15)), (1468, (32, 37)), (2031, (22, 27)), (2314, (15, 19)), (2095, (42, 46)), (1499, (6, 14)), (84, (12, 18)), (881, (15, 24)), (2241, (51, 55)), (2228, (15, 19)), (2046, (18, 23)), (1288, (64, 68)), (1409, (10, 15)), (881, (6, 10)), (2180, (29, 33)), (1399, (32, 37)), (864, (21, 30)), (1708, (20, 29)), (1549, (18, 24)), (2342, (25, 29)), (1545, (22, 28)), (1939, (15, 19)), (2276, (20, 24)), (2284, (20, 24)), (895, (10, 15)), (2115, (26, 30)), (1481, (20, 25)), (1502, (27, 31)), (1685, (20, 24)), (2027, (19, 25)), (1455, (33, 37)), (1129, (38, 42)), (1489, (24, 28)), (864, (39, 43)), (887, (6, 10)), (2220, (15, 19)), (1084, (26, 32)), (1947, (10, 14)), (873, (14, 23)), (1871, (41, 45)), (2043, (16, 21)), (860, (27, 36)), (1841, (6, 12)), (1386, (26, 31)), (1630, (24, 28))])
[((84, (12, 18)), "*MOT:\t<it's supper time> [<] .\n"), ((852, (21, 25)), '*CHI:\tcan I get some milk please (.) ?\n'), ((860, (27, 36)), '*CHI:\tMommy can I get some chocolate (.) ?\n'), ((864, (21, 30)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((864, (39, 43)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((873, (14, 23)), '*CHI:\txxx [>] chocolate .\n'), ((881, (6, 10)), '*CHI:\tmilk and chocolate .\n'), ((881, (15, 24)), '*CHI:\tmilk and chocolate .\n'), ((884, (19, 23)), '*CHI:\tMommy I want milk and chocolate .\n'), ((884, (28, 37)), '*CHI:\tMommy I want milk and chocolate .\n'), ((887, (6, 10)), '*CHI:\tmilk and chocolate (.) .\n'), ((887, (15, 24)), '*CHI:\tmilk and chocolate (.) .\n'), ((891, (10, 15)), '*CHI:\tand shake good up .\n'), ((895, (10, 15)), '*CHI:\tand shake it up .\n'), ((1084, (26, 32)), "*CHI:\tcome on Robbie it's dinner (.) .\n"), ((1129, (38, 42)), '*MOT:\tAimee you gonna eat lots [>] of food tonight (.) .\n'), ((1288, (64, 68)), '*CHI:\tGod is great (.) God is good (.) let us thank him for our food (.) amen .\n'), ((1327, (31, 35)), '*BRO:\tand we thank him for our food (.) .\n'), ((1386, (26, 31)), "*BRO:\tdidn't you get some juice ?\n"), ((1399, (32, 37)), "*CHI:\tDaddy I didn't ask for no juice .\n"), ((1409, (10, 15)), '*CHI:\txxx juice thank you .\n'), ((1455, (33, 37)), '*CHI:\tbut Daddy it was behind my food .\n'), ((1468, (32, 37)), '*MOT:\tI am [!] gonna bring some juice .\n'), ((1481, (20, 25)), "*MOT:\tI'm gonna get juice .\n"), ((1489, (24, 28)), '*MOT:\tthey eat all this food [>] .\n'), ((1499, (6, 14)), '*MOT:\tpotatoes only [?] (.) .\n'), ((1502, (27, 31)), '*MOT:\tthey do eat all this food (.) .\n'), ((1545, (22, 28)), "*CHI:\tI don't like no pepper .\n"), ((1549, (18, 24)), '*CHI:\tdo you like pepper ?\n'), ((1630, (24, 28)), '*MOT:\twant some of this soup xxx ?\n'), ((1633, (10, 14)), '*BRO:\txxx soup bowl ?\n'), ((1685, (20, 24)), '*MOT:\tjust eat your food Aimee .\n'), ((1708, (20, 29)), '*CHI:\tsomething for breakfast (.) .\n'), ((1771, (29, 33)), '*CHI:\txxx I picked up my own meat (.) .\n'), ((1841, (6, 12)), '*CHI:\tpepper (.) .\n'), ((1871, (41, 45)), "*MOT:\tI know you wan(t) (t)a get into my food but you're not going to .\n"), ((1939, (15, 19)), '*FAT:\txxx your food .\n'), ((1947, (10, 14)), '*FAT:\txxx food Aimee .\n'), ((1991, (32, 42)), '*MOT:\t<eat [/] eat [/] eat your applesauce> [<] .\n'), ((2027, (19, 25)), "*CHI:\tI'm eatin(g) dinner (.) .\n"), ((2031, (22, 27)), '*CHI:\tI want that [?] water .\n'), ((2043, (16, 21)), '*FAT:\tneed some water xxx .\n'), ((2046, (18, 23)), '*CHI:\tI want some water xxx .\n'), ((2095, (42, 46)), "*FAT:\t<nobody ain't> [/] nobody ain't xxx food there .\n"), ((2115, (26, 30)), '*CHI:\tDaddy [?] make your food one more xxx .\n'), ((2180, (29, 33)), "*MOT:\t<don't throw away that milk> [<] .\n"), ((2217, (15, 19)), '*FAT:\teat your food .\n'), ((2220, (15, 19)), '*FAT:\teat your food .\n'), ((2228, (15, 19)), '*FAT:\teat your food .\n'), ((2241, (51, 55)), "*MOT:\tyeah but you don't need your arms for eating food .\n"), ((2276, (20, 24)), '*MOT:\tyou drink any milk ?\n'), ((2284, (20, 24)), '*MOT:\tyou drink any milk ?\n'), ((2314, (15, 19)), '*MOT:\teat your food .\n'), ((2324, (14, 18)), '*MOT:\txxx has food tonight ?\n'), ((2342, (25, 29)), '*CHI:\tMommy I eat all my food .\n')]
calculating accuracy and recall
correct labels:
set(['pepper', 'soup', 'potatoes', 'chocolate', 'water', 'juice', 'applesauce', 'milk'])
predicted labels:
set(['pepper', 'meat', 'soup', 'food', 'potatoes', 'supper', 'chocolate', 'water', 'juice', 'dinner', 'applesauce', 'shake', 'breakfast', 'milk'])
file:HSLLD/HV1/MT//aimmt1.cha
precision: 0.571428571429
recall: 1.0
true positives:['applesauce', 'chocolate', 'juice', 'milk', 'pepper', 'potatoes', 'soup', 'water']
false positives: ['breakfast', 'dinner', 'food', 'meat', 'shake', 'supper']
false negatives: []
# true pos: 8
# false pos: 6
# false neg: 0
HSLLD/HV1/MT//allmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('is', 'VBZ'), ('that', 'IN'), ('a', 'DT'), ('rabbit', 'NN')])
('tags -> ', '     (is->VBZ) (that->IN) (a->DT) (rabbit->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('it', 'PRP'), ('looks', 'VBZ'), ('like', 'IN'), ('one', 'CD')])
('tags -> ', '     (it->PRP) (looks->VBZ) (like->IN) (one->CD) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('rabbit', 'NN')])
('tags -> ', '     (a->DT) (rabbit->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('rabbit', 'NN')])
('tags -> ', '     (no->DT) (rabbit->NN) ')
('tags initial-> ', [('look', 'NN')])
('tags -> ', '     (look->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('my', 'PRP$'), ('papa', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (my->PRP$) (papa->NN) ')
('tags initial-> ', [('not', 'RB'), ('your', 'PRP$'), ('papa', 'NN'), ('yet', 'RB')])
('tags -> ', '     (not->RB) (your->PRP$) (papa->NN) (yet->RB) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
('tags initial-> ', [('that', 'IN')])
('tags -> ', '     (that->IN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('his', 'PRP$'), ('green', 'JJ'), ('car', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (his->PRP$) (green->JJ) (car->NN) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('color', 'NN'), ('was', 'VBD'), ('that', 'IN'), ('car', 'NN')])
('tags -> ', '     (what->WP) (color->NN) (was->VBD) (that->IN) (car->NN) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
('tags initial-> ', [('blue', 'NN'), ('and', 'CC')])
('tags -> ', '     (blue->NN) (and->CC) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
2
('tags initial-> ', [('black', 'JJ'), ('wheels', 'NNS')])
('tags -> ', '     (black->JJ) (wheels->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('black', 'JJ'), ('wheels', 'NNS')])
('tags -> ', '     (and->CC) (black->JJ) (wheels->NNS) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('smart', 'JJ'), ('kid', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (a->DT) (smart->JJ) (kid->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('black', 'JJ'), ('striped', 'NN'), ('lines', 'NNS')])
('tags -> ', '     (and->CC) (and->CC) (black->JJ) (striped->NN) (lines->NNS) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
4
descended from food: [['N'], 'lunch', 28, 33]
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('for', 'IN'), ('lunch', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (d->VBP) (have->VBP) (for->IN) (lunch->NN) (today->NN) ')
candidates to check:
3
descended from food: [['N'], 'butter', 13, 19]
descended from food: [['N'], 'jelly', 24, 29]
peanut
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df7bdb48>)
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['peanut']
peanut butter
peanut butter peanut butter 590
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['peanut', 'butter']
butter
butter butter 499
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['butter']
('tags initial-> ', [('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')])
('tags -> ', '     (peanut->NN) (butter->NN) (and->CC) (jelly->RB) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
3
descended from food: [['N'], 'butter', 13, 19]
descended from food: [['N'], 'jelly', 24, 29]
peanut
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df7bdf80>)
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['peanut']
peanut butter
peanut butter peanut butter 590
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['peanut', 'butter']
butter
butter butter 499
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['butter']
('tags initial-> ', [('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')])
('tags -> ', '     (peanut->NN) (butter->NN) (and->CC) (jelly->RB) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('it', 'PRP'), ('all', 'DT')])
('tags -> ', '     (did->VBD) (you->PRP) (eat->VB) (it->PRP) (all->DT) ')
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('asked', 'VBD'), ('her', 'PRP$'), ('for', 'IN'), ('one', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (asked->VBD) (her->PRP$) (for->IN) (one->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('h', 'NN')])
('tags -> ', '     (a->DT) (h->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) (did->VBD) (you->PRP) (have->VB) ')
candidates to check:
1
celery
celery celery 18
[('celery', 'NN')]
['celery']
('tags initial-> ', [('celery', 'NN')])
('tags -> ', '     (celery->NN) ')
('tags initial-> ', [('with', 'IN'), ('what', 'WP')])
('tags -> ', '     (with->IN) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('here', 'RB'), ('mom', 'NN')])
('tags -> ', '     (here->RB) (mom->NN) ')
candidates to check:
1
celery
celery celery 18
[('you', 'PRP'), ('cut', 'VBD'), ('up', 'RP'), ('some', 'DT'), ('celery', 'NN')]
['celery']
('tags initial-> ', [('you', 'PRP'), ('cut', 'VBD'), ('up', 'RP'), ('some', 'DT'), ('celery', 'NN')])
('tags -> ', '     (you->PRP) (cut->VBD) (up->RP) (some->DT) (celery->NN) ')
candidates to check:
1
celery
celery celery 18
[('with', 'IN'), ('celery', 'NN')]
['celery']
('tags initial-> ', [('with', 'IN'), ('celery', 'NN')])
('tags -> ', '     (with->IN) (celery->NN) ')
candidates to check:
2
celery
celery celery 18
[('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('have', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('celery', 'NN')]
['celery']
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('have', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('celery', 'NN')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (d->VBP) (have->VB) (what->WP) (you->PRP) (have->VBP) (on->IN) (the->DT) (celery->NN) ')
candidates to check:
4
descended from food: [['N'], 'butter', 26, 32]
peanut
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df7e53b0>)
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('peanut', 'VBN'), ('butter', 'NN')]
['peanut']
peanut butter
peanut butter peanut butter 590
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('peanut', 'VBN'), ('butter', 'NN')]
['peanut', 'butter']
butter
butter butter 499
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('peanut', 'VBN'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('peanut', 'VBN'), ('butter', 'NN')])
('tags -> ', '     (d->NN) (you->PRP) (d->VBP) (have->VBP) (peanut->VBN) (butter->NN) ')
candidates to check:
2
descended from food: [['N'], 'butter', 15, 21]
butter
butter butter 499
[('pean', 'JJ'), ('ut', 'NN'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('pean', 'JJ'), ('ut', 'NN'), ('butter', 'NN')])
('tags -> ', '     (pean->JJ) (ut->NN) (butter->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('ate', 'VBP'), ('three', 'CD'), ('pieces', 'NNS'), ('of', 'IN'), ('that', 'DT')])
('tags -> ', '     (you->PRP) (ate->VBP) (three->CD) (pieces->NNS) (of->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('three', 'CD'), ('pieces', 'NNS')])
('tags -> ', '     (three->CD) (pieces->NNS) ')
candidates to check:
1
('tags initial-> ', [('three', 'CD'), ('pieces', 'NNS')])
('tags -> ', '     (three->CD) (pieces->NNS) ')
('tags initial-> ', [('filled', 'VBD'), ('her', 'PRP'), ('up', 'RP')])
('tags -> ', '     (filled->VBD) (her->PRP) (up->RP) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
candidates to check:
2
('tags initial-> ', [('one', 'CD'), ('more', 'JJR'), ('piece', 'NN')])
('tags -> ', '     (one->CD) (more->JJR) (piece->NN) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('other', 'JJ'), ('more', 'JJR'), ('piece', 'NN'), ('and', 'CC'), ('the', 'DT'), ('other', 'JJ'), ('piece', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (other->JJ) (more->JJR) (piece->NN) (and->CC) (the->DT) (other->JJ) (piece->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
4
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('other', 'JJ'), ('piece', 'NN'), ('and', 'CC'), ('the', 'DT'), ('other', 'JJ'), ('piece', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (other->JJ) (piece->NN) (and->CC) (the->DT) (other->JJ) (piece->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('h', 'NN')])
('tags -> ', '     (a->DT) (h->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('eat', 'VB'), ('how', 'WRB'), ('you', 'PRP'), ('do', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (eat->VB) (how->WRB) (you->PRP) (do->VBP) (it->PRP) ')
candidates to check:
3
('tags initial-> ', [('this', 'DT'), ('piece', 'NN'), ('and', 'CC'), ('this', 'DT'), ('piece', 'NN'), ('and', 'CC'), ('this', 'DT'), ('piece', 'NN')])
('tags -> ', '     (this->DT) (piece->NN) (and->CC) (this->DT) (piece->NN) (and->CC) (this->DT) (piece->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
2
goose
goose goose 133
[('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('silly', 'RB'), ('goose', 'JJ')]
['goose']
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('silly', 'RB'), ('goose', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (a->DT) (silly->RB) (goose->JJ) ')
candidates to check:
1
('tags initial-> ', [('something', 'NN'), ('smells', 'NNS')])
('tags -> ', '     (something->NN) (smells->NNS) ')
('tags initial-> ', [('gon', 'NN'), ('na', 'TO')])
('tags -> ', '     (gon->NN) (na->TO) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 10, 15]
pizza
pizza pizza 274
[('the', 'DT'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('the', 'DT'), ('pizza', 'NN')])
('tags -> ', '     (the->DT) (pizza->NN) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 9, 14]
pizza
pizza pizza 274
[('my', 'PRP$'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('my', 'PRP$'), ('pizza', 'NN')])
('tags -> ', '     (my->PRP$) (pizza->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'cheese', 31, 37]
cheese
cheese cheese 280
[('it', 'PRP'), ('s', 'VBZ'), ('you', 'PRP'), ('smell', 'VBP'), ('the', 'DT'), ('cheese', 'NN')]
['cheese']
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('you', 'PRP'), ('smell', 'VBP'), ('the', 'DT'), ('cheese', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (you->PRP) (smell->VBP) (the->DT) (cheese->NN) ')
candidates to check:
2
descended from food: [['N'], 'pizza', 16, 21]
pizza
pizza pizza 274
[('that', 'DT'), ('good', 'JJ'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('that', 'DT'), ('good', 'JJ'), ('pizza', 'NN')])
('tags -> ', '     (that->DT) (good->JJ) (pizza->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('yum', 'NN')])
('tags -> ', '     (yum->NN) ')
candidates to check:
3
descended from food: [['N'], 'steak', 22, 27]
descended from food: [['N'], 'pizza', 64, 69]
pizza
pizza pizza 274
[('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('more', 'RBR'), ('steak', 'NNS'), ('so', 'RB'), ('make', 'VB'), ('sure', 'JJ'), ('you', 'PRP'), ('finish', 'VBP'), ('eating', 'VBG'), ('your', 'PRP$'), ('pizza', 'NN'), ('too', 'RB')]
['pizza']
('tags initial-> ', [('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('more', 'RBR'), ('steak', 'NNS'), ('so', 'RB'), ('make', 'VB'), ('sure', 'JJ'), ('you', 'PRP'), ('finish', 'VBP'), ('eating', 'VBG'), ('your', 'PRP$'), ('pizza', 'NN'), ('too', 'RB')])
('tags -> ', '     (there->EX) (s->VBZ) (no->DT) (more->RBR) (steak->NNS) (so->RB) (make->VB) (sure->JJ) (you->PRP) (finish->VBP) (eating->VBG) (your->PRP$) (pizza->NN) (too->RB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
descended from food: [['N'], 'steak', 22, 27]
('tags initial-> ', [('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('more', 'RBR'), ('steak', 'NN')])
('tags -> ', '     (there->EX) (s->VBZ) (no->DT) (more->RBR) (steak->NN) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 25, 30]
pizza
pizza pizza 274
[('finish', 'JJ'), ('eating', 'VBG'), ('your', 'PRP$'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('finish', 'JJ'), ('eating', 'VBG'), ('your', 'PRP$'), ('pizza', 'NN')])
('tags -> ', '     (finish->JJ) (eating->VBG) (your->PRP$) (pizza->NN) ')
candidates to check:
2
descended from food: [['N'], 'steak', 19, 24]
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('steak', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (more->JJR) (steak->NN) ')
('tags initial-> ', [('you', 'PRP'), ('ate', 'VBP'), ('it', 'PRP'), ('all', 'DT')])
('tags -> ', '     (you->PRP) (ate->VBP) (it->PRP) (all->DT) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('you', 'PRP'), ('ate', 'VBP'), ('it', 'PRP'), ('all', 'DT')])
('tags -> ', '     (you->PRP) (ate->VBP) (it->PRP) (all->DT) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
1
('tags initial-> ', [('yes', 'NNS'), ('sir', 'VBP')])
('tags -> ', '     (yes->NNS) (sir->VBP) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (yeah->NN) (you->PRP) (did->VBD) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('were', 'VBD'), ('there', 'EX'), ('was', 'VBD'), ('a', 'DT'), ('piece', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('left', 'VBN'), ('over', 'RP')])
('tags -> ', '     (you->PRP) (were->VBD) (there->EX) (was->VBD) (a->DT) (piece->NN) (that->WDT) (was->VBD) (left->VBN) (over->RP) ')
('tags initial-> ', [('remember', 'VB')])
('tags -> ', '     (remember->VB) ')
('tags initial-> ', [('i', 'NN'), ('cut', 'VBD'), ('it', 'PRP'), ('all', 'DT'), ('up', 'RP'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (cut->VBD) (it->PRP) (all->DT) (up->RP) (for->IN) (you->PRP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (it->PRP) (s->VBD) (right->RB) (here->RB) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('well', 'RB'), ('yeah', 'RB')])
('tags -> ', '     (well->RB) (yeah->RB) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('your', 'PRP$'), ('dish', 'NN')])
('tags -> ', '     (on->IN) (your->PRP$) (dish->NN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('eating', 'VBG'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (you->PRP) (re->VBP) (eating->VBG) (it->PRP) ')
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('said', 'VBD'), ('it', 'PRP'), ('was', 'VBD'), ('all', 'DT'), ('gone', 'VBN')])
('tags -> ', '     (but->CC) (you->PRP) (said->VBD) (it->PRP) (was->VBD) (all->DT) (gone->VBN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('it', 'PRP'), ('ll', 'VBZ'), ('be', 'VB'), ('all', 'DT'), ('gone', 'VBN'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('eating', 'VBG'), ('it', 'PRP')])
('tags -> ', '     (it->PRP) (ll->VBZ) (be->VB) (all->DT) (gone->VBN) (when->WRB) (you->PRP) (re->VBP) (done->VBN) (eating->VBG) (it->PRP) ')
('tags initial-> ', [('nuhhuh', 'NN')])
('tags -> ', '     (nuhhuh->NN) ')
candidates to check:
6
descended from food: [['N'], 'food', 46, 50]
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('my', 'PRP$'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('my', 'PRP$'), ('food', 'NN'), ('in', 'IN'), ('a', 'DT'), ('paper', 'NN'), ('in', 'IN'), ('a', 'DT'), ('paper', 'NN'), ('bag', 'NN'), ('this', 'DT'), ('time', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (put->VB) (my->PRP$) (i->NN) (m->VBP) (gon->NN) (na->TO) (put->VB) (my->PRP$) (food->NN) (in->IN) (a->DT) (paper->NN) (in->IN) (a->DT) (paper->NN) (bag->NN) (this->DT) (time->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('what', 'WP')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (what->WP) ')
candidates to check:
3
descended from food: [['N'], 'food', 21, 25]
('tags initial-> ', [('i', 'NN'), ('gon', 'VBP'), ('na', 'TO'), ('put', 'VB'), ('my', 'PRP$'), ('food', 'NN'), ('in', 'IN'), ('a', 'DT'), ('paper', 'NN'), ('bag', 'NN')])
('tags -> ', '     (i->NN) (gon->VBP) (na->TO) (put->VB) (my->PRP$) (food->NN) (in->IN) (a->DT) (paper->NN) (bag->NN) ')
candidates to check:
4
descended from food: [['N'], 'food', 19, 23]
('tags initial-> ', [('put', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('in', 'IN'), ('a', 'DT'), ('paper', 'NN'), ('bag', 'NN')])
('tags -> ', '     (put->VB) (your->PRP$) (food->NN) (in->IN) (a->DT) (paper->NN) (bag->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('work', 'VB')])
('tags -> ', '     (are->VBP) (you->PRP) (going->VBG) (to->TO) (work->VB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('awoh', 'NN')])
('tags -> ', '     (awoh->NN) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('please', 'VB'), ('come', 'VB')])
('tags -> ', '     (can->MD) (i->VB) (please->VB) (come->VB) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('swim', 'VBZ'), ('the', 'DT'), ('this', 'DT'), ('this', 'DT'), ('one', 'CD'), ('and', 'CC'), ('play', 'VB'), ('with', 'IN'), ('kyle', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (swim->VBZ) (the->DT) (this->DT) (this->DT) (one->CD) (and->CC) (play->VB) (with->IN) (kyle->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('cry', 'NN')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (cry->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('maybe', 'RB'), ('kyle', 'JJ'), ('went', 'VBD'), ('to', 'TO'), ('have', 'VB'), ('his', 'PRP$'), ('ears', 'NNS'), ('checked', 'VBD')])
('tags -> ', '     (maybe->RB) (kyle->JJ) (went->VBD) (to->TO) (have->VB) (his->PRP$) (ears->NNS) (checked->VBD) ')
candidates to check:
3
('tags initial-> ', [('remember', 'VB'), ('he', 'PRP'), ('had', 'VBD'), ('an', 'DT'), ('ear', 'JJ'), ('infection', 'NN')])
('tags -> ', '     (remember->VB) (he->PRP) (had->VBD) (an->DT) (ear->JJ) (infection->NN) ')
candidates to check:
1
('tags initial-> ', [('ears', 'NNS'), ('checked', 'VBD')])
('tags -> ', '     (ears->NNS) (checked->VBD) ')
('tags initial-> ', [('be', 'VB'), ('cau', 'VBN'), ('se', 'RB'), ('because', 'IN'), ('he', 'PRP'), ('s', 'VBD')])
('tags -> ', '     (be->VB) (cau->VBN) (se->RB) (because->IN) (he->PRP) (s->VBD) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('said', 'VBD'), ('he', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('dentist', 'NN')])
('tags -> ', '     (you->PRP) (said->VBD) (he->PRP) (went->VBD) (to->TO) (the->DT) (dentist->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'NN'), ('he', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('doctor', 'NN')])
('tags -> ', '     (but->CC) (he->PRP) (didn->VBZ) (t->NN) (he->PRP) (went->VBD) (to->TO) (the->DT) (doctor->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('teeth', 'NNS'), ('yet', 'RB')])
('tags -> ', '     (he->PRP) (doesn->VBZ) (t->NNS) (have->VBP) (any->DT) (teeth->NNS) (yet->RB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
3
('tags initial-> ', [('who', 'WP'), ('else', 'RB'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('doctor', 'NN'), ('today', 'NN')])
('tags -> ', '     (who->WP) (else->RB) (went->VBD) (to->TO) (the->DT) (doctor->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('uncle', 'NN')])
('tags -> ', '     (uncle->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('tasha', 'NN')])
('tags -> ', '     (tasha->NN) ')
candidates to check:
7
('tags initial-> ', [('remember', 'VB'), ('her', 'PRP$'), ('grandma', 'NN'), ('said', 'VBD'), ('she', 'PRP'), ('went', 'VBD'), ('to', 'TO'), ('the', 'DT'), ('doctor', 'NN'), ('s', 'NN'), ('today', 'NN'), ('to', 'TO'), ('have', 'VB'), ('her', 'PRP$'), ('blood', 'NN'), ('work', 'NN'), ('done', 'VBN')])
('tags -> ', '     (remember->VB) (her->PRP$) (grandma->NN) (said->VBD) (she->PRP) (went->VBD) (to->TO) (the->DT) (doctor->NN) (s->NN) (today->NN) (to->TO) (have->VB) (her->PRP$) (blood->NN) (work->NN) (done->VBN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('she', 'PRP'), ('didn', 'VBD'), ('t', 'NN'), ('go', 'VB'), ('in', 'IN'), ('until', 'IN'), ('she', 'PRP'), ('was', 'VBD'), ('feeling', 'VBG'), ('xxx', 'NN')])
('tags -> ', '     (she->PRP) (didn->VBD) (t->NN) (go->VB) (in->IN) (until->IN) (she->PRP) (was->VBD) (feeling->VBG) (xxx->NN) ')
('tags initial-> ', [('no', 'DT'), ('she', 'PRP'), ('went', 'VBD'), ('in', 'IN'), ('sat', 'JJ'), ('urday', 'JJ'), ('uh', 'IN'), ('thursday', 'NN')])
('tags -> ', '     (no->DT) (she->PRP) (went->VBD) (in->IN) (sat->JJ) (urday->JJ) (uh->IN) (thursday->NN) ')
('tags initial-> ', [('next', 'JJ'), ('thursday', 'NN')])
('tags -> ', '     (next->JJ) (thursday->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('boo', 'NN'), ('boo', 'NN')])
('tags -> ', '     (she->PRP) (had->VBD) (a->DT) (boo->NN) (boo->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('think', 'VBP'), ('she', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('boo', 'NN'), ('boo', 'NN')])
('tags -> ', '     (i->NN) (think->VBP) (she->PRP) (had->VBD) (a->DT) (boo->NN) (boo->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('she', 'PRP'), ('had', 'VBD'), ('it', 'PRP'), ('fixed', 'VBD'), ('huh', 'NN')])
('tags -> ', '     (she->PRP) (had->VBD) (it->PRP) (fixed->VBD) (huh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('had', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('hospital', 'NN')])
('tags -> ', '     (she->PRP) (had->VBD) (to->TO) (go->VB) (to->TO) (the->DT) (hospital->NN) ')
candidates to check:
1
('tags initial-> ', [('hospital', 'NN')])
('tags -> ', '     (hospital->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP'), ('go', 'VB'), ('visit', 'NN'), ('tasha', 'NN'), ('when', 'WRB'), ('she', 'PRP'), ('recovers', 'NNS')])
('tags -> ', '     (we->PRP) (ll->VBP) (go->VB) (visit->NN) (tasha->NN) (when->WRB) (she->PRP) (recovers->NNS) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('bruise', 'NN')])
('tags -> ', '     (my->PRP$) (bruise->NN) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('she', 'PRP'), ('comes', 'VBZ'), ('home', 'NN')])
('tags -> ', '     (when->WRB) (she->PRP) (comes->VBZ) (home->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('o', 'NN'), ('kay', 'NN')])
('tags -> ', '     (o->NN) (kay->NN) ')
('tags initial-> ', [('tasha', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('cry', 'NN')])
('tags -> ', '     (tasha->NN) (didn->NN) (t->NN) (cry->NN) ')
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('know', 'VBP')])
('tags -> ', '     (well->RB) (you->PRP) (don->VBP) (t->NNS) (know->VBP) ')
candidates to check:
6
('tags initial-> ', [('she', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('blood', 'NN'), ('test', 'NN'), ('today', 'NN')])
('tags -> ', '     (she->PRP) (got->VBD) (a->DT) (blood->NN) (test->NN) (today->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('she', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('blood', 'NN'), ('test', 'NN')])
('tags -> ', '     (she->PRP) (had->VBD) (a->DT) (blood->NN) (test->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
4
('tags initial-> ', [('tasha', 'NNS'), ('have', 'VBP'), ('blood', 'VBN'), ('test', 'NN')])
('tags -> ', '     (tasha->NNS) (have->VBP) (blood->VBN) (test->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('yesterday', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (yesterday->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('bruise', 'NN'), ('came', 'VBD'), ('in', 'IN'), ('from', 'IN'), ('now', 'RB')])
('tags -> ', '     (my->PRP$) (bruise->NN) (came->VBD) (in->IN) (from->IN) (now->RB) ')
('tags initial-> ', [('it', 'PRP'), ('was', 'VBD')])
('tags -> ', '     (it->PRP) (was->VBD) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('bone', 'NN')])
('tags -> ', '     (a->DT) (bone->NN) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('went', 'VBD'), ('wrong', 'JJ')])
('tags -> ', '     (be->VB) (cause->NN) (it->PRP) (went->VBD) (wrong->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('stop', 'VBD'), ('hurting', 'VBG')])
('tags -> ', '     (it->PRP) (stop->VBD) (hurting->VBG) ')
candidates to check:
2
('tags initial-> ', [('next', 'JJ'), ('hour', 'NN'), ('you', 'PRP'), ('can', 'MD')])
('tags -> ', '     (next->JJ) (hour->NN) (you->PRP) (can->MD) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('she', 'PRP'), ('did', 'VBD'), ('is', 'VBZ'), ('she', 'PRP'), ('fell', 'VBD'), ('out', 'RB'), ('of', 'IN'), ('bed', 'NN'), ('last', 'JJ'), ('night', 'NN')])
('tags -> ', '     (what->WP) (she->PRP) (did->VBD) (is->VBZ) (she->PRP) (fell->VBD) (out->RB) (of->IN) (bed->NN) (last->JJ) (night->NN) ')
candidates to check:
5
('tags initial-> ', [('it', 'PRP'), ('s', 'JJ'), ('time', 'NN'), ('we', 'PRP'), ('mo', 'VBP'), ('ve', 'JJ'), ('move', 'NN'), ('her', 'PRP$'), ('bed', 'NN'), ('against', 'IN'), ('the', 'DT'), ('wall', 'NN'), ('tonight', 'NN')])
('tags -> ', '     (it->PRP) (s->JJ) (time->NN) (we->PRP) (mo->VBP) (ve->JJ) (move->NN) (her->PRP$) (bed->NN) (against->IN) (the->DT) (wall->NN) (tonight->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('fell', 'VBD'), ('out', 'RB'), ('of', 'IN'), ('bed', 'NN')])
('tags -> ', '     (she->PRP) (fell->VBD) (out->RB) (of->IN) (bed->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('she', 'PRP'), ('fells', 'VBZ'), ('n', 'JJ'), ('out', 'IN'), ('of', 'IN'), ('bed', 'NN'), ('almost', 'RB'), ('every', 'DT'), ('night', 'NN')])
('tags -> ', '     (she->PRP) (fells->VBZ) (n->JJ) (out->IN) (of->IN) (bed->NN) (almost->RB) (every->DT) (night->NN) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('that', 'IN')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (know->VBP) (that->IN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('talk', 'VB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (want->VBP) (to->TO) (talk->VB) ')
candidates to check:
3
('tags initial-> ', [('right', 'RB'), ('be', 'VB'), ('fore', 'RB'), ('the', 'DT'), ('smoke', 'NN'), ('detectors', 'NNS'), ('went', 'VBD'), ('off', 'RP')])
('tags -> ', '     (right->RB) (be->VB) (fore->RB) (the->DT) (smoke->NN) (detectors->NNS) (went->VBD) (off->RP) ')
candidates to check:
4
('tags initial-> ', [('about', 'IN'), ('half', 'PDT'), ('an', 'DT'), ('hour', 'NN'), ('before', 'IN'), ('them', 'PRP'), ('she', 'PRP'), ('was', 'VBD'), ('screaming', 'VBG'), ('bloody', 'NN'), ('murder', 'NN')])
('tags -> ', '     (about->IN) (half->PDT) (an->DT) (hour->NN) (before->IN) (them->PRP) (she->PRP) (was->VBD) (screaming->VBG) (bloody->NN) (murder->NN) ')
candidates to check:
2
('tags initial-> ', [('got', 'VBD'), ('ta', 'JJ'), ('move', 'NN'), ('that', 'WDT'), ('bed', 'VBD'), ('around', 'IN'), ('against', 'IN'), ('the', 'DT'), ('wall', 'NN')])
('tags -> ', '     (got->VBD) (ta->JJ) (move->NN) (that->WDT) (bed->VBD) (around->IN) (against->IN) (the->DT) (wall->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('you', 'PRP'), ('were', 'VBD'), ('screaming', 'VBG')])
('tags -> ', '     (you->PRP) (were->VBD) (screaming->VBG) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('she', 'PRP'), ('didn', 'VBZ'), ('t', 'NNS'), ('wake', 'VBP'), ('up', 'RP'), ('when', 'WRB'), ('the', 'DT'), ('fireworks', 'NN'), ('we', 'PRP'), ('re', 'VBP'), ('were', 'VBD'), ('those', 'DT'), ('those', 'DT'), ('firecrackers', 'NNS'), ('went', 'VBD')])
('tags -> ', '     (well->RB) (she->PRP) (didn->VBZ) (t->NNS) (wake->VBP) (up->RP) (when->WRB) (the->DT) (fireworks->NN) (we->PRP) (re->VBP) (were->VBD) (those->DT) (those->DT) (firecrackers->NNS) (went->VBD) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
3
descended from food: [['N'], 'steak', 24, 29]
('tags initial-> ', [('one', 'CD'), ('more', 'JJR'), ('piece', 'NN'), ('of', 'IN'), ('steak', 'NN'), ('left', 'VBD')])
('tags -> ', '     (one->CD) (more->JJR) (piece->NN) (of->IN) (steak->NN) (left->VBD) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('girl', 'NN')])
('tags -> ', '     (good->JJ) (girl->NN) ')
('tags initial-> ', [('no', 'DT'), ('more', 'RBR')])
('tags -> ', '     (no->DT) (more->RBR) ')
('tags initial-> ', [('all', 'DT'), ('gone', 'VBN')])
('tags -> ', '     (all->DT) (gone->VBN) ')
candidates to check:
4
('tags initial-> ', [('wipe', 'VB'), ('your', 'PRP$'), ('hands', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('napkin', 'JJ'), ('thanks', 'NNS')])
('tags -> ', '     (wipe->VB) (your->PRP$) (hands->NNS) (on->IN) (the->DT) (napkin->JJ) (thanks->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('napkin', 'NN')])
('tags -> ', '     (no->DT) (napkin->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('put', 'VBD'), ('that', 'IN'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (put->VBD) (that->IN) (in->IN) (your->PRP$) (mouth->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
descended from food: [['N'], 'pizza', 29, 34]
pizza
pizza pizza 274
[('eat', 'VB'), ('your', 'PRP$'), ('delicious', 'JJ'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('delicious', 'JJ'), ('pizza', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (delicious->JJ) (pizza->NN) ')
('tags initial-> ', [('yumyum', 'NN')])
('tags -> ', '     (yumyum->NN) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ')])
('tags -> ', '     (this->DT) (is->VBZ) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (that->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 20, 25]
pizza
pizza pizza 274
[('how', 'WRB'), ('about', 'IN'), ('the', 'DT'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('the', 'DT'), ('pizza', 'NN')])
('tags -> ', '     (how->WRB) (about->IN) (the->DT) (pizza->NN) ')
('tags initial-> ', [('this', 'DT')])
('tags -> ', '     (this->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 25, 30]
pizza
pizza pizza 274
[('this', 'DT'), ('one', 'CD'), ('s', 'VBZ'), ('the', 'DT'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('this', 'DT'), ('one', 'CD'), ('s', 'VBZ'), ('the', 'DT'), ('pizza', 'NN')])
('tags -> ', '     (this->DT) (one->CD) (s->VBZ) (the->DT) (pizza->NN) ')
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (like->IN) (it->PRP) ')
('tags initial-> ', [('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (like->IN) (it->PRP) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 18, 23]
pizza
pizza pizza 274
[('i', 'NN'), ('call', 'NN'), ('this', 'DT'), ('pizza', 'NN'), ('too', 'RB')]
['pizza']
('tags initial-> ', [('i', 'NN'), ('call', 'NN'), ('this', 'DT'), ('pizza', 'NN'), ('too', 'RB')])
('tags -> ', '     (i->NN) (call->NN) (this->DT) (pizza->NN) (too->RB) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
descended from food: [['N'], 'food', 22, 26]
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('kind', 'NN'), ('of', 'IN'), ('food', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (kind->NN) (of->IN) (food->NN) ')
('tags initial-> ', [('very', 'RB'), ('good', 'JJ')])
('tags -> ', '     (very->RB) (good->JJ) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 6, 11]
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('tags initial-> ', [('pizza', 'NN')])
('tags -> ', '     (pizza->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('right', 'JJ')])
('tags -> ', '     (that->DT) (s->VBD) (right->JJ) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('this', 'DT')])
('tags -> ', '     (what->WP) (s->VBD) (this->DT) ')
('tags initial-> ', [('yuck', 'NN')])
('tags -> ', '     (yuck->NN) ')
('tags initial-> ', [('who', 'WP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (who->WP) (like->IN) (it->PRP) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 25, 30]
pizza
pizza pizza 274
[('who', 'WP'), ('likes', 'VBZ'), ('this', 'DT'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('who', 'WP'), ('likes', 'VBZ'), ('this', 'DT'), ('pizza', 'NN')])
('tags -> ', '     (who->WP) (likes->VBZ) (this->DT) (pizza->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('m', 'NN'), ('going', 'VBG'), ('into', 'IN'), ('town', 'NN')])
('tags -> ', '     (i->NN) (m->NN) (going->VBG) (into->IN) (town->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('stuffed', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (m->VBP) (stuffed->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('holding', 'VBG'), ('this', 'DT')])
('tags -> ', '     (you->PRP) (holding->VBG) (this->DT) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('silly', 'RB')])
('tags -> ', '     (you->PRP) (re->VBP) (silly->RB) ')
('tags initial-> ', [('you', 'PRP'), ('eat', 'VBP'), ('all', 'DT'), ('yours', 'NNS')])
('tags -> ', '     (you->PRP) (eat->VBP) (all->DT) (yours->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('most', 'JJS'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (most->JJS) (of->IN) (it->PRP) ')
('tags initial-> ', [('look', 'NN'), ('out', 'RP')])
('tags -> ', '     (look->NN) (out->RP) ')
candidates to check:
1
('tags initial-> ', [('there', 'EX'), ('s', 'VBZ'), ('something', 'NN'), ('outside', 'JJ')])
('tags -> ', '     (there->EX) (s->VBZ) (something->NN) (outside->JJ) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('yours', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (yours->NNS) (that->IN) (you->PRP) (didn->VBP) (t->JJ) (eat->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('think', 'NN'), ('allison', 'NN'), ('through', 'IN')])
('tags -> ', '     (think->NN) (allison->NN) (through->IN) ')
('tags initial-> ', [('xxx', 'NNS'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (xxx->NNS) (like->IN) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'dessert', 15, 22]
('tags initial-> ', [('you', 'PRP'), ('want', 'VBP'), ('dessert', 'JJ')])
('tags -> ', '     (you->PRP) (want->VBP) (dessert->JJ) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('getting', 'VBG'), ('down', 'RP')])
('tags -> ', '     (getting->VBG) (down->RP) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('she', 'PRP'), ('does', 'VBZ')])
('tags -> ', '     (i->JJ) (don->NN) (t->NN) (she->PRP) (does->VBZ) ')
candidates to check:
2
descended from food: [['N'], 'dessert', 19, 26]
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('dessert', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (dessert->NN) ')
('tags initial-> ', [('uhuh', 'NN')])
('tags -> ', '     (uhuh->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
3
('tags initial-> ', [('turn', 'NN'), ('that', 'WDT'), ('tape', 'NN'), ('recorder', 'VBZ'), ('back', 'RB'), ('on', 'IN'), ('again', 'RB')])
('tags -> ', '     (turn->NN) (that->WDT) (tape->NN) (recorder->VBZ) (back->RB) (on->IN) (again->RB) ')
('tags initial-> ', [('it', 'PRP'), ('is', 'VBZ'), ('on', 'IN')])
('tags -> ', '     (it->PRP) (is->VBZ) (on->IN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('hear', 'VB'), ('yourself', 'PRP')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (to->TO) (hear->VB) (yourself->PRP) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('did', 'VBD'), ('i', 'VB'), ('wake', 'NN'), ('you', 'PRP'), ('up', 'RP')])
('tags -> ', '     (did->VBD) (i->VB) (wake->NN) (you->PRP) (up->RP) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('know', 'VB'), ('what', 'WP')])
('tags -> ', '     (d->NN) (you->PRP) (d->VBP) (know->VB) (what->WP) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('thing', 'NN'), ('sounded', 'VBD'), ('like', 'IN'), ('allison', 'NN'), ('and', 'CC'), ('grandma', 'NN'), ('on', 'IN'), ('there', 'EX')])
('tags -> ', '     (that->DT) (thing->NN) (sounded->VBD) (like->IN) (allison->NN) (and->CC) (grandma->NN) (on->IN) (there->EX) ')
('tags initial-> ', [('on', 'IN')])
('tags -> ', '     (on->IN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('soun', 'VBZ'), ('ded', 'VBD'), ('it', 'PRP'), ('sounded', 'VBD'), ('just', 'RB'), ('like', 'IN'), ('allison', 'NN'), ('and', 'CC'), ('grandma', 'NN'), ('are', 'VBP'), ('on', 'IN'), ('there', 'EX')])
('tags -> ', '     (it->PRP) (soun->VBZ) (ded->VBD) (it->PRP) (sounded->VBD) (just->RB) (like->IN) (allison->NN) (and->CC) (grandma->NN) (are->VBP) (on->IN) (there->EX) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('it', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (it->PRP) (did->VBD) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('mommy', 'NN')])
('tags -> ', '     (and->CC) (mommy->NN) ')
('tags initial-> ', [('it', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (it->PRP) (did->VBD) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('mommy', 'VB'), ('too', 'RB')])
('tags -> ', '     (and->CC) (mommy->VB) (too->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('now', 'RB'), ('papa', 'VBP'), ('s', 'NN'), ('on', 'IN'), ('there', 'RB'), ('now', 'RB')])
('tags -> ', '     (and->CC) (now->RB) (papa->VBP) (s->NN) (on->IN) (there->RB) (now->RB) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('pap', 'NN'), ('a', 'DT')])
('tags -> ', '     (pap->NN) (a->DT) ')
('tags initial-> ', [('is', 'VBZ'), ('papa', 'VBN'), ('on', 'IN'), ('there', 'RB'), ('now', 'RB')])
('tags -> ', '     (is->VBZ) (papa->VBN) (on->IN) (there->RB) (now->RB) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBD'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('on', 'IN'), ('there', 'EX')])
('tags -> ', '     (he->PRP) (s->VBD) (gon->VB) (na->TO) (be->VB) (on->IN) (there->EX) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('alli', 'NN')])
('tags -> ', '     (alli->NN) ')
candidates to check:
1
('tags initial-> ', [('have', 'VB'), ('papa', 'NN'), ('and', 'CC'), ('momma', 'NN'), ('and', 'CC'), ('grandma', 'NN'), ('and', 'CC'), ('allison', 'NN')])
('tags -> ', '     (have->VB) (papa->NN) (and->CC) (momma->NN) (and->CC) (grandma->NN) (and->CC) (allison->NN) ')
('tags initial-> ', [('mom', 'NN'), ('s', 'MD'), ('not', 'RB'), ('out', 'IN'), ('there', 'RB')])
('tags -> ', '     (mom->NN) (s->MD) (not->RB) (out->IN) (there->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('she', 'PRP'), ('s', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('tape', 'NN')])
('tags -> ', '     (but->CC) (she->PRP) (s->VBD) (on->IN) (the->DT) (tape->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
descended from food: [['N'], 'milk', 20, 24]
milk
milk milk 46
[('put', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('put', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('milk', 'NN')])
('tags -> ', '     (put->VB) (some->DT) (more->JJR) (milk->NN) ')
candidates to check:
2
descended from food: [['N'], 'sugar', 21, 26]
sugar
sugar sugar 399
[('grandpa', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('sugar', 'NN'), ('in', 'IN'), ('there', 'EX')]
['sugar']
('tags initial-> ', [('grandpa', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('sugar', 'NN'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (grandpa->NN) (that->WDT) (s->VBZ) (sugar->NN) (in->IN) (there->EX) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'sugar', 21, 26]
sugar
sugar sugar 399
[('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('some', 'DT'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX'), ('too', 'RB')]
['sugar']
('tags initial-> ', [('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('some', 'DT'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX'), ('too', 'RB')])
('tags -> ', '     (gon->NN) (na->TO) (put->VB) (some->DT) (sugar->NN) (on->IN) (there->EX) (too->RB) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
descended from food: [['N'], 'sugar', 13, 18]
sugar
sugar sugar 399
[('i', 'NN'), ('like', 'IN'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX')]
['sugar']
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX')])
('tags -> ', '     (i->NN) (like->IN) (sugar->NN) (on->IN) (there->EX) ')
('tags initial-> ', [('you', 'PRP')])
('tags -> ', '     (you->PRP) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (get->VB) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('ll', 'VBP'), ('like', 'IN'), ('it', 'PRP'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (ll->VBP) (like->IN) (it->PRP) (too->RB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('delicious', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (delicious->JJ) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('ll', 'VBP'), ('listen', 'VB'), ('to', 'TO'), ('that', 'DT'), ('bang', 'NN')])
('tags -> ', '     (and->CC) (you->PRP) (ll->VBP) (listen->VB) (to->TO) (that->DT) (bang->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('break', 'NN'), ('that', 'IN')])
('tags -> ', '     (xxx->JJ) (break->NN) (that->IN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('wouldn', 'VBP'), ('t', 'NN'), ('break', 'NN'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (i->NN) (wouldn->VBP) (t->NN) (break->NN) (it->PRP) ')
('tags initial-> ', [('oops', 'NNS')])
('tags -> ', '     (oops->NNS) ')
candidates to check:
1
('tags initial-> ', [('want', 'NN'), ('that', 'WDT'), ('final', 'JJ'), ('piece', 'NN')])
('tags -> ', '     (want->NN) (that->WDT) (final->JJ) (piece->NN) ')
('tags initial-> ', [('oops', 'NNS')])
('tags -> ', '     (oops->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
descended from food: [['N'], 'crackers', 37, 45]
descended from food: [['N'], 'milk', 50, 54]
crackers
crackers crackers 453
[('you', 'PRP'), ('sticking', 'VBG'), ('your', 'PRP$'), ('finger', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN'), ('for', 'IN')]
['crackers']
milk
milk milk 46
[('you', 'PRP'), ('sticking', 'VBG'), ('your', 'PRP$'), ('finger', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN'), ('for', 'IN')]
['milk']
('tags initial-> ', [('you', 'PRP'), ('sticking', 'VBG'), ('your', 'PRP$'), ('finger', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN'), ('for', 'IN')])
('tags -> ', '     (you->PRP) (sticking->VBG) (your->PRP$) (finger->NN) (in->IN) (my->PRP$) (crackers->NNS) (and->CC) (milk->NN) (for->IN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('haha', 'JJ'), ('q', 'NNS'), ('doing', 'VBG')])
('tags -> ', '     (what->WP) (are->VBP) (you->PRP) (haha->JJ) (q->NNS) (doing->VBG) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('laughs', 'NNS')])
('tags -> ', '     (laughs->NNS) ')
('tags initial-> ', [('just', 'RB'), ('leave', 'VB'), ('it', 'PRP')])
('tags -> ', '     (just->RB) (leave->VB) (it->PRP) ')
('tags initial-> ', [('oh', 'UH'), ('allison', 'NN')])
('tags -> ', '     (oh->UH) (allison->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 24, 28]
milk
milk milk 46
[('you', 'PRP'), ('done', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('you', 'PRP'), ('done', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('milk', 'NN')])
('tags -> ', '     (you->PRP) (done->VBN) (with->IN) (the->DT) (milk->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('a', 'DT'), ('bite', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (a->DT) (bite->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('that', 'IN'), ('taste', 'NN'), ('good', 'JJ')])
('tags -> ', '     (that->IN) (taste->NN) (good->JJ) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
descended from food: [['N'], 'oatmeal', 23, 30]
('tags initial-> ', [('but', 'CC'), ('um', 'JJ'), ('oatmeal', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (but->CC) (um->JJ) (oatmeal->NN) (in->IN) (it->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
descended from food: [['N'], 'crackers', 16, 24]
descended from food: [['N'], 'milk', 29, 33]
crackers
crackers crackers 453
[('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['crackers']
milk
milk milk 46
[('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (just->RB) (crackers->NNS) (and->CC) (milk->NN) ')
candidates to check:
3
descended from food: [['N'], 'crackers', 15, 23]
descended from food: [['N'], 'milk', 28, 32]
crackers
crackers crackers 453
[('saltine', 'NN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['crackers']
milk
milk milk 46
[('saltine', 'NN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('saltine', 'NN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')])
('tags -> ', '     (saltine->NN) (crackers->NNS) (and->CC) (milk->NN) ')
candidates to check:
1
('tags initial-> ', [('papa', 'NN'), ('s', 'NN'), ('going', 'VBG'), ('to', 'TO'), ('throw', 'VB'), ('them', 'PRP'), ('out', 'RP'), ('remember', 'VB')])
('tags -> ', '     (papa->NN) (s->NN) (going->VBG) (to->TO) (throw->VB) (them->PRP) (out->RP) (remember->VB) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('another', 'DT'), ('bite', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (another->DT) (bite->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('have', 'VB'), ('another', 'DT'), ('bite', 'NN')])
('tags -> ', '     (can->MD) (you->PRP) (have->VB) (another->DT) (bite->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 18, 24]
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('supper', 'JJR'), ('already', 'RB')])
('tags -> ', '     (did->VBD) (you->PRP) (eat->VB) (supper->JJR) (already->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 18, 24]
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('supper', 'JJR'), ('already', 'RB')])
('tags -> ', '     (did->VBD) (you->PRP) (eat->VB) (supper->JJR) (already->RB) ')
('tags initial-> ', [('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('eat', 'NN'), ('all', 'DT'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (didn->VBP) (t->NN) (eat->NN) (all->DT) (of->IN) (it->PRP) ')
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('all', 'DT'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (well->RB) (you->PRP) (didn->VBP) (t->JJ) (eat->NN) (all->DT) (of->IN) (it->PRP) ')
candidates to check:
2
descended from food: [['N'], 'supper', 56, 62]
('tags initial-> ', [('you', 'PRP'), ('sa', 'VBP'), ('ved', 'VBN'), ('you', 'PRP'), ('saved', 'VBD'), ('some', 'DT'), ('room', 'NN'), ('for', 'IN'), ('my', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (you->PRP) (sa->VBP) (ved->VBN) (you->PRP) (saved->VBD) (some->DT) (room->NN) (for->IN) (my->PRP$) (supper->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('well', 'RB'), ('that', 'IN'), ('s', 'NN'), ('okay', 'NN')])
('tags -> ', '     (well->RB) (that->IN) (s->NN) (okay->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('drink', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (want->VB) (to->TO) (drink->VB) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'sugar', 22, 27]
sugar
sugar sugar 399
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('sugar', 'NN'), ('and', 'CC'), ('the', 'DT'), ('spoon', 'NN'), ('back', 'RB')]
['sugar']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('sugar', 'NN'), ('and', 'CC'), ('the', 'DT'), ('spoon', 'NN'), ('back', 'RB')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (the->DT) (sugar->NN) (and->CC) (the->DT) (spoon->NN) (back->RB) ')
candidates to check:
1
('tags initial-> ', [('clean', 'VB'), ('the', 'DT'), ('spoon', 'NN')])
('tags -> ', '     (clean->VB) (the->DT) (spoon->NN) ')
candidates to check:
2
descended from food: [['N'], 'sugar', 29, 34]
sugar
sugar sugar 399
[('you', 'PRP'), ('already', 'RB'), ('put', 'VBD'), ('enough', 'JJ'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX')]
['sugar']
('tags initial-> ', [('you', 'PRP'), ('already', 'RB'), ('put', 'VBD'), ('enough', 'JJ'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX')])
('tags -> ', '     (you->PRP) (already->RB) (put->VBD) (enough->JJ) (sugar->NN) (on->IN) (there->EX) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('xxx', 'NNS'), ('like', 'IN'), ('those', 'DT')])
('tags -> ', '     (xxx->NNS) (like->IN) (those->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('how', 'WRB'), ('come', 'JJ')])
('tags -> ', '     (how->WRB) (come->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('gone', 'VBN')])
('tags -> ', '     (it->PRP) (s->VBZ) (all->DT) (gone->VBN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
3
descended from food: [['N'], 'sugar', 26, 31]
sugar
sugar sugar 399
[('grandma', 'NN'), ('s', 'NN'), ('trying', 'VBG'), ('to', 'TO'), ('sugar', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('death', 'NN'), ('here', 'RB')]
['sugar']
('tags initial-> ', [('grandma', 'NN'), ('s', 'NN'), ('trying', 'VBG'), ('to', 'TO'), ('sugar', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('death', 'NN'), ('here', 'RB')])
('tags -> ', '     (grandma->NN) (s->NN) (trying->VBG) (to->TO) (sugar->VB) (me->PRP) (to->TO) (death->NN) (here->RB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('gone', 'VBN')])
('tags -> ', '     (it->PRP) (s->VBZ) (all->DT) (gone->VBN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('underneath', 'IN'), ('there', 'EX')])
('tags -> ', '     (it->PRP) (s->VBZ) (underneath->IN) (there->EX) ')
candidates to check:
1
descended from food: [['N'], 'jelly', 18, 23]
('tags initial-> ', [('it', 'PRP'), ('s', 'PRP'), ('by', 'IN'), ('the', 'DT'), ('jelly', 'NN')])
('tags -> ', '     (it->PRP) (s->PRP) (by->IN) (the->DT) (jelly->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
2
descended from food: [['N'], 'crackers', 19, 27]
descended from food: [['N'], 'milk', 32, 36]
crackers
crackers crackers 453
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['crackers']
milk
milk milk 46
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')])
('tags -> ', '     (d->NN) (you->PRP) (d->VBP) (like->IN) (crackers->NNS) (and->CC) (milk->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('that', 'IN'), ('s', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (that->IN) (s->VBD) (good->JJ) ')
('tags initial-> ', [('that', 'DT'), ('makes', 'VBZ'), ('me', 'PRP'), ('happy', 'JJ')])
('tags -> ', '     (that->DT) (makes->VBZ) (me->PRP) (happy->JJ) ')
candidates to check:
1
descended from food: [['N'], 'milk', 35, 39]
milk
milk milk 46
[('she', 'PRP'), ('says', 'VBZ'), ('she', 'PRP'), ('likes', 'VBZ'), ('them', 'PRP'), ('with', 'IN'), ('milk', 'NN')]
['milk']
('tags initial-> ', [('she', 'PRP'), ('says', 'VBZ'), ('she', 'PRP'), ('likes', 'VBZ'), ('them', 'PRP'), ('with', 'IN'), ('milk', 'NN')])
('tags -> ', '     (she->PRP) (says->VBZ) (she->PRP) (likes->VBZ) (them->PRP) (with->IN) (milk->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('hand', 'NN'), ('is', 'VBZ'), ('dirty', 'JJ'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (your->PRP$) (hand->NN) (is->VBZ) (dirty->JJ) (right->RB) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('allison', 'NN'), ('my', 'PRP$'), ('hand', 'NN'), ('isn', 'NN'), ('t', 'NN'), ('dirty', 'NN')])
('tags -> ', '     (allison->NN) (my->PRP$) (hand->NN) (isn->NN) (t->NN) (dirty->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('ink', 'NN'), ('on', 'IN'), ('my', 'PRP$'), ('hand', 'NN'), ('and', 'CC'), ('i', 'NN'), ('couldn', 'VBP'), ('t', 'NN'), ('wash', 'NN'), ('it', 'PRP'), ('off', 'RP')])
('tags -> ', '     (that->DT) (s->VBZ) (ink->NN) (on->IN) (my->PRP$) (hand->NN) (and->CC) (i->NN) (couldn->VBP) (t->NN) (wash->NN) (it->PRP) (off->RP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('alright', 'RB'), ('though', 'IN')])
('tags -> ', '     (it->PRP) (s->VBD) (alright->RB) (though->IN) ')
('tags initial-> ', [('it', 'PRP'), ('ll', 'VBZ'), ('wash', 'VBD'), ('off', 'RP')])
('tags -> ', '     (it->PRP) (ll->VBZ) (wash->VBD) (off->RP) ')
candidates to check:
1
('tags initial-> ', [('poppy', 'JJ'), ('tell', 'VB'), ('me', 'PRP'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('finish', 'VB'), ('up', 'RP'), ('so', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN')])
('tags -> ', '     (poppy->JJ) (tell->VB) (me->PRP) (when->WRB) (you->PRP) (re->VBP) (going->VBG) (to->TO) (finish->VB) (up->RP) (so->IN) (we->PRP) (can->MD) (go->VB) (to->TO) (the->DT) (store->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('you', 'PRP'), ('give', 'VB'), ('me', 'PRP'), ('another', 'DT'), ('bite', 'NN')])
('tags -> ', '     (can->MD) (you->PRP) (give->VB) (me->PRP) (another->DT) (bite->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP')])
('tags -> ', '     (do->VB) (you->PRP) ')
candidates to check:
3
('tags initial-> ', [('when', 'WRB'), ('timmy', 'NN'), ('noticed', 'VBD'), ('the', 'DT'), ('glove', 'NN'), ('there', 'RB'), ('he', 'PRP'), ('said', 'VBD'), ('go', 'VB'), ('over', 'IN'), ('and', 'CC'), ('yelled', 'VBN'), ('at', 'IN'), ('me', 'PRP'), ('the', 'DT'), ('other', 'JJ'), ('night', 'NN'), ('for', 'IN'), ('not', 'RB'), ('going', 'VBG'), ('over', 'IN'), ('there', 'EX')])
('tags -> ', '     (when->WRB) (timmy->NN) (noticed->VBD) (the->DT) (glove->NN) (there->RB) (he->PRP) (said->VBD) (go->VB) (over->IN) (and->CC) (yelled->VBN) (at->IN) (me->PRP) (the->DT) (other->JJ) (night->NN) (for->IN) (not->RB) (going->VBG) (over->IN) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('must', 'MD'), ('have', 'VB'), ('been', 'VBN'), ('at', 'IN'), ('work', 'NN')])
('tags -> ', '     (i->NN) (must->MD) (have->VB) (been->VBN) (at->IN) (work->NN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('night', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('birthday', 'NN')])
('tags -> ', '     (the->DT) (night->NN) (of->IN) (your->PRP$) (birthday->NN) ')
candidates to check:
4
descended from food: [['N'], 'ham', 30, 33]
ham
ham ham 141
[('the', 'DT'), ('night', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('making', 'VBG'), ('ham', 'NN'), ('in', 'IN'), ('the', 'DT'), ('oven', 'NN')]
['ham']
('tags initial-> ', [('the', 'DT'), ('night', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('making', 'VBG'), ('ham', 'NN'), ('in', 'IN'), ('the', 'DT'), ('oven', 'NN')])
('tags -> ', '     (the->DT) (night->NN) (he->PRP) (was->VBD) (making->VBG) (ham->NN) (in->IN) (the->DT) (oven->NN) ')
candidates to check:
2
('tags initial-> ', [('when', 'WRB'), ('he', 'PRP'), ('called', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('crazy', 'JJ'), ('lady', 'NN'), ('and', 'CC'), ('she', 'PRP'), ('started', 'VBD'), ('yelling', 'VBG'), ('at', 'IN'), ('him', 'PRP')])
('tags -> ', '     (when->WRB) (he->PRP) (called->VBD) (me->PRP) (a->DT) (crazy->JJ) (lady->NN) (and->CC) (she->PRP) (started->VBD) (yelling->VBG) (at->IN) (him->PRP) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('grandmother', 'NN'), ('s', 'NN'), ('not', 'RB'), ('crazy', 'JJ')])
('tags -> ', '     (my->PRP$) (grandmother->NN) (s->NN) (not->RB) (crazy->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('said', 'VBD'), ('i', 'JJ'), ('expect', 'VBP'), ('to', 'TO'), ('see', 'VB'), ('you', 'PRP'), ('over', 'IN'), ('there', 'RB'), ('in', 'IN'), ('that', 'DT'), ('pool', 'NN'), ('tonight', 'VBD'), ('so', 'RB'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'WDT'), ('have', 'VBP'), ('to', 'TO'), ('explain', 'VB'), ('to', 'TO'), ('him', 'PRP')])
('tags -> ', '     (i->NN) (said->VBD) (i->JJ) (expect->VBP) (to->TO) (see->VB) (you->PRP) (over->IN) (there->RB) (in->IN) (that->DT) (pool->NN) (tonight->VBD) (so->RB) (i->JJ) (don->VBP) (t->WDT) (have->VBP) (to->TO) (explain->VB) (to->TO) (him->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'VB'), ('what', 'WP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->VB) (what->WP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('heard', 'VBP'), ('grandma', 'VB')])
('tags -> ', '     (you->PRP) (heard->VBP) (grandma->VB) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('do', 'VB'), ('today', 'NN')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (d->VBP) (do->VB) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('went', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN')])
('tags -> ', '     (went->VBD) (in->IN) (the->DT) (pool->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('went', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN')])
('tags -> ', '     (you->PRP) (went->VBD) (in->IN) (the->DT) (pool->NN) ')
candidates to check:
1
('tags initial-> ', [('who', 'WP'), ('went', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (who->WP) (went->VBD) (in->IN) (the->DT) (pool->NN) (with->IN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('grandma', 'NN')])
('tags -> ', '     (grandma->NN) ')
candidates to check:
1
('tags initial-> ', [('grandma', 'NN'), ('went', 'VBD'), ('in', 'IN'), ('too', 'RB')])
('tags -> ', '     (grandma->NN) (went->VBD) (in->IN) (too->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('grandma', 'NN'), ('s', 'NN'), ('in', 'IN'), ('and', 'CC'), ('mommy', 'JJ'), ('s', 'NN'), ('in', 'IN')])
('tags -> ', '     (grandma->NN) (s->NN) (in->IN) (and->CC) (mommy->JJ) (s->NN) (in->IN) ')
('tags initial-> ', [('did', 'VBD'), ('she', 'PRP'), ('fit', 'VB'), ('in', 'IN'), ('there', 'RB')])
('tags -> ', '     (did->VBD) (she->PRP) (fit->VB) (in->IN) (there->RB) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('she', 'PRP'), ('was', 'VBD'), ('laughing', 'VBG'), ('at', 'IN'), ('papa', 'NN'), ('in', 'IN'), ('there', 'EX'), ('last', 'JJ'), ('week', 'NN'), ('and', 'CC'), ('now', 'RB'), ('now', 'RB'), ('she', 'PRP'), ('went', 'VBD'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (she->PRP) (was->VBD) (laughing->VBG) (at->IN) (papa->NN) (in->IN) (there->EX) (last->JJ) (week->NN) (and->CC) (now->RB) (now->RB) (she->PRP) (went->VBD) (in->IN) (there->EX) ')
('tags initial-> ', [('who', 'WP'), ('else', 'RB'), ('went', 'VBD'), ('in', 'IN'), ('there', 'EX')])
('tags -> ', '     (who->WP) (else->RB) (went->VBD) (in->IN) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('i', 'VB'), ('go', 'VB'), ('in', 'IN'), ('your', 'PRP$'), ('pool', 'NN')])
('tags -> ', '     (did->VBD) (i->VB) (go->VB) (in->IN) (your->PRP$) (pool->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('were', 'VBD'), ('in', 'IN'), ('it', 'PRP'), ('be', 'VB'), ('fore', 'RBR')])
('tags -> ', '     (you->PRP) (were->VBD) (in->IN) (it->PRP) (be->VB) (fore->RBR) ')
candidates to check:
2
('tags initial-> ', [('now', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('go', 'VB'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('eating', 'NN'), ('that', 'WDT'), ('stuff', 'NN')])
('tags -> ', '     (now->RB) (you->PRP) (re->VBP) (going->VBG) (go->VB) (in->IN) (the->DT) (pool->NN) (when->WRB) (you->PRP) (re->VBP) (done->VBN) (eating->NN) (that->WDT) (stuff->NN) ')
('tags initial-> ', [('whe', 'NN'), ('n', 'NN')])
('tags -> ', '     (whe->NN) (n->NN) ')
candidates to check:
2
('tags initial-> ', [('when', 'WRB'), ('i', 'NN'), ('m', 'VBP'), ('done', 'VBN'), ('eating', 'VBG'), ('this', 'DT'), ('stuff', 'NN'), ('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN')])
('tags -> ', '     (when->WRB) (i->NN) (m->VBP) (done->VBN) (eating->VBG) (this->DT) (stuff->NN) (we->PRP) (have->VBP) (to->TO) (go->VB) (to->TO) (the->DT) (store->NN) ')
candidates to check:
5
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('mummy', 'VB'), ('a', 'DT'), ('thing', 'NN'), ('a', 'DT'), ('belt', 'NN'), ('for', 'IN'), ('her', 'PRP$'), ('car', 'NN')])
('tags -> ', '     (we->PRP) (have->VBP) (to->TO) (get->VB) (mummy->VB) (a->DT) (thing->NN) (a->DT) (belt->NN) (for->IN) (her->PRP$) (car->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('belt', 'NN')])
('tags -> ', '     (a->DT) (belt->NN) ')
('tags initial-> ', [('xxx', 'RB'), ('good', 'JJ'), ('yeah', 'NN')])
('tags -> ', '     (xxx->RB) (good->JJ) (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('belt', 'NN'), ('for', 'IN'), ('a', 'DT'), ('car', 'NN')])
('tags -> ', '     (a->DT) (belt->NN) (for->IN) (a->DT) (car->NN) ')
candidates to check:
3
('tags initial-> ', [('a', 'DT'), ('fan', 'NN'), ('belt', 'NN')])
('tags -> ', '     (a->DT) (fan->NN) (belt->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('fan', 'NN'), ('belt', 'NN')])
('tags -> ', '     (fan->NN) (belt->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('uhhuh', 'IN'), ('her', 'PRP$'), ('belt', 'NN'), ('in', 'IN'), ('her', 'PRP$'), ('car', 'NN'), ('s', 'NN'), ('broken', 'NN')])
('tags -> ', '     (uhhuh->IN) (her->PRP$) (belt->NN) (in->IN) (her->PRP$) (car->NN) (s->NN) (broken->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('won', 'VBD'), ('t', 'JJ'), ('won', 'VBD'), ('t', 'RB'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('drive', 'VB'), ('the', 'DT'), ('car', 'NN'), ('now', 'RB'), ('that', 'IN'), ('it', 'PRP'), ('s', 'VBD')])
('tags -> ', '     (she->PRP) (won->VBD) (t->JJ) (won->VBD) (t->RB) (be->VB) (able->JJ) (to->TO) (drive->VB) (the->DT) (car->NN) (now->RB) (that->IN) (it->PRP) (s->VBD) ')
('tags initial-> ', [('she', 'PRP'), ('won', 'VBD'), ('t', 'RB'), ('be', 'VB'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('drive', 'VB'), ('it', 'PRP'), ('no', 'DT'), ('not', 'RB'), ('not', 'RB'), ('un', 'JJ'), ('til', 'NN'), ('papa', 'NN'), ('fixes', 'NNS'), ('it', 'PRP')])
('tags -> ', '     (she->PRP) (won->VBD) (t->RB) (be->VB) (be->VB) (able->JJ) (to->TO) (drive->VB) (it->PRP) (no->DT) (not->RB) (not->RB) (un->JJ) (til->NN) (papa->NN) (fixes->NNS) (it->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'JJ'), ('fix', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (fix->VBP) (it->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('been', 'VBN'), ('saying', 'VBG'), ('that', 'IN'), ('all', 'DT'), ('day', 'NN'), ('long', 'RB')])
('tags -> ', '     (you->PRP) (been->VBN) (saying->VBG) (that->IN) (all->DT) (day->NN) (long->RB) ')
('tags initial-> ', [('i', 'JJ'), ('fix', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (fix->VBP) (it->PRP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
descended from food: [['N'], 'honey', 34, 39]
honey
honey honey 304
[('now', 'RB'), ('sit', 'NN'), ('still', 'RB'), ('in', 'IN'), ('papa', 'JJ'), ('s', 'JJ'), ('lap', 'NN'), ('honey', 'NN')]
['honey']
('tags initial-> ', [('now', 'RB'), ('sit', 'NN'), ('still', 'RB'), ('in', 'IN'), ('papa', 'JJ'), ('s', 'JJ'), ('lap', 'NN'), ('honey', 'NN')])
('tags -> ', '     (now->RB) (sit->NN) (still->RB) (in->IN) (papa->JJ) (s->JJ) (lap->NN) (honey->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('you', 'PRP'), ('sitting', 'VBG'), ('on', 'IN'), ('his', 'PRP$'), ('lap', 'NN'), ('anyway', 'RB'), ('it', 'PRP'), ('s', 'VBD'), ('too', 'RB'), ('hot', 'JJ')])
('tags -> ', '     (why->WRB) (you->PRP) (sitting->VBG) (on->IN) (his->PRP$) (lap->NN) (anyway->RB) (it->PRP) (s->VBD) (too->RB) (hot->JJ) ')
candidates to check:
1
('tags initial-> ', [('want', 'VB'), ('a', 'DT'), ('bite', 'NN')])
('tags -> ', '     (want->VB) (a->DT) (bite->NN) ')
candidates to check:
1
('tags initial-> ', [('to', 'TO'), ('sit', 'VB'), ('on', 'IN'), ('his', 'PRP$'), ('lap', 'NN')])
('tags -> ', '     (to->TO) (sit->VB) (on->IN) (his->PRP$) (lap->NN) ')
('tags initial-> ', [('but', 'CC'), ('she', 'PRP'), ('s', 'VBD'), ('but', 'CC'), ('he', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('holding', 'VBG'), ('she', 'PRP'), ('she', 'PRP'), ('eats', 'VBD')])
('tags -> ', '     (but->CC) (she->PRP) (s->VBD) (but->CC) (he->PRP) (s->VBZ) (not->RB) (holding->VBG) (she->PRP) (she->PRP) (eats->VBD) ')
candidates to check:
2
descended from food: [['N'], 'supper', 40, 46]
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('having', 'VBG'), ('her', 'PRP$'), ('second', 'JJ'), ('supper', 'NN')])
('tags -> ', '     (she->PRP) (s->VBD) (having->VBG) (her->PRP$) (second->JJ) (supper->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 15, 21]
('tags initial-> ', [('she', 'PRP'), ('eats', 'VBZ'), ('supper', 'JJ'), ('with', 'IN'), ('him', 'PRP'), ('too', 'RB')])
('tags -> ', '     (she->PRP) (eats->VBZ) (supper->JJ) (with->IN) (him->PRP) (too->RB) ')
fat
fat fat 900
[('she', 'PRP'), ('s', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('fat', 'JJ')]
['fat']
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('fat', 'JJ')])
('tags -> ', '     (she->PRP) (s->VBD) (going->VBG) (to->TO) (get->VB) (fat->JJ) ')
('tags initial-> ', [('too', 'RB')])
('tags -> ', '     (too->RB) ')
candidates to check:
2
('tags initial-> ', [('course', 'NN'), ('she', 'PRP'), ('s', 'VBD'), ('not', 'RB'), ('three', 'CD'), ('hundred', 'VBD'), ('pounds', 'NNS')])
('tags -> ', '     (course->NN) (she->PRP) (s->VBD) (not->RB) (three->CD) (hundred->VBD) (pounds->NNS) ')
('tags initial-> ', [('say', 'VB'), ('i', 'JJ'), ('m', 'NNS'), ('beautiful', 'NN')])
('tags -> ', '     (say->VB) (i->JJ) (m->NNS) (beautiful->NN) ')
fat
fat fat 900
[('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('fat', 'JJ')]
['fat']
('tags initial-> ', [('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('fat', 'JJ')])
('tags -> ', '     (i->NNS) (m->VBP) (not->RB) (fat->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('beautiful', 'JJ')])
('tags -> ', '     (i->JJ) (m->VBP) (beautiful->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('think', 'VBP'), ('you', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (you->PRP) (think->VBP) (you->PRP) (are->VBP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('yes', 'NNS'), ('i', 'VBP'), ('am', 'VBP'), ('i', 'JJ'), ('m', 'NN')])
('tags -> ', '     (yes->NNS) (i->VBP) (am->VBP) (i->JJ) (m->NN) ')
('tags initial-> ', [('who', 'WP'), ('says', 'VBZ')])
('tags -> ', '     (who->WP) (says->VBZ) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('eating', 'VBG'), ('a', 'DT'), ('lot', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (eating->VBG) (a->DT) (lot->NN) ')
('tags initial-> ', [('now', 'RB'), ('that', 'IN'), ('s', 'NN'), ('fresh', 'NN')])
('tags -> ', '     (now->RB) (that->IN) (s->NN) (fresh->NN) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
('tags initial-> ', [('i', 'NN'), ('ate', 'VBP'), ('that', 'IN')])
('tags -> ', '     (i->NN) (ate->VBP) (that->IN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
candidates to check:
1
descended from food: [['N'], 'supper', 21, 27]
('tags initial-> ', [('papa', 'NN'), ('saved', 'VBD'), ('you', 'PRP'), ('supper', 'VBP')])
('tags -> ', '     (papa->NN) (saved->VBD) (you->PRP) (supper->VBP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('monkey', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (a->DT) (monkey->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 27, 33]
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('eat', 'VB'), ('for', 'IN'), ('supper', 'NN'), ('before', 'IN')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (d->VBP) (eat->VB) (for->IN) (supper->NN) (before->IN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 35, 41]
('tags initial-> ', [('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('already', 'RB'), ('eat', 'VB'), ('for', 'IN'), ('supper', 'NN')])
('tags -> ', '     (what->WP) (d->NN) (you->PRP) (d->VBP) (already->RB) (eat->VB) (for->IN) (supper->NN) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 6, 11]
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('tags initial-> ', [('pizza', 'NN')])
('tags -> ', '     (pizza->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('calzone', 'NN')])
('tags -> ', '     (calzone->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
candidates to check:
1
descended from food: [['N'], 'steak', 6, 11]
('tags initial-> ', [('steak', 'NN')])
('tags -> ', '     (steak->NN) ')
('tags initial-> ', [('tell', 'NN'), ('papa', 'NN')])
('tags -> ', '     (tell->NN) (papa->NN) ')
('tags initial-> ', [('i', 'NN'), ('had', 'VBD')])
('tags -> ', '     (i->NN) (had->VBD) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
candidates to check:
2
descended from food: [['N'], 'steak', 6, 11]
descended from food: [['N'], 'pizza', 16, 21]
pizza
pizza pizza 274
[('steak', 'NN'), ('and', 'CC'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('steak', 'NN'), ('and', 'CC'), ('pizza', 'NN')])
('tags -> ', '     (steak->NN) (and->CC) (pizza->NN) ')
candidates to check:
2
descended from food: [['N'], 'steak', 6, 11]
descended from food: [['N'], 'pizza', 16, 21]
pizza
pizza pizza 274
[('steak', 'NN'), ('and', 'CC'), ('pizza', 'NN')]
['pizza']
('tags initial-> ', [('steak', 'NN'), ('and', 'CC'), ('pizza', 'NN')])
('tags -> ', '     (steak->NN) (and->CC) (pizza->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('calzone', 'NN')])
('tags -> ', '     (and->CC) (calzone->NN) ')
candidates to check:
1
('tags initial-> ', [('calzone', 'NN')])
('tags -> ', '     (calzone->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('calzone', 'NN')])
('tags -> ', '     (and->CC) (calzone->NN) ')
candidates to check:
3
descended from food: [['N'], 'salad', 36, 41]
macaroni
macaroni macaroni 128
[('she', 'PRP'), ('didn', 'VBD'), ('t', 'NNS'), ('like', 'IN'), ('the', 'DT'), ('macaroni', 'NN'), ('salad', 'NN')]
['macaroni']
('tags initial-> ', [('she', 'PRP'), ('didn', 'VBD'), ('t', 'NNS'), ('like', 'IN'), ('the', 'DT'), ('macaroni', 'NN'), ('salad', 'NN')])
('tags -> ', '     (she->PRP) (didn->VBD) (t->NNS) (like->IN) (the->DT) (macaroni->NN) (salad->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('that', 'DT'), ('calzone', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (that->DT) (calzone->NN) (xxx->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
2
descended from food: [['N'], 'bacon', 22, 27]
bacon
bacon bacon 309
[('that', 'DT'), ('s', 'VBZ'), ('canadian', 'JJ'), ('bacon', 'NN')]
['bacon']
canadian bacon
canadian bacon canadian bacon 146
[('that', 'DT'), ('s', 'VBZ'), ('canadian', 'JJ'), ('bacon', 'NN')]
['canadian', 'bacon']
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('canadian', 'JJ'), ('bacon', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (canadian->JJ) (bacon->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('papa', 'NN'), ('s', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (papa->NN) (s->NN) ')
candidates to check:
1
('tags initial-> ', [('his', 'PRP$'), ('mouth', 'NN'), ('is', 'VBZ'), ('bigger', 'JJR'), ('than', 'IN'), ('yours', 'NNS')])
('tags -> ', '     (his->PRP$) (mouth->NN) (is->VBZ) (bigger->JJR) (than->IN) (yours->NNS) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('about', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (about->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('my', 'PRP$'), ('mouth', 'NN'), ('bigger', 'JJR'), ('than', 'IN'), ('yours', 'NNS')])
('tags -> ', '     (my->PRP$) (mouth->NN) (bigger->JJR) (than->IN) (yours->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'NN'), ('swallowed', 'VBD')])
('tags -> ', '     (i->NN) (swallowed->VBD) ')
('tags initial-> ', [('you', 'PRP'), ('swallowed', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (swallowed->VBD) (it->PRP) ')
('tags initial-> ', [('well', 'RB'), ('i', 'JJ'), ('hope', 'VBP'), ('so', 'RB')])
('tags -> ', '     (well->RB) (i->JJ) (hope->VBP) (so->RB) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('you', 'PRP'), ('re', 'VBP'), ('supposed', 'VBN'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (you->PRP) (re->VBP) (supposed->VBN) (to->TO) (do->VB) ')
('tags initial-> ', [('more', 'RBR')])
('tags -> ', '     (more->RBR) ')
candidates to check:
3
('tags initial-> ', [('one', 'CD'), ('more', 'JJR'), ('bite', 'NN'), ('then', 'RB'), ('you', 'PRP'), ('got', 'VBD'), ('to', 'TO'), ('scram', 'VB')])
('tags -> ', '     (one->CD) (more->JJR) (bite->NN) (then->RB) (you->PRP) (got->VBD) (to->TO) (scram->VB) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (come->VBN) (on->IN) ')
candidates to check:
1
descended from food: [['N'], 'supper', 39, 45]
('tags initial-> ', [('get', 'VB'), ('down', 'RP'), ('so', 'RB'), ('papa', 'JJ'), ('can', 'MD'), ('finish', 'VB'), ('his', 'PRP$'), ('supper', 'NN')])
('tags -> ', '     (get->VB) (down->RP) (so->RB) (papa->JJ) (can->MD) (finish->VB) (his->PRP$) (supper->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
candidates to check:
1
('tags initial-> ', [('stay', 'NN'), ('in', 'IN'), ('front', 'NN')])
('tags -> ', '     (stay->NN) (in->IN) (front->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('where', 'WRB')])
('tags -> ', '     (where->WRB) ')
loading solution set
calculating
set([(1546, (6, 13)), (1585, (25, 32)), (721, (6, 11)), (1578, (10, 17)), (666, (29, 34)), (1161, (18, 23)), (216, (9, 14)), (684, (20, 25)), (235, (64, 69)), (936, (20, 24)), (991, (50, 54)), (137, (51, 57)), (1121, (29, 34)), (1167, (19, 27)), (939, (21, 26)), (1565, (6, 11)), (1045, (16, 24)), (235, (22, 27)), (1552, (6, 11)), (222, (31, 37)), (1149, (26, 31)), (945, (21, 26)), (1045, (29, 33)), (1113, (22, 27)), (628, (24, 29)), (145, (6, 21)), (107, (6, 29)), (247, (25, 30)), (741, (25, 30)), (1048, (7, 23)), (1167, (32, 36)), (1039, (23, 30)), (1540, (6, 11)), (1574, (6, 13)), (1568, (6, 11)), (1592, (13, 27)), (134, (11, 17)), (693, (25, 30)), (213, (10, 15)), (244, (22, 27)), (1571, (10, 17)), (955, (13, 18)), (1020, (24, 28)), (131, (22, 28)), (100, (6, 29)), (141, (19, 32)), (252, (19, 24)), (1180, (35, 39)), (1565, (16, 21)), (1568, (16, 21)), (1237, (30, 33)), (1581, (27, 41)), (991, (37, 45)), (122, (6, 12)), (1048, (28, 32)), (705, (18, 23)), (225, (16, 21))])
[((100, (6, 29)), '*CHI:\tpeanut butter and jelly .\n'), ((107, (6, 29)), '*MOT:\tpeanut butter and jelly ?\n'), ((122, (6, 12)), '*CHI:\tcelery .\n'), ((131, (22, 28)), '*MOT:\tyou cut up some celery .\n'), ((134, (11, 17)), '*CHI:\twith celery ?\n'), ((137, (51, 57)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((141, (19, 32)), "*MOT:\td'you@d have peanut butter ?\n"), ((145, (6, 21)), '*CHI:\tpean(ut) butter !\n'), ((213, (10, 15)), '*GMA:\tthe pizza [!] .\n'), ((216, (9, 14)), '*CHI:\tmy pizza ?\n'), ((222, (31, 37)), "*GMA:\tit's [///] you smell the cheese [!] (.) .\n"), ((225, (16, 21)), '*GMA:\tthat good pizza ?\n'), ((235, (22, 27)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((235, (64, 69)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((244, (22, 27)), "*GMA:\tthere's no more steak .\n"), ((247, (25, 30)), '*GMA:\tfinish eating your pizza .\n'), ((252, (19, 24)), "*CHI:\tthere's more steak !\n"), ((628, (24, 29)), '*CHI:\tone more piece of steak left [!] .\n'), ((666, (29, 34)), '*GMA:\teat [<] your delicious pizza .\n'), ((684, (20, 25)), '*GMA:\thow about the pizza ?\n'), ((693, (25, 30)), "*GMA:\tthis [!] one's the pizza .\n"), ((705, (18, 23)), '*CHI:\tI call this pizza too .\n'), ((721, (6, 11)), '*CHI:\tpizza .\n'), ((741, (25, 30)), '*CHI:\twho likes this [!] pizza ?\n'), ((936, (20, 24)), '*GFA:\tput some more milk .\n'), ((939, (21, 26)), "*CHI:\tGrandpa that's sugar [?] in there ?\n"), ((945, (21, 26)), '*GFA:\tgonna put some sugar on there too .\n'), ((955, (13, 18)), '*GFA:\tI like sugar on there .\n'), ((991, (37, 45)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((991, (50, 54)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((1020, (24, 28)), '*GMA:\tyou done with the milk ?\n'), ((1039, (23, 30)), '*CHI:\tbut (.) &-um (.) oatmeal in it ?\n'), ((1045, (16, 24)), "*GFA:\tit's just crackers and milk .\n"), ((1045, (29, 33)), "*GFA:\tit's just crackers and milk .\n"), ((1048, (7, 23)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1048, (28, 32)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1113, (22, 27)), '*GFA:\t<can I have the sugar and the spoon> [<] back ?\n'), ((1121, (29, 34)), '*GMA:\tyou already put enough sugar on there (.) .\n'), ((1149, (26, 31)), "*GFA:\tGrandma's trying to sugar me to death here .\n"), ((1161, (18, 23)), "*CHI:\tit's by the jelly !\n"), ((1167, (19, 27)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1167, (32, 36)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1180, (35, 39)), '*MOT:\tshe says she likes them with milk .\n'), ((1237, (30, 33)), '*GMA:\tthe night he was making ham in the oven .\n'), ((1540, (6, 11)), '*CHI:\tpizza .\n'), ((1546, (6, 13)), '*CHI:\tcalzone .\n'), ((1552, (6, 11)), '*CHI:\tsteak .\n'), ((1565, (6, 11)), '*CHI:\tsteak and pizza !\n'), ((1565, (16, 21)), '*CHI:\tsteak and pizza !\n'), ((1568, (6, 11)), '*GFA:\tsteak and pizza ?\n'), ((1568, (16, 21)), '*GFA:\tsteak and pizza ?\n'), ((1571, (10, 17)), '*GMA:\tand calzone [>] .\n'), ((1574, (6, 13)), '*CHI:\tcalzone [<] .\n'), ((1578, (10, 17)), '*GFA:\tand calzone !\n'), ((1581, (27, 41)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1585, (25, 32)), '*MOT:\t<did you like that calzone xxx> [<] ?\n'), ((1592, (13, 27)), "*MOT:\tthat's Canadian bacon .\n")]
set([(1592, (-1, 13)), (721, (6, 11)), (1467, (40, 46)), (666, (29, 34)), (1534, (27, 33)), (205, (21, 26)), (1048, (15, 23)), (1161, (18, 23)), (216, (9, 14)), (1472, (15, 21)), (684, (20, 25)), (235, (64, 69)), (1581, (27, 35)), (936, (20, 24)), (991, (50, 54)), (714, (22, 26)), (137, (51, 57)), (1656, (39, 45)), (1121, (29, 34)), (1167, (19, 27)), (332, (21, 25)), (1045, (16, 24)), (235, (22, 27)), (1540, (6, 11)), (1067, (18, 24)), (1527, (21, 27)), (222, (31, 37)), (1149, (26, 31)), (945, (21, 26)), (1045, (29, 33)), (1113, (22, 27)), (628, (24, 29)), (1180, (35, 39)), (1089, (56, 62)), (122, (6, 12)), (247, (25, 30)), (741, (25, 30)), (955, (13, 18)), (107, (24, 29)), (1167, (32, 36)), (1039, (23, 30)), (96, (28, 33)), (1581, (36, 41)), (145, (15, 21)), (1568, (6, 11)), (1568, (16, 21)), (1475, (25, 28)), (1446, (34, 39)), (134, (11, 17)), (693, (25, 30)), (1537, (35, 41)), (1592, (13, 27)), (213, (10, 15)), (244, (22, 27)), (939, (21, 26)), (819, (19, 26)), (805, (15, 22)), (1020, (24, 28)), (100, (6, 19)), (107, (6, 19)), (131, (22, 28)), (1565, (6, 11)), (141, (19, 32)), (252, (19, 24)), (1565, (16, 21)), (100, (24, 29)), (1237, (30, 33)), (323, (46, 50)), (1489, (14, 17)), (1077, (18, 24)), (991, (37, 45)), (337, (19, 23)), (1048, (28, 32)), (1552, (6, 11)), (705, (18, 23)), (225, (16, 21))])
[((96, (28, 33)), "*MOT:\twhat d'you@d have for lunch today ?\n"), ((100, (6, 19)), '*CHI:\tpeanut butter and jelly .\n'), ((100, (24, 29)), '*CHI:\tpeanut butter and jelly .\n'), ((107, (6, 19)), '*MOT:\tpeanut butter and jelly ?\n'), ((107, (24, 29)), '*MOT:\tpeanut butter and jelly ?\n'), ((122, (6, 12)), '*CHI:\tcelery .\n'), ((131, (22, 28)), '*MOT:\tyou cut up some celery .\n'), ((134, (11, 17)), '*CHI:\twith celery ?\n'), ((137, (51, 57)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((141, (19, 32)), "*MOT:\td'you@d have peanut butter ?\n"), ((145, (15, 21)), '*CHI:\tpean(ut) butter !\n'), ((205, (21, 26)), "*GMA:\tyou're a silly goose .\n"), ((213, (10, 15)), '*GMA:\tthe pizza [!] .\n'), ((216, (9, 14)), '*CHI:\tmy pizza ?\n'), ((222, (31, 37)), "*GMA:\tit's [///] you smell the cheese [!] (.) .\n"), ((225, (16, 21)), '*GMA:\tthat good pizza ?\n'), ((235, (22, 27)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((235, (64, 69)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((244, (22, 27)), "*GMA:\tthere's no more steak .\n"), ((247, (25, 30)), '*GMA:\tfinish eating your pizza .\n'), ((252, (19, 24)), "*CHI:\tthere's more steak !\n"), ((323, (46, 50)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((332, (21, 25)), '*CHI:\tI gonna put my food in a paper <bag [!]> [>] .\n'), ((337, (19, 23)), '*GMA:\tput [<] your food in a paper bag ?\n'), ((628, (24, 29)), '*CHI:\tone more piece of steak left [!] .\n'), ((666, (29, 34)), '*GMA:\teat [<] your delicious pizza .\n'), ((684, (20, 25)), '*GMA:\thow about the pizza ?\n'), ((693, (25, 30)), "*GMA:\tthis [!] one's the pizza .\n"), ((705, (18, 23)), '*CHI:\tI call this pizza too .\n'), ((714, (22, 26)), '*CHI:\tthis is kind of food .\n'), ((721, (6, 11)), '*CHI:\tpizza .\n'), ((741, (25, 30)), '*CHI:\twho likes this [!] pizza ?\n'), ((805, (15, 22)), '*MOT:\tyou want dessert ?\n'), ((819, (19, 26)), "*CHI:\tI don't want dessert .\n"), ((936, (20, 24)), '*GFA:\tput some more milk .\n'), ((939, (21, 26)), "*CHI:\tGrandpa that's sugar [?] in there ?\n"), ((945, (21, 26)), '*GFA:\tgonna put some sugar on there too .\n'), ((955, (13, 18)), '*GFA:\tI like sugar on there .\n'), ((991, (37, 45)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((991, (50, 54)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((1020, (24, 28)), '*GMA:\tyou done with the milk ?\n'), ((1039, (23, 30)), '*CHI:\tbut (.) &-um (.) oatmeal in it ?\n'), ((1045, (16, 24)), "*GFA:\tit's just crackers and milk .\n"), ((1045, (29, 33)), "*GFA:\tit's just crackers and milk .\n"), ((1048, (15, 23)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1048, (28, 32)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1067, (18, 24)), '*GFA:\tdid you eat supper already ?\n'), ((1077, (18, 24)), '*GFA:\tdid you eat supper already ?\n'), ((1089, (56, 62)), '*GFA:\tyou <sa(ved)> [//] you saved some room for my [!] supper (.) ?\n'), ((1113, (22, 27)), '*GFA:\t<can I have the sugar and the spoon> [<] back ?\n'), ((1121, (29, 34)), '*GMA:\tyou already put enough sugar on there (.) .\n'), ((1149, (26, 31)), "*GFA:\tGrandma's trying to sugar me to death here .\n"), ((1161, (18, 23)), "*CHI:\tit's by the jelly !\n"), ((1167, (19, 27)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1167, (32, 36)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1180, (35, 39)), '*MOT:\tshe says she likes them with milk .\n'), ((1237, (30, 33)), '*GMA:\tthe night he was making ham in the oven .\n'), ((1446, (34, 39)), "*MOT:\tnow sit still in Papa's lap honey .\n"), ((1467, (40, 46)), "*GFA:\t<she's having her second [!]> [<] supper [!] .\n"), ((1472, (15, 21)), '*GMA:\tshe eats supper with him [!] too (.) .\n'), ((1475, (25, 28)), "*MOT:\tshe's going to get fat !\n"), ((1489, (14, 17)), "*GFA:\tI'm not fat [!] .\n"), ((1527, (21, 27)), '*GMA:\tPapa saved you supper .\n'), ((1534, (27, 33)), "*GMA:\twhat d'you@d eat for supper before (.) ?\n"), ((1537, (35, 41)), "*GMA:\twhat d'you@d already eat for supper ?\n"), ((1540, (6, 11)), '*CHI:\tpizza .\n'), ((1552, (6, 11)), '*CHI:\tsteak .\n'), ((1565, (6, 11)), '*CHI:\tsteak and pizza !\n'), ((1565, (16, 21)), '*CHI:\tsteak and pizza !\n'), ((1568, (6, 11)), '*GFA:\tsteak and pizza ?\n'), ((1568, (16, 21)), '*GFA:\tsteak and pizza ?\n'), ((1581, (27, 35)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1581, (36, 41)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1592, (-1, 13)), "*MOT:\tthat's Canadian bacon .\n"), ((1592, (13, 27)), "*MOT:\tthat's Canadian bacon .\n"), ((1656, (39, 45)), '*GMA:\tget down so Papa can finish <his supper> [>] .\n')]
calculating accuracy and recall
correct labels:
set(['cheese', 'ham', 'macaroni salad', 'sugar', 'jelly', 'oatmeal', 'milk', 'celery', 'peanut butter and jelly', 'calzone', 'saltine crackers', 'crackers', 'steak', 'canadian bacon', 'pean(ut) butter', 'peanut butter', 'pizza'])
predicted labels:
set(['', 'cheese', 'goose', 'milk', 'ham', 'sugar', 'celery', 'macaroni', 'pizza', 'food', 'dessert', 'fat', 'lunch', 'supper', 'butter', 'honey', 'salad', 'jelly', 'oatmeal', 'crackers', 'steak', 'canadian bacon', 'peanut butter'])
file:HSLLD/HV1/MT//allmt1.cha
precision: 0.521739130435
recall: 0.705882352941
true positives:['canadian bacon', 'celery', 'cheese', 'crackers', 'ham', 'jelly', 'milk', 'oatmeal', 'peanut butter', 'pizza', 'steak', 'sugar']
false positives: ['', 'butter', 'dessert', 'fat', 'food', 'goose', 'honey', 'lunch', 'macaroni', 'salad', 'supper']
false negatives: ['calzone', 'macaroni salad', 'pean(ut) butter', 'peanut butter and jelly', 'saltine crackers']
# true pos: 12
# false pos: 11
# false neg: 5
HSLLD/HV1/MT//rilmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//rilmt1.cha
HSLLD/HV1/MT//sarmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//sarmt1.cha
HSLLD/HV1/MT//joymt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//joymt1.cha
HSLLD/HV1/MT//melmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//melmt1.cha
HSLLD/HV1/MT//tommt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//tommt1.cha
HSLLD/HV1/MT//joemt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//joemt1.cha
HSLLD/HV1/MT//emimt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('okay', 'NN'), ('guys', 'NNS')])
('tags -> ', '     (okay->NN) (guys->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('no', 'DT')])
('tags -> ', '     (he->PRP) (didn->VBZ) (t->JJ) (no->DT) ')
('tags initial-> ', [('why', 'WRB'), ('are', 'VBP'), ('you', 'PRP'), ('xxx', 'VBP')])
('tags -> ', '     (why->WRB) (are->VBP) (you->PRP) (xxx->VBP) ')
('tags initial-> ', [('ouch', 'JJ')])
('tags -> ', '     (ouch->JJ) ')
candidates to check:
1
('tags initial-> ', [('for', 'IN'), ('um', 'JJ'), ('be', 'VB'), ('cause', 'NN'), ('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('for', 'IN'), ('emily', 'RB'), ('s', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (for->IN) (um->JJ) (be->VB) (cause->NN) (we->PRP) (have->VBP) (to->TO) (for->IN) (emily->RB) (s->JJ) (thing->NN) ')
candidates to check:
3
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('the', 'DT'), ('people', 'NNS'), ('were', 'VBD'), ('here', 'RB'), ('the', 'DT'), ('other', 'JJ'), ('day', 'NN')])
('tags -> ', '     (well->RB) (you->PRP) (you->PRP) (know->VBP) (how->WRB) (the->DT) (people->NNS) (were->VBD) (here->RB) (the->DT) (other->JJ) (day->NN) ')
('tags initial-> ', [('did', 'VBD'), ('i', 'VB'), ('tell', 'NN'), ('you', 'PRP'), ('about', 'IN'), ('them', 'PRP')])
('tags -> ', '     (did->VBD) (i->VB) (tell->NN) (you->PRP) (about->IN) (them->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'RB'), ('well', 'RB'), ('they', 'PRP'), ('re', 'VBP'), ('doing', 'VBG'), ('a', 'DT'), ('study', 'NN'), ('on', 'IN'), ('language', 'NN')])
('tags -> ', '     (oh->RB) (well->RB) (they->PRP) (re->VBP) (doing->VBG) (a->DT) (study->NN) (on->IN) (language->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN'), ('language', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) (language->NN) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('chi', 'NNS'), ('s', 'JJ'), ('language', 'NN')])
('tags -> ', '     (on->IN) (chi->NNS) (s->JJ) (language->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('need', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (need->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('what', 'WP'), ('i', 'NN'), ('said', 'VBD'), ('they', 'PRP'), ('re', 'VBP'), ('doing', 'VBG'), ('a', 'DT'), ('study', 'NN'), ('on', 'IN'), ('xxx', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (what->WP) (i->NN) (said->VBD) (they->PRP) (re->VBP) (doing->VBG) (a->DT) (study->NN) (on->IN) (xxx->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('they', 'PRP'), ('have', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (they->PRP) (have->VB) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('on', 'IN'), ('that', 'DT'), ('yellow', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (on->IN) (the->DT) (on->IN) (that->DT) (yellow->JJ) (thing->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('had', 'VBD'), ('toys', 'NNS'), ('huh', 'NN')])
('tags -> ', '     (they->PRP) (had->VBD) (toys->NNS) (huh->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('yellow', 'JJ'), ('things', 'NNS')])
('tags -> ', '     (what->WP) (yellow->JJ) (things->NNS) ')
('tags initial-> ', [('ma', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('heather', 'NN')])
('tags -> ', '     (ma->JJ) (look->NN) (at->IN) (heather->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('wha', 'NN'), ('t', 'NN'), ('oh', 'VBZ'), ('no', 'DT'), ('heather', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (wha->NN) (t->NN) (oh->VBZ) (no->DT) (heather->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('yellow', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (what->WP) (yellow->JJ) (thing->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('no', 'DT'), ('idea', 'NN'), ('what', 'WP'), ('you', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('about', 'IN')])
('tags -> ', '     (i->NNS) (have->VBP) (no->DT) (idea->NN) (what->WP) (you->PRP) (re->VBP) (talking->VBG) (about->IN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('yellow', 'JJ'), ('thing', 'NN'), ('that', 'WDT'), ('um', 'JJ'), ('susan', 'NN'), ('had', 'VBD')])
('tags -> ', '     (the->DT) (yellow->JJ) (thing->NN) (that->WDT) (um->JJ) (susan->NN) (had->VBD) ')
candidates to check:
1
('tags initial-> ', [('that', 'IN'), ('that', 'DT'), ('girl', 'NN'), ('susan', 'NN'), ('had', 'VBD')])
('tags -> ', '     (that->IN) (that->DT) (girl->NN) (susan->NN) (had->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('yellow', 'JJ'), ('thing', 'NN')])
('tags -> ', '     (what->WP) (yellow->JJ) (thing->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'IN'), ('the', 'DT'), ('cups', 'NNS')])
('tags -> ', '     (oh->IN) (the->DT) (cups->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('mean', 'VBP'), ('the', 'DT'), ('cups', 'NNS'), ('and', 'CC')])
('tags -> ', '     (you->PRP) (mean->VBP) (the->DT) (cups->NNS) (and->CC) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('yellow', 'JJ'), ('thing', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('about', 'IN'), ('emily', 'RB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (what->WP) (yellow->JJ) (thing->NN) (you->PRP) (re->VBP) (talking->VBG) (about->IN) (emily->RB) ')
candidates to check:
1
('tags initial-> ', [('ashtray', 'NN')])
('tags -> ', '     (ashtray->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('susan', 'NNS'), ('who', 'WP')])
('tags -> ', '     (susan->NNS) (who->WP) ')
('tags initial-> ', [('susan', 'NN')])
('tags -> ', '     (susan->NN) ')
candidates to check:
6
('tags initial-> ', [('not', 'RB'), ('that', 'IN'), ('lady', 'NN'), ('that', 'WDT'), ('came', 'VBD'), ('to', 'TO'), ('visit', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('other', 'JJ'), ('day', 'NN'), ('with', 'IN'), ('that', 'DT'), ('lady', 'NN'), ('jean', 'NN'), ('where', 'WRB'), ('we', 'PRP'), ('played', 'VBD'), ('toys', 'RP')])
('tags -> ', '     (not->RB) (that->IN) (lady->NN) (that->WDT) (came->VBD) (to->TO) (visit->VB) (you->PRP) (the->DT) (other->JJ) (day->NN) (with->IN) (that->DT) (lady->NN) (jean->NN) (where->WRB) (we->PRP) (played->VBD) (toys->RP) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('not', 'RB'), ('her', 'PRP$')])
('tags -> ', '     (not->RB) (her->PRP$) ')
('tags initial-> ', [('jean', 'NN')])
('tags -> ', '     (jean->NN) ')
('tags initial-> ', [('yeah', 'NNS'), ('jean', 'NN')])
('tags -> ', '     (yeah->NNS) (jean->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('remember', 'VB'), ('yellow', 'JJ'), ('things', 'NNS')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (remember->VB) (yellow->JJ) (things->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('that', 'IN'), ('she', 'PRP'), ('had', 'VBD')])
('tags -> ', '     (that->IN) (she->PRP) (had->VBD) ')
candidates to check:
2
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('a', 'DT'), ('yellow', 'JJ'), ('thing', 'NN'), ('that', 'IN'), ('she', 'PRP'), ('had', 'VBD')])
('tags -> ', '     (do->VB) (you->PRP) (remember->VB) (a->DT) (yellow->JJ) (thing->NN) (that->IN) (she->PRP) (had->VBD) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('remember', 'VB'), ('a', 'DT'), ('yellow', 'JJ'), ('thing', 'NN'), ('either', 'CC')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (remember->VB) (a->DT) (yellow->JJ) (thing->NN) (either->CC) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('h', 'NN')])
('tags -> ', '     (a->DT) (h->NN) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('mouth', 'NN'), ('is', 'VBZ'), ('white', 'JJ')])
('tags -> ', '     (your->PRP$) (mouth->NN) (is->VBZ) (white->JJ) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('fun', 'VBN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VBP) (fun->VBN) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('very', 'RB'), ('hot', 'JJ'), ('pat', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (very->RB) (hot->JJ) (pat->NN) ')
('tags initial-> ', [('very', 'RB'), ('hot', 'JJ')])
('tags -> ', '     (very->RB) (hot->JJ) ')
candidates to check:
3
('tags initial-> ', [('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('xxx', 'NN'), ('mom', 'NN')])
('tags -> ', '     (where->WRB) (s->PDT) (the->DT) (xxx->NN) (mom->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
candidates to check:
1
descended from food: [['N'], 'butter', 6, 12]
butter
butter butter 499
[('butter', 'NN')]
['butter']
('tags initial-> ', [('butter', 'NN')])
('tags -> ', '     (butter->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('heather', 'NN')])
('tags -> ', '     (heather->NN) ')
candidates to check:
2
('tags initial-> ', [('heather', 'RB'), ('must', 'MD'), ('like', 'VB'), ('to', 'TO'), ('eat', 'VB'), ('off', 'RP'), ('the', 'DT'), ('um', 'NN'), ('table', 'NN'), ('more', 'JJR'), ('than', 'IN'), ('she', 'PRP'), ('likes', 'VBZ'), ('to', 'TO'), ('eat', 'VB'), ('off', 'RP'), ('the', 'DT'), ('dish', 'NN')])
('tags -> ', '     (heather->RB) (must->MD) (like->VB) (to->TO) (eat->VB) (off->RP) (the->DT) (um->NN) (table->NN) (more->JJR) (than->IN) (she->PRP) (likes->VBZ) (to->TO) (eat->VB) (off->RP) (the->DT) (dish->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('eating', 'VBG'), ('emily', 'RB'), ('s', 'VB')])
('tags -> ', '     (she->PRP) (s->VBD) (eating->VBG) (emily->RB) (s->VB) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('eating', 'VBG'), ('emily', 'RB'), ('s', 'VB')])
('tags -> ', '     (she->PRP) (s->VBD) (eating->VBG) (emily->RB) (s->VB) ')
('tags initial-> ', [('ma', 'NN'), ('she', 'PRP'), ('s', 'VBD'), ('eating', 'VBG'), ('emily', 'RB'), ('s', 'VB')])
('tags -> ', '     (ma->NN) (she->PRP) (s->VBD) (eating->VBG) (emily->RB) (s->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('own', 'JJ'), ('baby', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (own->JJ) (baby->NN) ')
('tags initial-> ', [('haha', 'NN')])
('tags -> ', '     (haha->NN) ')
('tags initial-> ', [('haha', 'NN')])
('tags -> ', '     (haha->NN) ')
('tags initial-> ', [('no', 'DT'), ('she', 'PRP'), ('can', 'MD'), ('eat', 'VB'), ('mine', 'VB'), ('too', 'RB')])
('tags -> ', '     (no->DT) (she->PRP) (can->MD) (eat->VB) (mine->VB) (too->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('she', 'PRP'), ('can', 'MD'), ('t', 'VB')])
('tags -> ', '     (she->PRP) (can->MD) (t->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
('tags initial-> ', [('ma', 'NN'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('eat', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (ma->NN) (i->NN) (can->MD) (t->VB) (eat->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('you', 'PRP'), ('forgot', 'VBP')])
('tags -> ', '     (you->PRP) (forgot->VBP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('there', 'EX'), ('is', 'VBZ'), ('no', 'DT'), ('more', 'RBR')])
('tags -> ', '     (there->EX) (is->VBZ) (no->DT) (more->RBR) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('some', 'DT'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('some', 'DT'), ('broccoli', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (some->DT) (broccoli->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('i', 'JJ'), ('hate', 'VBP'), ('broccoli', 'NNS')]
['broccoli']
('tags initial-> ', [('i', 'JJ'), ('hate', 'VBP'), ('broccoli', 'NNS')])
('tags -> ', '     (i->JJ) (hate->VBP) (broccoli->NNS) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
2
descended from food: [['N'], 'porkchops', 16, 25]
('tags initial-> ', [('any', 'DT'), ('more', 'JJR'), ('porkchops', 'NNS')])
('tags -> ', '     (any->DT) (more->JJR) (porkchops->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('but', 'CC'), ('i', 'VBZ'), ('only', 'RB'), ('got', 'VBD'), ('one', 'CD')])
('tags -> ', '     (but->CC) (i->VBZ) (only->RB) (got->VBD) (one->CD) ')
candidates to check:
4
descended from food: [['N'], 'pork', 25, 29]
pork
pork pork 541
[('mom', 'NN'), ('i', 'VBZ'), ('only', 'RB'), ('got', 'VBD'), ('one', 'CD'), ('pork', 'NN'), ('chop', 'NN')]
['pork']
('tags initial-> ', [('mom', 'NN'), ('i', 'VBZ'), ('only', 'RB'), ('got', 'VBD'), ('one', 'CD'), ('pork', 'NN'), ('chop', 'NN')])
('tags -> ', '     (mom->NN) (i->VBZ) (only->RB) (got->VBD) (one->CD) (pork->NN) (chop->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('starting', 'VBG'), ('to', 'TO'), ('love', 'VB'), ('them', 'PRP'), ('too', 'RB'), ('mom', 'NN')])
('tags -> ', '     (and->CC) (i->NN) (was->VBD) (starting->VBG) (to->TO) (love->VB) (them->PRP) (too->RB) (mom->NN) ')
('tags initial-> ', [('baba', 'NN'), ('b', 'NN')])
('tags -> ', '     (baba->NN) (b->NN) ')
('tags initial-> ', [('alright', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (alright->NN) (xxx->NN) ')
('tags initial-> ', [('let', 'VB'), ('s', 'PRP'), ('see', 'VB'), ('if', 'IN'), ('dad', 'JJ'), ('wants', 'VBZ'), ('any', 'DT'), ('more', 'JJR')])
('tags -> ', '     (let->VB) (s->PRP) (see->VB) (if->IN) (dad->JJ) (wants->VBZ) (any->DT) (more->JJR) ')
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('one', 'CD'), ('left', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (one->CD) (left->NN) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'porkchop', 26, 34]
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('another', 'DT'), ('porkchop', 'NN')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (another->DT) (porkchop->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('no', 'DT'), ('there', 'EX'), ('isn', 'VBZ'), ('t', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (no->DT) (there->EX) (isn->VBZ) (t->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('only', 'RB'), ('one', 'CD'), ('left', 'VBD'), ('and', 'CC'), ('two', 'CD'), ('kids', 'NNS'), ('want', 'VBP'), ('one', 'CD')])
('tags -> ', '     (there->RB) (s->VBZ) (only->RB) (one->CD) (left->VBD) (and->CC) (two->CD) (kids->NNS) (want->VBP) (one->CD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('alright', 'NN'), ('guys', 'NNS')])
('tags -> ', '     (alright->NN) (guys->NNS) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('what', 'WP'), ('we', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('do', 'VB')])
('tags -> ', '     (this->DT) (is->VBZ) (what->WP) (we->PRP) (re->VBP) (gon->VBG) (na->NNS) (have->VBP) (to->TO) (do->VB) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('hot', 'JJ')])
('tags -> ', '     (hot->JJ) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('very', 'RB'), ('hot', 'JJ')])
('tags -> ', '     (it->PRP) (s->VBZ) (very->RB) (hot->JJ) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('knew', 'VBD'), ('it', 'PRP'), ('mom', 'NN')])
('tags -> ', '     (i->NN) (knew->VBD) (it->PRP) (mom->NN) ')
candidates to check:
9
descended from food: [['N'], 'potato', 45, 51]
descended from food: [['N'], 'salad', 52, 57]
broccoli
broccoli broccoli 30
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['broccoli']
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df852c68>)
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['potato']
potato salad
potato salad potato salad 143
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['potato', 'salad']
corn
corn corn 419
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (more->JJR) (broccoli->NNS) (there->RB) (s->VBZ) (more->JJR) (potato->JJ) (salad->NN) (and->CC) (there->EX) (is->VBZ) (uh->JJ) (corn->NN) (on->IN) (the->DT) (cob->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('heather', 'NN'), ('gave', 'VBD'), ('me', 'PRP'), ('her', 'PRP$'), ('spoon', 'NN')])
('tags -> ', '     (heather->NN) (gave->VBD) (me->PRP) (her->PRP$) (spoon->NN) ')
('tags initial-> ', [('she', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (she->PRP) (did->VBD) ')
candidates to check:
2
corn
corn corn 419
[('xxx', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('tags initial-> ', [('xxx', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')])
('tags -> ', '     (xxx->JJ) (corn->NN) (on->IN) (the->DT) (cob->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('she', 'PRP'), ('s', 'VBD'), ('using', 'VBG'), ('your', 'PRP$'), ('fork', 'NN')])
('tags -> ', '     (and->CC) (she->PRP) (s->VBD) (using->VBG) (your->PRP$) (fork->NN) ')
('tags initial-> ', [('no', 'DT'), ('this', 'DT'), ('is', 'VBZ'), ('mine', 'JJ')])
('tags -> ', '     (no->DT) (this->DT) (is->VBZ) (mine->JJ) ')
candidates to check:
1
('tags initial-> ', [('whose', 'WP$'), ('fork', 'NN'), ('is', 'VBZ'), ('she', 'PRP'), ('using', 'VBG')])
('tags -> ', '     (whose->WP$) (fork->NN) (is->VBZ) (she->PRP) (using->VBG) ')
('tags initial-> ', [('pat', 'NN'), ('s', 'NN')])
('tags -> ', '     (pat->NN) (s->NN) ')
('tags initial-> ', [('nope', 'NN')])
('tags -> ', '     (nope->NN) ')
('tags initial-> ', [('mine', 'NN'), ('s', 'NN'), ('right', 'RB'), ('there', 'RB')])
('tags -> ', '     (mine->NN) (s->NN) (right->RB) (there->RB) ')
('tags initial-> ', [('oh', 'IN'), ('guess', 'NN'), ('i', 'NN'), ('am', 'VBP'), ('too', 'RB')])
('tags -> ', '     (oh->IN) (guess->NN) (i->NN) (am->VBP) (too->RB) ')
('tags initial-> ', [('i', 'NN'), ('guess', 'NN'), ('so', 'RB')])
('tags -> ', '     (i->NN) (guess->NN) (so->RB) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('when', 'WRB'), ('i', 'JJ'), ('stuck', 'VBP'), ('my', 'PRP$'), ('tooth', 'NN'), ('on', 'IN'), ('it', 'PRP'), ('it', 'PRP'), ('burned', 'VBD')])
('tags -> ', '     (when->WRB) (i->JJ) (stuck->VBP) (my->PRP$) (tooth->NN) (on->IN) (it->PRP) (it->PRP) (burned->VBD) ')
('tags initial-> ', [('well', 'RB'), ('wait', 'RB'), ('until', 'IN'), ('it', 'PRP'), ('cools', 'VBZ'), ('down', 'RP')])
('tags -> ', '     (well->RB) (wait->RB) (until->IN) (it->PRP) (cools->VBZ) (down->RP) ')
('tags initial-> ', [('ma', 'NN'), ('i', 'NN'), ('like', 'IN'), ('it', 'PRP'), ('when', 'WRB'), ('it', 'PRP'), ('s', 'VBD'), ('hot', 'JJ')])
('tags -> ', '     (ma->NN) (i->NN) (like->IN) (it->PRP) (when->WRB) (it->PRP) (s->VBD) (hot->JJ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('wait', 'NN'), ('un', 'NN'), ('til', 'IN'), ('it', 'PRP'), ('cools', 'VBZ'), ('down', 'RP'), ('a', 'DT'), ('little', 'JJ'), ('brian', 'NN')])
('tags -> ', '     (wait->NN) (un->NN) (til->IN) (it->PRP) (cools->VBZ) (down->RP) (a->DT) (little->JJ) (brian->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('you', 'PRP'), ('forgot', 'VBP'), ('to', 'TO'), ('cut', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (forgot->VBP) (to->TO) (cut->VB) (it->PRP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('right', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (right->JJ) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('no', 'DT'), ('leave', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (no->DT) (leave->VBP) (it->PRP) ')
('tags initial-> ', [('heather', 'NN')])
('tags -> ', '     (heather->NN) ')
candidates to check:
2
descended from food: [['N'], 'applesauce', 27, 37]
applesauce
applesauce applesauce 76
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('applesauce', 'NNS')])
('tags -> ', '     (can->MD) (i->VB) (have->VB) (some->DT) (more->JJR) (applesauce->NNS) ')
candidates to check:
1
descended from food: [['N'], 'porkchops', 32, 41]
('tags initial-> ', [('did', 'VBD'), ('heather', 'RB'), ('eat', 'VB'), ('her', 'PRP'), ('porkchops', 'NNS')])
('tags -> ', '     (did->VBD) (heather->RB) (eat->VB) (her->PRP) (porkchops->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('where', 'WRB'), ('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (where->WRB) (is->VBZ) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN'), ('zzz', 'NN')])
('tags -> ', '     (zzz->NN) (zzz->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('it', 'PRP'), ('this', 'DT'), ('what', 'WP'), ('you', 'PRP'), ('want', 'VBP')])
('tags -> ', '     (it->PRP) (this->DT) (what->WP) (you->PRP) (want->VBP) ')
candidates to check:
2
descended from food: [['N'], 'porkchops', 15, 24]
('tags initial-> ', [('you', 'PRP'), ('like', 'VBP'), ('porkchops', 'NNS')])
('tags -> ', '     (you->PRP) (like->VBP) (porkchops->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('this', 'DT'), ('one', 'CD')])
('tags -> ', '     (do->VBP) (you->PRP) (want->VB) (this->DT) (one->CD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
corn
corn corn 419
[('oh', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (want->VBP) (the->DT) (corn->NN) (on->IN) (the->DT) (cob->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
corn
corn corn 419
[('you', 'PRP'), ('re', 'VBP'), ('too', 'RB'), ('little', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN'), ('heather', 'NN')]
['corn']
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('too', 'RB'), ('little', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN'), ('heather', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (too->RB) (little->JJ) (to->TO) (eat->VB) (corn->NN) (on->IN) (the->DT) (cob->NN) (heather->NN) ')
('tags initial-> ', [('haha', 'NN')])
('tags -> ', '     (haha->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
descended from food: [['N'], 'porkchops', 20, 29]
('tags initial-> ', [('she', 'PRP'), ('wants', 'VBZ'), ('the', 'DT'), ('porkchops', 'NNS')])
('tags -> ', '     (she->PRP) (wants->VBZ) (the->DT) (porkchops->NNS) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('pat', 'NN')])
('tags -> ', '     (pat->NN) ')
candidates to check:
1
('tags initial-> ', [('grab', 'VB'), ('me', 'PRP'), ('some', 'DT'), ('napkins', 'NNS'), ('over', 'IN'), ('there', 'EX'), ('please', 'VB')])
('tags -> ', '     (grab->VB) (me->PRP) (some->DT) (napkins->NNS) (over->IN) (there->EX) (please->VB) ')
('tags initial-> ', [('where', 'WRB')])
('tags -> ', '     (where->WRB) ')
('tags initial-> ', [('give', 'VB'), ('me', 'PRP'), ('some', 'DT'), ('more', 'RBR'), ('while', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('up', 'RP')])
('tags -> ', '     (give->VB) (me->PRP) (some->DT) (more->RBR) (while->IN) (you->PRP) (re->VBP) (up->RP) ')
('tags initial-> ', [('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (up->RB) (there->RB) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('up', 'IN'), ('there', 'EX')])
('tags -> ', '     (it->PRP) (s->VBZ) (up->IN) (there->EX) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('up', 'RP'), ('there', 'RB')])
('tags -> ', '     (they->PRP) (re->VBP) (up->RP) (there->RB) ')
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('up', 'RP'), ('there', 'RB')])
('tags -> ', '     (they->PRP) (re->VBP) (up->RP) (there->RB) ')
candidates to check:
2
corn
corn corn 419
[('nobody', 'NN'), ('takes', 'VBZ'), ('my', 'PRP$'), ('corn', 'NN'), ('heather', 'NN')]
['corn']
('tags initial-> ', [('nobody', 'NN'), ('takes', 'VBZ'), ('my', 'PRP$'), ('corn', 'NN'), ('heather', 'NN')])
('tags -> ', '     (nobody->NN) (takes->VBZ) (my->PRP$) (corn->NN) (heather->NN) ')
('tags initial-> ', [('a', 'DT'), ('h', 'NN'), ('they', 'PRP'), ('re', 'VBP'), ('up', 'RP'), ('there', 'RB')])
('tags -> ', '     (a->DT) (h->NN) (they->PRP) (re->VBP) (up->RP) (there->RB) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('napkins', 'NNS'), ('are', 'VBP'), ('up', 'RB'), ('there', 'RB')])
('tags -> ', '     (the->DT) (napkins->NNS) (are->VBP) (up->RB) (there->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('paper', 'NN'), ('napkins', 'NNS')])
('tags -> ', '     (paper->NN) (napkins->NNS) ')
('tags initial-> ', [('heehee', 'NN')])
('tags -> ', '     (heehee->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('heehee', 'NN')])
('tags -> ', '     (heehee->NN) ')
('tags initial-> ', [('heather', 'NN')])
('tags -> ', '     (heather->NN) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('your', 'PRP$'), ('bum', 'NN')])
('tags -> ', '     (on->IN) (your->PRP$) (bum->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('girl', 'NN')])
('tags -> ', '     (good->JJ) (girl->NN) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('napkins', 'NNS')])
('tags -> ', '     (the->DT) (napkins->NNS) ')
candidates to check:
8
('tags initial-> ', [('a', 'DT'), ('whole', 'JJ'), ('year', 'NN'), ('supply', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (a->DT) (whole->JJ) (year->NN) (supply->NN) (mommy->NN) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
6
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('year', 'NN'), ('a', 'DT'), ('whole', 'JJ'), ('year', 'NN'), ('supply', 'NN')])
('tags -> ', '     (there->RB) (s->VBZ) (a->DT) (year->NN) (a->DT) (whole->JJ) (year->NN) (supply->NN) ')
('tags initial-> ', [('oh', 'UH'), ('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (oh->UH) (thank->NN) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
water
water water 18
[('water', 'NN'), ('mommy', 'NN')]
['water']
('tags initial-> ', [('water', 'NN'), ('mommy', 'NN')])
('tags -> ', '     (water->NN) (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('xxx', 'VB')])
('tags -> ', '     (mommy->NN) (i->NNS) (have->VBP) (to->TO) (xxx->VB) ')
('tags initial-> ', [('i', 'NNS'), ('need', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (i->NNS) (need->VBP) (it->PRP) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
candidates to check:
3
corn
corn corn 419
[('is', 'VBZ'), ('there', 'EX'), ('any', 'DT'), ('more', 'JJR'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('tags initial-> ', [('is', 'VBZ'), ('there', 'EX'), ('any', 'DT'), ('more', 'JJR'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')])
('tags -> ', '     (is->VBZ) (there->EX) (any->DT) (more->JJR) (corn->NN) (on->IN) (the->DT) (cob->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS')]
['broccoli']
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS')])
('tags -> ', '     (there->RB) (s->VBZ) (more->JJR) (broccoli->NNS) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('eat', 'NN'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('eat', 'NN'), ('broccoli', 'NN')])
('tags -> ', '     (eat->NN) (broccoli->NN) ')
candidates to check:
2
broccoli
broccoli broccoli 30
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('broccoli', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (want->VBP) (broccoli->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('broccoli', 'NN'), ('s', 'NN'), ('good', 'NN'), ('for', 'IN'), ('you', 'PRP')]
['broccoli']
('tags initial-> ', [('broccoli', 'NN'), ('s', 'NN'), ('good', 'NN'), ('for', 'IN'), ('you', 'PRP')])
('tags -> ', '     (broccoli->NN) (s->NN) (good->NN) (for->IN) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'dessert', 13, 20]
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('dessert', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (dessert->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('he', 'PRP'), ('say', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (he->PRP) (say->VB) ')
candidates to check:
1
honey
honey honey 304
[('honey', 'NN'), ('dew', 'NN')]
['honey']
('tags initial-> ', [('honey', 'NN'), ('dew', 'NN')])
('tags -> ', '     (honey->NN) (dew->NN) ')
candidates to check:
1
honey
honey honey 304
[('honey', 'NN'), ('dew', 'NN')]
['honey']
('tags initial-> ', [('honey', 'NN'), ('dew', 'NN')])
('tags -> ', '     (honey->NN) (dew->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'salad', 13, 18]
fruit salad
fruit salad fruit salad 86
[('fruit', 'NN'), ('salad', 'NN')]
['fruit', 'salad']
fruit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5e2950>)
[('fruit', 'NN'), ('salad', 'NN')]
['fruit']
('tags initial-> ', [('fruit', 'NN'), ('salad', 'NN')])
('tags -> ', '     (fruit->NN) (salad->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
5
descended from food: [['N'], 'salad', 44, 49]
fruit salad
fruit salad fruit salad 86
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('stuff', 'NN'), ('for', 'IN'), ('a', 'DT'), ('fruit', 'NN'), ('salad', 'NN')]
['fruit', 'salad']
fruit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5e2f38>)
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('stuff', 'NN'), ('for', 'IN'), ('a', 'DT'), ('fruit', 'NN'), ('salad', 'NN')]
['fruit']
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('stuff', 'NN'), ('for', 'IN'), ('a', 'DT'), ('fruit', 'NN'), ('salad', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (enough->JJ) (stuff->NN) (for->IN) (a->DT) (fruit->NN) (salad->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
descended from food: [['N'], 'applesauce', 24, 34]
applesauce
applesauce applesauce 76
[('i', 'NN'), ('want', 'VBP'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('more', 'JJR'), ('applesauce', 'NNS')])
('tags -> ', '     (i->NN) (want->VBP) (more->JJR) (applesauce->NNS) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('the', 'DT'), ('fudgesicles', 'NNS')])
('tags -> ', '     (what->WP) (about->IN) (the->DT) (fudgesicles->NNS) ')
candidates to check:
1
('tags initial-> ', [('eat', 'VB'), ('what', 'WP'), ('s', 'VB'), ('in', 'IN'), ('your', 'PRP$'), ('xxx', 'NN'), ('first', 'RB')])
('tags -> ', '     (eat->VB) (what->WP) (s->VB) (in->IN) (your->PRP$) (xxx->NN) (first->RB) ')
('tags initial-> ', [('you', 'PRP'), ('said', 'VBD'), ('we', 'PRP'), ('were', 'VBD'), ('gon', 'VBG'), ('na', 'NNS'), ('have', 'VBP'), ('fudgesicles', 'NNS')])
('tags -> ', '     (you->PRP) (said->VBD) (we->PRP) (were->VBD) (gon->VBG) (na->NNS) (have->VBP) (fudgesicles->NNS) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('have', 'VB'), ('fudgesicles', 'NNS'), ('too', 'RB')])
('tags -> ', '     (you->PRP) (can->MD) (have->VB) (fudgesicles->NNS) (too->RB) ')
('tags initial-> ', [('is', 'VBZ'), ('it', 'PRP'), ('hot', 'JJ')])
('tags -> ', '     (is->VBZ) (it->PRP) (hot->JJ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
corn
corn corn 419
[('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('corn', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('if', 'IN'), ('you', 'PRP'), ('want', 'VBP')]
['corn']
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('corn', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('if', 'IN'), ('you', 'PRP'), ('want', 'VBP')])
('tags -> ', '     (i->NNS) (have->VBP) (a->DT) (corn->NN) (for->IN) (you->PRP) (if->IN) (you->PRP) (want->VBP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('you', 'PRP'), ('were', 'VBD'), ('on', 'IN'), ('here', 'RB')])
('tags -> ', '     (daddy->NN) (you->PRP) (were->VBD) (on->IN) (here->RB) ')
candidates to check:
3
corn
corn corn 419
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (want->VBP) (corn->NN) (on->IN) (the->DT) (cob->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('you', 'PRP'), ('were', 'VBD'), ('on', 'IN'), ('here', 'RB')])
('tags -> ', '     (daddy->NN) (you->PRP) (were->VBD) (on->IN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('radio', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (radio->NN) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('your', 'PRP$'), ('player', 'NN')])
('tags -> ', '     (on->IN) (your->PRP$) (player->NN) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('was', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('radio', 'NN')])
('tags -> ', '     (he->PRP) (was->VBD) (on->IN) (the->DT) (radio->NN) ')
candidates to check:
2
('tags initial-> ', [('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), ('ago', 'IN'), ('i', 'NN'), ('was', 'VBD'), ('amanda', 'NN')])
('tags -> ', '     (a->DT) (long->JJ) (time->NN) (ago->IN) (i->NN) (was->VBD) (amanda->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
candidates to check:
2
descended from food: [['N'], 'applesauce', 27, 37]
applesauce
applesauce applesauce 76
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('applesauce', 'NNS')])
('tags -> ', '     (can->MD) (i->VB) (have->VB) (some->DT) (more->JJR) (applesauce->NNS) ')
('tags initial-> ', [('it', 'PRP'), ('tastes', 'VBZ'), ('the', 'DT'), ('best', 'JJS')])
('tags -> ', '     (it->PRP) (tastes->VBZ) (the->DT) (best->JJS) ')
candidates to check:
1
('tags initial-> ', [('while', 'IN'), ('you', 'PRP'), ('were', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('while', 'NN'), ('you', 'PRP'), ('were', 'VBD'), ('on', 'IN'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (while->IN) (you->PRP) (were->VBD) (on->IN) (the->DT) (while->NN) (you->PRP) (were->VBD) (on->IN) (the->DT) (xxx->NN) ')
candidates to check:
3
('tags initial-> ', [('finish', 'JJ'), ('everything', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('dish', 'NN')])
('tags -> ', '     (finish->JJ) (everything->NN) (in->IN) (your->PRP$) (dish->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('i', 'NN'), ('ate', 'VBP'), ('my', 'PRP$'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('i', 'NN'), ('ate', 'VBP'), ('my', 'PRP$'), ('broccoli', 'NN')])
('tags -> ', '     (i->NN) (ate->VBP) (my->PRP$) (broccoli->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('we', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('um', 'VB'), ('radio', 'NN')])
('tags -> ', '     (are->VBP) (we->PRP) (going->VBG) (to->TO) (um->VB) (radio->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('out', 'RP'), ('and', 'CC'), ('make', 'VB'), ('a', 'DT'), ('tape', 'NN')])
('tags -> ', '     (we->PRP) (re->VBP) (gon->VB) (na->TO) (go->VB) (out->RP) (and->CC) (make->VB) (a->DT) (tape->NN) ')
candidates to check:
1
('tags initial-> ', [('all', 'DT'), ('of', 'IN'), ('us', 'PRP'), ('could', 'MD'), ('make', 'VB'), ('the', 'DT'), ('tape', 'NN')])
('tags -> ', '     (all->DT) (of->IN) (us->PRP) (could->MD) (make->VB) (the->DT) (tape->NN) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('see', 'VB')])
('tags -> ', '     (see->VB) ')
('tags initial-> ', [('you', 'PRP'), ('sure', 'VBP')])
('tags -> ', '     (you->PRP) (sure->VBP) ')
('tags initial-> ', [('yup', 'NN')])
('tags -> ', '     (yup->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('summer', 'NN')])
('tags -> ', '     (this->DT) (summer->NN) ')
candidates to check:
1
('tags initial-> ', [('christmas', 'NN'), ('time', 'NN')])
('tags -> ', '     (christmas->NN) (time->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('them', 'PRP'), ('over', 'RP'), ('the', 'DT'), ('summer', 'NN')])
('tags -> ', '     (you->PRP) (got->VBD) (them->PRP) (over->RP) (the->DT) (summer->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('this', 'DT'), ('year', 'NN')])
('tags -> ', '     (no->DT) (this->DT) (year->NN) ')
candidates to check:
1
('tags initial-> ', [('guys', 'NNS'), ('hurry', 'VBP'), ('up', 'RP')])
('tags -> ', '     (guys->NNS) (hurry->VBP) (up->RP) ')
('tags initial-> ', [('we', 'PRP'), ('got', 'VBD'), ('to', 'TO'), ('go', 'VB'), ('soon', 'RB')])
('tags -> ', '     (we->PRP) (got->VBD) (to->TO) (go->VB) (soon->RB) ')
('tags initial-> ', [('where', 'WRB')])
('tags -> ', '     (where->WRB) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('time', 'NN')])
('tags -> ', '     (what->WP) (time->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('leave', 'VB'), ('in', 'IN'), ('twenty', 'NN'), ('minutes', 'NNS')])
('tags -> ', '     (i->NNS) (have->VBP) (to->TO) (leave->VB) (in->IN) (twenty->NN) (minutes->NNS) ')
('tags initial-> ', [('where', 'WRB')])
('tags -> ', '     (where->WRB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('take', 'VB'), ('a', 'DT'), ('shower', 'NN'), ('yet', 'RB')])
('tags -> ', '     (and->CC) (i->NNS) (have->VBP) (to->TO) (take->VB) (a->DT) (shower->NN) (yet->RB) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('church', 'VB')])
('tags -> ', '     (we->PRP) (re->VBP) (going->VBG) (to->TO) (church->VB) ')
candidates to check:
1
('tags initial-> ', [('twenty', 'NN'), ('minutes', 'NNS')])
('tags -> ', '     (twenty->NN) (minutes->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('uhhum', 'NN')])
('tags -> ', '     (uhhum->NN) ')
('tags initial-> ', [('hurry', 'NN'), ('up', 'RP')])
('tags -> ', '     (hurry->NN) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('make', 'VB'), ('it', 'PRP'), ('mom', 'VB')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (we->PRP) (re->VBP) (going->VBG) (to->TO) (make->VB) (it->PRP) (mom->VB) ')
('tags initial-> ', [('well', 'RB'), ('hurry', 'VBZ'), ('up', 'RP')])
('tags -> ', '     (well->RB) (hurry->VBZ) (up->RP) ')
candidates to check:
1
corn
corn corn 419
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('some', 'DT'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('some', 'DT'), ('corn', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (some->DT) (corn->NN) ')
('tags initial-> ', [('i', 'NN'), ('asked', 'VBD'), ('first', 'JJ')])
('tags -> ', '     (i->NN) (asked->VBD) (first->JJ) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('i', 'NN'), ('asked', 'VBD'), ('first', 'JJ'), ('brian', 'NN')])
('tags -> ', '     (i->NN) (asked->VBD) (first->JJ) (brian->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('coming', 'VBG')])
('tags -> ', '     (i->JJ) (m->VBP) (coming->VBG) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('church', 'VB')])
('tags -> ', '     (are->VBP) (you->PRP) (going->VBG) (to->TO) (church->VB) ')
candidates to check:
1
descended from food: [['N'], 'butter', 20, 26]
butter
butter butter 499
[('gi', 'NN'), ('ve', 'IN'), ('me', 'PRP'), ('the', 'DT'), ('butter', 'NN'), ('please', 'NN')]
['butter']
('tags initial-> ', [('gi', 'NN'), ('ve', 'IN'), ('me', 'PRP'), ('the', 'DT'), ('butter', 'NN'), ('please', 'NN')])
('tags -> ', '     (gi->NN) (ve->IN) (me->PRP) (the->DT) (butter->NN) (please->NN) ')
candidates to check:
1
descended from food: [['N'], 'butter', 17, 23]
butter
butter butter 499
[('i', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('i', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('butter', 'NN')])
('tags -> ', '     (i->NNS) (need->VBP) (the->DT) (butter->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('done', 'VBN'), ('eating', 'VBG')])
('tags -> ', '     (are->VBP) (you->PRP) (done->VBN) (eating->VBG) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('another', 'DT'), ('one', 'NN')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (another->DT) (one->NN) ')
('tags initial-> ', [('another', 'DT'), ('what', 'WP')])
('tags -> ', '     (another->DT) (what->WP) ')
candidates to check:
4
corn
corn corn 419
[('there', 'RB'), ('s', 'VBZ'), ('only', 'RB'), ('one', 'CD'), ('more', 'JJR'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN'), ('and', 'CC'), ('three', 'CD'), ('of', 'IN'), ('you', 'PRP'), ('guys', 'VBP')]
['corn']
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('only', 'RB'), ('one', 'CD'), ('more', 'JJR'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN'), ('and', 'CC'), ('three', 'CD'), ('of', 'IN'), ('you', 'PRP'), ('guys', 'VBP')])
('tags -> ', '     (there->RB) (s->VBZ) (only->RB) (one->CD) (more->JJR) (corn->NN) (on->IN) (the->DT) (cob->NN) (and->CC) (three->CD) (of->IN) (you->PRP) (guys->VBP) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('half', 'NN'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (can->MD) (i->VB) (have->VBP) (half->NN) (of->IN) (it->PRP) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (want->VB) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('still', 'RB'), ('have', 'VBP'), ('some', 'DT'), ('in', 'IN'), ('your', 'PRP$'), ('dish', 'NN'), ('heather', 'NN')])
('tags -> ', '     (you->PRP) (still->RB) (have->VBP) (some->DT) (in->IN) (your->PRP$) (dish->NN) (heather->NN) ')
('tags initial-> ', [('i', 'NN'), ('asked', 'VBD'), ('first', 'JJ')])
('tags -> ', '     (i->NN) (asked->VBD) (first->JJ) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('having', 'VBG'), ('half', 'NN'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (m->VBP) (having->VBG) (half->NN) (of->IN) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('asked', 'VBD'), ('first', 'JJ')])
('tags -> ', '     (i->NN) (asked->VBD) (first->JJ) ')
candidates to check:
1
('tags initial-> ', [('uh', 'JJ'), ('guys', 'NNS')])
('tags -> ', '     (uh->JJ) (guys->NNS) ')
candidates to check:
2
('tags initial-> ', [('nobody', 'NN'), ('s', 'VBZ'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('cause', 'NN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('have', 'VBP'), ('time', 'NN')])
('tags -> ', '     (nobody->NN) (s->VBZ) (gon->VB) (na->TO) (be->VB) (cause->NN) (we->PRP) (don->VBP) (t->RB) (have->VBP) (time->NN) ')
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('go', 'VB')])
('tags -> ', '     (we->PRP) (have->VBP) (to->TO) (go->VB) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('guys', 'VBP'), ('while', 'IN'), ('i', 'JJ'), ('m', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('shower', 'NN'), ('are', 'VBP'), ('cleaning', 'VBG'), ('off', 'RP'), ('this', 'DT'), ('table', 'NN')])
('tags -> ', '     (you->PRP) (guys->VBP) (while->IN) (i->JJ) (m->NNS) (in->IN) (the->DT) (shower->NN) (are->VBP) (cleaning->VBG) (off->RP) (this->DT) (table->NN) ')
candidates to check:
1
honey
honey honey 304
[('what', 'WP'), ('about', 'IN'), ('um', 'JJ'), ('honey', 'NN'), ('dew', 'NN')]
['honey']
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('um', 'JJ'), ('honey', 'NN'), ('dew', 'NN')])
('tags -> ', '     (what->WP) (about->IN) (um->JJ) (honey->NN) (dew->NN) ')
('tags initial-> ', [('uh', 'NN')])
('tags -> ', '     (uh->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('just', 'RB'), ('gon', 'VBN'), ('na', 'RB'), ('have', 'VBP'), ('to', 'TO'), ('wait', 'VB'), ('until', 'IN'), ('we', 'PRP'), ('come', 'VBP'), ('uh', 'JJ')])
('tags -> ', '     (you->PRP) (re->VBP) (just->RB) (gon->VBN) (na->RB) (have->VBP) (to->TO) (wait->VB) (until->IN) (we->PRP) (come->VBP) (uh->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('the', 'DT'), ('fudgesicles', 'NNS')])
('tags -> ', '     (you->PRP) (have->VBP) (the->DT) (fudgesicles->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('ma', 'NN')])
('tags -> ', '     (ma->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'NN'), ('can', 'MD'), ('i', 'VB'), ('do', 'VBP'), ('it', 'PRP'), ('when', 'WRB'), ('we', 'PRP'), ('get', 'VBP'), ('home', 'NN')])
('tags -> ', '     (xxx->NN) (can->MD) (i->VB) (do->VBP) (it->PRP) (when->WRB) (we->PRP) (get->VBP) (home->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('ll', 'RB'), ('be', 'VB'), ('ten', 'VBN'), ('o', 'JJ'), ('clock', 'NN')])
('tags -> ', '     (it->PRP) (ll->RB) (be->VB) (ten->VBN) (o->JJ) (clock->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
candidates to check:
2
('tags initial-> ', [('when', 'WRB'), ('we', 'PRP'), ('get', 'VBP'), ('home', 'NN')])
('tags -> ', '     (when->WRB) (we->PRP) (get->VBP) (home->NN) ')
('tags initial-> ', [('ten', 'NNS')])
('tags -> ', '     (ten->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('uh', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('guys', 'VBP'), ('want', 'VBP'), ('you', 'PRP'), ('can', 'MD'), ('stay', 'VB'), ('here', 'RB'), ('and', 'CC'), ('play', 'VB'), ('with', 'IN'), ('your', 'PRP$'), ('friends', 'NNS')])
('tags -> ', '     (uh->NN) (if->IN) (you->PRP) (guys->VBP) (want->VBP) (you->PRP) (can->MD) (stay->VB) (here->RB) (and->CC) (play->VB) (with->IN) (your->PRP$) (friends->NNS) ')
candidates to check:
4
cream
cream cream 72
[('mom', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('now', 'RB')]
['cream']
ice cream
ice cream ice cream 265
[('mom', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('now', 'RB')]
['ice', 'cream']
('tags initial-> ', [('mom', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('now', 'RB')])
('tags -> ', '     (mom->NN) (can->MD) (i->VB) (have->VBP) (can->MD) (i->VB) (have->VBP) (the->DT) (ice->NN) (cream->NN) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('stay', 'VB'), ('out', 'RB'), ('until', 'IN'), ('like', 'IN'), ('nine', 'CD')])
('tags -> ', '     (and->CC) (stay->VB) (out->RB) (until->IN) (like->IN) (nine->CD) ')
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('be', 'VB'), ('back', 'RB'), ('at', 'IN'), ('ten', 'NN')])
('tags -> ', '     (we->PRP) (re->VBP) (gon->VB) (na->TO) (be->VB) (back->RB) (at->IN) (ten->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('church', 'NN'), ('are', 'VBP'), ('we', 'PRP'), ('going', 'VBG'), ('to', 'TO')])
('tags -> ', '     (what->WP) (church->NN) (are->VBP) (we->PRP) (going->VBG) (to->TO) ')
('tags initial-> ', [('parkway', 'NN')])
('tags -> ', '     (parkway->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (want->VB) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('mom', 'NN')])
('tags -> ', '     (mom->NN) (mom->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('eat', 'NN'), ('this', 'DT')])
('tags -> ', '     (eat->NN) (this->DT) ')
('tags initial-> ', [('do', 'VBP'), ('we', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('go', 'VB'), ('upstairs', 'JJ')])
('tags -> ', '     (do->VBP) (we->PRP) (have->VB) (to->TO) (go->VB) (upstairs->JJ) ')
('tags initial-> ', [('eat', 'NN'), ('this', 'DT')])
('tags -> ', '     (eat->NN) (this->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('we', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('go', 'VBP'), ('upstairs', 'JJ')])
('tags -> ', '     (we->PRP) (don->VBP) (t->JJ) (go->VBP) (upstairs->JJ) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('do', 'VB'), ('we', 'PRP'), ('go', 'VB'), ('upstairs', 'JJ')])
('tags -> ', '     (do->VB) (we->PRP) (go->VB) (upstairs->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('t', 'VB'), ('a', 'DT'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('with', 'IN'), ('the', 'DT'), ('baby', 'NN'), ('sitter', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VB) (t->VB) (a->DT) (going->VBG) (to->TO) (be->VB) (with->IN) (the->DT) (baby->NN) (sitter->NN) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('a', 'DT'), ('meeting', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (a->DT) (meeting->NN) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('not', 'RB'), ('um', 'JJ')])
('tags -> ', '     (this->DT) (is->VBZ) (not->RB) (um->JJ) ')
candidates to check:
1
descended from food: [['N'], 'ketchup', 6, 13]
('tags initial-> ', [('ketchup', 'NN')])
('tags -> ', '     (ketchup->NN) ')
candidates to check:
2
('tags initial-> ', [('regular', 'JJ'), ('church', 'NN')])
('tags -> ', '     (regular->JJ) (church->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('some', 'DT')])
('tags -> ', '     (mommy->NN) (i->NN) (want->VBP) (some->DT) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('her', 'PRP$'), ('her', 'PRP$'), ('spoon', 'NN'), ('right', 'RB'), ('now', 'RB')])
('tags -> ', '     (give->VB) (her->PRP$) (her->PRP$) (spoon->NN) (right->RB) (now->RB) ')
candidates to check:
3
descended from food: [['N'], 'ketchup', 6, 13]
('tags initial-> ', [('ketchup', 'JJ'), ('please', 'NN'), ('mom', 'NN')])
('tags -> ', '     (ketchup->JJ) (please->NN) (mom->NN) ')
candidates to check:
1
('tags initial-> ', [('give', 'VB'), ('her', 'PRP$'), ('heather', 'NN'), ('her', 'PRP$'), ('spoon', 'NN'), ('emily', 'RB')])
('tags -> ', '     (give->VB) (her->PRP$) (heather->NN) (her->PRP$) (spoon->NN) (emily->RB) ')
candidates to check:
1
('tags initial-> ', [('use', 'VB'), ('a', 'DT'), ('fork', 'NN')])
('tags -> ', '     (use->VB) (a->DT) (fork->NN) ')
candidates to check:
1
('tags initial-> ', [('where', 'WRB'), ('s', 'VB'), ('my', 'PRP$'), ('fork', 'NN'), ('then', 'RB')])
('tags -> ', '     (where->WRB) (s->VB) (my->PRP$) (fork->NN) (then->RB) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('right', 'RB'), ('here', 'RB')])
('tags -> ', '     (it->PRP) (s->VBD) (right->RB) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('heather', 'PRP$'), ('s', 'JJ'), ('spoon', 'NN')])
('tags -> ', '     (xxx->NN) (heather->PRP$) (s->JJ) (spoon->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('spoon', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (a->DT) (spoon->NN) ')
candidates to check:
1
('tags initial-> ', [('use', 'NN'), ('that', 'DT'), ('fork', 'NN')])
('tags -> ', '     (use->NN) (that->DT) (fork->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('i', 'NN'), ('just', 'RB'), ('gave', 'VBD'), ('it', 'PRP'), ('to', 'TO'), ('her', 'PRP$')])
('tags -> ', '     (i->NN) (know->VBP) (i->NN) (just->RB) (gave->VBD) (it->PRP) (to->TO) (her->PRP$) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('spoon', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (a->DT) (spoon->NN) ')
candidates to check:
4
salt
salt salt 0
[('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN'), ('mom', 'NN')]
['salt']
pepper
pepper pepper 27
[('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN'), ('mom', 'NN')]
['pepper']
('tags initial-> ', [('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN'), ('mom', 'NN')])
('tags -> ', '     (salt->NN) (and->CC) (pepper->NN) (mom->NN) ')
candidates to check:
1
salt
salt salt 0
[('freddy', 'RB'), ('give', 'VB'), ('me', 'PRP'), ('the', 'DT'), ('salt', 'NN'), ('please', 'NN')]
['salt']
('tags initial-> ', [('freddy', 'RB'), ('give', 'VB'), ('me', 'PRP'), ('the', 'DT'), ('salt', 'NN'), ('please', 'NN')])
('tags -> ', '     (freddy->RB) (give->VB) (me->PRP) (the->DT) (salt->NN) (please->NN) ')
candidates to check:
1
descended from food: [['N'], 'butter', 20, 26]
butter
butter butter 499
[('ma', 'NN'), ('i', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('ma', 'NN'), ('i', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('butter', 'NN')])
('tags -> ', '     (ma->NN) (i->NNS) (need->VBP) (the->DT) (butter->NN) ')
('tags initial-> ', [('emily', 'RB')])
('tags -> ', '     (emily->RB) ')
candidates to check:
1
descended from food: [['N'], 'butter', 18, 24]
butter
butter butter 499
[('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('butter', 'NN')])
('tags -> ', '     (where->WRB) (s->PDT) (the->DT) (butter->NN) ')
candidates to check:
1
descended from food: [['N'], 'butter', 18, 24]
butter
butter butter 499
[('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('tags initial-> ', [('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('butter', 'NN')])
('tags -> ', '     (where->WRB) (s->PDT) (the->DT) (butter->NN) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('i', 'NN')])
('tags -> ', '     (i->NN) ')
candidates to check:
1
corn
corn corn 419
[('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('t', 'VB'), ('a', 'DT'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('finish', 'VB'), ('this', 'DT'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('t', 'VB'), ('a', 'DT'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('finish', 'VB'), ('this', 'DT'), ('corn', 'NN')])
('tags -> ', '     (you->PRP) (re->VBP) (not->RB) (gon->VB) (t->VB) (a->DT) (going->VBG) (to->TO) (be->VB) (able->JJ) (to->TO) (finish->VB) (this->DT) (corn->NN) ')
candidates to check:
1
corn
corn corn 419
[('why', 'WRB'), ('don', 'JJ'), ('t', 'NN'), ('we', 'PRP'), ('save', 'VBP'), ('this', 'DT'), ('corn', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('for', 'IN'), ('later', 'JJR')]
['corn']
('tags initial-> ', [('why', 'WRB'), ('don', 'JJ'), ('t', 'NN'), ('we', 'PRP'), ('save', 'VBP'), ('this', 'DT'), ('corn', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('for', 'IN'), ('later', 'JJR')])
('tags -> ', '     (why->WRB) (don->JJ) (t->NN) (we->PRP) (save->VBP) (this->DT) (corn->NN) (for->IN) (you->PRP) (for->IN) (later->JJR) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('eat', 'NN'), ('everything', 'NN'), ('else', 'RB'), ('in', 'IN'), ('your', 'PRP$'), ('dish', 'NN')])
('tags -> ', '     (eat->NN) (everything->NN) (else->RB) (in->IN) (your->PRP$) (dish->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('eat', 'NN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (eat->NN) (it->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('freddy', 'NN')])
('tags -> ', '     (freddy->NN) ')
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('m', 'NN'), ('hungry', 'NN')])
('tags -> ', '     (but->CC) (i->JJ) (m->NN) (hungry->NN) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('is', 'VBZ'), ('my', 'PRP$'), ('mouth', 'NN'), ('bigger', 'JJR'), ('than', 'IN'), ('yours', 'NNS')])
('tags -> ', '     (mom->NN) (is->VBZ) (my->PRP$) (mouth->NN) (bigger->JJR) (than->IN) (yours->NNS) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('my', 'PRP$'), ('mouth', 'NN'), ('s', 'NN'), ('bigger', 'JJR'), ('than', 'IN'), ('yours', 'NNS')])
('tags -> ', '     (my->PRP$) (mouth->NN) (s->NN) (bigger->JJR) (than->IN) (yours->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('so', 'RB'), ('pat', 'JJ'), ('uh', 'NN'), ('brian', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (think->VBP) (so->RB) (pat->JJ) (uh->NN) (brian->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('pat', 'NN'), ('not', 'RB'), ('brian', 'JJ')])
('tags -> ', '     (i->JJ) (m->VBP) (pat->NN) (not->RB) (brian->JJ) ')
('tags initial-> ', [('pat', 'NN')])
('tags -> ', '     (pat->NN) ')
('tags initial-> ', [('finish', 'JJ'), ('eating', 'NN')])
('tags -> ', '     (finish->JJ) (eating->NN) ')
('tags initial-> ', [('a', 'DT'), ('h', 'NN')])
('tags -> ', '     (a->DT) (h->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
candidates to check:
2
descended from food: [['N'], 'food', 17, 21]
('tags initial-> ', [('is', 'VBZ'), ('she', 'PRP'), ('xxx', 'VBD'), ('food', 'NN')])
('tags -> ', '     (is->VBZ) (she->PRP) (xxx->VBD) (food->NN) ')
('tags initial-> ', [('haha', 'NN')])
('tags -> ', '     (haha->NN) ')
candidates to check:
1
descended from food: [['N'], 'food', 22, 26]
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('taking', 'VBG'), ('my', 'PRP$'), ('food', 'NN')])
('tags -> ', '     (she->PRP) (s->VBD) (taking->VBG) (my->PRP$) (food->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('let', 'VBD'), ('her', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (let->VBD) (her->PRP) ')
('tags initial-> ', [('heather', 'NN')])
('tags -> ', '     (heather->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'NN'), ('still', 'RB'), ('hungry', 'JJ')])
('tags -> ', '     (i->NN) (m->NN) (still->RB) (hungry->JJ) ')
candidates to check:
4
descended from food: [['N'], 'potato', 11, 17]
descended from food: [['N'], 'salad', 18, 23]
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5aa680>)
[('have', 'VB'), ('potato', 'NN'), ('salad', 'NN')]
['potato']
potato salad
potato salad potato salad 143
[('have', 'VB'), ('potato', 'NN'), ('salad', 'NN')]
['potato', 'salad']
('tags initial-> ', [('have', 'VB'), ('potato', 'NN'), ('salad', 'NN')])
('tags -> ', '     (have->VB) (potato->NN) (salad->NN) ')
candidates to check:
4
descended from food: [['N'], 'potato', 13, 19]
descended from food: [['N'], 'salad', 20, 25]
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5aaea8>)
[('i', 'JJ'), ('hate', 'VBP'), ('potato', 'NN'), ('salad', 'NN')]
['potato']
potato salad
potato salad potato salad 143
[('i', 'JJ'), ('hate', 'VBP'), ('potato', 'NN'), ('salad', 'NN')]
['potato', 'salad']
('tags initial-> ', [('i', 'JJ'), ('hate', 'VBP'), ('potato', 'NN'), ('salad', 'NN')])
('tags -> ', '     (i->JJ) (hate->VBP) (potato->NN) (salad->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
broccoli
broccoli broccoli 30
[('xxx', 'NN'), ('broccoli', 'NN')]
['broccoli']
('tags initial-> ', [('xxx', 'NN'), ('broccoli', 'NN')])
('tags -> ', '     (xxx->NN) (broccoli->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'VBP'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->VBP) (like->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('fudgesicle', 'NN')])
('tags -> ', '     (a->DT) (fudgesicle->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('fudgesicle', 'NN')])
('tags -> ', '     (fudgesicle->NN) ')
candidates to check:
2
descended from food: [['N'], 'applesauce', 16, 26]
applesauce
applesauce applesauce 76
[('have', 'VB'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('tags initial-> ', [('have', 'VB'), ('more', 'JJR'), ('applesauce', 'NNS')])
('tags -> ', '     (have->VB) (more->JJR) (applesauce->NNS) ')
candidates to check:
1
('tags initial-> ', [('emily', 'RB'), ('don', 'VB'), ('t', 'NN'), ('do', 'VBP'), ('that', 'IN'), ('to', 'TO'), ('your', 'PRP$'), ('chair', 'NN')])
('tags -> ', '     (emily->RB) (don->VB) (t->NN) (do->VBP) (that->IN) (to->TO) (your->PRP$) (chair->NN) ')
('tags initial-> ', [('heather', 'NN')])
('tags -> ', '     (heather->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('wan', 'NN'), ('t', 'NN'), ('t', 'VBZ'), ('a', 'DT'), ('see', 'NN'), ('how', 'WRB'), ('big', 'JJ'), ('my', 'PRP$'), ('mouth', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (wan->NN) (t->NN) (t->VBZ) (a->DT) (see->NN) (how->WRB) (big->JJ) (my->PRP$) (mouth->NN) (is->VBZ) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('look', 'NN'), ('brian', 'NN')])
('tags -> ', '     (look->NN) (brian->NN) ')
candidates to check:
3
descended from food: [['N'], 'food', 49, 53]
('tags initial-> ', [('keep', 'VB'), ('your', 'PRP$'), ('mouth', 'NN'), ('shut', 'NN'), ('when', 'WRB'), ('you', 'PRP'), ('have', 'VBP'), ('food', 'NN'), ('in', 'IN'), ('it', 'PRP')])
('tags -> ', '     (keep->VB) (your->PRP$) (mouth->NN) (shut->NN) (when->WRB) (you->PRP) (have->VBP) (food->NN) (in->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('open', 'VBP'), ('it', 'PRP'), ('again', 'RB'), ('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('in', 'IN'), ('your', 'PRP$'), ('room', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (open->VBP) (it->PRP) (again->RB) (you->PRP) (re->VBP) (going->VBG) (in->IN) (your->PRP$) (room->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('what', 'WP'), ('happens', 'VBZ'), ('xxx', 'NN')])
('tags -> ', '     (do->VB) (you->PRP) (know->VB) (what->WP) (happens->VBZ) (xxx->NN) ')
('tags initial-> ', [('hm', 'NN')])
('tags -> ', '     (hm->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('if', 'IN'), ('you', 'PRP'), ('guys', 'VBP'), ('are', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (no->DT) (if->IN) (you->PRP) (guys->VBP) (are->VBP) (done->VBN) ')
('tags initial-> ', [('finish', 'JJ'), ('eating', 'NN'), ('um', 'NN'), ('go', 'VBP'), ('get', 'VB'), ('washed', 'VBN')])
('tags -> ', '     (finish->JJ) (eating->NN) (um->NN) (go->VBP) (get->VB) (washed->VBN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('matter', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (the->DT) (matter->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('help', 'VB'), ('it', 'PRP'), ('if', 'IN'), ('you', 'PRP'), ('hate', 'VBP'), ('half', 'DT'), ('of', 'IN'), ('what', 'WP'), ('we', 'PRP'), ('got', 'VBD')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (help->VB) (it->PRP) (if->IN) (you->PRP) (hate->VBP) (half->DT) (of->IN) (what->WP) (we->PRP) (got->VBD) ')
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('learn', 'VB'), ('to', 'TO'), ('eat', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (learn->VB) (to->TO) (eat->VB) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('always', 'RB'), ('hate', 'VBP'), ('xxx', 'NNS')])
('tags -> ', '     (i->NN) (always->RB) (hate->VBP) (xxx->NNS) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('washed', 'VBN'), ('again', 'RB')])
('tags -> ', '     (washed->VBN) (again->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('heather', 'PRP$'), ('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB')])
('tags -> ', '     (heather->PRP$) (what->WP) (do->VBP) (you->PRP) (want->VB) ')
('tags initial-> ', [('xxx', 'JJ'), ('brian', 'JJ'), ('s', 'NN'), ('teasing', 'VBG'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (brian->JJ) (s->NN) (teasing->VBG) (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('oh', 'IN'), ('he', 'PRP'), ('is', 'VBZ'), ('huh', 'JJ')])
('tags -> ', '     (oh->IN) (he->PRP) (is->VBZ) (huh->JJ) ')
candidates to check:
1
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('uh', 'JJ'), ('tim', 'NN'), ('just', 'RB'), ('yell', 'RB'), ('at', 'IN'), ('somebody', 'NN'), ('for', 'IN'), ('doing', 'VBG'), ('that', 'DT')])
('tags -> ', '     (didn->NN) (t->NN) (uh->JJ) (tim->NN) (just->RB) (yell->RB) (at->IN) (somebody->NN) (for->IN) (doing->VBG) (that->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('hey', 'NN')])
('tags -> ', '     (hey->NN) ')
('tags initial-> ', [('i', 'NN'), ('am', 'VBP'), ('not', 'RB')])
('tags -> ', '     (i->NN) (am->VBP) (not->RB) ')
('tags initial-> ', [('xxx', 'NN'), ('did', 'VBD')])
('tags -> ', '     (xxx->NN) (did->VBD) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('alright', 'NN'), ('guys', 'NNS')])
('tags -> ', '     (alright->NN) (guys->NNS) ')
('tags initial-> ', [('ow', 'NN')])
('tags -> ', '     (ow->NN) ')
('tags initial-> ', [('heather', 'NN')])
('tags -> ', '     (heather->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('here', 'RB'), ('give', 'VBP'), ('that', 'IN'), ('to', 'TO'), ('heather', 'VB')])
('tags -> ', '     (here->RB) (give->VBP) (that->IN) (to->TO) (heather->VB) ')
('tags initial-> ', [('alright', 'RB'), ('freddie', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('please', 'NN'), ('go', 'VB'), ('get', 'VB'), ('washed', 'VBN')])
('tags -> ', '     (alright->RB) (freddie->NN) (if->IN) (you->PRP) (re->VBP) (done->VBN) (please->NN) (go->VB) (get->VB) (washed->VBN) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('heather', 'JJR'), ('s', 'JJ'), ('plate', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (heather->JJR) (s->JJ) (plate->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'pork', 10, 14]
pork
pork pork 541
[('one', 'CD'), ('pork', 'NN'), ('chop', 'NN')]
['pork']
('tags initial-> ', [('one', 'CD'), ('pork', 'NN'), ('chop', 'NN')])
('tags -> ', '     (one->CD) (pork->NN) (chop->NN) ')
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (ll->VBP) (get->VB) (it->PRP) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('more', 'JJR')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (get->VB) (more->JJR) ')
candidates to check:
1
water
water water 18
[('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('water', 'NN')]
['water']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('water', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (some->DT) (water->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('heather', 'JJR'), ('s', 'JJ'), ('plate', 'NN')])
('tags -> ', '     (this->DT) (is->VBZ) (heather->JJR) (s->JJ) (plate->NN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('close', 'RB'), ('to', 'TO'), ('her', 'PRP$')])
('tags -> ', '     (and->CC) (you->PRP) (re->VBP) (not->RB) (close->RB) (to->TO) (her->PRP$) ')
('tags initial-> ', [('and', 'CC'), ('this', 'DT'), ('is', 'VBZ'), ('xxx', 'JJ')])
('tags -> ', '     (and->CC) (this->DT) (is->VBZ) (xxx->JJ) ')
('tags initial-> ', [('this', 'DT'), ('is', 'VBZ'), ('dirty', 'JJ'), ('anyway', 'RB')])
('tags -> ', '     (this->DT) (is->VBZ) (dirty->JJ) (anyway->RB) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 14, 22]
('tags initial-> ', [('xxx', 'IN'), ('the', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (xxx->IN) (the->DT) (popsicle->NN) ')
('tags initial-> ', [('here', 'RB'), ('heather', 'NN')])
('tags -> ', '     (here->RB) (heather->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('here', 'RB')])
('tags -> ', '     (xxx->NN) (here->RB) ')
candidates to check:
1
descended from food: [['N'], 'applesauce', 32, 42]
applesauce
applesauce applesauce 76
[('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('more', 'RBR'), ('um', 'JJ'), ('applesauce', 'NN')]
['applesauce']
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('more', 'RBR'), ('um', 'JJ'), ('applesauce', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (some->DT) (more->RBR) (um->JJ) (applesauce->NN) ')
('tags initial-> ', [('here', 'RB')])
('tags -> ', '     (here->RB) ')
('tags initial-> ', [('good', 'JJ')])
('tags -> ', '     (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('lot', 'NN'), ('more', 'RBR'), ('left', 'JJ')])
('tags -> ', '     (there->RB) (s->VBZ) (a->DT) (lot->NN) (more->RBR) (left->JJ) ')
('tags initial-> ', [('frank', 'NN')])
('tags -> ', '     (frank->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('and', 'CC'), ('pat', 'NN'), ('and', 'CC'), ('brian', 'NN')])
('tags -> ', '     (and->CC) (pat->NN) (and->CC) (brian->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('get', 'VB'), ('dirty', 'JJ'), ('with', 'IN'), ('the', 'DT'), ('fudgesicle', 'NN'), ('anyway', 'RB')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (get->VB) (dirty->JJ) (with->IN) (the->DT) (fudgesicle->NN) (anyway->RB) ')
('tags initial-> ', [('xxx', 'NN'), ('feel', 'VB'), ('it', 'PRP')])
('tags -> ', '     (xxx->NN) (feel->VB) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('leave', 'VB'), ('it', 'PRP'), ('alone', 'RB'), ('emily', 'RB')])
('tags -> ', '     (leave->VB) (it->PRP) (alone->RB) (emily->RB) ')
('tags initial-> ', [('xxx', 'NN'), ('this', 'DT'), ('one', 'CD')])
('tags -> ', '     (xxx->NN) (this->DT) (one->CD) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('all', 'DT'), ('done', 'VBN'), ('eating', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (all->DT) (done->VBN) (eating->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (xxx->NN) (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('off', 'RP')])
('tags -> ', '     (mom->NN) (i->NNS) (have->VBP) (to->TO) (get->VB) (off->RP) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('counter', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (on->IN) (the->DT) (counter->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('get', 'VB'), ('up', 'RP')])
('tags -> ', '     (get->VB) (up->RP) ')
('tags initial-> ', [('get', 'VB'), ('up', 'RP')])
('tags -> ', '     (get->VB) (up->RP) ')
candidates to check:
2
('tags initial-> ', [('go', 'VB'), ('find', 'JJ'), ('clothes', 'NNS'), ('to', 'TO'), ('wear', 'VB')])
('tags -> ', '     (go->VB) (find->JJ) (clothes->NNS) (to->TO) (wear->VB) ')
loading solution set
calculating
set([(1324, (8, 18)), (1218, (18, 24)), (706, (20, 28)), (1534, (32, 42)), (966, (20, 26)), (823, (27, 37)), (523, (27, 37)), (335, (13, 21)), (1334, (6, 16)), (765, (40, 51)), (1203, (6, 10)), (772, (19, 30)), (1508, (18, 23)), (425, (19, 27)), (627, (26, 30)), (691, (24, 39)), (740, (38, 49)), (586, (20, 29)), (783, (21, 25)), (425, (81, 96)), (721, (6, 15)), (1228, (61, 65)), (984, (28, 43)), (700, (19, 27)), (1337, (16, 26)), (759, (21, 32)), (798, (21, 36)), (1074, (43, 52)), (442, (11, 26)), (709, (6, 14)), (527, (32, 41)), (384, (26, 34)), (734, (7, 18)), (359, (25, 34)), (573, (31, 46)), (563, (22, 37)), (969, (17, 23)), (943, (22, 26)), (724, (6, 15)), (836, (16, 24)), (1030, (26, 35)), (1206, (25, 29)), (1311, (11, 23)), (679, (6, 11)), (350, (16, 25)), (1203, (15, 21)), (703, (11, 19)), (257, (6, 12)), (1314, (13, 25)), (329, (29, 37)), (1040, (19, 30)), (1215, (18, 24)), (1499, (10, 19)), (425, (45, 57)), (1149, (6, 13)), (753, (24, 34)), (1525, (14, 22)), (1318, (10, 18)), (1561, (38, 48)), (547, (15, 24)), (1233, (29, 33)), (1209, (20, 26))])
[((257, (6, 12)), '*MOT:\tbutter .\n'), ((329, (29, 37)), '*MOT:\t<do you want> [<] some broccoli ?\n'), ((335, (13, 21)), '*BR3:\tI hate broccoli .\n'), ((350, (16, 25)), '*BR2:\t<any more porkchops> [<] ?\n'), ((359, (25, 34)), '*BR2:\tMom I only got one pork chop .\n'), ((384, (26, 34)), '*MOT:\tdo you want another porkchop ?\n'), ((425, (19, 27)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (45, 57)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (81, 96)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((442, (11, 26)), '*BR2:\t<xxx corn on the cob> [<] ?\n'), ((523, (27, 37)), '*CHI:\tcan I have some more applesauce [>] ?\n'), ((527, (32, 41)), '*MOT:\t<did Heather eat> [<] her porkchops ?\n'), ((547, (15, 24)), '*MOT:\tyou like porkchops ?\n'), ((563, (22, 37)), '*MOT:\toh you want the corn on the cob .\n'), ((573, (31, 46)), "*MOT:\tyou're too little to eat corn on the cob Heather .\n"), ((586, (20, 29)), '*MOT:\tshe wants the porkchops .\n'), ((627, (26, 30)), '*BR2:\tnobody [<] takes my corn Heather .\n'), ((679, (6, 11)), '*BR2:\twater Mommy .\n'), ((691, (24, 39)), '*BR1:\tis there any more corn on the cob ?\n'), ((700, (19, 27)), "*MOT:\tthere's more broccoli .\n"), ((703, (11, 19)), '*MOT:\t<eat broccoli> [>] .\n'), ((706, (20, 28)), "*BR1:\t<I don't want broccoli> [<] .\n"), ((709, (6, 14)), "*MOT:\tbroccoli's good for you .\n"), ((721, (6, 15)), '*MOT:\thoney+dew .\n'), ((724, (6, 15)), '*BR2:\thoney+dew [>] ?\n'), ((734, (7, 18)), '*BR1:\t<fruit salad> [<] ?\n'), ((740, (38, 49)), "*MOT:\tI don't have enough stuff for a fruit salad .\n"), ((753, (24, 34)), '*CHI:\t<I want> [<] more applesauce .\n'), ((759, (21, 32)), '*BR2:\twhat about the Fudgesicles [>] ?\n'), ((765, (40, 51)), '*BR2:\t<you said> [<] we were gonna have Fudgesicles .\n'), ((772, (19, 30)), '*MOT:\tyou can have Fudgesicles too .\n'), ((783, (21, 25)), '*MOT:\t<I have> [<] a corn for you <if you want> [>] .\n'), ((798, (21, 36)), "*MOT:\tyou don't want corn on the cob ?\n"), ((823, (27, 37)), '*CHI:\tcan I have some more applesauce .\n'), ((836, (16, 24)), '*CHI:\tI ate <my broccoli> [>] .\n'), ((943, (22, 26)), '*BR3:\tcan I have some corn ?\n'), ((966, (20, 26)), '*MOT:\tgi(ve) me the butter please .\n'), ((969, (17, 23)), '*CHI:\tI need the butter !\n'), ((984, (28, 43)), "*MOT:\tthere's only one more corn on the cob and three of you guys .\n"), ((1030, (26, 35)), '*BR1:\twhat about (.) &-um honey+dew ?\n'), ((1040, (19, 30)), '*MOT:\tyou have the Fudgesicles .\n'), ((1074, (43, 52)), '*BR1:\tmom <can I have> [/] can I have <the ice cream now> [>] .\n'), ((1149, (6, 13)), '*BR2:\tketchup .\n'), ((1203, (6, 10)), '*BR2:\tsalt and pepper Mom .\n'), ((1203, (15, 21)), '*BR2:\tsalt and pepper Mom .\n'), ((1206, (25, 29)), '*MOT:\tFreddy give me the salt please .\n'), ((1209, (20, 26)), '*CHI:\tMa I need the butter !\n'), ((1215, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1218, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1228, (61, 65)), "*MOT:\tyou're not gon(t)a [: going to] be able to finish this corn .\n"), ((1233, (29, 33)), "*MOT:\twhy don't we save this corn for you for later ?\n"), ((1311, (11, 23)), '*MOT:\thave potato salad .\n'), ((1314, (13, 25)), '*BR1:\tI hate potato salad .\n'), ((1318, (10, 18)), '*MOT:\txxx broccoli .\n'), ((1324, (8, 18)), '*BR2:\ta Fudgesicle !\n'), ((1334, (6, 16)), '*CHI:\tFudgesicle !\n'), ((1337, (16, 26)), '*MOT:\thave more applesauce .\n'), ((1499, (10, 19)), '*MOT:\tone pork chop .\n'), ((1508, (18, 23)), '*CHI:\tI want some water [>] !\n'), ((1525, (14, 22)), '*BR1:\txxx the popsicle .\n'), ((1534, (32, 42)), '*CHI:\tI want some more &-um (.) applesauce .\n'), ((1561, (38, 48)), "*BR2:\tyou're gonna get dirty with the Fudgesicle anyway (.) .\n")]
set([(721, (6, 11)), (1218, (18, 24)), (706, (20, 28)), (1534, (32, 42)), (691, (24, 28)), (966, (20, 26)), (823, (27, 37)), (1030, (26, 31)), (523, (27, 37)), (335, (13, 21)), (724, (6, 11)), (573, (31, 35)), (1162, (6, 13)), (329, (29, 37)), (709, (6, 16)), (442, (11, 15)), (1508, (18, 23)), (425, (19, 27)), (627, (26, 30)), (1203, (6, 10)), (1293, (17, 21)), (740, (38, 49)), (586, (20, 29)), (1363, (49, 53)), (1499, (10, 14)), (783, (21, 25)), (715, (13, 20)), (1228, (61, 65)), (984, (28, 32)), (700, (19, 27)), (1337, (16, 26)), (563, (22, 26)), (1299, (22, 26)), (527, (32, 41)), (384, (26, 34)), (734, (7, 18)), (836, (16, 24)), (969, (17, 23)), (943, (22, 26)), (1209, (20, 26)), (1206, (25, 29)), (1311, (11, 23)), (679, (6, 11)), (350, (16, 25)), (1203, (15, 21)), (798, (21, 25)), (703, (11, 19)), (257, (6, 12)), (1314, (13, 25)), (359, (25, 29)), (1318, (10, 18)), (1215, (18, 24)), (425, (45, 57)), (1074, (43, 52)), (1149, (6, 13)), (753, (24, 34)), (1525, (14, 22)), (425, (81, 85)), (547, (15, 24)), (1233, (29, 33))])
[((257, (6, 12)), '*MOT:\tbutter .\n'), ((329, (29, 37)), '*MOT:\t<do you want> [<] some broccoli ?\n'), ((335, (13, 21)), '*BR3:\tI hate broccoli .\n'), ((350, (16, 25)), '*BR2:\t<any more porkchops> [<] ?\n'), ((359, (25, 29)), '*BR2:\tMom I only got one pork chop .\n'), ((384, (26, 34)), '*MOT:\tdo you want another porkchop ?\n'), ((425, (19, 27)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (45, 57)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (81, 85)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((442, (11, 15)), '*BR2:\t<xxx corn on the cob> [<] ?\n'), ((523, (27, 37)), '*CHI:\tcan I have some more applesauce [>] ?\n'), ((527, (32, 41)), '*MOT:\t<did Heather eat> [<] her porkchops ?\n'), ((547, (15, 24)), '*MOT:\tyou like porkchops ?\n'), ((563, (22, 26)), '*MOT:\toh you want the corn on the cob .\n'), ((573, (31, 35)), "*MOT:\tyou're too little to eat corn on the cob Heather .\n"), ((586, (20, 29)), '*MOT:\tshe wants the porkchops .\n'), ((627, (26, 30)), '*BR2:\tnobody [<] takes my corn Heather .\n'), ((679, (6, 11)), '*BR2:\twater Mommy .\n'), ((691, (24, 28)), '*BR1:\tis there any more corn on the cob ?\n'), ((700, (19, 27)), "*MOT:\tthere's more broccoli .\n"), ((703, (11, 19)), '*MOT:\t<eat broccoli> [>] .\n'), ((706, (20, 28)), "*BR1:\t<I don't want broccoli> [<] .\n"), ((709, (6, 16)), "*MOT:\tbroccoli's good for you .\n"), ((715, (13, 20)), "*BR1:\twhat's dessert ?\n"), ((721, (6, 11)), '*MOT:\thoney+dew .\n'), ((724, (6, 11)), '*BR2:\thoney+dew [>] ?\n'), ((734, (7, 18)), '*BR1:\t<fruit salad> [<] ?\n'), ((740, (38, 49)), "*MOT:\tI don't have enough stuff for a fruit salad .\n"), ((753, (24, 34)), '*CHI:\t<I want> [<] more applesauce .\n'), ((783, (21, 25)), '*MOT:\t<I have> [<] a corn for you <if you want> [>] .\n'), ((798, (21, 25)), "*MOT:\tyou don't want corn on the cob ?\n"), ((823, (27, 37)), '*CHI:\tcan I have some more applesauce .\n'), ((836, (16, 24)), '*CHI:\tI ate <my broccoli> [>] .\n'), ((943, (22, 26)), '*BR3:\tcan I have some corn ?\n'), ((966, (20, 26)), '*MOT:\tgi(ve) me the butter please .\n'), ((969, (17, 23)), '*CHI:\tI need the butter !\n'), ((984, (28, 32)), "*MOT:\tthere's only one more corn on the cob and three of you guys .\n"), ((1030, (26, 31)), '*BR1:\twhat about (.) &-um honey+dew ?\n'), ((1074, (43, 52)), '*BR1:\tmom <can I have> [/] can I have <the ice cream now> [>] .\n'), ((1149, (6, 13)), '*BR2:\tketchup .\n'), ((1162, (6, 13)), '*BR2:\tketchup please Mom .\n'), ((1203, (6, 10)), '*BR2:\tsalt and pepper Mom .\n'), ((1203, (15, 21)), '*BR2:\tsalt and pepper Mom .\n'), ((1206, (25, 29)), '*MOT:\tFreddy give me the salt please .\n'), ((1209, (20, 26)), '*CHI:\tMa I need the butter !\n'), ((1215, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1218, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1228, (61, 65)), "*MOT:\tyou're not gon(t)a [: going to] be able to finish this corn .\n"), ((1233, (29, 33)), "*MOT:\twhy don't we save this corn for you for later ?\n"), ((1293, (17, 21)), '*CHI:\tis she xxx food .\n'), ((1299, (22, 26)), "*CHI:\tshe's taking my food !\n"), ((1311, (11, 23)), '*MOT:\thave potato salad .\n'), ((1314, (13, 25)), '*BR1:\tI hate potato salad .\n'), ((1318, (10, 18)), '*MOT:\txxx broccoli .\n'), ((1337, (16, 26)), '*MOT:\thave more applesauce .\n'), ((1363, (49, 53)), '*MOT:\tkeep [!] your mouth shut [!] when you have food in it .\n'), ((1499, (10, 14)), '*MOT:\tone pork chop .\n'), ((1508, (18, 23)), '*CHI:\tI want some water [>] !\n'), ((1525, (14, 22)), '*BR1:\txxx the popsicle .\n'), ((1534, (32, 42)), '*CHI:\tI want some more &-um (.) applesauce .\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'porkchop', 'porkchops', 'applesauce', 'fruit salad', 'pork chop', 'corn', 'fudgesicle', 'pepper', 'potato salad', 'ketchup', 'water', 'corn on the cob', 'honey+dew', 'fudgesicles', 'salt', 'broccoli', 'ice cream', 'popsicle'])
predicted labels:
set(['butter', 'honey', 'pork', 'porkchops', 'popsicle', 'fruit salad', 'food', 'dessert', 'corn', 'porkchop', 'potato salad', 'ketchup', 'water', "broccoli's", 'applesauce', 'pepper', 'salt', 'broccoli', 'ice cream'])
file:HSLLD/HV1/MT//emimt1.cha
precision: 0.736842105263
recall: 0.736842105263
true positives:['applesauce', 'broccoli', 'butter', 'corn', 'fruit salad', 'ice cream', 'ketchup', 'pepper', 'popsicle', 'porkchop', 'porkchops', 'potato salad', 'salt', 'water']
false positives: ["broccoli's", 'dessert', 'food', 'honey', 'pork']
false negatives: ['corn on the cob', 'fudgesicle', 'fudgesicles', 'honey+dew', 'pork chop']
# true pos: 14
# false pos: 5
# false neg: 5
HSLLD/HV1/MT//tammt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//tammt1.cha
HSLLD/HV1/MT//kevmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//kevmt1.cha
HSLLD/HV1/MT//jenmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jenmt1.cha
HSLLD/HV1/MT//karmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//karmt1.cha
HSLLD/HV1/MT//jacmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('sergeant', 'JJ'), ('lee', 'NN'), ('seymore', 'NN')])
('tags -> ', '     (sergeant->JJ) (lee->NN) (seymore->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN'), ('thing', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) (thing->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'IN'), ('thing', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (that->IN) (thing->NN) ')
candidates to check:
1
('tags initial-> ', [('that', 'IN'), ('that', 'DT'), ('thing', 'NN')])
('tags -> ', '     (that->IN) (that->DT) (thing->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('rewinding', 'VBG'), ('it', 'PRP')])
('tags -> ', '     (i->JJ) (m->VBP) (rewinding->VBG) (it->PRP) ')
candidates to check:
1
duck
duck duck 84
[('and', 'CC'), ('the', 'DT'), ('howard', 'NN'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('howard', 'NN'), ('the', 'DT'), ('duck', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (howard->NN) (the->DT) (duck->NN) ')
('tags initial-> ', [('just', 'RB'), ('finish', 'JJ'), ('eating', 'VBG'), ('okay', 'NN')])
('tags -> ', '     (just->RB) (finish->JJ) (eating->VBG) (okay->NN) ')
candidates to check:
3
duck
duck duck 84
[('was', 'VBD'), ('that', 'IN'), ('the', 'DT'), ('howard', 'NN'), ('the', 'DT'), ('duck', 'NN'), ('tape', 'NN')]
['duck']
('tags initial-> ', [('was', 'VBD'), ('that', 'IN'), ('the', 'DT'), ('howard', 'NN'), ('the', 'DT'), ('duck', 'NN'), ('tape', 'NN')])
('tags -> ', '     (was->VBD) (that->IN) (the->DT) (howard->NN) (the->DT) (duck->NN) (tape->NN) ')
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB')])
('tags -> ', '     (no->DT) (it->PRP) (s->VBZ) (not->RB) ')
candidates to check:
3
('tags initial-> ', [('so', 'RB'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (so->RB) (what->WP) (did->VBD) (you->PRP) (do->VB) (in->IN) (school->NN) (today->NN) ')
candidates to check:
4
('tags initial-> ', [('mama', 'NN'), ('first', 'RB'), ('we', 'PRP'), ('did', 'VBD'), ('the', 'DT'), ('papers', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('other', 'JJ'), ('room', 'NN'), ('and', 'CC'), ('then', 'RB'), ('we', 'PRP'), ('played', 'VBD')])
('tags -> ', '     (mama->NN) (first->RB) (we->PRP) (did->VBD) (the->DT) (papers->NNS) (in->IN) (the->DT) (other->JJ) (room->NN) (and->CC) (then->RB) (we->PRP) (played->VBD) ')
('tags initial-> ', [('i', 'NN')])
('tags -> ', '     (i->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('then', 'RB'), ('we', 'PRP'), ('we', 'PRP'), ('made', 'VBD'), ('a', 'DT'), ('funky', 'JJ'), ('monkey', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (then->RB) (we->PRP) (we->PRP) (made->VBD) (a->DT) (funky->JJ) (monkey->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('made', 'VBD'), ('a', 'DT'), ('funky', 'JJ'), ('monkey', 'NN')])
('tags -> ', '     (you->PRP) (made->VBD) (a->DT) (funky->JJ) (monkey->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'IN'), ('the', 'DT'), ('monkey', 'NN'), ('that', 'IN'), ('you', 'PRP'), ('made', 'VBD'), ('huh', 'NNS')])
('tags -> ', '     (oh->IN) (the->DT) (monkey->NN) (that->IN) (you->PRP) (made->VBD) (huh->NNS) ')
candidates to check:
2
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('a', 'DT'), ('cute', 'NN'), ('monkey', 'NN')])
('tags -> ', '     (that->DT) (s->VBD) (a->DT) (cute->NN) (monkey->NN) ')
('tags initial-> ', [('where', 'WRB'), ('is', 'VBZ'), ('it', 'PRP'), ('anyway', 'RB')])
('tags -> ', '     (where->WRB) (is->VBZ) (it->PRP) (anyway->RB) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('left', 'VBD'), ('it', 'PRP'), ('in', 'IN'), ('roy', 'NN'), ('s', 'NN'), ('by', 'IN'), ('m', 'NN'), ('by', 'IN'), ('accident', 'NN'), ('when', 'WRB'), ('we', 'PRP'), ('were', 'VBD'), ('there', 'EX')])
('tags -> ', '     (i->JJ) (think->VBP) (we->PRP) (left->VBD) (it->PRP) (in->IN) (roy->NN) (s->NN) (by->IN) (m->NN) (by->IN) (accident->NN) (when->WRB) (we->PRP) (were->VBD) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('uh', 'JJ'), ('mommy', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('under', 'IN'), ('it', 'PRP'), ('it', 'PRP'), ('s', 'VBD'), ('under', 'IN'), ('your', 'PRP$'), ('coat', 'NN')])
('tags -> ', '     (uh->JJ) (mommy->NN) (it->PRP) (s->VBZ) (under->IN) (it->PRP) (it->PRP) (s->VBD) (under->IN) (your->PRP$) (coat->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('i', 'NN'), ('know', 'VBP'), ('but', 'CC'), ('i', 'VBP'), ('think', 'VBP'), ('i', 'NN'), ('left', 'VBD'), ('it', 'PRP'), ('at', 'IN'), ('the', 'DT'), ('store', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (i->NN) (know->VBP) (but->CC) (i->VBP) (think->VBP) (i->NN) (left->VBD) (it->PRP) (at->IN) (the->DT) (store->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('it', 'PRP'), ('tomorrow', 'NN'), ('be', 'VB'), ('cause', 'VBN'), ('roy', 'JJ'), ('s', 'NN'), ('is', 'VBZ'), ('closed', 'VBN'), ('now', 'RB')])
('tags -> ', '     (we->PRP) (ll->VBP) (have->VBP) (to->TO) (get->VB) (it->PRP) (tomorrow->NN) (be->VB) (cause->VBN) (roy->JJ) (s->NN) (is->VBZ) (closed->VBN) (now->RB) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('i', 'NN'), ('left', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('counter', 'NN'), ('by', 'IN'), ('accident', 'NN')])
('tags -> ', '     (i->JJ) (think->VBP) (i->NN) (left->VBD) (it->PRP) (on->IN) (the->DT) (counter->NN) (by->IN) (accident->NN) ')
('tags initial-> ', [('m', 'NN'), ('aybe', 'RB'), ('maybe', 'RB'), ('they', 'PRP'), ('already', 'RB'), ('threw', 'VBD'), ('it', 'PRP'), ('away', 'RP')])
('tags -> ', '     (m->NN) (aybe->RB) (maybe->RB) (they->PRP) (already->RB) (threw->VBD) (it->PRP) (away->RP) ')
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('so', 'RB')])
('tags -> ', '     (no->DT) (i->JJ) (don->VBP) (t->JJ) (think->VBP) (so->RB) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('sure', 'JJ'), ('they', 'PRP'), ('ll', 'VBP'), ('save', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('give', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('us', 'PRP'), ('tomorrow', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (sure->JJ) (they->PRP) (ll->VBP) (save->VB) (it->PRP) (and->CC) (give->VB) (it->PRP) (to->TO) (us->PRP) (tomorrow->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('jeff', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('a', 'DT'), ('beautiful', 'JJ'), ('monkey', 'NN')])
('tags -> ', '     (jeff->NN) (that->WDT) (was->VBD) (a->DT) (beautiful->JJ) (monkey->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('hang', 'VB'), ('him', 'PRP'), ('up', 'RP'), ('on', 'IN'), ('the', 'DT'), ('wall', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) (hang->VB) (him->PRP) (up->RP) (on->IN) (the->DT) (wall->NN) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('need', 'VBP'), ('some', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (we->PRP) (need->VBP) (some->DT) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('m', 'NN'), ('ommy', 'MD'), ('mommy', 'VB'), ('you', 'PRP'), ('had', 'VBD'), ('to', 'TO'), ('have', 'VB'), ('it', 'PRP'), ('stapled', 'VBD')])
('tags -> ', '     (m->NN) (ommy->MD) (mommy->VB) (you->PRP) (had->VBD) (to->TO) (have->VB) (it->PRP) (stapled->VBD) ')
('tags initial-> ', [('okay', 'RB'), ('well', 'RB'), ('i', 'VB'), ('ll', 'JJR'), ('get', 'VB'), ('it', 'PRP'), ('stapled', 'VBD')])
('tags -> ', '     (okay->RB) (well->RB) (i->VB) (ll->JJR) (get->VB) (it->PRP) (stapled->VBD) ')
candidates to check:
1
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('hang', 'VB'), ('it', 'PRP'), ('up', 'RP'), ('with', 'IN'), ('tape', 'NN')])
('tags -> ', '     (we->PRP) (can->MD) (hang->VB) (it->PRP) (up->RP) (with->IN) (tape->NN) ')
candidates to check:
3
('tags initial-> ', [('put', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN'), ('door', 'NN')])
('tags -> ', '     (put->VB) (it->PRP) (on->IN) (the->DT) (bath->NN) (room->NN) (door->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('on', 'IN'), ('the', 'DT'), ('ceiling', 'NN')])
('tags -> ', '     (no->DT) (on->IN) (the->DT) (ceiling->NN) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('ceiling', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (ceiling->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('why', 'WRB'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('to', 'TO'), ('put', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('ceiling', 'NN')])
('tags -> ', '     (why->WRB) (do->VBP) (you->PRP) (want->VB) (to->TO) (put->VB) (it->PRP) (on->IN) (the->DT) (ceiling->NN) ')
('tags initial-> ', [('because', 'IN'), ('i', 'NN'), ('so', 'RB'), ('i', 'JJ'), ('can', 'MD'), ('see', 'VB'), ('up', 'RP'), ('there', 'RB')])
('tags -> ', '     (because->IN) (i->NN) (so->RB) (i->JJ) (can->MD) (see->VB) (up->RP) (there->RB) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('do', 'VB'), ('a', 'DT'), ('dance', 'NN'), ('and', 'CC'), ('see', 'VB'), ('if', 'IN'), ('it', 'PRP'), ('s', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('ceiling', 'NN')])
('tags -> ', '     (i->NN) (can->MD) (do->VB) (a->DT) (dance->NN) (and->CC) (see->VB) (if->IN) (it->PRP) (s->VBZ) (on->IN) (the->DT) (ceiling->NN) ')
('tags initial-> ', [('oh', 'UH'), ('yeah', 'NN')])
('tags -> ', '     (oh->UH) (yeah->NN) ')
('tags initial-> ', [('jeffrey', 'NNS'), ('it', 'PRP'), ('might', 'MD'), ('fall', 'VB'), ('off', 'RP')])
('tags -> ', '     (jeffrey->NNS) (it->PRP) (might->MD) (fall->VB) (off->RP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('come', 'VBN'), ('on', 'IN'), ('eat', 'NN')])
('tags -> ', '     (come->VBN) (on->IN) (eat->NN) ')
candidates to check:
1
duck
duck duck 84
[('where', 'WRB'), ('is', 'VBZ'), ('howard', 'PDT'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('tags initial-> ', [('where', 'WRB'), ('is', 'VBZ'), ('howard', 'PDT'), ('the', 'DT'), ('duck', 'NN')])
('tags -> ', '     (where->WRB) (is->VBZ) (howard->PDT) (the->DT) (duck->NN) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('worry', 'NN'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('eating', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (worry->NN) (when->WRB) (you->PRP) (re->VBP) (done->VBN) (eating->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('color', 'NN'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (color->NN) (in->IN) (school->NN) (today->NN) ')
('tags initial-> ', [('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (i->NN) (did->VBD) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('jeff', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (jeff->VB) ')
('tags initial-> ', [('what', 'WP'), ('cha', 'NN'), ('you', 'PRP'), ('do', 'VBP')])
('tags -> ', '     (what->WP) (cha->NN) (you->PRP) (do->VBP) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('do', 'VBP'), ('anything', 'NN'), ('at', 'IN'), ('all', 'DT')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->JJ) (do->VBP) (anything->NN) (at->IN) (all->DT) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('we', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (what->WP) (we->PRP) (did->VBD) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('read', 'VB'), ('today', 'NN'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (read->VB) (today->NN) (in->IN) (school->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('rhonda', 'VB'), ('read', 'VB'), ('a', 'DT'), ('book', 'NN'), ('to', 'TO'), ('you', 'PRP')])
('tags -> ', '     (did->VBD) (rhonda->VB) (read->VB) (a->DT) (book->NN) (to->TO) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN'), ('i', 'NN')])
('tags -> ', '     (mom->NN) (i->NN) ')
candidates to check:
2
('tags initial-> ', [('was', 'VBD'), ('not', 'RB'), ('in', 'IN'), ('school', 'NN'), ('today', 'NN')])
('tags -> ', '     (was->VBD) (not->RB) (in->IN) (school->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
('tags initial-> ', [('um', 'NN')])
('tags -> ', '     (um->NN) ')
('tags initial-> ', [('well', 'RB'), ('where', 'WRB'), ('were', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (well->RB) (where->WRB) (were->VBD) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('at', 'IN'), ('school', 'NN')])
('tags -> ', '     (at->IN) (school->NN) ')
candidates to check:
1
('tags initial-> ', [('well', 'RB'), ('you', 'PRP'), ('just', 'RB'), ('said', 'VBD'), ('you', 'PRP'), ('weren', 'VBP'), ('t', 'NNS'), ('in', 'IN'), ('school', 'NN')])
('tags -> ', '     (well->RB) (you->PRP) (just->RB) (said->VBD) (you->PRP) (weren->VBP) (t->NNS) (in->IN) (school->NN) ')
('tags initial-> ', [('where', 'WRB'), ('were', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (where->WRB) (were->VBD) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('was', 'VBD'), ('at', 'IN'), ('school', 'NN')])
('tags -> ', '     (i->NN) (was->VBD) (at->IN) (school->NN) ')
('tags initial-> ', [('oh', 'UH'), ('okay', 'NN')])
('tags -> ', '     (oh->UH) (okay->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('paint', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (paint->VB) ')
candidates to check:
1
('tags initial-> ', [('not', 'RB'), ('today', 'NN'), ('maggie', 'NNP'), ('said', 'VBD'), ('no', 'DT')])
('tags -> ', '     (not->RB) (today->NN) (maggie->NNP) (said->VBD) (no->DT) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('ll', 'VBP'), ('tomorrow', 'NN'), ('ask', 'NN'), ('maggie', 'NN'), ('to', 'TO'), ('paint', 'VB')])
('tags -> ', '     (i->NN) (ll->VBP) (tomorrow->NN) (ask->NN) (maggie->NN) (to->TO) (paint->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
3
descended from food: [['N'], 'dessert', 35, 42]
('tags initial-> ', [('want', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('make', 'VB'), ('brownies', 'NNS'), ('for', 'IN'), ('dessert', 'NN')])
('tags -> ', '     (want->VB) (me->PRP) (to->TO) (make->VB) (brownies->NNS) (for->IN) (dessert->NN) ')
('tags initial-> ', [('yippee', 'NN')])
('tags -> ', '     (yippee->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('goodie', 'NN')])
('tags -> ', '     (yeah->NN) (goodie->NN) ')
candidates to check:
1
descended from food: [['N'], 'spaghetti', 34, 43]
spaghetti
spaghetti spaghetti 100
[('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('all', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('spaghetti', 'NNS')]
['spaghetti']
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('all', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('spaghetti', 'NNS')])
('tags -> ', '     (did->VBD) (you->PRP) (eat->VB) (all->DT) (of->IN) (your->PRP$) (spaghetti->NNS) ')
('tags initial-> ', [('yummy', 'NN')])
('tags -> ', '     (yummy->NN) ')
('tags initial-> ', [('yummy', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('cocky', 'JJ'), ('c', 'NN')])
('tags -> ', '     (yummy->NN) (in->IN) (my->PRP$) (cocky->JJ) (c->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('almost', 'RB'), ('done', 'VBN')])
('tags -> ', '     (i->NN) (m->VBP) (almost->RB) (done->VBN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('nice', 'JJ')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (nice->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('that', 'DT'), ('talk', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (that->DT) (talk->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('that', 'DT'), ('was', 'VBD'), ('nonsense', 'JJ')])
('tags -> ', '     (well->RB) (that->DT) (was->VBD) (nonsense->JJ) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('that', 'DT')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (like->IN) (that->DT) ')
candidates to check:
1
('tags initial-> ', [('that', 'DT'), ('is', 'VBZ'), ('nonsense', 'JJ')])
('tags -> ', '     (that->DT) (is->VBZ) (nonsense->JJ) ')
candidates to check:
1
('tags initial-> ', [('ma', 'NN'), ('look', 'NN'), ('it', 'PRP')])
('tags -> ', '     (ma->NN) (look->NN) (it->PRP) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('happened', 'VBD'), ('to', 'TO'), ('your', 'PRP$'), ('book', 'NN'), ('where', 'WRB'), ('the', 'DT'), ('wild', 'JJ'), ('things', 'NNS'), ('are', 'VBP')])
('tags -> ', '     (what->WP) (happened->VBD) (to->TO) (your->PRP$) (book->NN) (where->WRB) (the->DT) (wild->JJ) (things->NNS) (are->VBP) ')
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('ripped', 'VBD'), ('up', 'RP')])
('tags -> ', '     (it->PRP) (s->VBZ) (all->DT) (ripped->VBD) (up->RP) ')
('tags initial-> ', [('who', 'WP'), ('ripped', 'VBD'), ('it', 'PRP')])
('tags -> ', '     (who->WP) (ripped->VBD) (it->PRP) ')
('tags initial-> ', [('jeffrey', 'NN')])
('tags -> ', '     (jeffrey->NN) ')
candidates to check:
1
('tags initial-> ', [('jeffrey', 'NN'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('take', 'VB'), ('all', 'PDT'), ('the', 'DT'), ('books', 'NNS'), ('out', 'IN'), ('of', 'IN'), ('there', 'EX'), ('if', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('goin', 'JJ'), ('g', 'NN'), ('t', 'VBD'), ('a', 'DT'), ('rip', 'NN'), ('them', 'PRP')])
('tags -> ', '     (jeffrey->NN) (i->JJ) (m->NN) (gon->NN) (na->TO) (take->VB) (all->PDT) (the->DT) (books->NNS) (out->IN) (of->IN) (there->EX) (if->IN) (you->PRP) (re->VBP) (goin->JJ) (g->NN) (t->VBD) (a->DT) (rip->NN) (them->PRP) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('i', 'NN'), ('may', 'MD'), ('just', 'RB'), ('have', 'VB'), ('to', 'TO'), ('put', 'VB'), ('them', 'PRP'), ('all', 'DT'), ('up', 'RP')])
('tags -> ', '     (i->NN) (may->MD) (just->RB) (have->VB) (to->TO) (put->VB) (them->PRP) (all->DT) (up->RP) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('they', 'PRP'), ('re', 'VBP'), ('getting', 'VBG'), ('ripped', 'VBD'), ('up', 'RP')])
('tags -> ', '     (be->VB) (cause->NN) (they->PRP) (re->VBP) (getting->VBG) (ripped->VBD) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN')])
('tags -> ', '     (mama->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('book', 'NN')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NNS) (have->VBP) (a->DT) (book->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('all', 'PDT'), ('the', 'DT'), ('books', 'NNS'), ('in', 'IN'), ('there', 'EX'), ('that', 'IN'), ('you', 'PRP'), ('ripped', 'VBD'), ('up', 'RP')])
('tags -> ', '     (what->WP) (about->IN) (all->PDT) (the->DT) (books->NNS) (in->IN) (there->EX) (that->IN) (you->PRP) (ripped->VBD) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('he', 'PRP'), ('ripped', 'VBD'), ('up', 'RP'), ('my', 'PRP$')])
('tags -> ', '     (he->PRP) (ripped->VBD) (up->RP) (my->PRP$) ')
candidates to check:
4
('tags initial-> ', [('did', 'VBD'), ('cha', 'VB'), ('you', 'PRP'), ('know', 'VBP'), ('paul', 'VB'), ('paid', 'VBN'), ('a', 'DT'), ('lot', 'NN'), ('of', 'IN'), ('money', 'NN'), ('for', 'IN'), ('those', 'DT'), ('doctor', 'NN'), ('seuss', 'VBP'), ('books', 'NNS'), ('and', 'CC'), ('you', 'PRP'), ('ripped', 'VBP'), ('in', 'IN'), ('them', 'PRP'), ('and', 'CC'), ('scribbled', 'VBN'), ('in', 'IN'), ('them', 'PRP')])
('tags -> ', '     (did->VBD) (cha->VB) (you->PRP) (know->VBP) (paul->VB) (paid->VBN) (a->DT) (lot->NN) (of->IN) (money->NN) (for->IN) (those->DT) (doctor->NN) (seuss->VBP) (books->NNS) (and->CC) (you->PRP) (ripped->VBP) (in->IN) (them->PRP) (and->CC) (scribbled->VBN) (in->IN) (them->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('going', 'VBG'), ('to', 'TO'), ('buy', 'VB'), ('you', 'PRP'), ('any', 'DT'), ('more', 'JJR')])
('tags -> ', '     (he->PRP) (s->VBZ) (not->RB) (going->VBG) (to->TO) (buy->VB) (you->PRP) (any->DT) (more->JJR) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('well', 'RB'), ('then', 'RB'), ('d', 'VB'), ('o', 'IN'), ('you', 'PRP'), ('promise', 'VBP'), ('me', 'PRP'), ('you', 'PRP'), ('willn', 'VBP'), ('t', 'JJ'), ('rip', 'VB'), ('them', 'PRP'), ('anymore', 'RB')])
('tags -> ', '     (well->RB) (then->RB) (d->VB) (o->IN) (you->PRP) (promise->VBP) (me->PRP) (you->PRP) (willn->VBP) (t->JJ) (rip->VB) (them->PRP) (anymore->RB) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
3
('tags initial-> ', [('next', 'JJ'), ('time', 'NN'), ('one', 'CD'), ('of', 'IN'), ('those', 'DT'), ('books', 'NNS'), ('gets', 'VBZ'), ('ripped', 'VBD'), ('chi', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('put', 'VB'), ('them', 'PRP'), ('all', 'DT'), ('up', 'RP')])
('tags -> ', '     (next->JJ) (time->NN) (one->CD) (of->IN) (those->DT) (books->NNS) (gets->VBZ) (ripped->VBD) (chi->NN) (i->NN) (m->VBP) (gon->NN) (na->NNS) (have->VBP) (to->TO) (put->VB) (them->PRP) (all->DT) (up->RP) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
candidates to check:
2
('tags initial-> ', [('right', 'JJ'), ('mama', 'NN')])
('tags -> ', '     (right->JJ) (mama->NN) ')
('tags initial-> ', [('yep', 'NN')])
('tags -> ', '     (yep->NN) ')
candidates to check:
5
('tags initial-> ', [('tomorrow', 'NN'), ('is', 'VBZ'), ('show', 'JJ'), ('and', 'CC'), ('tell', 'VB'), ('bro', 'NN')])
('tags -> ', '     (tomorrow->NN) (is->VBZ) (show->JJ) (and->CC) (tell->VB) (bro->NN) ')
('tags initial-> ', [('i', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->NN) (know->VBP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('the', 'DT'), ('bus', 'NN'), ('driver', 'NN'), ('told', 'VBD'), ('me', 'PRP'), ('that', 'IN')])
('tags -> ', '     (the->DT) (bus->NN) (driver->NN) (told->VBD) (me->PRP) (that->IN) ')
candidates to check:
2
('tags initial-> ', [('the', 'DT'), ('other', 'JJ'), ('day', 'NN')])
('tags -> ', '     (the->DT) (other->JJ) (day->NN) ')
candidates to check:
2
('tags initial-> ', [('mama', 'NN'), ('my', 'PRP$'), ('teacher', 'NN'), ('said', 'VBD'), ('no', 'DT')])
('tags -> ', '     (mama->NN) (my->PRP$) (teacher->NN) (said->VBD) (no->DT) ')
candidates to check:
1
('tags initial-> ', [('your', 'PRP$'), ('teacher', 'NN'), ('said', 'VBD'), ('no', 'DT')])
('tags -> ', '     (your->PRP$) (teacher->NN) (said->VBD) (no->DT) ')
candidates to check:
5
('tags initial-> ', [('she', 'PRP'), ('said', 'VBD'), ('sh', 'NN'), ('e', 'NN'), ('she', 'PRP'), ('said', 'VBD'), ('show', 'NN'), ('and', 'CC'), ('tell', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('bus', 'NN'), ('man', 'NN'), ('says', 'VBZ'), ('friday', 'NN')])
('tags -> ', '     (she->PRP) (said->VBD) (sh->NN) (e->NN) (she->PRP) (said->VBD) (show->NN) (and->CC) (tell->NN) (was->VBD) (the->DT) (bus->NN) (man->NN) (says->VBZ) (friday->NN) ')
('tags initial-> ', [('friday', 'NN')])
('tags -> ', '     (friday->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('who', 'WP'), ('said', 'VBD'), ('that', 'IN'), ('joe', 'NN')])
('tags -> ', '     (who->WP) (said->VBD) (that->IN) (joe->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('no', 'DT'), ('tony', 'NN')])
('tags -> ', '     (no->DT) (tony->NN) ')
('tags initial-> ', [('tony', 'NN')])
('tags -> ', '     (tony->NN) ')
('tags initial-> ', [('right', 'RB'), ('chi', 'NN'), ('tony', 'NN')])
('tags -> ', '     (right->RB) (chi->NN) (tony->NN) ')
candidates to check:
2
('tags initial-> ', [('mama', 'NN'), ('tony', 'NN'), ('s', 'VBD'), ('the', 'DT'), ('b', 'NN'), ('us', 'PRP')])
('tags -> ', '     (mama->NN) (tony->NN) (s->VBD) (the->DT) (b->NN) (us->PRP) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('thought', 'VBD'), ('joe', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('the', 'DT'), ('bus', 'NN'), ('driver', 'NN'), ('s', 'NN'), ('name', 'NN')])
('tags -> ', '     (i->NN) (thought->VBD) (joe->NN) (was->VBD) (the->DT) (the->DT) (bus->NN) (driver->NN) (s->NN) (name->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
3
('tags initial-> ', [('um', 'IN'), ('the', 'DT'), ('different', 'JJ'), ('bus', 'NN'), ('driver', 'NN')])
('tags -> ', '     (um->IN) (the->DT) (different->JJ) (bus->NN) (driver->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('say', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (say->VB) ')
candidates to check:
1
('tags initial-> ', [('but', 'CC'), ('tony', 'JJ'), ('s', 'VBD'), ('the', 'DT'), ('bus', 'NN'), ('driving', 'NN'), ('joe', 'NN')])
('tags -> ', '     (but->CC) (tony->JJ) (s->VBD) (the->DT) (bus->NN) (driving->NN) (joe->NN) ')
('tags initial-> ', [('excuse', 'IN'), ('me', 'PRP')])
('tags -> ', '     (excuse->IN) (me->PRP) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('both', 'DT'), ('of', 'IN'), ('them', 'PRP'), ('are', 'VBP')])
('tags -> ', '     (both->DT) (of->IN) (them->PRP) (are->VBP) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('drink', 'VB'), ('all', 'DT'), ('your', 'PRP$'), ('drink', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (drink->VB) (all->DT) (your->PRP$) (drink->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('done', 'VBN')])
('tags -> ', '     (are->VBP) (you->PRP) (done->VBN) ')
('tags initial-> ', [('there', 'RB'), ('s', 'RB'), ('yellow', 'VB')])
('tags -> ', '     (there->RB) (s->RB) (yellow->VB) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('mean', 'VBP'), ('red', 'JJ'), ('yellow', 'NN'), ('green', 'NN'), ('blue', 'NN')])
('tags -> ', '     (i->JJ) (mean->VBP) (red->JJ) (yellow->NN) (green->NN) (blue->NN) ')
('tags initial-> ', [('right', 'NN')])
('tags -> ', '     (right->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('color', 'NN'), ('s', 'NN'), ('that', 'WDT'), ('jeff', 'NN')])
('tags -> ', '     (what->WP) (color->NN) (s->NN) (that->WDT) (jeff->NN) ')
('tags initial-> ', [('blue', 'NN')])
('tags -> ', '     (blue->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('color', 'NN'), ('is', 'VBZ'), ('that', 'IN')])
('tags -> ', '     (what->WP) (color->NN) (is->VBZ) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('was', 'VBD'), ('rhonda', 'NN'), ('in', 'IN'), ('today', 'NN'), ('jeff', 'NN')])
('tags -> ', '     (so->RB) (was->VBD) (rhonda->NN) (in->IN) (today->NN) (jeff->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('sick', 'JJ')])
('tags -> ', '     (she->PRP) (s->VBD) (sick->JJ) ')
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('sick', 'JJ')])
('tags -> ', '     (she->PRP) (s->VBD) (sick->JJ) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('wrong', 'JJ'), ('with', 'IN'), ('her', 'PRP$')])
('tags -> ', '     (what->WP) (s->VBD) (wrong->JJ) (with->IN) (her->PRP$) ')
('tags initial-> ', [('she', 'PRP'), ('she', 'PRP'), ('her', 'PRP$'), ('back', 'NN'), ('was', 'VBD'), ('hurting', 'VBG'), ('her', 'PRP$')])
('tags -> ', '     (she->PRP) (she->PRP) (her->PRP$) (back->NN) (was->VBD) (hurting->VBG) (her->PRP$) ')
('tags initial-> ', [('her', 'PRP$'), ('back', 'NN'), ('was', 'VBD'), ('hurting', 'VBG'), ('her', 'PRP$')])
('tags -> ', '     (her->PRP$) (back->NN) (was->VBD) (hurting->VBG) (her->PRP$) ')
('tags initial-> ', [('like', 'IN'), ('ronnie', 'NN'), ('s', 'NN')])
('tags -> ', '     (like->IN) (ronnie->NN) (s->NN) ')
('tags initial-> ', [('like', 'IN'), ('ronnie', 'NN'), ('s', 'NN')])
('tags -> ', '     (like->IN) (ronnie->NN) (s->NN) ')
('tags initial-> ', [('why', 'WRB'), ('what', 'WP'), ('happened', 'VBD'), ('to', 'TO'), ('ronnie', 'VB')])
('tags -> ', '     (why->WRB) (what->WP) (happened->VBD) (to->TO) (ronnie->VB) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('cat', 'NN'), ('opened', 'VBD'), ('her', 'PRP'), ('back', 'RP')])
('tags -> ', '     (a->DT) (cat->NN) (opened->VBD) (her->PRP) (back->RP) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('cat', 'NN'), ('opened', 'VBD'), ('her', 'PRP'), ('back', 'RP')])
('tags -> ', '     (a->DT) (cat->NN) (opened->VBD) (her->PRP) (back->RP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('she', 'PRP'), ('had', 'VBD'), ('a', 'DT'), ('cat', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (she->PRP) (had->VBD) (a->DT) (cat->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('y', 'NN'), ('ou', 'MD'), ('y', 'VB'), ('ou', 'IN'), ('you', 'PRP'), ('mean', 'VBP'), ('broke', 'VBD'), ('him', 'PRP'), ('in', 'IN'), ('half', 'NN')])
('tags -> ', '     (y->NN) (ou->MD) (y->VB) (ou->IN) (you->PRP) (mean->VBP) (broke->VBD) (him->PRP) (in->IN) (half->NN) ')
candidates to check:
2
('tags initial-> ', [('just', 'RB'), ('a', 'DT'), ('little', 'JJ'), ('bit', 'NN')])
('tags -> ', '     (just->RB) (a->DT) (little->JJ) (bit->NN) ')
candidates to check:
3
('tags initial-> ', [('so', 'RB'), ('did', 'VBD'), ('everyone', 'NN'), ('like', 'IN'), ('your', 'PRP$'), ('hair', 'NN'), ('cut', 'NN')])
('tags -> ', '     (so->RB) (did->VBD) (everyone->NN) (like->IN) (your->PRP$) (hair->NN) (cut->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('girl', 'NN'), ('kissed', 'VBD'), ('me', 'PRP')])
('tags -> ', '     (no->DT) (girl->NN) (kissed->VBD) (me->PRP) ')
('tags initial-> ', [('who', 'WP'), ('did', 'VBD')])
('tags -> ', '     (who->WP) (did->VBD) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('girls', 'NNS')])
('tags -> ', '     (no->DT) (girls->NNS) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('girls', 'NNS'), ('kissed', 'VBD'), ('you', 'PRP')])
('tags -> ', '     (no->DT) (girls->NNS) (kissed->VBD) (you->PRP) ')
('tags initial-> ', [('uh', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('care', 'NN')])
('tags -> ', '     (uh->NN) (i->NN) (don->VBP) (t->NN) (care->NN) ')
('tags initial-> ', [('why', 'WRB'), ('are', 'VBP'), ('they', 'PRP'), ('supposed', 'VBD'), ('to', 'TO'), ('kiss', 'VB'), ('you', 'PRP')])
('tags -> ', '     (why->WRB) (are->VBP) (they->PRP) (supposed->VBD) (to->TO) (kiss->VB) (you->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('ma', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR')])
('tags -> ', '     (ma->NN) (can->MD) (i->VB) (have->VB) (some->DT) (more->JJR) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('any', 'DT'), ('girls', 'NNS'), ('kiss', 'VBP'), ('you', 'PRP'), ('eddie', 'VBP')])
('tags -> ', '     (did->VBD) (any->DT) (girls->NNS) (kiss->VBP) (you->PRP) (eddie->VBP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('who', 'WP')])
('tags -> ', '     (who->WP) ')
('tags initial-> ', [('oh', 'UH'), ('lisa', 'NN')])
('tags -> ', '     (oh->UH) (lisa->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('why', 'WRB'), ('she', 'PRP'), ('thinks', 'VBZ'), ('you', 'PRP'), ('look', 'VBP'), ('handsome', 'JJ')])
('tags -> ', '     (why->WRB) (she->PRP) (thinks->VBZ) (you->PRP) (look->VBP) (handsome->JJ) ')
('tags initial-> ', [('you', 'PRP'), ('are', 'VBP'), ('handsome', 'JJ')])
('tags -> ', '     (you->PRP) (are->VBP) (handsome->JJ) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR')])
('tags -> ', '     (mama->NN) (can->MD) (i->VB) (have->VB) (some->DT) (more->JJR) ')
('tags initial-> ', [('there', 'EX'), ('it', 'PRP'), ('s', 'VBD'), ('all', 'DT'), ('gone', 'VBN')])
('tags -> ', '     (there->EX) (it->PRP) (s->VBD) (all->DT) (gone->VBN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('make', 'VB'), ('some', 'DT'), ('brownies', 'NNS'), ('anyway', 'VBP')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (make->VB) (some->DT) (brownies->NNS) (anyway->VBP) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('brownies', 'NNS')])
('tags -> ', '     (don->NN) (t->NN) (you->PRP) (want->VBP) (some->DT) (brownies->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('okay', 'IN'), ('you', 'PRP'), ('guys', 'VBP'), ('done', 'VBN')])
('tags -> ', '     (okay->IN) (you->PRP) (guys->VBP) (done->VBN) ')
candidates to check:
2
('tags initial-> ', [('put', 'VB'), ('your', 'PRP$'), ('bowls', 'NN'), ('in', 'IN'), ('the', 'DT'), ('sink', 'NN')])
('tags -> ', '     (put->VB) (your->PRP$) (bowls->NN) (in->IN) (the->DT) (sink->NN) ')
candidates to check:
3
('tags initial-> ', [('mama', 'NN'), ('put', 'VBD'), ('candles', 'NNS'), ('in', 'IN'), ('them', 'PRP')])
('tags -> ', '     (mama->NN) (put->VBD) (candles->NNS) (in->IN) (them->PRP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('put', 'NN'), ('candles', 'NNS'), ('in', 'IN'), ('them', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('we', 'PRP'), ('like', 'VBP'), ('to', 'TO'), ('blow', 'VB')])
('tags -> ', '     (put->NN) (candles->NNS) (in->IN) (them->PRP) (be->VB) (cause->VBN) (we->PRP) (like->VBP) (to->TO) (blow->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
2
('tags initial-> ', [('candles', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('brownies', 'NNS')])
('tags -> ', '     (candles->NNS) (in->IN) (the->DT) (brownies->NNS) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('d', 'IN'), ('we', 'PRP'), ('like', 'VBP'), ('to', 'TO'), ('blow', 'VB')])
('tags -> ', '     (be->VB) (cause->NN) (d->IN) (we->PRP) (like->VBP) (to->TO) (blow->VB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('you', 'PRP'), ('promise', 'VBP')])
('tags -> ', '     (you->PRP) (promise->VBP) ')
('tags initial-> ', [('you', 'PRP'), ('promise', 'VBP')])
('tags -> ', '     (you->PRP) (promise->VBP) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('boy', 'NN'), ('jeff', 'NN')])
('tags -> ', '     (good->JJ) (boy->NN) (jeff->NN) ')
('tags initial-> ', [('we', 'PRP'), ('ll', 'VBP'), ('see', 'VB')])
('tags -> ', '     (we->PRP) (ll->VBP) (see->VB) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('even', 'RB'), ('know', 'VBP'), ('if', 'IN'), ('i', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('candles', 'NNS'), ('bro', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->JJ) (even->RB) (know->VBP) (if->IN) (i->NNS) (have->VBP) (any->DT) (candles->NNS) (bro->VBP) ')
candidates to check:
3
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('used', 'VBD'), ('them', 'PRP'), ('all', 'DT'), ('at', 'IN'), ('your', 'PRP$'), ('birthday', 'NN'), ('party', 'NN')])
('tags -> ', '     (i->JJ) (think->VBP) (we->PRP) (used->VBD) (them->PRP) (all->DT) (at->IN) (your->PRP$) (birthday->NN) (party->NN) ')
('tags initial-> ', [('no', 'DT'), ('yeah', 'NN'), ('we', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (no->DT) (yeah->NN) (we->PRP) (did->VBD) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('we', 'PRP'), ('no', 'DT'), ('no', 'DT'), ('jeff', 'NN'), ('but', 'CC'), ('we', 'PRP'), ('put', 'VBD'), ('five', 'CD'), ('of', 'IN'), ('them', 'PRP'), ('in', 'IN')])
('tags -> ', '     (no->DT) (we->PRP) (no->DT) (no->DT) (jeff->NN) (but->CC) (we->PRP) (put->VBD) (five->CD) (of->IN) (them->PRP) (in->IN) ')
('tags initial-> ', [('we', 'PRP'), ('put', 'VBD'), ('five', 'CD'), ('of', 'IN'), ('them', 'PRP'), ('in', 'IN')])
('tags -> ', '     (we->PRP) (put->VBD) (five->CD) (of->IN) (them->PRP) (in->IN) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('doing', 'VBG'), ('it', 'PRP'), ('again', 'RB')])
('tags -> ', '     (mom->NN) (it->PRP) (s->VBZ) (doing->VBG) (it->PRP) (again->RB) ')
('tags initial-> ', [('you', 'PRP'), ('all', 'DT'), ('done', 'VBN')])
('tags -> ', '     (you->PRP) (all->DT) (done->VBN) ')
candidates to check:
3
('tags initial-> ', [('bro', 'NN'), ('put', 'VBD'), ('your', 'PRP$'), ('bowl', 'NN'), ('in', 'IN'), ('the', 'DT'), ('sink', 'NN'), ('please', 'NN')])
('tags -> ', '     (bro->NN) (put->VBD) (your->PRP$) (bowl->NN) (in->IN) (the->DT) (sink->NN) (please->NN) ')
('tags initial-> ', [('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN'), ('drinking', 'NN')])
('tags -> ', '     (i->JJ) (m->VBP) (all->DT) (done->VBN) (drinking->NN) ')
candidates to check:
1
('tags initial-> ', [('where', 'WRB'), ('s', 'VB'), ('your', 'PRP$'), ('bowl', 'NN'), ('go', 'VB')])
('tags -> ', '     (where->WRB) (s->VB) (your->PRP$) (bowl->NN) (go->VB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('your', 'PRP$'), ('cup', 'NN'), ('please', 'NN')])
('tags -> ', '     (and->CC) (your->PRP$) (cup->NN) (please->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
('tags initial-> ', [('bro', 'NN')])
('tags -> ', '     (bro->NN) ')
candidates to check:
3
('tags initial-> ', [('your', 'PRP$'), ('bowl', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('cup', 'NN'), ('in', 'IN'), ('the', 'DT'), ('sink', 'NN')])
('tags -> ', '     (your->PRP$) (bowl->NN) (and->CC) (your->PRP$) (cup->NN) (in->IN) (the->DT) (sink->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('only', 'RB'), ('take', 'VB'), ('one', 'CD'), ('at', 'IN'), ('a', 'DT'), ('time', 'NN')])
('tags -> ', '     (i->NN) (can->MD) (only->RB) (take->VB) (one->CD) (at->IN) (a->DT) (time->NN) ')
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP')])
('tags -> ', '     (thank->NN) (you->PRP) ')
('tags initial-> ', [('well', 'RB'), ('then', 'RB'), ('do', 'VBP'), ('that', 'IN')])
('tags -> ', '     (well->RB) (then->RB) (do->VBP) (that->IN) ')
('tags initial-> ', [('i', 'NN'), ('like', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (like->IN) (it->PRP) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (good->JJ) (boy->NN) ')
candidates to check:
1
('tags initial-> ', [('mama', 'NN'), ('xxx', 'NN'), ('i', 'NN'), ('like', 'IN'), ('it', 'PRP'), ('xxx', 'VBD')])
('tags -> ', '     (mama->NN) (xxx->NN) (i->NN) (like->IN) (it->PRP) (xxx->VBD) ')
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('will', 'MD'), ('you', 'PRP'), ('set', 'VB'), ('out', 'RP'), ('the', 'DT'), ('xxx', 'NN')])
('tags -> ', '     (now->RB) (will->MD) (you->PRP) (set->VB) (out->RP) (the->DT) (xxx->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
1
('tags initial-> ', [('thank', 'NN'), ('you', 'PRP'), ('guys', 'VBP')])
('tags -> ', '     (thank->NN) (you->PRP) (guys->VBP) ')
loading solution set
calculating
set([(725, (26, 34)), (311, (22, 30)), (329, (34, 43)), (721, (26, 34))])
[((311, (22, 30)), '*MOT:\twant me to make brownies for dessert ?\n'), ((329, (34, 43)), '*MOT:\tdid you eat all of your (.) spaghetti [>] ?\n'), ((721, (26, 34)), "*MOT:\tI'm gonna make some brownies anyway .\n"), ((725, (26, 34)), "*MOT:\tdon't you want some brownies ?\n")]
set([(311, (35, 42)), (46, (26, 30)), (53, (-1, 3)), (218, (-1, 3)), (53, (30, 34)), (218, (26, 30)), (46, (-1, 3)), (329, (34, 43))])
[((46, (-1, 3)), '*CHI:\t<and the Howard the Duck [/]> [>] .\n'), ((46, (26, 30)), '*CHI:\t<and the Howard the Duck [/]> [>] .\n'), ((53, (-1, 3)), '*CHI:\twas that the Howard the Duck tape ?\n'), ((53, (30, 34)), '*CHI:\twas that the Howard the Duck tape ?\n'), ((218, (-1, 3)), '*CHI:\twhere is Howard the Duck ?\n'), ((218, (26, 30)), '*CHI:\twhere is Howard the Duck ?\n'), ((311, (35, 42)), '*MOT:\twant me to make brownies for dessert ?\n'), ((329, (34, 43)), '*MOT:\tdid you eat all of your (.) spaghetti [>] ?\n')]
calculating accuracy and recall
correct labels:
set(['spaghetti', 'brownies'])
predicted labels:
set(['', 'dessert', 'spaghetti', 'duck'])
file:HSLLD/HV1/MT//jacmt1.cha
precision: 0.25
recall: 0.5
true positives:['spaghetti']
false positives: ['', 'dessert', 'duck']
false negatives: ['brownies']
# true pos: 1
# false pos: 3
# false neg: 1
HSLLD/HV1/MT//deamt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//deamt1.cha
HSLLD/HV1/MT//gremt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
1
('tags initial-> ', [('now', 'RB'), ('get', 'VB'), ('in', 'IN'), ('your', 'PRP$'), ('chair', 'NN'), ('and', 'CC'), ('eat', 'NN'), ('okay', 'NN')])
('tags -> ', '     (now->RB) (get->VB) (in->IN) (your->PRP$) (chair->NN) (and->CC) (eat->NN) (okay->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('hey', 'NN'), ('mot', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (xxx->NN) (hey->NN) (mot->VBP) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'sandwich', 15, 23]
('tags initial-> ', [('eat', 'VB'), ('your', 'PRP$'), ('sandwich', 'NN')])
('tags -> ', '     (eat->VB) (your->PRP$) (sandwich->NN) ')
candidates to check:
1
('tags initial-> ', [('keep', 'VB'), ('the', 'DT'), ('xxx', 'NN'), ('out', 'RP'), ('grunting', 'NN')])
('tags -> ', '     (keep->VB) (the->DT) (xxx->NN) (out->RP) (grunting->NN) ')
candidates to check:
1
('tags initial-> ', [('chi', 'NNS'), ('stop', 'VBP'), ('singin', 'NN'), ('g', 'NN'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('and', 'CC'), ('eat', 'NN')])
('tags -> ', '     (chi->NNS) (stop->VBP) (singin->NN) (g->NN) (at->IN) (the->DT) (table->NN) (and->CC) (eat->NN) ')
('tags initial-> ', [('yeah', 'NN'), ('giggling', 'VBG')])
('tags -> ', '     (yeah->NN) (giggling->VBG) ')
candidates to check:
2
('tags initial-> ', [('be', 'VB'), ('a', 'DT'), ('good', 'JJ'), ('boy', 'NN'), ('and', 'CC'), ('eat', 'NN')])
('tags -> ', '     (be->VB) (a->DT) (good->JJ) (boy->NN) (and->CC) (eat->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
candidates to check:
1
descended from food: [['N'], 'milk', 18, 22]
milk
milk milk 46
[('drink', 'VB'), ('your', 'PRP$'), ('milk', 'NN'), ('eat', 'NN')]
['milk']
('tags initial-> ', [('drink', 'VB'), ('your', 'PRP$'), ('milk', 'NN'), ('eat', 'NN')])
('tags -> ', '     (drink->VB) (your->PRP$) (milk->NN) (eat->NN) ')
('tags initial-> ', [('sit', 'NN'), ('there', 'EX'), ('and', 'CC'), ('eat', 'NN')])
('tags -> ', '     (sit->NN) (there->EX) (and->CC) (eat->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('sit', 'VB'), ('there', 'EX')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) (sit->VB) (there->EX) ')
('tags initial-> ', [('eat', 'NN')])
('tags -> ', '     (eat->NN) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('high', 'JJ'), ('pitched', 'VBN'), ('noises', 'NNS')])
('tags -> ', '     (0->CD) (high->JJ) (pitched->VBN) (noises->NNS) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('growl', 'NN')])
('tags -> ', '     (growl->NN) ')
candidates to check:
1
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('then', 'RB'), ('we', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('beach', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (then->RB) (we->PRP) (re->VBP) (not->RB) (gon->VB) (na->TO) (go->VB) (to->TO) (the->DT) (beach->NN) ')
('tags initial-> ', [('hey', 'NN'), ('please', 'NN')])
('tags -> ', '     (hey->NN) (please->NN) ')
candidates to check:
1
descended from food: [['N'], 'sandwich', 32, 40]
('tags initial-> ', [('then', 'RB'), ('sit', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('sandwich', 'NN')])
('tags -> ', '     (then->RB) (sit->NN) (and->CC) (eat->VB) (your->PRP$) (sandwich->NN) ')
candidates to check:
1
('tags initial-> ', [('can', 'MD'), ('we', 'PRP'), ('can', 'MD'), ('we', 'PRP'), ('xxx', 'VB'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('beach', 'NN')])
('tags -> ', '     (can->MD) (we->PRP) (can->MD) (we->PRP) (xxx->VB) (go->VB) (to->TO) (the->DT) (beach->NN) ')
candidates to check:
1
('tags initial-> ', [('yeah', 'NNS'), ('but', 'CC'), ('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('a', 'DT'), ('car', 'NN'), ('first', 'RB')])
('tags -> ', '     (yeah->NNS) (but->CC) (we->PRP) (have->VBP) (to->TO) (get->VB) (a->DT) (car->NN) (first->RB) ')
candidates to check:
2
('tags initial-> ', [('so', 'RB'), ('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('just', 'RB'), ('sit', 'VB'), ('there', 'EX'), ('and', 'CC'), ('be', 'VB'), ('a', 'DT'), ('good', 'JJ'), ('boy', 'NN')])
('tags -> ', '     (so->RB) (why->WRB) (don->NN) (t->NN) (you->PRP) (just->RB) (sit->VB) (there->EX) (and->CC) (be->VB) (a->DT) (good->JJ) (boy->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('know', 'VBP'), ('xxx', 'NN')])
('tags -> ', '     (i->NN) (know->VBP) (xxx->NN) ')
('tags initial-> ', [('okay', 'RB'), ('good', 'JJ')])
('tags -> ', '     (okay->RB) (good->JJ) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('that', 'DT'), ('stuff', 'NN')])
('tags -> ', '     (what->WP) (is->VBZ) (that->DT) (stuff->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('just', 'RB'), ('got', 'VBD'), ('ta', 'JJ'), ('wait', 'NN'), ('chi', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('what', 'WP'), ('s', 'NN'), ('in', 'IN'), ('front', 'JJ'), ('o', 'NN'), ('f', 'NN'), ('you', 'PRP'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('ll', 'RBR'), ('give', 'VB'), ('you', 'PRP'), ('this', 'DT')])
('tags -> ', '     (you->PRP) (just->RB) (got->VBD) (ta->JJ) (wait->NN) (chi->NN) (and->CC) (eat->VB) (what->WP) (s->NN) (in->IN) (front->JJ) (o->NN) (f->NN) (you->PRP) (and->CC) (then->RB) (i->VB) (ll->RBR) (give->VB) (you->PRP) (this->DT) ')
('tags initial-> ', [('oh', 'UH'), ('xxx', 'NN')])
('tags -> ', '     (oh->UH) (xxx->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('hey', 'NN'), ('xxx', 'VBP'), ('xxx', 'NN'), ('taking', 'NN'), ('that', 'WDT'), ('big', 'JJ'), ('car', 'NN')])
('tags -> ', '     (hey->NN) (xxx->VBP) (xxx->NN) (taking->NN) (that->WDT) (big->JJ) (car->NN) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('yet', 'RB'), ('chi', 'JJ')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) (yet->RB) (chi->JJ) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('get', 'VB'), ('in', 'IN'), ('touch', 'NN'), ('with', 'IN'), ('daddy', 'NN'), ('and', 'CC'), ('then', 'RB'), ('we', 'PRP'), ('ll', 'VBP'), ('go', 'VB'), ('see', 'NN')])
('tags -> ', '     (we->PRP) (have->VBP) (to->TO) (get->VB) (in->IN) (touch->NN) (with->IN) (daddy->NN) (and->CC) (then->RB) (we->PRP) (ll->VBP) (go->VB) (see->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('by', 'IN'), ('by', 'IN'), ('the', 'DT'), ('beach', 'NN')])
('tags -> ', '     (by->IN) (by->IN) (the->DT) (beach->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('getting', 'VBG'), ('wet', 'NN')])
('tags -> ', '     (they->PRP) (re->VBP) (getting->VBG) (wet->NN) ')
('tags initial-> ', [('just', 'RB'), ('eat', 'NN')])
('tags -> ', '     (just->RB) (eat->NN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('wit', 'NN'), ('h', 'VB'), ('your', 'PRP$'), ('mouth', 'NN'), ('full', 'JJ'), ('just', 'RB'), ('eat', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (eat->NN) (wit->NN) (h->VB) (your->PRP$) (mouth->NN) (full->JJ) (just->RB) (eat->NN) ')
('tags initial-> ', [('get', 'VB'), ('wet', 'JJ')])
('tags -> ', '     (get->VB) (wet->JJ) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('talk', 'NN'), ('with', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('full', 'JJ'), ('eat', 'NN')])
('tags -> ', '     (don->NN) (t->NN) (talk->NN) (with->IN) (your->PRP$) (mouth->NN) (full->JJ) (eat->NN) ')
('tags initial-> ', [('do', 'VB'), ('what', 'WP'), ('i', 'VB'), ('asked', 'VBD')])
('tags -> ', '     (do->VB) (what->WP) (i->VB) (asked->VBD) ')
('tags initial-> ', [('mot', 'NN')])
('tags -> ', '     (mot->NN) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('go', 'VB'), ('out', 'RP'), ('0and', 'CD'), ('play', 'NN'), ('with', 'IN'), ('lydia', 'NN')])
('tags -> ', '     (xxx->NN) (i->NN) (can->MD) (t->VB) (go->VB) (out->RP) (0and->CD) (play->NN) (with->IN) (lydia->NN) ')
candidates to check:
1
('tags initial-> ', [('are', 'VBP'), ('we', 'PRP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('beach', 'NN')])
('tags -> ', '     (are->VBP) (we->PRP) (gon->VB) (na->TO) (go->VB) (to->TO) (the->DT) (beach->NN) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('marky', 'NN'), ('will', 'MD'), ('love', 'VB'), ('it', 'PRP')])
('tags -> ', '     (marky->NN) (will->MD) (love->VB) (it->PRP) ')
('tags initial-> ', [('marky', 'NN'), ('will', 'MD'), ('love', 'VB'), ('it', 'PRP')])
('tags -> ', '     (marky->NN) (will->MD) (love->VB) (it->PRP) ')
('tags initial-> ', [('yes', 'RB'), ('he', 'PRP'), ('will', 'MD'), ('love', 'VB'), ('it', 'PRP')])
('tags -> ', '     (yes->RB) (he->PRP) (will->MD) (love->VB) (it->PRP) ')
('tags initial-> ', [('xxx', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('you', 'PRP'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (xxx->NN) (i->NN) (want->VBP) (you->PRP) (to->TO) (eat->VB) ')
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('we', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('going', 'VBG'), ('anywhere', 'RB')])
('tags -> ', '     (if->IN) (you->PRP) (don->VBP) (t->JJ) (eat->NN) (we->PRP) (re->VBP) (not->RB) (going->VBG) (anywhere->RB) ')
('tags initial-> ', [('please', 'NN')])
('tags -> ', '     (please->NN) ')
('tags initial-> ', [('just', 'RB'), ('eat', 'NN')])
('tags -> ', '     (just->RB) (eat->NN) ')
candidates to check:
1
descended from food: [['N'], 'sandwich', 94, 102]
('tags initial-> ', [('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('when', 'WRB'), ('you', 'PRP'), ('re', 'VBP'), ('done', 'VBN'), ('with', 'IN'), ('that', 'DT'), ('i', 'NN'), ('ve', 'VBP'), ('got', 'VBD'), ('some', 'DT'), ('more', 'RBR'), ('sandwich', 'JJ')])
('tags -> ', '     (when->WRB) (you->PRP) (re->VBP) (done->VBN) (when->WRB) (you->PRP) (re->VBP) (done->VBN) (with->IN) (that->DT) (i->NN) (ve->VBP) (got->VBD) (some->DT) (more->RBR) (sandwich->JJ) ')
('tags initial-> ', [('who', 'WP'), ('is', 'VBZ'), ('that', 'IN')])
('tags -> ', '     (who->WP) (is->VBZ) (that->IN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('i', 'NN'), ('m', 'VBP'), ('done', 'VBN'), ('wit', 'NN'), ('h', 'NN'), ('wit', 'NN'), ('h', 'NN'), ('these', 'DT')])
('tags -> ', '     (i->NN) (m->VBP) (done->VBN) (wit->NN) (h->NN) (wit->NN) (h->NN) (these->DT) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('no', 'DT'), ('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('done', 'VBN')])
('tags -> ', '     (no->DT) (no->DT) (no->DT) (no->DT) (no->DT) (you->PRP) (re->VBP) (not->RB) (done->VBN) ')
('tags initial-> ', [('fine', 'NN')])
('tags -> ', '     (fine->NN) ')
('tags initial-> ', [('singing', 'VBG')])
('tags -> ', '     (singing->VBG) ')
candidates to check:
1
('tags initial-> ', [('mot', 'NN')])
('tags -> ', '     (mot->NN) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('keep', 'VB'), ('eating', 'NN')])
('tags -> ', '     (keep->VB) (eating->NN) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'IN'), ('the', 'DT'), ('room', 'NN')])
('tags -> ', '     (xxx->IN) (the->DT) (room->NN) ')
candidates to check:
2
('tags initial-> ', [('mom', 'NN'), ('don', 'NN'), ('t', 'NN'), ('put', 'VBD'), ('xxx', 'NNP'), ('beach', 'NN')])
('tags -> ', '     (mom->NN) (don->NN) (t->NN) (put->VBD) (xxx->NNP) (beach->NN) ')
('tags initial-> ', [('not', 'RB'), ('yet', 'RB')])
('tags -> ', '     (not->RB) (yet->RB) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
2
('tags initial-> ', [('we', 'PRP'), ('re', 'VBP'), ('obviously', 'RB'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('unless', 'IN'), ('we', 'PRP'), ('get', 'VBP'), ('our', 'PRP$'), ('car', 'NN'), ('from', 'IN'), ('daddy', 'NN')])
('tags -> ', '     (we->PRP) (re->VBP) (obviously->RB) (not->RB) (gon->VB) (na->TO) (go->VB) (unless->IN) (we->PRP) (get->VBP) (our->PRP$) (car->NN) (from->IN) (daddy->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('so', 'RB'), ('just', 'RB'), ('eat', 'NN')])
('tags -> ', '     (so->RB) (just->RB) (eat->NN) ')
('tags initial-> ', [('hot', 'JJ')])
('tags -> ', '     (hot->JJ) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('daddy', 'NN')])
('tags -> ', '     (xxx->NN) (daddy->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('chi', 'VB'), ('the', 'DT'), ('longer', 'JJR'), ('you', 'PRP'), ('keep', 'VBP'), ('talkin', 'JJ'), ('g', 'NN'), ('the', 'DT'), ('longer', 'JJR'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('going', 'VBG'), ('to', 'TO'), ('sit', 'VB'), ('there', 'EX')])
('tags -> ', '     (chi->VB) (the->DT) (longer->JJR) (you->PRP) (keep->VBP) (talkin->JJ) (g->NN) (the->DT) (longer->JJR) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (going->VBG) (to->TO) (sit->VB) (there->EX) ')
('tags initial-> ', [('no', 'DT'), ('laughs', 'NN')])
('tags -> ', '     (no->DT) (laughs->NN) ')
('tags initial-> ', [('just', 'RB'), ('eat', 'NN')])
('tags -> ', '     (just->RB) (eat->NN) ')
('tags initial-> ', [('i', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('beach', 'NN')])
('tags -> ', '     (i->NN) (gon->NN) (na->TO) (go->VB) (to->TO) (the->DT) (beach->NN) ')
candidates to check:
1
descended from food: [['N'], 'sandwich', 37, 45]
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('to', 'TO'), ('finish', 'VB'), ('eating', 'VBG'), ('your', 'PRP$'), ('sandwich', 'NN')])
('tags -> ', '     (you->PRP) (have->VBP) (to->TO) (finish->VB) (eating->VBG) (your->PRP$) (sandwich->NN) ')
('tags initial-> ', [('marky', 'NN'), ('will', 'MD'), ('love', 'VB'), ('it', 'PRP'), ('marky', 'VB'), ('will', 'MD'), ('love', 'VB'), ('it', 'PRP')])
('tags -> ', '     (marky->NN) (will->MD) (love->VB) (it->PRP) (marky->VB) (will->MD) (love->VB) (it->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('will', 'MD'), ('will', 'MD'), ('will', 'MD'), ('xxx', 'VB'), ('it', 'PRP'), ('xxx', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (he->PRP) (will->MD) (will->MD) (will->MD) (xxx->VB) (it->PRP) (xxx->VBZ) (it->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('will', 'MD'), ('xxx', 'VB')])
('tags -> ', '     (he->PRP) (will->MD) (xxx->VB) ')
('tags initial-> ', [('and', 'CC'), ('he', 'PRP'), ('ll', 'VBZ'), ('xxx', 'NN')])
('tags -> ', '     (and->CC) (he->PRP) (ll->VBZ) (xxx->NN) ')
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('think', 'VB')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (think->VB) ')
candidates to check:
2
('tags initial-> ', [('0', 'CD'), ('screeching', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (0->CD) (screeching->NN) (noises->NNS) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('it', 'PRP'), ('was', 'VBD'), ('two', 'CD'), ('girls', 'NNS'), ('at', 'IN'), ('at', 'IN'), ('xxx', 'NN'), ('it', 'PRP'), ('was', 'VBD'), ('his', 'PRP$'), ('name', 'NN'), ('is', 'VBZ')])
('tags -> ', '     (no->DT) (it->PRP) (was->VBD) (two->CD) (girls->NNS) (at->IN) (at->IN) (xxx->NN) (it->PRP) (was->VBD) (his->PRP$) (name->NN) (is->VBZ) ')
('tags initial-> ', [('xxx', 'NN'), ('it', 'PRP'), ('was', 'VBD'), ('xxx', 'JJ')])
('tags -> ', '     (xxx->NN) (it->PRP) (was->VBD) (xxx->JJ) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('anything', 'NN')])
('tags -> ', '     (no->DT) (i->JJ) (don->VBP) (t->NN) (know->VBP) (anything->NN) ')
('tags initial-> ', [('all', 'DT'), ('i', 'NN'), ('know', 'VBP'), ('is', 'VBZ'), ('you', 'PRP'), ('better', 'JJR'), ('eat', 'NN')])
('tags -> ', '     (all->DT) (i->NN) (know->VBP) (is->VBZ) (you->PRP) (better->JJR) (eat->NN) ')
('tags initial-> ', [('be', 'VB'), ('quiet', 'JJ'), ('and', 'CC'), ('eat', 'NN'), ('now', 'RB')])
('tags -> ', '     (be->VB) (quiet->JJ) (and->CC) (eat->NN) (now->RB) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
3
('tags initial-> ', [('0', 'CD'), ('airplane', 'NN'), ('noises', 'NNS')])
('tags -> ', '     (0->CD) (airplane->NN) (noises->NNS) ')
candidates to check:
1
('tags initial-> ', [('cries', 'NNS')])
('tags -> ', '     (cries->NNS) ')
candidates to check:
1
descended from food: [['N'], 'sandwich', 14, 22]
('tags initial-> ', [('eat', 'VB'), ('the', 'DT'), ('sandwich', 'NN')])
('tags -> ', '     (eat->VB) (the->DT) (sandwich->NN) ')
('tags initial-> ', [('right', 'RB'), ('now', 'RB')])
('tags -> ', '     (right->RB) (now->RB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('don', 'VB'), ('t', 'NN'), ('rock', 'NN'), ('this', 'DT'), ('chair', 'NN'), ('because', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('break', 'VB'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (don->VB) (t->NN) (rock->NN) (this->DT) (chair->NN) (because->IN) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (break->VB) (it->PRP) ')
('tags initial-> ', [('come', 'VB'), ('on', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('eat', 'VB')])
('tags -> ', '     (come->VB) (on->IN) (you->PRP) (re->VBP) (gon->VBG) (na->TO) (eat->VB) ')
loading solution set
calculating
set([(78, (32, 40)), (24, (15, 23)), (44, (18, 22))])
[((24, (15, 23)), '*MOT:\teat your sandwich .\n'), ((44, (18, 22)), '*MOT:\t<drink your milk> [<] [///] eat !\n'), ((78, (32, 40)), '*MOT:\tthen sit [!] and eat your sandwich .\n')]
set([(24, (15, 23)), (78, (32, 40)), (355, (14, 22)), (224, (94, 102)), (309, (37, 45)), (44, (18, 22))])
[((24, (15, 23)), '*MOT:\teat your sandwich .\n'), ((44, (18, 22)), '*MOT:\t<drink your milk> [<] [///] eat !\n'), ((78, (32, 40)), '*MOT:\tthen sit [!] and eat your sandwich .\n'), ((224, (94, 102)), "*MOT:\t(..) <when you're done [>]> [/] (.) when you're done with that I('ve) got some more (.) sandwich .\n"), ((309, (37, 45)), '*MOT:\tyou have_to finish eating your sandwich .\n'), ((355, (14, 22)), '*MOT:\teat the sandwich .\n')]
calculating accuracy and recall
correct labels:
set(['sandwich', 'milk'])
predicted labels:
set(['sandwich', 'milk'])
file:HSLLD/HV1/MT//gremt1.cha
precision: 1.0
recall: 1.0
true positives:['milk', 'sandwich']
false positives: []
false negatives: []
# true pos: 2
# false pos: 0
# false neg: 0
HSLLD/HV1/MT//diamt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
candidates to check:
3
descended from food: [['N'], 'supper', 31, 37]
('tags initial-> ', [('okay', 'JJ'), ('girls', 'NNS'), ('it', 'PRP'), ('s', 'VBD'), ('time', 'NN'), ('for', 'IN'), ('supper', 'JJ'), ('let', 'NN'), ('s', 'NN'), ('go', 'VB')])
('tags -> ', '     (okay->JJ) (girls->NNS) (it->PRP) (s->VBD) (time->NN) (for->IN) (supper->JJ) (let->NN) (s->NN) (go->VB) ')
('tags initial-> ', [('wubby', 'NN'), ('what', 'WP'), ('are', 'VBP'), ('we', 'PRP'), ('eating', 'VBG')])
('tags -> ', '     (wubby->NN) (what->WP) (are->VBP) (we->PRP) (eating->VBG) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NN'), ('cucumbers', 'NNS')])
('tags -> ', '     (xxx->NN) (cucumbers->NNS) ')
('tags initial-> ', [('cucumbers', 'NNS'), ('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (cucumbers->NNS) (and->CC) (what->WP) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('um', 'JJ'), ('cucumbers', 'NNS')])
('tags -> ', '     (um->JJ) (cucumbers->NNS) ')
('tags initial-> ', [('what', 'WP'), ('else', 'RB'), ('are', 'VBP'), ('you', 'PRP'), ('eating', 'VBG')])
('tags -> ', '     (what->WP) (else->RB) (are->VBP) (you->PRP) (eating->VBG) ')
candidates to check:
1
('tags initial-> ', [('mom', 'NN')])
('tags -> ', '     (mom->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'meat', 11, 15]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5776c8>)
[('yeah', 'RB'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('yeah', 'RB'), ('meat', 'NN')])
('tags -> ', '     (yeah->RB) (meat->NN) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB'), ('are', 'VBP'), ('you', 'PRP'), ('eating', 'VBG')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) (are->VBP) (you->PRP) (eating->VBG) ')
candidates to check:
1
mustard
mustard mustard 60
[('xxx', 'NN'), ('xxx', 'NNP'), ('get', 'VB'), ('some', 'DT'), ('mustard', 'NN'), ('come', 'VBN'), ('on', 'IN')]
['mustard']
('tags initial-> ', [('xxx', 'NN'), ('xxx', 'NNP'), ('get', 'VB'), ('some', 'DT'), ('mustard', 'NN'), ('come', 'VBN'), ('on', 'IN')])
('tags -> ', '     (xxx->NN) (xxx->NNP) (get->VB) (some->DT) (mustard->NN) (come->VBN) (on->IN) ')
candidates to check:
2
('tags initial-> ', [('where', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('go', 'VB'), ('the', 'DT'), ('other', 'JJ'), ('night', 'NN'), ('chi', 'NNS')])
('tags -> ', '     (where->WRB) (did->VBD) (you->PRP) (go->VB) (the->DT) (other->JJ) (night->NN) (chi->NNS) ')
candidates to check:
1
('tags initial-> ', [('to', 'TO'), ('the', 'DT'), ('fireworks', 'NNS')])
('tags -> ', '     (to->TO) (the->DT) (fireworks->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('we', 'PRP'), ('see', 'VB'), ('there', 'EX')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (we->PRP) (see->VB) (there->EX) ')
candidates to check:
1
('tags initial-> ', [('colors', 'NNS')])
('tags -> ', '     (colors->NNS) ')
candidates to check:
1
('tags initial-> ', [('all', 'DT'), ('colors', 'NNS')])
('tags -> ', '     (all->DT) (colors->NNS) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('we', 'PRP'), ('go', 'VB'), ('on', 'IN')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (we->PRP) (go->VB) (on->IN) ')
('tags initial-> ', [('or', 'CC'), ('you', 'PRP'), ('go', 'VBP'), ('on', 'IN')])
('tags -> ', '     (or->CC) (you->PRP) (go->VBP) (on->IN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('in', 'IN'), ('and', 'CC'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('helicopters', 'NNS')])
('tags -> ', '     (and->CC) (in->IN) (and->CC) (out->IN) (of->IN) (the->DT) (helicopters->NNS) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('helicopters', 'NNS')])
('tags -> ', '     (the->DT) (helicopters->NNS) ')
('tags initial-> ', [('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (what->WP) (else->RB) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('horses', 'NNS')])
('tags -> ', '     (and->CC) (the->DT) (horses->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('um', 'NN')])
('tags -> ', '     (and->CC) (the->DT) (um->NN) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('the', 'DT'), ('um', 'JJ'), ('the', 'DT'), ('um', 'JJ'), ('cars', 'NNS')])
('tags -> ', '     (and->CC) (the->DT) (um->JJ) (the->DT) (um->JJ) (cars->NNS) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('cars', 'NNS')])
('tags -> ', '     (the->DT) (cars->NNS) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('about', 'IN'), ('the', 'DT'), ('motorcycles', 'NNS')])
('tags -> ', '     (what->WP) (about->IN) (the->DT) (motorcycles->NNS) ')
candidates to check:
2
('tags initial-> ', [('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('motorcycles', 'NNS'), ('they', 'PRP'), ('re', 'VBP'), ('bikes', 'NNS')])
('tags -> ', '     (they->PRP) (re->VBP) (not->RB) (motorcycles->NNS) (they->PRP) (re->VBP) (bikes->NNS) ')
candidates to check:
1
('tags initial-> ', [('oh', 'UH'), ('bikes', 'NNS')])
('tags -> ', '     (oh->UH) (bikes->NNS) ')
('tags initial-> ', [('excuse', 'IN'), ('me', 'PRP')])
('tags -> ', '     (excuse->IN) (me->PRP) ')
candidates to check:
2
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('auntie', 'VB'), ('buy', 'VB'), ('you', 'PRP')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (auntie->VB) (buy->VB) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('a', 'DT'), ('what', 'WP')])
('tags -> ', '     (a->DT) (what->WP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (hear->VB) (you->PRP) ')
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP')])
('tags -> ', '     (we->PRP) (can->MD) (t->VB) (hear->VB) (you->PRP) ')
('tags initial-> ', [('talk', 'NN'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (talk->NN) (over->IN) (here->RB) ')
candidates to check:
2
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('auntie', 'VB'), ('buy', 'VB'), ('you', 'PRP')])
('tags -> ', '     (what->WP) (did->VBD) (auntie->VB) (buy->VB) (you->PRP) ')
candidates to check:
3
('tags initial-> ', [('a', 'DT'), ('balloon', 'NN')])
('tags -> ', '     (a->DT) (balloon->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('balloon', 'NN')])
('tags -> ', '     (a->DT) (balloon->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('ha', 'VB'), ('have', 'VBP'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (and->CC) (what->WP) (did->VBD) (you->PRP) (ha->VB) (have->VBP) (to->TO) (eat->VB) ')
candidates to check:
1
corn
corn corn 419
[('the', 'DT'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('the', 'DT'), ('corn', 'NN')])
('tags -> ', '     (the->DT) (corn->NN) ')
('tags initial-> ', [('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (what->WP) (else->RB) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VB'), ('your', 'PRP$'), ('favorite', 'JJ')])
('tags -> ', '     (what->WP) (s->VB) (your->PRP$) (favorite->JJ) ')
('tags initial-> ', [('mm', 'NN'), ('mm', 'NN')])
('tags -> ', '     (mm->NN) (mm->NN) ')
macaroni
macaroni macaroni 128
[('macaroni', 'NN')]
['macaroni']
('tags initial-> ', [('macaroni', 'NN')])
('tags -> ', '     (macaroni->NN) ')
('tags initial-> ', [('yes', 'UH'), ('what', 'WP'), ('s', 'VB'), ('your', 'PRP$'), ('favorite', 'JJ')])
('tags -> ', '     (yes->UH) (what->WP) (s->VB) (your->PRP$) (favorite->JJ) ')
candidates to check:
1
('tags initial-> ', [('um', 'JJ'), ('nothing', 'NN')])
('tags -> ', '     (um->JJ) (nothing->NN) ')
('tags initial-> ', [('no', 'DT'), ('chi', 'NN'), ('talk', 'NN'), ('over', 'IN'), ('here', 'RB')])
('tags -> ', '     (no->DT) (chi->NN) (talk->NN) (over->IN) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
('tags initial-> ', [('yes', 'NNS'), ('bridget', 'NN')])
('tags -> ', '     (yes->NNS) (bridget->NN) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 6, 11]
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('tags initial-> ', [('pizza', 'NN')])
('tags -> ', '     (pizza->NN) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (have->VB) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (hear->VB) (you->PRP) ')
candidates to check:
1
descended from food: [['N'], 'pizza', 6, 11]
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('tags initial-> ', [('pizza', 'NN')])
('tags -> ', '     (pizza->NN) ')
candidates to check:
3
('tags initial-> ', [('you', 'PRP'), ('go', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('today', 'NN')])
('tags -> ', '     (you->PRP) (go->VBP) (in->IN) (the->DT) (pool->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('pool', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('go', 'VB'), ('in', 'IN')])
('tags -> ', '     (what->WP) (pool->NN) (did->VBD) (you->PRP) (go->VB) (in->IN) ')
candidates to check:
3
('tags initial-> ', [('a', 'DT'), ('different', 'JJ'), ('pool', 'NN'), ('than', 'IN'), ('that', 'DT'), ('pool', 'NN')])
('tags -> ', '     (a->DT) (different->JJ) (pool->NN) (than->IN) (that->DT) (pool->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('went', 'VBD'), ('in', 'IN'), ('the', 'DT'), ('big', 'JJ'), ('pool', 'NN')])
('tags -> ', '     (you->PRP) (went->VBD) (in->IN) (the->DT) (big->JJ) (pool->NN) ')
candidates to check:
1
('tags initial-> ', [('whose', 'WP$'), ('pool', 'NN'), ('is', 'VBZ'), ('that', 'IN')])
('tags -> ', '     (whose->WP$) (pool->NN) (is->VBZ) (that->IN) ')
candidates to check:
1
('tags initial-> ', [('me', 'PRP'), ('daddy', 'JJ'), ('s', 'NNS'), ('and', 'CC'), ('jack', 'NN'), ('and', 'CC'), ('mom', 'NN'), ('s', 'NN')])
('tags -> ', '     (me->PRP) (daddy->JJ) (s->NNS) (and->CC) (jack->NN) (and->CC) (mom->NN) (s->NN) ')
('tags initial-> ', [('and', 'CC'), ('david', 'VB'), ('s', 'NN')])
('tags -> ', '     (and->CC) (david->VB) (s->NN) ')
('tags initial-> ', [('and', 'CC'), ('do', 'VB'), ('you', 'PRP'), ('know', 'VB'), ('how', 'WRB'), ('to', 'TO'), ('swim', 'VB')])
('tags -> ', '     (and->CC) (do->VB) (you->PRP) (know->VB) (how->WRB) (to->TO) (swim->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('but', 'CC'), ('sandy', 'JJ'), ('do', 'VBP')])
('tags -> ', '     (but->CC) (sandy->JJ) (do->VBP) ')
('tags initial-> ', [('but', 'CC'), ('sandy', 'NN'), ('does', 'VBZ')])
('tags -> ', '     (but->CC) (sandy->NN) (does->VBZ) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('do', 'VBP'), ('you', 'PRP'), ('wear', 'VB'), ('on', 'IN'), ('your', 'PRP$'), ('arms', 'NNS')])
('tags -> ', '     (what->WP) (do->VBP) (you->PRP) (wear->VB) (on->IN) (your->PRP$) (arms->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP')])
('tags -> ', '     (i->JJ) (don->VBP) (t->NN) (know->VBP) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (hear->VB) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
water
water water 18
[('water', 'NN'), ('wings', 'NNS')]
['water']
('tags initial-> ', [('water', 'NN'), ('wings', 'NNS')])
('tags -> ', '     (water->NN) (wings->NNS) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB'), ('out', 'RP'), ('in', 'IN'), ('the', 'DT'), ('yard', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) (out->RP) (in->IN) (the->DT) (yard->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('do', 'VBP'), ('nothing', 'NN')])
('tags -> ', '     (i->NN) (didn->NN) (t->NN) (do->VBP) (nothing->NN) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('play', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (play->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'JJ'), ('played', 'VBD'), ('in', 'IN'), ('daddy', 'JJ'), ('s', 'JJ'), ('pool', 'NN')])
('tags -> ', '     (i->JJ) (played->VBD) (in->IN) (daddy->JJ) (s->JJ) (pool->NN) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('played', 'VBP'), ('in', 'IN'), ('daddy', 'JJ'), ('s', 'NN'), ('big', 'JJ'), ('pool', 'NN')])
('tags -> ', '     (you->PRP) (played->VBP) (in->IN) (daddy->JJ) (s->NN) (big->JJ) (pool->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('played', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('huh', 'NN'), ('daddy', 'NN')])
('tags -> ', '     (i->JJ) (played->VBN) (in->IN) (the->DT) (pool->NN) (huh->NN) (daddy->NN) ')
('tags initial-> ', [('mhm', 'NN')])
('tags -> ', '     (mhm->NN) ')
candidates to check:
2
('tags initial-> ', [('i', 'JJ'), ('played', 'VBN'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('huh', 'NN'), ('daddy', 'NN')])
('tags -> ', '     (i->JJ) (played->VBN) (in->IN) (the->DT) (pool->NN) (huh->NN) (daddy->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('play', 'VB')])
('tags -> ', '     (and->CC) (what->WP) (what->WP) (did->VBD) (you->PRP) (play->VB) ')
('tags initial-> ', [('uh', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (uh->NN) (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
1
('tags initial-> ', [('alley', 'NN')])
('tags -> ', '     (alley->NN) ')
('tags initial-> ', [('olly', 'RB')])
('tags -> ', '     (olly->RB) ')
('tags initial-> ', [('uhhuh', 'NN')])
('tags -> ', '     (uhhuh->NN) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('olly', 'RB')])
('tags -> ', '     (what->WP) (s->VBD) (olly->RB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) (hear->VB) (you->PRP) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBD'), ('an', 'DT'), ('alligator', 'NN')])
('tags -> ', '     (it->PRP) (s->VBD) (an->DT) (alligator->NN) ')
candidates to check:
1
('tags initial-> ', [('oh', 'IN'), ('it', 'PRP'), ('s', 'VBD'), ('an', 'DT'), ('alligator', 'NN')])
('tags -> ', '     (oh->IN) (it->PRP) (s->VBD) (an->DT) (alligator->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB'), ('did', 'VBD'), ('you', 'PRP'), ('play', 'VB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) (did->VBD) (you->PRP) (play->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (what->WP) (is->VBZ) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('nanny', 'JJ'), ('n', 'NN')])
('tags -> ', '     (it->PRP) (s->VBZ) (a->DT) (nanny->JJ) (n->NN) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('it', 'PRP'), ('it', 'PRP'), ('s', 'VBZ'), ('a', 'DT'), ('bunny', 'NN')])
('tags -> ', '     (it->PRP) (it->PRP) (it->PRP) (s->VBZ) (a->DT) (bunny->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('bunny', 'NN')])
('tags -> ', '     (a->DT) (bunny->NN) ')
('tags initial-> ', [('a', 'DT'), ('bunny', 'NN'), ('s', 'NN'), ('out', 'IN'), ('there', 'RB')])
('tags -> ', '     (a->DT) (bunny->NN) (s->NN) (out->IN) (there->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
descended from food: [['N'], 'supper', 44, 50]
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('go', 'VB'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('after', 'IN'), ('supper', 'NN'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (are->VBP) (you->PRP) (going->VBG) (to->TO) (go->VB) (in->IN) (the->DT) (pool->NN) (after->IN) (supper->NN) (with->IN) (me->PRP) ')
candidates to check:
1
('tags initial-> ', [('the', 'DT'), ('pool', 'NN')])
('tags -> ', '     (the->DT) (pool->NN) ')
candidates to check:
1
descended from food: [['N'], 'supper', 26, 32]
('tags initial-> ', [('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('come', 'VBP'), ('for', 'IN'), ('supper', 'JJR'), ('xxx', 'NN')])
('tags -> ', '     (didn->NN) (t->NN) (you->PRP) (come->VBP) (for->IN) (supper->JJR) (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'supper', 27, 33]
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('come', 'NN'), ('for', 'IN'), ('supper', 'NN')])
('tags -> ', '     (no->DT) (i->NN) (didn->VBP) (t->NN) (come->NN) (for->IN) (supper->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
3
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('do', 'VBP'), ('those', 'DT'), ('things', 'NNS'), ('last', 'JJ'), ('night', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (do->VBP) (those->DT) (things->NNS) (last->JJ) (night->NN) ')
('tags initial-> ', [('i', 'NN'), ('started', 'VBD'), ('th', 'CD'), ('em', 'NN')])
('tags -> ', '     (i->NN) (started->VBD) (th->CD) (em->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('where', 'WRB'), ('where', 'WRB'), ('mommy', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB')])
('tags -> ', '     (where->WRB) (where->WRB) (mommy->NN) (gon->NN) (na->TO) (go->VB) ')
candidates to check:
1
('tags initial-> ', [('out', 'IN'), ('side', 'NN')])
('tags -> ', '     (out->IN) (side->NN) ')
candidates to check:
1
('tags initial-> ', [('she', 'PRP'), ('s', 'VBD'), ('making', 'VBG'), ('the', 'DT'), ('dishes', 'NNS')])
('tags -> ', '     (she->PRP) (s->VBD) (making->VBG) (the->DT) (dishes->NNS) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
3
('tags initial-> ', [('daddy', 'JJ'), ('s', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('take', 'VB'), ('you', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('while', 'IN'), ('mama', 'NN'), ('does', 'VBZ'), ('the', 'DT'), ('dishes', 'NNS')])
('tags -> ', '     (daddy->JJ) (s->NN) (gon->NN) (na->TO) (take->VB) (you->PRP) (in->IN) (the->DT) (pool->NN) (while->IN) (mama->NN) (does->VBZ) (the->DT) (dishes->NNS) ')
candidates to check:
1
('tags initial-> ', [('aren', 'NNS'), ('t', 'VBP'), ('you', 'PRP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN')])
('tags -> ', '     (aren->NNS) (t->VBP) (you->PRP) (gon->VB) (na->TO) (go->VB) (in->IN) (the->DT) (pool->NN) ')
('tags initial-> ', [('maybe', 'RB')])
('tags -> ', '     (maybe->RB) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('and', 'CC'), ('you', 'PRP'), ('dunk', 'VBP')])
('tags -> ', '     (and->CC) (you->PRP) (and->CC) (you->PRP) (dunk->VBP) ')
candidates to check:
1
('tags initial-> ', [('xxx', 'NNS'), ('dunk', 'NN')])
('tags -> ', '     (xxx->NNS) (dunk->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('will', 'MD'), ('you', 'PRP'), ('dunk', 'VB'), ('with', 'IN'), ('me', 'PRP')])
('tags -> ', '     (will->MD) (you->PRP) (dunk->VB) (with->IN) (me->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('i', 'JJ'), ('dunk', 'NN'), ('with', 'IN'), ('you', 'PRP')])
('tags -> ', '     (i->JJ) (dunk->NN) (with->IN) (you->PRP) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'JJ'), ('na', 'TO'), ('swim', 'VB')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->JJ) (na->TO) (swim->VB) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('catch', 'VB'), ('me', 'PRP')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (you->PRP) (can->MD) (t->VB) (catch->VB) (me->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
4
('tags initial-> ', [('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('swim', 'VB'), ('xxx', 'JJ'), ('xxx', 'NNS'), ('can', 'MD'), ('t', 'VB'), ('catch', 'VB'), ('me', 'PRP'), ('daddy', 'JJ'), ('c', 'JJ'), ('ann', 'NN'), ('t', 'NN'), ('daddy', 'NN'), ('can', 'MD'), ('t', 'VB'), ('catch', 'VB'), ('me', 'PRP'), ('any', 'DT'), ('way', 'NN')])
('tags -> ', '     (i->JJ) (m->NN) (gon->NN) (na->TO) (swim->VB) (xxx->JJ) (xxx->NNS) (can->MD) (t->VB) (catch->VB) (me->PRP) (daddy->JJ) (c->JJ) (ann->NN) (t->NN) (daddy->NN) (can->MD) (t->VB) (catch->VB) (me->PRP) (any->DT) (way->NN) ')
('tags initial-> ', [('he', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('catch', 'VB'), ('you', 'PRP')])
('tags -> ', '     (he->PRP) (can->MD) (t->VB) (catch->VB) (you->PRP) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('he', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('he', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('do', 'VB'), ('that', 'DT')])
('tags -> ', '     (he->PRP) (can->MD) (t->VB) (he->PRP) (can->MD) (t->VB) (do->VB) (that->DT) ')
candidates to check:
2
('tags initial-> ', [('fast', 'RB'), ('enough', 'RB')])
('tags -> ', '     (fast->RB) (enough->RB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('say', 'VB'), ('it', 'PRP')])
('tags -> ', '     (say->VB) (it->PRP) ')
('tags initial-> ', [('he', 'PRP'), ('said', 'VBD'), ('faster', 'RBR'), ('faster', 'NN')])
('tags -> ', '     (he->PRP) (said->VBD) (faster->RBR) (faster->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('i', 'JJ'), ('m', 'NN'), ('telling', 'VBG'), ('him', 'PRP'), ('if', 'IN'), ('there', 'EX'), ('more', 'JJR'), ('xxx', 'NNS')])
('tags -> ', '     (and->CC) (and->CC) (i->JJ) (m->NN) (telling->VBG) (him->PRP) (if->IN) (there->EX) (more->JJR) (xxx->NNS) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
4
('tags initial-> ', [('did', 'VBD'), ('did', 'VBD'), ('daddy', 'VB'), ('make', 'VB'), ('believe', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('the', 'DT'), ('shark', 'NN'), ('in', 'IN'), ('the', 'DT'), ('in', 'IN'), ('the', 'DT'), ('beg', 'NN'), ('inning', 'VBG'), ('don', 'JJ'), ('t', 'NN'), ('touch', 'NN'), ('that', 'IN')])
('tags -> ', '     (did->VBD) (did->VBD) (daddy->VB) (make->VB) (believe->NN) (he->PRP) (was->VBD) (the->DT) (shark->NN) (in->IN) (the->DT) (in->IN) (the->DT) (beg->NN) (inning->VBG) (don->JJ) (t->NN) (touch->NN) (that->IN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('touch', 'NN'), ('it', 'PRP')])
('tags -> ', '     (don->NN) (t->NN) (touch->NN) (it->PRP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('because', 'IN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('have', 'VB'), ('that', 'DT'), ('on', 'IN')])
('tags -> ', '     (because->IN) (i->NNS) (have->VBP) (to->TO) (have->VB) (that->DT) (on->IN) ')
('tags initial-> ', [('no', 'DT'), ('don', 'NN'), ('t', 'RB'), ('touch', 'VB'), ('it', 'PRP')])
('tags -> ', '     (no->DT) (don->NN) (t->RB) (touch->VB) (it->PRP) ')
('tags initial-> ', [('i', 'NN'), ('i', 'NN')])
('tags -> ', '     (i->NN) (i->NN) ')
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('see', 'VB'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (want->VBP) (to->TO) (see->VB) (it->PRP) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('see', 'VB'), ('it', 'PRP')])
('tags -> ', '     (you->PRP) (can->MD) (see->VB) (it->PRP) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB')])
('tags -> ', '     (no->DT) (i->NN) (can->MD) (t->VB) ')
('tags initial-> ', [('chi', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('touch', 'VB'), ('this', 'DT')])
('tags -> ', '     (chi->NN) (you->PRP) (can->MD) (t->VB) (touch->VB) (this->DT) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP')])
('tags -> ', '     (i->NN) (xxx->VBP) ')
('tags initial-> ', [('listen', 'NN')])
('tags -> ', '     (listen->NN) ')
('tags initial-> ', [('listen', 'NN')])
('tags -> ', '     (listen->NN) ')
candidates to check:
1
('tags initial-> ', [('relax', 'NN'), ('and', 'CC'), ('then', 'RB'), ('after', 'IN'), ('mama', 'NN'), ('will', 'MD'), ('play', 'VB'), ('it', 'PRP'), ('for', 'IN'), ('you', 'PRP'), ('after', 'IN'), ('okay', 'NN')])
('tags -> ', '     (relax->NN) (and->CC) (then->RB) (after->IN) (mama->NN) (will->MD) (play->VB) (it->PRP) (for->IN) (you->PRP) (after->IN) (okay->NN) ')
('tags initial-> ', [('and', 'CC'), ('you', 'PRP'), ('can', 'MD'), ('hear', 'VB'), ('you', 'PRP'), ('on', 'IN'), ('it', 'PRP')])
('tags -> ', '     (and->CC) (you->PRP) (can->MD) (hear->VB) (you->PRP) (on->IN) (it->PRP) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('me', 'PRP'), ('on', 'IN'), ('it', 'PRP')])
('tags -> ', '     (no->DT) (i->NN) (can->MD) (t->VB) (hear->VB) (me->PRP) (on->IN) (it->PRP) ')
('tags initial-> ', [('yes', 'NNS'), ('it', 'PRP'), ('is', 'VBZ'), ('you', 'PRP'), ('wait', 'VBP'), ('and', 'CC'), ('see', 'VBP')])
('tags -> ', '     (yes->NNS) (it->PRP) (is->VBZ) (you->PRP) (wait->VBP) (and->CC) (see->VBP) ')
candidates to check:
2
('tags initial-> ', [('well', 'RB'), ('are', 'VBP'), ('you', 'PRP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('with', 'IN'), ('daddy', 'NN'), ('and', 'CC'), ('me', 'PRP'), ('after', 'IN')])
('tags -> ', '     (well->RB) (are->VBP) (you->PRP) (gon->VB) (na->TO) (go->VB) (in->IN) (the->DT) (pool->NN) (with->IN) (daddy->NN) (and->CC) (me->PRP) (after->IN) ')
('tags initial-> ', [('well', 'RB'), ('well', 'RB'), ('well', 'RB'), ('xxx', 'VB'), ('i', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (well->RB) (well->RB) (well->RB) (xxx->VB) (i->NN) (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('xxx', 'VB'), ('me', 'PRP'), ('and', 'CC'), ('daddy', 'VB'), ('in', 'IN'), ('with', 'IN'), ('daddy', 'NN'), ('go', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('go', 'VB'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN')])
('tags -> ', '     (xxx->VB) (me->PRP) (and->CC) (daddy->VB) (in->IN) (with->IN) (daddy->NN) (go->VBP) (gon->NN) (na->TO) (go->VB) (in->IN) (the->DT) (pool->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
candidates to check:
3
descended from food: [['N'], 'lunch', 37, 42]
('tags initial-> ', [('um', 'JJ'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('for', 'IN'), ('lunch', 'NN'), ('today', 'NN')])
('tags -> ', '     (um->JJ) (what->WP) (did->VBD) (you->PRP) (have->VBP) (for->IN) (lunch->NN) (today->NN) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (nothing->NN) (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('nothing', 'NN')])
('tags -> ', '     (nothing->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('didn', 'NN'), ('t', 'VBP'), ('feed', 'NN'), ('you', 'PRP')])
('tags -> ', '     (mommy->NN) (didn->NN) (t->VBP) (feed->NN) (you->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'soup', 80, 84]
soup
soup soup 72
[('i', 'JJ'), ('think', 'VBP'), ('i', 'IN'), ('i', 'NN'), ('i', 'VBP'), ('had', 'VBD'), ('i', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('bowl', 'NN'), ('of', 'IN'), ('soup', 'NN')]
['soup']
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('i', 'IN'), ('i', 'NN'), ('i', 'VBP'), ('had', 'VBD'), ('i', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('bowl', 'NN'), ('of', 'IN'), ('soup', 'NN')])
('tags -> ', '     (i->JJ) (think->VBP) (i->IN) (i->NN) (i->VBP) (had->VBD) (i->NN) (i->NN) (had->VBD) (a->DT) (bowl->NN) (of->IN) (soup->NN) ')
candidates to check:
2
descended from food: [['N'], 'soup', 35, 39]
soup
soup soup 72
[('no', 'DT'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('bowl', 'NN'), ('of', 'IN'), ('soup', 'NN'), ('you', 'PRP'), ('had', 'VBD'), ('what', 'WP')]
['soup']
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('bowl', 'NN'), ('of', 'IN'), ('soup', 'NN'), ('you', 'PRP'), ('had', 'VBD'), ('what', 'WP')])
('tags -> ', '     (no->DT) (you->PRP) (didn->VBP) (t->NNS) (have->VBP) (a->DT) (bowl->NN) (of->IN) (soup->NN) (you->PRP) (had->VBD) (what->WP) ')
candidates to check:
1
('tags initial-> ', [('tuna', 'NN')])
('tags -> ', '     (tuna->NN) ')
('tags initial-> ', [('huh', 'NN')])
('tags -> ', '     (huh->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('had', 'VBD'), ('your', 'PRP$'), ('favorite', 'JJ')])
('tags -> ', '     (you->PRP) (had->VBD) (your->PRP$) (favorite->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
3
descended from food: [['N'], 'lunch', 28, 33]
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('for', 'IN'), ('lunch', 'NN'), ('today', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (have->VBP) (for->IN) (lunch->NN) (today->NN) ')
candidates to check:
1
tuna fish
tuna fish tuna fish 130
[('um', 'JJ'), ('tuna', 'NN'), ('fish', 'NN')]
['tuna', 'fish']
fish
fish fish 305
[('um', 'JJ'), ('tuna', 'NN'), ('fish', 'NN')]
['fish']
('tags initial-> ', [('um', 'JJ'), ('tuna', 'NN'), ('fish', 'NN')])
('tags -> ', '     (um->JJ) (tuna->NN) (fish->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) ')
candidates to check:
1
descended from food: [['N'], 'bread', 29, 34]
bread
bread bread 186
[('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('bread', 'NN')]
['bread']
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('bread', 'NN')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VBP) (it->PRP) (in->IN) (the->DT) (bread->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
descended from food: [['N'], 'milk', 6, 10]
milk
milk milk 46
[('milk', 'NN')]
['milk']
('tags initial-> ', [('milk', 'NN')])
('tags -> ', '     (milk->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('how', 'WRB'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('it', 'PRP')])
('tags -> ', '     (how->WRB) (did->VBD) (you->PRP) (have->VBP) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('plate', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (plate->NN) ')
candidates to check:
1
('tags initial-> ', [('on', 'IN'), ('the', 'DT'), ('plate', 'NN')])
('tags -> ', '     (on->IN) (the->DT) (plate->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
descended from food: [['N'], 'honey', 6, 11]
honey
honey honey 304
[('honey', 'NN')]
['honey']
('tags initial-> ', [('honey', 'NN')])
('tags -> ', '     (honey->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('else', 'RB'), ('did', 'VBD'), ('i', 'VB'), ('give', 'VB'), ('you', 'PRP')])
('tags -> ', '     (and->CC) (what->WP) (else->RB) (did->VBD) (i->VB) (give->VB) (you->PRP) ')
('tags initial-> ', [('please', 'VB'), ('don', 'JJ'), ('t', 'NN'), ('give', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('star', 'VB')])
('tags -> ', '     (please->VB) (don->JJ) (t->NN) (give->VB) (it->PRP) (to->TO) (star->VB) ')
candidates to check:
1
descended from food: [['N'], 'dessert', 29, 36]
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('for', 'IN'), ('dessert', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (have->VBP) (for->IN) (dessert->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('i', 'NN'), ('xxx', 'VBP'), ('play', 'NN'), ('with', 'IN'), ('it', 'PRP')])
('tags -> ', '     (i->NN) (xxx->VBP) (play->NN) (with->IN) (it->PRP) ')
('tags initial-> ', [('say', 'VB'), ('what', 'WP')])
('tags -> ', '     (say->VB) (what->WP) ')
candidates to check:
2
('tags initial-> ', [('ice', 'NN'), ('cone', 'NN')])
('tags -> ', '     (ice->NN) (cone->NN) ')
candidates to check:
6
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('tags initial-> ', [('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')])
('tags -> ', '     (ice->NN) (cream->NN) (cone->NN) ')
candidates to check:
6
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('tags initial-> ', [('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')])
('tags -> ', '     (ice->NN) (cream->NN) (cone->NN) ')
('tags initial-> ', [('i', 'JJ'), ('bet', 'VBD'), ('that', 'IN'), ('was', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (i->JJ) (bet->VBD) (that->IN) (was->VBD) (good->JJ) ')
('tags initial-> ', [('mm', 'NN')])
('tags -> ', '     (mm->NN) ')
('tags initial-> ', [('was', 'VBD'), ('good', 'JJ')])
('tags -> ', '     (was->VBD) (good->JJ) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('know', 'VBP'), ('what', 'WP'), ('chi', 'JJ'), ('likes', 'VBZ'), ('dad', 'NN')])
('tags -> ', '     (you->PRP) (know->VBP) (what->WP) (chi->JJ) (likes->VBZ) (dad->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
corn
corn corn 419
[('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('tags initial-> ', [('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')])
('tags -> ', '     (corn->NN) (on->IN) (the->DT) (cob->NN) ')
('tags initial-> ', [('oh', 'UH'), ('ho', 'NN'), ('ho', 'NN')])
('tags -> ', '     (oh->UH) (ho->NN) (ho->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('pretty', 'RB'), ('soon', 'RB'), ('the', 'DT'), ('farm', 'NN'), ('will', 'MD'), ('have', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('we', 'PRP'), ('ll', 'VBP'), ('go', 'VB'), ('up', 'RP'), ('and', 'CC'), ('get', 'VB'), ('it', 'PRP')])
('tags -> ', '     (pretty->RB) (soon->RB) (the->DT) (farm->NN) (will->MD) (have->VB) (it->PRP) (and->CC) (we->PRP) (ll->VBP) (go->VB) (up->RP) (and->CC) (get->VB) (it->PRP) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('where', 'WRB'), ('it', 'PRP'), ('tastes', 'VBZ'), ('the', 'DT'), ('best', 'JJS')])
('tags -> ', '     (be->VB) (cause->NN) (that->IN) (s->VBZ) (where->WRB) (it->PRP) (tastes->VBZ) (the->DT) (best->JJS) ')
('tags initial-> ', [('hunhunh', 'NN'), ('xxx', 'NN')])
('tags -> ', '     (hunhunh->NN) (xxx->NN) ')
candidates to check:
2
corn
corn corn 419
[('no', 'DT'), ('the', 'DT'), ('farm', 'NN'), ('is', 'VBZ'), ('where', 'WRB'), ('they', 'PRP'), ('grow', 'VBP'), ('the', 'DT'), ('corn', 'NN')]
['corn']
('tags initial-> ', [('no', 'DT'), ('the', 'DT'), ('farm', 'NN'), ('is', 'VBZ'), ('where', 'WRB'), ('they', 'PRP'), ('grow', 'VBP'), ('the', 'DT'), ('corn', 'NN')])
('tags -> ', '     (no->DT) (the->DT) (farm->NN) (is->VBZ) (where->WRB) (they->PRP) (grow->VBP) (the->DT) (corn->NN) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
3
seeds
seeds seeds 592
[('because', 'IN'), ('they', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('the', 'DT'), ('seeds', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ground', 'NN'), ('and', 'CC'), ('the', 'DT'), ('corn', 'NN'), ('comes', 'VBZ'), ('up', 'RP')]
['seeds']
corn
corn corn 419
[('because', 'IN'), ('they', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('the', 'DT'), ('seeds', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ground', 'NN'), ('and', 'CC'), ('the', 'DT'), ('corn', 'NN'), ('comes', 'VBZ'), ('up', 'RP')]
['corn']
('tags initial-> ', [('because', 'IN'), ('they', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('the', 'DT'), ('seeds', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ground', 'NN'), ('and', 'CC'), ('the', 'DT'), ('corn', 'NN'), ('comes', 'VBZ'), ('up', 'RP')])
('tags -> ', '     (because->IN) (they->PRP) (put->VBD) (it->PRP) (the->DT) (seeds->NNS) (in->IN) (the->DT) (ground->NN) (and->CC) (the->DT) (corn->NN) (comes->VBZ) (up->RP) ')
candidates to check:
1
seeds
seeds seeds 592
[('but', 'CC'), ('how', 'WRB'), ('seeds', 'NNS'), ('come', 'VBP'), ('up', 'RP')]
['seeds']
('tags initial-> ', [('but', 'CC'), ('how', 'WRB'), ('seeds', 'NNS'), ('come', 'VBP'), ('up', 'RP')])
('tags -> ', '     (but->CC) (how->WRB) (seeds->NNS) (come->VBP) (up->RP) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
seeds
seeds seeds 592
[('how', 'WRB'), ('seeds', 'NNS'), ('come', 'VBP'), ('up', 'RP')]
['seeds']
('tags initial-> ', [('how', 'WRB'), ('seeds', 'NNS'), ('come', 'VBP'), ('up', 'RP')])
('tags -> ', '     (how->WRB) (seeds->NNS) (come->VBP) (up->RP) ')
('tags initial-> ', [('xxx', 'JJ'), ('xxx', 'NNP'), ('xxx', 'NNP'), ('and', 'CC'), ('i', 'NN'), ('and', 'CC'), ('xxx', 'NNP'), ('xxx', 'NNP'), ('xxx', 'NNP'), ('and', 'CC'), ('xxx', 'VB')])
('tags -> ', '     (xxx->JJ) (xxx->NNP) (xxx->NNP) (and->CC) (i->NN) (and->CC) (xxx->NNP) (xxx->NNP) (xxx->NNP) (and->CC) (xxx->VB) ')
('tags initial-> ', [('oh', 'UH'), ('wow', 'NN')])
('tags -> ', '     (oh->UH) (wow->NN) ')
candidates to check:
6
('tags initial-> ', [('tell', 'VB'), ('auntie', 'RP'), ('what', 'WP'), ('you', 'PRP'), ('did', 'VBD'), ('today', 'NN'), ('with', 'IN'), ('daddy', 'NN'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN')])
('tags -> ', '     (tell->VB) (auntie->RP) (what->WP) (you->PRP) (did->VBD) (today->NN) (with->IN) (daddy->NN) (in->IN) (the->DT) (pool->NN) ')
('tags initial-> ', [('know', 'VB'), ('what', 'WP'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (know->VB) (what->WP) (i->NN) (did->VBD) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (did->VBD) (you->PRP) (do->VB) ')
candidates to check:
3
('tags initial-> ', [('what', 'WP'), ('what', 'WP'), ('did', 'VBD'), ('daddy', 'NN'), ('was', 'VBD'), ('standing', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('were', 'VBD'), ('standing', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('deck', 'NN'), ('and', 'CC'), ('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('do', 'VB')])
('tags -> ', '     (what->WP) (what->WP) (did->VBD) (daddy->NN) (was->VBD) (standing->VBG) (in->IN) (the->DT) (pool->NN) (and->CC) (you->PRP) (were->VBD) (standing->VBG) (on->IN) (the->DT) (deck->NN) (and->CC) (what->WP) (did->VBD) (you->PRP) (do->VB) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('we', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('hear', 'VB'), ('you', 'PRP'), ('whis', 'VBP'), ('per', 'IN'), ('if', 'IN'), ('you', 'PRP'), ('whisper', 'VBP')])
('tags -> ', '     (we->PRP) (can->MD) (t->VB) (hear->VB) (you->PRP) (whis->VBP) (per->IN) (if->IN) (you->PRP) (whisper->VBP) ')
('tags initial-> ', [('say', 'VB'), ('it', 'PRP'), ('out', 'RP'), ('loud', 'JJ')])
('tags -> ', '     (say->VB) (it->PRP) (out->RP) (loud->JJ) ')
candidates to check:
4
('tags initial-> ', [('is', 'VBZ'), ('is', 'VBZ'), ('is', 'VBZ'), ('daddy', 'JJ'), ('xxx', 'NN')])
('tags -> ', '     (is->VBZ) (is->VBZ) (is->VBZ) (daddy->JJ) (xxx->NN) ')
('tags initial-> ', [('if', 'IN'), ('if', 'IN'), ('if', 'IN'), ('i', 'NN'), ('slipped', 'VBD')])
('tags -> ', '     (if->IN) (if->IN) (if->IN) (i->NN) (slipped->VBD) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('daddy', 'VB'), ('catch', 'NN'), ('you', 'PRP')])
('tags -> ', '     (did->VBD) (daddy->VB) (catch->NN) (you->PRP) ')
('tags initial-> ', [('yeah', 'NN'), ('yeah', 'NN'), ('yeah', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (yeah->NN) (yeah->NN) (yeah->NN) (yeah->NN) ')
('tags initial-> ', [('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('i', 'VB'), ('didn', 'VBP'), ('t', 'JJ'), ('dunk', 'NN')])
('tags -> ', '     (and->CC) (and->CC) (and->CC) (i->VB) (didn->VBP) (t->JJ) (dunk->NN) ')
('tags initial-> ', [('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('dunk', 'NN')])
('tags -> ', '     (you->PRP) (didn->VBP) (t->JJ) (dunk->NN) ')
candidates to check:
2
('tags initial-> ', [('good', 'JJ'), ('girl', 'NN')])
('tags -> ', '     (good->JJ) (girl->NN) ')
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('didn', 'VBP'), ('t', 'NN'), ('slip', 'NN')])
('tags -> ', '     (i->NN) (i->VBP) (didn->VBP) (t->NN) (slip->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('afraid', 'JJ'), ('to', 'TO'), ('dunk', 'VB')])
('tags -> ', '     (are->VBP) (you->PRP) (afraid->JJ) (to->TO) (dunk->VB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
2
('tags initial-> ', [('because', 'IN'), ('i', 'JJ'), ('m', 'VBP'), ('a', 'DT'), ('big', 'JJ'), ('girl', 'NN')])
('tags -> ', '     (because->IN) (i->JJ) (m->VBP) (a->DT) (big->JJ) (girl->NN) ')
candidates to check:
2
('tags initial-> ', [('oh', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('big', 'JJ'), ('girl', 'NN')])
('tags -> ', '     (oh->IN) (you->PRP) (re->VBP) (a->DT) (big->JJ) (girl->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
descended from food: [['N'], 'meat', 11, 15]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df611758>)
[('more', 'RBR'), ('meat', 'NN')]
['meat']
('tags initial-> ', [('more', 'RBR'), ('meat', 'NN')])
('tags -> ', '     (more->RBR) (meat->NN) ')
candidates to check:
2
descended from food: [['N'], 'meat', 50, 54]
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df611998>)
[('you', 'PRP'), ('eat', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('that', 'DT'), ('and', 'CC'), ('i', 'VB'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('more', 'JJR'), ('meat', 'NN'), ('donna', 'NN')]
['meat']
('tags initial-> ', [('you', 'PRP'), ('eat', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('that', 'DT'), ('and', 'CC'), ('i', 'VB'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('more', 'JJR'), ('meat', 'NN'), ('donna', 'NN')])
('tags -> ', '     (you->PRP) (eat->VBP) (some->DT) (of->IN) (that->DT) (and->CC) (i->VB) (ll->VBP) (give->VB) (you->PRP) (more->JJR) (meat->NN) (donna->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 16, 23]
chicken
chicken chicken 234
[('some', 'DT'), ('more', 'RBR'), ('chicken', 'NNS')]
['chicken']
('tags initial-> ', [('some', 'DT'), ('more', 'RBR'), ('chicken', 'NNS')])
('tags -> ', '     (some->DT) (more->RBR) (chicken->NNS) ')
candidates to check:
1
descended from food: [['N'], 'chicken', 6, 13]
chicken
chicken chicken 234
[('chicken', 'NN')]
['chicken']
('tags initial-> ', [('chicken', 'NN')])
('tags -> ', '     (chicken->NN) ')
candidates to check:
2
descended from food: [['N'], 'chicken', 17, 24]
descended from food: [['N'], 'steak', 30, 35]
chicken
chicken chicken 234
[('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('chicken', 'VB'), ('it', 'PRP'), ('s', 'JJ'), ('steak', 'NN')]
['chicken']
('tags initial-> ', [('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('chicken', 'VB'), ('it', 'PRP'), ('s', 'JJ'), ('steak', 'NN')])
('tags -> ', '     (that->DT) (s->VBZ) (not->RB) (chicken->VB) (it->PRP) (s->JJ) (steak->NN) ')
('tags initial-> ', [('xxx', 'JJ'), ('xxx', 'NNP'), ('xxx', 'NN')])
('tags -> ', '     (xxx->JJ) (xxx->NNP) (xxx->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('so', 'RB'), ('what', 'WP'), ('are', 'VBP'), ('you', 'PRP'), ('going', 'VBG'), ('to', 'TO'), ('do', 'VB'), ('tonight', 'RP'), ('when', 'WRB'), ('you', 'PRP'), ('go', 'VBP'), ('in', 'IN'), ('the', 'DT'), ('pool', 'NN'), ('with', 'IN'), ('daddy', 'NN')])
('tags -> ', '     (so->RB) (what->WP) (are->VBP) (you->PRP) (going->VBG) (to->TO) (do->VB) (tonight->RP) (when->WRB) (you->PRP) (go->VBP) (in->IN) (the->DT) (pool->NN) (with->IN) (daddy->NN) ')
candidates to check:
1
('tags initial-> ', [('i', 'NN'), ('i', 'VBP'), ('gon', 'VBP'), ('na', 'TO'), ('dunk', 'VB')])
('tags -> ', '     (i->NN) (i->VBP) (gon->VBP) (na->TO) (dunk->VB) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('dunk', 'VB')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (dunk->VB) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('m', 'VBD'), ('not', 'RB')])
('tags -> ', '     (no->DT) (i->NN) (m->VBD) (not->RB) ')
candidates to check:
2
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('gon', 'JJ'), ('na', 'TO'), ('dunk', 'VB'), ('daddy', 'NN')])
('tags -> ', '     (are->VBP) (you->PRP) (gon->JJ) (na->TO) (dunk->VB) (daddy->NN) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) ')
('tags initial-> ', [('i', 'NN'), ('can', 'MD'), ('t', 'VB')])
('tags -> ', '     (i->NN) (can->MD) (t->VB) ')
('tags initial-> ', [('why', 'WRB')])
('tags -> ', '     (why->WRB) ')
candidates to check:
1
('tags initial-> ', [('be', 'VB'), ('cause', 'NN'), ('be', 'VB'), ('cause', 'NN'), ('because', 'IN'), ('daddy', 'NN'), ('will', 'MD'), ('slip', 'VB'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('ll', 'VBP'), ('dunk', 'NN')])
('tags -> ', '     (be->VB) (cause->NN) (be->VB) (cause->NN) (because->IN) (daddy->NN) (will->MD) (slip->VB) (and->CC) (then->RB) (i->VB) (ll->VBP) (dunk->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('daddy', 'NN'), ('will', 'MD'), ('slip', 'VB'), ('and', 'CC'), ('you', 'PRP'), ('ll', 'VBP'), ('dunk', 'VB')])
('tags -> ', '     (daddy->NN) (will->MD) (slip->VB) (and->CC) (you->PRP) (ll->VBP) (dunk->VB) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('oh', 'NN')])
('tags -> ', '     (oh->NN) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN'), ('xxx', 'NNS'), ('me', 'PRP'), ('up', 'RP')])
('tags -> ', '     (mommy->NN) (xxx->NNS) (me->PRP) (up->RP) ')
candidates to check:
1
('tags initial-> ', [('mommy', 'NN')])
('tags -> ', '     (mommy->NN) ')
('tags initial-> ', [('star', 'NN'), ('get', 'VB'), ('out', 'IN'), ('of', 'IN'), ('here', 'RB')])
('tags -> ', '     (star->NN) (get->VB) (out->IN) (of->IN) (here->RB) ')
('tags initial-> ', [('come', 'NN'), ('here', 'RB')])
('tags -> ', '     (come->NN) (here->RB) ')
('tags initial-> ', [('come', 'NN'), ('here', 'RB')])
('tags -> ', '     (come->NN) (here->RB) ')
('tags initial-> ', [('star', 'NN')])
('tags -> ', '     (star->NN) ')
('tags initial-> ', [('star', 'NN')])
('tags -> ', '     (star->NN) ')
candidates to check:
1
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('fireworks', 'NNS'), ('when', 'WRB'), ('we', 'PRP'), ('saw', 'VBD'), ('them', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (the->DT) (fireworks->NNS) (when->WRB) (we->PRP) (saw->VBD) (them->PRP) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('wan', 'NN'), ('t', 'NN'), ('t', 'VB'), ('a', 'DT'), ('go', 'NN'), ('back', 'RB'), ('next', 'JJ'), ('year', 'NN')])
('tags -> ', '     (wan->NN) (t->NN) (t->VB) (a->DT) (go->NN) (back->RB) (next->JJ) (year->NN) ')
candidates to check:
2
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('tomorrow', 'NN')])
('tags -> ', '     (no->DT) (i->NN) (want->VBP) (to->TO) (go->VB) (tomorrow->NN) ')
candidates to check:
1
('tags initial-> ', [('tomorrow', 'NN')])
('tags -> ', '     (tomorrow->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
3
('tags initial-> ', [('well', 'RB'), ('we', 'PRP'), ('got', 'VBD'), ('a', 'DT'), ('long', 'JJ'), ('time', 'NN'), ('to', 'TO'), ('wait', 'VB'), ('for', 'IN'), ('fireworks', 'NNS'), ('again', 'RB')])
('tags -> ', '     (well->RB) (we->PRP) (got->VBD) (a->DT) (long->JJ) (time->NN) (to->TO) (wait->VB) (for->IN) (fireworks->NNS) (again->RB) ')
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('like', 'IN'), ('them', 'PRP')])
('tags -> ', '     (did->VBD) (you->PRP) (like->IN) (them->PRP) ')
('tags initial-> ', [('yeah', 'NN'), ('but', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('afraid', 'JJ')])
('tags -> ', '     (yeah->NN) (but->CC) (i->NN) (was->VBD) (afraid->JJ) ')
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('weren', 'VBP'), ('t', 'NNS'), ('afraid', 'VBD')])
('tags -> ', '     (no->DT) (you->PRP) (weren->VBP) (t->NNS) (afraid->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
1
('tags initial-> ', [('what', 'WP'), ('did', 'VBD'), ('they', 'PRP'), ('do', 'VBP'), ('when', 'WRB'), ('they', 'PRP'), ('went', 'VBD'), ('up', 'RB'), ('in', 'IN'), ('the', 'DT'), ('sky', 'NN')])
('tags -> ', '     (what->WP) (did->VBD) (they->PRP) (do->VBP) (when->WRB) (they->PRP) (went->VBD) (up->RB) (in->IN) (the->DT) (sky->NN) ')
candidates to check:
1
('tags initial-> ', [('made', 'VBN'), ('a', 'DT'), ('boom', 'NN')])
('tags -> ', '     (made->VBN) (a->DT) (boom->NN) ')
('tags initial-> ', [('did', 'VBD'), ('they', 'PRP')])
('tags -> ', '     (did->VBD) (they->PRP) ')
candidates to check:
1
('tags initial-> ', [('and', 'CC'), ('what', 'WP'), ('colors', 'NNS'), ('was', 'VBD'), ('were', 'VBD'), ('there', 'RB')])
('tags -> ', '     (and->CC) (what->WP) (colors->NNS) (was->VBD) (were->VBD) (there->RB) ')
('tags initial-> ', [('blue', 'NN'), ('and', 'CC'), ('red', 'JJ')])
('tags -> ', '     (blue->NN) (and->CC) (red->JJ) ')
('tags initial-> ', [('blue', 'NN'), ('and', 'CC'), ('red', 'JJ'), ('and', 'CC'), ('what', 'WP'), ('else', 'RB')])
('tags -> ', '     (blue->NN) (and->CC) (red->JJ) (and->CC) (what->WP) (else->RB) ')
('tags initial-> ', [('green', 'JJ'), ('and', 'CC'), ('white', 'JJ')])
('tags -> ', '     (green->JJ) (and->CC) (white->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
2
('tags initial-> ', [('what', 'WDT'), ('was', 'VBD'), ('the', 'DT'), ('other', 'JJ'), ('colors', 'NNS')])
('tags -> ', '     (what->WDT) (was->VBD) (the->DT) (other->JJ) (colors->NNS) ')
('tags initial-> ', [('green', 'JJ')])
('tags -> ', '     (green->JJ) ')
('tags initial-> ', [('green', 'JJ')])
('tags -> ', '     (green->JJ) ')
('tags initial-> ', [('and', 'CC'), ('yellow', 'VB'), ('green', 'NN')])
('tags -> ', '     (and->CC) (yellow->VB) (green->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('purple', 'NN')])
('tags -> ', '     (purple->NN) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('there', 'EX'), ('was', 'VBD'), ('no', 'DT'), ('purple', 'NN')])
('tags -> ', '     (no->DT) (there->EX) (was->VBD) (no->DT) (purple->NN) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('purple', 'NN')])
('tags -> ', '     (no->DT) (purple->NN) ')
('tags initial-> ', [('was', 'VBD'), ('there', 'EX'), ('any', 'DT'), ('yellow', 'NN')])
('tags -> ', '     (was->VBD) (there->EX) (any->DT) (yellow->NN) ')
('tags initial-> ', [('um', 'JJ'), ('yeah', 'NN')])
('tags -> ', '     (um->JJ) (yeah->NN) ')
('tags initial-> ', [('um', 'JJ'), ('uhhuh', 'NN')])
('tags -> ', '     (um->JJ) (uhhuh->NN) ')
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('yellow', 'JJ')])
('tags -> ', '     (there->EX) (was->VBD) (yellow->JJ) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df626638>)
[('there', 'EX'), ('was', 'VBD'), ('orange', 'NN')]
['orange']
('tags initial-> ', [('there', 'EX'), ('was', 'VBD'), ('orange', 'NN')])
('tags -> ', '     (there->EX) (was->VBD) (orange->NN) ')
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5ea3b0>)
[('oh', 'IN'), ('there', 'EX'), ('was', 'VBD'), ('orange', 'NN')]
['orange']
('tags initial-> ', [('oh', 'IN'), ('there', 'EX'), ('was', 'VBD'), ('orange', 'NN')])
('tags -> ', '     (oh->IN) (there->EX) (was->VBD) (orange->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fc1df5ea560>)
[('oh', 'UH'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('see', 'VBP'), ('the', 'DT'), ('orange', 'NN')]
['orange']
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('see', 'VBP'), ('the', 'DT'), ('orange', 'NN')])
('tags -> ', '     (oh->UH) (i->NN) (didn->VBP) (t->NN) (see->VBP) (the->DT) (orange->NN) ')
('tags initial-> ', [('yes', 'RB'), ('you', 'PRP'), ('did', 'VBD')])
('tags -> ', '     (yes->RB) (you->PRP) (did->VBD) ')
('tags initial-> ', [('oh', 'UH'), ('i', 'NN'), ('did', 'VBD')])
('tags -> ', '     (oh->UH) (i->NN) (did->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
candidates to check:
2
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('pretty', 'NN'), ('colors', 'NNS')])
('tags -> ', '     (all->PDT) (the->DT) (pretty->NN) (colors->NNS) ')
candidates to check:
2
('tags initial-> ', [('all', 'PDT'), ('the', 'DT'), ('pretty', 'NN'), ('colors', 'NNS')])
('tags -> ', '     (all->PDT) (the->DT) (pretty->NN) (colors->NNS) ')
candidates to check:
3
('tags initial-> ', [('yeah', 'UH'), ('all', 'DT'), ('all', 'PDT'), ('the', 'DT'), ('pretty', 'JJ'), ('colors', 'NNS'), ('xxx', 'VBP'), ('pretty', 'JJ'), ('colors', 'NNS')])
('tags -> ', '     (yeah->UH) (all->DT) (all->PDT) (the->DT) (pretty->JJ) (colors->NNS) (xxx->VBP) (pretty->JJ) (colors->NNS) ')
candidates to check:
1
('tags initial-> ', [('colors', 'NNS')])
('tags -> ', '     (colors->NNS) ')
('tags initial-> ', [('all', 'DT'), ('around', 'IN'), ('xxx', 'NNS')])
('tags -> ', '     (all->DT) (around->IN) (xxx->NNS) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('silly', 'RB')])
('tags -> ', '     (you->PRP) (re->VBP) (silly->RB) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
1
descended from food: [['N'], 'dessert', 57, 64]
('tags initial-> ', [('if', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('all', 'PDT'), ('that', 'DT'), ('up', 'RP'), ('what', 'WP'), ('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('for', 'IN'), ('dessert', 'NN')])
('tags -> ', '     (if->IN) (you->PRP) (eat->VBP) (all->PDT) (that->DT) (up->RP) (what->WP) (would->MD) (you->PRP) (like->IN) (for->IN) (dessert->NN) ')
candidates to check:
6
cream
cream cream 72
[('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('tags initial-> ', [('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')])
('tags -> ', '     (um->JJ) (ice->NN) (cream->NN) (cone->NN) ')
candidates to check:
6
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('tags initial-> ', [('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')])
('tags -> ', '     (ice->NN) (cream->NN) (cone->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
6
cream
cream cream 72
[('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')]
['cream']
ice cream
ice cream ice cream 265
[('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')]
['ice', 'cream', 'cone']
('tags initial-> ', [('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')])
('tags -> ', '     (but->CC) (i->JJ) (don->VBP) (t->JJ) (want->VBP) (any->DT) (ice->NN) (cream->NN) (cone->NN) (now->RB) ')
candidates to check:
6
cream
cream cream 72
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('tags initial-> ', [('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')])
('tags -> ', '     (but->CC) (i->NN) (want->VBP) (an->DT) (ice->NN) (cream->NN) (cone->NN) ')
candidates to check:
1
('tags initial-> ', [('don', 'NN'), ('t', 'NN'), ('talk', 'NN'), ('with', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('full', 'JJ')])
('tags -> ', '     (don->NN) (t->NN) (talk->NN) (with->IN) (your->PRP$) (mouth->NN) (full->JJ) ')
candidates to check:
10
cream
cream cream 72
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')]
['cream']
ice cream
ice cream ice cream 265
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')]
['ice', 'cream']
ice cream cone
ice cream cone ice cream cone 354
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')]
['ice', 'cream', 'cone']
('tags initial-> ', [('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')])
('tags -> ', '     (mommy->NN) (i->NN) (want->VBP) (an->DT) (ice->NN) (cream->NN) (cone->NN) (tomorrow->NN) ')
candidates to check:
1
('tags initial-> ', [('tomorrow', 'NN')])
('tags -> ', '     (tomorrow->NN) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
candidates to check:
2
('tags initial-> ', [('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('enough', 'VBN'), ('to', 'TO'), ('eat', 'VB')])
('tags -> ', '     (did->VBD) (you->PRP) (have->VBP) (enough->VBN) (to->TO) (eat->VB) ')
('tags initial-> ', [('yes', 'NNS')])
('tags -> ', '     (yes->NNS) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('more', 'JJR'), ('cucumbers', 'NNS')])
('tags -> ', '     (you->PRP) (you->PRP) (want->VBP) (some->DT) (more->JJR) (cucumbers->NNS) ')
('tags initial-> ', [('um', 'JJ'), ('mhm', 'NN'), ('yeah', 'NN')])
('tags -> ', '     (um->JJ) (mhm->NN) (yeah->NN) ')
('tags initial-> ', [('what', 'WDT'), ('are', 'VBP'), ('these', 'DT')])
('tags -> ', '     (what->WDT) (are->VBP) (these->DT) ')
candidates to check:
3
('tags initial-> ', [('cucumbers', 'NNS')])
('tags -> ', '     (cucumbers->NNS) ')
('tags initial-> ', [('i', 'JJ'), ('think', 'VBP'), ('i', 'NNS'), ('can', 'MD'), ('get', 'VB'), ('th', 'JJ'), ('em', 'NN'), ('by', 'IN'), ('myself', 'PRP'), ('now', 'RB')])
('tags -> ', '     (i->JJ) (think->VBP) (i->NNS) (can->MD) (get->VB) (th->JJ) (em->NN) (by->IN) (myself->PRP) (now->RB) ')
('tags initial-> ', [('alright', 'NN')])
('tags -> ', '     (alright->NN) ')
('tags initial-> ', [('you', 'PRP'), ('can', 'MD'), ('take', 'VB'), ('th', 'JJ'), ('em', 'NN'), ('by', 'IN'), ('yourself', 'PRP')])
('tags -> ', '     (you->PRP) (can->MD) (take->VB) (th->JJ) (em->NN) (by->IN) (yourself->PRP) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
candidates to check:
1
('tags initial-> ', [('use', 'VB'), ('your', 'PRP$'), ('fork', 'NN')])
('tags -> ', '     (use->VB) (your->PRP$) (fork->NN) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('hungry', 'JJ'), ('again', 'RB')])
('tags -> ', '     (are->VBP) (you->PRP) (hungry->JJ) (again->RB) ')
('tags initial-> ', [('hunhunh', 'NN')])
('tags -> ', '     (hunhunh->NN) ')
('tags initial-> ', [('cucumbers', 'NNS'), ('chi', 'VBP')])
('tags -> ', '     (cucumbers->NNS) (chi->VBP) ')
('tags initial-> ', [('xxx', 'NN'), ('chi', 'NN')])
('tags -> ', '     (xxx->NN) (chi->NN) ')
candidates to check:
1
('tags initial-> ', [('cucumbers', 'NNS')])
('tags -> ', '     (cucumbers->NNS) ')
candidates to check:
1
('tags initial-> ', [('cucumbers', 'NNS')])
('tags -> ', '     (cucumbers->NNS) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('how', 'WRB'), ('many', 'JJ'), ('is', 'VBZ'), ('there', 'EX')])
('tags -> ', '     (how->WRB) (many->JJ) (is->VBZ) (there->EX) ')
('tags initial-> ', [('one', 'CD'), ('two', 'CD'), ('three', 'CD')])
('tags -> ', '     (one->CD) (two->CD) (three->CD) ')
('tags initial-> ', [('i', 'NN'), ('see', 'VBP'), ('more', 'JJR'), ('than', 'IN'), ('three', 'CD')])
('tags -> ', '     (i->NN) (see->VBP) (more->JJR) (than->IN) (three->CD) ')
('tags initial-> ', [('well', 'RB'), ('one', 'CD'), ('more', 'JJR'), ('than', 'IN'), ('three', 'CD')])
('tags -> ', '     (well->RB) (one->CD) (more->JJR) (than->IN) (three->CD) ')
candidates to check:
2
('tags initial-> ', [('little', 'JJ'), ('bites', 'NNS')])
('tags -> ', '     (little->JJ) (bites->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('you', 'PRP'), ('re', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('choke', 'VB')])
('tags -> ', '     (you->PRP) (re->VBP) (gon->VBG) (na->TO) (choke->VB) ')
('tags initial-> ', [('chi', 'NN')])
('tags -> ', '     (chi->NN) ')
('tags initial-> ', [('that', 'DT'), ('s', 'VBD'), ('enough', 'RB')])
('tags -> ', '     (that->DT) (s->VBD) (enough->RB) ')
('tags initial-> ', [('no', 'DT'), ('i', 'NN'), ('want', 'VBP'), ('all', 'DT'), ('of', 'IN'), ('it', 'PRP')])
('tags -> ', '     (no->DT) (i->NN) (want->VBP) (all->DT) (of->IN) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('no', 'DT'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('have', 'VB'), ('all', 'DT'), ('of', 'IN'), ('it', 'PRP'), ('cause', 'VB'), ('there', 'EX'), ('s', 'JJ'), ('others', 'NNS'), ('here', 'RB')])
('tags -> ', '     (no->DT) (you->PRP) (can->MD) (t->VB) (have->VB) (all->DT) (of->IN) (it->PRP) (cause->VB) (there->EX) (s->JJ) (others->NNS) (here->RB) ')
candidates to check:
2
('tags initial-> ', [('you', 'PRP'), ('have', 'VBP'), ('plenty', 'JJ')])
('tags -> ', '     (you->PRP) (have->VBP) (plenty->JJ) ')
('tags initial-> ', [('no', 'DT'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'NN')])
('tags -> ', '     (no->DT) (i->JJ) (don->VBP) (t->NN) ')
candidates to check:
2
('tags initial-> ', [('take', 'VB'), ('little', 'JJ'), ('bites', 'NNS'), ('please', 'VBP')])
('tags -> ', '     (take->VB) (little->JJ) (bites->NNS) (please->VBP) ')
candidates to check:
2
descended from food: [['N'], 'milk', 32, 36]
milk
milk milk 46
[('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('a', 'DT'), ('glass', 'NN'), ('of', 'IN'), ('milk', 'NN'), ('now', 'RB')]
['milk']
('tags initial-> ', [('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('a', 'DT'), ('glass', 'NN'), ('of', 'IN'), ('milk', 'NN'), ('now', 'RB')])
('tags -> ', '     (would->MD) (you->PRP) (like->IN) (a->DT) (glass->NN) (of->IN) (milk->NN) (now->RB) ')
('tags initial-> ', [('no', 'DT')])
('tags -> ', '     (no->DT) ')
candidates to check:
2
descended from food: [['N'], 'juice', 36, 41]
juice
juice juice 52
[('how', 'WRB'), ('about', 'IN'), ('a', 'DT'), ('glass', 'NN'), ('of', 'IN'), ('uh', 'JJ'), ('juice', 'NN')]
['juice']
('tags initial-> ', [('how', 'WRB'), ('about', 'IN'), ('a', 'DT'), ('glass', 'NN'), ('of', 'IN'), ('uh', 'JJ'), ('juice', 'NN')])
('tags -> ', '     (how->WRB) (about->IN) (a->DT) (glass->NN) (of->IN) (uh->JJ) (juice->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 15, 23]
('tags initial-> ', [('i', 'NN'), ('want', 'VBP'), ('a', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (i->NN) (want->VBP) (a->DT) (popsicle->NN) ')
candidates to check:
1
descended from food: [['N'], 'popsicle', 8, 16]
('tags initial-> ', [('a', 'DT'), ('popsicle', 'NN')])
('tags -> ', '     (a->DT) (popsicle->NN) ')
('tags initial-> ', [('you', 'PRP'), ('got', 'VBD'), ('to', 'TO'), ('be', 'VB'), ('stupid', 'JJ'), ('to', 'TO'), ('be', 'VB'), ('treating', 'VBG'), ('th', 'JJ'), ('em', 'NN')])
('tags -> ', '     (you->PRP) (got->VBD) (to->TO) (be->VB) (stupid->JJ) (to->TO) (be->VB) (treating->VBG) (th->JJ) (em->NN) ')
candidates to check:
1
('tags initial-> ', [('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('cut', 'NN'), ('things', 'NNS'), ('up', 'RP')])
('tags -> ', '     (you->PRP) (don->VBP) (t->JJ) (cut->NN) (things->NNS) (up->RP) ')
('tags initial-> ', [('are', 'VBP'), ('you', 'PRP'), ('all', 'DT'), ('finished', 'VBD')])
('tags -> ', '     (are->VBP) (you->PRP) (all->DT) (finished->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('what', 'WP'), ('s', 'VBD'), ('that', 'DT'), ('chi', 'NN')])
('tags -> ', '     (what->WP) (s->VBD) (that->DT) (chi->NN) ')
('tags initial-> ', [('what', 'WP')])
('tags -> ', '     (what->WP) ')
('tags initial-> ', [('what', 'WP'), ('is', 'VBZ'), ('it', 'PRP')])
('tags -> ', '     (what->WP) (is->VBZ) (it->PRP) ')
candidates to check:
1
('tags initial-> ', [('truck', 'NN')])
('tags -> ', '     (truck->NN) ')
candidates to check:
1
('tags initial-> ', [('a', 'DT'), ('truck', 'NN')])
('tags -> ', '     (a->DT) (truck->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('chi', 'NNS'), ('come', 'VBP'), ('here', 'RB')])
('tags -> ', '     (chi->NNS) (come->VBP) (here->RB) ')
candidates to check:
1
('tags initial-> ', [('it', 'PRP'), ('it', 'PRP'), ('found', 'VBD'), ('my', 'PRP$'), ('belly', 'NN')])
('tags -> ', '     (it->PRP) (it->PRP) (found->VBD) (my->PRP$) (belly->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
candidates to check:
2
('tags initial-> ', [('but', 'CC'), ('you', 'PRP'), ('ve', 'VBP'), ('got', 'VBD'), ('ta', 'NNS'), ('take', 'VB'), ('little', 'JJ'), ('bites', 'NNS')])
('tags -> ', '     (but->CC) (you->PRP) (ve->VBP) (got->VBD) (ta->NNS) (take->VB) (little->JJ) (bites->NNS) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('donna', 'NN')])
('tags -> ', '     (donna->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('donna', 'NN')])
('tags -> ', '     (donna->NN) ')
('tags initial-> ', [('xxx', 'NN')])
('tags -> ', '     (xxx->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('zzz', 'NN')])
('tags -> ', '     (zzz->NN) ')
('tags initial-> ', [('alright', 'RB'), ('now', 'RB'), ('you', 'PRP'), ('all', 'DT'), ('finished', 'VBD')])
('tags -> ', '     (alright->RB) (now->RB) (you->PRP) (all->DT) (finished->VBD) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
('tags initial-> ', [('okay', 'NN')])
('tags -> ', '     (okay->NN) ')
('tags initial-> ', [('yeah', 'NN')])
('tags -> ', '     (yeah->NN) ')
loading solution set
calculating
set([(1355, (15, 23)), (1358, (8, 16)), (212, (6, 14)), (692, (29, 34)), (802, (41, 45)), (749, (6, 20)), (232, (6, 11)), (1281, (6, 15)), (771, (6, 21)), (1248, (6, 15)), (746, (6, 14)), (662, (35, 39)), (1284, (6, 15)), (1194, (6, 20)), (700, (6, 10)), (1342, (32, 36)), (930, (50, 54)), (1237, (33, 42)), (753, (6, 20)), (1218, (22, 36)), (935, (16, 23)), (668, (6, 10)), (685, (15, 24)), (1212, (20, 34)), (241, (6, 11)), (1191, (15, 29)), (941, (30, 35)), (927, (11, 15)), (659, (80, 84)), (36, (11, 20)), (1273, (6, 15)), (32, (6, 15)), (1351, (36, 41)), (67, (23, 30)), (938, (6, 13)), (199, (10, 14)), (29, (10, 19)), (941, (17, 24)), (1207, (27, 41)), (811, (63, 67))])
[((29, (10, 19)), '*CHI:\txxx cucumbers .\n'), ((32, (6, 15)), '*MOT:\tcucumbers and what else (.) ?\n'), ((36, (11, 20)), '*CHI:\t&-um cucumbers .\n'), ((67, (23, 30)), '*FAT:\txxx xxx get some mustard come on .\n'), ((199, (10, 14)), '*CHI:\tthe corn [?] .\n'), ((212, (6, 14)), '*CHI:\tmacaroni [!] .\n'), ((232, (6, 11)), '*SIB:\tpizza ?\n'), ((241, (6, 11)), '*CHI:\tpizza .\n'), ((659, (80, 84)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((662, (35, 39)), "*MOT:\tno you didn't have a bowl of soup you had what ?\n"), ((668, (6, 10)), '*MOT:\ttuna ?\n'), ((685, (15, 24)), '*CHI:\t&-um (.) tuna+fish .\n'), ((692, (29, 34)), '*AUN:\tdid you have it in the bread ?\n'), ((700, (6, 10)), '*AUN:\tmilk [?] ?\n'), ((746, (6, 14)), '*CHI:\tice cone .\n'), ((749, (6, 20)), '*MOT:\tice cream cone .\n'), ((753, (6, 20)), '*CHI:\tice cream cone !\n'), ((771, (6, 21)), '*AUN:\tcorn on the cob .\n'), ((802, (41, 45)), '*MOT:\tno the farm is where they grow the corn .\n'), ((811, (63, 67)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((927, (11, 15)), '*CHI:\tmore meat .\n'), ((930, (50, 54)), "*MOT:\tyou eat some of that and I'll give you more meat Donna [?] .\n"), ((935, (16, 23)), '*CHI:\tsome more chicken .\n'), ((938, (6, 13)), '*CHI:\tchicken .\n'), ((941, (17, 24)), "*MOT:\tthat's not chicken it's steak .\n"), ((941, (30, 35)), "*MOT:\tthat's not chicken it's steak .\n"), ((1191, (15, 29)), '*CHI:\t&-um (.) ice cream cone .\n'), ((1194, (6, 20)), '*MOT:\tice cream cone ?\n'), ((1207, (27, 41)), "*CHI:\tbut I don't want any ice cream cone now .\n"), ((1212, (20, 34)), '*CHI:\tbut I want an ice cream cone .\n'), ((1218, (22, 36)), '*CHI:\tMommy I want an ice cream cone tomorrow .\n'), ((1237, (33, 42)), '*MOT:\tyou [/] you want some more cucumbers ?\n'), ((1248, (6, 15)), '*CHI:\tcucumbers (.) .\n'), ((1273, (6, 15)), '*SIB:\tcucumbers Chi .\n'), ((1281, (6, 15)), '*CHI:\tcucumbers .\n'), ((1284, (6, 15)), '*MOT:\tcucumbers ?\n'), ((1342, (32, 36)), '*MOT:\twould you like a glass of milk now ?\n'), ((1351, (36, 41)), '*MOT:\thow about a glass of &-uh (.) juice ?\n'), ((1355, (15, 23)), '*CHI:\tI want a popsicle .\n'), ((1358, (8, 16)), '*MOT:\ta popsicle ?\n')]
set([(811, (35, 40)), (1355, (15, 23)), (1358, (8, 16)), (212, (6, 14)), (692, (29, 34)), (802, (41, 45)), (1185, (57, 64)), (749, (6, 20)), (232, (6, 11)), (1140, (19, 25)), (935, (16, 23)), (241, (6, 11)), (700, (6, 10)), (1342, (32, 36)), (930, (50, 54)), (826, (10, 15)), (753, (6, 20)), (1218, (22, 36)), (438, (27, 33)), (427, (44, 50)), (1194, (6, 20)), (1207, (27, 41)), (1212, (20, 34)), (685, (15, 24)), (304, (6, 11)), (938, (6, 13)), (662, (35, 39)), (1191, (15, 29)), (734, (29, 36)), (941, (30, 35)), (927, (11, 15)), (659, (80, 84)), (1147, (26, 32)), (642, (37, 42)), (1351, (36, 41)), (67, (23, 30)), (435, (26, 32)), (199, (10, 14)), (720, (6, 11)), (771, (6, 10)), (680, (28, 33)), (941, (17, 24)), (818, (14, 19)), (811, (63, 67)), (18, (31, 37)), (1137, (16, 22)), (55, (11, 15))])
[((18, (31, 37)), "*MOT:\tokay girls it's time for supper let's go !\n"), ((55, (11, 15)), '*MOT:\tyeah meat ?\n'), ((67, (23, 30)), '*FAT:\txxx xxx get some mustard come on .\n'), ((199, (10, 14)), '*CHI:\tthe corn [?] .\n'), ((212, (6, 14)), '*CHI:\tmacaroni [!] .\n'), ((232, (6, 11)), '*SIB:\tpizza ?\n'), ((241, (6, 11)), '*CHI:\tpizza .\n'), ((304, (6, 11)), '*MOT:\twater wings (.) ?\n'), ((427, (44, 50)), '*AUN:\tare you going to go in the pool after supper with me ?\n'), ((435, (26, 32)), "*CHI:\tdidn't you come for supper xxx ?\n"), ((438, (27, 33)), "*AUN:\tno I didn't come for supper .\n"), ((642, (37, 42)), '*AUN:\t&-um (.) what did you have for lunch today ?\n'), ((659, (80, 84)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((662, (35, 39)), "*MOT:\tno you didn't have a bowl of soup you had what ?\n"), ((680, (28, 33)), '*MOT:\twhat did you have for lunch today ?\n'), ((685, (15, 24)), '*CHI:\t&-um (.) tuna+fish .\n'), ((692, (29, 34)), '*AUN:\tdid you have it in the bread ?\n'), ((700, (6, 10)), '*AUN:\tmilk [?] ?\n'), ((720, (6, 11)), '*FAT:\thoney [?] ?\n'), ((734, (29, 36)), '*MOT:\t<what did you have for dessert> [<] ?\n'), ((749, (6, 20)), '*MOT:\tice cream cone .\n'), ((753, (6, 20)), '*CHI:\tice cream cone !\n'), ((771, (6, 10)), '*AUN:\tcorn on the cob .\n'), ((802, (41, 45)), '*MOT:\tno the farm is where they grow the corn .\n'), ((811, (35, 40)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((811, (63, 67)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((818, (14, 19)), '*CHI:\tbut how seeds come up ?\n'), ((826, (10, 15)), '*CHI:\thow seeds come up ?\n'), ((927, (11, 15)), '*CHI:\tmore meat .\n'), ((930, (50, 54)), "*MOT:\tyou eat some of that and I'll give you more meat Donna [?] .\n"), ((935, (16, 23)), '*CHI:\tsome more chicken .\n'), ((938, (6, 13)), '*CHI:\tchicken .\n'), ((941, (17, 24)), "*MOT:\tthat's not chicken it's steak .\n"), ((941, (30, 35)), "*MOT:\tthat's not chicken it's steak .\n"), ((1137, (16, 22)), '*CHI:\tthere was orange .\n'), ((1140, (19, 25)), '*MOT:\toh there was orange ?\n'), ((1147, (26, 32)), "*MOT:\toh I didn't see the orange .\n"), ((1185, (57, 64)), '*MOT:\tif you eat all that up (.) what would you like for dessert ?\n'), ((1191, (15, 29)), '*CHI:\t&-um (.) ice cream cone .\n'), ((1194, (6, 20)), '*MOT:\tice cream cone ?\n'), ((1207, (27, 41)), "*CHI:\tbut I don't want any ice cream cone now .\n"), ((1212, (20, 34)), '*CHI:\tbut I want an ice cream cone .\n'), ((1218, (22, 36)), '*CHI:\tMommy I want an ice cream cone tomorrow .\n'), ((1342, (32, 36)), '*MOT:\twould you like a glass of milk now ?\n'), ((1351, (36, 41)), '*MOT:\thow about a glass of &-uh (.) juice ?\n'), ((1355, (15, 23)), '*CHI:\tI want a popsicle .\n'), ((1358, (8, 16)), '*MOT:\ta popsicle ?\n')]
calculating accuracy and recall
correct labels:
set(['steak', 'mustard', 'ice cream cone', 'juice', 'corn', 'popsicle', 'cucumbers', 'meat', 'soup', 'tuna+fish', 'corn on the cob', 'macaroni', 'ice cone', 'chicken', 'tuna', 'bread', 'milk', 'pizza'])
predicted labels:
set(['juice', 'honey', 'steak', 'mustard', 'ice cream cone', 'soup', 'dessert', 'corn', 'popsicle', 'meat', 'water', 'lunch', 'tuna+fish', 'seeds', 'macaroni', 'supper', 'orange', 'chicken', 'bread', 'milk', 'pizza'])
file:HSLLD/HV1/MT//diamt1.cha
precision: 0.666666666667
recall: 0.777777777778
true positives:['bread', 'chicken', 'corn', 'ice cream cone', 'juice', 'macaroni', 'meat', 'milk', 'mustard', 'pizza', 'popsicle', 'soup', 'steak', 'tuna+fish']
false positives: ['dessert', 'honey', 'lunch', 'orange', 'seeds', 'supper', 'water']
false negatives: ['corn on the cob', 'cucumbers', 'ice cone', 'tuna']
# true pos: 14
# false pos: 7
# false neg: 4
HSLLD/HV1/MT//remmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//remmt1.cha
HSLLD/HV1/MT//trumt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//trumt1.cha
HSLLD/HV1/MT//jusmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jusmt1.cha
HSLLD/HV1/MT//rosmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//rosmt1.cha
HSLLD/HV1/MT//seamt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//seamt1.cha
HSLLD/HV1/MT//arlmt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//arlmt1.cha
HSLLD/HV1/MT//trimt1.cha
adding extra names
Added names by Yelena Mejova
9758
400
9970
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//trimt1.cha
precision: 0.580441640379
recall 0.766666666667
# true pos: 184
# false pos: 133
# false neg: 56
total runtime: 75.0795769691
