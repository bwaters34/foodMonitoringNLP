HSLLD/HV1/MT//alimt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: they said no .', '*CHI: is there a xxx [>] ?', '*MOT: <can you> [<] [/] can you say grace for me again ?', '*BRO: <xxx food> [>] amen .', '*MOT: &aw [<] .', '*MOT: say it Alissa .', '*CHI: thank you Jesus for this food .', '*CHI: amen [>] .', '*MOT: &=laughs .', '*BRO: amen .', '*MOT: amen Carlos .', "*CHI: he can't say it .", '*MOT: yes he can huh <Carlos> [>] ?', '*CHI: <Carlos> [<] go like this .', '*BRO: amen .', '*CHI: no Carlos .', '*CHI: go like this .', '*CHI: thank you Jesus for this food .', '*CHI: amen [>] .', '*MOT: amen [<] .', "*BRO: I don't want to .", '*MOT: be a sport Carlos will you ?', '*CHI: he said me want .', "*MOT: I didn't xxx .", '*BRO: you xxx .', '*MOT: <what do you think> [>] ?', '*MAR: want [<] that soda ?', "*BRO: I don't like you anymore .", '*MOT: how <do you get the stuffing> [>] ?', '*BRO: <nobody xxx> [<] more [>] .', '*MOT: <xxx huh> [<] ?', '*MAR: yeah (.) oh no .', "*CHI: I'm sorry Carlos .", "*BRO: <I &t> [//] I turned xxx <you gonna> [//] you ain't gonna see xxx anymore .", '*MOT: we can take both wings ?', '*CHI: <him better> [/] <him better (.) bring me> [>] over there .', '*MOT: <come on xxx the xxx> [<] .', '*MOT: oh <I> [/] I forgot that you like those .', "*BRO: I'm tired of you xxx being older .", "*BRO: <I xxx> [//] <I didn't> [/] I didn't say (.) &-um Jackie\xe2\x86\x91 will you be over here ?", '*CHI: say no .', '*CHI: she said xxx [>] .', "*BRO: <oh I> [<] I didn't say no .", '*CHI: xxx say xxx [>] .', '*MOT: xxx [<] hear screaming .', '*MAR: yes I know .', '*MAR: I can hear [>] him .', '*BRO: <Mom xxx> [>] .', '*CHI: xxx [<] <baby crying> [>] !', "*MOT: <I'll get it> [<] .", "*MOT: I'll get it .", '*BRO: xxx try I get xxx .', "*MOT: you get the soda I'll get him .", '*MAR: okay .', '*CHI: (..) I love this .', '*CHI: (.) I love this stuff .', '*BRO: I like it too .', '*CHI: I never mush it .', '*BRO: oh !', "*BRO: (.) I don't like it .", '*CHI: I said I like it !', '*BRO: mm !', '*CHI: thank you Jesus for this food , amen .', '*BRO: thank you for amen [>] .', '*MOT: <sayin(g) it> [<] again Alissa ?', '*BRO: xxx [>] .', '*CHI: xxx [<] .', '*CHI: <thank you> [>] Je(s)us for this food .', '*BRO: <I can xxx> [<] .', '*BRO: I xxx thank you Jesus <for food [/]> [>] foo(d) .', '*MOT: <hi Anthony> [<] .', '*MOT: hi Anthony .', '*CHI: please stop !', '*CHI: Maria get the bee out o(f) here .', "*MAR: oh it's only a fly .", '*CHI: &h <hello there> [>] wimpy@c [?] .', "*MAR: <he'll fly out> [<] +...", "*MAR: when we open the door he'll fly out .", "*MOT: what'd you do with my other wind chimes you brought in ?", '*CHI: <Mom> [>] +/.', "*MAR: <they're> [<] hangin(g) up above the stairs .", '*MOT: oh .', "*BRO: Mom he's sittin(g) the I xxx his xxx .", "*MOT: no he's not .", "*MOT: or I'll kill [!] him .", '*CHI: thank you xxx .', "*MOT: you're welcome Alissa .", '*BRO: oh xxx !', '*BRO: pow &=shouts !', '*CHI: xxx [>] .', '*BRO: pow [<] !', '*CHI: pow !', '*CHI: pow (.) pow [>] !', '*MAR: <okay xxx> [<] .', '*CHI: pow pow [>] !', '*MOT: <you shootin(g)> [<] that fly ?', '*CHI: yeah .', '*BRO: Mom I xxx [>] .', '*CHI: pow [<] !', '*BRO: get fly out xxx [>] .', '*CHI: right [<] right here comes the enemy .', '*CHI: pow !', '*BRO: now Mom gonna buy me &-um gun xxx the fly and I gonna [: going to] shoot him .', "*MOT: I'm gonna buy you a gun you're gonna find it and shoot him ?", '*CHI: Mom !', "*CHI: he gonna [>] buy me [>] a big gun and I'm gonna [: going to] [>] shoot him .", '*BRO: yeah [<] .', '*MOT: okay [>] .', "*MOT: <he's in there cryin(g)> [<] .", "*BRO: yeah &m (.) Mom's gonna +/.", '*CHI: Mom !', "*BRO: &-um (.) Mom's gonna buy &-uh my <gun and> [>] +/.", '*CHI: <Mom> [<] !', "*CHI: gonna buy [>] me a big gun and I'm gonna <&k> [//] (.) kill that fly .", '*BRO: boom .', '*MOT: yeah [>] .', '*MAR: have [<] mercy .', '*BRO: <over there> [>] .', '*CHI: <oh yeah> [<] you better buy one Mom .', '*MOT: yeah .', '*BRO: Mom xxx .', '*MOT: huh ?', '*BRO: a buggie (.) in was xxx here .', '*MOT: is he gone now ?', '*BRO: yeah [/] yeah (.) no xxx [>] .', '*CHI: <Mom> [<] buy me a big gun .', "*CHI: <I got> [//] (.) you gotta buy me a big gun <and I> [/] (.) and I'm gonna kill him with Carlos .", '*CHI: Mom !', '*MOT: xxx [>] .', '*CHI: xxx [<] I xxx that .', '*CHI: xxx that .', "*BRO: Mom I'm full [>] .", "*MOT: <Carlos> [<] that's enough juice .", '*MOT: eat !', '*CHI: (ex)cuse me .', '*MOT: &=chuckles (ex)cuse me .', '*BRO: (ex)cuse me .', '*CHI: I have_to go pee .', '*BRO: no xxx .', '*BRO: alright go .', '*BRO: xxx <Mom> [>] +...', '*CHI: xxx [<] .', '*BRO: I have xxx over there .', '*MOT: huh ?', '*BRO: I have xxx all there .', '*MOT: yeah .', "*BRO: I'll go get it ?", '*MOT: yeah .', '*BRO: (o)kay .', '*MAR: to the bath+room ?', '*BRO: xxx no the xxx .', '*MAR: xxx [>] .', '*BRO: <know where> [<] xxx is ?', '*CHI: is he alright Mom ?', '*MOT: mhm .', '*CHI: are we lucky .', "*MOT: get him over &w Alissa's chair over here a little bit .", '*BRO: <Mom> [>] ?', '*CHI: xxx [<] !', '*CHI: xxx !', '*CHI: xxx !', '*MOT: xxx .', '*BRO: this is mine mom .', '*MOT: come on Alissa !', '*BRO: this is xxx I think xxx [>] .', "*MOT: <what I'm gonna do is> [<] (.) when I'm goin(g) down and bringing Anthony down tomorrow mornin(g) (.) you can get these guys ready .", '*MAR: mhm .', "*MOT: <Sean's supposed to call> [//] you can call him right ?", '*MOT: call him tell him to be ready at least by eight .', '*MAR: mhm .', "*MOT: I'm gettin(g) up at seven .", "*MOT: I'll get Anthony down to [/] to Linda's house .", '*MOT: you know [>] ?', '*BRO: oh [<] can I come with you ?', '*MOT: not tomorrow morning .', "*MOT: we're goin(g) to the beach tomorrow .", '*BRO: <I wanna > [/] I wanna (.) Patty .', '*BRO: and xxx (.) I would say (.) &-uh Patty can I jump in the water ?', '*MOT: &=laughs .', '*BRO: I can too .', '*MOT: sure if you goin(g) xxx .', '*BRO: Mom you know what ?', '*BRO: I know [/] I know my gun is this high .', '*BRO: like this .', '*BRO: that high .', '*MOT: yeah ?', '*BRO: see (.) like high .', '*BRO: xxx .', '*BRO: (.) goin(g) again .', '*MOT: Alissa !', '*BRO: hey you Alissa !', '*CHI: look_it .', '*BRO: <Mom> [>] .', '*CHI: <Mom> [<] .', '*BRO: <Mom> [>] +/.', "*CHI: <Mom> [<] the next time I'm xxx .", '*BRO: Mom in xxx .', '*CHI: 0 [=! sound like a buzzer] !', '*CHI: I said go pee .', '*MOT: oh you got a mosquito bite ?', '*BRO: yeah .', '*MOT: mm .', '*BRO: &=laughs .', '*MOT: nasty mosquitos .', '*MOT: Alissa .', '*CHI: yeah Mom I xxx [>] .', '*MOT: eat [<] .', "*MOT: what's over there ?", '*CHI: oh (.) xxx [>] .', '*BRO: xxx [<] .', '*BRO: Mom (.) kill the bug on [>] my xxx .', '*CHI: <&=whimpering > [<] .', '*BRO: he [/] he cut him in +...', '*BRO: he +/.', '*MOT: no eat .', "*BRO: <but I> [>] xxx close my xxx door until xxx I'm cold .", '*CHI: xxx [<] .', '*MOT: you can go close the front door .', '*CHI: no .', '*CHI: (.) Mom (.) <I have_to> [>] +/.', '*BRO: xxx [<] .', '*BRO: he <xxx me> [>] .', '*CHI: <Mom> [<] .', '*CHI: see ?', "*CHI: when xxx goes (.) I'll xxx go xxx .", "*BRO: <Mom> [>] I wanna go in the car (.) the mosquito's gonna bite me .", "*BRO: I'm closin(g) the window .", '*CHI: xxx [<] .', "*BRO: you don't care he's gonna bite me .", "*MOT: oh the <mosquito's gonna bite you> [>] ?", '*CHI: <&C Carlos> [<] !', '*BRO: yeah .', "*CHI: &-um Mom just washed the car you can't close that window .", '*CHI: Mom just washed the car .', "*BRO: xxx <Mom's> [/] (.) Mom's gonna (.) close the window <and make sure xxx wash the car> [>] .", '*CHI: Mom [!] (.) <Mikey <get in> [/] get in there> [<] .', '*BRO: <xxx cold> [>] .', '*MOT: <&=laughs > [<] .', '*CHI: Mommy !', '*CHI: did you just wash the car ?', '*MOT: I washed it earlier today .', '*CHI: today ?', '*MOT: mhm .', '*CHI: you washed it now .', '*MOT: I washed it earlier .', '*CHI: earlier ?', '*MOT: mhm .', '*CHI: and [/] and you xxx let me use the hose .', '*MOT: yeah you both played with the hose for a little bit .', '*CHI: yeah .', '*BRO: and xxx [>] .', "*CHI: xxx [<] xxx you don't wanna get &-um you gotta babysit .", '*MAR: I do ?', '*CHI: <yeah and> [>] and you wanna get wet over the hose xxx take the little hose .', "*MAR: <I didn't know that> [<] .", '*MAR: oh yeah\xe2\x86\x91 (.) xxx [>] .', '*CHI: <do you> [<] wanna get wet ?', "*MAR: no that's alright .", '*CHI: when we get back xxx now you can get wet alright ?', '*CHI: xxx .', '*MOT: xxx ?', "*BRO: Mom I'm gonna put my xxx in there .", '*BRO: Mom .', '*MOT: what Carlos ?', "*BRO: I'm gonna throw my xxx in there .", '*BRO: there [>] .', "*MOT: no [<] I'll do it .", '*BRO: right .', '*CHI: xxx [>] .', '*MOT: <you have> [<] enough already !', '*CHI: Mommy .', "*BRO: where's mine &mi right Mom ?", '*BRO: mine .', '*CHI: I wanna take my (.) plate up myself xxx .', '*BRO: (.) Mommy (.) over here .', '*CHI: xxx get those xxx .', '*BRO: mm .', '*MOT: &=chuckles .', "*MOT: I don't know xxx [>] ?", '*BRO: xxx [<] .', '*MAR: yeah .', '*CHI: Mom xxx .', '*BRO: <Mom> [/] Mom I want xxx ice .', "*MOT: hon(ey) you don't need any .", '*MOT: yours is nice and cold .', "*MOT: Mom's is warm .", '*BRO: &=gasps &-um <I want> [/] I wanna get some xxx .', '*CHI: wait (un)til it gets warm (.) then I can have &-um (.) xxx .', '*CHI: Mom you got Pepsi in there .', '*CHI: xxx too [>] ?', '*MOT: <come on> [<] (.) finish eating .', '*CHI: I already ate mine .', "*MOT: no you didn't eat anything [!] yet .", '*CHI: oh yeah I wanna eat .', "*BRO: Mom I'm really sick .", "*MOT: <you're really sick> [>] &=chuckles ?", '*BRO: <until you> [<] eat all [>] of this [?] .', '*CHI: <Mom> [<] !', '*CHI: &-um (.) I really eat because [/] (.) because [>] I [/] I only ate once and &-uh right here and I want to xxx .', '*BRO: xxx [<] .', '*MOT: take a break .', "*MOT: (.) I love the white meat when it's dry <all around> [>] .", '*CHI: <I love you Mommy> [<] .', '*MAR: I know .', '*MOT: I love you too .', '*CHI: I <thought you was comin(g)> [>] back .', '*BRO: <and I love you> [<] .', '*MOT: I love you too .', '*CHI: oh what happened to me ?', '*MOT: xxx [>] napkins .', '*CHI: <I xxx> [<] .', '*BRO: xxx .', '*CHI: &aw .', '*BRO: catsup .', "*MOT: that's the bean juice .", '*MOT: she stuck her arm in her beans .', '*MOT: silly+dilly .', '*CHI: you silly+dilly .', '*BRO: you silly+dilly .', '*MOT: no .', '*CHI: Mommy that xxx ?', '*CHI: I put xxx on there .', '*MOT: oh yeah ?', '*BRO: yeah he picked it .', '*MOT: she picked a mosquito bite ?', '*BRO: yeah [>] .', '*CHI: yeah [<] and [>] +/.', '*MOT: yeah [<] .', '*CHI: and <Alicia [?]> [>] was (.) and mosquito was go like this (.) xxx of and and it was bigger .', '*MOT: yes [<] .', '*CHI: Alicia was scratching all over the place .', '*CHI: Alicia got (.) scratch all over the place .', '*BRO: xxx &=laughs [>] .', "*CHI: <and he wasn't> [<] +/.", "*CHI: and [//] oh [!] that's blood already picked .", "*CHI: I don't like that (.) can I ?", "*MOT: it ain't blood &=laughs .", '*CHI: oh .', "*BRO: it's catsup .", '*BRO: right Mom ?', '*CHI: xxx what happened ?', '*MOT: come on eat a little bit more .', '*BRO: xxx .', '*CHI: hey [!] [= high pitched] can I go back out ?', '*MOT: mhm .', "*CHI: wow [!] I don't want to .", '*BRO: <I> [/] I think you [/] you xxx [>] .', '*CHI: xxx [<] .', "*CHI: because (.) I wanna go &w wit(h) Mom and I'm done eatin(g) .", "*CHI: and I'm gonna go to the beach with Mom .", "*MOT: <that's> [>] tomorrow .", '*MOT: tomorrow morning [>] .', '*BRO: Mommy [<] .', '*BRO: I wanna (.) xxx (.) &-um Patty tomorrow .', '*CHI: Mom <I already> [/] I already (.) ate one more over here .', '*CHI: o(f) rice .', "*BRO: Mom where's my (s)nake ?", "*MOT: where's your snake ?", '*BRO: yeah .', "*MOT: I don't know what'd you do with it ?", '*CHI: upstairs .', '*MOT: right here look .', '*BRO: xxx .', '*MOT: what do you say ?', '*BRO: I know xxx .', '*CHI: (.) let me see that .', '*CHI: 0 [=! pretend screaming] .', "*MOT: the snake's got Alissa !", '*MOT: oh no !', '*MOT: no [/] no <not me> [/] not me !', '*MOT: get Maria .', '*CHI: <0 [=! attacking noises]> [>] .', '*MAR: <0 [=! fake screaming]> [<] .', "*CHI: <no don't> [>] get <Maria> [>] !", '*BRO: xxx [<] .', '*MAR: oh [<] .', "*MAR: oh_goodness I'm dyin(g) .", '*BRO: xxx you <b(l)eedin(g)> [>] .', '*CHI: ah oh .', "*MAR: oh [<] (.) I'm bleeding ?", '*MAR: oh .', "*CHI: I'm xxx &=screams [>] !", "*BRO: <you're> [<] b(l)eedin(g) .", "*BRO: you're b(l)eeding .", "*CHI: no [!] don't kill my Mom !", "*BRO: I ain't .", '*CHI: no [/] no (.) no !', '*CHI: xxx !', '*CHI: no [/] no xxx .', '*CHI: no [/] no .', '*CHI: Mom the xxx +/.']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//alimt1.cha
HSLLD/HV1/MT//davmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: the batteries .', "*MOT: I don't think the batteries are any good .", '*MOT: hm: .', "*MOT: well (.) we'll just have_to see .", '*MOT: I hope they are !', '*MOT: alright .', '*MOT: +^ not too far xxx .', "*FAT: they're alright .", '*MOT: is that red light on ?', '*FAT: yeah .', '*MOT: xxx .', "*FAT: it's voice activated .", '*MOT: oh it is ?', '*FAT: yes .', '*MOT: www .', "*MOT: (..) how's your supper ?", '*MOT: oh did you get your drink ?', '*MOT: okay .', '*MOT: it is [!] .', '*MOT: because look .', "*FAT: yeah I know but I'm just trying to see if the (.) tape is going around xxx [>] .", '*MOT: <it is> [<] .', '*MOT: I already tried .', '*FAT: yeah .', "*MOT: (.) xxx right now so don't drink a lot okay ?", "*MOT: save some and don't eat all the cantaloupe .", '*MOT: <eat some of your> [/] eat some of your other stuff okay ?', '*MOT: okay [!] ?', '*MOT: &=laughs .', '*MOT: so +...', '*MOT: &=laughs .', '*FAT: cut it out .', '*MOT: &=laughs [>] .', '*FAT: &=laughs [<] .', '*CHI: here goes dananananana@wp !', '*MOT: &=laughs .', '*CHI: xxx .', '*MOT: (.) &=giggles .', '*MOT: you might <as well> [=? have_to] squish that down a little bit .', '*CHI: but you [//] it has gotta come out now .', '*MOT: well +...', "*FAT: don't &do +/.", "*MOT: don't squish it so hard that it comes out !", '*MOT: yeah .', '*MOT: &=giggles .', '*FAT: good supper huh ?', '*FAT: hey move up close !', '*CHI: hm: .', "*MOT: what's the matter ?", '*MOT: your stomach hurts ?', '*FAT: well eat slowly .', '*FAT: chew up your food really good (.) okay ?', '*CHI: hunhunh [?] .', '*MOT: well if it hurts that much (.) just eat your cantaloupe .', "*MOT: don't eat (.) you know too much .", "*MOT: don't make it hurt more okay ?", '*CHI: I eat these fast .', "*MOT: well don't eat fast [!] !", "*FAT: he's not .", "*FAT: +^ he's gonna eat (.) slow .", '*MOT: &=giggles .', "*CHI: I'm a dog !", '*CHI: ruff@o ruff@o !', '*MOT: want some broccoli ?', "*MOT: mm it's del:icious !", '*CHI: no way [>] !', '*MOT: lemon [<] !', '*CHI: no way !', '*MOT: all the (.) nice florets@d .', '*CHI: no !', '*MOT: like little trees !', "*MOT: you can pretend you're a giant !", '*MOT: www .', '*CHI: no way !', '*MOT: &=laughs .', '*CHI: yuck yuck yuck yuck !', '*MOT: &=laughs .', '*FAT: (..) was that me ?', '*MOT: mm .', '*MOT: &=giggles .', '*FAT: <my gosh> [=? got it] .', "*MOT: sensitive isn't it &=laughs [?] ?", '*FAT: yeah .', '*MOT: &=laughs .', "*CHI: what's the matter ?", '*MOT: well we were just checking out the little red light on it .', '*FAT: watch your juice [>] .', '*MOT: like [<] when you talk it goes on .', '*CHI: oh .', '*MOT: see ?', '*MOT: so +//.', '*MOT: see ?', '*MOT: now if you say something watch .', '*MOT: it (.) gets brighter as you talk .', '*CHI: what [?] .', '*FAT: that was my ice cube .', '*FAT: that little (.) squeal was my ice cube .', '*MOT: &=laughs .', '*CHI: what [?] .', '*MOT: tell Daddy <what you did today> [//] what we did today .', "*CHI: I can't [!] .", "*CHI: <I &d> [/] I don't remember you [?] .", '*FAT: sure <you do> [>] .', "*MOT: <well we didn't> [<] do too much .", '*MOT: what did we do ?', '*MOT: +^ we played some games .', '*MOT: what games did we play ?', '*CHI: Chutes and Ladders .', '*CHI: <remember game> [= Memory Game] Chutes and Ladders !', '*FAT: mhm .', "*MOT: didn't we play Fish ?", '*CHI: mm .', '*MOT: who won ?', "*MOT: <who won> [//] let's see .", '*MOT: first [!] time we played Chutes and Ladders +...', '*MOT: +, who won ?', '*CHI: you ?', '*MOT: I think so .', '*MOT: and then <we we> [/] we played Memory Game .', '*MOT: +^ who won that ?', '*MOT: mhm [?] .', '*FAT: you won ?', "*MOT: yeah he's really good at the Memory game [>] .", '*CHI: and [<] we (.) played Chutes and Ladders again right ?', '*MOT: mhm .', '*CHI: I won .', '*MOT: mhm !', '*CHI: and we played Fish .', '*CHI: I won .', '*MOT: mhm .', '*MOT: &=laughs .', '*MOT: mm .', '*MOT: and (.) we watched Lady and the Tramp , huh [>] ?', '*CHI: yep [<] !', '*MOT: &=laughs .', '*CHI: what are you [/] you doin(g) ?', '*CHI: what is xxx that ?', '*CHI: why is (.) music not comin(g) out of there man [?] [>] ?', '*MOT: well [<] +/.', '*FAT: see every time you talk that little red light comes on .', "*MOT: when [?] it's not playing music .", "*MOT: +^ it's recording what we're talking about [>] .", '*CHI: oh [<] .', '*CHI: please [?] .', '*MOT: xxx [>] .', '*CHI: <the name of it> [<] [//] oh .', '*CHI: Mother ?', '*MOT: hm: ?', '*CHI: &-um (..) &-um (.) did we play any more games ?', '*MOT: I think that was all we played .', '*CHI: oh .', '*CHI: &-um <we (.) we> [/] we played &-um +...', '*CHI: <we did> [//] we played Fish !', '*MOT: mhm .', '*CHI: <and we> [>] (.) played another Fish right ?', '*MOT: <oh yeah> [<] .', '*MOT: did we play Fish twice ?', '*CHI: &-uh yes !', '*CHI: no !', '*MOT: I think we just played one time .', '*CHI: yes .', '*CHI: no yes (.) no yes (.) no yes no yes .', '*MOT: &=laughs .', '*CHI: xxx [>] .', '*FAT: <here have> [<] some more sandwich .', '*CHI: Father_name ?', '*FAT: yeah ?', '*CHI: <I love> [>] you .', '*MOT: <want some> [<] +/.', "*FAT: <that's nice> [>] .", '*MOT: wanna [<] try some chicken ?', '*FAT: I love you too .', '*CHI: no [/] no thank you .', "*MOT: it's really good .", '*CHI: no .', "*CHI: I tried it when you have [?] a party <at (.) at> [/] at your mother's house .", '*MOT: oh yeah .', '*CHI: that [/] that was chicken .', '*FAT: well here <have some more of your> [>] +/.', '*MOT: right [<] !', "*MOT: +^ you ate a whole bunch of it that time didn't you ?", '*CHI: yep .', '*FAT: have some [>] more &-uh +/.', '*CHI: xxx [<] .', '*CHI: you will <get a tummy+ache> [>] maybe .', '*FAT: +, <sandwich then Chi> [<] .', '*FAT: no .', '*FAT: here .', '*FAT: have some more food you [/] you might +//.', "*MOT: I don't think that's what gave you the tummy+ache (be)cause that was kind of a long time ago and you just got your tummy+ache now .", '*MOT: that was a couple o(f) weeks [!] ago that you ate that chicken .', "*MOT: +^ it doesn't take a few weeks to get a tummy+ache .", '*FAT: have <some more> [>] +/.', "*MOT: <you could> [<] have a tummy+ache because you're hungry .", "*MOT: +^ because you haven't been eating .", "*FAT: (.) here don't you want some more of that ?", "*CHI: hurry or I'll (.) beat [!] you guys !", "*MOT: well I'm almost done so +/.", "*FAT: don't eat too fast .", '*FAT: just have some more of that anyway .', "*CHI: I'm gonna beat Father_name .", '*CHI: he is not +/.', '*MOT: you better start eating [!] then .', "*MOT: (..) xxx (.) even though he seemed to feel better today I'm glad I kept him out of day care .", '*FAT: mhm .', '*MOT: he still seemed to be you know kind o(f) xxx huh ?', "*CHI: didn't want (.) the other children to catch my tummy+ache .", '*MOT: right !', '*MOT: or your fever .', '*CHI: fever ?', "*MOT: well that's <what when you feel> [//] when your skin feels real hot .", "*MOT: that's a fever .", '*CHI: oh .', '*CHI: (.) oh .', '*CHI: are you hot ?', '*CHI: are <you hot> [>] ?', "*MOT: <it's really [!]> [<] hard to understand you (.) when you talk with food in your mouth though okay ?", '*CHI: I say are you hot ?', "*MOT: well yeah it's pretty warm in here .", '*CHI: www &=hums .', "*FAT: it's not that [!] bad .", '*FAT: are you hot ?', '*CHI: (.) no .', '*FAT: oh Chi not the fan !', '*CHI: yes .', "*FAT: <it'll cool &o> [/] it'll cool our meal off too quickly [>] .", "*MOT: <come on> [<] Chi you're making a mess .", '*MOT: +^ will you please sit down ?', '*MOT: thank you .', "*FAT: it's too cold to have that on anyway .", '*MOT: &=sighs .', "*CHI: I can't eat anymore .", '*FAT: good sandwich though huh ?', '*CHI: yep .', '*FAT: what are you doing ?', "*FAT: you're all done ?", "*FAT: don't you want any cantaloupe ?", '*CHI: no .', "*MOT: well (.) if it hurts your tummy to eat then don't eat but (.) you may not have anything else .", '*FAT: this will make your tummy feel better probably Chi .', "*MOT: now I'm not <gonna get any> [>] +/.", "*FAT: <(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .", '*CHI: <touching> [<] [?] stomach .', "*MOT: that wouldn't be bad [?] news .", '*CHI: www .', '*MOT: oh !', '*MOT: uhoh .', '*CHI: www .', '*MOT: one sick pony .', '*CHI: (..) www .', '*MOT: (.) you wanna lie down on the couch for a little while ?', "*CHI: there wasn't (.) anything .", '*CHI: +^ can I watch xxx ?', '*MOT: oh no !', '*FAT: not now .', '*MOT: Chi once a day [!] you can watch it <alright> [>] ?', '*CHI: xxx [<] .', '*MOT: +^ not ten times a day .', '*CHI: but <I> [/] I need to watch something !', "*MOT: no you don't !", "*MOT: +^ it's nice (.) to just have quiet [!] around here for once .", "*CHI: no it's not .", "*MOT: well while I'm eating I want quiet .", '*CHI: no [?] .', '*MOT: yes .', "*MOT: don't you even want your delicious cantaloupe ?", '*CHI: no .', '*MOT: nice juicy cantaloupe ?', "*MOT: why don't you drink your juice at least ?", '*CHI: okay .', "*MOT: I'm afraid you're becoming dehydrated .", "*MOT: you're gonna get too skinny .", "*MOT: +^ your little muscles will go away if you don't eat though !", "*CHI: <no it> [/] no it <willn't> [>] !", "*MOT: <they'll shrink> [<] !", '*FAT: mhm .', '*CHI: xxx .', '*MOT: oh gee !', '*MOT: that I could live without .', '*CHI: water [!] ?', '*CHI: look !', "*MOT: that's not even water is it ?", '*CHI: yeah .', '*MOT: (..) well +...', "*MOT: I don't have work tomorrow and you don't have day care so we'll just hang out again in the house and then (.) hopefully you'll be all better for Friday .", '*MOT: +^ (be)cause Friday I have [!] to go to work .', '*CHI: <is Daddy doing [?]> [//] is Daddy have work ?', '*MOT: on Friday ?', '*MOT: yeah .', "*MOT: and you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .", '*CHI: okay !', '*CHI: like +...', "*CHI: +, I'm gonna get (.) that maybe I can bring .", "*MOT: well toy day's not &un (.) until the day after tomorrow Chi .", '*MOT: I guess it requires a lot of thought .', '*FAT: what ?', '*MOT: picking out a toy .', '*FAT: oh .', '*MOT: you could bring your Superman cape again .', '*FAT: &=laughs .', '*CHI: how about this ?', '*CHI: how about this ?', '*CHI: can I bring this ?', "*MOT: I don't know bring it in .", "*MOT: +^ I can't see .", '*FAT: yeah !', '*MOT: yeah .', "*MOT: if you didn't scare [!] anybody with it <but &y> [//] sure .", '*CHI: okay .', '*MOT: where did we get that anyway ?', '*MOT: +^ do you remember ?', '*CHI: &-uh <it &w it &w (.) it> [//] <when we went> [//] when Daddy and you and me came (.) and got [!] it .', '*CHI: we went to the store (.) and +/.', '*MOT: on the Cape was it ?', '*FAT: down in Provincetown I think ?', '*FAT: <I think> [>] .', '*MOT: <oh > [<] !', '*MOT: it was in Provincetown ?', '*CHI: yeah it was (.) in this [/] this store .', '*CHI: and a whole bunch of sharks .', '*CHI: and I picked this one out .', '*FAT: mhm [>] .', '*MOT: <oh > [<] yeah !', '*CHI: and that was good !', "*MOT: looks like it has got a big smile [!] doesn't it ?", '*CHI: it gonna eat something .', '*MOT: ah .', '*MOT: maybe [//] hey !', "*MOT: maybe it'll eat the rest of your cantaloupe .", '*CHI: okay .', "*CHI: I'll try it .", '*CHI: www .', '*MOT: oh okay .', "*MOT: maybe that wasn't such a good idea was it ?", '*FAT: can I have this thing ?', '*CHI: yeah .', '*MOT: &=laughs .', '*CHI: you can help me with my supper .', '*CHI: okay ?', '*FAT: mm !', '*FAT: mm [>] .', '*MOT: &=laughs [<] .', '*MOT: had a hankering for egg salad did you &=laughs ?', "*CHI: www &=noise xxx it's <not goin(g) (.) go away> [>] .", "*FAT: <it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .", '*MOT: &=laughs .', "*CHI: it don't fit [?] .", "*MOT: well they'll shrink if you keep this up .", "*MOT: you didn't eat hardly anything yesterday and you <shertainly [: certainly]> [//] certainly didn't eat hardly anything today [>] .", '*CHI: <www &=screeches > [<] !', '*CHI: and I will eat this !', '*MOT: had about three bites of breakfast .', '*MOT: had about two bites o(f) lunch .', '*MOT: and <two bites> [>] of supper .', '*CHI: <and I will> [<] +/.', '*CHI: +, eat this [!] whole thing .', "*MOT: well there's two more bites .", '*MOT: whoa !', '*CHI: hm: .', "*MOT: (.) but I guess if you're not throwing up or anything .", "*MOT: +^ I guess that's okay .", '*CHI: (..) Ma ?', '*MOT: what ?', '*CHI: Jesse got his &-um robot hand too .', '*MOT: Jesse has a robot hand ?', '*CHI: yeah .', '*MOT: Jesse at school ?', '*CHI: yep .', '*CHI: a different Jesse .', '*MOT: right .', "*MOT: that's what I figured .", '*MOT: a robot hand ?', '*MOT: <is that what you said> [>] ?', '*CHI: <well he got a toy [!]> [<] robot hand I mean .', "*MOT: well that's what I figured .", "*MOT: what's that like ?", "*MOT: it's just a hand ?", '*MOT: does that (.) do anything ?', '*CHI: well if someone (.) can do this [!] .', '*CHI: and can do this [!] .', '*MOT: &=laughs .', '*MOT: it can do that !', '*MOT: &=laughs [>] .', '*CHI: <<and someone> [/] and> [<] someone can shake his hand .', '*CHI: you can shake his hand .', "*MOT: oh [>] well that's pretty handy &=laughs !", '*FAT: mhm [<] .', '*CHI: will you buy me xxx toy someday ?', "*MOT: well we'll see .", '*MOT: +^ if we see it in the store .', "*MOT: if it's cheap .", '*MOT: have extra money .', "*MOT: and you're being really unbelievably good .", "*MOT: and I'm inclined to buy you something .", '*CHI: 0 .', "*MOT: that [!] I don't like at all .", '*CHI: why ?', "*MOT: because I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .", '*CHI: why ?', "*MOT: I don't know .", '*MOT: it just bothers me .', "*MOT: pretending to shoot somebody isn't really a nice thing .", "*CHI: I'm not shooting !", '*MOT: well it looks like it .', '*CHI: (.) this is a telescope .', '*MOT: a telescope ?', '*CHI: yup .', '*CHI: I was gonna xxx .', '*MOT: ah !', '*CHI: xxx table .', '*MOT: oh !', "*MOT: okay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .", '*MOT: okay [>] ?', "*FAT: <don't talk> [<] anymore ?", "*MOT: don't talk anymore with your mouth &=laughs full of food okay ?", '*MOT: (..) makes me mad !', '*MOT: are you gonna eat your cantaloupe ?', '*MOT: oh great [>] !', '*FAT: <here dip [/]> [<] dip it in your juice and see what it tastes like .', '*CHI: no way !', '*MOT: &=laughs [>] .', '*CHI: yuck [<] !', '*CHI: son of a gun !', '*MOT: son of a gun huh ?', '*MOT: www &=laughs who [=? what] are you trying to kill [=? do] anyways ?', '*CHI: bang@o bang@o .', '*MOT: &=laughs .', '*MOT: xxx .', '*MOT: why ?', '*MOT: too loud ?', '*MOT: is that the guy on the motorcycle ?', '*CHI: a Harley Davidson .', '*MOT: oh .', "*MOT: must be (be)cause it's loud , huh ?", "*CHI: are you recording (.) us that we're talking about ?", '*MOT: I think so .', '*MOT: +^ is there a little red light that goes on ?', '*MOT: I think it is .', "*MOT: then we're gonna mail it .", '*MOT: remember those two young women that came over ?', '*CHI: I remember (th)em !', '*MOT: &-um (.) and &-um (.) they asked me a whole bunch of questions ?', '*CHI: yep .', '*CHI: xxx .', '*CHI: see ?', '*CHI: xxx still has +...', '*MOT: oh yeah .', "*MOT: alright well maybe you shouldn't play with that because I don't know if the xxx on it really +...", '*CHI: okay .', "*MOT: okay but it's not ours .", "*MOT: +, is what I'm (.) trying to say .", '*MOT: okay ?', '*MOT: we sort of borrowed it from them .', '*CHI: <it too> [/] it too little ?', '*MOT: www [=! clears throat] right .', '*MOT: (.) <Kennan and &-uh Lisa> [= experimenters] ?', '*CHI: Lisa and +/.', '*MOT: Kennan and Lisa right ?', "*MOT: <don't you think that's &-uh> [//] yeah I know it was Lisa .", '*CHI: Kennan Lisa ?', '*MOT: yeah and +/.', '*CHI: yeah she got [//] brought [=? bought] you toys !', '*CHI: and then she xxx (.) spoons [?] and then you played .', '*MOT: right !', "*MOT: that's right !", '*MOT: exactly we [>] +/.', '*CHI: xxx [<] played .', '*CHI: this xxx .', '*MOT: and we pretended that we were having breakfast in the cafeteria at school [!] huh ?', '*CHI: yeah will you brought me money and toys sometime ?', '*CHI: are you xxx +/.', "*MOT: oh my gosh I'm losing count !", '*MOT: wait a minute now you want a robot hand +...', '*CHI: yeah .', '*MOT: and (.) what else ?', '*CHI: &-um and <a tray> [//] a toy tray .', '*MOT: oh right !', '*CHI: <xxx (.) and a (.) and a> [//] and (.) all those plates .', '*CHI: and all those cups [?] .', '*CHI: <and &-um> [/] and <cars and> [>] (.) &-uh !', '*FAT: <cups and a saucer> [<] .', '*CHI: <and is> [//] <and (.) all> [/] and all those cups .', '*MOT: ah !', '*CHI: now you understand ?', '*MOT: sort o(f) like you own &-um dishes [//] set of dishes huh ?', '*CHI: yeah <and (.) and> [/] and yeah !', '*CHI: know how many toys that makes ?', '*MOT: oh gosh !', '*MOT: +^ how many ?', '*CHI: ten !', '*MOT: I have_to buy ten toys now ?', '*MOT: but your birthday was only a month ago !', "*MOT: and Christmas [!] isn't for (.) five [!] more months !", '*CHI: I know !', '*MOT: uhoh .', '*CHI: will you buy me some new toys someday ?', '*MOT: sure .', '*CHI: &-uh (.) ten toys ?', '*MOT: oh gosh yeah .', "*MOT: sure I'll buy you ten toys sometime .", '*FAT: here you want some more of this cantaloupe Chi ?', '*FAT: xxx .', '*CHI: <gob@o gob@o gob@o> [= gobble] .', '*MOT: orange food is almost as good as green food to eat .', '*FAT: xxx [>] .', "*CHI: hey [!] <don't cover> [<] up (.) the broccoli !", '*FAT: huh ?', '*MOT: you want more broccoli ?', '*MOT: huh [!] ?', '*CHI: hm: .', "*MOT: I'll bring you some broccoli .", "*MOT: +^ it's good !", "*MOT: +^ it's like eating a little tree !", "*CHI: I'll try it !", '*MOT: you will ?', '*MOT: Chi wants to try a little (.) tree of broccoli .', '*FAT: oh he does huh ?', '*MOT: yeah !', "*FAT: good I'll bring <him some to eat> [>] .", '*CHI: <is it good> [<][>] ?', '*MOT: <(be)cause at> [<] school they told me that you always [!] try new food .', "*MOT: but you willn't do that here !", '*CHI: xxx but +/.', '*MOT: you always tell me that you eat your salad [!] and your carrots and peas .', '*CHI: xxx .', "*CHI: but if I don't [!] like it I'll spit it out on my plate okay ?", '*MOT: alright .', '*MOT: &=laughs .', '*CHI: hey Father_name !', '*FAT: yes ?', "*CHI: &i if I don't like it right ?", "*CHI: I'll spit it out on my plate .", '*FAT: okay .', '*CHI: know what ?', "*CHI: +^ I'm gonna bite it this many times .", '*CHI: one two three (.) right ?', '*CHI: four five six seven eight nine ten .', '*FAT: &=whistles .', '*FAT: wow [>] !', '*CHI: eleven [<] twelve .', '*CHI: xxx .', '*MOT: hey Chi come on in here !', "*FAT: go on in there I'll bring you a piece of it [= broccoli] .", '*FAT: here come on .', "*CHI: (.) shouldn't have [!] one !", '*MOT: wow !', "*FAT: okay here's a little [>] +/.", '*CHI: watch [<] !', '*CHI: watch out !', '*MOT: come on !', '*MOT: come and <try one> [>] of these little trees .', '*CHI: watch [<] !', "*FAT: here's a little <piece of> [>] tree for you .", '*CHI: <watch [=? what]> [<] .', '*FAT: a piece of broccoli .', '*CHI: could you put it on my plate ?', '*FAT: okay .', '*CHI: &w watch how [/] how high I can throw it .', '*MOT: wow !', '*MOT: did you see how high he threw that [>] ?', '*FAT: mm [<] .', '*FAT: okay here try this .', "*FAT: &i &i it's higher !", '*MOT: okay .', "*MOT: why don't you sit down and try that broccoli now ?", '*CHI: xxx .', '*CHI: no !', "*MOT: he's not exactly sitting down .", "*CHI: &F &F Father_name don't give me your big pieces .", '*FAT: no [/] no .', "*FAT: +^ that's [/] that's for me .", '*CHI: oh .', "*FAT: <we'll do it> [//] we'll eat it together .", '*FAT: ready ?', '*FAT: go !', '*MOT: &=laughs .', '*CHI: ugh !', "*MOT: Chi you didn't even (.) get your mouth [!] around it .", '*MOT: <how do you know> [>] ?', '*FAT: <well what happened> [<] ?', "*MOT: +^ it didn't even touch your tongue !", "*MOT: how do you know you don't like it !", '*FAT: what happened ?', '*CHI: xxx &=laughs .', "*CHI: I just didn't like (.) the top !", "*MOT: you didn't like the top ?", "*FAT: why you didn't like the way it feels or +...", "*CHI: I didn't like the way it feels .", '*FAT: what about the taste ?', '*FAT: did you like the taste ?', '*MOT: &=laughs .', "*FAT: I don't <think you even> [>] +/.", '*MOT: <like the color> [<] ?', '*MOT: &=laughs [>] .', '*FAT: &=laughs [<][>] .', '*CHI: no [<] !', '*CHI: feel my muscles !', '*MOT: oh boy they feel kinda puny today !', '*CHI: are they big ?', '*MOT: I think they shrank a tiny bit .', "*MOT: I think they got a little smaller [!] because you haven't been eating very well lately .", '*CHI: www .', "*FAT: watch now <why don't you> [//] let's try it again .", '*FAT: <put that one> [/] put that one back in your mouth .', '*FAT: give it another try .', '*CHI: no way !', "*FAT: you didn't even let it try !", '*CHI: www .', "*MOT: you didn't even bite it !", '*FAT: got [?] it ?', '*MOT: <Chi> [>] +/.', '*FAT: watch [<] .', '*MOT: not at the dinner table .', '*MOT: even Daddy eats that [>] !', '*FAT: mm [<] .', '*CHI: www &=yelps .', '*FAT: give it a try .', '*CHI: no way .', '*MOT: it has got candy inside .', "*MOT: I didn't want to have_to tell you that but +...", '*CHI: candy inside ?', '*MOT: yeah .', '*FAT: yeah chewy Tootsie Roll .', "*MOT: you know those lollipops that you eat and then there's chocolate inside ?", '*CHI: yeah [?] .', "*MOT: that's sorta [: sort of] what it's like .", '*CHI: but chocolate <gives me a tummy+ache> [>] .', '*MOT: <&=laughs > [<] .', '*CHI: <it makes me xxx> [>] .', "*MOT: <he's not> [<] <buying that line [=? one]> [>] .", '*FAT: <what did he say> [<] ?', '*FAT: chocolate gives him a tummy+ache ?', '*MOT: yeah &=laughs .', "*CHI: I don't like chocolate xxx [>] .", '*FAT: clever [<] .', '*MOT: <yes you do> [<] !', "*FAT: you don't like it <now xxx> [>] .", "*MOT: <you don't like> [<] chocolate broccoli ?", '*FAT: <&=laughs > [>] .', '*CHI: no [<] .', '*CHI: I like chocolate cake .', '*MOT: you only want chocolate cake ?', '*MOT: well it has got chocolate cake sprinkled inside it .', "*CHI: I don't like chocolate [?] .", "*MOT: well (.) you're not gonna eat it then ?", '*CHI: xxx .', "*MOT: someday when you get a little older I think you'll like all kinds of stuff .", "*CHI: you don't feel muscle inside +/.", '*MOT: I think it held this one .', '*MOT: look how xxx .', '*CHI: (.) xxx www &=laughs .', '*MOT: &=laughs .', '*CHI: my muscles strong right ?', '*MOT: yeah .', '*MOT: you know what ?', '*MOT: +^ ow !', '*CHI: are all my muscles strong ?', '*MOT: yes .', '*MOT: your muscles are very strong .', "*CHI: don't [!] tell me they'll get little .", "*MOT: well , they will if you don't eat !", "*MOT: you're gonna get all skinny if you don't eat .", '*MOT: and your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .', '*CHI: www .', '*FAT: &aw .', '*FAT: jeepers !', '*MOT: oh !', '*MOT: you mean I have_to eat !', '*CHI: oh .', "*MOT: then you're gonna start shrinking (.) and your teeth will fall out .", '*MOT: +^ and (.) your fingernails will fall out &=laughs .', '*FAT: stop it !', '*MOT: &=laughs .', "*MOT: that's if you don't eat for a long long time .", '*FAT: xxx .', '*MOT: well are you [>] done ?', '*FAT: so [<] +/.', '*CHI: yeah .', '*MOT: are you done ?', '*FAT: yeah .', "*MOT: I'm done .", "*MOT: let's <clean up now www &=laughs > [>] .", '*CHI: <xxx have_to get muscles [?]> [<] .', '*CHI: right ?', '*CHI: my muscles will get bigger [>] .', '*MOT: no [<] .', "*MOT: +^ they willn't .", '*FAT: no .', "*MOT: I [//] (be)cause I know that you're gonna start <eating again pretty soon> [>] .", '*FAT: <I think you feel better> [<] .', '*FAT: yeah .', '*MOT: are you done with this ?', "*FAT: you don't want <another bite> [>] ?", '*MOT: <do you want any more> [<] ?', "*FAT: you don't want any more of that delicious broccoli huh ?", '*CHI: no way .', '*MOT: oh well .', '*FAT: okay [>] .', "*MOT: you [<] don't any more cantaloupe ?", '*CHI: hm: .', '*MOT: okay .', '*FAT: thanks Mommy that was a great supper !', "*MOT: you're welcome .", '*CHI: xxx .', '*FAT: you wanna <write a> [/] write a letter to Mary now ?', '*CHI: <yup [!] today> [=? yesterday] +/.', '*FAT: okay .', '*CHI: xxx .', '*FAT: <wait a minute> [/] wait a minute .', '*FAT: <we have_to> [/] we have_to wait for xxx .']
loading solution set
LINE NO ->  16
LINE NO ->  20
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  25
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  28
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  34
LINE NO ->  37
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  40
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  43
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  47
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  50
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  51
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  54
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  57
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  61
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  63
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  67
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  71
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  74
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  77
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  80
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  93
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  96
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  102
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9456ab710>)
[('save', 'VB'), ('some', 'DT'), ('and', 'CC'), ('don', 'VB'), ('t', 'JJ'), ('eat', 'NN'), ('all', 'PDT'), ('the', 'DT'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  107
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  111
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  115
LINE NO ->  116
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  119
LINE NO ->  120
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  123
LINE NO ->  124
LINE NO ->  125
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  129
LINE NO ->  130
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  131
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  137
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  141
LINE NO ->  144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  148
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94544dc20>)
[('don', 'NN'), ('t', 'NN'), ('squish', 'VB'), ('it', 'PRP'), ('so', 'RB'), ('hard', 'RB'), ('that', 'IN'), ('it', 'PRP'), ('comes', 'VBZ'), ('out', 'RP')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  157
LINE NO ->  158
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  165
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  173
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  177
LINE NO ->  180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  185
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  188
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9456c2cf8>)
[('well', 'RB'), ('if', 'IN'), ('it', 'PRP'), ('hurts', 'VBZ'), ('that', 'IN'), ('much', 'JJ'), ('just', 'RB'), ('eat', 'VB'), ('your', 'PRP$'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0})
LINE NO ->  193
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  196
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  200
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  203
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  206
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  213
LINE NO ->  214
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  217
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  220
broccoli
broccoli broccoli 30
[('want', 'VB'), ('some', 'DT'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  224
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  230
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  234
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  238
LINE NO ->  241
LINE NO ->  244
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  247
LINE NO ->  251
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  253
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  256
LINE NO ->  257
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  260
LINE NO ->  261
LINE NO ->  264
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  267
LINE NO ->  268
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  271
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  274
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  277
LINE NO ->  278
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  283
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0})
LINE NO ->  288
juice
juice juice 52
[('watch', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  295
LINE NO ->  298
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  302
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  309
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  312
LINE NO ->  317
LINE NO ->  320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  323
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  327
LINE NO ->  328
LINE NO ->  332
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  336
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  339
LINE NO ->  342
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  345
LINE NO ->  348
LINE NO ->  352
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  355
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  359
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  362
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  365
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  368
fish
fish fish 305
[('didn', 'NN'), ('t', 'NN'), ('we', 'PRP'), ('play', 'VBP'), ('fish', 'JJ')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  372
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  379
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  382
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  387
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  391
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  395
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  399
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  403
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  407
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  410
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  414
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  419
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  425
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  428
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  431
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  434
fish
fish fish 305
[('and', 'CC'), ('we', 'PRP'), ('played', 'VBD'), ('fish', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  440
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  443
LINE NO ->  444
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  447
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  453
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  457
LINE NO ->  458
LINE NO ->  462
LINE NO ->  467
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  473
LINE NO ->  477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  482
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0})
LINE NO ->  490
LINE NO ->  495
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  498
LINE NO ->  499
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  502
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  507
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  511
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  516
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  520
LINE NO ->  523
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  527
fish
fish fish 305
[('we', 'PRP'), ('did', 'VBD'), ('we', 'PRP'), ('played', 'VBD'), ('fish', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  530
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  533
fish
fish fish 305
[('and', 'CC'), ('we', 'PRP'), ('played', 'VBD'), ('another', 'DT'), ('fish', 'NN'), ('right', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  537
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  540
fish
fish fish 305
[('did', 'VBD'), ('we', 'PRP'), ('play', 'VB'), ('fish', 'JJ'), ('twice', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  544
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  547
LINE NO ->  550
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  554
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  557
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  561
LINE NO ->  563
LINE NO ->  564
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  567
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  571
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  575
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  578
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  584
chicken
chicken chicken 234
[('wan', 'NN'), ('na', 'TO'), ('try', 'VB'), ('some', 'DT'), ('chicken', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  588
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  591
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  597
LINE NO ->  600
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0, -1: 1})
LINE NO ->  605
LINE NO ->  608
chicken
chicken chicken 234
[('that', 'IN'), ('that', 'DT'), ('was', 'VBD'), ('chicken', 'VBN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  611
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  614
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  617
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  623
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  626
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  629
LINE NO ->  630
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  633
LINE NO ->  636
LINE NO ->  639
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  642
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  646
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 1, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, -1: 1})
LINE NO ->  656
chicken
chicken chicken 234
[('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('couple', 'JJ'), ('o', 'JJ'), ('f', 'NN'), ('weeks', 'NNS'), ('ago', 'IN'), ('that', 'IN'), ('you', 'PRP'), ('ate', 'VBP'), ('that', 'IN'), ('chicken', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  661
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  667
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  671
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  676
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  681
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  687
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  692
LINE NO ->  695
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  701
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  707
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  711
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 1, 94: 1, 95: 1, 96: 1, 97: 0, 98: 0, 99: 0})
LINE NO ->  718
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  721
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  726
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  731
LINE NO ->  736
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  739
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  743
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  751
LINE NO ->  755
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  758
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  762
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  766
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453e8248>)
[('it', 'PRP'), ('s', 'VBZ'), ('really', 'RB'), ('hard', 'JJ'), ('to', 'TO'), ('understand', 'VB'), ('you', 'PRP'), ('when', 'WRB'), ('you', 'PRP'), ('talk', 'VBP'), ('with', 'IN'), ('food', 'NN'), ('in', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('though', 'IN'), ('okay', 'NN')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 1, 102: 1, 103: 1, 104: 0, 105: 0, 106: 0})
LINE NO ->  774
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  778
LINE NO ->  783
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  784
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  787
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  791
LINE NO ->  795
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9456a7fc8>)
[('oh', 'UH'), ('chi', 'NN'), ('not', 'RB'), ('the', 'DT'), ('fan', 'NN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  798
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  801
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  806
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  811
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  815
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  818
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  824
LINE NO ->  825
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  829
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  833
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  836
LINE NO ->  840
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  844
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9454066c8>)
[('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('any', 'DT'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  848
LINE NO ->  851
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0})
LINE NO ->  859
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  864
LINE NO ->  867
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 1, 148: 1, 149: 1, 150: 0, 151: 0, 152: 0, -1: 1})
LINE NO ->  878
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  881
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  884
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  886
LINE NO ->  889
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  892
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  894
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  897
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  900
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  906
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  910
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  914
LINE NO ->  917
LINE NO ->  920
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  926
LINE NO ->  927
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  930
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  933
LINE NO ->  936
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  941
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  944
LINE NO ->  949
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  952
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  957
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453e83b0>)
[('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('even', 'RB'), ('want', 'VBP'), ('your', 'PRP$'), ('delicious', 'JJ'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  963
LINE NO ->  967
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945406ef0>)
[('nice', 'JJ'), ('juicy', 'NN'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  972
juice
juice juice 52
[('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('drink', 'VBP'), ('your', 'PRP$'), ('juice', 'NN'), ('at', 'IN'), ('least', 'JJS')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  978
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  981
dehydrated
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453f7c68>)
[('i', 'JJ'), ('m', 'NN'), ('afraid', 'IN'), ('you', 'PRP'), ('re', 'VBP'), ('becoming', 'VBG'), ('dehydrated', 'VBD')]
['dehydrated']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  986
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  989
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  994
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  997
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1000
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1004
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1005
LINE NO ->  1008
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1011
water
water water 18
[('water', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1015
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1018
water
water water 18
[('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('even', 'RB'), ('water', 'NN'), ('is', 'VBZ'), ('it', 'PRP')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1023
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1026
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1033
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, -1: 1})
LINE NO ->  1047
LINE NO ->  1053
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  1057
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1061
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1064
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, -1: 1})
LINE NO ->  1071
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1074
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1077
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0})
LINE NO ->  1083
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  1088
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1094
LINE NO ->  1097
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1100
LINE NO ->  1103
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1108
LINE NO ->  1109
LINE NO ->  1113
LINE NO ->  1117
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1121
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1124
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1127
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1130
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1133
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1138
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1142
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1147
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1151
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 1, 102: 1, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0})
LINE NO ->  1156
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1159
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1162
LINE NO ->  1165
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1168
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1171
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1174
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1177
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1184
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1190
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1193
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1199
LINE NO ->  1202
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1205
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1208
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453f7d88>)
[('maybe', 'RB'), ('it', 'PRP'), ('ll', 'VBZ'), ('eat', 'VBD'), ('the', 'DT'), ('rest', 'NN'), ('of', 'IN'), ('your', 'PRP$'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  1213
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1216
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1221
LINE NO ->  1224
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1229
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1233
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1236
LINE NO ->  1237
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1241
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1245
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1248
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1251
LINE NO ->  1252
egg
egg egg 357
[('had', 'VBD'), ('a', 'DT'), ('hankering', 'NN'), ('for', 'IN'), ('egg', 'NN'), ('salad', 'NN'), ('did', 'VBD'), ('you', 'PRP'), ('laughs', 'VB')]
['egg']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1258
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  1261
egg
egg egg 357
[('it', 'PRP'), ('looks', 'VBZ'), ('so', 'RB'), ('good', 'JJ'), ('all', 'PDT'), ('the', 'DT'), ('egg', 'NN'), ('salad', 'NN'), ('s', 'VBD'), ('popping', 'VBG'), ('out', 'IN'), ('of', 'IN'), ('the', 'DT'), ('sandwiches', 'NNS')]
['egg']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0})
LINE NO ->  1267
LINE NO ->  1268
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1271
LINE NO ->  1276
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, -1: 1})
LINE NO ->  1284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1285
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1288
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1301
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1307
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1310
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1313
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  1318
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1321
LINE NO ->  1325
LINE NO ->  1330
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  1333
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1337
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1340
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1344
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1347
LINE NO ->  1350
LINE NO ->  1353
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1356
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1360
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1364
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  1369
LINE NO ->  1373
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1377
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1381
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1385
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1388
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1391
LINE NO ->  1392
LINE NO ->  1395
LINE NO ->  1396
shake
shake shake 148
[('and', 'CC'), ('someone', 'NN'), ('and', 'CC'), ('someone', 'NN'), ('can', 'MD'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  1399
shake
shake shake 148
[('you', 'PRP'), ('can', 'MD'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1402
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  1405
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1409
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1413
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1416
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1419
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1422
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1425
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1429
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1434
LINE NO ->  1437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1442
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1446
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453eab90>)
[('because', 'IN'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('funny', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('the', 'DT'), ('correct', 'JJ'), ('thing', 'NN'), ('to', 'TO'), ('do', 'VB'), ('at', 'IN'), ('the', 'DT'), ('dinner', 'NN'), ('table', 'NN'), ('or', 'CC'), ('at', 'IN'), ('your', 'PRP$'), ('mother', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 1, 103: 0, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 1, 122: 1, 123: 1, 124: 1, 125: 1, 126: 1, 127: 0, 128: 0, 129: 0, -1: 1})
LINE NO ->  1457
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1461
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1464
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1467
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  1472
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1475
LINE NO ->  1479
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  1482
LINE NO ->  1486
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1489
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1492
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1495
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9456b3518>)
[('xxx', 'NNS'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1498
LINE NO ->  1502
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945410518>)
[('okay', 'RB'), ('well', 'RB'), ('look', 'VB'), ('don', 'JJ'), ('t', 'JJ'), ('eat', 'NN'), ('anymore', 'RB'), ('with', 'IN'), ('your', 'PRP$'), ('mouth', 'NN'), ('full', 'JJ'), ('of', 'IN'), ('food', 'NN'), ('be', 'VB'), ('cause', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('hard', 'JJ'), ('to', 'TO'), ('understand', 'VB')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 1, 84: 1, 85: 1, 86: 1, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, -1: 1})
LINE NO ->  1509
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1513
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1517
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  1524
LINE NO ->  1527
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453dc878>)
[('are', 'VBP'), ('you', 'PRP'), ('gon', 'JJ'), ('na', 'TO'), ('eat', 'VB'), ('your', 'PRP$'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1532
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1535
juice
juice juice 52
[('here', 'RB'), ('dip', 'VBZ'), ('dip', 'NN'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('juice', 'NN'), ('and', 'CC'), ('see', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('tastes', 'VBZ'), ('like', 'IN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dip
dip dip 119
[('here', 'RB'), ('dip', 'VBZ'), ('dip', 'NN'), ('it', 'PRP'), ('in', 'IN'), ('your', 'PRP$'), ('juice', 'NN'), ('and', 'CC'), ('see', 'VB'), ('what', 'WP'), ('it', 'PRP'), ('tastes', 'VBZ'), ('like', 'IN')]
['dip']
('food -> ', [['juice', 'Fruits and Fruit Juices'], ['dip', 'Soups, Sauces, and Gravies']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  1540
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1543
LINE NO ->  1544
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1547
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1550
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1555
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  1560
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1563
LINE NO ->  1564
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1565
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1569
LINE NO ->  1573
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1578
LINE NO ->  1581
LINE NO ->  1584
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1591
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  1597
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1600
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0})
LINE NO ->  1606
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1610
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1615
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  1621
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1624
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  1630
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1633
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1634
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1638
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1641
LINE NO ->  1645
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, -1: 1})
LINE NO ->  1652
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1655
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1658
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  1662
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1666
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1671
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  1675
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1678
LINE NO ->  1682
LINE NO ->  1685
LINE NO ->  1689
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1692
LINE NO ->  1696
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1699
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1703
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  1708
LINE NO ->  1712
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1715
LINE NO ->  1718
LINE NO ->  1721
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1724
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 1, 85: 1, 86: 1, 87: 0, 88: 0, 89: 0, -1: 1})
LINE NO ->  1731
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1737
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1740
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1744
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  1749
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1752
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1756
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  1759
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1762
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0})
LINE NO ->  1765
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1768
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  1771
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1774
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  1777
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1780
LINE NO ->  1784
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0})
LINE NO ->  1791
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1794
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1798
LINE NO ->  1801
LINE NO ->  1805
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1808
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1812
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1818
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  1824
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1827
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1830
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1836
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1839
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1843
LINE NO ->  1846
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  1851
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945408710>)
[('here', 'RB'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('this', 'DT'), ('cantaloupe', 'NN'), ('chi', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1857
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1858
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  1861
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94540da70>)
[('orange', 'NN'), ('food', 'NN'), ('is', 'VBZ'), ('almost', 'RB'), ('as', 'RB'), ('good', 'JJ'), ('as', 'IN'), ('green', 'JJ'), ('food', 'NN'), ('to', 'TO'), ('eat', 'VB')]
['green']
('food -> ', [])
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94540f200>)
[('orange', 'NN'), ('food', 'NN'), ('is', 'VBZ'), ('almost', 'RB'), ('as', 'RB'), ('good', 'JJ'), ('as', 'IN'), ('green', 'JJ'), ('food', 'NN'), ('to', 'TO'), ('eat', 'VB')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  1866
LINE NO ->  1867
broccoli
broccoli broccoli 30
[('hey', 'NN'), ('don', 'NN'), ('t', 'NN'), ('cover', 'VB'), ('up', 'RP'), ('the', 'DT'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1870
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1875
broccoli
broccoli broccoli 30
[('you', 'PRP'), ('want', 'VBP'), ('more', 'JJR'), ('broccoli', 'NNS')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1879
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1883
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1886
broccoli
broccoli broccoli 30
[('i', 'NN'), ('ll', 'VBP'), ('bring', 'NN'), ('you', 'PRP'), ('some', 'DT'), ('broccoli', 'NNS')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  1889
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1892
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1896
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1899
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1903
broccoli
broccoli broccoli 30
[('chi', 'NN'), ('wants', 'VBZ'), ('to', 'TO'), ('try', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('tree', 'NN'), ('of', 'IN'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1908
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1912
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1915
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  1920
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1924
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  1929
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1932
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1935
peas
peas peas 116
[('you', 'PRP'), ('always', 'RB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('your', 'PRP$'), ('salad', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS')]
['peas']
('food -> ', [['peas', 'Legumes and Legume Products']])
carrots
carrots carrots 35
[('you', 'PRP'), ('always', 'RB'), ('tell', 'VB'), ('me', 'PRP'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('your', 'PRP$'), ('salad', 'NN'), ('and', 'CC'), ('your', 'PRP$'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS')]
['carrots']
('food -> ', [['peas', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, -1: 1})
LINE NO ->  1941
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1942
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  1950
LINE NO ->  1953
LINE NO ->  1954
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1957
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1961
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1965
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  1970
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1973
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1977
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  1982
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  1986
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1993
LINE NO ->  1994
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1997
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  2000
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2002
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2005
broccoli
broccoli broccoli 30
[('go', 'VB'), ('on', 'IN'), ('in', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('bring', 'VBG'), ('you', 'PRP'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('it', 'PRP'), ('broccoli', 'VB')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0})
LINE NO ->  2010
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2013
LINE NO ->  2016
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2019
LINE NO ->  2022
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  2025
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2028
LINE NO ->  2031
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  2036
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  2039
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  2044
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  2047
broccoli
broccoli broccoli 30
[('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  2050
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2056
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2059
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  2063
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2066
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  2071
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2074
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2077
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  2080
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2083
broccoli
broccoli broccoli 30
[('why', 'WRB'), ('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('sit', 'VBP'), ('down', 'RP'), ('and', 'CC'), ('try', 'VB'), ('that', 'DT'), ('broccoli', 'NN'), ('now', 'RB')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  2089
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2090
LINE NO ->  2093
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  2097
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  2102
LINE NO ->  2105
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  2108
LINE NO ->  2111
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  2114
LINE NO ->  2118
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  2121
LINE NO ->  2122
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2125
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  2131
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2135
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2139
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  2143
LINE NO ->  2150
LINE NO ->  2154
LINE NO ->  2155
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2158
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2162
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  2167
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2172
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  2176
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2180
LINE NO ->  2181
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2184
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2189
LINE NO ->  2190
LINE NO ->  2191
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2195
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2198
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  2201
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2205
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2209
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, -1: 1})
LINE NO ->  2217
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  2222
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  2226
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  2229
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2232
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2236
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2238
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2241
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2245
LINE NO ->  2248
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  2251
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94540db00>)
[('not', 'RB'), ('at', 'IN'), ('the', 'DT'), ('dinner', 'NN'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2254
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  2257
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2260
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  2262
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2265
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2269
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  2277
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2281
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  2287
chocolate
chocolate chocolate 598
[('you', 'PRP'), ('know', 'VBP'), ('those', 'DT'), ('lollipops', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('and', 'CC'), ('then', 'RB'), ('there', 'EX'), ('s', 'JJ'), ('chocolate', 'NN'), ('inside', 'IN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  2294
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2297
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  2303
chocolate
chocolate chocolate 598
[('but', 'CC'), ('chocolate', 'NN'), ('gives', 'VBZ'), ('me', 'PRP'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  2307
LINE NO ->  2308
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  2311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0})
LINE NO ->  2314
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2318
chocolate
chocolate chocolate 598
[('chocolate', 'NN'), ('gives', 'VBZ'), ('him', 'PRP'), ('a', 'DT'), ('tummy', 'NN'), ('ache', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  2322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  2325
chocolate
chocolate chocolate 598
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('xxx', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2329
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2332
LINE NO ->  2335
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  2338
broccoli
broccoli broccoli 30
[('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
chocolate
chocolate chocolate 598
[('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN'), ('broccoli', 'NN')]
['chocolate']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products'], ['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  2342
LINE NO ->  2343
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2346
chocolate cake
chocolate cake chocolate cake 371
[('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate', 'cake']
('food -> ', [['chocolate cake', 'Baked Products']])
chocolate
chocolate chocolate 598
[('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate']
('food -> ', [['chocolate cake', 'Baked Products'], ['chocolate', 'Sweets']])
cake
cake cake 412
[('i', 'NNS'), ('like', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['cake']
('food -> ', [['chocolate cake', 'Baked Products'], ['chocolate', 'Sweets'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2349
chocolate cake
chocolate cake chocolate cake 371
[('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate', 'cake']
('food -> ', [['chocolate cake', 'Baked Products']])
chocolate
chocolate chocolate 598
[('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['chocolate']
('food -> ', [['chocolate cake', 'Baked Products'], ['chocolate', 'Sweets']])
cake
cake cake 412
[('you', 'PRP'), ('only', 'RB'), ('want', 'VBP'), ('chocolate', 'NN'), ('cake', 'NN')]
['cake']
('food -> ', [['chocolate cake', 'Baked Products'], ['chocolate', 'Sweets'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2353
chocolate cake
chocolate cake chocolate cake 371
[('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')]
['chocolate', 'cake']
('food -> ', [['chocolate cake', 'Baked Products']])
chocolate
chocolate chocolate 598
[('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')]
['chocolate']
('food -> ', [['chocolate cake', 'Baked Products'], ['chocolate', 'Sweets']])
cake
cake cake 412
[('well', 'RB'), ('it', 'PRP'), ('has', 'VBZ'), ('got', 'VBN'), ('chocolate', 'JJ'), ('cake', 'NN'), ('sprinkled', 'VBD'), ('inside', 'IN'), ('it', 'PRP')]
['cake']
('food -> ', [['chocolate cake', 'Baked Products'], ['chocolate', 'Sweets'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  2358
chocolate
chocolate chocolate 598
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2361
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  2367
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  2375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2378
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  2385
LINE NO ->  2386
LINE NO ->  2387
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  2391
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2394
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2398
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  2401
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2405
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2410
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  2413
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  2418
LINE NO ->  2423
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  2428
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 1, 97: 1, 98: 1, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 1, 121: 1, 122: 1, 123: 1, 124: 0, 125: 0, 126: 0, -1: 1})
LINE NO ->  2435
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2437
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2438
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2441
LINE NO ->  2444
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2448
LINE NO ->  2451
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  2457
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  2461
LINE NO ->  2464
LINE NO ->  2465
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  2472
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2473
LINE NO ->  2477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2480
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2483
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2486
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2489
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2492
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  2496
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  2499
LINE NO ->  2504
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  2507
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2510
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2513
LINE NO ->  2516
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 0, 85: 0, 86: 0, -1: 1})
LINE NO ->  2522
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  2525
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2528
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2532
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  2536
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2540
broccoli
broccoli broccoli 30
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('that', 'DT'), ('delicious', 'JJ'), ('broccoli', 'NN'), ('huh', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  2546
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2549
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2552
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2555
cantaloupe
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94540f5f0>)
[('you', 'PRP'), ('don', 'VBP'), ('t', 'VB'), ('any', 'DT'), ('more', 'JJR'), ('cantaloupe', 'NN')]
['cantaloupe']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  2559
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2562
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2565
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  2569
LINE NO ->  2572
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2573
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  2579
LINE NO ->  2582
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2585
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2586
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  2589
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
loading solution set
calculating
set([(189, (51, 61)), (2278, (6, 11)), (2339, (27, 45)), (1253, (26, 35)), (2304, (10, 19)), (1868, (43, 51)), (657, (61, 68)), (103, (38, 48)), (231, (6, 11)), (634, (10, 18)), (2048, (17, 25)), (1262, (36, 45)), (324, (36, 44)), (1904, (44, 52)), (2541, (48, 56)), (1887, (26, 34)), (1936, (62, 69)), (1012, (6, 11)), (2347, (13, 27)), (2350, (20, 34)), (221, (16, 24)), (2288, (21, 29)), (958, (41, 51)), (1876, (20, 28)), (565, (32, 40)), (1852, (38, 48)), (2270, (17, 22)), (1536, (40, 45)), (2354, (22, 36)), (845, (25, 35)), (2319, (6, 15)), (1936, (43, 48)), (2556, (29, 39)), (585, (25, 32)), (2285, (17, 29)), (321, (18, 26)), (609, (24, 31)), (1936, (74, 78)), (1209, (39, 49)), (2359, (19, 28)), (2006, (53, 61)), (2326, (19, 28)), (830, (11, 19)), (1528, (29, 39)), (2288, (61, 70)), (973, (31, 36)), (1019, (22, 27)), (968, (17, 27)), (2084, (42, 50)), (289, (17, 22))])
[((103, (38, 48)), "*MOT:\tsave some and don't eat all the cantaloupe .\n"), ((189, (51, 61)), '*MOT:\twell if it hurts that much (.) just eat your cantaloupe .\n'), ((221, (16, 24)), '*MOT:\twant some broccoli ?\n'), ((231, (6, 11)), '*MOT:\tlemon [<] !\n'), ((289, (17, 22)), '*FAT:\twatch your juice [>] .\n'), ((321, (18, 26)), '*FAT:\tthat was my ice cube .\n'), ((324, (36, 44)), '*FAT:\tthat little (.) squeal was my ice cube .\n'), ((565, (32, 40)), '*FAT:\t<here have> [<] some more sandwich .\n'), ((585, (25, 32)), '*MOT:\twanna [<] try some chicken ?\n'), ((609, (24, 31)), '*CHI:\tthat [/] that was chicken .\n'), ((634, (10, 18)), '*FAT:\t+, <sandwich then Chi> [<] .\n'), ((657, (61, 68)), '*MOT:\tthat was a couple o(f) weeks [!] ago that you ate that chicken .\n'), ((830, (11, 19)), '*FAT:\tgood sandwich though huh ?\n'), ((845, (25, 35)), "*FAT:\tdon't you want any cantaloupe ?\n"), ((958, (41, 51)), "*MOT:\tdon't you even want your delicious cantaloupe ?\n"), ((968, (17, 27)), '*MOT:\tnice juicy cantaloupe ?\n'), ((973, (31, 36)), "*MOT:\twhy don't you drink your juice at least ?\n"), ((1012, (6, 11)), '*CHI:\twater [!] ?\n'), ((1019, (22, 27)), "*MOT:\tthat's not even water is it ?\n"), ((1209, (39, 49)), "*MOT:\tmaybe it'll eat the rest of your cantaloupe .\n"), ((1253, (26, 35)), '*MOT:\thad a hankering for egg salad did you &=laughs ?\n'), ((1262, (36, 45)), "*FAT:\t<it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .\n"), ((1528, (29, 39)), '*MOT:\tare you gonna eat your cantaloupe ?\n'), ((1536, (40, 45)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1852, (38, 48)), '*FAT:\there you want some more of this cantaloupe Chi ?\n'), ((1868, (43, 51)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1876, (20, 28)), '*MOT:\tyou want more broccoli ?\n'), ((1887, (26, 34)), "*MOT:\tI'll bring you some broccoli .\n"), ((1904, (44, 52)), '*MOT:\tChi wants to try a little (.) tree of broccoli .\n'), ((1936, (43, 48)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (62, 69)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (74, 78)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((2006, (53, 61)), "*FAT:\tgo on in there I'll bring you a piece of it [= broccoli] .\n"), ((2048, (17, 25)), '*FAT:\ta piece of broccoli .\n'), ((2084, (42, 50)), "*MOT:\twhy don't you sit down and try that broccoli now ?\n"), ((2270, (17, 22)), '*MOT:\tit has got candy inside .\n'), ((2278, (6, 11)), '*CHI:\tcandy inside ?\n'), ((2285, (17, 29)), '*FAT:\tyeah chewy Tootsie Roll .\n'), ((2288, (21, 29)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2288, (61, 70)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2304, (10, 19)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2319, (6, 15)), '*FAT:\tchocolate gives him a tummy+ache ?\n'), ((2326, (19, 28)), "*CHI:\tI don't like chocolate xxx [>] .\n"), ((2339, (27, 45)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2347, (13, 27)), '*CHI:\tI like chocolate cake .\n'), ((2350, (20, 34)), '*MOT:\tyou only want chocolate cake ?\n'), ((2354, (22, 36)), '*MOT:\twell it has got chocolate cake sprinkled inside it .\n'), ((2359, (19, 28)), "*CHI:\tI don't like chocolate [?] .\n"), ((2541, (48, 56)), "*FAT:\tyou don't want any more of that delicious broccoli huh ?\n"), ((2556, (29, 39)), "*MOT:\tyou [<] don't any more cantaloupe ?\n")]
set([(1634, (6, 9)), (48, (6, 10)), (289, (23, 26)), (1400, (24, 28)), (2078, (12, 16)), (2249, (6, 11)), (528, (-1, 3)), (2339, (17, 22)), (1785, (60, 63)), (1334, (24, 28)), (448, (10, 13)), (310, (31, 36)), (126, (-1, 4)), (2304, (44, 47)), (1722, (-1, 4)), (279, (-1, 4)), (181, (19, 23)), (1995, (10, 13)), (2429, (120, 124)), (2312, (12, 16)), (1732, (31, 36)), (744, (59, 64)), (647, (75, 79)), (376, (-1, 4)), (293, (-1, 4)), (2362, (32, 35)), (2067, (41, 44)), (2402, (-1, 4)), (2369, (-1, 4)), (1374, (-1, 4)), (1302, (9, 12)), (2368, (6, 9)), (1178, (-1, 4)), (759, (-1, 4)), (1185, (6, 9)), (868, (67, 74)), (1209, (26, 30)), (2309, (24, 27)), (937, (9, 13)), (601, (37, 42)), (1809, (24, 28)), (1230, (-1, 4)), (2075, (6, 10)), (579, (12, 17)), (2233, (-1, 4)), (2354, (22, 36)), (1556, (6, 9)), (1725, (84, 87)), (1009, (-1, 4)), (400, (-1, 4)), (1936, (49, 52)), (512, (46, 51)), (1998, (17, 23)), (1065, (23, 27)), (215, (-1, 4)), (44, (14, 23)), (767, (87, 92)), (1458, (-1, 4)), (1921, (-1, 4)), (97, (41, 44)), (2574, (38, 44)), (1962, (6, 8)), (1556, (27, 32)), (1840, (15, 18)), (1075, (-1, 4)), (1713, (6, 12)), (1019, (22, 27)), (2045, (6, 12)), (968, (17, 27)), (1943, (62, 66)), (1289, (-1, 4)), (1880, (6, 9)), (1704, (-1, 4)), (1089, (-1, 4)), (538, (16, 19)), (2590, (34, 38)), (468, (17, 22)), (121, (-1, 4)), (26, (6, 9)), (2359, (29, 32)), (1089, (35, 42)), (538, (10, 15)), (1514, (19, 22)), (1828, (6, 10)), (1098, (20, 23)), (1160, (-1, 4)), (1548, (6, 9)), (1487, (6, 9)), (982, (33, 43)), (744, (54, 58)), (2255, (27, 30)), (269, (10, 15)), (775, (-1, 4)), (1214, (6, 10)), (2239, (-1, 4)), (1188, (16, 20)), (2406, (6, 9)), (1378, (18, 22)), (145, (-1, 4)), (1175, (6, 10)), (221, (-1, 4)), (2270, (-1, 4)), (699, (34, 40)), (2590, (19, 22)), (1225, (-1, 4)), (1225, (36, 40)), (2556, (-1, 4)), (2484, (-1, 4)), (1311, (6, 9)), (1259, (53, 56)), (78, (-1, 4)), (411, (-1, 4)), (1166, (9, 15)), (1890, (9, 13)), (2057, (6, 10)), (1296, (-1, 4)), (1725, (-1, 4)), (2081, (6, 10)), (2140, (-1, 4)), (1139, (6, 10)), (500, (19, 22)), (1345, (6, 9)), (306, (-1, 4)), (534, (11, 14)), (740, (6, 11)), (958, (6, 11)), (353, (6, 8)), (2003, (-1, 4)), (1361, (-1, 4)), (973, (31, 36)), (2106, (9, 15)), (2185, (-1, 4)), (478, (42, 51)), (2312, (17, 20)), (2242, (-1, 4)), (2006, (26, 31)), (1503, (63, 67)), (1561, (6, 12)), (1024, (6, 10)), (1443, (-1, 4)), (88, (14, 17)), (1246, (6, 8)), (1503, (83, 87)), (441, (6, 9)), (1741, (28, 33)), (197, (6, 11)), (1462, (-1, 4)), (1027, (-1, 4)), (2132, (-1, 4)), (2196, (14, 21)), (1868, (21, 27)), (68, (26, 31)), (672, (48, 54)), (942, (9, 13)), (1732, (-1, 4)), (2006, (38, 43)), (1118, (-1, 4)), (1704, (34, 37)), (1420, (14, 19)), (2553, (6, 10)), (2573, (6, 9)), (672, (18, 21)), (303, (-1, 4)), (2583, (6, 10)), (1012, (6, 11)), (1175, (39, 44)), (1034, (19, 23)), (321, (18, 26)), (921, (17, 20)), (1738, (-1, 4)), (1426, (10, 16)), (1277, (17, 20)), (1656, (6, 10)), (1397, (56, 60)), (108, (52, 57)), (221, (16, 24)), (1148, (6, 8)), (618, (6, 8)), (788, (-1, 4)), (609, (-1, 4)), (1880, (10, 13)), (1019, (-1, 4)), (1868, (-1, 4)), (2163, (30, 33)), (1277, (124, 129)), (337, (14, 17)), (1253, (-1, 4)), (1406, (10, 13)), (1862, (39, 49)), (1058, (-1, 4)), (2295, (6, 10)), (1904, (-1, 4)), (601, (43, 46)), (408, (10, 13)), (2566, (36, 42)), (1713, (-1, 4)), (1397, (12, 19)), (528, (30, 34)), (189, (51, 61)), (1819, (52, 58)), (149, (-1, 4)), (1062, (6, 10)), (585, (6, 11)), (44, (-1, 4)), (1410, (-1, 4)), (802, (41, 45)), (2526, (6, 10)), (672, (55, 61)), (1785, (6, 10)), (272, (34, 37)), (2537, (29, 32)), (672, (11, 17)), (108, (7, 10)), (722, (37, 41)), (426, (6, 9)), (1635, (6, 9)), (2497, (19, 22)), (2126, (-1, 4)), (1887, (26, 34)), (2537, (-1, 4)), (2040, (-1, 4)), (400, (19, 22)), (2060, (9, 14)), (1447, (74, 79)), (576, (9, 14)), (1763, (29, 31)), (928, (25, 28)), (2220, (6, 11)), (1943, (-1, 4)), (1357, (8, 13)), (486, (49, 52)), (662, (27, 36)), (1635, (-1, 4)), (1585, (29, 33)), (197, (30, 34)), (2261, (6, 9)), (852, (41, 44)), (2556, (29, 39)), (860, (-1, 4)), (245, (-1, 4)), (1955, (6, 9)), (2330, (13, 16)), (2414, (6, 11)), (2529, (-1, 4)), (2319, (6, 15)), (640, (-1, 4)), (1887, (11, 16)), (2350, (-1, 4)), (1757, (31, 34)), (702, (10, 15)), (2315, (-1, 4)), (1858, (6, 9)), (528, (10, 14)), (356, (11, 16)), (2339, (-1, 4)), (545, (11, 14)), (618, (25, 30)), (1078, (19, 22)), (2574, (-1, 4)), (62, (6, 9)), (2051, (29, 34)), (2523, (32, 35)), (2424, (6, 12)), (2344, (9, 12)), (2369, (50, 56)), (601, (76, 81)), (2429, (-1, 4)), (2452, (24, 29)), (1795, (-1, 4)), (677, (6, 8)), (1518, (58, 62)), (1420, (-1, 4)), (1065, (32, 36)), (601, (67, 75)), (627, (-1, 4)), (1242, (6, 10)), (1809, (-1, 4)), (1925, (73, 77)), (1601, (27, 36)), (1533, (15, 18)), (662, (-1, 4)), (91, (-1, 4)), (235, (9, 12)), (911, (21, 24)), (108, (-1, 4)), (1704, (27, 33)), (343, (20, 23)), (1341, (15, 21)), (500, (32, 34)), (2252, (17, 23)), (1697, (6, 10)), (2350, (20, 34)), (615, (12, 15)), (727, (-1, 4)), (2040, (37, 41)), (576, (15, 18)), (1518, (35, 40)), (882, (31, 35)), (928, (17, 22)), (1536, (-1, 4)), (1259, (6, 9)), (763, (-1, 4)), (1890, (14, 18)), (2227, (22, 25)), (973, (10, 15)), (2084, (10, 15)), (568, (-1, 4)), (1819, (24, 29)), (2490, (-1, 4)), (429, (-1, 4)), (1772, (26, 29)), (1447, (97, 103)), (210, (9, 13)), (1134, (30, 37)), (1238, (30, 36)), (1725, (73, 79)), (1426, (-1, 4)), (1813, (-1, 4)), (2249, (12, 15)), (2045, (24, 27)), (2258, (6, 8)), (812, (-1, 4)), (279, (17, 23)), (1831, (-1, 4)), (1585, (36, 39)), (112, (11, 14)), (2252, (24, 29)), (2263, (16, 19)), (1510, (11, 14)), (1277, (-1, 4)), (668, (-1, 4)), (688, (24, 28)), (2218, (6, 9)), (1089, (28, 31)), (2072, (9, 12)), (643, (-1, 4)), (2156, (33, 36)), (1884, (6, 9)), (2399, (9, 11)), (555, (6, 9)), (868, (126, 131)), (1175, (-1, 4)), (682, (-1, 4)), (1785, (34, 40)), (657, (-1, 4)), (1536, (40, 45)), (2090, (6, 9)), (380, (-1, 4)), (88, (10, 13)), (950, (9, 12)), (816, (6, 11)), (1763, (11, 14)), (333, (-1, 4)), (1775, (11, 14)), (138, (-1, 4)), (1769, (44, 48)), (1157, (-1, 4)), (1545, (6, 10)), (1314, (6, 9)), (293, (11, 14)), (265, (6, 8)), (763, (20, 23)), (468, (49, 52)), (901, (36, 41)), (579, (-1, 4)), (2452, (-1, 4)), (2273, (-1, 4)), (1423, (-1, 4)), (901, (6, 9)), (2094, (-1, 4)), (2126, (39, 44)), (1672, (10, 14)), (2429, (36, 39)), (1178, (18, 23)), (363, (16, 21)), (2376, (21, 27)), (1625, (11, 14)), (2285, (6, 10)), (1314, (25, 31)), (2517, (-1, 4)), (2199, (9, 12)), (1473, (-1, 4)), (1656, (24, 28)), (2159, (-1, 4)), (1293, (-1, 4)), (1616, (31, 36)), (2185, (23, 26)), (369, (21, 25)), (1354, (-1, 4)), (830, (27, 30)), (94, (6, 10)), (508, (6, 9)), (740, (-1, 4)), (845, (6, 11)), (953, (6, 9)), (1966, (29, 34)), (2112, (7, 12)), (1700, (36, 43)), (218, (6, 12)), (2497, (36, 39)), (937, (42, 45)), (1551, (15, 18)), (1663, (-1, 4)), (1005, (6, 9)), (1365, (34, 39)), (2339, (37, 45)), (1496, (10, 15)), (2220, (27, 31)), (2590, (43, 46)), (133, (65, 68)), (2330, (6, 12)), (1293, (31, 36)), (2032, (45, 50)), (767, (28, 32)), (1430, (-1, 4)), (722, (51, 54)), (1868, (6, 9)), (1423, (17, 22)), (1819, (-1, 4)), (468, (53, 56)), (1034, (-1, 4)), (2098, (24, 29)), (1169, (12, 15)), (1840, (11, 14)), (1700, (-1, 4)), (1893, (9, 13)), (2541, (48, 56)), (1909, (-1, 4)), (2326, (19, 28)), (2304, (-1, 4)), (2192, (9, 12)), (1925, (25, 31)), (2466, (46, 50)), (2119, (-1, 4)), (647, (90, 94)), (1766, (-1, 4)), (868, (147, 150)), (333, (31, 36)), (1659, (6, 8)), (2445, (-1, 4)), (601, (51, 54)), (1548, (15, 18)), (1775, (29, 33)), (756, (10, 12)), (1622, (-1, 4)), (1955, (-1, 4)), (321, (-1, 4)), (1690, (41, 45)), (1722, (11, 14)), (1065, (79, 82)), (353, (24, 29)), (2505, (9, 16)), (1503, (27, 30)), (668, (17, 22)), (1868, (43, 51)), (1365, (40, 44)), (1230, (22, 27)), (392, (-1, 4)), (415, (6, 10)), (1611, (23, 27)), (1825, (-1, 4)), (882, (-1, 4)), (210, (20, 23)), (2487, (6, 10)), (627, (16, 19)), (907, (19, 22)), (2064, (6, 9)), (1646, (82, 85)), (1862, (6, 17)), (1034, (97, 102)), (1813, (35, 40)), (727, (32, 40)), (2173, (21, 26)), (682, (6, 9)), (1249, (9, 12)), (275, (6, 10)), (2230, (9, 12)), (2026, (6, 11)), (2326, (-1, 4)), (1406, (6, 9)), (1131, (6, 10)), (1289, (22, 27)), (928, (-1, 4)), (2072, (6, 8)), (1772, (-1, 4)), (215, (12, 15)), (612, (35, 40)), (1925, (-1, 4)), (454, (6, 9)), (1338, (6, 10)), (2132, (6, 10)), (2466, (6, 12)), (1157, (27, 30)), (958, (-1, 4)), (1134, (60, 64)), (995, (34, 37)), (2023, (12, 15)), (2481, (6, 10)), (1880, (-1, 4)), (722, (47, 50)), (2196, (-1, 4)), (64, (22, 28)), (1725, (43, 52)), (2339, (27, 36)), (657, (29, 34)), (2339, (11, 16)), (2537, (23, 28)), (1503, (-1, 4)), (1181, (-1, 4)), (1262, (36, 39)), (29, (34, 37)), (1417, (-1, 4)), (1242, (-1, 4)), (284, (48, 57)), (1447, (33, 38)), (1302, (28, 33)), (1072, (6, 10)), (1217, (-1, 4)), (2402, (17, 24)), (1253, (26, 35)), (643, (21, 25)), (1098, (-1, 4)), (1447, (-1, 4)), (252, (6, 9)), (2411, (11, 18)), (890, (6, 10)), (170, (-1, 4)), (2210, (40, 43)), (1897, (-1, 4)), (705, (-1, 4)), (210, (28, 32)), (1676, (6, 9)), (380, (21, 26)), (448, (50, 53)), (29, (15, 20)), (133, (39, 45)), (2541, (-1, 4)), (454, (10, 13)), (1753, (-1, 4)), (360, (-1, 6)), (1065, (-1, 4)), (1574, (-1, 4)), (541, (18, 22)), (181, (40, 44)), (1465, (14, 21)), (1152, (100, 103)), (2202, (-1, 4)), (2304, (20, 26)), (911, (6, 8)), (2177, (-1, 4)), (2037, (12, 15)), (618, (42, 46)), (2156, (-1, 4)), (2159, (26, 29)), (1639, (-1, 4)), (2032, (25, 28)), (420, (-1, 4)), (585, (25, 32)), (524, (23, 26)), (1341, (-1, 7)), (696, (6, 11)), (1766, (20, 24)), (2084, (42, 50)), (2295, (11, 14)), (181, (36, 39)), (1514, (-1, 4)), (2168, (24, 27)), (2533, (-1, 4)), (1983, (20, 23)), (2439, (6, 13)), (601, (55, 58)), (1966, (11, 15)), (1775, (52, 56)), (2574, (23, 25)), (2493, (6, 11)), (558, (9, 12)), (1760, (-1, 4)), (1545, (11, 14)), (807, (40, 44)), (72, (6, 10)), (1447, (104, 109)), (2048, (8, 13)), (1625, (50, 55)), (990, (21, 28)), (194, (12, 15)), (1536, (25, 28)), (2369, (75, 80)), (2379, (-1, 4)), (2553, (11, 14)), (333, (6, 10)), (565, (-1, 4)), (1400, (14, 19)), (1249, (6, 8)), (1389, (-1, 4)), (1646, (-1, 4)), (601, (-1, 4)), (1203, (6, 8)), (400, (23, 26)), (1958, (6, 9)), (592, (16, 21)), (404, (6, 8)), (2347, (13, 27)), (366, (6, 9)), (201, (-1, 4)), (631, (-1, 4)), (21, (-1, 4)), (2282, (6, 10)), (81, (56, 60)), (672, (-1, 4)), (845, (-1, 4)), (1713, (13, 18)), (272, (16, 21)), (1987, (37, 40)), (2037, (6, 11)), (531, (6, 9)), (174, (11, 18)), (1493, (6, 8)), (2429, (96, 99)), (1334, (18, 23)), (2285, (11, 16)), (2112, (31, 34)), (163, (6, 9)), (737, (-1, 4)), (1417, (29, 34)), (149, (25, 29)), (2032, (15, 19)), (979, (6, 10)), (2001, (6, 9)), (1382, (-1, 4)), (337, (-1, 4)), (2517, (48, 53)), (1936, (74, 78)), (2452, (53, 58)), (269, (24, 27)), (595, (6, 10)), (2017, (6, 9)), (204, (17, 20)), (1293, (20, 25)), (201, (18, 22)), (1191, (-1, 4)), (895, (15, 19)), (2566, (6, 12)), (1220, (6, 9)), (1234, (6, 10)), (1104, (36, 40)), (1386, (38, 41)), (958, (41, 51)), (420, (10, 13)), (438, (-1, 4)), (2051, (-1, 4)), (2563, (6, 10)), (1871, (-1, 4)), (1518, (6, 11)), (415, (42, 46)), (1518, (-1, 4)), (432, (6, 9)), (647, (-1, 4)), (1331, (31, 35)), (708, (-1, 4)), (1122, (-1, 4)), (254, (9, 12)), (712, (56, 61)), (2508, (9, 12)), (503, (-1, 4)), (1541, (9, 12)), (2376, (-1, 4)), (2011, (-1, 4)), (722, (-1, 4)), (1397, (25, 29)), (81, (6, 10)), (1296, (29, 35)), (1607, (-1, 4)), (517, (-1, 4)), (1166, (16, 19)), (1065, (37, 40)), (534, (-1, 3)), (170, (17, 23)), (1598, (-1, 4)), (2369, (66, 71)), (2223, (51, 56)), (524, (11, 14)), (1285, (25, 28)), (712, (66, 70)), (1259, (22, 26)), (306, (6, 9)), (2347, (-1, 4)), (2478, (-1, 4)), (468, (57, 60)), (2278, (-1, 4)), (898, (11, 14)), (324, (22, 28)), (1690, (-1, 4)), (1847, (16, 19)), (1556, (60, 63)), (2541, (57, 60)), (2136, (27, 30)), (1837, (6, 10)), (445, (6, 8)), (2587, (14, 21)), (500, (11, 15)), (767, (100, 104)), (245, (18, 23)), (2330, (-1, 4)), (1128, (6, 10)), (145, (6, 11)), (2304, (10, 19)), (2003, (6, 9)), (1305, (28, 33)), (1104, (-1, 4)), (1792, (25, 28)), (75, (-1, 4)), (1536, (12, 15)), (807, (12, 15)), (1943, (56, 61)), (1334, (-1, 4)), (1611, (-1, 4)), (1490, (-1, 4)), (572, (6, 10)), (1285, (6, 10)), (784, (10, 16)), (2414, (-1, 4)), (1065, (19, 22)), (1763, (55, 61)), (1962, (-1, 4)), (58, (6, 9)), (2336, (-1, 4)), (2288, (61, 70)), (631, (34, 37)), (1893, (35, 39)), (1995, (6, 9)), (1663, (6, 10)), (2075, (-1, 4)), (1262, (24, 27)), (2210, (-1, 4)), (2223, (-1, 4)), (589, (-1, 4)), (2123, (6, 9)), (852, (32, 37)), (812, (6, 8)), (1319, (6, 8)), (112, (6, 10)), (383, (16, 20)), (496, (6, 12)), (2436, (6, 9)), (1225, (17, 23)), (2206, (-1, 4)), (2140, (35, 41)), (2550, (-1, 4)), (324, (36, 44)), (1551, (6, 9)), (1125, (6, 8)), (572, (-1, 4)), (207, (-1, 4)), (97, (45, 49)), (2560, (6, 9)), (696, (-1, 4)), (2040, (29, 32)), (1528, (29, 39)), (524, (6, 10)), (834, (6, 9)), (2392, (6, 10)), (2258, (9, 12)), (108, (58, 62)), (486, (9, 13)), (1639, (6, 9)), (2359, (-1, 4)), (1971, (6, 10)), (2395, (-1, 4)), (483, (32, 37)), (1785, (11, 15)), (2298, (36, 40)), (1792, (6, 10)), (2045, (17, 23)), (1181, (28, 31)), (1585, (-1, 4)), (343, (16, 19)), (1185, (10, 13)), (2424, (13, 18)), (1806, (-1, 4)), (1974, (-1, 4)), (1732, (41, 45)), (181, (-1, 4)), (1942, (6, 9)), (1876, (-1, 4)), (396, (-1, 4)), (1745, (41, 45)), (1365, (6, 11)), (1084, (15, 20)), (38, (-1, 4)), (893, (6, 9)), (785, (-1, 4)), (2438, (6, 9)), (1503, (49, 54)), (2388, (9, 16)), (1574, (18, 21)), (508, (-1, 4)), (228, (9, 12)), (1775, (34, 37)), (2497, (23, 30)), (1551, (19, 22)), (483, (-1, 4)), (796, (21, 24)), (1308, (6, 10)), (868, (40, 43)), (1510, (6, 10)), (995, (10, 13)), (1745, (13, 19)), (41, (6, 13)), (159, (18, 21)), (103, (-1, 4)), (2136, (-1, 4)), (1286, (-1, 4)), (1795, (20, 24)), (1936, (-1, 4)), (1417, (6, 8)), (907, (-1, 4)), (2359, (19, 28)), (117, (-1, 4)), (2383, (15, 18)), (1386, (14, 21)), (2098, (47, 53)), (1378, (6, 10)), (2458, (6, 8)), (2026, (-1, 4)), (1757, (18, 23)), (1365, (21, 24)), (582, (20, 23)), (2237, (6, 9)), (155, (6, 10)), (749, (15, 20)), (383, (-1, 4)), (1518, (63, 67)), (802, (13, 17)), (1978, (37, 42)), (78, (14, 18)), (1157, (21, 26)), (163, (-1, 4)), (987, (13, 18)), (1289, (31, 40)), (478, (16, 20)), (784, (6, 9)), (1397, (46, 51)), (1468, (55, 60)), (737, (14, 19)), (1913, (6, 10)), (868, (-1, 4)), (1785, (46, 49)), (210, (14, 19)), (1518, (12, 16)), (1357, (14, 18)), (1592, (-1, 4)), (565, (12, 17)), (1667, (-1, 4)), (1217, (11, 14)), (2023, (6, 11)), (1904, (44, 52)), (699, (-1, 4)), (702, (16, 20)), (2006, (53, 62)), (1852, (38, 48)), (2266, (9, 12)), (324, (-1, 4)), (1700, (6, 10)), (1631, (6, 9)), (1503, (78, 82)), (1750, (6, 10)), (1194, (34, 39)), (299, (-1, 4)), (2298, (6, 12)), (1143, (-1, 4)), (2032, (6, 10)), (1389, (22, 25)), (1001, (6, 9)), (767, (74, 78)), (1403, (6, 8)), (380, (27, 30)), (133, (-1, 4)), (2182, (-1, 4)), (968, (6, 16)), (2185, (16, 22)), (194, (-1, 4)), (712, (93, 97)), (132, (6, 9)), (1206, (17, 20)), (2312, (34, 38)), (982, (17, 23)), (388, (6, 8)), (435, (20, 24)), (885, (6, 9)), (624, (6, 9)), (1925, (17, 20)), (2112, (-1, 4)), (435, (-1, 4)), (289, (17, 22)), (1565, (6, 9)), (2309, (6, 9)), (1732, (6, 10)), (55, (-1, 4)), (1943, (21, 24)), (2505, (33, 36)), (1480, (6, 9)), (2312, (43, 48)), (763, (15, 19)), (1438, (11, 14)), (81, (52, 55)), (1601, (6, 8)), (2177, (23, 28)), (879, (25, 32)), (189, (33, 36)), (1410, (26, 29)), (2533, (36, 39)), (841, (6, 12)), (1414, (17, 20)), (2168, (-1, 4)), (1871, (6, 9)), (860, (26, 31)), (68, (6, 8)), (749, (-1, 4)), (1792, (20, 24)), (186, (14, 17)), (1859, (7, 12)), (2473, (6, 9)), (1916, (16, 21)), (373, (6, 8)), (103, (26, 29)), (1078, (13, 18)), (534, (38, 42)), (1152, (28, 31)), (32, (-1, 4)), (688, (6, 11)), (1900, (-1, 4)), (52, (11, 16)), (2220, (21, 26)), (408, (6, 9)), (415, (11, 15)), (2445, (25, 28)), (2586, (6, 9)), (524, (19, 22)), (1034, (52, 55)), (582, (14, 19)), (1778, (6, 8)), (2199, (23, 28)), (1447, (121, 127)), (225, (6, 8)), (2067, (-1, 4)), (1514, (13, 18)), (799, (6, 9)), (551, (33, 37)), (512, (21, 24)), (1566, (-1, 4)), (2452, (40, 43)), (448, (46, 49)), (1831, (31, 35)), (2517, (81, 84)), (931, (-1, 4)), (2278, (6, 11)), (194, (6, 11)), (1653, (6, 10)), (1178, (27, 33)), (551, (-1, 4)), (1054, (46, 50)), (2199, (34, 39)), (998, (23, 26)), (657, (61, 68)), (204, (26, 29)), (2323, (6, 10)), (103, (38, 48)), (2533, (30, 35)), (819, (6, 10)), (826, (-1, 4)), (174, (19, 24)), (719, (6, 9)), (448, (-1, 4)), (299, (6, 9)), (987, (6, 12)), (1528, (-1, 4)), (1936, (62, 69)), (166, (6, 9)), (1741, (-1, 4)), (231, (6, 15)), (478, (-1, 4)), (1148, (-1, 4)), (1299, (6, 10)), (1904, (36, 40)), (1152, (11, 14)), (131, (6, 9)), (1933, (6, 9)), (2466, (-1, 4)), (2206, (33, 36)), (1269, (19, 22)), (258, (6, 10)), (228, (13, 16)), (1930, (-1, 4)), (845, (25, 35)), (901, (-1, 4)), (1175, (30, 33)), (2048, (17, 25)), (1016, (6, 10)), (609, (24, 31)), (1209, (39, 49)), (2312, (49, 52)), (1172, (-1, 4)), (2298, (13, 18)), (1772, (6, 11)), (1012, (12, 15)), (2511, (-1, 4)), (2252, (-1, 4)), (1319, (24, 28)), (618, (-1, 4)), (51, (6, 9)), (2429, (15, 22)), (2547, (9, 12)), (1876, (20, 28)), (2288, (-1, 4)), (159, (11, 17)), (1438, (-1, 4)), (1852, (-1, 4)), (1134, (-1, 4)), (1386, (22, 25))])
[((21, (-1, 4)), "*MOT:\tI don't think the batteries are any good .\n"), ((26, (6, 9)), '*MOT:\thm: .\n'), ((29, (15, 20)), "*MOT:\twell (.) we'll just have_to see .\n"), ((29, (34, 37)), "*MOT:\twell (.) we'll just have_to see .\n"), ((32, (-1, 4)), '*MOT:\tI hope they are !\n'), ((38, (-1, 4)), '*MOT:\t+^ not too far xxx .\n'), ((41, (6, 13)), "*FAT:\tthey're alright .\n"), ((44, (-1, 4)), '*MOT:\tis that red light on ?\n'), ((44, (14, 23)), '*MOT:\tis that red light on ?\n'), ((48, (6, 10)), '*FAT:\tyeah .\n'), ((51, (6, 9)), '*MOT:\txxx .\n'), ((52, (11, 16)), "*FAT:\tit's voice activated .\n"), ((55, (-1, 4)), '*MOT:\toh it is ?\n'), ((58, (6, 9)), '*FAT:\tyes .\n'), ((62, (6, 9)), '*MOT:\twww .\n'), ((64, (22, 28)), "*MOT:\t(..) how's your supper ?\n"), ((68, (6, 8)), '*MOT:\toh did you get your drink ?\n'), ((68, (26, 31)), '*MOT:\toh did you get your drink ?\n'), ((72, (6, 10)), '*MOT:\tokay .\n'), ((75, (-1, 4)), '*MOT:\tit is [!] .\n'), ((78, (-1, 4)), '*MOT:\tbecause look .\n'), ((78, (14, 18)), '*MOT:\tbecause look .\n'), ((81, (6, 10)), "*FAT:\tyeah I know but I'm just trying to see if the (.) tape is going around xxx [>] .\n"), ((81, (52, 55)), "*FAT:\tyeah I know but I'm just trying to see if the (.) tape is going around xxx [>] .\n"), ((81, (56, 60)), "*FAT:\tyeah I know but I'm just trying to see if the (.) tape is going around xxx [>] .\n"), ((88, (10, 13)), '*MOT:\t<it is> [<] .\n'), ((88, (14, 17)), '*MOT:\t<it is> [<] .\n'), ((91, (-1, 4)), '*MOT:\tI already tried .\n'), ((94, (6, 10)), '*FAT:\tyeah .\n'), ((97, (41, 44)), "*MOT:\t(.) xxx right now so don't drink a lot okay ?\n"), ((97, (45, 49)), "*MOT:\t(.) xxx right now so don't drink a lot okay ?\n"), ((103, (-1, 4)), "*MOT:\tsave some and don't eat all the cantaloupe .\n"), ((103, (26, 29)), "*MOT:\tsave some and don't eat all the cantaloupe .\n"), ((103, (38, 48)), "*MOT:\tsave some and don't eat all the cantaloupe .\n"), ((108, (-1, 4)), '*MOT:\t<eat some of your> [/] eat some of your other stuff okay ?\n'), ((108, (7, 10)), '*MOT:\t<eat some of your> [/] eat some of your other stuff okay ?\n'), ((108, (52, 57)), '*MOT:\t<eat some of your> [/] eat some of your other stuff okay ?\n'), ((108, (58, 62)), '*MOT:\t<eat some of your> [/] eat some of your other stuff okay ?\n'), ((112, (6, 10)), '*MOT:\tokay [!] ?\n'), ((112, (11, 14)), '*MOT:\tokay [!] ?\n'), ((117, (-1, 4)), '*MOT:\tso +...\n'), ((121, (-1, 4)), '*FAT:\tcut it out .\n'), ((126, (-1, 4)), '*CHI:\there goes dananananana@wp !\n'), ((131, (6, 9)), '*CHI:\txxx .\n'), ((132, (6, 9)), '*MOT:\t(.) &=giggles .\n'), ((133, (-1, 4)), '*MOT:\tyou might <as well> [=? have_to] squish that down a little bit .\n'), ((133, (39, 45)), '*MOT:\tyou might <as well> [=? have_to] squish that down a little bit .\n'), ((133, (65, 68)), '*MOT:\tyou might <as well> [=? have_to] squish that down a little bit .\n'), ((138, (-1, 4)), '*CHI:\tbut you [//] it has gotta come out now .\n'), ((145, (-1, 4)), "*FAT:\tdon't &do +/.\n"), ((145, (6, 11)), "*FAT:\tdon't &do +/.\n"), ((149, (-1, 4)), "*MOT:\tdon't squish it so hard that it comes out !\n"), ((149, (25, 29)), "*MOT:\tdon't squish it so hard that it comes out !\n"), ((155, (6, 10)), '*MOT:\tyeah .\n'), ((159, (11, 17)), '*FAT:\tgood supper huh ?\n'), ((159, (18, 21)), '*FAT:\tgood supper huh ?\n'), ((163, (-1, 4)), '*FAT:\they move up close !\n'), ((163, (6, 9)), '*FAT:\they move up close !\n'), ((166, (6, 9)), '*CHI:\thm: .\n'), ((170, (-1, 4)), "*MOT:\twhat's the matter ?\n"), ((170, (17, 23)), "*MOT:\twhat's the matter ?\n"), ((174, (11, 18)), '*MOT:\tyour stomach hurts ?\n'), ((174, (19, 24)), '*MOT:\tyour stomach hurts ?\n'), ((181, (-1, 4)), '*FAT:\tchew up your food really good (.) okay ?\n'), ((181, (19, 23)), '*FAT:\tchew up your food really good (.) okay ?\n'), ((181, (36, 39)), '*FAT:\tchew up your food really good (.) okay ?\n'), ((181, (40, 44)), '*FAT:\tchew up your food really good (.) okay ?\n'), ((186, (14, 17)), '*CHI:\thunhunh [?] .\n'), ((189, (33, 36)), '*MOT:\twell if it hurts that much (.) just eat your cantaloupe .\n'), ((189, (51, 61)), '*MOT:\twell if it hurts that much (.) just eat your cantaloupe .\n'), ((194, (-1, 4)), "*MOT:\tdon't eat (.) you know too much .\n"), ((194, (6, 11)), "*MOT:\tdon't eat (.) you know too much .\n"), ((194, (12, 15)), "*MOT:\tdon't eat (.) you know too much .\n"), ((197, (6, 11)), "*MOT:\tdon't make it hurt more okay ?\n"), ((197, (30, 34)), "*MOT:\tdon't make it hurt more okay ?\n"), ((201, (-1, 4)), '*CHI:\tI eat these fast .\n'), ((201, (18, 22)), '*CHI:\tI eat these fast .\n'), ((204, (17, 20)), "*MOT:\twell don't eat fast [!] !\n"), ((204, (26, 29)), "*MOT:\twell don't eat fast [!] !\n"), ((207, (-1, 4)), "*FAT:\the's not .\n"), ((210, (9, 13)), "*FAT:\t+^ he's gonna eat (.) slow .\n"), ((210, (14, 19)), "*FAT:\t+^ he's gonna eat (.) slow .\n"), ((210, (20, 23)), "*FAT:\t+^ he's gonna eat (.) slow .\n"), ((210, (28, 32)), "*FAT:\t+^ he's gonna eat (.) slow .\n"), ((215, (-1, 4)), "*CHI:\tI'm a dog !\n"), ((215, (12, 15)), "*CHI:\tI'm a dog !\n"), ((218, (6, 12)), '*CHI:\truff@o ruff@o !\n'), ((221, (-1, 4)), '*MOT:\twant some broccoli ?\n'), ((221, (16, 24)), '*MOT:\twant some broccoli ?\n'), ((225, (6, 8)), "*MOT:\tmm it's del:icious !\n"), ((228, (9, 12)), '*CHI:\tno way [>] !\n'), ((228, (13, 16)), '*CHI:\tno way [>] !\n'), ((231, (6, 15)), '*MOT:\tlemon [<] !\n'), ((235, (9, 12)), '*CHI:\tno way !\n'), ((245, (-1, 4)), '*MOT:\tlike little trees !\n'), ((245, (18, 23)), '*MOT:\tlike little trees !\n'), ((252, (6, 9)), '*MOT:\twww .\n'), ((254, (9, 12)), '*CHI:\tno way !\n'), ((258, (6, 10)), '*CHI:\tyuck yuck yuck yuck !\n'), ((265, (6, 8)), '*MOT:\tmm .\n'), ((269, (10, 15)), '*FAT:\t<my gosh> [=? got it] .\n'), ((269, (24, 27)), '*FAT:\t<my gosh> [=? got it] .\n'), ((272, (16, 21)), "*MOT:\tsensitive isn't it &=laughs [?] ?\n"), ((272, (34, 37)), "*MOT:\tsensitive isn't it &=laughs [?] ?\n"), ((275, (6, 10)), '*FAT:\tyeah .\n'), ((279, (-1, 4)), "*CHI:\twhat's the matter ?\n"), ((279, (17, 23)), "*CHI:\twhat's the matter ?\n"), ((284, (48, 57)), '*MOT:\twell we were just checking out the little red light on it .\n'), ((289, (17, 22)), '*FAT:\twatch your juice [>] .\n'), ((289, (23, 26)), '*FAT:\twatch your juice [>] .\n'), ((293, (-1, 4)), '*MOT:\tlike [<] when you talk it goes on .\n'), ((293, (11, 14)), '*MOT:\tlike [<] when you talk it goes on .\n'), ((299, (-1, 4)), '*MOT:\tsee ?\n'), ((299, (6, 9)), '*MOT:\tsee ?\n'), ((303, (-1, 4)), '*MOT:\tso +//.\n'), ((306, (-1, 4)), '*MOT:\tsee ?\n'), ((306, (6, 9)), '*MOT:\tsee ?\n'), ((310, (31, 36)), '*MOT:\tnow if you say something watch .\n'), ((321, (-1, 4)), '*FAT:\tthat was my ice cube .\n'), ((321, (18, 26)), '*FAT:\tthat was my ice cube .\n'), ((324, (-1, 4)), '*FAT:\tthat little (.) squeal was my ice cube .\n'), ((324, (22, 28)), '*FAT:\tthat little (.) squeal was my ice cube .\n'), ((324, (36, 44)), '*FAT:\tthat little (.) squeal was my ice cube .\n'), ((333, (-1, 4)), '*MOT:\ttell Daddy <what you did today> [//] what we did today .\n'), ((333, (6, 10)), '*MOT:\ttell Daddy <what you did today> [//] what we did today .\n'), ((333, (31, 36)), '*MOT:\ttell Daddy <what you did today> [//] what we did today .\n'), ((337, (-1, 4)), "*CHI:\tI can't [!] .\n"), ((337, (14, 17)), "*CHI:\tI can't [!] .\n"), ((343, (16, 19)), '*FAT:\tsure <you do> [>] .\n'), ((343, (20, 23)), '*FAT:\tsure <you do> [>] .\n'), ((353, (6, 8)), '*MOT:\t+^ we played some games .\n'), ((353, (24, 29)), '*MOT:\t+^ we played some games .\n'), ((356, (11, 16)), '*MOT:\twhat games did we play ?\n'), ((360, (-1, 6)), '*CHI:\tChutes and Ladders .\n'), ((363, (16, 21)), '*CHI:\t<remember game> [= Memory Game] Chutes and Ladders !\n'), ((366, (6, 9)), '*FAT:\tmhm .\n'), ((369, (21, 25)), "*MOT:\tdidn't we play Fish ?\n"), ((373, (6, 8)), '*CHI:\tmm .\n'), ((376, (-1, 4)), '*MOT:\twho won ?\n'), ((380, (-1, 4)), "*MOT:\t<who won> [//] let's see .\n"), ((380, (21, 26)), "*MOT:\t<who won> [//] let's see .\n"), ((380, (27, 30)), "*MOT:\t<who won> [//] let's see .\n"), ((383, (-1, 4)), '*MOT:\tfirst [!] time we played Chutes and Ladders +...\n'), ((383, (16, 20)), '*MOT:\tfirst [!] time we played Chutes and Ladders +...\n'), ((388, (6, 8)), '*MOT:\t+, who won ?\n'), ((392, (-1, 4)), '*CHI:\tyou ?\n'), ((396, (-1, 4)), '*MOT:\tI think so .\n'), ((400, (-1, 4)), '*MOT:\tand then <we we> [/] we played Memory Game .\n'), ((400, (19, 22)), '*MOT:\tand then <we we> [/] we played Memory Game .\n'), ((400, (23, 26)), '*MOT:\tand then <we we> [/] we played Memory Game .\n'), ((404, (6, 8)), '*MOT:\t+^ who won that ?\n'), ((408, (6, 9)), '*MOT:\tmhm [?] .\n'), ((408, (10, 13)), '*MOT:\tmhm [?] .\n'), ((411, (-1, 4)), '*FAT:\tyou won ?\n'), ((415, (6, 10)), "*MOT:\tyeah he's really good at the Memory game [>] .\n"), ((415, (11, 15)), "*MOT:\tyeah he's really good at the Memory game [>] .\n"), ((415, (42, 46)), "*MOT:\tyeah he's really good at the Memory game [>] .\n"), ((420, (-1, 4)), '*CHI:\tand [<] we (.) played Chutes and Ladders again right ?\n'), ((420, (10, 13)), '*CHI:\tand [<] we (.) played Chutes and Ladders again right ?\n'), ((426, (6, 9)), '*MOT:\tmhm .\n'), ((429, (-1, 4)), '*CHI:\tI won .\n'), ((432, (6, 9)), '*MOT:\tmhm !\n'), ((435, (-1, 4)), '*CHI:\tand we played Fish .\n'), ((435, (20, 24)), '*CHI:\tand we played Fish .\n'), ((438, (-1, 4)), '*CHI:\tI won .\n'), ((441, (6, 9)), '*MOT:\tmhm .\n'), ((445, (6, 8)), '*MOT:\tmm .\n'), ((448, (-1, 4)), '*MOT:\tand (.) we watched Lady and the Tramp , huh [>] ?\n'), ((448, (10, 13)), '*MOT:\tand (.) we watched Lady and the Tramp , huh [>] ?\n'), ((448, (46, 49)), '*MOT:\tand (.) we watched Lady and the Tramp , huh [>] ?\n'), ((448, (50, 53)), '*MOT:\tand (.) we watched Lady and the Tramp , huh [>] ?\n'), ((454, (6, 9)), '*CHI:\tyep [<] !\n'), ((454, (10, 13)), '*CHI:\tyep [<] !\n'), ((468, (17, 22)), '*CHI:\twhy is (.) music not comin(g) out of there man [?] [>] ?\n'), ((468, (49, 52)), '*CHI:\twhy is (.) music not comin(g) out of there man [?] [>] ?\n'), ((468, (53, 56)), '*CHI:\twhy is (.) music not comin(g) out of there man [?] [>] ?\n'), ((468, (57, 60)), '*CHI:\twhy is (.) music not comin(g) out of there man [?] [>] ?\n'), ((478, (-1, 4)), '*FAT:\tsee every time you talk that little red light comes on .\n'), ((478, (16, 20)), '*FAT:\tsee every time you talk that little red light comes on .\n'), ((478, (42, 51)), '*FAT:\tsee every time you talk that little red light comes on .\n'), ((483, (-1, 4)), "*MOT:\twhen [?] it's not playing music .\n"), ((483, (32, 37)), "*MOT:\twhen [?] it's not playing music .\n"), ((486, (9, 13)), "*MOT:\t+^ it's recording what we're talking about [>] .\n"), ((486, (49, 52)), "*MOT:\t+^ it's recording what we're talking about [>] .\n"), ((496, (6, 12)), '*CHI:\tplease [?] .\n'), ((500, (11, 15)), '*CHI:\t<the name of it> [<] [//] oh .\n'), ((500, (19, 22)), '*CHI:\t<the name of it> [<] [//] oh .\n'), ((500, (32, 34)), '*CHI:\t<the name of it> [<] [//] oh .\n'), ((503, (-1, 4)), '*CHI:\tMother ?\n'), ((508, (-1, 4)), '*MOT:\thm: ?\n'), ((508, (6, 9)), '*MOT:\thm: ?\n'), ((512, (21, 24)), '*CHI:\t&-um (..) &-um (.) did we play any more games ?\n'), ((512, (46, 51)), '*CHI:\t&-um (..) &-um (.) did we play any more games ?\n'), ((517, (-1, 4)), '*MOT:\tI think that was all we played .\n'), ((524, (6, 10)), '*CHI:\t&-um <we (.) we> [/] we played &-um +...\n'), ((524, (11, 14)), '*CHI:\t&-um <we (.) we> [/] we played &-um +...\n'), ((524, (19, 22)), '*CHI:\t&-um <we (.) we> [/] we played &-um +...\n'), ((524, (23, 26)), '*CHI:\t&-um <we (.) we> [/] we played &-um +...\n'), ((528, (-1, 3)), '*CHI:\t<we did> [//] we played Fish !\n'), ((528, (10, 14)), '*CHI:\t<we did> [//] we played Fish !\n'), ((528, (30, 34)), '*CHI:\t<we did> [//] we played Fish !\n'), ((531, (6, 9)), '*MOT:\tmhm .\n'), ((534, (-1, 3)), '*CHI:\t<and we> [>] (.) played another Fish right ?\n'), ((534, (11, 14)), '*CHI:\t<and we> [>] (.) played another Fish right ?\n'), ((534, (38, 42)), '*CHI:\t<and we> [>] (.) played another Fish right ?\n'), ((538, (10, 15)), '*MOT:\t<oh yeah> [<] .\n'), ((538, (16, 19)), '*MOT:\t<oh yeah> [<] .\n'), ((541, (18, 22)), '*MOT:\tdid we play Fish twice ?\n'), ((545, (11, 14)), '*CHI:\t&-uh yes !\n'), ((551, (-1, 4)), '*MOT:\tI think we just played one time .\n'), ((551, (33, 37)), '*MOT:\tI think we just played one time .\n'), ((555, (6, 9)), '*CHI:\tyes .\n'), ((558, (9, 12)), '*CHI:\tno yes (.) no yes (.) no yes no yes .\n'), ((565, (-1, 4)), '*FAT:\t<here have> [<] some more sandwich .\n'), ((565, (12, 17)), '*FAT:\t<here have> [<] some more sandwich .\n'), ((568, (-1, 4)), '*CHI:\tFather_name ?\n'), ((572, (-1, 4)), '*FAT:\tyeah ?\n'), ((572, (6, 10)), '*FAT:\tyeah ?\n'), ((576, (9, 14)), '*CHI:\t<I love> [>] you .\n'), ((576, (15, 18)), '*CHI:\t<I love> [>] you .\n'), ((579, (-1, 4)), '*MOT:\t<want some> [<] +/.\n'), ((579, (12, 17)), '*MOT:\t<want some> [<] +/.\n'), ((582, (14, 19)), "*FAT:\t<that's nice> [>] .\n"), ((582, (20, 23)), "*FAT:\t<that's nice> [>] .\n"), ((585, (6, 11)), '*MOT:\twanna [<] try some chicken ?\n'), ((585, (25, 32)), '*MOT:\twanna [<] try some chicken ?\n'), ((589, (-1, 4)), '*FAT:\tI love you too .\n'), ((592, (16, 21)), '*CHI:\tno [/] no thank you .\n'), ((595, (6, 10)), "*MOT:\tit's really good .\n"), ((601, (-1, 4)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((601, (37, 42)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((601, (43, 46)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((601, (51, 54)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((601, (55, 58)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((601, (67, 75)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((601, (76, 81)), "*CHI:\tI tried it when you have [?] a party <at (.) at> [/] at your mother's house .\n"), ((609, (-1, 4)), '*CHI:\tthat [/] that was chicken .\n'), ((609, (24, 31)), '*CHI:\tthat [/] that was chicken .\n'), ((612, (35, 40)), '*FAT:\twell here <have some more of your> [>] +/.\n'), ((615, (12, 15)), '*MOT:\tright [<] !\n'), ((618, (-1, 4)), "*MOT:\t+^ you ate a whole bunch of it that time didn't you ?\n"), ((618, (6, 8)), "*MOT:\t+^ you ate a whole bunch of it that time didn't you ?\n"), ((618, (25, 30)), "*MOT:\t+^ you ate a whole bunch of it that time didn't you ?\n"), ((618, (42, 46)), "*MOT:\t+^ you ate a whole bunch of it that time didn't you ?\n"), ((624, (6, 9)), '*CHI:\tyep .\n'), ((627, (-1, 4)), '*FAT:\thave some [>] more &-uh +/.\n'), ((627, (16, 19)), '*FAT:\thave some [>] more &-uh +/.\n'), ((631, (-1, 4)), '*CHI:\tyou will <get a tummy+ache> [>] maybe .\n'), ((631, (34, 37)), '*CHI:\tyou will <get a tummy+ache> [>] maybe .\n'), ((640, (-1, 4)), '*FAT:\there .\n'), ((643, (-1, 4)), '*FAT:\thave some more food you [/] you might +//.\n'), ((643, (21, 25)), '*FAT:\thave some more food you [/] you might +//.\n'), ((647, (-1, 4)), "*MOT:\tI don't think that's what gave you the tummy+ache (be)cause that was kind of a long time ago and you just got your tummy+ache now .\n"), ((647, (75, 79)), "*MOT:\tI don't think that's what gave you the tummy+ache (be)cause that was kind of a long time ago and you just got your tummy+ache now .\n"), ((647, (90, 94)), "*MOT:\tI don't think that's what gave you the tummy+ache (be)cause that was kind of a long time ago and you just got your tummy+ache now .\n"), ((657, (-1, 4)), '*MOT:\tthat was a couple o(f) weeks [!] ago that you ate that chicken .\n'), ((657, (29, 34)), '*MOT:\tthat was a couple o(f) weeks [!] ago that you ate that chicken .\n'), ((657, (61, 68)), '*MOT:\tthat was a couple o(f) weeks [!] ago that you ate that chicken .\n'), ((662, (-1, 4)), "*MOT:\t+^ it doesn't take a few weeks to get a tummy+ache .\n"), ((662, (27, 36)), "*MOT:\t+^ it doesn't take a few weeks to get a tummy+ache .\n"), ((668, (-1, 4)), '*FAT:\thave <some more> [>] +/.\n'), ((668, (17, 22)), '*FAT:\thave <some more> [>] +/.\n'), ((672, (-1, 4)), "*MOT:\t<you could> [<] have a tummy+ache because you're hungry .\n"), ((672, (11, 17)), "*MOT:\t<you could> [<] have a tummy+ache because you're hungry .\n"), ((672, (18, 21)), "*MOT:\t<you could> [<] have a tummy+ache because you're hungry .\n"), ((672, (48, 54)), "*MOT:\t<you could> [<] have a tummy+ache because you're hungry .\n"), ((672, (55, 61)), "*MOT:\t<you could> [<] have a tummy+ache because you're hungry .\n"), ((677, (6, 8)), "*MOT:\t+^ because you haven't been eating .\n"), ((682, (-1, 4)), "*FAT:\t(.) here don't you want some more of that ?\n"), ((682, (6, 9)), "*FAT:\t(.) here don't you want some more of that ?\n"), ((688, (6, 11)), "*CHI:\thurry or I'll (.) beat [!] you guys !\n"), ((688, (24, 28)), "*CHI:\thurry or I'll (.) beat [!] you guys !\n"), ((696, (-1, 4)), "*FAT:\tdon't eat too fast .\n"), ((696, (6, 11)), "*FAT:\tdon't eat too fast .\n"), ((699, (-1, 4)), '*FAT:\tjust have some more of that anyway .\n'), ((699, (34, 40)), '*FAT:\tjust have some more of that anyway .\n'), ((702, (10, 15)), "*CHI:\tI'm gonna beat Father_name .\n"), ((702, (16, 20)), "*CHI:\tI'm gonna beat Father_name .\n"), ((705, (-1, 4)), '*CHI:\the is not +/.\n'), ((708, (-1, 4)), '*MOT:\tyou better start eating [!] then .\n'), ((712, (56, 61)), "*MOT:\t(..) xxx (.) even though he seemed to feel better today I'm glad I kept him out of day care .\n"), ((712, (66, 70)), "*MOT:\t(..) xxx (.) even though he seemed to feel better today I'm glad I kept him out of day care .\n"), ((712, (93, 97)), "*MOT:\t(..) xxx (.) even though he seemed to feel better today I'm glad I kept him out of day care .\n"), ((719, (6, 9)), '*FAT:\tmhm .\n'), ((722, (-1, 4)), '*MOT:\the still seemed to be you know kind o(f) xxx huh ?\n'), ((722, (37, 41)), '*MOT:\the still seemed to be you know kind o(f) xxx huh ?\n'), ((722, (47, 50)), '*MOT:\the still seemed to be you know kind o(f) xxx huh ?\n'), ((722, (51, 54)), '*MOT:\the still seemed to be you know kind o(f) xxx huh ?\n'), ((727, (-1, 4)), "*CHI:\tdidn't want (.) the other children to catch my tummy+ache .\n"), ((727, (32, 40)), "*CHI:\tdidn't want (.) the other children to catch my tummy+ache .\n"), ((737, (-1, 4)), '*MOT:\tor your fever .\n'), ((737, (14, 19)), '*MOT:\tor your fever .\n'), ((740, (-1, 4)), '*CHI:\tfever ?\n'), ((740, (6, 11)), '*CHI:\tfever ?\n'), ((744, (54, 58)), "*MOT:\twell that's <what when you feel> [//] when your skin feels real hot .\n"), ((744, (59, 64)), "*MOT:\twell that's <what when you feel> [//] when your skin feels real hot .\n"), ((749, (-1, 4)), "*MOT:\tthat's a fever .\n"), ((749, (15, 20)), "*MOT:\tthat's a fever .\n"), ((756, (10, 12)), '*CHI:\t(.) oh .\n'), ((759, (-1, 4)), '*CHI:\tare you hot ?\n'), ((763, (-1, 4)), '*CHI:\tare <you hot> [>] ?\n'), ((763, (15, 19)), '*CHI:\tare <you hot> [>] ?\n'), ((763, (20, 23)), '*CHI:\tare <you hot> [>] ?\n'), ((767, (28, 32)), "*MOT:\t<it's really [!]> [<] hard to understand you (.) when you talk with food in your mouth though okay ?\n"), ((767, (74, 78)), "*MOT:\t<it's really [!]> [<] hard to understand you (.) when you talk with food in your mouth though okay ?\n"), ((767, (87, 92)), "*MOT:\t<it's really [!]> [<] hard to understand you (.) when you talk with food in your mouth though okay ?\n"), ((767, (100, 104)), "*MOT:\t<it's really [!]> [<] hard to understand you (.) when you talk with food in your mouth though okay ?\n"), ((775, (-1, 4)), '*CHI:\tI say are you hot ?\n'), ((784, (6, 9)), '*CHI:\twww &=hums .\n'), ((784, (10, 16)), '*CHI:\twww &=hums .\n'), ((785, (-1, 4)), "*FAT:\tit's not that [!] bad .\n"), ((788, (-1, 4)), '*FAT:\tare you hot ?\n'), ((796, (21, 24)), '*FAT:\toh Chi not the fan !\n'), ((799, (6, 9)), '*CHI:\tyes .\n'), ((802, (13, 17)), "*FAT:\t<it'll cool &o> [/] it'll cool our meal off too quickly [>] .\n"), ((802, (41, 45)), "*FAT:\t<it'll cool &o> [/] it'll cool our meal off too quickly [>] .\n"), ((807, (12, 15)), "*MOT:\t<come on> [<] Chi you're making a mess .\n"), ((807, (40, 44)), "*MOT:\t<come on> [<] Chi you're making a mess .\n"), ((812, (-1, 4)), '*MOT:\t+^ will you please sit down ?\n'), ((812, (6, 8)), '*MOT:\t+^ will you please sit down ?\n'), ((816, (6, 11)), '*MOT:\tthank you .\n'), ((819, (6, 10)), "*FAT:\tit's too cold to have that on anyway .\n"), ((826, (-1, 4)), "*CHI:\tI can't eat anymore .\n"), ((830, (27, 30)), '*FAT:\tgood sandwich though huh ?\n'), ((834, (6, 9)), '*CHI:\tyep .\n'), ((841, (6, 12)), "*FAT:\tyou're all done ?\n"), ((845, (-1, 4)), "*FAT:\tdon't you want any cantaloupe ?\n"), ((845, (6, 11)), "*FAT:\tdon't you want any cantaloupe ?\n"), ((845, (25, 35)), "*FAT:\tdon't you want any cantaloupe ?\n"), ((852, (32, 37)), "*MOT:\twell (.) if it hurts your tummy to eat then don't eat but (.) you may not have anything else .\n"), ((852, (41, 44)), "*MOT:\twell (.) if it hurts your tummy to eat then don't eat but (.) you may not have anything else .\n"), ((860, (-1, 4)), '*FAT:\tthis will make your tummy feel better probably Chi .\n'), ((860, (26, 31)), '*FAT:\tthis will make your tummy feel better probably Chi .\n'), ((868, (-1, 4)), "*FAT:\t<(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .\n"), ((868, (40, 43)), "*FAT:\t<(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .\n"), ((868, (67, 74)), "*FAT:\t<(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .\n"), ((868, (126, 131)), "*FAT:\t<(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .\n"), ((868, (147, 150)), "*FAT:\t<(be)cause you haven't> [<] eaten (.) and so that's why your tummy's probably (.) doesn't feel very good (be)cause <you don't have any food> [>] .\n"), ((879, (25, 32)), '*CHI:\t<touching> [<] [?] stomach .\n'), ((882, (-1, 4)), "*MOT:\tthat wouldn't be bad [?] news .\n"), ((882, (31, 35)), "*MOT:\tthat wouldn't be bad [?] news .\n"), ((885, (6, 9)), '*CHI:\twww .\n'), ((890, (6, 10)), '*MOT:\tuhoh .\n'), ((893, (6, 9)), '*CHI:\twww .\n'), ((895, (15, 19)), '*MOT:\tone sick pony .\n'), ((898, (11, 14)), '*CHI:\t(..) www .\n'), ((901, (-1, 4)), '*MOT:\t(.) you wanna lie down on the couch for a little while ?\n'), ((901, (6, 9)), '*MOT:\t(.) you wanna lie down on the couch for a little while ?\n'), ((901, (36, 41)), '*MOT:\t(.) you wanna lie down on the couch for a little while ?\n'), ((907, (-1, 4)), "*CHI:\tthere wasn't (.) anything .\n"), ((907, (19, 22)), "*CHI:\tthere wasn't (.) anything .\n"), ((911, (6, 8)), '*CHI:\t+^ can I watch xxx ?\n'), ((911, (21, 24)), '*CHI:\t+^ can I watch xxx ?\n'), ((921, (17, 20)), '*MOT:\tChi once a day [!] you can watch it <alright> [>] ?\n'), ((928, (-1, 4)), '*MOT:\t+^ not ten times a day .\n'), ((928, (17, 22)), '*MOT:\t+^ not ten times a day .\n'), ((928, (25, 28)), '*MOT:\t+^ not ten times a day .\n'), ((931, (-1, 4)), '*CHI:\tbut <I> [/] I need to watch something !\n'), ((937, (9, 13)), "*MOT:\t+^ it's nice (.) to just have quiet [!] around here for once .\n"), ((937, (42, 45)), "*MOT:\t+^ it's nice (.) to just have quiet [!] around here for once .\n"), ((942, (9, 13)), "*CHI:\tno it's not .\n"), ((950, (9, 12)), '*CHI:\tno [?] .\n'), ((953, (6, 9)), '*MOT:\tyes .\n'), ((958, (-1, 4)), "*MOT:\tdon't you even want your delicious cantaloupe ?\n"), ((958, (6, 11)), "*MOT:\tdon't you even want your delicious cantaloupe ?\n"), ((958, (41, 51)), "*MOT:\tdon't you even want your delicious cantaloupe ?\n"), ((968, (6, 16)), '*MOT:\tnice juicy cantaloupe ?\n'), ((968, (17, 27)), '*MOT:\tnice juicy cantaloupe ?\n'), ((973, (10, 15)), "*MOT:\twhy don't you drink your juice at least ?\n"), ((973, (31, 36)), "*MOT:\twhy don't you drink your juice at least ?\n"), ((979, (6, 10)), '*CHI:\tokay .\n'), ((982, (17, 23)), "*MOT:\tI'm afraid you're becoming dehydrated .\n"), ((982, (33, 43)), "*MOT:\tI'm afraid you're becoming dehydrated .\n"), ((987, (6, 12)), "*MOT:\tyou're gonna get too skinny .\n"), ((987, (13, 18)), "*MOT:\tyou're gonna get too skinny .\n"), ((990, (21, 28)), "*MOT:\t+^ your little muscles will go away if you don't eat though !\n"), ((995, (10, 13)), "*CHI:\t<no it> [/] no it <willn't> [>] !\n"), ((995, (34, 37)), "*CHI:\t<no it> [/] no it <willn't> [>] !\n"), ((998, (23, 26)), "*MOT:\t<they'll shrink> [<] !\n"), ((1001, (6, 9)), '*FAT:\tmhm .\n'), ((1005, (6, 9)), '*CHI:\txxx .\n'), ((1009, (-1, 4)), '*MOT:\tthat I could live without .\n'), ((1012, (6, 11)), '*CHI:\twater [!] ?\n'), ((1012, (12, 15)), '*CHI:\twater [!] ?\n'), ((1016, (6, 10)), '*CHI:\tlook !\n'), ((1019, (-1, 4)), "*MOT:\tthat's not even water is it ?\n"), ((1019, (22, 27)), "*MOT:\tthat's not even water is it ?\n"), ((1024, (6, 10)), '*CHI:\tyeah .\n'), ((1027, (-1, 4)), '*MOT:\t(..) well +...\n'), ((1034, (-1, 4)), "*MOT:\tI don't have work tomorrow and you don't have day care so we'll just hang out again in the house and then (.) hopefully you'll be all better for Friday .\n"), ((1034, (19, 23)), "*MOT:\tI don't have work tomorrow and you don't have day care so we'll just hang out again in the house and then (.) hopefully you'll be all better for Friday .\n"), ((1034, (52, 55)), "*MOT:\tI don't have work tomorrow and you don't have day care so we'll just hang out again in the house and then (.) hopefully you'll be all better for Friday .\n"), ((1034, (97, 102)), "*MOT:\tI don't have work tomorrow and you don't have day care so we'll just hang out again in the house and then (.) hopefully you'll be all better for Friday .\n"), ((1054, (46, 50)), '*CHI:\t<is Daddy doing [?]> [//] is Daddy have work ?\n'), ((1058, (-1, 4)), '*MOT:\ton Friday ?\n'), ((1062, (6, 10)), '*MOT:\tyeah .\n'), ((1065, (-1, 4)), "*MOT:\tand you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .\n"), ((1065, (19, 22)), "*MOT:\tand you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .\n"), ((1065, (23, 27)), "*MOT:\tand you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .\n"), ((1065, (32, 36)), "*MOT:\tand you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .\n"), ((1065, (37, 40)), "*MOT:\tand you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .\n"), ((1065, (79, 82)), "*MOT:\tand you have day care and it's toy [!] day on Friday and you can bring a [/] (.) a toy .\n"), ((1072, (6, 10)), '*CHI:\tokay !\n'), ((1075, (-1, 4)), '*CHI:\tlike +...\n'), ((1078, (13, 18)), "*CHI:\t+, I'm gonna get (.) that maybe I can bring .\n"), ((1078, (19, 22)), "*CHI:\t+, I'm gonna get (.) that maybe I can bring .\n"), ((1084, (15, 20)), "*MOT:\twell toy day's not &un (.) until the day after tomorrow Chi .\n"), ((1089, (-1, 4)), '*MOT:\tI guess it requires a lot of thought .\n'), ((1089, (28, 31)), '*MOT:\tI guess it requires a lot of thought .\n'), ((1089, (35, 42)), '*MOT:\tI guess it requires a lot of thought .\n'), ((1098, (-1, 4)), '*MOT:\tpicking out a toy .\n'), ((1098, (20, 23)), '*MOT:\tpicking out a toy .\n'), ((1104, (-1, 4)), '*MOT:\tyou could bring your Superman cape again .\n'), ((1104, (36, 40)), '*MOT:\tyou could bring your Superman cape again .\n'), ((1118, (-1, 4)), '*CHI:\tcan I bring this ?\n'), ((1122, (-1, 4)), "*MOT:\tI don't know bring it in .\n"), ((1125, (6, 8)), "*MOT:\t+^ I can't see .\n"), ((1128, (6, 10)), '*FAT:\tyeah !\n'), ((1131, (6, 10)), '*MOT:\tyeah .\n'), ((1134, (-1, 4)), "*MOT:\tif you didn't scare [!] anybody with it <but &y> [//] sure .\n"), ((1134, (30, 37)), "*MOT:\tif you didn't scare [!] anybody with it <but &y> [//] sure .\n"), ((1134, (60, 64)), "*MOT:\tif you didn't scare [!] anybody with it <but &y> [//] sure .\n"), ((1139, (6, 10)), '*CHI:\tokay .\n'), ((1143, (-1, 4)), '*MOT:\twhere did we get that anyway ?\n'), ((1148, (-1, 4)), '*MOT:\t+^ do you remember ?\n'), ((1148, (6, 8)), '*MOT:\t+^ do you remember ?\n'), ((1152, (11, 14)), '*CHI:\t&-uh <it &w it &w (.) it> [//] <when we went> [//] when Daddy and you and me came (.) and got [!] it .\n'), ((1152, (28, 31)), '*CHI:\t&-uh <it &w it &w (.) it> [//] <when we went> [//] when Daddy and you and me came (.) and got [!] it .\n'), ((1152, (100, 103)), '*CHI:\t&-uh <it &w it &w (.) it> [//] <when we went> [//] when Daddy and you and me came (.) and got [!] it .\n'), ((1157, (-1, 4)), '*CHI:\twe went to the store (.) and +/.\n'), ((1157, (21, 26)), '*CHI:\twe went to the store (.) and +/.\n'), ((1157, (27, 30)), '*CHI:\twe went to the store (.) and +/.\n'), ((1160, (-1, 4)), '*MOT:\ton the Cape was it ?\n'), ((1166, (9, 15)), '*FAT:\t<I think> [>] .\n'), ((1166, (16, 19)), '*FAT:\t<I think> [>] .\n'), ((1169, (12, 15)), '*MOT:\t<oh > [<] !\n'), ((1172, (-1, 4)), '*MOT:\tit was in Provincetown ?\n'), ((1175, (-1, 4)), '*CHI:\tyeah it was (.) in this [/] this store .\n'), ((1175, (6, 10)), '*CHI:\tyeah it was (.) in this [/] this store .\n'), ((1175, (30, 33)), '*CHI:\tyeah it was (.) in this [/] this store .\n'), ((1175, (39, 44)), '*CHI:\tyeah it was (.) in this [/] this store .\n'), ((1178, (-1, 4)), '*CHI:\tand a whole bunch of sharks .\n'), ((1178, (18, 23)), '*CHI:\tand a whole bunch of sharks .\n'), ((1178, (27, 33)), '*CHI:\tand a whole bunch of sharks .\n'), ((1181, (-1, 4)), '*CHI:\tand I picked this one out .\n'), ((1181, (28, 31)), '*CHI:\tand I picked this one out .\n'), ((1185, (6, 9)), '*FAT:\tmhm [>] .\n'), ((1185, (10, 13)), '*FAT:\tmhm [>] .\n'), ((1188, (16, 20)), '*MOT:\t<oh > [<] yeah !\n'), ((1191, (-1, 4)), '*CHI:\tand that was good !\n'), ((1194, (34, 39)), "*MOT:\tlooks like it has got a big smile [!] doesn't it ?\n"), ((1203, (6, 8)), '*MOT:\tah .\n'), ((1206, (17, 20)), '*MOT:\tmaybe [//] hey !\n'), ((1209, (26, 30)), "*MOT:\tmaybe it'll eat the rest of your cantaloupe .\n"), ((1209, (39, 49)), "*MOT:\tmaybe it'll eat the rest of your cantaloupe .\n"), ((1214, (6, 10)), '*CHI:\tokay .\n'), ((1217, (-1, 4)), "*CHI:\tI'll try it .\n"), ((1217, (11, 14)), "*CHI:\tI'll try it .\n"), ((1220, (6, 9)), '*CHI:\twww .\n'), ((1225, (-1, 4)), "*MOT:\tmaybe that wasn't such a good idea was it ?\n"), ((1225, (17, 23)), "*MOT:\tmaybe that wasn't such a good idea was it ?\n"), ((1225, (36, 40)), "*MOT:\tmaybe that wasn't such a good idea was it ?\n"), ((1230, (-1, 4)), '*FAT:\tcan I have this thing ?\n'), ((1230, (22, 27)), '*FAT:\tcan I have this thing ?\n'), ((1234, (6, 10)), '*CHI:\tyeah .\n'), ((1238, (30, 36)), '*CHI:\tyou can help me with my supper .\n'), ((1242, (-1, 4)), '*CHI:\tokay ?\n'), ((1242, (6, 10)), '*CHI:\tokay ?\n'), ((1246, (6, 8)), '*FAT:\tmm !\n'), ((1249, (6, 8)), '*FAT:\tmm [>] .\n'), ((1249, (9, 12)), '*FAT:\tmm [>] .\n'), ((1253, (-1, 4)), '*MOT:\thad a hankering for egg salad did you &=laughs ?\n'), ((1253, (26, 35)), '*MOT:\thad a hankering for egg salad did you &=laughs ?\n'), ((1259, (6, 9)), "*CHI:\twww &=noise xxx it's <not goin(g) (.) go away> [>] .\n"), ((1259, (22, 26)), "*CHI:\twww &=noise xxx it's <not goin(g) (.) go away> [>] .\n"), ((1259, (53, 56)), "*CHI:\twww &=noise xxx it's <not goin(g) (.) go away> [>] .\n"), ((1262, (24, 27)), "*FAT:\t<it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .\n"), ((1262, (36, 39)), "*FAT:\t<it looks so good (.) all the egg salad's> [<] popping out of the sandwiches .\n"), ((1269, (19, 22)), "*CHI:\tit don't fit [?] .\n"), ((1277, (-1, 4)), "*MOT:\tyou didn't eat hardly anything yesterday and you <shertainly [: certainly]> [//] certainly didn't eat hardly anything today [>] .\n"), ((1277, (17, 20)), "*MOT:\tyou didn't eat hardly anything yesterday and you <shertainly [: certainly]> [//] certainly didn't eat hardly anything today [>] .\n"), ((1277, (124, 129)), "*MOT:\tyou didn't eat hardly anything yesterday and you <shertainly [: certainly]> [//] certainly didn't eat hardly anything today [>] .\n"), ((1285, (6, 10)), '*CHI:\t<www &=screeches > [<] !\n'), ((1285, (25, 28)), '*CHI:\t<www &=screeches > [<] !\n'), ((1286, (-1, 4)), '*CHI:\tand I will eat this !\n'), ((1289, (-1, 4)), '*MOT:\thad about three bites of breakfast .\n'), ((1289, (22, 27)), '*MOT:\thad about three bites of breakfast .\n'), ((1289, (31, 40)), '*MOT:\thad about three bites of breakfast .\n'), ((1293, (-1, 4)), '*MOT:\thad about two bites o(f) lunch .\n'), ((1293, (20, 25)), '*MOT:\thad about two bites o(f) lunch .\n'), ((1293, (31, 36)), '*MOT:\thad about two bites o(f) lunch .\n'), ((1296, (-1, 4)), '*MOT:\tand <two bites> [>] of supper .\n'), ((1296, (29, 35)), '*MOT:\tand <two bites> [>] of supper .\n'), ((1299, (6, 10)), '*CHI:\t<and I will> [<] +/.\n'), ((1302, (9, 12)), '*CHI:\t+, eat this [!] whole thing .\n'), ((1302, (28, 33)), '*CHI:\t+, eat this [!] whole thing .\n'), ((1305, (28, 33)), "*MOT:\twell there's two more bites .\n"), ((1308, (6, 10)), '*MOT:\twhoa !\n'), ((1311, (6, 9)), '*CHI:\thm: .\n'), ((1314, (6, 9)), "*MOT:\t(.) but I guess if you're not throwing up or anything .\n"), ((1314, (25, 31)), "*MOT:\t(.) but I guess if you're not throwing up or anything .\n"), ((1319, (6, 8)), "*MOT:\t+^ I guess that's okay .\n"), ((1319, (24, 28)), "*MOT:\t+^ I guess that's okay .\n"), ((1331, (31, 35)), '*CHI:\tJesse got his &-um robot hand too .\n'), ((1334, (-1, 4)), '*MOT:\tJesse has a robot hand ?\n'), ((1334, (18, 23)), '*MOT:\tJesse has a robot hand ?\n'), ((1334, (24, 28)), '*MOT:\tJesse has a robot hand ?\n'), ((1338, (6, 10)), '*CHI:\tyeah .\n'), ((1341, (-1, 7)), '*MOT:\tJesse at school ?\n'), ((1341, (15, 21)), '*MOT:\tJesse at school ?\n'), ((1345, (6, 9)), '*CHI:\tyep .\n'), ((1354, (-1, 4)), "*MOT:\tthat's what I figured .\n"), ((1357, (8, 13)), '*MOT:\ta robot hand ?\n'), ((1357, (14, 18)), '*MOT:\ta robot hand ?\n'), ((1361, (-1, 4)), '*MOT:\t<is that what you said> [>] ?\n'), ((1365, (6, 11)), '*CHI:\t<well he got a toy [!]> [<] robot hand I mean .\n'), ((1365, (21, 24)), '*CHI:\t<well he got a toy [!]> [<] robot hand I mean .\n'), ((1365, (34, 39)), '*CHI:\t<well he got a toy [!]> [<] robot hand I mean .\n'), ((1365, (40, 44)), '*CHI:\t<well he got a toy [!]> [<] robot hand I mean .\n'), ((1374, (-1, 4)), "*MOT:\twhat's that like ?\n"), ((1378, (6, 10)), "*MOT:\tit's just a hand ?\n"), ((1378, (18, 22)), "*MOT:\tit's just a hand ?\n"), ((1382, (-1, 4)), '*MOT:\tdoes that (.) do anything ?\n'), ((1386, (14, 21)), '*CHI:\twell if someone (.) can do this [!] .\n'), ((1386, (22, 25)), '*CHI:\twell if someone (.) can do this [!] .\n'), ((1386, (38, 41)), '*CHI:\twell if someone (.) can do this [!] .\n'), ((1389, (-1, 4)), '*CHI:\tand can do this [!] .\n'), ((1389, (22, 25)), '*CHI:\tand can do this [!] .\n'), ((1397, (12, 19)), '*CHI:\t<<and someone> [/] and> [<] someone can shake his hand .\n'), ((1397, (25, 29)), '*CHI:\t<<and someone> [/] and> [<] someone can shake his hand .\n'), ((1397, (46, 51)), '*CHI:\t<<and someone> [/] and> [<] someone can shake his hand .\n'), ((1397, (56, 60)), '*CHI:\t<<and someone> [/] and> [<] someone can shake his hand .\n'), ((1400, (14, 19)), '*CHI:\tyou can shake his hand .\n'), ((1400, (24, 28)), '*CHI:\tyou can shake his hand .\n'), ((1403, (6, 8)), "*MOT:\toh [>] well that's pretty handy &=laughs !\n"), ((1406, (6, 9)), '*FAT:\tmhm [<] .\n'), ((1406, (10, 13)), '*FAT:\tmhm [<] .\n'), ((1410, (-1, 4)), '*CHI:\twill you buy me xxx toy someday ?\n'), ((1410, (26, 29)), '*CHI:\twill you buy me xxx toy someday ?\n'), ((1414, (17, 20)), "*MOT:\twell we'll see .\n"), ((1417, (-1, 4)), '*MOT:\t+^ if we see it in the store .\n'), ((1417, (6, 8)), '*MOT:\t+^ if we see it in the store .\n'), ((1417, (29, 34)), '*MOT:\t+^ if we see it in the store .\n'), ((1420, (-1, 4)), "*MOT:\tif it's cheap .\n"), ((1420, (14, 19)), "*MOT:\tif it's cheap .\n"), ((1423, (-1, 4)), '*MOT:\thave extra money .\n'), ((1423, (17, 22)), '*MOT:\thave extra money .\n'), ((1426, (-1, 4)), "*MOT:\tand you're being really unbelievably good .\n"), ((1426, (10, 16)), "*MOT:\tand you're being really unbelievably good .\n"), ((1430, (-1, 4)), "*MOT:\tand I'm inclined to buy you something .\n"), ((1438, (-1, 4)), "*MOT:\tthat [!] I don't like at all .\n"), ((1438, (11, 14)), "*MOT:\tthat [!] I don't like at all .\n"), ((1443, (-1, 4)), '*CHI:\twhy ?\n'), ((1447, (-1, 4)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1447, (33, 38)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1447, (74, 79)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1447, (97, 103)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1447, (104, 109)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1447, (121, 127)), "*MOT:\tbecause I don't think it's funny and I don't think it's the correct thing to do (.) at the dinner table or at your mother .\n"), ((1458, (-1, 4)), '*CHI:\twhy ?\n'), ((1462, (-1, 4)), "*MOT:\tI don't know .\n"), ((1465, (14, 21)), '*MOT:\tit just bothers me .\n'), ((1468, (55, 60)), "*MOT:\tpretending to shoot somebody isn't really a nice thing .\n"), ((1473, (-1, 4)), "*CHI:\tI'm not shooting !\n"), ((1480, (6, 9)), '*CHI:\t(.) this is a telescope .\n'), ((1487, (6, 9)), '*CHI:\tyup .\n'), ((1490, (-1, 4)), '*CHI:\tI was gonna xxx .\n'), ((1493, (6, 8)), '*MOT:\tah !\n'), ((1496, (10, 15)), '*CHI:\txxx table .\n'), ((1503, (-1, 4)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1503, (27, 30)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1503, (49, 54)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1503, (63, 67)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1503, (78, 82)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1503, (83, 87)), "*MOT:\tokay well look don't eat anymore with your mouth full of food (be)cause it's hard to understand .\n"), ((1510, (6, 10)), '*MOT:\tokay [>] ?\n'), ((1510, (11, 14)), '*MOT:\tokay [>] ?\n'), ((1514, (-1, 4)), "*FAT:\t<don't talk> [<] anymore ?\n"), ((1514, (13, 18)), "*FAT:\t<don't talk> [<] anymore ?\n"), ((1514, (19, 22)), "*FAT:\t<don't talk> [<] anymore ?\n"), ((1518, (-1, 4)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1518, (6, 11)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1518, (12, 16)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1518, (35, 40)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1518, (58, 62)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1518, (63, 67)), "*MOT:\tdon't talk anymore with your mouth &=laughs full of food okay ?\n"), ((1528, (-1, 4)), '*MOT:\tare you gonna eat your cantaloupe ?\n'), ((1528, (29, 39)), '*MOT:\tare you gonna eat your cantaloupe ?\n'), ((1533, (15, 18)), '*MOT:\toh great [>] !\n'), ((1536, (-1, 4)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1536, (12, 15)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1536, (25, 28)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1536, (40, 45)), '*FAT:\t<here dip [/]> [<] dip it in your juice and see what it tastes like .\n'), ((1541, (9, 12)), '*CHI:\tno way !\n'), ((1545, (6, 10)), '*CHI:\tyuck [<] !\n'), ((1545, (11, 14)), '*CHI:\tyuck [<] !\n'), ((1548, (6, 9)), '*CHI:\tson of a gun !\n'), ((1548, (15, 18)), '*CHI:\tson of a gun !\n'), ((1551, (6, 9)), '*MOT:\tson of a gun huh ?\n'), ((1551, (15, 18)), '*MOT:\tson of a gun huh ?\n'), ((1551, (19, 22)), '*MOT:\tson of a gun huh ?\n'), ((1556, (6, 9)), '*MOT:\twww &=laughs who [=? what] are you trying to kill [=? do] anyways ?\n'), ((1556, (27, 32)), '*MOT:\twww &=laughs who [=? what] are you trying to kill [=? do] anyways ?\n'), ((1556, (60, 63)), '*MOT:\twww &=laughs who [=? what] are you trying to kill [=? do] anyways ?\n'), ((1561, (6, 12)), '*CHI:\tbang@o bang@o .\n'), ((1565, (6, 9)), '*MOT:\txxx .\n'), ((1566, (-1, 4)), '*MOT:\twhy ?\n'), ((1574, (-1, 4)), '*MOT:\tis that the guy on the motorcycle ?\n'), ((1574, (18, 21)), '*MOT:\tis that the guy on the motorcycle ?\n'), ((1585, (-1, 4)), "*MOT:\tmust be (be)cause it's loud , huh ?\n"), ((1585, (29, 33)), "*MOT:\tmust be (be)cause it's loud , huh ?\n"), ((1585, (36, 39)), "*MOT:\tmust be (be)cause it's loud , huh ?\n"), ((1592, (-1, 4)), "*CHI:\tare you recording (.) us that we're talking about ?\n"), ((1598, (-1, 4)), '*MOT:\tI think so .\n'), ((1601, (6, 8)), '*MOT:\t+^ is there a little red light that goes on ?\n'), ((1601, (27, 36)), '*MOT:\t+^ is there a little red light that goes on ?\n'), ((1607, (-1, 4)), '*MOT:\tI think it is .\n'), ((1611, (-1, 4)), "*MOT:\tthen we're gonna mail it .\n"), ((1611, (23, 27)), "*MOT:\tthen we're gonna mail it .\n"), ((1616, (31, 36)), '*MOT:\tremember those two young women that came over ?\n'), ((1622, (-1, 4)), '*CHI:\tI remember (th)em !\n'), ((1625, (11, 14)), '*MOT:\t&-um (.) and &-um (.) they asked me a whole bunch of questions ?\n'), ((1625, (50, 55)), '*MOT:\t&-um (.) and &-um (.) they asked me a whole bunch of questions ?\n'), ((1631, (6, 9)), '*CHI:\tyep .\n'), ((1634, (6, 9)), '*CHI:\txxx .\n'), ((1635, (-1, 4)), '*CHI:\tsee ?\n'), ((1635, (6, 9)), '*CHI:\tsee ?\n'), ((1639, (-1, 4)), '*CHI:\txxx still has +...\n'), ((1639, (6, 9)), '*CHI:\txxx still has +...\n'), ((1646, (-1, 4)), "*MOT:\talright well maybe you shouldn't play with that because I don't know if the xxx on it really +...\n"), ((1646, (82, 85)), "*MOT:\talright well maybe you shouldn't play with that because I don't know if the xxx on it really +...\n"), ((1653, (6, 10)), '*CHI:\tokay .\n'), ((1656, (6, 10)), "*MOT:\tokay but it's not ours .\n"), ((1656, (24, 28)), "*MOT:\tokay but it's not ours .\n"), ((1659, (6, 8)), "*MOT:\t+, is what I'm (.) trying to say .\n"), ((1663, (-1, 4)), '*MOT:\tokay ?\n'), ((1663, (6, 10)), '*MOT:\tokay ?\n'), ((1667, (-1, 4)), '*MOT:\twe sort of borrowed it from them .\n'), ((1672, (10, 14)), '*CHI:\t<it too> [/] it too little ?\n'), ((1676, (6, 9)), '*MOT:\twww [=! clears throat] right .\n'), ((1690, (-1, 4)), "*MOT:\t<don't you think that's &-uh> [//] yeah I know it was Lisa .\n"), ((1690, (41, 45)), "*MOT:\t<don't you think that's &-uh> [//] yeah I know it was Lisa .\n"), ((1697, (6, 10)), '*MOT:\tyeah and +/.\n'), ((1700, (-1, 4)), '*CHI:\tyeah she got [//] brought [=? bought] you toys !\n'), ((1700, (6, 10)), '*CHI:\tyeah she got [//] brought [=? bought] you toys !\n'), ((1700, (36, 43)), '*CHI:\tyeah she got [//] brought [=? bought] you toys !\n'), ((1704, (-1, 4)), '*CHI:\tand then she xxx (.) spoons [?] and then you played .\n'), ((1704, (27, 33)), '*CHI:\tand then she xxx (.) spoons [?] and then you played .\n'), ((1704, (34, 37)), '*CHI:\tand then she xxx (.) spoons [?] and then you played .\n'), ((1713, (-1, 4)), "*MOT:\tthat's right !\n"), ((1713, (6, 12)), "*MOT:\tthat's right !\n"), ((1713, (13, 18)), "*MOT:\tthat's right !\n"), ((1722, (-1, 4)), '*CHI:\tthis xxx .\n'), ((1722, (11, 14)), '*CHI:\tthis xxx .\n'), ((1725, (-1, 4)), '*MOT:\tand we pretended that we were having breakfast in the cafeteria at school [!] huh ?\n'), ((1725, (43, 52)), '*MOT:\tand we pretended that we were having breakfast in the cafeteria at school [!] huh ?\n'), ((1725, (73, 79)), '*MOT:\tand we pretended that we were having breakfast in the cafeteria at school [!] huh ?\n'), ((1725, (84, 87)), '*MOT:\tand we pretended that we were having breakfast in the cafeteria at school [!] huh ?\n'), ((1732, (-1, 4)), '*CHI:\tyeah will you brought me money and toys sometime ?\n'), ((1732, (6, 10)), '*CHI:\tyeah will you brought me money and toys sometime ?\n'), ((1732, (31, 36)), '*CHI:\tyeah will you brought me money and toys sometime ?\n'), ((1732, (41, 45)), '*CHI:\tyeah will you brought me money and toys sometime ?\n'), ((1738, (-1, 4)), '*CHI:\tare you xxx +/.\n'), ((1741, (-1, 4)), "*MOT:\toh my gosh I'm losing count !\n"), ((1741, (28, 33)), "*MOT:\toh my gosh I'm losing count !\n"), ((1745, (13, 19)), '*MOT:\twait a minute now you want a robot hand +...\n'), ((1745, (41, 45)), '*MOT:\twait a minute now you want a robot hand +...\n'), ((1750, (6, 10)), '*CHI:\tyeah .\n'), ((1753, (-1, 4)), '*MOT:\tand (.) what else ?\n'), ((1757, (18, 23)), '*CHI:\t&-um and <a tray> [//] a toy tray .\n'), ((1757, (31, 34)), '*CHI:\t&-um and <a tray> [//] a toy tray .\n'), ((1760, (-1, 4)), '*MOT:\toh right !\n'), ((1763, (11, 14)), '*CHI:\t<xxx (.) and a (.) and a> [//] and (.) all those plates .\n'), ((1763, (29, 31)), '*CHI:\t<xxx (.) and a (.) and a> [//] and (.) all those plates .\n'), ((1763, (55, 61)), '*CHI:\t<xxx (.) and a (.) and a> [//] and (.) all those plates .\n'), ((1766, (-1, 4)), '*CHI:\tand all those cups [?] .\n'), ((1766, (20, 24)), '*CHI:\tand all those cups [?] .\n'), ((1769, (44, 48)), '*CHI:\t<and &-um> [/] and <cars and> [>] (.) &-uh !\n'), ((1772, (-1, 4)), '*FAT:\t<cups and a saucer> [<] .\n'), ((1772, (6, 11)), '*FAT:\t<cups and a saucer> [<] .\n'), ((1772, (26, 29)), '*FAT:\t<cups and a saucer> [<] .\n'), ((1775, (11, 14)), '*CHI:\t<and is> [//] <and (.) all> [/] and all those cups .\n'), ((1775, (29, 33)), '*CHI:\t<and is> [//] <and (.) all> [/] and all those cups .\n'), ((1775, (34, 37)), '*CHI:\t<and is> [//] <and (.) all> [/] and all those cups .\n'), ((1775, (52, 56)), '*CHI:\t<and is> [//] <and (.) all> [/] and all those cups .\n'), ((1778, (6, 8)), '*MOT:\tah !\n'), ((1785, (6, 10)), '*MOT:\tsort o(f) like you own &-um dishes [//] set of dishes huh ?\n'), ((1785, (11, 15)), '*MOT:\tsort o(f) like you own &-um dishes [//] set of dishes huh ?\n'), ((1785, (34, 40)), '*MOT:\tsort o(f) like you own &-um dishes [//] set of dishes huh ?\n'), ((1785, (46, 49)), '*MOT:\tsort o(f) like you own &-um dishes [//] set of dishes huh ?\n'), ((1785, (60, 63)), '*MOT:\tsort o(f) like you own &-um dishes [//] set of dishes huh ?\n'), ((1792, (6, 10)), '*CHI:\tyeah <and (.) and> [/] and yeah !\n'), ((1792, (20, 24)), '*CHI:\tyeah <and (.) and> [/] and yeah !\n'), ((1792, (25, 28)), '*CHI:\tyeah <and (.) and> [/] and yeah !\n'), ((1795, (-1, 4)), '*CHI:\tknow how many toys that makes ?\n'), ((1795, (20, 24)), '*CHI:\tknow how many toys that makes ?\n'), ((1806, (-1, 4)), '*CHI:\tten !\n'), ((1809, (-1, 4)), '*MOT:\tI have_to buy ten toys now ?\n'), ((1809, (24, 28)), '*MOT:\tI have_to buy ten toys now ?\n'), ((1813, (-1, 4)), '*MOT:\tbut your birthday was only a month ago !\n'), ((1813, (35, 40)), '*MOT:\tbut your birthday was only a month ago !\n'), ((1819, (-1, 4)), "*MOT:\tand Christmas [!] isn't for (.) five [!] more months !\n"), ((1819, (24, 29)), "*MOT:\tand Christmas [!] isn't for (.) five [!] more months !\n"), ((1819, (52, 58)), "*MOT:\tand Christmas [!] isn't for (.) five [!] more months !\n"), ((1825, (-1, 4)), '*CHI:\tI know !\n'), ((1828, (6, 10)), '*MOT:\tuhoh .\n'), ((1831, (-1, 4)), '*CHI:\twill you buy me some new toys someday ?\n'), ((1831, (31, 35)), '*CHI:\twill you buy me some new toys someday ?\n'), ((1837, (6, 10)), '*MOT:\tsure .\n'), ((1840, (11, 14)), '*CHI:\t&-uh (.) ten toys ?\n'), ((1840, (15, 18)), '*CHI:\t&-uh (.) ten toys ?\n'), ((1847, (16, 19)), "*MOT:\tsure I'll buy you ten toys sometime .\n"), ((1852, (-1, 4)), '*FAT:\there you want some more of this cantaloupe Chi ?\n'), ((1852, (38, 48)), '*FAT:\there you want some more of this cantaloupe Chi ?\n'), ((1858, (6, 9)), '*FAT:\txxx .\n'), ((1859, (7, 12)), '*CHI:\t<gob@o gob@o gob@o> [= gobble] .\n'), ((1862, (6, 17)), '*MOT:\torange food is almost as good as green food to eat .\n'), ((1862, (39, 49)), '*MOT:\torange food is almost as good as green food to eat .\n'), ((1868, (-1, 4)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1868, (6, 9)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1868, (21, 27)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1868, (43, 51)), "*CHI:\they [!] <don't cover> [<] up (.) the broccoli !\n"), ((1871, (-1, 4)), '*FAT:\thuh ?\n'), ((1871, (6, 9)), '*FAT:\thuh ?\n'), ((1876, (-1, 4)), '*MOT:\tyou want more broccoli ?\n'), ((1876, (20, 28)), '*MOT:\tyou want more broccoli ?\n'), ((1880, (-1, 4)), '*MOT:\thuh [!] ?\n'), ((1880, (6, 9)), '*MOT:\thuh [!] ?\n'), ((1880, (10, 13)), '*MOT:\thuh [!] ?\n'), ((1884, (6, 9)), '*CHI:\thm: .\n'), ((1887, (11, 16)), "*MOT:\tI'll bring you some broccoli .\n"), ((1887, (26, 34)), "*MOT:\tI'll bring you some broccoli .\n"), ((1890, (9, 13)), "*MOT:\t+^ it's good !\n"), ((1890, (14, 18)), "*MOT:\t+^ it's good !\n"), ((1893, (9, 13)), "*MOT:\t+^ it's like eating a little tree !\n"), ((1893, (35, 39)), "*MOT:\t+^ it's like eating a little tree !\n"), ((1897, (-1, 4)), "*CHI:\tI'll try it !\n"), ((1900, (-1, 4)), '*MOT:\tyou will ?\n'), ((1904, (-1, 4)), '*MOT:\tChi wants to try a little (.) tree of broccoli .\n'), ((1904, (36, 40)), '*MOT:\tChi wants to try a little (.) tree of broccoli .\n'), ((1904, (44, 52)), '*MOT:\tChi wants to try a little (.) tree of broccoli .\n'), ((1909, (-1, 4)), '*FAT:\toh he does huh ?\n'), ((1913, (6, 10)), '*MOT:\tyeah !\n'), ((1916, (16, 21)), "*FAT:\tgood I'll bring <him some to eat> [>] .\n"), ((1921, (-1, 4)), '*CHI:\t<is it good> [<][>] ?\n'), ((1925, (-1, 4)), '*MOT:\t<(be)cause at> [<] school they told me that you always [!] try new food .\n'), ((1925, (17, 20)), '*MOT:\t<(be)cause at> [<] school they told me that you always [!] try new food .\n'), ((1925, (25, 31)), '*MOT:\t<(be)cause at> [<] school they told me that you always [!] try new food .\n'), ((1925, (73, 77)), '*MOT:\t<(be)cause at> [<] school they told me that you always [!] try new food .\n'), ((1930, (-1, 4)), "*MOT:\tbut you willn't do that here !\n"), ((1933, (6, 9)), '*CHI:\txxx but +/.\n'), ((1936, (-1, 4)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (49, 52)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (62, 69)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1936, (74, 78)), '*MOT:\tyou always tell me that you eat your salad [!] and your carrots and peas .\n'), ((1942, (6, 9)), '*CHI:\txxx .\n'), ((1943, (-1, 4)), "*CHI:\tbut if I don't [!] like it I'll spit it out on my plate okay ?\n"), ((1943, (21, 24)), "*CHI:\tbut if I don't [!] like it I'll spit it out on my plate okay ?\n"), ((1943, (56, 61)), "*CHI:\tbut if I don't [!] like it I'll spit it out on my plate okay ?\n"), ((1943, (62, 66)), "*CHI:\tbut if I don't [!] like it I'll spit it out on my plate okay ?\n"), ((1955, (-1, 4)), '*CHI:\they Father_name !\n'), ((1955, (6, 9)), '*CHI:\they Father_name !\n'), ((1958, (6, 9)), '*FAT:\tyes ?\n'), ((1962, (-1, 4)), "*CHI:\t&i if I don't like it right ?\n"), ((1962, (6, 8)), "*CHI:\t&i if I don't like it right ?\n"), ((1966, (11, 15)), "*CHI:\tI'll spit it out on my plate .\n"), ((1966, (29, 34)), "*CHI:\tI'll spit it out on my plate .\n"), ((1971, (6, 10)), '*FAT:\tokay .\n'), ((1974, (-1, 4)), '*CHI:\tknow what ?\n'), ((1978, (37, 42)), "*CHI:\t+^ I'm gonna bite it this many times .\n"), ((1983, (20, 23)), '*CHI:\tone two three (.) right ?\n'), ((1987, (37, 40)), '*CHI:\tfour five six seven eight nine ten .\n'), ((1995, (6, 9)), '*FAT:\twow [>] !\n'), ((1995, (10, 13)), '*FAT:\twow [>] !\n'), ((1998, (17, 23)), '*CHI:\televen [<] twelve .\n'), ((2001, (6, 9)), '*CHI:\txxx .\n'), ((2003, (-1, 4)), '*MOT:\they Chi come on in here !\n'), ((2003, (6, 9)), '*MOT:\they Chi come on in here !\n'), ((2006, (26, 31)), "*FAT:\tgo on in there I'll bring you a piece of it [= broccoli] .\n"), ((2006, (38, 43)), "*FAT:\tgo on in there I'll bring you a piece of it [= broccoli] .\n"), ((2006, (53, 62)), "*FAT:\tgo on in there I'll bring you a piece of it [= broccoli] .\n"), ((2011, (-1, 4)), '*FAT:\there come on .\n'), ((2017, (6, 9)), '*MOT:\twow !\n'), ((2023, (6, 11)), '*CHI:\twatch [<] !\n'), ((2023, (12, 15)), '*CHI:\twatch [<] !\n'), ((2026, (-1, 4)), '*CHI:\twatch out !\n'), ((2026, (6, 11)), '*CHI:\twatch out !\n'), ((2032, (6, 10)), '*MOT:\tcome and <try one> [>] of these little trees .\n'), ((2032, (15, 19)), '*MOT:\tcome and <try one> [>] of these little trees .\n'), ((2032, (25, 28)), '*MOT:\tcome and <try one> [>] of these little trees .\n'), ((2032, (45, 50)), '*MOT:\tcome and <try one> [>] of these little trees .\n'), ((2037, (6, 11)), '*CHI:\twatch [<] !\n'), ((2037, (12, 15)), '*CHI:\twatch [<] !\n'), ((2040, (-1, 4)), "*FAT:\there's a little <piece of> [>] tree for you .\n"), ((2040, (29, 32)), "*FAT:\there's a little <piece of> [>] tree for you .\n"), ((2040, (37, 41)), "*FAT:\there's a little <piece of> [>] tree for you .\n"), ((2045, (6, 12)), '*CHI:\t<watch [=? what]> [<] .\n'), ((2045, (17, 23)), '*CHI:\t<watch [=? what]> [<] .\n'), ((2045, (24, 27)), '*CHI:\t<watch [=? what]> [<] .\n'), ((2048, (8, 13)), '*FAT:\ta piece of broccoli .\n'), ((2048, (17, 25)), '*FAT:\ta piece of broccoli .\n'), ((2051, (-1, 4)), '*CHI:\tcould you put it on my plate ?\n'), ((2051, (29, 34)), '*CHI:\tcould you put it on my plate ?\n'), ((2057, (6, 10)), '*FAT:\tokay .\n'), ((2060, (9, 14)), '*CHI:\t&w watch how [/] how high I can throw it .\n'), ((2064, (6, 9)), '*MOT:\twow !\n'), ((2067, (-1, 4)), '*MOT:\tdid you see how high he threw that [>] ?\n'), ((2067, (41, 44)), '*MOT:\tdid you see how high he threw that [>] ?\n'), ((2072, (6, 8)), '*FAT:\tmm [<] .\n'), ((2072, (9, 12)), '*FAT:\tmm [<] .\n'), ((2075, (-1, 4)), '*FAT:\tokay here try this .\n'), ((2075, (6, 10)), '*FAT:\tokay here try this .\n'), ((2078, (12, 16)), "*FAT:\t&i &i it's higher !\n"), ((2081, (6, 10)), '*MOT:\tokay .\n'), ((2084, (10, 15)), "*MOT:\twhy don't you sit down and try that broccoli now ?\n"), ((2084, (42, 50)), "*MOT:\twhy don't you sit down and try that broccoli now ?\n"), ((2090, (6, 9)), '*CHI:\txxx .\n'), ((2094, (-1, 4)), "*MOT:\the's not exactly sitting down .\n"), ((2098, (24, 29)), "*CHI:\t&F &F Father_name don't give me your big pieces .\n"), ((2098, (47, 53)), "*CHI:\t&F &F Father_name don't give me your big pieces .\n"), ((2106, (9, 15)), "*FAT:\t+^ that's [/] that's for me .\n"), ((2112, (-1, 4)), "*FAT:\t<we'll do it> [//] we'll eat it together .\n"), ((2112, (7, 12)), "*FAT:\t<we'll do it> [//] we'll eat it together .\n"), ((2112, (31, 34)), "*FAT:\t<we'll do it> [//] we'll eat it together .\n"), ((2119, (-1, 4)), '*FAT:\tgo !\n'), ((2123, (6, 9)), '*CHI:\tugh !\n'), ((2126, (-1, 4)), "*MOT:\tChi you didn't even (.) get your mouth [!] around it .\n"), ((2126, (39, 44)), "*MOT:\tChi you didn't even (.) get your mouth [!] around it .\n"), ((2132, (-1, 4)), '*MOT:\t<how do you know> [>] ?\n'), ((2132, (6, 10)), '*MOT:\t<how do you know> [>] ?\n'), ((2136, (-1, 4)), '*FAT:\t<well what happened> [<] ?\n'), ((2136, (27, 30)), '*FAT:\t<well what happened> [<] ?\n'), ((2140, (-1, 4)), "*MOT:\t+^ it didn't even touch your tongue !\n"), ((2140, (35, 41)), "*MOT:\t+^ it didn't even touch your tongue !\n"), ((2156, (-1, 4)), "*CHI:\tI just didn't like (.) the top !\n"), ((2156, (33, 36)), "*CHI:\tI just didn't like (.) the top !\n"), ((2159, (-1, 4)), "*MOT:\tyou didn't like the top ?\n"), ((2159, (26, 29)), "*MOT:\tyou didn't like the top ?\n"), ((2163, (30, 33)), "*FAT:\twhy you didn't like the way it feels or +...\n"), ((2168, (-1, 4)), "*CHI:\tI didn't like the way it feels .\n"), ((2168, (24, 27)), "*CHI:\tI didn't like the way it feels .\n"), ((2173, (21, 26)), '*FAT:\twhat about the taste ?\n'), ((2177, (-1, 4)), '*FAT:\tdid you like the taste ?\n'), ((2177, (23, 28)), '*FAT:\tdid you like the taste ?\n'), ((2182, (-1, 4)), "*FAT:\tI don't <think you even> [>] +/.\n"), ((2185, (-1, 4)), '*MOT:\t<like the color> [<] ?\n'), ((2185, (16, 22)), '*MOT:\t<like the color> [<] ?\n'), ((2185, (23, 26)), '*MOT:\t<like the color> [<] ?\n'), ((2192, (9, 12)), '*CHI:\tno [<] !\n'), ((2196, (-1, 4)), '*CHI:\tfeel my muscles !\n'), ((2196, (14, 21)), '*CHI:\tfeel my muscles !\n'), ((2199, (9, 12)), '*MOT:\toh boy they feel kinda puny today !\n'), ((2199, (23, 28)), '*MOT:\toh boy they feel kinda puny today !\n'), ((2199, (34, 39)), '*MOT:\toh boy they feel kinda puny today !\n'), ((2202, (-1, 4)), '*CHI:\tare they big ?\n'), ((2206, (-1, 4)), '*MOT:\tI think they shrank a tiny bit .\n'), ((2206, (33, 36)), '*MOT:\tI think they shrank a tiny bit .\n'), ((2210, (-1, 4)), "*MOT:\tI think they got a little smaller [!] because you haven't been eating very well lately .\n"), ((2210, (40, 43)), "*MOT:\tI think they got a little smaller [!] because you haven't been eating very well lately .\n"), ((2218, (6, 9)), '*CHI:\twww .\n'), ((2220, (6, 11)), "*FAT:\twatch now <why don't you> [//] let's try it again .\n"), ((2220, (21, 26)), "*FAT:\twatch now <why don't you> [//] let's try it again .\n"), ((2220, (27, 31)), "*FAT:\twatch now <why don't you> [//] let's try it again .\n"), ((2223, (-1, 4)), '*FAT:\t<put that one> [/] put that one back in your mouth .\n'), ((2223, (51, 56)), '*FAT:\t<put that one> [/] put that one back in your mouth .\n'), ((2227, (22, 25)), '*FAT:\tgive it another try .\n'), ((2230, (9, 12)), '*CHI:\tno way !\n'), ((2233, (-1, 4)), "*FAT:\tyou didn't even let it try !\n"), ((2237, (6, 9)), '*CHI:\twww .\n'), ((2239, (-1, 4)), "*MOT:\tyou didn't even bite it !\n"), ((2242, (-1, 4)), '*FAT:\tgot [?] it ?\n'), ((2249, (6, 11)), '*FAT:\twatch [<] .\n'), ((2249, (12, 15)), '*FAT:\twatch [<] .\n'), ((2252, (-1, 4)), '*MOT:\tnot at the dinner table .\n'), ((2252, (17, 23)), '*MOT:\tnot at the dinner table .\n'), ((2252, (24, 29)), '*MOT:\tnot at the dinner table .\n'), ((2255, (27, 30)), '*MOT:\teven Daddy eats that [>] !\n'), ((2258, (6, 8)), '*FAT:\tmm [<] .\n'), ((2258, (9, 12)), '*FAT:\tmm [<] .\n'), ((2261, (6, 9)), '*CHI:\twww &=yelps .\n'), ((2263, (16, 19)), '*FAT:\tgive it a try .\n'), ((2266, (9, 12)), '*CHI:\tno way .\n'), ((2270, (-1, 4)), '*MOT:\tit has got candy inside .\n'), ((2273, (-1, 4)), "*MOT:\tI didn't want to have_to tell you that but +...\n"), ((2278, (-1, 4)), '*CHI:\tcandy inside ?\n'), ((2278, (6, 11)), '*CHI:\tcandy inside ?\n'), ((2282, (6, 10)), '*MOT:\tyeah .\n'), ((2285, (6, 10)), '*FAT:\tyeah chewy Tootsie Roll .\n'), ((2285, (11, 16)), '*FAT:\tyeah chewy Tootsie Roll .\n'), ((2288, (-1, 4)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2288, (61, 70)), "*MOT:\tyou know those lollipops that you eat and then there's chocolate inside ?\n"), ((2295, (6, 10)), '*CHI:\tyeah [?] .\n'), ((2295, (11, 14)), '*CHI:\tyeah [?] .\n'), ((2298, (6, 12)), "*MOT:\tthat's sorta [: sort of] what it's like .\n"), ((2298, (13, 18)), "*MOT:\tthat's sorta [: sort of] what it's like .\n"), ((2298, (36, 40)), "*MOT:\tthat's sorta [: sort of] what it's like .\n"), ((2304, (-1, 4)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2304, (10, 19)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2304, (20, 26)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2304, (44, 47)), '*CHI:\tbut chocolate <gives me a tummy+ache> [>] .\n'), ((2309, (6, 9)), '*CHI:\t<it makes me xxx> [>] .\n'), ((2309, (24, 27)), '*CHI:\t<it makes me xxx> [>] .\n'), ((2312, (12, 16)), "*MOT:\t<he's not> [<] <buying that line [=? one]> [>] .\n"), ((2312, (17, 20)), "*MOT:\t<he's not> [<] <buying that line [=? one]> [>] .\n"), ((2312, (34, 38)), "*MOT:\t<he's not> [<] <buying that line [=? one]> [>] .\n"), ((2312, (43, 48)), "*MOT:\t<he's not> [<] <buying that line [=? one]> [>] .\n"), ((2312, (49, 52)), "*MOT:\t<he's not> [<] <buying that line [=? one]> [>] .\n"), ((2315, (-1, 4)), '*FAT:\t<what did he say> [<] ?\n'), ((2319, (6, 15)), '*FAT:\tchocolate gives him a tummy+ache ?\n'), ((2323, (6, 10)), '*MOT:\tyeah &=laughs .\n'), ((2326, (-1, 4)), "*CHI:\tI don't like chocolate xxx [>] .\n"), ((2326, (19, 28)), "*CHI:\tI don't like chocolate xxx [>] .\n"), ((2330, (-1, 4)), '*FAT:\tclever [<] .\n'), ((2330, (6, 12)), '*FAT:\tclever [<] .\n'), ((2330, (13, 16)), '*FAT:\tclever [<] .\n'), ((2336, (-1, 4)), "*FAT:\tyou don't like it <now xxx> [>] .\n"), ((2339, (-1, 4)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2339, (11, 16)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2339, (17, 22)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2339, (27, 36)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2339, (37, 45)), "*MOT:\t<you don't like> [<] chocolate broccoli ?\n"), ((2344, (9, 12)), '*CHI:\tno [<] .\n'), ((2347, (-1, 4)), '*CHI:\tI like chocolate cake .\n'), ((2347, (13, 27)), '*CHI:\tI like chocolate cake .\n'), ((2350, (-1, 4)), '*MOT:\tyou only want chocolate cake ?\n'), ((2350, (20, 34)), '*MOT:\tyou only want chocolate cake ?\n'), ((2354, (22, 36)), '*MOT:\twell it has got chocolate cake sprinkled inside it .\n'), ((2359, (-1, 4)), "*CHI:\tI don't like chocolate [?] .\n"), ((2359, (19, 28)), "*CHI:\tI don't like chocolate [?] .\n"), ((2359, (29, 32)), "*CHI:\tI don't like chocolate [?] .\n"), ((2362, (32, 35)), "*MOT:\twell (.) you're not gonna eat it then ?\n"), ((2368, (6, 9)), '*CHI:\txxx .\n'), ((2369, (-1, 4)), "*MOT:\tsomeday when you get a little older I think you'll like all kinds of stuff .\n"), ((2369, (50, 56)), "*MOT:\tsomeday when you get a little older I think you'll like all kinds of stuff .\n"), ((2369, (66, 71)), "*MOT:\tsomeday when you get a little older I think you'll like all kinds of stuff .\n"), ((2369, (75, 80)), "*MOT:\tsomeday when you get a little older I think you'll like all kinds of stuff .\n"), ((2376, (-1, 4)), "*CHI:\tyou don't feel muscle inside +/.\n"), ((2376, (21, 27)), "*CHI:\tyou don't feel muscle inside +/.\n"), ((2379, (-1, 4)), '*MOT:\tI think it held this one .\n'), ((2383, (15, 18)), '*MOT:\tlook how xxx .\n'), ((2388, (9, 16)), '*CHI:\tmy muscles strong right ?\n'), ((2392, (6, 10)), '*MOT:\tyeah .\n'), ((2395, (-1, 4)), '*MOT:\tyou know what ?\n'), ((2399, (9, 11)), '*MOT:\t+^ ow !\n'), ((2402, (-1, 4)), '*CHI:\tare all my muscles strong ?\n'), ((2402, (17, 24)), '*CHI:\tare all my muscles strong ?\n'), ((2406, (6, 9)), '*MOT:\tyes .\n'), ((2411, (11, 18)), '*MOT:\tyour muscles are very strong .\n'), ((2414, (-1, 4)), "*CHI:\tdon't [!] tell me they'll get little .\n"), ((2414, (6, 11)), "*CHI:\tdon't [!] tell me they'll get little .\n"), ((2424, (6, 12)), "*MOT:\tyou're gonna get all skinny if you don't eat .\n"), ((2424, (13, 18)), "*MOT:\tyou're gonna get all skinny if you don't eat .\n"), ((2429, (-1, 4)), '*MOT:\tand your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .\n'), ((2429, (15, 22)), '*MOT:\tand your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .\n'), ((2429, (36, 39)), '*MOT:\tand your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .\n'), ((2429, (96, 99)), '*MOT:\tand your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .\n'), ((2429, (120, 124)), '*MOT:\tand your muscles (.) the only way they can develop and get bigger is for you to (.) <give it> [//] give them some food .\n'), ((2436, (6, 9)), '*CHI:\twww .\n'), ((2438, (6, 9)), '*FAT:\t&aw .\n'), ((2439, (6, 13)), '*FAT:\tjeepers !\n'), ((2445, (-1, 4)), '*MOT:\tyou mean I have_to eat !\n'), ((2445, (25, 28)), '*MOT:\tyou mean I have_to eat !\n'), ((2452, (-1, 4)), "*MOT:\tthen you're gonna start shrinking (.) and your teeth will fall out .\n"), ((2452, (24, 29)), "*MOT:\tthen you're gonna start shrinking (.) and your teeth will fall out .\n"), ((2452, (40, 43)), "*MOT:\tthen you're gonna start shrinking (.) and your teeth will fall out .\n"), ((2452, (53, 58)), "*MOT:\tthen you're gonna start shrinking (.) and your teeth will fall out .\n"), ((2458, (6, 8)), '*MOT:\t+^ and (.) your fingernails will fall out &=laughs .\n'), ((2466, (-1, 4)), "*MOT:\tthat's if you don't eat for a long long time .\n"), ((2466, (6, 12)), "*MOT:\tthat's if you don't eat for a long long time .\n"), ((2466, (46, 50)), "*MOT:\tthat's if you don't eat for a long long time .\n"), ((2473, (6, 9)), '*FAT:\txxx .\n'), ((2478, (-1, 4)), '*FAT:\tso [<] +/.\n'), ((2481, (6, 10)), '*CHI:\tyeah .\n'), ((2484, (-1, 4)), '*MOT:\tare you done ?\n'), ((2487, (6, 10)), '*FAT:\tyeah .\n'), ((2490, (-1, 4)), "*MOT:\tI'm done .\n"), ((2493, (6, 11)), "*MOT:\tlet's <clean up now www &=laughs > [>] .\n"), ((2497, (19, 22)), '*CHI:\t<xxx have_to get muscles [?]> [<] .\n'), ((2497, (23, 30)), '*CHI:\t<xxx have_to get muscles [?]> [<] .\n'), ((2497, (36, 39)), '*CHI:\t<xxx have_to get muscles [?]> [<] .\n'), ((2505, (9, 16)), '*CHI:\tmy muscles will get bigger [>] .\n'), ((2505, (33, 36)), '*CHI:\tmy muscles will get bigger [>] .\n'), ((2508, (9, 12)), '*MOT:\tno [<] .\n'), ((2511, (-1, 4)), "*MOT:\t+^ they willn't .\n"), ((2517, (-1, 4)), "*MOT:\tI [//] (be)cause I know that you're gonna start <eating again pretty soon> [>] .\n"), ((2517, (48, 53)), "*MOT:\tI [//] (be)cause I know that you're gonna start <eating again pretty soon> [>] .\n"), ((2517, (81, 84)), "*MOT:\tI [//] (be)cause I know that you're gonna start <eating again pretty soon> [>] .\n"), ((2523, (32, 35)), '*FAT:\t<I think you feel better> [<] .\n'), ((2526, (6, 10)), '*FAT:\tyeah .\n'), ((2529, (-1, 4)), '*MOT:\tare you done with this ?\n'), ((2533, (-1, 4)), "*FAT:\tyou don't want <another bite> [>] ?\n"), ((2533, (30, 35)), "*FAT:\tyou don't want <another bite> [>] ?\n"), ((2533, (36, 39)), "*FAT:\tyou don't want <another bite> [>] ?\n"), ((2537, (-1, 4)), '*MOT:\t<do you want any more> [<] ?\n'), ((2537, (23, 28)), '*MOT:\t<do you want any more> [<] ?\n'), ((2537, (29, 32)), '*MOT:\t<do you want any more> [<] ?\n'), ((2541, (-1, 4)), "*FAT:\tyou don't want any more of that delicious broccoli huh ?\n"), ((2541, (48, 56)), "*FAT:\tyou don't want any more of that delicious broccoli huh ?\n"), ((2541, (57, 60)), "*FAT:\tyou don't want any more of that delicious broccoli huh ?\n"), ((2547, (9, 12)), '*CHI:\tno way .\n'), ((2550, (-1, 4)), '*MOT:\toh well .\n'), ((2553, (6, 10)), '*FAT:\tokay [>] .\n'), ((2553, (11, 14)), '*FAT:\tokay [>] .\n'), ((2556, (-1, 4)), "*MOT:\tyou [<] don't any more cantaloupe ?\n"), ((2556, (29, 39)), "*MOT:\tyou [<] don't any more cantaloupe ?\n"), ((2560, (6, 9)), '*CHI:\thm: .\n'), ((2563, (6, 10)), '*MOT:\tokay .\n'), ((2566, (6, 12)), '*FAT:\tthanks Mommy that was a great supper !\n'), ((2566, (36, 42)), '*FAT:\tthanks Mommy that was a great supper !\n'), ((2573, (6, 9)), '*CHI:\txxx .\n'), ((2574, (-1, 4)), '*FAT:\tyou wanna <write a> [/] write a letter to Mary now ?\n'), ((2574, (23, 25)), '*FAT:\tyou wanna <write a> [/] write a letter to Mary now ?\n'), ((2574, (38, 44)), '*FAT:\tyou wanna <write a> [/] write a letter to Mary now ?\n'), ((2583, (6, 10)), '*FAT:\tokay .\n'), ((2586, (6, 9)), '*CHI:\txxx .\n'), ((2587, (14, 21)), '*FAT:\t<wait a minute> [/] wait a minute .\n'), ((2590, (19, 22)), '*FAT:\t<we have_to> [/] we have_to wait for xxx .\n'), ((2590, (34, 38)), '*FAT:\t<we have_to> [/] we have_to wait for xxx .\n'), ((2590, (43, 46)), '*FAT:\t<we have_to> [/] we have_to wait for xxx .\n')]
calculating accuracy and recall
correct labels:
set(['cantaloupe', 'sandwich', 'lemon', 'salad', 'tootsie roll', 'carrots', 'egg salad', 'candy', 'peas', 'water', 'juice', 'lollipop', 'chocolate broccoli', 'ice cube', 'chocolate cake', 'chicken', 'chocolate', 'broccoli'])
predicted labels:
set(['', 'ugh', "don't", 'money', 'top', 'cheap', 'anyway', '[!]', 'month', '&-um', '&-uh', 'thanks', 'mother', 'skin', 'yep', 'yes', 'children', 'bunch', 'sharks', 'spoons', 'slow', 'thank', "he's", 'bought]', 'it]', 'tape', 'o(f)', 'smile', 'weeks', 'did>', 'plate', 'someone', 'get', 'food', 'more>', 'watch', 'school', 'gonna', '&aw', 'it>', 'lunch', 'game', '[>]', 'fan', 'rest', 'plates', 'chocolate cake', 'cape', 'bit', 'son', 'day', 'minute', 'look', "we'll", 'mhm', 'name', '<well', 'cool', '<try', 'gun', 'candy', '<we', 'try', "wasn't", 'good', 'stuff', 'man', 'all>', 'guy', 'dip', 'we>', "isn't", 'twelve', 'www', 'right', 'ten', 'house', 'fish', 'hard', 'yeah', 'see', 'sure', 'kinda', '&i', 'robot', '+^', 'out', '<it', 'is>', 'a>', 'tummy', '(.)', 'wow', 'please', 'bang@o', 'dehydrated', 'chewy', 'could>', 'at>', 'game>', 'lemon [<]', 'meal', 'cantaloupe', '<at', 'tree', 'pieces', 'water', '<and', 'hurts', 'few weeks', 'news', 'come', 'care', 'think>', 'piece', 'bring', 'teeth', 'oh', 'yup', 'months', '+,', 'thing', 'chicken', 'games', 'ow', 'tongue', 'wanna', 'nice juicy', 'you>', "day's", 'ours', 'hm:', 'shake', 'do]', 'have>', 'egg salad', 'set', 'kinds', 'toys', 'too>', 'table', 'cups', 'cover>', "you're", 'toy', 'gosh>', 'bite>', "it's", 'what]', 'hey', 'fast', 'bothers', 'start', 'uhoh', 'music', 'lot', '<www', 'letter', 'love>', '&=hums', 'tell', 'today', 'sort', 'muscles', 'yuck', 'way', 'spit', 'boy', 'xxx', 'huh', 'idea', 'orange food', 'tray>', 'on>', 'mail', 'like>', 'line', 'hurry', 'eat', 'glad', 'women', 'count', "they're", 'kind', '<watch', 'squish', 'mm', 'hot>', 'work', 'red light', 'whoa', 'matter', 'and>', 'store', 'voice', 'bites', 'broccoli]', 'pony', 'taste', 'ah', 'ruff@o', 'carrots', 'hungry', 'one]>', 'juice', 'buy', '[?]', 'stomach', 'breakfast', 'times', "tummy's", 'funny', 'some>', '[/]', 'anybody', 'dishes', 'clever', 'jeepers', 'dinner', 'couch', 'your>', 'beat', 'do>', 'what]>', 'ice cube', 'party', 'of>', 'green food', 'minute>', '<how', 'fever', 'okay', 'mess', 'nice>', 'drink', 'peas', 'hand', "let's", 'mouth', 'trees', '<cups', 'supper', '[<]', 'chocolate', 'broccoli', 'squeal', 'yeah>', '<gives', 'feels', 'muscle', 'gob@o', "mother's", 'loud', 'not>', 'dog', 'color>', 'thought', 'sorta', "you'll", 'wait', 'time', "that's", 'egg', 'talk', 'talk>'])
file:HSLLD/HV1/MT//davmt1.cha
precision: 0.0452830188679
recall: 0.666666666667
true positives:['broccoli', 'candy', 'cantaloupe', 'carrots', 'chicken', 'chocolate', 'chocolate cake', 'egg salad', 'ice cube', 'juice', 'peas', 'water']
false positives: ['', '&-uh', '&-um', '&=hums', '&aw', '&i', '(.)', '+,', '+^', '<and', '<at', '<cups', '<gives', '<how', '<it', '<try', '<watch', '<we', '<well', '<www', '[!]', '[/]', '[<]', '[>]', '[?]', 'a>', 'ah', 'all>', 'and>', 'anybody', 'anyway', 'at>', 'bang@o', 'beat', 'bit', 'bite>', 'bites', 'bothers', 'bought]', 'boy', 'breakfast', 'bring', 'broccoli]', 'bunch', 'buy', 'cape', 'care', 'cheap', 'chewy', 'children', 'clever', 'color>', 'come', 'cool', 'couch', 'could>', 'count', 'cover>', 'cups', 'day', "day's", 'dehydrated', 'did>', 'dinner', 'dip', 'dishes', 'do>', 'do]', 'dog', "don't", 'drink', 'eat', 'egg', 'fan', 'fast', 'feels', 'fever', 'few weeks', 'fish', 'food', 'funny', 'game', 'game>', 'games', 'get', 'glad', 'gob@o', 'gonna', 'good', 'gosh>', 'green food', 'gun', 'guy', 'hand', 'hard', 'have>', "he's", 'hey', 'hm:', 'hot>', 'house', 'huh', 'hungry', 'hurry', 'hurts', 'idea', 'is>', "isn't", "it's", 'it>', 'it]', 'jeepers', 'kind', 'kinda', 'kinds', 'lemon [<]', "let's", 'letter', 'like>', 'line', 'look', 'lot', 'loud', 'love>', 'lunch', 'mail', 'man', 'matter', 'meal', 'mess', 'mhm', 'minute', 'minute>', 'mm', 'money', 'month', 'months', 'more>', 'mother', "mother's", 'mouth', 'muscle', 'muscles', 'music', 'name', 'news', 'nice juicy', 'nice>', 'not>', 'o(f)', 'of>', 'oh', 'okay', 'on>', 'one]>', 'orange food', 'ours', 'out', 'ow', 'party', 'piece', 'pieces', 'plate', 'plates', 'please', 'pony', 'red light', 'rest', 'right', 'robot', 'ruff@o', 'school', 'see', 'set', 'shake', 'sharks', 'skin', 'slow', 'smile', 'some>', 'someone', 'son', 'sort', 'sorta', 'spit', 'spoons', 'squeal', 'squish', 'start', 'stomach', 'store', 'stuff', 'supper', 'sure', 'table', 'talk', 'talk>', 'tape', 'taste', 'teeth', 'tell', 'ten', 'thank', 'thanks', "that's", "they're", 'thing', 'think>', 'thought', 'time', 'times', 'today', 'tongue', 'too>', 'top', 'toy', 'toys', 'tray>', 'tree', 'trees', 'try', 'tummy', "tummy's", 'twelve', 'ugh', 'uhoh', 'voice', 'wait', 'wanna', "wasn't", 'watch', 'way', "we'll", 'we>', 'weeks', 'what]', 'what]>', 'whoa', 'women', 'work', 'wow', 'www', 'xxx', 'yeah', 'yeah>', 'yep', 'yes', "you'll", "you're", 'you>', 'your>', 'yuck', 'yup']
false negatives: ['chocolate broccoli', 'lemon', 'lollipop', 'salad', 'sandwich', 'tootsie roll']
# true pos: 12
# false pos: 253
# false neg: 6
HSLLD/HV1/MT//raumt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: oh don't touch it .", '*BRO: mom xxx .', '*MOT: now what kind of cereal do you want ?', '*BRO: I want this xxx .', '*BRO: xxx .', '*CHI: 0 [=! makes weird shout] .', '*CHI: I wanna do this +...', '*CHI: I wanna do both .', '*CHI: I got a bugle xxx +/.', '*MOT: Chi Chi .', '*BRO: xxx .', '*CHI: I got a bugle I got a bugle I got a bugle nyanyanyanya@b I got a bugle .', '*CHI: you wanna see ?', '*CHI: this is my bugle it goes right +...', '*CHI: this is Jason momma ?', '*CHI: this is Jason .', "*MOT: no it's not Jason .", "*CHI: who's this ?", "*MOT: it's the cereal peanut just come from cereal sweetheart .", "*CHI: xxx and what's his name momma ?", '*MOT: cereal has no name peanut it has a color to it .', '*CHI: xxx .', "*MOT: it's brown .", '*CHI: xxx .', "*CHI: (.) I ain't got no milk .", '*MOT: I put milk in there .', '*CHI: xxx got no milk in here .', '*CHI: 0 [=! makes weird noises] .', '*BRO: xxx this .', '*MOT: uhhuh .', '*BRO: &-uh uhoh !', '*CHI: hey what xxx momma .', '*CHI: hey momma ?', '*MOT: hm: ?', '*CHI: this is like that .', '*CHI: (.) Mot there is his eyes +/.', "*MOT: there's no eyes on the cereal peanut .", '*BRO: xxx .', "*CHI: there's somebody xxx the cereal look !", '*BRO: xxx .', "*CHI: look_it Mot it's on the cereal .", '*MOT: lemme [: let me] see .', '*MOT: hold it up .', '*CHI: Jason .', '*MOT: no .', "*MOT: stop it see you're not gonna watch no more of them movies (be)cause you're thinking everything now is Jason .", "*CHI: that's not Jason .", '*BRO: xxx .', "*CHI: that's not Jason .", '*CHI: you know that I watch Freddy Krueger .', "*MOT: I'm not going to let you watch Freddy Krueger no more .", '*CHI: Freddy Krueger break out that tv he gonna bite you xxx .', '*CHI: gonna bite you that xxx cut it off .', '*BRO: xxx .', '*CHI: xxx .', '*BRO: 0 [=! cries out] .', "*CHI: that's it you busted that food and xxx anything gonna bust it off .", "*CHI: you xxx [=! makes gagging sound] and you'll be dying .", '*CHI: 0 [=! fakes choking sounds] .', '*BRO: mommy xxx .', "*CHI: I'm gonna lock you in that Freddy Krueger house .", '*BRO: xxx .', '*CHI: xxx .', '*BRO: xxx .', "*CHI: xxx you know who's gonna come with Freddy Krueger ?", '*CHI: know is gonna come with Freddy Krueger ?', '*MOT: who ?', '*CHI: xxx gonna come with Freddy Krueger .', '*CHI: the man !', '*CHI: he asking me to go in the car with Freddy Krueger .', '*CHI: should get all the peoples .', "*CHI: Stephanie's going to fit Freddy Krueger .", "*CHI: and everyone's xxx going with Freddy Krueger we're gonna [: going to] scratch him [=! loudly simulates scratching noise] .", '*BRO: &=laughs .', '*CHI: xxx ?', '*BRO: yeah .', '*CHI: right mama ?', '*BRO: xxx .', '*CHI: xxx .', '*BRO: yeah .', '*CHI: xxx Freddy ?', '*BRO: yeah .', '*CHI: say xxx .', '*BRO: xxx .', '*CHI: say xxx say just a minute .', '*BRO: xxx .', "*CHI: I know he gonna come and bite us all (.) and I'm gonna [: going to] kick him right in the face .", '*BRO: xxx .', '*MOT: &=laughs .', '*CHI: xxx .', '*BRO: &=laughs .', '*CHI: I xxx out .', '*CHI: 0 [=! makes pow sounds] .', '*BRO: mom ?', '*CHI: xxx .', '*MOT: (..) see he is drinking all his milk out of his cereal .', '*CHI: me ?', '*MOT: no Chi .', '*CHI: oh .', '*MOT: right here .', '*MOT: now you stop drinking all your milk out of the cereal .', '*MOT: peanut you have_to help me (be)cause <you going> [//] you have_to go to school .', '*CHI: unhunh .', "*CHI: don't wanna go to school .", '*BRO: &=cries .', "*MOT: (.) don't talk with your mouth full .", '*CHI: xxx .', "*MOT: I'll be back .", '*CHI: okay .', '*BRO: okay .', '*BRO: bah .', '*CHI: 0 [=! makes gargling noise] .', '*CHI: 0 [=! makes repeated gargling noises] .', "*MOT: stop playing with your food you don't do that Chi knock it off !", '*CHI: 0 [=! makes gurgling sound] .', '*BRO: mom +/.', '*CHI: 0 [=! makes sound with food] .', '*MOT: stop playing with your food !', '*BRO: xxx .', '*CHI: ugga@o ugga@o ugga@b ugga@o ugga@o &=raspberry like that .', '*BRO: &=shrieks .', '*BRO: xxx .', '*CHI: mm .', '*BRO: xxx .', '*BRO: &=whines .', '*CHI: mommy &=yells !', '*CHI: mommy &=yells !', '*MOT: what is it ?', '*CHI: Bro throw his spoon on the floor .', '*CHI: Bro throw his spoon on the floor .', "*MOT: why didn't you just give him another spoon ?", '*CHI: he throw it at me xxx again .', '*MOT: here .', "*MOT: let's not throw it on the floor okay fellas ?", "*MOT: now let's not have a [/] a food fight in here .", '*BRO: oh .', '*CHI: 0 [=! makes loud retching sounds] .', '*CHI: I have more xxx than the [=! makes ack ack ack sound] .', '*MOT: xxx .', '*MOT: peanut how did your food get on the floor <like that> [>] ?', '*CHI: xxx [<] xxx .', '*MOT: come on .', "*MOT: I think it's time for you to go to sleep .", '*MOT: now get them off .', "*CHI: Bro did this don't do that .", '*CHI: 0 [=! makes crying sound] .', '*MOT: xxx .', '*CHI: you do that +/.', "*MOT: and you're talking complaining about him throwing his food on the floor ?", '*MOT: get in here .', '*MOT: come on .', '*MOT: move move move !', '*BRO: ah mommy .', '*MOT: pick up the bowl and the spoon .', '*CHI: 0 [=! makes loud noise] .', '*MOT: yes mommy see it mommy see it .', '*CHI: bam xxx bam !', '*MOT: put it in the sink honey come on .', '*CHI: xxx bam xxx bam .', "*CHI: and it's bam bam bam bam bam bam bam bam &=singing .", "*MOT: have a seat we'll keep your brother company .", '*CHI: okay .', '*CHI: bam bam .', '*MOT: want some juice ?', '*CHI: yeah .', '*BRO: yeah .', '*CHI: uhoh the cat did that ?', '*MOT: yeah the two legged cat did it .', '*MOT: the two legged cat .', '*CHI: two legged cat do that ?', '*BRO: xxx .', '*CHI: a two legged cat do that ?', '*MOT: two legs two legs .', "*MOT: which I'm talking about you [>] +/.", '*CHI: two [<] legs momma ?', '*BRO: xxx .', '*MOT: yeah two legs you know (.) you +/.', '*BRO: &=cries .', '*MOT: thank you baby .', '*CHI: two legs that broke it ?', '*CHI: that was scary that hurt my ears .', '*BRO: yeah .', '*CHI: that was scary .', '*BRO: xxx !', '*CHI: put it on me .', "*BRO: &=laughing don't put that xxx on you !", '*CHI: give me it .', "*BRO: (be)cause that's xxx .", '*CHI: xxx .', '*BRO: xxx .', '*CHI: zzz .', "*MOT: that's the third time we threw this spoon on the floor .", '*CHI: 0 [=! more noises] .', "*MOT: peanut that's not nice why you making all that noise ?", '*CHI: 0 [=! more noises] .', '*MOT: come on take these xxx out your mouth (be)cause you have_to go right back in there (.) and rinse that mouth out xxx do you suck your thumb in school peanut ?', '*CHI: xxx in school .', '*MOT: I said do you suck your thumb in school ?', "*CHI: xxx I'm gonna go and brush my teeth .", '*MOT: Chi come on !', '*MOT: why you throwing your food on the floor knucklehead ?', '*CHI: oh you say knucklehead !', '*BRO: xxx .', '*BRO: &=shouts .', '*CHI: xxx knucklehead baby [>] +/.', '*BRO: &=shouts [<] !', '*MOT: yeah you gonna show him off knucklehead you just hush it up .', "*CHI: you're a knucklehead .", "*MOT: who's a knucklehead ?", "*CHI: baby's a knucklehead .", '*MOT: why do you say he a knucklehead cause momma called him a knucklehead ?', '*CHI: yep .', '*BRO: xxx .', '*CHI: you knucklehead !', '*BRO: xxx .', '*CHI: knucklehead .', '*BRO: &=laughs .', '*CHI: knucklehead .', '*BRO: &=laughs .', '*CHI: knucklehead .', '*BRO: xxx .', '*CHI: knucklehead .', '*BRO: xxx .', '*CHI: knucklehead .', '*BRO: zzz !', '*CHI: knucklehead knucklehead knucklehead knucklehead knucklehead knucklehead &k [/] knucklehead knucklehead .', '*BRO: &=babbles .', "*MOT: come on come on let's change the subject .", '*CHI: pickle pickle head (.) pickle head .', '*BRO: xxx !', '*CHI: pickle head [>] .', '*MOT: xxx [<] .', "*MOT: thought you can't see .", '*CHI: pickle head (.) you pickle head baby .', '*CHI: baby is a pickle head baby is a pickle head baby is +...', "*MOT: he said you're a pickle head baby .", '*BRO: xxx .', '*CHI: baby is a pickle head baby is a pickle a pickle a pickle .', "*CHI: that's not mine .", "*CHI: that's baby's I wanna take that !", '*CHI: the whole thing !', '*MOT: just a minute peanut please .', '*CHI: okay .', '*CHI: (..) now give me the whole thing .', '*CHI: now .', '*MOT: just a minute .', "*MOT: I'll get your butter soft .", '*CHI: now .', '*MOT: just a little more xxx little bit more .', "*MOT: looks like nothing's coming out huh ?", '*BRO: mommy &=whining !', '*MOT: what is it ?', '*BRO: xxx &=crying .', '*MOT: xxx in the hour .', '*MOT: here .', '*MOT: 0 [=! singing while doing dishes] .', '*MOT: xxx .', '*BRO: xxx .', '*CHI: you not my friend baby .', '*BRO: yeah .', '*CHI: you not my friend .', '*CHI: I hit you .', '*MOT: you say you hate him ?', '*CHI: no .', '*MOT: then what .', '*MOT: what did you just say ?', "*CHI: I said xxx you tell me baby that's what I say .", '*BRO: &=vocalizes .', "*MOT: it's turning on I'm feeling .", '*BRO: &=vocalizes .', "*MOT: who's finished who's finished ?", "*CHI: I'm not .", '*BRO: xxx .', '*MOT: okay .', '*CHI: mommy ?', '*MOT: what is it ?', '*BRO: look_it .', '*BRO: xxx mommy !', '*BRO: xxx .', "*CHI: you can't have meat+loaf xxx .", '*BRO: xxx .', '*CHI: it is not coming out .', "*MOT: <why is it> [//] how come it's not coming out ?", '*CHI: (be)cause it +/.', '*MOT: (be)cause you keep hitting this on it now peanut go ahead .', '*BRO: mommy !', '*MOT: what is it pumpkin ?', '*BRO: (.) xxx .', '*CHI: (.) xxx oh xxx .', "*MOT: okay let's stop this here (be)cause it's time for me to take you to school .", '*CHI: xxx .', '*MOT: peanut come here !', '*CHI: xxx .', '*MOT: sit down .', '*MOT: sit down in the chair till I get him ready .', '*MOT: why you say I make you angry ?', "*CHI: because you won't let me ride the bike !", '*MOT: you wanna ride the bike to school ?', '*CHI: yeah .', '*MOT: and what did momma tell you about riding the bike to school ?', '*CHI: no .', '*MOT: you [>] +/.', '*CHI: xxx [<] I wanna ride it .', '*MOT: after school okay peanut ?', '*CHI: I wanna ride it to school .', '*MOT: the teacher does not want you to ride your bike to school peanut .', '*CHI: I want to ride to ride it to school .', '*CHI: one two three .', '*CHI: I want to ride it to school .', "*MOT: peanut you'll ride it after school okay ?", '*CHI: one two three !', '*BRO: xxx .', '*CHI: I wanna <ride it to> [/] ride it to school .', "*MOT: okay we'll talk about it after school .", "*CHI: no I don't wanna talk about it .", '*MOT: why you acting all stubborn now ?', '*CHI: I wanna ride on my bike .', '*CHI: xxx .', '*CHI: &=cries .', "*MOT: come on let's go fellas let's go .", '*CHI: I want to ride my bike to school &=whining .', "*MOT: you can't ride your bike to school you ride your bike after school !", '*CHI: one two three four now I wanna ride my bike to school .', '*MOT: no no no no no way .', '*CHI: one two three four I wanna ride my bike to school .', '*MOT: why you keep counting ?', '*CHI: because I want to get on the bike .', '*MOT: well what did mommy say ?', '*CHI: no I xxx wanna ride it you make me angry .', "*MOT: I make you angry (be)cause I won't let you ride the bike ?", '*BRO: bike !', '*MOT: hm: ?', "*MOT: I can't hear you .", '*CHI: no !', "*MOT: come on fellas let's go .", '*BRO: &=cries .', '*CHI: &=cries .', '*MOT: peanut you cannot ride that bike because your brother have_to go I cannot leave him in his house by himself he have_to go .', "*MOT: so I'm not gonna lug that bike downstairs take you downstairs and carry baby downstairs I'm not gonna do that .", '*MOT: so you can ride that bike after school .', '*CHI: 0 [=! starts crying] .', "*MOT: alright let's go .", '*CHI: 0 [=! continues crying] .', '*MOT: stop acting like a crybaby baby hears you .', '*CHI: <0 [=! still crying]> [>] .', "*MOT: <you're gonna let him see you cry> [<] .", '*CHI: <0 [=! still crying]> [>] .', '*MOT: <come on peanut be my big boy> [<] .', '*CHI: <0 [=! still crying]> [>] .', '*MOT: <are you my big boy> [<] ?', '*CHI: <&=crying > [>] .', '*MOT: <are you my big boy> [<] ?', '*CHI: <&=crying > [>] .', '*MOT: <wipe your tears out your eyes wipe the tears out> [<] .', '*CHI: &=crying .', '*MOT: see baby want a hug give your brother a hug .', '*CHI: I want a bike .', '*CHI: mommy I want you to give me a bike .', '*MOT: peanut how am I gonna carry that bike with you and your brother down the stairs ?', "*CHI: I'm gonna carry it .", '*MOT: carry what the bike ?', '*MOT: and then you go tumbling down ?', '*MOT: and then I have_to take you to the hospital if you get hurt ?', "*CHI: <I'm not going to get hurt> [>] .", '*BRO: xxx [<] .', '*CHI: &=crying .', "*MOT: come on let's go .", "*MOT: we'll continue this after you come home from school .", '*CHI: xxx no !', '*MOT: see they heard you .', '*CHI: <&=crying > [>] .', "*MOT: <everything we're saying they hear what you said peanut> [<] .", '*MOT: they even hear you crying .', '*CHI: <&=crying > [>] .', '*MOT: <now stop crying stop crying stop crying> [<] .', '*CHI: <&=crying > [>] .', '*MOT: <alright alright I let you ride the bike to school> [<] okay ?', '*MOT: now you stop crying .', '*MOT: get the bike get the bike .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//raumt1.cha
HSLLD/HV1/MT//catmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*SIS: Mom .', '*MOT: what ?', '*BRO: Mom can you make some Kool Aid ?', '*SIS: Mom .', '*MOT: I only have two hands .', '*MOT: give me xxx [>] .', '*BRO: <do you> [<] have any tape ?', '*MOT: do I have any tape\xe2\x86\x91 for what ?', '*MOT: (.) oh for your finger ?', '*BRO: yeah [>] .', '*SIS: <I got> [<] the firecracker xxx .', "*MOT: Tommy you don't put tape on that you put a Band Aid on .", "*BRO: I know that's why +...", '*CHI: hm: ?', '*BRO: ++ I need a Band Aid .', '*MOT: he put tape on a boo boo .', '*MOT: he really did .', "*CHI: what's a xxx &-um +/.", "*MOT: xxx shouldn't leave this (be)cause I'm goin(g) out xxx .", "*BRO: <you're goin(g) where>[?] ?", '*MOT: beach .', '*BRO: (..) where ?', "*MOT: I don't know yet .", '*SIS: xxx .', '*CHI: <&=babbles > [>] .', '*BRO: <<Mom> [/] (.) Mom I> [<] needed that rain .', '*MOT: you got xxx butter ?', '*BRO: yep [>] .', '*SIS: yep [<] .', '*CHI: yep .', '*BRO: yep yep yep yep yep yep .', '*MA1: xxx butter .', "*MOT: here's the bread .", "*MOT: and here's the butter .", '*BRO: bread [!] and butter .', '*BRO: &=vocalizing .', '*BRO: haha <xxx Mom Mom> [>] .', '*CHI: xxx [<][>] french [!] bread .', '*BRO: <hey Catherine> [<] !', '*SIS: &=gasp .', '*BRO: bread [!] and butter !', '*BRO: xxx &-um (.) hey Mom (.) wanna hear a joke ?', '*MOT: sure .', '*BRO: that &-um funny joke so I can go in there ?', '*BRO: 0 [=! screechy laugh] .', '*BRO: xxx .', '*MOT: who gets one first ?', '*BRO: me !', '*SIS: me [>] !', '*CHI: me [<] !', '*BRO: I said it first .', '*SIS: Catherine (.) you want one ?', '*BRO: me !', '*SIS: no Tommy let me talk to Catherine .', '*BRO: say yeah .', '*CHI: yeah .', '*BRO: you gonna marry Justin ?', '*SIS: say yeah .', '*SIS: say yes .', '*CHI: yeah .', '*SIS: xxx .', '*SIS: <I> [//] what kind o(f) animal 0are you gonna have ?', '*CHI: (.) John !', '*MOT: John &=laughs ?', '*SIS: <&=laughs > [>] .', '*BRO: <yeah he is a(n) animal> [<] .', "*MOT: John's <not an animal> [>] .", "*SIS: <it's pourin(g) out and> [<] Brad's at his game .", '*MOT: oh God .', "*MOT: John's not an animal .", "*MOT: he's a person .", '*SIS: say nuhhuh@q .', '*MOT: Erica .', '*CHI: xxx [>] .', '*MOT: <is it hot> [<] ?', '*BRO: mhm [>] .', '*MOT: then [<] blow on it .', '*MOT: like this .', '*MOT: watch how easy it blows .', '*MOT: watch (.) Catherine .', "*MOT: but don't blow on it too hard you'll blow it right off the spoon like this &=blowing .", '*SIS: Joey I hope your windows are closed .', '*MA1: they are .', '*MOT: yeah he just ran [!] out there and shut (th)em .', '*MOT: (..) listen to that rain !', '*BRO: wow !', '*MOT: Cathernie get back here and sit down !', '*BRO: wow .', '*BRO: we should shut our door .', '*MOT: Catherine !', "*CHI: it's xxx right on <xxx car> [>] !", '*MOT: <Catherine> [<] !', '*FAT: xxx .', "*SIS: it's sunny out and it's pourin(g) .", '*MOT: what did you say ?', '*CHI: it gonna rain [>] on their car .', '*BRO: <Catherine> [<] .', "*SIS: we have_to talk <it's John's> [>] .", '*MOT: yep <anything outside> [<] .', '*MOT: anything outside (.) right now is gonna get wet .', '*MOT: my sheets hangin(g) on the clothes+line for instance .', '*CHI: mm ?', "*MOT: they're all wet again .", '*CHI: mhm ?', '*BRO: they 0are gettin(g) washed [!] too !', "*MOT: yeah they're gettin(g) (.) triple rinsed .", '*MOT: (.) they have been out there two days in a row &=laughs .', '*MOT: so they get a rinse in the washin(g) machine they get a rinse from the rain yesterday and a rinse from the rain today .', "*BRO: I don't hope that &-um (.) &-um (.) know &-um (.) grapes\xe2\x86\x91 I would say &-um grow .", '*MOT: what would grow\xe2\x86\x91 grapes ?', '*BRO: yeah .', '*BRO: <over on> [>] those +...', '*MOT: xxx [<] (.) they <get plenty o(f) water>[>] and they will .', '*BRO: ++ <over xxx> [<] .', '*BRO: huh ?', '*MOT: 0if it keeps rainin(g) [!] like this and they will .', '*MOT: (be)cause they need plenty o(f) water .', '*CHI: 0 [=! humming noises] .', '*CHI: them are gonna get all wet .', '*BRO: but do you know that guy ?', '*MOT: yup .', '*BRO: Mom (.) do you know (.) Ray ?', '*MOT: yeah .', "*MOT: he's the [>] one with the nice yard ?", '*BRO: he [x 2] has some in the back yard .', "*BRO: Joe said he's gonna pick us some .", '*MOT: really ?', "*BRO: a whole bunch (.) so we wouldn't have_to go poor .", '*BRO: if we have_to +/.', "*MOT: so we wouldn't have_to go what ?", '*BRO: poor .', "*MOT: we're not poor .", '*BRO: if we get [!] poor .', '*MOT: Daddy works every day .', "*BRO: oh if he didn't <Mom> [>] +/.", "*SIS: he must have said we're going poor .", '*SIS: <did you tell John> [>] ?', "*MOT: <don't tell people we're poor> [<] .", "*MOT: we're not poor .", "*MOT: we've got food on the table (.) clothes on your back somewhere to sleep +...", '*BRO: 0 [=! very loud disgusting burp] .', '*MOT: what do you say ?', '*BRO: (ex)cuse me &=laughs .', "*BRO: xxx (.) I'm a piggie !", "*MOT: (..) anybody notice a different kind o(f) macaroni's in here ?", '*MOT: huh ?', '*BRO: yep .', '*MOT: new kind o(f) different macaroni in here ?', "*BRO: there's curved and straight [>] .", '*MOT: xxx [<] little curly one ?', '*BRO: oh yeah !', '*MOT: and this .', '*MOT: straight one .', '*MOT: look at that .', '*MOT: look at those two different macaronis .', '*MOT: <which one> [>] d(o) you like better ?', '*BRO: <&=giggles > [<] .', '*BRO: I like the straightened one .', '*CHI: xxx [>] !', '*MOT: <well what> [<] is it ?', "*CHI: I don't know .", '*MOT: is it (.) curly +...', "*BRO: I'll get it !", '*MOT: ++ or is it straight ?', '*CHI: straight .', '*MOT: you like your [/] your macaronis ?', "*BRO: what's in it ?", '*MOT: you <(re)member> [>] +...', '*BRO: hm: [<] ?', "*SIS: I don't know who it is .", '*MOT: hello [>] .', '*CHI: <&=babbling > [<] .', '*BRO: <hello you honeys> [>] .', '*MOT: www .', '*BRO: I got the bread !', '*MOT: Tom quiet .', '*BRO: &=laughing .', '*MOT: Tommy be quiet .', '*BRO: &=laughing .', '*MOT: www .', '*SIS: what happened to him ?', '*FAT: he got hit real [!] hard .', '*MOT: www .', '*BRO: 0 [=! high-pitched noises] .', "*BRO: hey Mom I'm runnin(g) around with my bread !", '*MOT: www [>] .', '*CHI: <Dad> [<] Daddy get me a drink ?', '*FAT: you eat [!] first .', '*CHI: me ?', '*MOT: www .', '*BRO: 0 [=! humming noises] .', '*CHI: 0 [=! humming noises] .', '*MOT: www .', '*CHI: <0 [=! humming noises louder]>[>] .', '*SIS: xxx [<] can I have some milk ?', '*SIS: milk (.) milk .', '*MOT: www [>] .', '*SIS: <Mom> [<] can I <have some milk> [>] .', "*FAT: <she's on the phone> [<] .", '*FAT: wait (un)til she gets off the phone .', '*MOT: www [>] .', '*BRO: <xxx one whole xxx> [<] .', '*BRO: is Joe freezin(g) ?', '*MOT: www .', '*BRO: oh my god !', '*CHI: xxx !', '*FAT: xxx .', '*BRO: &-um Mom ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//catmt1.cha
HSLLD/HV1/MT//admmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*FAT: xxx .', '*MOT: Adam !', '*FAT: sit on the end stool .', '*CHI: xxx .', '*FAT: yeah .', "*MOT: alright that's enough Adam .", '*CHI: what ?', '*MOT: yours is over there in the big bowl .', '*CHI: no !', '*MOT: you wanna sit here ?', '*CHI: xxx .', '*CHI: this is mine .', '*FAT: oh we can eat Kim ?', "*FAT: she's not eating ?", "*MOT: Adam there's more in that one over there .", "*MOT: that's why I gave it to you .", "*MOT: (be)cause there's more in it .", '*CHI: this is mine .', '*MOT: okay you can have that one .', '*MOT: Kim got lots_of carrots and peas in the xxx .', '*CHI: 0 [=! hums with his mouth full] .', '*FAT: and I think Adam gonna eat them .', '*MOT: xxx you gonna eat them all up .', '*FAT: uhoh .', '*CHI: 0 [=! humming with mouth full] .', '*FAT: here she comes .', "*FAT: Adam's not gonna eat her beef stew .", '*MOT: see the carrots in there ?', '*MOT: see this ?', "*MOT: here let's get xxx [>] .", '*CHI: <I have my xxx carrots> [<] .', "*MOT: we don't want Adam eating xxx .", '*MOT: see if we can <find some more of> [>] the carrots in here .', '*CHI: <0 [=! mummbling with mouth full]> [<] .', '*MOT: you good Adam ?', '*CHI: yeah .', "*MOT: here you go here's some of the carrots right on top !", "*SIS: here's one right here .", '*MOT: yeah !', '*SIS: xxx away .', '*CHI: (.) go away daddy .', "*MOT: Adam that's not nice .", '*CHI: &=hums .', '*CHI: I have a carrot haha [x 2] &=singing .', '*MOT: is this a good xxx ?', '*FAT: yes .', "*FAT: <in two more days> [>] in two more days you'll [!] be going away and then you won't see me .", '*CHI: xxx [<] .', "*FAT: (be)cause you're going to see Grandma .", '*SIS: xxx .', '*CHI: &=babbles .', "*FAT: you won't see me in two more days (be)cause I'll be here and you'll be down at Grandma's house .", "*FAT: won't you miss your dad ?", '*MOT: Adam you want some butter bread ?', '*CHI: no .', '*CHI: thanks xxx .', '*FAT: did you like playing those words yesterday with Cindy ?', '*CHI: yes .', '*FAT: say sled !', '*CHI: sled .', '*FAT: say right !', '*CHI: right !', '*FAT: good .', '*FAT: say witch !', '*CHI: witch !', '*SIS: Mom xxx sit down .', "*MOT: well you sit down in here until everyone's finished eating .", '*SIS: I wanna sit down on the porch &=whining !', '*FAT: how was your party <in school today> [>] ?', "*MOT: <there's no kids out> [<] there honey .", '*FAT: Adam ?', '*SIS: 0 [=! crying and whining] .', '*FAT: did you like your party in school ?', "*FAT: Kim did you go to the party at Adam's school ?", '*FAT: <Kim> [>] ?', '*MOT: <let me> [<] see the salt and pepper .', '*CHI: (..) can I go back out xxx I wanna go to xxx .', "*MOT: sure you don't want any butter and bread Adam ?", '*CHI: xxx yeah .', '*CHI: no no no (.) xxx .', '*CHI: 0 [=! mumbling sounds] .', '*MOT: you stay in the house .', '*MOT: you stay in here .', '*SIS: &=whines .', '*MOT: you want butter bread ?', '*MOT: you want some bread and butter ?', '*SIS: yeah &=whines .', "*MOT: eat some carrots on there I'll give you the bread and butter .", '*CHI: &=mumbling .', '*CHI: 0 [=! mumbles and hums] .', '*CHI: Mom ?', '*MOT: what ?', "*MOT: there's your bread and butter right there .", '*CHI: 0 [=! mumbling and singing] .', "*FAT: did you like the party at Adam's school (.) Kim ?", '*FAT: did you have fun ?', '*MOT: did you tell Dad that I got_to go outside and play with you ?', '*MOT: in your play area ?', '*CHI: <Daddy went out> [//] mommy went outside and played with me .', '*FAT: <at school> [>] ?', '*MOT: <tell him what> [<] [//] tell him what we played .', '*CHI: I played bikes [?] .', "*MOT: no we didn't ride the bikes .", '*MOT: Jeanine said no .', '*MOT: what did we do ?', '*CHI: I played balloon .', '*MOT: we hit the balloon and we tried not to let it hit the ground .', '*MOT: and two of them flew away .', '*SIS: I <did too> [>] .', '*CHI: yeah [<] !', '*MOT: xxx .', '*CHI: yum .', '*FAT: did you play too Kim played also ?', '*CHI: bunny bunny bunny .', '*MOT: Kim hit the balloon and it went up in the air huh ?', '*MOT: was it fun Kim ?', '*FAT: did you know today was the last day of school ?', '*SIS: yeah .', "*FAT: aren't you gonna miss all the kids ?", '*FAT: you miss Jan ?', '*SIS: I miss Jan .', '*MOT: you miss Jan ?', '*FAT: xxx ?', '*CHI: cut pieces and +...', '*MOT: did you tell Daddy we saw a movie today and you were in it ?', '*MOT: on the V_C_R ?', '*CHI: &=humming .', '*FAT: you were in a movie Adam ?', '*SIS: what movie &=whining ?', "*FAT: you didn't tell me that .", '*FAT: was Adam in the movie ?', "*FAT: you didn't tell me [!] that .", "*SIS: I'm not in <the movie> [>] .", '*FAT: <what was it a movie of> [<] ?', '*MOT: they just videotaped the class .', "*SIS: I'm not in the movie .", '*FAT: Adam ?', '*CHI: 0 [=! sings in harsh growly tone] .', '*MOT: they showed it today .', '*FAT: when did they tape it ?', '*SIS: I want to be in the movie !', "*MOT: I don't know .", "*MOT: Adam don't play with it eat it .", '*FAT: <did they have> [/] did they have the reading time included ?', '*CHI: 0 [=! babbles nonsense words] .', "*SIS: I don't want this !", '*SIS: xxx .', '*MOT: you wanna pull xxx ?', '*MOT: Daddy pull it for you .', '*FAT: you want me to break it half so you can have two pieces ?', '*SIS: no &=whining !', '*FAT: okay .', '*CHI: nuke@d [?] everybody on the xxx .', '*CHI: everybody in the center [?] .', '*FAT: what ?', '*CHI: xxx .', "*MOT: <Adam please don't> [>] do that with your spoon .", '*FAT: xxx [<] .', '*FAT: you can still chew it .', "*MOT: it gives me a headache it's too loud .", '*SIS: dada .', '*FAT: for me ?', '*FAT: a little piece for me ?', '*FAT: you <gonna> [//] wanna share ?', '*FAT: oh thanks Kim .', '*SIS: xxx .', '*FAT: oh !', '*FAT: thank you .', '*CHI: a num@o num@o num@o num@o !', '*SIS: xxx .', '*CHI: everybody out of the circle .', '*FAT: really ?', "*CHI: I'm the xxx I'm the xxx .", '*MOT: Adam ?', '*CHI: everybody out of the circle .', '*MOT: are you finished eating ?', '*CHI: yeah xxx .', '*FAT: Adam I what did you eat at your party ?', "*CHI: I don't know .", '*SIS: xxx .', '*CHI: a brownie .', '*CHI: a brownie .', '*SIS: thank you .', '*FAT: what else ?', '*CHI: potato chips (.) and coke .', '*FAT: what did Mommy make ?', '*CHI: Mommy ate a cookie and I ate a cookie .', '*CHI: 0 [=! slurping sounds] .', '*CHI: 0 [=! heavy hiss-like breathing] .', '*CHI: doodadoo@b &=humming .', '*FAT: how many more days (un)til we see Grandma ?', '*CHI: three !', '*FAT: nope wrong .', '*CHI: yeah .', '*FAT: <how many more> [//] how many more days [>] til we see Grandma ?', '*CHI: yes [>] !', '*MOT: two [<] .', "*FAT: &aw you weren't supposed to tell Mom .", '*MOT: yesterday was three today is two .', '*MOT: tomorrow will be one more day .', '*FAT: how many more days Kim ?', '*SIS: xxx three .', '*CHI: four five .', '*FAT: one two .', '*CHI: two [>] .', '*FAT: two [<] .', '*CHI: xxx .', '*CHI: Mommy can tell a fib .', "*CHI: Mommy two days we're going to Grandma's .", '*CHI: no [/] no .', '*CHI: you &g go away .', '*CHI: Mommy .', "*CHI: say two days we're going Grandma's .", "*MOT: two days we're going to Grandma's .", '*CHI: alright .', "*CHI: two days we're going to &=sings +/.", "*MOT: it's gonna be a long long long long ride .", '*CHI: 0 [=! driving sounds with tune] .', '*CHI: xxx walk walk then drive around here xxx drive around here at all .', "*CHI: we're gonna drive around <you xxx everything> [>] .", '*FAT: xxx [<] .', '*CHI: mm mm mm &=singing .', '*CHI: I want go outside xxx .', '*MOT: I was thinking of it today too .', "*MOT: no Adam you didn't finish .", '*CHI: no !', '*MOT: Adam !', '*CHI: no .', "*MOT: alright I'm going to give it to Kim .", '*FAT: he should either have his socks off or his sneakers on .', '*SIS: xxx .', "*FAT: I'll eat it honey .", '*SIS: xxx .', "*FAT: yep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .", '*CHI: I have my own xxx .', '*FAT: your own what ?', '*CHI: my own xxx .', '*FAT: well see [///] what bike is that for ?', '*MOT: not his .', "*FAT: Adam that doesn't belong to you .", '*CHI: xxx .', "*FAT: <bring it out> [//] no bring it outside right now Adam someone could looking for it and crying (be)cause they can't find it .", '*CHI: xxx .', "*MOT: Adam if you don't finish your dinner (.) you don't get anything else to eat tonight .", "*CHI: I don't want any of those things .", '*SIS: xxx like it .', '*CHI: xxx .', '*SIS: I have my chicken Spices.']
loading solution set
LINE NO ->  15
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  17
LINE NO ->  20
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  23
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  24
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  27
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  30
LINE NO ->  34
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  39
LINE NO ->  42
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  46
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  47
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  50
LINE NO ->  53
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  57
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  62
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  67
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  78
peas
peas peas 116
[('kim', 'NNS'), ('got', 'VBD'), ('lots', 'NNS'), ('of', 'IN'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('xxx', 'NN')]
['peas']
('food -> ', [['peas', 'Legumes and Legume Products']])
carrots
carrots carrots 35
[('kim', 'NNS'), ('got', 'VBD'), ('lots', 'NNS'), ('of', 'IN'), ('carrots', 'NNS'), ('and', 'CC'), ('peas', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('xxx', 'NN')]
['carrots']
('food -> ', [['peas', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  83
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  84
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  88
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  91
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  94
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  95
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  98
beef stew
beef stew beef stew 99
[('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')]
['beef', 'stew']
('food -> ', [['beef stew', 'Meals, Entrees, and Side Dishes']])
stew
stew stew 32
[('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')]
['stew']
('food -> ', [['beef stew', 'Meals, Entrees, and Side Dishes'], ['stew', 'American Indian/Alaska Native Foods']])
beef
beef beef 310
[('adam', 'RB'), ('s', 'VBZ'), ('not', 'RB'), ('gon', 'VB'), ('na', 'TO'), ('eat', 'VB'), ('her', 'PRP$'), ('beef', 'NN'), ('stew', 'NN')]
['beef']
('food -> ', [['beef stew', 'Meals, Entrees, and Side Dishes'], ['stew', 'American Indian/Alaska Native Foods'], ['beef', 'Sausages and Luncheon Meats']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  103
carrots
carrots carrots 35
[('see', 'VB'), ('the', 'DT'), ('carrots', 'NNS'), ('in', 'IN'), ('there', 'EX')]
['carrots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  107
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  111
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  114
carrots
carrots carrots 35
[('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('xxx', 'JJ'), ('carrots', 'NNS')]
['carrots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  117
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  120
carrots
carrots carrots 35
[('see', 'VB'), ('if', 'IN'), ('we', 'PRP'), ('can', 'MD'), ('find', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('the', 'DT'), ('carrots', 'NNS'), ('in', 'IN'), ('here', 'RB')]
['carrots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  125
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  126
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  130
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  133
carrots
carrots carrots 35
[('here', 'RB'), ('you', 'PRP'), ('go', 'VBP'), ('here', 'RB'), ('s', 'RB'), ('some', 'DT'), ('of', 'IN'), ('the', 'DT'), ('carrots', 'NNS'), ('right', 'RB'), ('on', 'IN'), ('top', 'JJ')]
['carrots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  138
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  141
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  144
LINE NO ->  147
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  150
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  153
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  154
carrot
carrot carrot 341
[('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('carrot', 'NN'), ('haha', 'NN'), ('x', 'VBD'), ('2', 'CD'), ('singing', 'NN')]
['carrot']
('food -> ', [['carrot', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  157
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  165
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0})
LINE NO ->  173
LINE NO ->  174
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  178
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  179
LINE NO ->  180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 100: 0, 101: 0, 102: 0, -1: 1})
LINE NO ->  190
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  195
bread
bread bread 186
[('adam', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('butter', 'NN'), ('bread', 'NN')]
['bread']
('food -> ', [])
butter
butter butter 499
[('adam', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('butter', 'NN'), ('bread', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  199
LINE NO ->  202
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  205
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  214
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  217
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  220
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  223
LINE NO ->  226
LINE NO ->  229
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  232
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  235
LINE NO ->  238
LINE NO ->  243
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  252
honey
honey honey 304
[('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('kids', 'NNS'), ('out', 'RP'), ('there', 'RB'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  257
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  261
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  262
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  267
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  272
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  275
salt
salt salt 0
[('let', 'VB'), ('me', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN')]
['salt']
('food -> ', [['salt', 'Spices and Herbs']])
pepper
pepper pepper 27
[('let', 'VB'), ('me', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN')]
['pepper']
('food -> ', [['salt', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  278
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  283
bread
bread bread 186
[('sure', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('butter', 'NN'), ('and', 'CC'), ('bread', 'NN'), ('adam', 'NN')]
['bread']
('food -> ', [])
butter
butter butter 499
[('sure', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('butter', 'NN'), ('and', 'CC'), ('bread', 'NN'), ('adam', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  289
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  292
LINE NO ->  295
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  299
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  303
LINE NO ->  304
bread
bread bread 186
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'JJR'), ('bread', 'NN')]
['bread']
('food -> ', [])
butter
butter butter 499
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'JJR'), ('bread', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  307
bread
bread bread 186
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['bread']
('food -> ', [])
butter
butter butter 499
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  310
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  313
bread
bread bread 186
[('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['bread']
('food -> ', [])
carrots
carrots carrots 35
[('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['carrots']
('food -> ', [])
butter
butter butter 499
[('eat', 'VB'), ('some', 'DT'), ('carrots', 'NNS'), ('on', 'IN'), ('there', 'EX'), ('i', 'JJ'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('the', 'DT'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  318
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  319
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  324
LINE NO ->  328
bread
bread bread 186
[('there', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN'), ('right', 'RB'), ('there', 'RB')]
['bread']
('food -> ', [])
butter
butter butter 499
[('there', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('and', 'CC'), ('butter', 'NN'), ('right', 'RB'), ('there', 'RB')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  333
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  335
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  340
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  343
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  349
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  353
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  357
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  361
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  364
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  367
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  370
LINE NO ->  373
LINE NO ->  377
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  380
ground
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947243368>)
[('we', 'PRP'), ('hit', 'VBD'), ('the', 'DT'), ('balloon', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('tried', 'VBD'), ('not', 'RB'), ('to', 'TO'), ('let', 'VB'), ('it', 'PRP'), ('hit', 'VB'), ('the', 'DT'), ('ground', 'NN')]
['ground']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0})
LINE NO ->  386
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  389
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  392
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  395
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  396
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  399
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  407
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  413
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  417
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  422
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  425
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  430
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  433
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  436
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  439
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  440
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  444
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  450
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  454
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  455
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  459
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  462
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  465
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  468
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  474
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  477
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  481
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  484
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  489
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  492
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  495
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  498
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  501
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  506
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  511
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  512
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  515
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  516
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  519
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  523
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  528
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  532
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  535
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  540
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  545
LINE NO ->  549
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  551
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  556
LINE NO ->  557
LINE NO ->  560
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  566
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  569
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  572
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  575
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  578
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  582
LINE NO ->  585
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  588
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  591
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  592
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  596
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  600
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  604
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  608
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  612
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  616
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  620
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  626
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  629
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  630
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  636
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  639
LINE NO ->  643
potato chips
potato chips potato chips 487
[('potato', 'NN'), ('chips', 'NNS'), ('and', 'CC'), ('coke', 'NN')]
['potato', 'chips']
('food -> ', [['potato chips', 'Snacks']])
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94539a5f0>)
[('potato', 'NN'), ('chips', 'NNS'), ('and', 'CC'), ('coke', 'NN')]
['potato']
('food -> ', [['potato chips', 'Snacks']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  646
LINE NO ->  650
cookie
cookie cookie 507
[('mommy', 'NN'), ('ate', 'VB'), ('a', 'DT'), ('cookie', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('ate', 'VBP'), ('a', 'DT'), ('cookie', 'NN')]
['cookie']
('food -> ', [['cookie', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  656
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  657
LINE NO ->  658
LINE NO ->  662
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  668
LINE NO ->  672
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  675
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  678
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  684
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  687
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  690
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  694
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  702
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  705
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  708
LINE NO ->  711
LINE NO ->  714
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  717
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  720
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  721
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  724
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  729
LINE NO ->  732
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  735
LINE NO ->  738
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  743
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  748
LINE NO ->  751
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  760
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  761
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  766
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  770
LINE NO ->  771
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  774
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  777
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  781
LINE NO ->  785
LINE NO ->  788
LINE NO ->  791
LINE NO ->  794
LINE NO ->  799
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  804
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  805
honey
honey honey 304
[('i', 'NN'), ('ll', 'VBP'), ('eat', 'NN'), ('it', 'PRP'), ('honey', 'VBD')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  808
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  809
bread
bread bread 186
[('yep', 'NN'), ('alright', 'RB'), ('well', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('skitch', 'VB'), ('f', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('in', 'IN'), ('it', 'PRP'), ('just', 'RB'), ('put', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP'), ('kim', 'VB')]
['bread']
('food -> ', [])
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a0488>)
[('yep', 'NN'), ('alright', 'RB'), ('well', 'RB'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('skitch', 'VB'), ('f', 'VB'), ('your', 'PRP$'), ('bread', 'NN'), ('in', 'IN'), ('it', 'PRP'), ('just', 'RB'), ('put', 'VBD'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('if', 'IN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('it', 'PRP'), ('kim', 'VB')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0})
LINE NO ->  818
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  821
LINE NO ->  825
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  828
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  832
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  835
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  840
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  842
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, -1: 1})
LINE NO ->  850
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  852
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, -1: 1})
LINE NO ->  859
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  864
LINE NO ->  867
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  868
chicken
chicken chicken 234
[('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('chicken', 'NN'), ('spices', 'NNS')]
['chicken']
('food -> ', [])
spices
spices spices 312
[('i', 'NN'), ('have', 'VBP'), ('my', 'PRP$'), ('chicken', 'NN'), ('spices', 'NNS')]
['spices']
('food -> ', [['spices', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, -1: 1})
loading solution set
calculating
set([(196, (25, 37)), (79, (34, 38)), (651, (18, 24)), (869, (16, 23)), (644, (27, 31)), (308, (30, 36)), (115, (21, 28)), (284, (30, 36)), (329, (29, 35)), (121, (48, 55)), (155, (15, 21)), (644, (6, 18)), (79, (22, 29)), (284, (41, 46)), (276, (27, 31)), (810, (55, 60)), (314, (50, 55)), (134, (37, 44)), (276, (36, 42)), (329, (19, 24)), (634, (8, 15)), (314, (60, 66)), (308, (20, 25)), (99, (31, 40)), (651, (37, 43)), (631, (8, 15)), (104, (14, 21)), (305, (15, 27)), (314, (15, 22))])
[((79, (22, 29)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((79, (34, 38)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((99, (31, 40)), "*FAT:\tAdam's not gonna eat her beef stew .\n"), ((104, (14, 21)), '*MOT:\tsee the carrots in there ?\n'), ((115, (21, 28)), '*CHI:\t<I have my xxx carrots> [<] .\n'), ((121, (48, 55)), '*MOT:\tsee if we can <find some more of> [>] the carrots in here .\n'), ((134, (37, 44)), "*MOT:\there you go here's some of the carrots right on top !\n"), ((155, (15, 21)), '*CHI:\tI have a carrot haha [x 2] &=singing .\n'), ((196, (25, 37)), '*MOT:\tAdam you want some butter bread ?\n'), ((276, (27, 31)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((276, (36, 42)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((284, (30, 36)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((284, (41, 46)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((305, (15, 27)), '*MOT:\tyou want butter bread ?\n'), ((308, (20, 25)), '*MOT:\tyou want some bread and butter ?\n'), ((308, (30, 36)), '*MOT:\tyou want some bread and butter ?\n'), ((314, (15, 22)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (50, 55)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (60, 66)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((329, (19, 24)), "*MOT:\tthere's your bread and butter right there .\n"), ((329, (29, 35)), "*MOT:\tthere's your bread and butter right there .\n"), ((631, (8, 15)), '*CHI:\ta brownie .\n'), ((634, (8, 15)), '*CHI:\ta brownie .\n'), ((644, (6, 18)), '*CHI:\tpotato chips (.) and coke .\n'), ((644, (27, 31)), '*CHI:\tpotato chips (.) and coke .\n'), ((651, (18, 24)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((651, (37, 43)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((810, (55, 60)), "*FAT:\tyep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .\n"), ((869, (16, 23)), '*SIS:\tI have my chicken Spices.\n')]
set([(860, (32, 38)), (761, (20, 26)), (320, (24, 29)), (390, (18, 21)), (191, (26, 29)), (810, (6, 9)), (586, (6, 11)), (25, (6, 10)), (115, (-1, 4)), (154, (6, 12)), (354, (-1, 4)), (579, (9, 15)), (456, (20, 25)), (517, (21, 24)), (718, (10, 13)), (800, (-1, 4)), (314, (50, 55)), (778, (-1, 4)), (400, (-1, 4)), (206, (33, 38)), (507, (22, 25)), (215, (-1, 4)), (320, (12, 19)), (490, (-1, 4)), (621, (38, 43)), (112, (25, 28)), (441, (10, 16)), (85, (-1, 4)), (300, (-1, 4)), (121, (-1, 4)), (336, (-1, 4)), (570, (-1, 4)), (576, (29, 34)), (843, (7, 12)), (365, (-1, 4)), (691, (6, 9)), (329, (29, 35)), (279, (29, 32)), (836, (-1, 4)), (767, (52, 55)), (221, (-1, 4)), (576, (23, 28)), (722, (23, 26)), (472, (-1, 4)), (706, (-1, 4)), (806, (11, 14)), (381, (17, 24)), (490, (21, 26)), (493, (-1, 4)), (567, (-1, 4)), (809, (6, 9)), (408, (48, 51)), (472, (29, 32)), (248, (29, 35)), (441, (6, 9)), (196, (32, 37)), (810, (86, 91)), (715, (10, 13)), (92, (6, 10)), (552, (12, 18)), (73, (-1, 4)), (679, (16, 21)), (739, (-1, 4)), (536, (34, 37)), (35, (6, 11)), (631, (8, 15)), (115, (30, 33)), (853, (-1, 4)), (58, (11, 18)), (475, (-1, 4)), (258, (-1, 4)), (529, (9, 18)), (475, (27, 30)), (397, (6, 9)), (679, (41, 45)), (502, (17, 21)), (155, (-1, 4)), (592, (6, 9)), (445, (-1, 4)), (860, (-1, 4)), (651, (37, 43)), (685, (6, 9)), (104, (14, 21)), (617, (11, 14)), (721, (6, 9)), (691, (-1, 4)), (268, (44, 50)), (472, (22, 28)), (630, (6, 9)), (96, (-1, 4)), (627, (-1, 4)), (126, (41, 44)), (350, (19, 23)), (284, (6, 10)), (35, (37, 41)), (108, (-1, 4)), (297, (-1, 4)), (95, (8, 11)), (507, (44, 51)), (533, (6, 10)), (597, (-1, 4)), (244, (-1, 4)), (79, (34, 38)), (63, (6, 12)), (84, (26, 31)), (54, (-1, 4)), (463, (-1, 4)), (512, (12, 19)), (89, (-1, 4)), (499, (-1, 4)), (319, (-1, 4)), (733, (-1, 4)), (762, (10, 14)), (308, (30, 36)), (513, (-1, 4)), (84, (32, 37)), (84, (8, 11)), (829, (26, 30)), (405, (6, 11)), (440, (-1, 4)), (869, (-1, 4)), (843, (61, 68)), (869, (24, 30)), (358, (18, 21)), (469, (-1, 4)), (35, (-1, 4)), (695, (26, 31)), (426, (36, 40)), (393, (11, 14)), (482, (21, 26)), (520, (-1, 4)), (181, (95, 100)), (134, (54, 57)), (196, (-1, 4)), (284, (41, 46)), (276, (11, 14)), (191, (-1, 4)), (296, (21, 28)), (85, (23, 28)), (582, (6, 9)), (756, (42, 46)), (118, (-1, 4)), (451, (-1, 4)), (79, (46, 49)), (772, (6, 8)), (853, (36, 42)), (179, (6, 9)), (248, (43, 46)), (663, (20, 24)), (321, (-1, 4)), (418, (45, 51)), (158, (21, 24)), (482, (-1, 4)), (89, (6, 9)), (868, (6, 9)), (445, (40, 45)), (99, (-1, 4)), (426, (6, 12)), (273, (12, 15)), (634, (8, 15)), (148, (-1, 4)), (703, (20, 24)), (613, (-1, 4)), (414, (-1, 4)), (314, (60, 66)), (651, (18, 24)), (350, (14, 18)), (752, (10, 14)), (775, (-1, 4)), (290, (10, 14)), (673, (-1, 4)), (311, (6, 10)), (233, (6, 11)), (350, (-1, 4)), (154, (-1, 4)), (161, (6, 9)), (496, (26, 31)), (767, (6, 11)), (206, (-1, 4)), (148, (18, 23)), (329, (19, 24)), (762, (25, 30)), (761, (32, 37)), (423, (6, 10)), (262, (12, 18)), (230, (10, 15)), (456, (-1, 4)), (434, (-1, 4)), (76, (-1, 4)), (314, (15, 22)), (485, (-1, 4)), (440, (6, 9)), (112, (-1, 4)), (695, (-1, 4)), (297, (22, 27)), (541, (23, 29)), (263, (24, 29)), (418, (19, 24)), (460, (11, 16)), (305, (15, 21)), (601, (-1, 4)), (507, (52, 56)), (368, (28, 33)), (637, (6, 11)), (431, (-1, 4)), (126, (34, 40)), (445, (34, 39)), (24, (6, 9)), (489, (34, 39)), (362, (-1, 4)), (158, (-1, 4)), (21, (17, 20)), (47, (6, 9)), (739, (14, 18)), (253, (18, 22)), (263, (33, 39)), (676, (6, 10)), (437, (-1, 4)), (118, (32, 35)), (139, (17, 22)), (644, (6, 18)), (181, (35, 39)), (305, (22, 27)), (308, (-1, 4)), (589, (8, 13)), (699, (32, 35)), (354, (28, 33)), (344, (-1, 4)), (517, (-1, 4)), (516, (6, 9)), (139, (-1, 4)), (99, (31, 40)), (262, (23, 31)), (408, (18, 25)), (762, (6, 9)), (151, (11, 17)), (230, (-1, 4)), (819, (-1, 4)), (155, (15, 26)), (767, (12, 17)), (609, (27, 33)), (833, (-1, 4)), (253, (38, 43)), (16, (6, 9)), (869, (16, 23)), (744, (10, 14)), (644, (27, 31)), (314, (-1, 4)), (381, (60, 66)), (466, (-1, 4)), (524, (-1, 4)), (121, (48, 55)), (142, (6, 10)), (175, (-1, 4)), (336, (23, 28)), (390, (-1, 4)), (475, (31, 34)), (358, (10, 17)), (95, (25, 30)), (455, (-1, 4)), (778, (27, 32)), (688, (10, 13)), (489, (27, 33)), (851, (6, 9)), (524, (55, 61)), (805, (6, 9)), (175, (16, 22)), (181, (-1, 4)), (841, (6, 9)), (550, (6, 9)), (28, (14, 20)), (276, (27, 31)), (48, (-1, 4)), (475, (21, 26)), (308, (20, 25)), (166, (19, 24)), (378, (-1, 4)), (131, (6, 10)), (541, (-1, 4)), (191, (6, 11)), (21, (6, 9)), (806, (18, 23)), (21, (21, 26)), (244, (30, 35)), (843, (-1, 4)), (284, (30, 36)), (699, (-1, 4)), (756, (6, 10)), (263, (-1, 4)), (79, (22, 29)), (396, (6, 9)), (657, (21, 28)), (134, (37, 44)), (134, (-1, 4)), (810, (55, 60)), (336, (39, 45)), (617, (6, 10)), (496, (-1, 4)), (268, (28, 33)), (489, (12, 17)), (756, (11, 16)), (536, (13, 16)), (819, (20, 23)), (305, (-1, 4)), (576, (-1, 4)), (567, (6, 10)), (478, (31, 36)), (378, (15, 22)), (541, (30, 33)), (126, (28, 33)), (605, (-1, 4)), (767, (18, 23)), (502, (11, 16)), (573, (15, 20)), (276, (36, 42)), (393, (6, 10)), (651, (-1, 4)), (512, (29, 35)), (507, (-1, 4)), (127, (-1, 4)), (244, (36, 45)), (341, (-1, 4)), (248, (19, 24)), (196, (25, 31)), (552, (48, 53)), (826, (13, 16)), (334, (12, 20)), (387, (-1, 4)), (800, (32, 37)), (212, (6, 9)), (426, (-1, 4)), (593, (27, 33)), (68, (-1, 4)), (466, (22, 27)), (43, (-1, 4)), (104, (-1, 4)), (95, (31, 36)), (365, (15, 20)), (84, (12, 16)), (115, (21, 29)), (561, (29, 33)), (725, (16, 20)), (408, (52, 55)), (418, (-1, 4)), (203, (6, 12)), (218, (-1, 4))])
[((16, (6, 9)), '*FAT:\txxx .\n'), ((21, (6, 9)), '*FAT:\tsit on the end stool .\n'), ((21, (17, 20)), '*FAT:\tsit on the end stool .\n'), ((21, (21, 26)), '*FAT:\tsit on the end stool .\n'), ((24, (6, 9)), '*CHI:\txxx .\n'), ((25, (6, 10)), '*FAT:\tyeah .\n'), ((28, (14, 20)), "*MOT:\talright that's enough Adam .\n"), ((35, (-1, 4)), '*MOT:\tyours is over there in the big bowl .\n'), ((35, (6, 11)), '*MOT:\tyours is over there in the big bowl .\n'), ((35, (37, 41)), '*MOT:\tyours is over there in the big bowl .\n'), ((43, (-1, 4)), '*MOT:\tyou wanna sit here ?\n'), ((47, (6, 9)), '*CHI:\txxx .\n'), ((48, (-1, 4)), '*CHI:\tthis is mine .\n'), ((54, (-1, 4)), "*FAT:\tshe's not eating ?\n"), ((58, (11, 18)), "*MOT:\tAdam there's more in that one over there .\n"), ((63, (6, 12)), "*MOT:\tthat's why I gave it to you .\n"), ((68, (-1, 4)), "*MOT:\t(be)cause there's more in it .\n"), ((73, (-1, 4)), '*CHI:\tthis is mine .\n'), ((76, (-1, 4)), '*MOT:\tokay you can have that one .\n'), ((79, (22, 29)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((79, (34, 38)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((79, (46, 49)), '*MOT:\tKim got lots_of carrots and peas in the xxx .\n'), ((84, (8, 11)), '*CHI:\t0 [=! hums with his mouth full] .\n'), ((84, (12, 16)), '*CHI:\t0 [=! hums with his mouth full] .\n'), ((84, (26, 31)), '*CHI:\t0 [=! hums with his mouth full] .\n'), ((84, (32, 37)), '*CHI:\t0 [=! hums with his mouth full] .\n'), ((85, (-1, 4)), '*FAT:\tand I think Adam gonna eat them .\n'), ((85, (23, 28)), '*FAT:\tand I think Adam gonna eat them .\n'), ((89, (-1, 4)), '*MOT:\txxx you gonna eat them all up .\n'), ((89, (6, 9)), '*MOT:\txxx you gonna eat them all up .\n'), ((92, (6, 10)), '*FAT:\tuhoh .\n'), ((95, (8, 11)), '*CHI:\t0 [=! humming with mouth full] .\n'), ((95, (25, 30)), '*CHI:\t0 [=! humming with mouth full] .\n'), ((95, (31, 36)), '*CHI:\t0 [=! humming with mouth full] .\n'), ((96, (-1, 4)), '*FAT:\there she comes .\n'), ((99, (-1, 4)), "*FAT:\tAdam's not gonna eat her beef stew .\n"), ((99, (31, 40)), "*FAT:\tAdam's not gonna eat her beef stew .\n"), ((104, (-1, 4)), '*MOT:\tsee the carrots in there ?\n'), ((104, (14, 21)), '*MOT:\tsee the carrots in there ?\n'), ((108, (-1, 4)), '*MOT:\tsee this ?\n'), ((112, (-1, 4)), "*MOT:\there let's get xxx [>] .\n"), ((112, (25, 28)), "*MOT:\there let's get xxx [>] .\n"), ((115, (-1, 4)), '*CHI:\t<I have my xxx carrots> [<] .\n'), ((115, (21, 29)), '*CHI:\t<I have my xxx carrots> [<] .\n'), ((115, (30, 33)), '*CHI:\t<I have my xxx carrots> [<] .\n'), ((118, (-1, 4)), "*MOT:\twe don't want Adam eating xxx .\n"), ((118, (32, 35)), "*MOT:\twe don't want Adam eating xxx .\n"), ((121, (-1, 4)), '*MOT:\tsee if we can <find some more of> [>] the carrots in here .\n'), ((121, (48, 55)), '*MOT:\tsee if we can <find some more of> [>] the carrots in here .\n'), ((126, (28, 33)), '*CHI:\t<0 [=! mummbling with mouth full]> [<] .\n'), ((126, (34, 40)), '*CHI:\t<0 [=! mummbling with mouth full]> [<] .\n'), ((126, (41, 44)), '*CHI:\t<0 [=! mummbling with mouth full]> [<] .\n'), ((127, (-1, 4)), '*MOT:\tyou good Adam ?\n'), ((131, (6, 10)), '*CHI:\tyeah .\n'), ((134, (-1, 4)), "*MOT:\there you go here's some of the carrots right on top !\n"), ((134, (37, 44)), "*MOT:\there you go here's some of the carrots right on top !\n"), ((134, (54, 57)), "*MOT:\there you go here's some of the carrots right on top !\n"), ((139, (-1, 4)), "*SIS:\there's one right here .\n"), ((139, (17, 22)), "*SIS:\there's one right here .\n"), ((142, (6, 10)), '*MOT:\tyeah !\n'), ((148, (-1, 4)), '*CHI:\t(.) go away daddy .\n'), ((148, (18, 23)), '*CHI:\t(.) go away daddy .\n'), ((151, (11, 17)), "*MOT:\tAdam that's not nice .\n"), ((154, (-1, 4)), '*CHI:\t&=hums .\n'), ((154, (6, 12)), '*CHI:\t&=hums .\n'), ((155, (-1, 4)), '*CHI:\tI have a carrot haha [x 2] &=singing .\n'), ((155, (15, 26)), '*CHI:\tI have a carrot haha [x 2] &=singing .\n'), ((158, (-1, 4)), '*MOT:\tis this a good xxx ?\n'), ((158, (21, 24)), '*MOT:\tis this a good xxx ?\n'), ((161, (6, 9)), '*FAT:\tyes .\n'), ((166, (19, 24)), "*FAT:\t<in two more days> [>] in two more days you'll [!] be going away and then you won't see me .\n"), ((175, (-1, 4)), "*FAT:\t(be)cause you're going to see Grandma .\n"), ((175, (16, 22)), "*FAT:\t(be)cause you're going to see Grandma .\n"), ((179, (6, 9)), '*SIS:\txxx .\n'), ((181, (-1, 4)), "*FAT:\tyou won't see me in two more days (be)cause I'll be here and you'll be down at Grandma's house .\n"), ((181, (35, 39)), "*FAT:\tyou won't see me in two more days (be)cause I'll be here and you'll be down at Grandma's house .\n"), ((181, (95, 100)), "*FAT:\tyou won't see me in two more days (be)cause I'll be here and you'll be down at Grandma's house .\n"), ((191, (-1, 4)), "*FAT:\twon't you miss your dad ?\n"), ((191, (6, 11)), "*FAT:\twon't you miss your dad ?\n"), ((191, (26, 29)), "*FAT:\twon't you miss your dad ?\n"), ((196, (-1, 4)), '*MOT:\tAdam you want some butter bread ?\n'), ((196, (25, 31)), '*MOT:\tAdam you want some butter bread ?\n'), ((196, (32, 37)), '*MOT:\tAdam you want some butter bread ?\n'), ((203, (6, 12)), '*CHI:\tthanks xxx .\n'), ((206, (-1, 4)), '*FAT:\tdid you like playing those words yesterday with Cindy ?\n'), ((206, (33, 38)), '*FAT:\tdid you like playing those words yesterday with Cindy ?\n'), ((212, (6, 9)), '*CHI:\tyes .\n'), ((215, (-1, 4)), '*FAT:\tsay sled !\n'), ((218, (-1, 4)), '*CHI:\tsled .\n'), ((221, (-1, 4)), '*FAT:\tsay right !\n'), ((230, (-1, 4)), '*FAT:\tsay witch !\n'), ((230, (10, 15)), '*FAT:\tsay witch !\n'), ((233, (6, 11)), '*CHI:\twitch !\n'), ((244, (-1, 4)), '*SIS:\tI wanna sit down on the porch &=whining !\n'), ((244, (30, 35)), '*SIS:\tI wanna sit down on the porch &=whining !\n'), ((244, (36, 45)), '*SIS:\tI wanna sit down on the porch &=whining !\n'), ((248, (19, 24)), '*FAT:\thow was your party <in school today> [>] ?\n'), ((248, (29, 35)), '*FAT:\thow was your party <in school today> [>] ?\n'), ((248, (43, 46)), '*FAT:\thow was your party <in school today> [>] ?\n'), ((253, (18, 22)), "*MOT:\t<there's no kids out> [<] there honey .\n"), ((253, (38, 43)), "*MOT:\t<there's no kids out> [<] there honey .\n"), ((258, (-1, 4)), '*FAT:\tAdam ?\n'), ((262, (12, 18)), '*SIS:\t0 [=! crying and whining] .\n'), ((262, (23, 31)), '*SIS:\t0 [=! crying and whining] .\n'), ((263, (-1, 4)), '*FAT:\tdid you like your party in school ?\n'), ((263, (24, 29)), '*FAT:\tdid you like your party in school ?\n'), ((263, (33, 39)), '*FAT:\tdid you like your party in school ?\n'), ((268, (28, 33)), "*FAT:\tKim did you go to the party at Adam's school ?\n"), ((268, (44, 50)), "*FAT:\tKim did you go to the party at Adam's school ?\n"), ((273, (12, 15)), '*FAT:\t<Kim> [>] ?\n'), ((276, (11, 14)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((276, (27, 31)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((276, (36, 42)), '*MOT:\t<let me> [<] see the salt and pepper .\n'), ((279, (29, 32)), '*CHI:\t(..) can I go back out xxx I wanna go to xxx .\n'), ((284, (6, 10)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((284, (30, 36)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((284, (41, 46)), "*MOT:\tsure you don't want any butter and bread Adam ?\n"), ((290, (10, 14)), '*CHI:\txxx yeah .\n'), ((296, (21, 28)), '*CHI:\t0 [=! mumbling sounds] .\n'), ((297, (-1, 4)), '*MOT:\tyou stay in the house .\n'), ((297, (22, 27)), '*MOT:\tyou stay in the house .\n'), ((300, (-1, 4)), '*MOT:\tyou stay in here .\n'), ((305, (-1, 4)), '*MOT:\tyou want butter bread ?\n'), ((305, (15, 21)), '*MOT:\tyou want butter bread ?\n'), ((305, (22, 27)), '*MOT:\tyou want butter bread ?\n'), ((308, (-1, 4)), '*MOT:\tyou want some bread and butter ?\n'), ((308, (20, 25)), '*MOT:\tyou want some bread and butter ?\n'), ((308, (30, 36)), '*MOT:\tyou want some bread and butter ?\n'), ((311, (6, 10)), '*SIS:\tyeah &=whines .\n'), ((314, (-1, 4)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (15, 22)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (50, 55)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((314, (60, 66)), "*MOT:\teat some carrots on there I'll give you the bread and butter .\n"), ((319, (-1, 4)), '*CHI:\t&=mumbling .\n'), ((320, (12, 19)), '*CHI:\t0 [=! mumbles and hums] .\n'), ((320, (24, 29)), '*CHI:\t0 [=! mumbles and hums] .\n'), ((321, (-1, 4)), '*CHI:\tMom ?\n'), ((329, (19, 24)), "*MOT:\tthere's your bread and butter right there .\n"), ((329, (29, 35)), "*MOT:\tthere's your bread and butter right there .\n"), ((334, (12, 20)), '*CHI:\t0 [=! mumbling and singing] .\n'), ((336, (-1, 4)), "*FAT:\tdid you like the party at Adam's school (.) Kim ?\n"), ((336, (23, 28)), "*FAT:\tdid you like the party at Adam's school (.) Kim ?\n"), ((336, (39, 45)), "*FAT:\tdid you like the party at Adam's school (.) Kim ?\n"), ((341, (-1, 4)), '*FAT:\tdid you have fun ?\n'), ((344, (-1, 4)), '*MOT:\tdid you tell Dad that I got_to go outside and play with you ?\n'), ((350, (-1, 4)), '*MOT:\tin your play area ?\n'), ((350, (14, 18)), '*MOT:\tin your play area ?\n'), ((350, (19, 23)), '*MOT:\tin your play area ?\n'), ((354, (-1, 4)), '*CHI:\t<Daddy went out> [//] mommy went outside and played with me .\n'), ((354, (28, 33)), '*CHI:\t<Daddy went out> [//] mommy went outside and played with me .\n'), ((358, (10, 17)), '*FAT:\t<at school> [>] ?\n'), ((358, (18, 21)), '*FAT:\t<at school> [>] ?\n'), ((362, (-1, 4)), '*MOT:\t<tell him what> [<] [//] tell him what we played .\n'), ((365, (-1, 4)), '*CHI:\tI played bikes [?] .\n'), ((365, (15, 20)), '*CHI:\tI played bikes [?] .\n'), ((368, (28, 33)), "*MOT:\tno we didn't ride the bikes .\n"), ((378, (-1, 4)), '*CHI:\tI played balloon .\n'), ((378, (15, 22)), '*CHI:\tI played balloon .\n'), ((381, (17, 24)), '*MOT:\twe hit the balloon and we tried not to let it hit the ground .\n'), ((381, (60, 66)), '*MOT:\twe hit the balloon and we tried not to let it hit the ground .\n'), ((387, (-1, 4)), '*MOT:\tand two of them flew away .\n'), ((390, (-1, 4)), '*SIS:\tI <did too> [>] .\n'), ((390, (18, 21)), '*SIS:\tI <did too> [>] .\n'), ((393, (6, 10)), '*CHI:\tyeah [<] !\n'), ((393, (11, 14)), '*CHI:\tyeah [<] !\n'), ((396, (6, 9)), '*MOT:\txxx .\n'), ((397, (6, 9)), '*CHI:\tyum .\n'), ((400, (-1, 4)), '*FAT:\tdid you play too Kim played also ?\n'), ((405, (6, 11)), '*CHI:\tbunny bunny bunny .\n'), ((408, (18, 25)), '*MOT:\tKim hit the balloon and it went up in the air huh ?\n'), ((408, (48, 51)), '*MOT:\tKim hit the balloon and it went up in the air huh ?\n'), ((408, (52, 55)), '*MOT:\tKim hit the balloon and it went up in the air huh ?\n'), ((414, (-1, 4)), '*MOT:\twas it fun Kim ?\n'), ((418, (-1, 4)), '*FAT:\tdid you know today was the last day of school ?\n'), ((418, (19, 24)), '*FAT:\tdid you know today was the last day of school ?\n'), ((418, (45, 51)), '*FAT:\tdid you know today was the last day of school ?\n'), ((423, (6, 10)), '*SIS:\tyeah .\n'), ((426, (-1, 4)), "*FAT:\taren't you gonna miss all the kids ?\n"), ((426, (6, 12)), "*FAT:\taren't you gonna miss all the kids ?\n"), ((426, (36, 40)), "*FAT:\taren't you gonna miss all the kids ?\n"), ((431, (-1, 4)), '*FAT:\tyou miss Jan ?\n'), ((434, (-1, 4)), '*SIS:\tI miss Jan .\n'), ((437, (-1, 4)), '*MOT:\tyou miss Jan ?\n'), ((440, (-1, 4)), '*FAT:\txxx ?\n'), ((440, (6, 9)), '*FAT:\txxx ?\n'), ((441, (6, 9)), '*CHI:\tcut pieces and +...\n'), ((441, (10, 16)), '*CHI:\tcut pieces and +...\n'), ((445, (-1, 4)), '*MOT:\tdid you tell Daddy we saw a movie today and you were in it ?\n'), ((445, (34, 39)), '*MOT:\tdid you tell Daddy we saw a movie today and you were in it ?\n'), ((445, (40, 45)), '*MOT:\tdid you tell Daddy we saw a movie today and you were in it ?\n'), ((451, (-1, 4)), '*MOT:\ton the V_C_R ?\n'), ((455, (-1, 4)), '*CHI:\t&=humming .\n'), ((456, (-1, 4)), '*FAT:\tyou were in a movie Adam ?\n'), ((456, (20, 25)), '*FAT:\tyou were in a movie Adam ?\n'), ((460, (11, 16)), '*SIS:\twhat movie &=whining ?\n'), ((463, (-1, 4)), "*FAT:\tyou didn't tell me that .\n"), ((466, (-1, 4)), '*FAT:\twas Adam in the movie ?\n'), ((466, (22, 27)), '*FAT:\twas Adam in the movie ?\n'), ((469, (-1, 4)), "*FAT:\tyou didn't tell me [!] that .\n"), ((472, (-1, 4)), "*SIS:\tI'm not in <the movie> [>] .\n"), ((472, (22, 28)), "*SIS:\tI'm not in <the movie> [>] .\n"), ((472, (29, 32)), "*SIS:\tI'm not in <the movie> [>] .\n"), ((475, (-1, 4)), '*FAT:\t<what was it a movie of> [<] ?\n'), ((475, (21, 26)), '*FAT:\t<what was it a movie of> [<] ?\n'), ((475, (27, 30)), '*FAT:\t<what was it a movie of> [<] ?\n'), ((475, (31, 34)), '*FAT:\t<what was it a movie of> [<] ?\n'), ((478, (31, 36)), '*MOT:\tthey just videotaped the class .\n'), ((482, (-1, 4)), "*SIS:\tI'm not in the movie .\n"), ((482, (21, 26)), "*SIS:\tI'm not in the movie .\n"), ((485, (-1, 4)), '*FAT:\tAdam ?\n'), ((489, (12, 17)), '*CHI:\t0 [=! sings in harsh growly tone] .\n'), ((489, (27, 33)), '*CHI:\t0 [=! sings in harsh growly tone] .\n'), ((489, (34, 39)), '*CHI:\t0 [=! sings in harsh growly tone] .\n'), ((490, (-1, 4)), '*MOT:\tthey showed it today .\n'), ((490, (21, 26)), '*MOT:\tthey showed it today .\n'), ((493, (-1, 4)), '*FAT:\twhen did they tape it ?\n'), ((496, (-1, 4)), '*SIS:\tI want to be in the movie !\n'), ((496, (26, 31)), '*SIS:\tI want to be in the movie !\n'), ((499, (-1, 4)), "*MOT:\tI don't know .\n"), ((502, (11, 16)), "*MOT:\tAdam don't play with it eat it .\n"), ((502, (17, 21)), "*MOT:\tAdam don't play with it eat it .\n"), ((507, (-1, 4)), '*FAT:\t<did they have> [/] did they have the reading time included ?\n'), ((507, (22, 25)), '*FAT:\t<did they have> [/] did they have the reading time included ?\n'), ((507, (44, 51)), '*FAT:\t<did they have> [/] did they have the reading time included ?\n'), ((507, (52, 56)), '*FAT:\t<did they have> [/] did they have the reading time included ?\n'), ((512, (12, 19)), '*CHI:\t0 [=! babbles nonsense words] .\n'), ((512, (29, 35)), '*CHI:\t0 [=! babbles nonsense words] .\n'), ((513, (-1, 4)), "*SIS:\tI don't want this !\n"), ((516, (6, 9)), '*SIS:\txxx .\n'), ((517, (-1, 4)), '*MOT:\tyou wanna pull xxx ?\n'), ((517, (21, 24)), '*MOT:\tyou wanna pull xxx ?\n'), ((520, (-1, 4)), '*MOT:\tDaddy pull it for you .\n'), ((524, (-1, 4)), '*FAT:\tyou want me to break it half so you can have two pieces ?\n'), ((524, (55, 61)), '*FAT:\tyou want me to break it half so you can have two pieces ?\n'), ((529, (9, 18)), '*SIS:\tno &=whining !\n'), ((533, (6, 10)), '*FAT:\tokay .\n'), ((536, (13, 16)), '*CHI:\tnuke@d [?] everybody on the xxx .\n'), ((536, (34, 37)), '*CHI:\tnuke@d [?] everybody on the xxx .\n'), ((541, (-1, 4)), '*CHI:\teverybody in the center [?] .\n'), ((541, (23, 29)), '*CHI:\teverybody in the center [?] .\n'), ((541, (30, 33)), '*CHI:\teverybody in the center [?] .\n'), ((550, (6, 9)), '*CHI:\txxx .\n'), ((552, (12, 18)), "*MOT:\t<Adam please don't> [>] do that with your spoon .\n"), ((552, (48, 53)), "*MOT:\t<Adam please don't> [>] do that with your spoon .\n"), ((561, (29, 33)), "*MOT:\tit gives me a headache it's too loud .\n"), ((567, (-1, 4)), '*SIS:\tdada .\n'), ((567, (6, 10)), '*SIS:\tdada .\n'), ((570, (-1, 4)), '*FAT:\tfor me ?\n'), ((573, (15, 20)), '*FAT:\ta little piece for me ?\n'), ((576, (-1, 4)), '*FAT:\tyou <gonna> [//] wanna share ?\n'), ((576, (23, 28)), '*FAT:\tyou <gonna> [//] wanna share ?\n'), ((576, (29, 34)), '*FAT:\tyou <gonna> [//] wanna share ?\n'), ((579, (9, 15)), '*FAT:\toh thanks Kim .\n'), ((582, (6, 9)), '*SIS:\txxx .\n'), ((586, (6, 11)), '*FAT:\tthank you .\n'), ((589, (8, 13)), '*CHI:\ta num@o num@o num@o num@o !\n'), ((592, (6, 9)), '*SIS:\txxx .\n'), ((593, (27, 33)), '*CHI:\teverybody out of the circle .\n'), ((597, (-1, 4)), '*FAT:\treally ?\n'), ((601, (-1, 4)), "*CHI:\tI'm the xxx I'm the xxx .\n"), ((605, (-1, 4)), '*MOT:\tAdam ?\n'), ((609, (27, 33)), '*CHI:\teverybody out of the circle .\n'), ((613, (-1, 4)), '*MOT:\tare you finished eating ?\n'), ((617, (6, 10)), '*CHI:\tyeah xxx .\n'), ((617, (11, 14)), '*CHI:\tyeah xxx .\n'), ((621, (38, 43)), '*FAT:\tAdam I what did you eat at your party ?\n'), ((627, (-1, 4)), "*CHI:\tI don't know .\n"), ((630, (6, 9)), '*SIS:\txxx .\n'), ((631, (8, 15)), '*CHI:\ta brownie .\n'), ((634, (8, 15)), '*CHI:\ta brownie .\n'), ((637, (6, 11)), '*SIS:\tthank you .\n'), ((644, (6, 18)), '*CHI:\tpotato chips (.) and coke .\n'), ((644, (27, 31)), '*CHI:\tpotato chips (.) and coke .\n'), ((651, (-1, 4)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((651, (18, 24)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((651, (37, 43)), '*CHI:\tMommy ate a cookie and I ate a cookie .\n'), ((657, (21, 28)), '*CHI:\t0 [=! slurping sounds] .\n'), ((663, (20, 24)), '*FAT:\thow many more days (un)til we see Grandma ?\n'), ((673, (-1, 4)), '*FAT:\tnope wrong .\n'), ((676, (6, 10)), '*CHI:\tyeah .\n'), ((679, (16, 21)), '*FAT:\t<how many more> [//] how many more days [>] til we see Grandma ?\n'), ((679, (41, 45)), '*FAT:\t<how many more> [//] how many more days [>] til we see Grandma ?\n'), ((685, (6, 9)), '*CHI:\tyes [>] !\n'), ((688, (10, 13)), '*MOT:\ttwo [<] .\n'), ((691, (-1, 4)), "*FAT:\t&aw you weren't supposed to tell Mom .\n"), ((691, (6, 9)), "*FAT:\t&aw you weren't supposed to tell Mom .\n"), ((695, (-1, 4)), '*MOT:\tyesterday was three today is two .\n'), ((695, (26, 31)), '*MOT:\tyesterday was three today is two .\n'), ((699, (-1, 4)), '*MOT:\ttomorrow will be one more day .\n'), ((699, (32, 35)), '*MOT:\ttomorrow will be one more day .\n'), ((703, (20, 24)), '*FAT:\thow many more days Kim ?\n'), ((706, (-1, 4)), '*SIS:\txxx three .\n'), ((715, (10, 13)), '*CHI:\ttwo [>] .\n'), ((718, (10, 13)), '*FAT:\ttwo [<] .\n'), ((721, (6, 9)), '*CHI:\txxx .\n'), ((722, (23, 26)), '*CHI:\tMommy can tell a fib .\n'), ((725, (16, 20)), "*CHI:\tMommy two days we're going to Grandma's .\n"), ((733, (-1, 4)), '*CHI:\tyou &g go away .\n'), ((739, (-1, 4)), "*CHI:\tsay two days we're going Grandma's .\n"), ((739, (14, 18)), "*CHI:\tsay two days we're going Grandma's .\n"), ((744, (10, 14)), "*MOT:\ttwo days we're going to Grandma's .\n"), ((752, (10, 14)), "*CHI:\ttwo days we're going to &=sings +/.\n"), ((756, (6, 10)), "*MOT:\tit's gonna be a long long long long ride .\n"), ((756, (11, 16)), "*MOT:\tit's gonna be a long long long long ride .\n"), ((756, (42, 46)), "*MOT:\tit's gonna be a long long long long ride .\n"), ((761, (20, 26)), '*CHI:\t0 [=! driving sounds with tune] .\n'), ((761, (32, 37)), '*CHI:\t0 [=! driving sounds with tune] .\n'), ((762, (6, 9)), '*CHI:\txxx walk walk then drive around here xxx drive around here at all .\n'), ((762, (10, 14)), '*CHI:\txxx walk walk then drive around here xxx drive around here at all .\n'), ((762, (25, 30)), '*CHI:\txxx walk walk then drive around here xxx drive around here at all .\n'), ((767, (6, 11)), "*CHI:\twe're gonna drive around <you xxx everything> [>] .\n"), ((767, (12, 17)), "*CHI:\twe're gonna drive around <you xxx everything> [>] .\n"), ((767, (18, 23)), "*CHI:\twe're gonna drive around <you xxx everything> [>] .\n"), ((767, (52, 55)), "*CHI:\twe're gonna drive around <you xxx everything> [>] .\n"), ((772, (6, 8)), '*CHI:\tmm mm mm &=singing .\n'), ((775, (-1, 4)), '*CHI:\tI want go outside xxx .\n'), ((778, (-1, 4)), '*MOT:\tI was thinking of it today too .\n'), ((778, (27, 32)), '*MOT:\tI was thinking of it today too .\n'), ((800, (-1, 4)), '*FAT:\the should either have his socks off or his sneakers on .\n'), ((800, (32, 37)), '*FAT:\the should either have his socks off or his sneakers on .\n'), ((805, (6, 9)), '*SIS:\txxx .\n'), ((806, (11, 14)), "*FAT:\tI'll eat it honey .\n"), ((806, (18, 23)), "*FAT:\tI'll eat it honey .\n"), ((809, (6, 9)), '*SIS:\txxx .\n'), ((810, (6, 9)), "*FAT:\tyep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .\n"), ((810, (55, 60)), "*FAT:\tyep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .\n"), ((810, (86, 91)), "*FAT:\tyep alright well you don't have_to skitch@f your bread in it just put it on the table if you don't want it Kim .\n"), ((819, (-1, 4)), '*CHI:\tI have my own xxx .\n'), ((819, (20, 23)), '*CHI:\tI have my own xxx .\n'), ((826, (13, 16)), '*CHI:\tmy own xxx .\n'), ((829, (26, 30)), '*FAT:\twell see [///] what bike is that for ?\n'), ((833, (-1, 4)), '*MOT:\tnot his .\n'), ((836, (-1, 4)), "*FAT:\tAdam that doesn't belong to you .\n"), ((841, (6, 9)), '*CHI:\txxx .\n'), ((843, (-1, 4)), "*FAT:\t<bring it out> [//] no bring it outside right now Adam someone could looking for it and crying (be)cause they can't find it .\n"), ((843, (7, 12)), "*FAT:\t<bring it out> [//] no bring it outside right now Adam someone could looking for it and crying (be)cause they can't find it .\n"), ((843, (61, 68)), "*FAT:\t<bring it out> [//] no bring it outside right now Adam someone could looking for it and crying (be)cause they can't find it .\n"), ((851, (6, 9)), '*CHI:\txxx .\n'), ((853, (-1, 4)), "*MOT:\tAdam if you don't finish your dinner (.) you don't get anything else to eat tonight .\n"), ((853, (36, 42)), "*MOT:\tAdam if you don't finish your dinner (.) you don't get anything else to eat tonight .\n"), ((860, (-1, 4)), "*CHI:\tI don't want any of those things .\n"), ((860, (32, 38)), "*CHI:\tI don't want any of those things .\n"), ((868, (6, 9)), '*CHI:\txxx .\n'), ((869, (-1, 4)), '*SIS:\tI have my chicken Spices.\n'), ((869, (16, 23)), '*SIS:\tI have my chicken Spices.\n'), ((869, (24, 30)), '*SIS:\tI have my chicken Spices.\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'pepper', 'potato chips', 'coke', 'carrots', 'butter bread', 'peas', 'brownie', 'carrot', 'cookie', 'chicken', 'salt', 'beef stew', 'bread'])
predicted labels:
set(['', 'tune]', "don't", 'please', '&aw', 'sounds]', 'bring', 'bikes', "won't", 'school>', 'yep', 'yes', 'babbles', 'ground', 'cut', 'thank', 'hums', 'day', 'fib', 'bike', 'crying', 'circle', 'dad', 'someone', 'more>', 'full]', 'gonna', 'spoon', '[>]', 'words', 'num@o', 'bread', 'school', 'piece', 'thanks', 'right', 'house', 'yeah', 'me>', 'chicken', 'movie', 'stool', "there's", 'whining]', 'reading', 'days>', 'pepper', 'growly', 'witch', "aren't", 'full]>', 'kids', 'potato chips', 'days', 'dinner', 'yum', 'cookie', 'spices', 'wanna', 'mommy', 'socks', 'walk', 'table', 'sounds', "you're", 'area', "it's", 'top', 'uhoh', "we're", '&=hums', 'today', 'porch', 'coke', 'xxx', 'huh', 'tone]', 'eat', '[=!', 'mm', 'movie>', 'ride', 'mumbling', 'air', 'daddy', 'carrots', 'share', 'pieces', 'honey', 'carrots>', '[?]', '&=whining', 'carrot haha', 'beef stew', 'hums]', 'sings', 'end', 'sit', 'things', 'balloon', 'bowl', 'party', 'mumbles', 'of>', 'bunny', 'play', 'sure', 'okay', '[/]', 'peas', 'brownie', 'mouth', '[<]', 'class', 'butter', 'words]', 'center', 'dada', 'drive', 'time', 'salt', 'yours', "that's"])
file:HSLLD/HV1/MT//admmt1.cha
precision: 0.0975609756098
recall: 0.857142857143
true positives:['beef stew', 'bread', 'brownie', 'butter', 'carrots', 'chicken', 'coke', 'cookie', 'peas', 'pepper', 'potato chips', 'salt']
false positives: ['', '&=hums', '&=whining', '&aw', '[/]', '[<]', '[=!', '[>]', '[?]', 'air', 'area', "aren't", 'babbles', 'balloon', 'bike', 'bikes', 'bowl', 'bring', 'bunny', 'carrot haha', 'carrots>', 'center', 'circle', 'class', 'crying', 'cut', 'dad', 'dada', 'daddy', 'day', 'days', 'days>', 'dinner', "don't", 'drive', 'eat', 'end', 'fib', 'full]', 'full]>', 'gonna', 'ground', 'growly', 'honey', 'house', 'huh', 'hums', 'hums]', "it's", 'kids', 'me>', 'mm', 'mommy', 'more>', 'mouth', 'movie', 'movie>', 'mumbles', 'mumbling', 'num@o', 'of>', 'okay', 'party', 'piece', 'pieces', 'play', 'please', 'porch', 'reading', 'ride', 'right', 'school', 'school>', 'share', 'sings', 'sit', 'socks', 'someone', 'sounds', 'sounds]', 'spices', 'spoon', 'stool', 'sure', 'table', 'thank', 'thanks', "that's", "there's", 'things', 'time', 'today', 'tone]', 'top', 'tune]', 'uhoh', 'walk', 'wanna', "we're", 'whining]', 'witch', "won't", 'words', 'words]', 'xxx', 'yeah', 'yep', 'yes', "you're", 'yours', 'yum']
false negatives: ['butter bread', 'carrot']
# true pos: 12
# false pos: 111
# false neg: 2
HSLLD/HV1/MT//annmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*CHI: I'm going (.) do it to any boy that [>] +/.", '*MOT: sing not last night (.) zzz [>] .', '*CHI: zzz [<] .', '*CHI: okay .', '*CHI: ready ?', '*MOT: one +...', '*CHI: a one [!] a two [!] a three !', '*CHI: not last night before (.) a little old man came knocking at my door .', '*CHI: this what he said to [>] me .', '*MOT: <Anna> [<] ?', "*MOT: could sing that song xxx but you sang that song all summer long xxx can't remember the words ?", '*CHI: you are +...', "*CHI: no (.) brother (.) no (.) brother's gonna do something this one .", '*CHI: you are my &sun +/.', '*MOT: (..) there was the write+up in the paper after the play about the &-uh his brother ?', '*CHI: you are my [>] +...', '*MOT: <takin(g) that girl (.) she was xxx girl+friend and she was found xxx xxx them break up (.) and then it did> [>] .', '*CHI: <not last night before a little old man came knockin(g) at my door> [<] .', '*MOT: <when xxx> [>] .', '*CHI: <you are my sunshine my> [<] only sunshine .', '*CHI: you know what I do you care of I (.) you never know <how (.) if you> [>] +/.', '*MOT: <Anna (.) take it upstairs babe (.) take it> [<] upstairs .', "*CHI: I'm okay (.) I know why (.) I know the &=babbles .", '*FE1: all the time (.) know what I mean ?', "*FE1: it's fucking rude .", "*CHI: (..) I've gotten silly [/] &sil Mary .", '*FE1: what honey ?', "*CHI: he's acting (.) silly too .", '*FE1: (..) this girl was (.) actually on the phone with Chip .', "*FE1: I'm done (.) I was standing in the room .", "*FE1: don't point at me either .", '*CHI: (..) Bob you made good meatballs .', '*MA1: <come on> [>] .', '*CHI: <0 [=! small yell]> [<] .', '*MA1: www .', '*CHI: Kevin .', '*FE1: Kevin who ?', "*CHI: I'm gettin(g) more bread .", '*CHI: Kevin (.) Kevin (..) &-um +...', '*FE1: is he tall ?', '*CHI: yep .', '*FE1: how do <you know> [>] ?', '*CHI: <real tall> [<] .', '*CHI: (be)cause !', '*MA1: www .', '*CHI: (..) can we go on a yyy .', '*FE1: xxx stupid girl .', '*CHI: Mom .', '*MOT: Anna .', '*CHI: now we want some more .', '*CHI: (..) can I have more cherries ?', '*MOT: what honey xxx Anna finish your supper please .', '*MOT: now keep your stomach xxx you sit .', '*CHI: no !', '*MOT: after [!] you eat your supper .', "*CHI: no I want [/] I wan(t) (t)a go to Darlene's .", '*MOT: no [/] no I <told you> [>] +/.', '*CHI: why [<] ?', '*MOT: xxx go to bed .', "*CHI: no I never get to go to Darlene's .", '*CHI: Mom .', '*MA1: (..) how do you get it all over your face ?', "*MA1: (..) what do you mean you don't know ?", "*MOT: she's just a messy Bessie I guess .", '*MA1: is that like a slobby@wp Bobby ?', '*MOT: mhm .', '*CHI: (..) why are you getting it all over your face ?', "*MA1: (..) I dunna [: don't know] .", '*MA1: I got a big mouth .', '*CHI: &=giggles .', '*FE1: oh I saw your Dad today .', '*CHI: (..) Mom (.) no (.) &-um (.) Mary .', '*FE1: what honey ?', '*CHI: in the morning remember make their <bed right> [>] ?', '*MA1: <you brought one> [<] ?', '*FE1: yeah ?', '*MA1: alright save those .', '*CHI: on the radio it said right (.) <it said xxx> [>] .', '*MA1: I got a phone xxx .', '*FE1: &=laughing .', '*FE1: and you remembered me sayin(g) that to you huh ?', '*MA1: well if they want it now anyway they gotta work with Bell phone .', "*CHI: Bill O'Brien ?", '*MA1: xxx back call .', "*CHI: Bill O'Brien ?", '*CHI: some white right Bob ?', '*MA1: yeah (.) it says that if you want you can hire me out if you need help .', '*MA1: and they pay you by the hour .', '*MA1: but [/] but xxx pay you two bucks an hour &=laughs !', '*MA2: three bucks an hour ?', '*CHI: what ?', '*CHI: xxx (.) the red (.) have_to .', '*CHI: xxx tomato .', '*CHI: 0 [=! low humming sound] .', '*CHI: <0 [=! whining cry]> [>] !', '*FE1: xxx [<] .', "*MOT: I want you to go to bed that's why .", '*CHI: why ?', "*MOT: it's late .", '*CHI: (..) what time ?', '*MOT: eight thirty .', '*CHI: well I go to bed at ten thirty !', '*MOT: you do &=laughs ?', '*MA1: you go to bed when Mom tells you to go to bed .', "*MA1: you should be thankful you don't go to bed when I [!] tell you to go to bed .", "*MA1: if you were my kid you'd be in bed already .", "*MA1: seven o'clock (.) <every night> [>] !", '*MOT: xxx [<] let you stay up all night long huh ?', '*MA1: xxx so bad .', '*CHI: so why is Mary gonna (.) do xxx [>] ?', '*MA1: <yeah xxx> [<] spoiled rotten little baby .', '*MOT: yep .', "*MOT: who else gives you tea parties at eleven o'clock at night huh ?", '*CHI: Nana [= grandmother] .', '*MOT: Nana lets you have tea parties at night like I do ?', '*CHI: sometimes .', '*MOT: really ?', '*CHI: well (..) only xxx [>] +...', '*MOT: <my mother> [<] never told us to go to bed my father did .', "*CHI: well I'm done .", '*CHI: (..) I xxx what [>] ?', '*MA1: xxx [<] night xxx .', "*CHI: I'm done .", "*MOT: when he worked the second shift and didn't come home (un)til like eleven thirty .", '*CHI: &=gasps [<] .', "*MOT: my Mom'd say hurry up kids go upstairs your father's going to be home .", '*MA1: you know I see a bachelor on the roam .', '*MOT: exactly .', '*MOT: (..) enjoy xxx .', '*MOT: I can remember sittin(g) on top of the stairs (.) listenin(g) to them .', '*CHI: what (.) is the (.) xxx in here ?', "*CHI: Bob's in here .", '*MOT: since I was little and I went to the bed .', '*MA1: just like you .', '*MOT: yep .', '*CHI: (..) well I just big and I went to bed [>] .', '*MA1: be [<] done .', "*MA1: get up on the table and we'll wash .", '*CHI: I done .', '*MOT: I am [!] done .', '*MA1: xxx [>] .', '*CHI: <I am done> [<] !', '*MOT: I am finished .', '*MA1: (..) may I be excused ?', '*MA1: mm (.) I used to have_to say that when I was at the table .', '*MA1: done ?', '*CHI: no xxx .', '*MOT: a little teaspoon .', "*MOT: I'm gonna just xxx Anna .", '*MA1: xxx bet it tastes bad too .', '*MOT: yeah .', "*MOT: it's on the way out .", '*MOT: definitely .', '*CHI: you <know what> [>] ?', "*MA1: <it's dated> [<] June twenty first .", '*MOT: really ?', "*CHI: you know why I can't <come with you> [>] ?", '*MOT: <the milk> [<] ?', '*MA1: yeah .', '*MOT: no kidding .', '*MA1: she just said that she thinks that <it tastes bad too> [>] +...', '*MOT: xxx [<] .', "*MA1: well then it's gross milk don't buy it anymore .", '*CHI: xxx ?', "*MOT: no it's skim milk it's good !", "*MOT: skim milk I know that's what skim milk tastes like .", '*MOT: that just tasted kind o(f) weird .', '*MA1: yeah (.) to me too .', '*MOT: has an after taste to it .', "*MOT: like it's a <kind of food or somethin(g)> [>] .", '*FE1: xxx [<] .', "*MOT: I don't know xxx [>] .", "*CHI: <I'm done> [<] .", "*MOT: good girl <we'll see you> [>] .", '*MA1: you sit [<] .', '*MOT: xxx [>] .', '*MA1: you [!] boot in the ass .', "*MOT: oh xxx don't .", '*MA1: loser layin(g) on the couch .', '*MA1: yes you !', '*MOT: Bob watch .', '*MOT: watch out .', '*CHI: Mom ?', '*MOT: yes ?', '*CHI: you said I could have dessert .', '*MOT: I xxx what I said .', '*MA1: you said you [//] she could help you make the pie .', "*MOT: well I didn't make it though did I so there obviously is no dessert then if I did not make it !", '*CHI: oh Mom .', '*MOT: go upstairs and get xxx [>] .', "*CHI: why didn't you [<] make it ?", "*MOT: I didn't feel [!] like it .", '*MA1: xxx [>] .', '*CHI: <Mary> [<] ?', '*CHI: do I xxx too ?', '*MOT: this is no xxx [>] .', "*MA1: xxx [<] doesn't want to sell it to me huh ?", '*MA1: vicious kids .', '*FE1: xxx .', '*MOT: xxx [>] .', '*MA1: <xxx has nothing to do with him> [<] .', '*MOT: xxx .', "*CHI: why doesn't want to go ?", "*MOT: honey I don't know (.) I don't have the time you know ?", "*CHI: Mom why can't I +/.", '*MOT: xxx [>] .', '*MA1: Anna go get the face cloth like she asked !', "*FE1: where's the V_C_R ?", "*MA1: and that's it !", "*MA1: you're not going xxx .", "*MA1: (..) you know if you did what you were supposed to do when you're told to do it you might be able to go out at night and do things you know (.) like a good girl gets to do !", '*MA1: but instead you dilly+dally and you get yelled at Anna .']
loading solution set
LINE NO ->  16
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  23
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  27
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  34
LINE NO ->  38
LINE NO ->  41
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  45
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  51
LINE NO ->  56
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  60
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 0, 99: 0, 100: 0, -1: 1})
LINE NO ->  68
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  82
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 0, 89: 0, 90: 0})
LINE NO ->  89
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  93
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 1, 116: 1, 117: 1, 118: 0, 119: 0, 120: 0, -1: 1})
LINE NO ->  101
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  107
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  110
sunshine
sunshine sunshine 416
[('you', 'PRP'), ('are', 'VBP'), ('my', 'PRP$'), ('sunshine', 'JJ'), ('my', 'PRP$'), ('only', 'JJ'), ('sunshine', 'NN')]
['sunshine']
('food -> ', [['sunshine', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  115
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  123
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0})
LINE NO ->  128
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  135
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  140
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  143
LINE NO ->  146
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  149
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  152
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  157
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  165
meatballs
meatballs meatballs 197
[('bob', 'NN'), ('you', 'PRP'), ('made', 'VBD'), ('good', 'JJ'), ('meatballs', 'NNS')]
['meatballs']
('food -> ', [['meatballs', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  172
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  173
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  175
LINE NO ->  179
LINE NO ->  182
bread
bread bread 186
[('i', 'JJ'), ('m', 'VBP'), ('gettin', 'JJ'), ('g', 'NN'), ('more', 'RBR'), ('bread', 'NN')]
['bread']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  185
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  189
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  192
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  196
LINE NO ->  199
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  202
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  206
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  208
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  214
LINE NO ->  218
LINE NO ->  222
LINE NO ->  225
cherries
cherries cherries 83
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('cherries', 'NNS')]
['cherries']
('food -> ', [['cherries', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  229
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN'), ('xxx', 'NN'), ('anna', 'IN'), ('finish', 'JJ'), ('your', 'PRP$'), ('supper', 'JJ'), ('please', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  233
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  236
LINE NO ->  240
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  243
LINE NO ->  249
LINE NO ->  252
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  259
LINE NO ->  265
LINE NO ->  270
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  275
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  285
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  289
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0})
LINE NO ->  298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  301
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  305
LINE NO ->  306
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  309
LINE NO ->  312
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  315
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  323
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  326
LINE NO ->  329
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  334
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  337
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  338
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  343
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0})
LINE NO ->  348
LINE NO ->  351
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  354
LINE NO ->  357
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  360
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0})
LINE NO ->  367
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  371
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  374
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  377
LINE NO ->  380
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  383
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  387
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  389
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  390
LINE NO ->  391
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  396
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  401
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  404
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  409
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  412
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  417
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  422
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  427
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, -1: 1})
LINE NO ->  434
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  439
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  442
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  447
LINE NO ->  450
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  453
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94718c170>)
[('yeah', 'NN'), ('xxx', 'NN'), ('spoiled', 'VBD'), ('rotten', 'JJ'), ('little', 'JJ'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  456
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  459
tea
tea tea 2
[('who', 'WP'), ('else', 'VBP'), ('gives', 'VBZ'), ('you', 'PRP'), ('tea', 'JJ'), ('parties', 'NNS'), ('at', 'IN'), ('eleven', 'RB'), ('o', 'JJ'), ('clock', 'NN'), ('at', 'IN'), ('night', 'NN'), ('huh', 'NN')]
['tea']
('food -> ', [['tea', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  465
LINE NO ->  468
tea
tea tea 2
[('nana', 'JJ'), ('lets', 'NNS'), ('you', 'PRP'), ('have', 'VBP'), ('tea', 'VBN'), ('parties', 'NNS'), ('at', 'IN'), ('night', 'NN'), ('like', 'IN'), ('i', 'NN'), ('do', 'VBP')]
['tea']
('food -> ', [['tea', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  474
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  481
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0})
LINE NO ->  490
LINE NO ->  493
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  497
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  500
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  504
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  511
LINE NO ->  512
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0})
LINE NO ->  519
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  524
LINE NO ->  527
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  530
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, -1: 1})
LINE NO ->  538
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  542
LINE NO ->  545
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  550
LINE NO ->  553
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  556
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  561
LINE NO ->  564
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9456b0ea8>)
[('get', 'VB'), ('up', 'RP'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('ll', 'VBP'), ('wash', 'JJ')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  569
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  572
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  576
LINE NO ->  577
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  580
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  583
LINE NO ->  586
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947176a28>)
[('mm', 'NN'), ('i', 'NN'), ('used', 'VBN'), ('to', 'TO'), ('have', 'VB'), ('to', 'TO'), ('say', 'VB'), ('that', 'IN'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0})
LINE NO ->  592
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  599
LINE NO ->  603
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  607
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  610
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  613
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  616
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  619
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  624
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  629
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  639
milk
milk milk 46
[('the', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  642
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  645
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  648
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0})
LINE NO ->  653
LINE NO ->  654
milk
milk milk 46
[('well', 'RB'), ('then', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('gross', 'JJ'), ('milk', 'NN'), ('don', 'NN'), ('t', 'NN'), ('buy', 'VB'), ('it', 'PRP'), ('anymore', 'RB')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  659
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  661
milk
milk milk 46
[('no', 'DT'), ('it', 'PRP'), ('s', 'VBZ'), ('skim', 'JJ'), ('milk', 'NN'), ('it', 'PRP'), ('s', 'VBD'), ('good', 'JJ')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  666
milk
milk milk 46
[('skim', 'JJ'), ('milk', 'NN'), ('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('what', 'WP'), ('skim', 'VBP'), ('milk', 'NN'), ('tastes', 'NNS'), ('like', 'IN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  671
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  674
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  677
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  680
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  686
LINE NO ->  687
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  690
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  693
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  696
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  699
LINE NO ->  700
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  703
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  706
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  709
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  712
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  715
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  719
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  723
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  727
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947176320>)
[('you', 'PRP'), ('said', 'VBD'), ('i', 'NN'), ('could', 'MD'), ('have', 'VB'), ('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  730
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  733
pie
pie pie 290
[('you', 'PRP'), ('said', 'VBD'), ('you', 'PRP'), ('she', 'PRP'), ('could', 'MD'), ('help', 'VB'), ('you', 'PRP'), ('make', 'VB'), ('the', 'DT'), ('pie', 'NN')]
['pie']
('food -> ', [['pie', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  738
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947176b48>)
[('well', 'RB'), ('i', 'JJ'), ('didn', 'VBP'), ('t', 'NNS'), ('make', 'VBP'), ('it', 'PRP'), ('though', 'IN'), ('did', 'VBD'), ('i', 'VB'), ('so', 'RB'), ('there', 'RB'), ('obviously', 'RB'), ('is', 'VBZ'), ('no', 'DT'), ('dessert', 'NN'), ('then', 'RB'), ('if', 'IN'), ('i', 'NNS'), ('did', 'VBD'), ('not', 'RB'), ('make', 'VB'), ('it', 'PRP')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0})
LINE NO ->  748
LINE NO ->  752
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  756
LINE NO ->  760
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  765
LINE NO ->  767
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  771
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  775
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  778
LINE NO ->  783
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  786
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  787
LINE NO ->  788
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  791
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  793
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  797
honey
honey honey 304
[('honey', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'WDT'), ('have', 'VBP'), ('the', 'DT'), ('time', 'NN'), ('you', 'PRP'), ('know', 'VBP')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  803
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  807
LINE NO ->  808
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  814
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  817
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  820
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  823
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 1, 118: 1, 119: 1, 120: 1, 121: 1, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 1, 131: 1, 132: 1, 133: 1, 134: 1, 135: 1, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 1, 163: 1, 164: 1, 165: 1, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, -1: 1})
LINE NO ->  836
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
loading solution set
calculating
set([(183, (25, 30)), (226, (27, 35)), (655, (27, 31)), (640, (11, 15)), (734, (52, 55)), (166, (29, 38)), (667, (35, 44)), (384, (10, 16)), (662, (14, 23)), (667, (6, 15))])
[((166, (29, 38)), '*CHI:\t(..) Bob you made good meatballs .\n'), ((183, (25, 30)), "*CHI:\tI'm gettin(g) more bread .\n"), ((226, (27, 35)), '*CHI:\t(..) can I have more cherries ?\n'), ((384, (10, 16)), '*CHI:\txxx tomato .\n'), ((640, (11, 15)), '*MOT:\t<the milk> [<] ?\n'), ((655, (27, 31)), "*MA1:\twell then it's gross milk don't buy it anymore .\n"), ((662, (14, 23)), "*MOT:\tno it's skim milk it's good !\n"), ((667, (6, 15)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((667, (35, 44)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((734, (52, 55)), '*MA1:\tyou said you [//] she could help you make the pie .\n')]
set([(388, (8, 11)), (505, (79, 85)), (372, (-1, 4)), (667, (45, 51)), (352, (-1, 4)), (460, (29, 36)), (390, (27, 30)), (381, (10, 13)), (761, (-1, 4)), (675, (11, 14)), (24, (20, 25)), (375, (12, 17)), (667, (40, 44)), (73, (42, 47)), (57, (13, 16)), (330, (13, 18)), (573, (-1, 4)), (384, (10, 16)), (713, (10, 15)), (649, (45, 51)), (672, (-1, 4)), (776, (-1, 4)), (226, (27, 35)), (79, (-1, 4)), (604, (10, 15)), (324, (6, 10)), (307, (6, 8)), (61, (27, 30)), (498, (6, 9)), (299, (28, 33)), (608, (10, 13)), (739, (66, 73)), (640, (17, 20)), (170, (12, 15)), (824, (130, 136)), (662, (19, 23)), (614, (6, 10)), (423, (16, 19)), (428, (-1, 4)), (108, (-1, 4)), (596, (9, 12)), (94, (115, 118)), (728, (28, 35)), (634, (-1, 4)), (809, (27, 32)), (173, (19, 25)), (321, (24, 27)), (423, (-1, 4)), (478, (-1, 4)), (587, (58, 63)), (707, (-1, 4)), (789, (39, 42)), (798, (46, 50)), (581, (-1, 4)), (768, (13, 16)), (486, (52, 58)), (672, (33, 38)), (539, (26, 29)), (372, (10, 13)), (565, (20, 25)), (667, (6, 10)), (410, (12, 18)), (170, (16, 19)), (150, (6, 10)), (73, (9, 12)), (286, (-1, 4)), (375, (-1, 4)), (90, (-1, 4)), (821, (-1, 4)), (83, (81, 88)), (640, (11, 16)), (513, (28, 32)), (397, (-1, 4)), (731, (-1, 4)), (83, (41, 46)), (720, (-1, 4)), (643, (6, 10)), (24, (-1, 4)), (697, (14, 17)), (469, (40, 45)), (531, (-1, 4)), (294, (48, 52)), (413, (30, 36)), (147, (11, 16)), (494, (22, 25)), (772, (-1, 4)), (570, (-1, 4)), (358, (11, 22)), (257, (6, 9)), (565, (-1, 4)), (94, (21, 25)), (734, (52, 55)), (316, (53, 56)), (681, (48, 51)), (352, (15, 19)), (61, (93, 98)), (701, (26, 29)), (672, (23, 27)), (761, (20, 23)), (413, (19, 22)), (230, (11, 20)), (815, (-1, 4)), (546, (43, 46)), (324, (-1, 4)), (691, (11, 16)), (734, (-1, 4)), (212, (17, 21)), (716, (-1, 4)), (102, (68, 73)), (728, (-1, 4)), (102, (74, 77)), (338, (-1, 4)), (257, (16, 19)), (804, (14, 19)), (102, (42, 45)), (307, (24, 29)), (675, (6, 10)), (691, (17, 20)), (513, (50, 58)), (102, (16, 21)), (46, (69, 73)), (528, (11, 16)), (290, (6, 9)), (701, (-1, 4)), (190, (-1, 4)), (173, (26, 29)), (200, (18, 21)), (141, (6, 10)), (469, (25, 28)), (824, (162, 166)), (234, (20, 27)), (469, (29, 36)), (587, (9, 12)), (271, (43, 47)), (299, (22, 27)), (46, (-1, 4)), (335, (-1, 4)), (460, (-1, 4)), (565, (30, 35)), (158, (15, 18)), (124, (12, 15)), (435, (-1, 4)), (61, (74, 79)), (655, (21, 31)), (158, (-1, 4)), (174, (6, 9)), (776, (21, 24)), (792, (6, 9)), (183, (25, 30)), (469, (11, 15)), (116, (-1, 4)), (111, (-1, 4)), (111, (27, 30)), (330, (-1, 4)), (200, (12, 17)), (69, (-1, 4)), (454, (43, 47)), (520, (39, 43)), (153, (45, 50)), (710, (6, 9)), (73, (32, 41)), (203, (-1, 4)), (617, (-1, 4)), (697, (-1, 4)), (554, (6, 9)), (520, (-1, 4)), (724, (6, 9)), (505, (-1, 4)), (513, (71, 75)), (111, (6, 10)), (405, (16, 20)), (794, (18, 22)), (681, (-1, 4)), (28, (6, 9)), (17, (-1, 4)), (634, (43, 46)), (141, (19, 23)), (688, (-1, 4)), (498, (14, 19)), (94, (-1, 4)), (83, (57, 61)), (388, (24, 30)), (435, (21, 24)), (153, (16, 20)), (405, (-1, 4)), (90, (17, 20)), (129, (15, 18)), (428, (45, 48)), (501, (-1, 4)), (253, (10, 13)), (531, (34, 37)), (482, (25, 28)), (368, (30, 34)), (704, (13, 18)), (313, (11, 16)), (339, (-1, 4)), (241, (-1, 4)), (505, (32, 37)), (375, (21, 25)), (61, (-1, 4)), (565, (36, 40)), (701, (14, 18)), (451, (21, 26)), (435, (37, 40)), (361, (6, 10)), (193, (6, 9)), (460, (47, 54)), (630, (-1, 4)), (451, (-1, 4)), (276, (-1, 4)), (818, (-1, 4)), (655, (32, 37)), (486, (10, 17)), (136, (19, 22)), (46, (45, 48)), (798, (6, 11)), (824, (117, 122)), (824, (-1, 4)), (32, (6, 10)), (546, (-1, 4)), (557, (-1, 4)), (368, (-1, 4)), (486, (18, 21)), (136, (14, 18)), (809, (22, 26)), (111, (40, 48)), (646, (9, 16)), (372, (43, 47)), (321, (-1, 4)), (28, (10, 13)), (475, (-1, 4)), (611, (6, 10)), (241, (29, 35)), (625, (12, 18)), (789, (-1, 4)), (372, (34, 39)), (46, (15, 20)), (335, (14, 19)), (578, (18, 21)), (392, (-1, 4)), (620, (22, 25)), (681, (18, 23)), (505, (54, 58)), (649, (61, 64)), (207, (6, 9)), (837, (-1, 4)), (344, (49, 53)), (460, (64, 67)), (694, (11, 15)), (166, (29, 38)), (111, (18, 26)), (753, (30, 33)), (753, (-1, 4)), (678, (-1, 4)), (94, (26, 29)), (440, (38, 41)), (531, (45, 51)), (443, (14, 17)), (321, (6, 10)), (17, (33, 36)), (707, (28, 33)), (42, (12, 15)), (443, (34, 39)), (789, (34, 38)), (620, (-1, 4)), (257, (-1, 4)), (335, (20, 23)), (587, (6, 8)), (102, (6, 10)), (61, (58, 64)), (667, (11, 15)), (789, (15, 22)), (784, (14, 18)), (809, (-1, 4)), (660, (6, 9)), (163, (6, 11)), (821, (23, 26)), (787, (6, 9)), (460, (25, 28)), (634, (38, 42)), (302, (18, 23)), (316, (13, 20)), (281, (6, 11)), (402, (6, 10)), (344, (64, 69)), (158, (41, 45)), (660, (-1, 4)), (209, (26, 29)), (372, (22, 25)), (302, (-1, 4)), (662, (14, 18)), (163, (12, 17)), (678, (19, 24)), (61, (22, 26)), (241, (12, 15)), (457, (6, 9)), (102, (-1, 4)), (129, (10, 14)), (230, (45, 51)), (593, (-1, 4)), (418, (-1, 4)), (460, (58, 63)), (614, (18, 21)), (316, (-1, 4)), (681, (27, 31)), (186, (27, 31)), (716, (6, 11))])
[((17, (-1, 4)), "*CHI:\tI'm going (.) do it to any boy that [>] +/.\n"), ((17, (33, 36)), "*CHI:\tI'm going (.) do it to any boy that [>] +/.\n"), ((24, (-1, 4)), '*MOT:\tsing not last night (.) zzz [>] .\n'), ((24, (20, 25)), '*MOT:\tsing not last night (.) zzz [>] .\n'), ((28, (6, 9)), '*CHI:\tzzz [<] .\n'), ((28, (10, 13)), '*CHI:\tzzz [<] .\n'), ((32, (6, 10)), '*CHI:\tokay .\n'), ((42, (12, 15)), '*CHI:\ta one [!] a two [!] a three !\n'), ((46, (-1, 4)), '*CHI:\tnot last night before (.) a little old man came knocking at my door .\n'), ((46, (15, 20)), '*CHI:\tnot last night before (.) a little old man came knocking at my door .\n'), ((46, (45, 48)), '*CHI:\tnot last night before (.) a little old man came knocking at my door .\n'), ((46, (69, 73)), '*CHI:\tnot last night before (.) a little old man came knocking at my door .\n'), ((57, (13, 16)), '*MOT:\t<Anna> [<] ?\n'), ((61, (-1, 4)), "*MOT:\tcould sing that song xxx but you sang that song all summer long xxx can't remember the words ?\n"), ((61, (22, 26)), "*MOT:\tcould sing that song xxx but you sang that song all summer long xxx can't remember the words ?\n"), ((61, (27, 30)), "*MOT:\tcould sing that song xxx but you sang that song all summer long xxx can't remember the words ?\n"), ((61, (58, 64)), "*MOT:\tcould sing that song xxx but you sang that song all summer long xxx can't remember the words ?\n"), ((61, (74, 79)), "*MOT:\tcould sing that song xxx but you sang that song all summer long xxx can't remember the words ?\n"), ((61, (93, 98)), "*MOT:\tcould sing that song xxx but you sang that song all summer long xxx can't remember the words ?\n"), ((69, (-1, 4)), '*CHI:\tyou are +...\n'), ((73, (9, 12)), "*CHI:\tno (.) brother (.) no (.) brother's gonna do something this one .\n"), ((73, (32, 41)), "*CHI:\tno (.) brother (.) no (.) brother's gonna do something this one .\n"), ((73, (42, 47)), "*CHI:\tno (.) brother (.) no (.) brother's gonna do something this one .\n"), ((79, (-1, 4)), '*CHI:\tyou are my &sun +/.\n'), ((83, (41, 46)), '*MOT:\t(..) there was the write+up in the paper after the play about the &-uh his brother ?\n'), ((83, (57, 61)), '*MOT:\t(..) there was the write+up in the paper after the play about the &-uh his brother ?\n'), ((83, (81, 88)), '*MOT:\t(..) there was the write+up in the paper after the play about the &-uh his brother ?\n'), ((90, (-1, 4)), '*CHI:\tyou are my [>] +...\n'), ((90, (17, 20)), '*CHI:\tyou are my [>] +...\n'), ((94, (-1, 4)), '*MOT:\t<takin(g) that girl (.) she was xxx girl+friend and she was found xxx xxx them break up (.) and then it did> [>] .\n'), ((94, (21, 25)), '*MOT:\t<takin(g) that girl (.) she was xxx girl+friend and she was found xxx xxx them break up (.) and then it did> [>] .\n'), ((94, (26, 29)), '*MOT:\t<takin(g) that girl (.) she was xxx girl+friend and she was found xxx xxx them break up (.) and then it did> [>] .\n'), ((94, (115, 118)), '*MOT:\t<takin(g) that girl (.) she was xxx girl+friend and she was found xxx xxx them break up (.) and then it did> [>] .\n'), ((102, (-1, 4)), '*CHI:\t<not last night before a little old man came knockin(g) at my door> [<] .\n'), ((102, (6, 10)), '*CHI:\t<not last night before a little old man came knockin(g) at my door> [<] .\n'), ((102, (16, 21)), '*CHI:\t<not last night before a little old man came knockin(g) at my door> [<] .\n'), ((102, (42, 45)), '*CHI:\t<not last night before a little old man came knockin(g) at my door> [<] .\n'), ((102, (68, 73)), '*CHI:\t<not last night before a little old man came knockin(g) at my door> [<] .\n'), ((102, (74, 77)), '*CHI:\t<not last night before a little old man came knockin(g) at my door> [<] .\n'), ((108, (-1, 4)), '*MOT:\t<when xxx> [>] .\n'), ((111, (-1, 4)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((111, (6, 10)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((111, (18, 26)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((111, (27, 30)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((111, (40, 48)), '*CHI:\t<you are my sunshine my> [<] only sunshine .\n'), ((116, (-1, 4)), '*CHI:\tyou know what I do you care of I (.) you never know <how (.) if you> [>] +/.\n'), ((124, (12, 15)), '*MOT:\t<Anna (.) take it upstairs babe (.) take it> [<] upstairs .\n'), ((129, (10, 14)), "*CHI:\tI'm okay (.) I know why (.) I know the &=babbles .\n"), ((129, (15, 18)), "*CHI:\tI'm okay (.) I know why (.) I know the &=babbles .\n"), ((136, (14, 18)), '*FE1:\tall the time (.) know what I mean ?\n'), ((136, (19, 22)), '*FE1:\tall the time (.) know what I mean ?\n'), ((141, (6, 10)), "*FE1:\tit's fucking rude .\n"), ((141, (19, 23)), "*FE1:\tit's fucking rude .\n"), ((147, (11, 16)), '*FE1:\twhat honey ?\n'), ((150, (6, 10)), "*CHI:\the's acting (.) silly too .\n"), ((153, (16, 20)), '*FE1:\t(..) this girl was (.) actually on the phone with Chip .\n'), ((153, (45, 50)), '*FE1:\t(..) this girl was (.) actually on the phone with Chip .\n'), ((158, (-1, 4)), "*FE1:\tI'm done (.) I was standing in the room .\n"), ((158, (15, 18)), "*FE1:\tI'm done (.) I was standing in the room .\n"), ((158, (41, 45)), "*FE1:\tI'm done (.) I was standing in the room .\n"), ((163, (6, 11)), "*FE1:\tdon't point at me either .\n"), ((163, (12, 17)), "*FE1:\tdon't point at me either .\n"), ((166, (29, 38)), '*CHI:\t(..) Bob you made good meatballs .\n'), ((170, (12, 15)), '*MA1:\t<come on> [>] .\n'), ((170, (16, 19)), '*MA1:\t<come on> [>] .\n'), ((173, (19, 25)), '*CHI:\t<0 [=! small yell]> [<] .\n'), ((173, (26, 29)), '*CHI:\t<0 [=! small yell]> [<] .\n'), ((174, (6, 9)), '*MA1:\twww .\n'), ((183, (25, 30)), "*CHI:\tI'm gettin(g) more bread .\n"), ((186, (27, 31)), '*CHI:\tKevin (.) Kevin (..) &-um +...\n'), ((190, (-1, 4)), '*FE1:\tis he tall ?\n'), ((193, (6, 9)), '*CHI:\tyep .\n'), ((200, (12, 17)), '*CHI:\t<real tall> [<] .\n'), ((200, (18, 21)), '*CHI:\t<real tall> [<] .\n'), ((203, (-1, 4)), '*CHI:\t(be)cause !\n'), ((207, (6, 9)), '*MA1:\twww .\n'), ((209, (26, 29)), '*CHI:\t(..) can we go on a yyy .\n'), ((212, (17, 21)), '*FE1:\txxx stupid girl .\n'), ((226, (27, 35)), '*CHI:\t(..) can I have more cherries ?\n'), ((230, (11, 20)), '*MOT:\twhat honey xxx Anna finish your supper please .\n'), ((230, (45, 51)), '*MOT:\twhat honey xxx Anna finish your supper please .\n'), ((234, (20, 27)), '*MOT:\tnow keep your stomach xxx you sit .\n'), ((241, (-1, 4)), '*MOT:\tafter [!] you eat your supper .\n'), ((241, (12, 15)), '*MOT:\tafter [!] you eat your supper .\n'), ((241, (29, 35)), '*MOT:\tafter [!] you eat your supper .\n'), ((253, (10, 13)), '*CHI:\twhy [<] ?\n'), ((257, (-1, 4)), '*MOT:\txxx go to bed .\n'), ((257, (6, 9)), '*MOT:\txxx go to bed .\n'), ((257, (16, 19)), '*MOT:\txxx go to bed .\n'), ((271, (43, 47)), '*MA1:\t(..) how do you get it all over your face ?\n'), ((276, (-1, 4)), "*MA1:\t(..) what do you mean you don't know ?\n"), ((281, (6, 11)), "*MOT:\tshe's just a messy Bessie I guess .\n"), ((286, (-1, 4)), '*MA1:\tis that like a slobby@wp Bobby ?\n'), ((290, (6, 9)), '*MOT:\tmhm .\n'), ((294, (48, 52)), '*CHI:\t(..) why are you getting it all over your face ?\n'), ((299, (22, 27)), "*MA1:\t(..) I dunna [: don't know] .\n"), ((299, (28, 33)), "*MA1:\t(..) I dunna [: don't know] .\n"), ((302, (-1, 4)), '*MA1:\tI got a big mouth .\n'), ((302, (18, 23)), '*MA1:\tI got a big mouth .\n'), ((307, (6, 8)), '*FE1:\toh I saw your Dad today .\n'), ((307, (24, 29)), '*FE1:\toh I saw your Dad today .\n'), ((313, (11, 16)), '*FE1:\twhat honey ?\n'), ((316, (-1, 4)), '*CHI:\tin the morning remember make their <bed right> [>] ?\n'), ((316, (13, 20)), '*CHI:\tin the morning remember make their <bed right> [>] ?\n'), ((316, (53, 56)), '*CHI:\tin the morning remember make their <bed right> [>] ?\n'), ((321, (-1, 4)), '*MA1:\t<you brought one> [<] ?\n'), ((321, (6, 10)), '*MA1:\t<you brought one> [<] ?\n'), ((321, (24, 27)), '*MA1:\t<you brought one> [<] ?\n'), ((324, (-1, 4)), '*FE1:\tyeah ?\n'), ((324, (6, 10)), '*FE1:\tyeah ?\n'), ((330, (-1, 4)), '*CHI:\ton the radio it said right (.) <it said xxx> [>] .\n'), ((330, (13, 18)), '*CHI:\ton the radio it said right (.) <it said xxx> [>] .\n'), ((335, (-1, 4)), '*MA1:\tI got a phone xxx .\n'), ((335, (14, 19)), '*MA1:\tI got a phone xxx .\n'), ((335, (20, 23)), '*MA1:\tI got a phone xxx .\n'), ((338, (-1, 4)), '*FE1:\t&=laughing .\n'), ((339, (-1, 4)), '*FE1:\tand you remembered me sayin(g) that to you huh ?\n'), ((344, (49, 53)), '*MA1:\twell if they want it now anyway they gotta work with Bell phone .\n'), ((344, (64, 69)), '*MA1:\twell if they want it now anyway they gotta work with Bell phone .\n'), ((352, (-1, 4)), '*MA1:\txxx back call .\n'), ((352, (15, 19)), '*MA1:\txxx back call .\n'), ((358, (11, 22)), '*CHI:\tsome white right Bob ?\n'), ((361, (6, 10)), '*MA1:\tyeah (.) it says that if you want you can hire me out if you need help .\n'), ((368, (-1, 4)), '*MA1:\tand they pay you by the hour .\n'), ((368, (30, 34)), '*MA1:\tand they pay you by the hour .\n'), ((372, (-1, 4)), '*MA1:\tbut [/] but xxx pay you two bucks an hour &=laughs !\n'), ((372, (10, 13)), '*MA1:\tbut [/] but xxx pay you two bucks an hour &=laughs !\n'), ((372, (22, 25)), '*MA1:\tbut [/] but xxx pay you two bucks an hour &=laughs !\n'), ((372, (34, 39)), '*MA1:\tbut [/] but xxx pay you two bucks an hour &=laughs !\n'), ((372, (43, 47)), '*MA1:\tbut [/] but xxx pay you two bucks an hour &=laughs !\n'), ((375, (-1, 4)), '*MA2:\tthree bucks an hour ?\n'), ((375, (12, 17)), '*MA2:\tthree bucks an hour ?\n'), ((375, (21, 25)), '*MA2:\tthree bucks an hour ?\n'), ((381, (10, 13)), '*CHI:\txxx (.) the red (.) have_to .\n'), ((384, (10, 16)), '*CHI:\txxx tomato .\n'), ((388, (8, 11)), '*CHI:\t0 [=! low humming sound] .\n'), ((388, (24, 30)), '*CHI:\t0 [=! low humming sound] .\n'), ((390, (27, 30)), '*CHI:\t<0 [=! whining cry]> [>] !\n'), ((392, (-1, 4)), "*MOT:\tI want you to go to bed that's why .\n"), ((397, (-1, 4)), '*CHI:\twhy ?\n'), ((402, (6, 10)), "*MOT:\tit's late .\n"), ((405, (-1, 4)), '*CHI:\t(..) what time ?\n'), ((405, (16, 20)), '*CHI:\t(..) what time ?\n'), ((410, (12, 18)), '*MOT:\teight thirty .\n'), ((413, (19, 22)), '*CHI:\twell I go to bed at ten thirty !\n'), ((413, (30, 36)), '*CHI:\twell I go to bed at ten thirty !\n'), ((418, (-1, 4)), '*MOT:\tyou do &=laughs ?\n'), ((423, (-1, 4)), '*MA1:\tyou go to bed when Mom tells you to go to bed .\n'), ((423, (16, 19)), '*MA1:\tyou go to bed when Mom tells you to go to bed .\n'), ((428, (-1, 4)), "*MA1:\tyou should be thankful you don't go to bed when I [!] tell you to go to bed .\n"), ((428, (45, 48)), "*MA1:\tyou should be thankful you don't go to bed when I [!] tell you to go to bed .\n"), ((435, (-1, 4)), "*MA1:\tif you were my kid you'd be in bed already .\n"), ((435, (21, 24)), "*MA1:\tif you were my kid you'd be in bed already .\n"), ((435, (37, 40)), "*MA1:\tif you were my kid you'd be in bed already .\n"), ((440, (38, 41)), "*MA1:\tseven o'clock (.) <every night> [>] !\n"), ((443, (14, 17)), '*MOT:\txxx [<] let you stay up all night long huh ?\n'), ((443, (34, 39)), '*MOT:\txxx [<] let you stay up all night long huh ?\n'), ((451, (-1, 4)), '*CHI:\tso why is Mary gonna (.) do xxx [>] ?\n'), ((451, (21, 26)), '*CHI:\tso why is Mary gonna (.) do xxx [>] ?\n'), ((454, (43, 47)), '*MA1:\t<yeah xxx> [<] spoiled rotten little baby .\n'), ((457, (6, 9)), '*MOT:\tyep .\n'), ((460, (-1, 4)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((460, (25, 28)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((460, (29, 36)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((460, (47, 54)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((460, (58, 63)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((460, (64, 67)), "*MOT:\twho else gives you tea parties at eleven o'clock at night huh ?\n"), ((469, (11, 15)), '*MOT:\tNana lets you have tea parties at night like I do ?\n'), ((469, (25, 28)), '*MOT:\tNana lets you have tea parties at night like I do ?\n'), ((469, (29, 36)), '*MOT:\tNana lets you have tea parties at night like I do ?\n'), ((469, (40, 45)), '*MOT:\tNana lets you have tea parties at night like I do ?\n'), ((475, (-1, 4)), '*CHI:\tsometimes .\n'), ((478, (-1, 4)), '*MOT:\treally ?\n'), ((482, (25, 28)), '*CHI:\twell (..) only xxx [>] +...\n'), ((486, (10, 17)), '*MOT:\t<my mother> [<] never told us to go to bed my father did .\n'), ((486, (18, 21)), '*MOT:\t<my mother> [<] never told us to go to bed my father did .\n'), ((486, (52, 58)), '*MOT:\t<my mother> [<] never told us to go to bed my father did .\n'), ((494, (22, 25)), '*CHI:\t(..) I xxx what [>] ?\n'), ((498, (6, 9)), '*MA1:\txxx [<] night xxx .\n'), ((498, (14, 19)), '*MA1:\txxx [<] night xxx .\n'), ((501, (-1, 4)), "*CHI:\tI'm done .\n"), ((505, (-1, 4)), "*MOT:\twhen he worked the second shift and didn't come home (un)til like eleven thirty .\n"), ((505, (32, 37)), "*MOT:\twhen he worked the second shift and didn't come home (un)til like eleven thirty .\n"), ((505, (54, 58)), "*MOT:\twhen he worked the second shift and didn't come home (un)til like eleven thirty .\n"), ((505, (79, 85)), "*MOT:\twhen he worked the second shift and didn't come home (un)til like eleven thirty .\n"), ((513, (28, 32)), "*MOT:\tmy Mom'd say hurry up kids go upstairs your father's going to be home .\n"), ((513, (50, 58)), "*MOT:\tmy Mom'd say hurry up kids go upstairs your father's going to be home .\n"), ((513, (71, 75)), "*MOT:\tmy Mom'd say hurry up kids go upstairs your father's going to be home .\n"), ((520, (-1, 4)), '*MA1:\tyou know I see a bachelor on the roam .\n'), ((520, (39, 43)), '*MA1:\tyou know I see a bachelor on the roam .\n'), ((528, (11, 16)), '*MOT:\t(..) enjoy xxx .\n'), ((531, (-1, 4)), '*MOT:\tI can remember sittin(g) on top of the stairs (.) listenin(g) to them .\n'), ((531, (34, 37)), '*MOT:\tI can remember sittin(g) on top of the stairs (.) listenin(g) to them .\n'), ((531, (45, 51)), '*MOT:\tI can remember sittin(g) on top of the stairs (.) listenin(g) to them .\n'), ((539, (26, 29)), '*CHI:\twhat (.) is the (.) xxx in here ?\n'), ((546, (-1, 4)), '*MOT:\tsince I was little and I went to the bed .\n'), ((546, (43, 46)), '*MOT:\tsince I was little and I went to the bed .\n'), ((554, (6, 9)), '*MOT:\tyep .\n'), ((557, (-1, 4)), '*CHI:\t(..) well I just big and I went to bed [>] .\n'), ((565, (-1, 4)), "*MA1:\tget up on the table and we'll wash .\n"), ((565, (20, 25)), "*MA1:\tget up on the table and we'll wash .\n"), ((565, (30, 35)), "*MA1:\tget up on the table and we'll wash .\n"), ((565, (36, 40)), "*MA1:\tget up on the table and we'll wash .\n"), ((570, (-1, 4)), '*CHI:\tI done .\n'), ((573, (-1, 4)), '*MOT:\tI am [!] done .\n'), ((578, (18, 21)), '*CHI:\t<I am done> [<] !\n'), ((581, (-1, 4)), '*MOT:\tI am finished .\n'), ((587, (6, 8)), '*MA1:\tmm (.) I used to have_to say that when I was at the table .\n'), ((587, (9, 12)), '*MA1:\tmm (.) I used to have_to say that when I was at the table .\n'), ((587, (58, 63)), '*MA1:\tmm (.) I used to have_to say that when I was at the table .\n'), ((593, (-1, 4)), '*MA1:\tdone ?\n'), ((596, (9, 12)), '*CHI:\tno xxx .\n'), ((604, (10, 15)), "*MOT:\tI'm gonna just xxx Anna .\n"), ((608, (10, 13)), '*MA1:\txxx bet it tastes bad too .\n'), ((611, (6, 10)), '*MOT:\tyeah .\n'), ((614, (6, 10)), "*MOT:\tit's on the way out .\n"), ((614, (18, 21)), "*MOT:\tit's on the way out .\n"), ((617, (-1, 4)), '*MOT:\tdefinitely .\n'), ((620, (-1, 4)), '*CHI:\tyou <know what> [>] ?\n'), ((620, (22, 25)), '*CHI:\tyou <know what> [>] ?\n'), ((625, (12, 18)), "*MA1:\t<it's dated> [<] June twenty first .\n"), ((630, (-1, 4)), '*MOT:\treally ?\n'), ((634, (-1, 4)), "*CHI:\tyou know why I can't <come with you> [>] ?\n"), ((634, (38, 42)), "*CHI:\tyou know why I can't <come with you> [>] ?\n"), ((634, (43, 46)), "*CHI:\tyou know why I can't <come with you> [>] ?\n"), ((640, (11, 16)), '*MOT:\t<the milk> [<] ?\n'), ((640, (17, 20)), '*MOT:\t<the milk> [<] ?\n'), ((643, (6, 10)), '*MA1:\tyeah .\n'), ((646, (9, 16)), '*MOT:\tno kidding .\n'), ((649, (45, 51)), '*MA1:\tshe just said that she thinks that <it tastes bad too> [>] +...\n'), ((649, (61, 64)), '*MA1:\tshe just said that she thinks that <it tastes bad too> [>] +...\n'), ((655, (21, 31)), "*MA1:\twell then it's gross milk don't buy it anymore .\n"), ((655, (32, 37)), "*MA1:\twell then it's gross milk don't buy it anymore .\n"), ((660, (-1, 4)), '*CHI:\txxx ?\n'), ((660, (6, 9)), '*CHI:\txxx ?\n'), ((662, (14, 18)), "*MOT:\tno it's skim milk it's good !\n"), ((662, (19, 23)), "*MOT:\tno it's skim milk it's good !\n"), ((667, (6, 10)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((667, (11, 15)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((667, (40, 44)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((667, (45, 51)), "*MOT:\tskim milk I know that's what skim milk tastes like .\n"), ((672, (-1, 4)), '*MOT:\tthat just tasted kind o(f) weird .\n'), ((672, (23, 27)), '*MOT:\tthat just tasted kind o(f) weird .\n'), ((672, (33, 38)), '*MOT:\tthat just tasted kind o(f) weird .\n'), ((675, (6, 10)), '*MA1:\tyeah (.) to me too .\n'), ((675, (11, 14)), '*MA1:\tyeah (.) to me too .\n'), ((678, (-1, 4)), '*MOT:\thas an after taste to it .\n'), ((678, (19, 24)), '*MOT:\thas an after taste to it .\n'), ((681, (-1, 4)), "*MOT:\tlike it's a <kind of food or somethin(g)> [>] .\n"), ((681, (18, 23)), "*MOT:\tlike it's a <kind of food or somethin(g)> [>] .\n"), ((681, (27, 31)), "*MOT:\tlike it's a <kind of food or somethin(g)> [>] .\n"), ((681, (48, 51)), "*MOT:\tlike it's a <kind of food or somethin(g)> [>] .\n"), ((688, (-1, 4)), "*MOT:\tI don't know xxx [>] .\n"), ((691, (11, 16)), "*CHI:\t<I'm done> [<] .\n"), ((691, (17, 20)), "*CHI:\t<I'm done> [<] .\n"), ((694, (11, 15)), "*MOT:\tgood girl <we'll see you> [>] .\n"), ((697, (-1, 4)), '*MA1:\tyou sit [<] .\n'), ((697, (14, 17)), '*MA1:\tyou sit [<] .\n'), ((701, (-1, 4)), '*MA1:\tyou [!] boot in the ass .\n'), ((701, (14, 18)), '*MA1:\tyou [!] boot in the ass .\n'), ((701, (26, 29)), '*MA1:\tyou [!] boot in the ass .\n'), ((704, (13, 18)), "*MOT:\toh xxx don't .\n"), ((707, (-1, 4)), '*MA1:\tloser layin(g) on the couch .\n'), ((707, (28, 33)), '*MA1:\tloser layin(g) on the couch .\n'), ((710, (6, 9)), '*MA1:\tyes you !\n'), ((713, (10, 15)), '*MOT:\tBob watch .\n'), ((716, (-1, 4)), '*MOT:\twatch out .\n'), ((716, (6, 11)), '*MOT:\twatch out .\n'), ((720, (-1, 4)), '*CHI:\tMom ?\n'), ((724, (6, 9)), '*MOT:\tyes ?\n'), ((728, (-1, 4)), '*CHI:\tyou said I could have dessert .\n'), ((728, (28, 35)), '*CHI:\tyou said I could have dessert .\n'), ((731, (-1, 4)), '*MOT:\tI xxx what I said .\n'), ((734, (-1, 4)), '*MA1:\tyou said you [//] she could help you make the pie .\n'), ((734, (52, 55)), '*MA1:\tyou said you [//] she could help you make the pie .\n'), ((739, (66, 73)), "*MOT:\twell I didn't make it though did I so there obviously is no dessert then if I did not make it !\n"), ((753, (-1, 4)), '*MOT:\tgo upstairs and get xxx [>] .\n'), ((753, (30, 33)), '*MOT:\tgo upstairs and get xxx [>] .\n'), ((761, (-1, 4)), "*MOT:\tI didn't feel [!] like it .\n"), ((761, (20, 23)), "*MOT:\tI didn't feel [!] like it .\n"), ((768, (13, 16)), '*CHI:\t<Mary> [<] ?\n'), ((772, (-1, 4)), '*CHI:\tdo I xxx too ?\n'), ((776, (-1, 4)), '*MOT:\tthis is no xxx [>] .\n'), ((776, (21, 24)), '*MOT:\tthis is no xxx [>] .\n'), ((784, (14, 18)), '*MA1:\tvicious kids .\n'), ((787, (6, 9)), '*FE1:\txxx .\n'), ((789, (-1, 4)), '*MA1:\t<xxx has nothing to do with him> [<] .\n'), ((789, (15, 22)), '*MA1:\t<xxx has nothing to do with him> [<] .\n'), ((789, (34, 38)), '*MA1:\t<xxx has nothing to do with him> [<] .\n'), ((789, (39, 42)), '*MA1:\t<xxx has nothing to do with him> [<] .\n'), ((792, (6, 9)), '*MOT:\txxx .\n'), ((794, (18, 22)), "*CHI:\twhy doesn't want to go ?\n"), ((798, (6, 11)), "*MOT:\thoney I don't know (.) I don't have the time you know ?\n"), ((798, (46, 50)), "*MOT:\thoney I don't know (.) I don't have the time you know ?\n"), ((804, (14, 19)), "*CHI:\tMom why can't I +/.\n"), ((809, (-1, 4)), '*MA1:\tAnna go get the face cloth like she asked !\n'), ((809, (22, 26)), '*MA1:\tAnna go get the face cloth like she asked !\n'), ((809, (27, 32)), '*MA1:\tAnna go get the face cloth like she asked !\n'), ((815, (-1, 4)), "*FE1:\twhere's the V_C_R ?\n"), ((818, (-1, 4)), "*MA1:\tand that's it !\n"), ((821, (-1, 4)), "*MA1:\tyou're not going xxx .\n"), ((821, (23, 26)), "*MA1:\tyou're not going xxx .\n"), ((824, (-1, 4)), "*MA1:\t(..) you know if you did what you were supposed to do when you're told to do it you might be able to go out at night and do things you know (.) like a good girl gets to do !\n"), ((824, (117, 122)), "*MA1:\t(..) you know if you did what you were supposed to do when you're told to do it you might be able to go out at night and do things you know (.) like a good girl gets to do !\n"), ((824, (130, 136)), "*MA1:\t(..) you know if you did what you were supposed to do when you're told to do it you might be able to go out at night and do things you know (.) like a good girl gets to do !\n"), ((824, (162, 166)), "*MA1:\t(..) you know if you did what you were supposed to do when you're told to do it you might be able to go out at night and do things you know (.) like a good girl gets to do !\n"), ((837, (-1, 4)), '*MA1:\tbut instead you dilly+dally and you get yelled at Anna .\n')]
calculating accuracy and recall
correct labels:
set(['tomato', 'skim milk', 'meatballs', 'pie', 'cherries', 'milk', 'bread'])
predicted labels:
set(['', 'summer', "don't", 'meatballs', '[!]', '&-um', 'paper', 'radio', 'yep', 'white right', 'milk', 'milk>', "he's", '<you', 'mother>', 'father', 'lets', 'cherries', 'honey xxx', 'song', 'food', 'yyy', 'watch', 'gonna', '[>]', 'words', 'bread', "we'll", 'mhm', 'hour', 'brother', 'morning', 'night', 'skim', 'enjoy', 'www', 'know]', 'tea', 'yeah', 'home', 'girl', 'yes', 'him>', '(.)', "o'clock", 'please', "father's", 'ass', 'zzz', 'let', 'boy', 'kids', 'thirty', 'oh', 'dated>', 'shift', 'roam', 'weird', "can't", 'point', 'done>', 'tall>', 'yell]>', 'wash', '<not', 'parties', 'table', "it's", 'top', 'kidding', 'sound]', 'way', '<kind', 'call', 'kid', 'today', 'door', 'sunshine', 'huh', 'phone', 'on>', 'baby', 'stairs', 'kind', 'room', '[=!', 'things', 'mm', 'work', 'bed', "brother's", 'bet', 'taste', 'pie', 'gross milk', 'honey', 'tastes', 'cloth', 'want', 'bucks', 'stomach', '[/]', 'pay', 'boot', 'couch', 'dessert', 'play', 'xxx', 'okay', 'rude', 'my>', 'mouth', 'supper', 'nothing', '[<]', 'man', 'tomato', 'you>', 'face', 'time', "she's", 'door>'])
file:HSLLD/HV1/MT//annmt1.cha
precision: 0.0491803278689
recall: 0.857142857143
true positives:['bread', 'cherries', 'meatballs', 'milk', 'pie', 'tomato']
false positives: ['', '&-um', '(.)', '<kind', '<not', '<you', '[!]', '[/]', '[<]', '[=!', '[>]', 'ass', 'baby', 'bed', 'bet', 'boot', 'boy', 'brother', "brother's", 'bucks', 'call', "can't", 'cloth', 'couch', 'dated>', 'dessert', "don't", 'done>', 'door', 'door>', 'enjoy', 'face', 'father', "father's", 'food', 'girl', 'gonna', 'gross milk', "he's", 'him>', 'home', 'honey', 'honey xxx', 'hour', 'huh', "it's", 'kid', 'kidding', 'kids', 'kind', 'know]', 'let', 'lets', 'man', 'mhm', 'milk>', 'mm', 'morning', 'mother>', 'mouth', 'my>', 'night', 'nothing', "o'clock", 'oh', 'okay', 'on>', 'paper', 'parties', 'pay', 'phone', 'play', 'please', 'point', 'radio', 'roam', 'room', 'rude', "she's", 'shift', 'skim', 'song', 'sound]', 'stairs', 'stomach', 'summer', 'sunshine', 'supper', 'table', 'tall>', 'taste', 'tastes', 'tea', 'things', 'thirty', 'time', 'today', 'top', 'want', 'wash', 'watch', 'way', "we'll", 'weird', 'white right', 'words', 'work', 'www', 'xxx', 'yeah', 'yell]>', 'yep', 'yes', 'you>', 'yyy', 'zzz']
false negatives: ['skim milk']
# true pos: 6
# false pos: 116
# false neg: 1
HSLLD/HV1/MT//jammt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: grapeyhead@c .', "*MOT: I don't think we have anymore grape you want strawberry ?", '*CHI: strawberry ?', '*CHI: yeah yeah yeah yeah yeah .', "*MOT: you don't like strawberry ?", '*CHI: what ?', "*MOT: you don't like strawberry ?", '*CHI: unhunh .', '*MOT: thought you did .', "*CHI: I don't like it .", '*MOT: wanna try it ?', '*CHI: no !', "*CHI: I'm just gonna have peanut butter (.) xxx [>] .", '*MOT: okay [<] .', '*MOT: okay .', '*CHI: Mom lemme [: let me] sit up on the table .', '*MOT: okay .', '*CHI: (be)cause you put that there .', "*MOT: okay here's your bread .", '*CHI: this came off .', '*CHI: xxx .', "*MOT: don't touch that .", '*CHI: put it right there .', '*MOT: okay .', '*MOT: xxx peanut butter .', '*CHI: Mom .', "*CHI: see where I'm (gonna) put it ?", "*MOT: it's cute .", '*CHI: <not the> [>] +/.', '*MOT: xxx [<] jelly .', "*CHI: yeah that's ri(ght) [///] no there's a new one !", '*MOT: this is the new one honey .', '*CHI: no the new peanut butter !', "*MOT: oh we'll use the rest of that first .", '*CHI: okay .', '*CHI: Mom open this for you ?', '*MOT: yeah .', '*CHI: 0 [=! grunt of exertion] .', "*CHI: I can't do it .", "*MOT: that's okay .", '*MOT: I can do it .', '*CHI: okay .', '*MOT: dyawanna [: do you want to] get the bread out for me ?', '*MOT: two pieces .', '*CHI: two .', '*CHI: I want some .', '*MOT: okay .', "*CHI: you don't want this one ?", "*MOT: that's fine .", '*CHI: no xxx way .', '*CHI: &=grunt .', '*CHI: (.) here .', '*MOT: put it down .', '*CHI: you can put it on the table .', '*CHI: you can put it right on the plate .', '*CHI: &=cough .', '*CHI: (.) a@l (.) b@l (.) c@l d@l +...', "*CHI: <why are you> [//] why [//] (.) I can't hear myself .", "*MOT: oh (be)cause we'll play it back later .", '*CHI: (.) really ?', '*MOT: yup .', '*CHI: (.) gootchy@wp gootchy@wp gootchy@wp gootchy@wp goo@wp +...', '*CHI: gootchy@wp gootchy@wp goo@wp .', '*CHI: &-um Paul does@n like this .', '*CHI: with his dinky@f .', "*MOT: don't say that .", '*CHI: Paul did this .', "*MOT: that's not nice .", '*CHI: Paul does@n that , and I do it .', "*MOT: you don't do that .", '*CHI: Paul does it .', "*MOT: so that's Paul's mommy's problem not mine .", '*MOT: (.) you want some milk ?', '*CHI: yup .', '*CHI: (.) play it back now !', "*CHI: (.) Mom this won't stay on .", "*CHI: you'll have_to get a new one from [/] from Annemarie .", "*CHI: you'll have_to ask me or Maureen when you get to school .", '*CHI: alright .', '*MOT: (.) okay ?', '*MOT: xxx ?', '*CHI: now play it back .', '*CHI: Mom now play it back now .', "*MOT: finish eating and then we'll play it back .", '*CHI: Mom wait !', "*MOT: <I'm not> [>] going anywhere I'm right here .", '*MOT: you want me to throw it away ?', '*CHI: yeah .', "*CHI: and I'm gonna get a new one .", "*MOT: (.) whyncha [: why don't you] sit down in the chair .", '*CHI: (.) I want to sit on the table .', '*MOT: I know but you might fall .', "*CHI: (.) can't see .", "*CHI: couldn't see Mot .", '*CHI: (.) unhunh unhunh unhunh .', '*CHI: Mom !', '*CHI: they had xxx !', "*MOT: we'll get it out later .", '*CHI: okay .', '*CHI: (.) what was this kind of bread ?', '*MOT: &-uh Nissen .', '*CHI: what ?', '*MOT: Nissen bread .', '*CHI: yyy .', "*CHI: that's my xxx .", "*CHI: they're dirty .", "*MOT: no I'm just gonna rinse them .", '*CHI: (.) 0 [=! loud grunt] !', '*MOT: what was that ?', "*CHI: that's my voice .", '*MOT: your voice .', "*CHI: yeah that's my cow voice .", '*MOT: you a cow ?', '*CHI: yeah !', "*CHI: I'm a cow [>] +/.", '*MOT: go [<] moo@o !', '*CHI: mooo@o !', '*MOT: xxx back .', '*MOT: you finish eating your sandwich ?', '*CHI: uhhum .', '*MOT: is it good ?', '*CHI: uhhuh .', "*CHI: (.) Mom can you cut it in half I can't eat it big .", '*MOT: xxx .', '*MOT: which way ?', '*MOT: this way or this way ?', '*CHI: that way .', '*MOT: this way ?', '*CHI: (.) thank you .', "*MOT: you're welcome .", '*CHI: (.) done !', "*CHI: I'm all done .", '*MOT: clean it up .', '*CHI: xxx .', '*CHI: (..) 0 [=! drawing in of breath] .', "*CHI: Mom I'm all done .", '*MOT: alright wait a minute .', '*CHI: &=humming .', "*MOT: it's okay .", "*MOT: here's some napkin .", '*MOT: (..) all done .', '*CHI: (..) 0 [=! random vocal noises] .', "*MOT: he's tired .", '*CHI: but it could go up .', '*CHI: (.) Mot !', '*MOT: what ?', '*CHI: untie the chair .', "*MOT: why should I untie it it's supposed to be on now .", '*CHI: I want it to play with .', "*MOT: it's not a toy .", '*MOT: Chi stop .', '*CHI: 0 [=! little singing noises] .', '*CHI: 0 [=! more strident singing noises] .', '*CHI: 0 [=! random staccatto vocal noises] .', '*MOT: (..) almost all gone you really did a good job .', '*CHI: uhhuh .', '*CHI: (..) xxx .', "*MOT: (.) what's the matter ?", '*CHI: look_it .', '*MOT: you ate it all ?', '*MOT: the whole thing ?', '*CHI: 0 [=! affirmation noises] .', '*MOT: you were hungry .', '*MOT: very good .', '*MOT: put your dish in the sink .', '*MOT: (..) after you put your dish in the sink I want you to finish your milk (.) <and then> [>] +/.', '*CHI: &=squeal !', '*MOT: (..) done with your milk ?', '*CHI: I left it on the table .', '*CHI: (..) mm !', '*CHI: ah !', '*CHI: that was good .', "*MOT: I'm glad .", "*CHI: but I didn't drink it all .", '*MOT: almost all of it ?', '*CHI: yeah almost .', '*MOT: take one more sip .', '*MOT: (.) okay .', '*MOT: go brush your teeth .', '*CHI: &=belch .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jammt1.cha
HSLLD/HV1/MT//vicmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*SIS: recording a different thing ?', '*INV: I have a lot of trouble telling these kids apart .', '*BRO: yeah (.) yeah Sis .', '*MOT: shh !', '*SIS: (.) hi my name is Sis .', '*BRO: (.) hi my name is stupid .', '*SIS: no Chi .', '*SIS: xxx her name is Chi .', "*SIS: and that's my sister Chi .", "*SIS: that's my brother Bro .", '*SIS: Bro [?] a bit shy .', '*BRO: how (a)bout Daddy and Mommy ?', "*SIS: and my mom's name is Mot .", "*SIS: and my dad's name is Fat .", "*SIS: we're about to start (.) eat supper !", '*SIS: (.) did you know that ?', '*CHI: okay .', "*BRO: (..) I bet she can't xxx .", '*SIS: she is too +/.', '*CHI: Mommy !', '*MOT: what [>] ?', '*SIS: tell [<] Chi to stop .', '*CHI: so gimme [: give me] the salt [=? soap] .', '*MOT: just a second .', '*MOT: (..) there you go .', '*CHI: wha(t) ?', '*CHI: (.) wait my turn xxx .', '*SIS: my turn (.) after you ?', '*MOT: what ?', "*CHI: Mom I'm giving the salt to you .", '*SIS: thank you Mom .', "*MOT: you're welcome .", "*SIS: can I've some chicky [?] ?", '*MOT: I am [?] .', '*CHI: Mom (.) will you give me the foot ?', '*MOT: the leg ?', '*CHI: yeah .', '*MOT: want me to cut it ?', "*BRO: and can I've [?] the other leg Mom .", '*MOT: no .', "*MOT: I'm going to cut it .", '*SIS: he [?] can cut both of them .', "*SIS: there's two of (th)em ?", '*SIS: is there ?', '*MOT: all you need to know is what Sis ?', '*BRO: can I have a leg ?', '*MOT: no !', '*BRO: can I have a leg ?', '*MOT: no !', '*BRO: I [!] am !', "*SIS: <Bro's the one> [>] <who should get> [/] who should get the cake [?] .", '*BRO: <I asked first> [<] .', "*SIS: he's the first one who asked .", '*CHI: I asked .', '*BRO: yeah .', "*MOT: ow it's hot !", '*SIS: Mommy ?', '*MOT: yes ?', '*SIS: can I have some skin [?] .', "*MOT: isn't funny Sis .", '*SIS: oh .', '*SIS: oh <oh ah> [>] .', '*BRO: <Mom you said [?] you give me> [<] a big leg !', "*MOT: no I didn't .", "*CHI: I really can't have it .", '*CHI: with this ?', '*BRO: Mom ?', "*BRO: I'm going to give myself [>] my (.) chicken .", '*CHI: <come on> [<] .', '*MOT: you want me to just give it to you xxx ?', '*CHI: (..) you hid that from me ?', '*MOT: yes .', "*CHI: he's weird .", '*CHI: &=laughs .', '*SIS: yeah he is .', '*CHI: he is weird .', "*MOT: Bro what've you been doing all day ?", '*BRO: watching television .', '*BRO: when [>] +/.', "*MOT: <I haven't> [<] seen +/.", '*BRO: when I came upstairs +...', '*BRO: when [/] when you came home .', '*BRO: I was watchin(g) television +...', '*MOT: mhm ?', '*SIS: and I went with you [>] .', '*BRO: <when [<] when you when you almost when you when I (.) when (.) when> [//] so when you was home ?', '*BRO: after a while (.) &-um a dog did shit [=? shed] on the floor .', '*BRO: I cleaned it up .', '*BRO: okay ?', '*MOT: dog did a mess on the floor ?', '*BRO: yep .', '*BRO: what [>] ?', '*MOT: why [<] were you in the house ?', '*MOT: in the dish [?] .', '*SIS: for me ?', '*BRO: in case the dog xxx .', '*SIS: (..) I was hopin(g) that was for me .', "*MOT: well it's not .", '*MOT: Chi where are you goin(g) ?', '*MOT: (.) oh Chi .', '*MOT: (.) Chi !', '*CHI: yeah .', '*MOT: what are you doin(g) ?', "*BRO: my name's [?] Bro [>] .", "*CHI: <I don't> [<] like that .", '*SIS: I was thinking that .', "*BRO: my middle name's Mark .", '*BRO: and my [/] (.) my mom +...', "*BRO: my sister is Sis an Chi's name is (.) Chi .", '*BRO: and xxx .', "*BRO: and my mother's name is fat and my daddy's name is +...", '*CHI: (..) here Sis .', '*MOT: sauce [?] [>] .', '*SIS: <thank you> [<] Mom .', "*MOT: so why were you downstairs when [=? if] I wasn't here ?", '*BRO: mm does <Chi> [/] Chi know ?', '*BRO: that I was in the house .', '*CHI: Mom ?', '*BRO: what [>] ?', '*MOT: yes [<] .', '*BRO: <watch [//] so I could watch xxx> [>] .', "*CHI: <they're all hot> [<] .", '*CHI: Momma ?', '*CHI: those [//] these things are so [/] so hot .', "*MOT: they're not hot .", "*MOT: they're just warm .", '*CHI: (.) these chickens are .', '*MOT: mhm .', "*MOT: it's not that hot now .", '*BRO: not hot .', "*CHI: I don't wanna eat (th)em yet .", '*MOT: oh .', '*CHI: &=sighs .', '*BRO: Ma ?', '*BRO: xxx [>] .', '*CHI: <why do I have_to eat it all xxx> [<] ?', '*MOT: of course you have_to eat (.) what ?', '*MOT: how was your day Sis ?', '*SIS: good (.) fine .', "*MOT: what'd you do ?", '*SIS: first go &-um (.) I went shopping [?] .', '*CHI: <Mommy (.) do> [>] I have_to eat it all ?', '*MOT: <no bowling [?] today> [<] ?', '*SIS: no .', '*MOT: Chi you have_to eat something .', '*SIS: <xxx along fine> [>] .', '*CHI: <I eat this this> [<] .', "*MOT: you didn't eat anything .", '*CHI: watch !', "*MOT: I don't want to watch you take one bite .", '*MOT: I want you to eat at least half of what you got .', '*CHI: I am !', '*BRO: so you wanna xxx .', '*BRO: Mommy !', '*MOT: and xxx when asked .', '*MOT: what ?', '*BRO: could I have some more (.) meat ?', "*MOT: yeah (.) I'm tryin(g) to cut it .", '*SIS: me too please [>] .', '*MOT: <the other half> [<] still xxx .', '*SIS: and some skin [>] .', '*BRO: Mom [<] !', '*SIS: and <some skin> [>] .', '*MOT: <come on xxx> [<][>] .', '*BRO: Mama [<] !', '*MOT: what ?', '*SIS: can I have the skin Mom .', "*MOT: there's no more xxx .", '*MOT: xxx tomorrow night maybe .', '*SIS: xxx two pieces so far .', '*SIS: of skin .', '*BRO: xxx could get sleep [?] before +/.', "*CHI: anybody's going to eat mine .", '*BRO: and +/.', '*CHI: can you do this Sis ?', '*BRO: www .', '*BRO: do you know what ?', "*CHI: I'm not playing of this game .", '*BRO: www .', '*CHI: could anyone here this xxx xxx [>] ?', '*BRO: xxx [<] .', '*BRO: one two (.) three four five (.) six seven eight nine ten eleven xxx fifteen eighteen nineteen .', '*BRO: sixteen eighteen xxx .', "*SIS: I'll xxx that !", "*SIS: I'll count <to a hundred Mom> [>] .", '*BRO: www [<] .', '*SIS: one two three xxx six seven .', '*SIS: xxx [>] .', "*CHI: <oh oh> [<] <I'm in trouble> [>] !", '*MOT: <what did you say> [<] ?', "*SIS: <I said I'd count to a hundred> [>] .", "*CHI: <I'm in trouble> [<] !", '*CHI: <help help > [>] !', '*SIS: <one two three four five six seven xxx> [<][>] .', '*BRO: Mommy [<] .', '*BRO: Mommy .', '*CHI: help [>] !', '*BRO: <xxx yummy> [<] .', '*CHI: help [>] .', '*BRO: <mommy mommy yummy yummy> [<][>] .', '*MOT: <what caused [?] that> [<] ?', "*CHI: <help I'm in trouble> [>] !", '*BRO: <mommy yum yum yummy> [<][>] !', '*SIS: xxx [<] .', '*MOT: fine [?] .', '*CHI: <whoo whoo> [>] !', '*BRO: <mommy (.) yummy> [<][>] !', '*SIS: xxx [<] .', '*BRO: <yummy yum yummy> [>] .', '*MOT: <what did Andrea want last night> [<] ?', '*SIS: huh ?', '*BRO: <yummy yum yummy> [>] !', '*MOT: <what did Andrea want last night> [<] ?', '*SIS: xxx +...', "*MOT: what's her name ?", '*SIS: Amanda .', '*MOT: Amanda .', "*MOT: how's [?] Amanda ?", '*BRO: Mommy &wh xxx [>] .', '*CHI: <can I xxx> [<] .', "*SIS: <quit asking (.) quit asking me how Amanda's doing> [>] .", '*CHI: xxx I asked you to get some more meat [<] .', '*BRO: mommy .', '*BRO: mommy .', '*CHI: did you tell &-um .', '*MOT: oh shit .', '*CHI: this leg broke .', '*SIS: <Mommy can I xxx> [>] .', '*CHI: <it needs a new elastic> [<] ?', '*MOT: hm: ?', '*BRO: oh .', '*CHI: (..) Mom see the elastic [?] I broke ?', "*MOT: yeah but it doesn't take long to eat .", '*BRO: I ate my coins [= potato coins?] .', "*BRO: and I'll eat my meat up [?] .", '*CHI: (.) Mom !', '*BRO: www [>] .', '*CHI: <see what I ate> [<] ?', '*MOT: what ?', '*CHI: nothing .', '*CHI: <I hate [?]> [//] now <I eat my meat> [>] .', '*BRO: www [<] &=grunt .', '*MOT: really ?', '*BRO: Gumby (.) it gets me out of xxx .', "*BRO: Gumby isn't xxx .", '*CHI: his ?', '*MOT: you had to tell me what ?', '*BRO: what ?', '*MOT: what ?', '*BRO: I said Gumby .', '*BRO: www .', "*MOT: I'd like you to sit up .", '*BRO: Gummy the dummy ?', '*MOT: fundy@n [?] .', '*MOT: fun .', '*MOT: +^ f@l u@l n@l (.) fun .', '*CHI: xxx .', '*BRO: Gumby they go on your head .', '*CHI: right here .', '*CHI: fun .', '*BRO: what a fundy [: funny] .', '*BRO: Mom see what I ate ?', '*MOT: <it looks> [>] +/.', '*BRO: <I xxx> [<] again .', "*SIS: so don't I .", "*CHI: so don't I .", '*MOT: (..) Chi would you sit up please .', '*CHI: &=grunts .', '*CHI: now [//] can I some [?] cake now ?', "*MOT: you didn't eat very much .", '*MOT: +^ do you want some corn ?', '*CHI: xxx .', '*SIS: yeah .', '*MOT: xxx .', '*CHI: pour me some corn <right down here> [>] .', '*MOT: <would you sit down> [<] please .', '*MOT: sit down !', '*MOT: please .', "*CHI: I don't want to .", '*BRO: I just heard .', '*BRO: www .', '*SIS: Mommy we have this teacher .', '*SIS: <same one as the last time> [>] .', '*BRO: <www yes> [<] !', '*MOT: do they ?', '*SIS: yes .', '*BRO: y@l t@l m@l [!] !', '*MOT: +^ how do you know ?', "*SIS: <I don't [?] remember> [>] !", '*BRO: <s@l y@l q@l> [<] .', '*BRO: xxx [>] .', '*SIS: xxx [<] .', '*MOT: <I remember> [>] .', '*BRO: xxx [<] .', '*BRO: <I want corn>[<] !', '*CHI: xxx [<] .', '*BRO: Mommy .', '*BRO: can I have some (.) beer [?] .', '*BRO: +^ <did you> [/] did you buy root+beer ?', '*MOT: no .', '*BRO: oh .', '*MOT: +^ I bought Pepsi .', '*BRO: well (.) I want root beer .', "*BRO: why didn't you buy (.) root+beer (be)cause you don't like it (.) Pepsi (.) you should +/.", '*MOT: +^ no .', '*MOT: because I had a coupon for Pepsi .', '*CHI: yes [?] .', '*CHI: (..) here .', '*CHI: root+beer xxx at you .', '*BRO: &ha !', '*MOT: &=laughs .', '*BRO: <&=laughs > [>] .', "*MOT: I didn't [<] hear you say excuse me .", '*CHI: Mom you needed another plate [?] .', '*MOT: for what ?', '*CHI: <for the corn> [>] .', '*BRO: <can I say something> [<] ?', '*MOT: you can say anything you want .', '*BRO: <(ex)cept for> [/] (ex)cept for (.) naughty [?] words [>] .', "*CHI: <I'll think of words> [<] .", "*CHI: I'll think +/.", '*MOT: +^ Chi .', '*MOT: will you please sit down .', '*CHI: wait [>] a minute .', '*BRO: xxx [<] .', "*CHI: +^ I'm gettin(g) <another plate> [>] .", '*BRO: xxx [<] they eat lettuce .', '*MOT: then get <four of them> [>] please .', '*SIS: <Georgie Porgie> [<] .', '*CHI: okay +/.', '*SIS: Georgie Porgie pudding pie !', '*BRO: pudding pie .', '*SIS: kissed the girls and made (th)em cry .', '*BRO: kissed the girls and made (th)em cry .', '*CHI: <Mom xxx> [<] .', "*MOT: I'm looking for something .", '*SIS: when the boys [>] came out to play .', '*BRO: www [<] .', '*SIS: Georgie Porgie ran away !', '*SIS: Georgie Porgie [>] .', '*MOT: <are you gonna> [<] leave the rest of them on ?', '*CHI: yeah !', '*MOT: where ?', '*CHI: xxx [>] .', '*SIS: <kissed the girls> [<] and made (th)em cry !', '*SIS: when the boys came out to play .', '*MOT: <over her Chi> [<] over here .', '*CHI: <the plate> [>] ?', '*SIS: <Georgie Porgie> [<] ran away .', '*CHI: xxx .', '*BRO: xxx ran away .', '*MOT: three [>] .', '*SIS: <Georgie> [<] Porgie kiss Chi [//] I mean Chi xxx .', '*BRO: one two [>] three four .', '*MOT: Chi [<] .', '*MOT: take the plates .', "*BRO: I'm going to count up on that tape [= recorder] .", '*BRO: one (.) two (.) three [>] .', '*SIS: three [<] .', '*CHI: where should I +/.', '*MOT: <please just (.) go around> [>] this way .', '*SIS: <four > [<][>] .', '*BRO: <four > [<] .', '*MOT: Chi .', '*BRO: five (.) <six > [<] [>] seven eight <nine ten> [<] [>] .', '*MOT: <put the cup in> [<] [>] .', '*MOT: <now please> [<] [>] ?', '*MOT: come on !', "*CHI: I didn't do nothing [>] .", '*BRO: eight [<] .', '*BRO: no eight (.) nine ten !', '*BRO: I counted to ten !', "*BRO: and that's all of them xxx !", "*BRO: and that's all of (th)em xxx !", '*BRO: and we do the little thing !', '*CHI: the [/] the xxx .', '*BRO: www .', '*MOT: www .', '*CHI: and we xxx .', "*MOT: see Bro said this one's his .", "*BRO: and this one's +/.", '*MOT: and this is Wom .', '*MOT: this is for Lis .', '*SIS: Chi cool off .', "*MOT: and Mom's .", '*SIS: are they coming down ?', '*MOT: yeah .', '*MOT: after work .', '*BRO: mhm .', "*SIS: +^ why'd they have_to come down ?", '*MOT: why not ?', '*BRO: why not ?', '*CHI: why not .', "*SIS: <it's just (.) she kinda like> [//] I mean like (.) every two days or something .", '*MOT: so what ?', '*BRO: Chi [?] want the pink one <or the blue one> [>] ?', '*MOT: <what kind of thing> [<] <was that to say> [>] ?', '*CHI: <the pink one> [<] .', '*SIS: xxx [>] .', '*MOT: <why xxx be> [<] upset ?', "*CHI: there's a pinker one .", '*MOT: is there a reason you said it ?', '*SIS: no .', '*CHI: ow .', "*SIS: <wait I don't> [<] [>] xxx why she always has <to xxx say> [<] [>] she already xxx .", "*CHI: <here's yours> [<] [>] .", "*BRO: <here's yours>[<] [>] ?", '*CHI: <you want any corn holders> [>] ?', '*MOT: <so what (be)cause I happen> [<] to like them .', '*SIS: you .', '*BRO: hey !', '*BRO: those are my corn holders [>] !', "*SIS: <you've> [<] invited them ?", "*MOT: I don't have_to invite them [>] .", '*BRO: Mom [<] !', '*BRO: those are my [!] corn holders !', '*MOT: Bro please put them down .', "*MOT: +^ I'm not ready <to do that now> [>] .", '*BRO: <these are mine> [<] !', '*BRO: mine [>] !', '*CHI: <no these are> [<] mine .', "*MOT: Chi there's more right here .", '*SIS: these are mine here .', '*SIS: give (th)em to me .', '*MOT: hm: .', '*SIS: here Mot .', '*BRO: give mine to me !', "*CHI: you said you didn't want (th)em !", '*BRO: gimme [: give me] <my plate> [>] !', '*MOT: <Chi would you> [<] please give him his plate .', '*MOT: and Bro <knock off the whining> [>] !', '*BRO: <give my plate> [<] !', "*CHI: he's going to ask me nice !", '*MOT: he did ask you .', '*MOT: ask her nice please .', '*BRO: please give me my stupid plate .', '*CHI: <that was not nice> [>] !', '*SIS: <xxx I have it> [<] .', "*MOT: no it wasn't .", '*MOT: <but give me the plate> [>] .', '*BRO: <I had [!] it> [<][>] .', '*SIS: <Mommy Mommy> [<] <is this another> [//] is there another tape in (.) here ?', '*MOT: mhm .', '*SIS: a different tape .', "*SIS: and so you're taping over (.) the other tape .", "*MOT: I'm not taping over .", '*CHI: Mommy !', '*CHI: can I still get a snack [>] ?', '*BRO: <nanoo@c nanoo@c> [<] !', '*CHI: Mommy can I still +/.', "*MOT: but Bro may not be here for the rest of the tape if he doesn't knock it off .", '*CHI: is Wom and Lis gonna be in this too ?', '*MOT: no .', '*CHI: Mommy !', '*MOT: what ?', '*CHI: &-um (.) can I still get a snack ?', '*MOT: <compared to what> [>] ?', '*BRO: <Wom xxx Lis> [<] .', '*MOT: +^ <did you eat> [>] ?', '*BRO: xxx Wom or &s something [<] .', '*CHI: see ?', "*CHI: now they're on there too !", '*BRO: www .', '*CHI: <now do it> [//] now I put them in there too .', "*SIS: don't [!] listen to my brother !", "*SIS: please [!] don't listen to him .", '*CHI: and +...', '*MOT: lot of people are upset .', '*SIS: who [?] me ?', '*MOT: your brother .', "*SIS: I'm always saying xxx .", "*SIS: but they willn't shut up .", '*SIS: xxx .', '*BRO: I love it <for you> [>] &=singing .', '*SIS: well [<] +...', '*SIS: I have (.) a little story about Wom and Lis .', '*SIS: <and my brother> [>] .', '*MOT: <come here sweetheart> [<] .', '*SIS: my whole family [!] actually .', '*BRO: your whole xxx ?', '*SIS: and (.) a couple cousins .', "*BRO: guess who's buying new toys for xxx ?", '*CHI: yeah .', "*MOT: oh <that's nice> [>] .", '*BRO: <and the puppies> [<] and Colby [= dog] .', '*BRO: xxx [>] .', '*SIS: <and me> [<] .', '*SIS: and me .', "*MOT: when's his birthday ?", '*MOT: July ?', '*BRO: <you know > [<] +...', '*CHI: July something .', '*MOT: xxx [>] .', "*BRO: <June [//] that's my plate> [<] !", '*MOT: yeah ?', '*SIS: www [>] .', '*BRO: yeah [<] !', '*MOT: well can I use it for a minute ?', '*CHI: Mama .', '*CHI: Mommy [>] .', '*SIS: ah [<] .', '*MOT: you can give me another plate if you want .', '*MOT: +^ xxx [>] .', '*CHI: <Mommy (.) xxx Mommy> [<] .', "*MOT: I'll give you +/.", '*MOT: what [>] ?', "*CHI: <Mommy I'm allowed to come but Bro's not> [<][>] .", '*BRO: 0 [<] .', "*CHI: Bro's not allowed to come .", '*BRO: <who used that> [>] .', '*MOT: xxx [<] .', "*MOT: that's okay I'll use this one .", "*BRO: Mom this one's hot www [>] .", '*MOT: Chi [<] !', '*MOT: how <hot is> [>] this one now .', '*CHI: actually [>] [/] (.) actually &-um (.) xxx liked me (.) best of all .', "*MOT: <it's easier> [<] .", '*MOT: xxx .', '*CHI: oh oh oh .', "*MOT: he didn't invite anybody else .", '*CHI: yeah ?', '*MOT: xxx .', "*CHI: if you made up a list we'd invite people .", '*MOT: it has (..) something xxx [>] .', '*SIS: shh [<] .', '*CHI: yeah and xxx and I only xxx [>] .', '*BRO: www [<] xxx .', "*BRO: uhoh they're here !", '*CHI: xxx oh gosh .', '*CHI: now xxx [>] +/.', "*MOT: <they're not here> [<] .", '*CHI: yes they [?] are !', '*MOT: how dare [?] they get here ?', '*MOT: xxx .', '*CHI: yeah they are !', '*CHI: yes yes !', '*CHI: 0 .', '*MOT: get back here please !', '*SIS: they are here !', '*BRO: they are here .', '*MOT: (.) get back here !', '*MOT: (..) Bro !', '*MOT: Chi !', '*MOT: Sis !', '*MOT: +^ come back [!] here !', "*BRO: I'm xxx [>] +/.", '*MOT: now [<] [!] please !', '*BRO: now please !', '*BRO: pretty [//] (.) can I go get (th)em ?', '*MOT: you better go get them [= Chi and Sis] .', '*MOT: +^ and get them right now .', "*BRO: <if you don't come in> [/] (.) if you don't come inside she's not gonna roller+skate .", "*BRO: and she willn't tell us how to xxx .", '*BRO: Mom [?] said .', "*BRO: didn't you say that !", "*MOT: you're early .", '*MOT: about (.) an hour and a half ?', '*WOM: right &=laughs .', '*BRO: <I just want xxx> [>] .', '*MOT: <xxx what> [<] ?', "*BRO: why can't xxx [>] ?", "*MOT: <well we're taping> [<] this [/] this over now .", '*WOM: where is it [= tape player] ?', '*MOT: right there .', "*MOT: we're doing the kind of thing that xxx .", '*CHI: Wom &=squeals .', '*MOT: I just <put the chicken in> [>] .', "*CHI: <what's in there> [<] ?", '*WOM: you did ?', '*SIS: Chi I <xxx twice> [>] !', '*WOM: <I just want to xxx> [<] .', '*CHI: huh .', '*MOT: xxx get out early ?', '*WOM: no I got out at five .', '*MOT: <I thought> [>] +/.', '*CHI: <xxx you were there> [<] ?', "*WOM: it's halfway between my house and your house .", '*MOT: you want to miss the traffic going to Framingham now ?', '*WOM: yeah .', '*MOT: oh but you got time to go now .', '*WOM: no .', "*WOM: +^ now is when <the traffic's really bad> [>] .", '*BRO: <want to go see the puppies> [<] ?', '*BRO: want to go <see the puppies> [>] ?', '*WOM: xxx [<] .', "*WOM: I'm gonna wait before I go .", '*BRO: xxx see them ?', '*MOT: here Bro .', '*BRO: <wanna see them again> [>] ?', '*MOT: <Bro please> [<] .', '*WOM: can I have some cake for supper .', "*BRO: <I'm ready> [>] .", "*MOT: <you can't> [<] do that while people are eating .", '*MOT: +^ <you have_to eat supper first> [>] .', '*SIS: <shh shh shh shh shh> [<] .', '*WOM: xxx .', '*CHI: yes maam !', "*MOT: I'm sorry !", '*MOT: but you have_to eat supper first .', "*WOM: I'm twenty five years old .", '*MOT: <give me> [<] the corn holders .', '*MOT: +^ <you are not> [>] twenty .', '*CHI: <am not> [<] !', "*SIS: I'm twenty one <years old> [>] .", '*MOT: <sit down Sis> [<] please .', '*SIS: twenty +...', '*MOT: how was work .', '*MOT: did you look at the catalogues yet ?', '*WOM: &-uh yeah .', '*BRO: I need butter [>] !', '*MOT: did you pick out <the one you want> [<] ?', '*WOM: oh yeah .', "*WOM: I'm going to get it .", "*MOT: (be)cause I'm &-um +...", '*WOM: I gotta +/.', '*MOT: +, getting the same one .', '*WOM: never mind .', '*BRO: Mom !', '*BRO: this is hot !', '*MOT: yes it is .', "*MOT: that's why you have corn holders .", '*CHI: xxx I burn my tongue xxx .', '*WOM: you have_to pay like (.) before they put your order in right ?', '*MOT: no .', '*WOM: what ?', '*MOT: no .', '*MOT: you have_to pay by July tenth .', '*WOM: oh .', "*MOT: but I'm thinking of maybe not even sending it (un)til the nineteenth if people are having a hard time (.) paying it .", "*WOM: oh <that's cool> [>] .", "*MOT: <because you don't need> [<] it [//] at least until July fifteenth [?] .", '*BRO: was there anything else in here ?', '*WOM: stuff from the dryer .', '*BRO: xxx ?', '*WOM: hm: ?', "*BRO: I'm going xxx [>] .", '*MOT: <would you please sit> [<] down [!] little people !', "*SIS: well you're the boss xxx .", '*SIS: xxx !', "*MOT: don't leave again until you're done eating .", '*CHI: one [?] time +...', '*LIS: is there any pizza [?] left ?', '*MOT: yep .', '*LIS: so if we have a piece of pizza can we have some cake ?', '*MOT: you still have_to eat your chicken .', '*BRO: come on .', "*MOT: it's in the oven !", "*MOT: it willn't be done (un)til six thirty !", '*WOM: I told you xxx [>] .', '*MOT: xxx [<] till six thirty .', '*LIS: alright .', "*LIS: well go ahead I'll xxx .", "*WOM: where's your pocket book ?", '*MOT: you can sit here and just talk .', '*MOT: or you can have a piece of pizza .', '*MOT: then you can have cake when you come back from Framingham .', '*SIS: and you guys have_to eat your chicken (.) after the cake .', "*MOT: I don't know Wom .", '*SIS: xxx here !', '*MOT: xxx .', '*WOM: I just need a pen !', "*CHI: I'm leaving .", '*WOM: <okay wait a minute> [>] .', '*MOT: I have [<] .', '*MOT: yeah [>] .', '*CHI: yeah [<] .', '*LIS: Wom you want to split a piece with me ?', '*MOT: you have_to have something healthy to eat xxx [>] .', '*WOM: <forget we should> [<] just finish it ?', '*BRO: quick !', '*BRO: <good eat some xxx> [>] !', '*MOT: xxx [<] .', '*MOT: <want to heat it up> [>] ?', '*BRO: <but that> [<] piece is (.) cold !', '*MOT: would you like to put it in the microwave ?', "*LIS: I'm going to put mine in the microwave .", '*MOT: xxx .', "*SIS: you're weird .", "*CHI: you're weird .", "*CHI: <Lis you're> [>] weird !", '*MOT: xxx [<] .', "*LIS: no I'm not !", '*SIS: yes you are .', '*CHI: yes you are .', "*CHI: here's your xxx [>] .", '*WOM: <how long> [<] thirty three ?', "*MOT: <I put it> [//] you don't want it too hot right ?", '*MOT: +^ so just do it xxx [>] .', '*LIS: <thirty three> [<] .', '*MOT: or three three .', '*MOT: whatever .', '*WOM: I can help you .', '*LIS: I know .', "*SIS: I'll do it for you .", '*MOT: 0 .', '*MOT: <<I can> [//] you do it xxx> [>] .', '*SIS: xxx [<][>] .', '*BRO: Mommy [>] !', '*BRO: xxx &=whining .', '*CHI: or you <can have> [>] snack !', '*MOT: xxx [<] .', '*WOM: xxx leave yet ?', '*MOT: hm: ?', '*CHI: no &=squealing .', '*MOT: no .', '*MOT: called him yesterday .', "*CHI: it's too hot .", '*BRO: <Mommy xxx> [>] .', '*SIS: xxx [<] .', '*MOT: Sunday I believe .', '*MOT: she has xxx +/.', '*SIS: <I can> [>] .', '*BRO: xxx [<] .', '*SIS: xxx cut it .', '*MOT: you want to cut it ?', '*SIS: xxx spread it like that .', '*MOT: she has some orders [?] over there .', '*MOT: people offering her a job .', '*MOT: if she still has xxx .', "*SIS: &-um (.) can you set the tables and may I have corn after she's done with it ?", '*MOT: yes I am .', '*SIS: thank you maam .', '*BRO: xxx [>] .', '*SIS: <hey can I come> [<] ?', '*WOM: nope .', '*SIS: why not ?', "*SIS: then Wom's staying .", '*MOT: Wom has [!] to go .', '*MOT: she needs [!] to go .', '*MOT: did you bring &-um bank statement ?', '*SIS: my bank statement .', '*WOM: what ?', '*MOT: bank statement .', '*WOM: oh good I forgot it .', "*MOT: it's one of the reasons she came down .", '*WOM: I know .', '*MOT: I figured out the Zayres thing .', "*MOT: mine's thirty one something .", '*CHI: will you guys be quiet <on this tape> [>] ?', '*MOT: <xxx had to figure it out> [<] .', '*WOM: how come ?', "*BRO: can we watch Pee Wee Herman's (.) Play House ?", '*LIS: you did .', "*BRO: no we didn't .", "*BRO: we watched (.) Pee Wee Herman's xxx .", "*BRO: didn't we ?", '*SIS: yeah [>] .', '*MOT: can you [<] go in there and tell Chi that we need to eat ?', '*WOM: Chi !', '*BRO: Chi be quiet !', '*BRO: (un)til we get a new xxx put in this house !', '*BRO: other than +/.', "*WOM: we'll be eating in a minute .", "*WOM: I don't know xxx ?", '*MOT: mhm .', '*MOT: I xxx [>] .', '*BRO: <hand me the sauce> [<] please .', '*BRO: xxx [>] .', '*SIS: <Mom> [<] [?] weared@n a new shirt in the pool [?] yesterday .', '*MOT: they were spraying me with the hose and I xxx I jumped in .', '*MOT: I almost [?] drowning .', '*WOM: what happened ?', "*MOT: <they sprayed> [>] me with a hose and I couldn't breathe .", '*SIS: <she drowned> [<] .', '*MOT: and I was getting all wet so I jumped into xxx .', '*MOT: xxx away .', '*MOT: you know I think they did more damage to me .', '*WOM: did they ?', '*CHI: I know .', '*CHI: and I was the one who was helping [?] .', '*BRO: and I went in this pool this year .', '*BRO: <by myself> [>] .', '*CHI: <me too> [<] !', '*WOM: really ?', '*SIS: <so did I> [>] .', '*WOM: really [<] [?] .', '*BRO: standing on my tippie toes .', '*WOM: wow !', '*BRO: and I went in my underpants [?] .', '*WOM: &=giggles .', '*SIS: we [/] we made it whirl pool twice [>] .', "*BRO: <I'll show> [<] you .", '*MOT: hey have you eaten Chi ?', '*SIS: no [>] .', '*CHI: xxx [<] .', '*CHI: my corn is (.) hot .', '*WOM: alright .', "*MOT: it's not that hot !", '*MOT: +^ not if you use your corn holders .', '*SIS: (.) Mom [>] .', "*CHI: <it's hard to eat> [<][>] .", '*MOT: <do you think this is easy> [<] ?', '*WOM: what ?', '*SIS: www .', '*SIS: hey you !', '*SIS: two !', '*LIS: what happened to your refrigerator ?', '*SIS: we threw it out !', '*MOT: I called the xxx .', '*MOT: and they xxx the refrigerator .', "*MOT: +^ and you'll have_to come and get it .", '*MOT: I got some calls from there .', '*MOT: +^ <and I got a call from> [//] and I called all the social services (.) the day before [>] for somebody to come and take it .', '*BRO: yeah [<] !', '*MOT: (be)cause people always need refrigerators .', '*MOT: and nobody started calling back (un)til yesterday .', '*MOT: the guy from (.) some (.) social place took it .', '*LIS: did you have_to pay for this one ?', '*MOT: no .', '*SIS: Mommy ?', '*MOT: what ?', "*SIS: you're supposed to sell it not give it away for free .", '*MOT: why Sis ?', "*WOM: how'd you get that sticker on there ?", '*MOT: it peels right off .', "*MOT: that's when <xxx complained about that [//] you know all the stickers xxx> [>] .", '*SIS: <hey Bro> [<] !', '*MOT: that one and that one .', '*WOM: get in here and eat !', "*CHI: I'm [/] I'm xxx [>] !", "*BRO: <I'm all done> [<] !", "*BRO: I'm all done .", '*SIS: shut (.) your (.) .', "*MOT: would you please tell her to come in here until she's done eating all [=? what] she's going to have .", '*SIS: okay .', "*MOT: it's important that she's here [>] +/.", '*WOM: <she has got head+phones> [<] on .', '*SIS: shh !', '*WOM: Chi go eat !', '*WOM: both of you .', '*WOM: go eat .', '*WOM: go eat [>] .', '*CHI: <I already ate> [<] .', '*WOM: go eat .', '*CHI: xxx .', '*CHI: hi Mom .', "*MOT: I don't want you to leave again until you're done eating .", "*CHI: Mom (.) it's hot !", '*WOM: <is there anything cold in here [= fridge]> [>] ?', "*MOT: <it's not [!] hot> [<] .", '*MOT: Coke is cold I think .', "*MOT: Pepsi's cold .", '*CHI: (.) now I have a place to eat@q .', '*MOT: is <it on> [>] ?', '*LIS: <alright> [<] .', "*LIS: we're going to Gram's .", "*MOT: you're not going nowhere now .", '*LIS: why ?', '*MOT: because !', "*MOT: it's almost five thirty .", '*LIS: so ?', "*MOT: you're gonna [: going] go to Gram's [?] and come back ?", "*LIS: no I'm going to Gram's [?] then I'll go to Framingham [?] and then I'll come back .", '*MOT: but supper will be ready around quarter past five .', '*MOT: <quarter past> [>] six .', '*LIS: xxx [<] .', '*MOT: what ?', "*LIS: we'll be back .", '*CHI: Mom !', '*MOT: by quarter past six ?', '*CHI: say please@q say please@q !', '*MOT: please .', '*CHI: okay .', '*LIS: sure .', '*MOT: if she eats anything xxx .', '*BRO: Mom !', '*BRO: Mommy !', '*MOT: what [>] .', '*LIS: <will you wipe> [<] this off please ?', "*CHI: I don't want this .", "*CHI: I don't want it !", '*BRO: Mommy [>] .', '*MOT: <well leave> [<] it there !', '*BRO: Mommy xxx +/.', '*MOT: get out of that cake Lis .', '*BRO: Mommy [>] .', "*CHI: <don't go> [<] !", "*CHI: don't go !", '*MOT: (be)cause you have eat first .', '*BRO: Mommy .', '*CHI: have_to eat first xxx .', '*BRO: Mommy [>] .', '*MOT: yes [<] !', '*CHI: me and Sis are gonna +/.', '*MOT: are you done Chi ?', '*BRO: xxx will you <put a little butter on it> [>] ?', '*CHI: <yes I am done> [<] !', '*BRO: will you put butter on it ?', '*BRO: please .', '*BRO: on my plate .', '*BRO: put butter on it .', '*MOT: <xxx on it> [>] .', '*WOM: xxx [<] .', '*MOT: would you &-um (.) press stop ?', '*WOM: alright .', "*MOT: she's going ?", '*WOM: 0 .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//vicmt1.cha
HSLLD/HV1/MT//stnmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: I got ta turn the record player down so can you wait one second just sit down .', '*MOT: sit down .', '*MOT: xxx .', '*MOT: okay ?', '*MOT: what are you making Vinnie ?', '*MOT: huh ?', '*CHI: now pour it ?', '*MOT: huh [!] ?', '*CHI: now pour it ?', '*MOT: yep now you can pour it .', '*MOT: put the corn meal in .', "*MOT: now okay it's all in .", '*MOT: (o)kay let me see it .', '*MOT: you put a cup of flour .', '*CHI: I can <hold it> [>] .', '*MOT: <put it down> [<] .', '*CHI: (o)kay ?', '*MOT: yep you can hold it .', '*MOT: and we can make it okay ?', '*MOT: just hold it .', '*MOT: we get a [/] <a xxx [/]> [>] .', '*CHI: <I could> [<] do it with my hands !', '*MOT: oh yeah ?', '*CHI: I did +/.', "*MOT: yeah but <don't> [>] .", '*CHI: that [<] +/.', '*MOT: put your hands in that (be)cause you get all yucky [>] .', '*CHI: no [<] I +/.', "*MOT: that's oil (re)member I told you [>] ?", '*CHI: <<I> [<] did some> [//] <I put some> [//] <I takes> [//] I put my hand there and I +...', '*MOT: oh yeah ?', '*CHI: right here around .', '*MOT: what are we making ?', '*CHI: cornbread .', '*MOT: right .', '*CHI: and I can put that in there .', '*MOT: yeah .', '*MOT: wait a minute now wan(t) (t)a make sure .', '*CHI: I <being your> [>] .', '*MOT: <I xxx xxx> [<] .', '*CHI: helper .', "*MOT: yeah you're being my big helper right ?", '*CHI: no !', '*CHI: I am being your big big Santa Claus helper .', '*MOT: oh yeah ?', '*CHI: yeah .', '*MOT: you like doing this stuff with Mama ?', '*CHI: yeah .', "*MOT: we do it all the time don't we ?", '*CHI: yeah .', '*MOT: what else your Mama makes ?', '*CHI: coffee .', '*MOT: what else do I make ?', "*CHI: and that's it .", '*MOT: oh I make other things .', '*MOT: you know that .', "*MOT: don't I make &-um [///] meanwhile there's your flour .", "*MOT: don't I make you sometimes oatmeal cookies ?", "*MOT: no don't use your hands [>] .", '*CHI: <it> [<] [/] it smells spic(y) [?] .', '*MOT: no !', '*MOT: yeah I know .', '*MOT: your hands make it a little spicy huh ?', '*MOT: zzz .', '*MOT: huh ?', "*CHI: I don't &n +/.", '*MOT: now tap it on the bowl .', "*MOT: until it's all out .", '*MOT: is it all out ?', '*CHI: yeah .', '*MOT: okay .', '*MOT: and you put the flour over here .', '*CHI: look I did xxx [>] .', "*MOT: <yeah but see> [<] I don't want it all over your clothes [!] .", "*CHI: that's alright .", "*MOT: that's not [!] alright [>] .", "*CHI: <that's> [<] alright on my pants .", '*MOT: okay I want you to put the egg in it .', '*CHI: <(o)kay> [>] .', '*MOT: put the egg inside .', '*MOT: zzz .', '*CHI: (y)ick .', '*MOT: ew yucka@f .', '*MOT: okay le(t) me get some sugar .', '*MOT: wan(t) (t)a do the sugar for me ?', '*CHI: disgusting !', '*CHI: gross !', '*MOT: really ?', '*CHI: yeah .', '*MOT: you want (t)a do the sugar for Mama too ?', '*CHI: yeah .', '*MOT: now wait a minute .', '*MOT: le(t) me get my teaspoon (.) .', '*MOT: like &-uh +...', '*MOT: (o)kay le(t) me see that cup .', '*MOT: that was the egg in that right ?', '*CHI: this is no ?', '*MOT: huh ?', '*CHI: no .', '*MOT: okay just put it down .', '*MOT: alright now .', '*MOT: okay .', '*MOT: four tablespoons (.) .', '*MOT: hold this here .', "*MOT: sugar's going in there (.) .", '*MOT: you wan(t) (t)a put two [!] or you wan(t) (t)a put four sugars in it ?', '*CHI: two [>] .', '*MOT: how [<] many do you want ?', '*CHI: two .', "*MOT: you're gonna eat [!] it .", '*MOT: now shake it .', '*MOT: what is that ?', '*MOT: now <put it in there> [>] .', '*CHI: <can I just> [<] taste it ?', '*MOT: put it in there !', '*MOT: put it in there .', '*MOT: put it in here .', '*MOT: one [>] .', '*CHI: <&g> [<] good !', '*MOT: <put another> [/] put another one in here .', "*MOT: make sure it's a whole bunch .", '*CHI: can I <just [/]> [>] .', '*MOT: <put it> [<] xxx .', '*MOT: put it in there .', '*MOT: two .', '*CHI: I +/.', '*MOT: two more !', "*MOT: make sure it's filled !", '*MOT: no .', "*MOT: make sure it's filled (.) .", '*MOT: (o)kay dump it .', "*MOT: that's three .", '*MOT: one more .', '*MOT: are you counting ?', '*CHI: one .', "*MOT: wait a minute you're not counting it .", '*MOT: okay now put it in .', "*MOT: that's four .", '*CHI: can I have a little taste ?', '*MOT: a little taste of what ?', '*MOT: flour ?', '*MOT: I mean sugar ?', '*CHI: yeah .', "*MOT: that's too much for Chi's belly .", '*CHI: it will help me .', '*MOT: it will not help you .', "*MOT: okay <that's enough> [>] .", '*MOT: <put it> [>] down .', '*MOT: put it down .', '*MOT: put it down !', "*CHI: it's not that much !", "*CHI: <it's [/] it's> [<] +...", '*CHI: zzz .', '*MOT: open up your mouth (.) .', '*MOT: zzz .', "*MOT: come here <I'll> [>] wipe it .", '*CHI: zzz [<] .', '*CHI: zzz .', '*MOT: okay <a little> [/] a little sugar is not going to kill you (.) .', "*MOT: what's the matter ?", '*MOT: did it go in your nose ?', "*MOT: oh I('m) sorry .", '*MOT: (are) you acting like baby now ?', '*MOT: zzz .', '*MOT: do it like that .', '*MOT: zzz .', '*MOT: do it like I said .', '*MOT: okay .', '*MOT: now !', '*MOT: take this one here .', '*MOT: okay .', '*MOT: move that now .', '*MOT: and how many (.) ?', '*MOT: four teaspoons .', '*MOT: now wait a minute now <is this> [/] is this a teaspoon ?', "*MOT: okay I'm gonna fill it and I'm gonna let you empty it .", "*MOT: now don't put this in your mouth .", '*MOT: this is yucka@f .', '*CHI: yeah .', '*MOT: (o)kay here you dump it in there .', '*MOT: one .', '*MOT: can you count ?', '*CHI: only [?] twice xxx [>] .', '*MOT: <(o)kay> [<] count when you put them in .', '*MOT: two [>] .', '*CHI: two [<] .', '*MOT: tap on the side (.) o(f) the bowl (.) .', '*MOT: two (.) .', '*MOT: another one .', '*MOT: three .', '*CHI: can I just have <&t> [/] [>] .', '*MOT: tap [<] .', '*MOT: put that in there .', "*MOT: that's four .", '*MOT: four teaspoons o(f) what ?', '*CHI: <can I just> [>] (.) take [///] .', '*MOT: <do you know what this is> [<] ?', '*CHI: what ?', '*MOT: this is baking powder .', '*CHI: yeah ?', '*MOT: <go ahead> [>] !', '*CHI: can [<] I just taste some (of) that ?', '*MOT: what ?', "*MOT: <Chi> [>] you're gonna be eating supper too .", '*CHI: this [<] .', '*CHI: I just want (t)a [///] just one okay ?', '*MOT: just one .', '*CHI: yeah .', '*MOT: (be)cause you never eat supper (.) .', '*MOT: what are you having for supper (.) ?', '*MOT: huh ?', "*MOT: you know what you're having ?", '*CHI: yep !', '*MOT: what ?', '*CHI: cornbread .', "*MOT: that's not for supper (.) .", '*MOT: are you having liver ?', '*CHI: yep !', '*MOT: ouch (.) !', '*MOT: xxx (.) .', '*MOT: wait a minute .', '*MOT: oh well what else do we need (.) ?', '*MOT: a little dab of salt .', "*MOT: don't put too much !", '*MOT: here you put some salt in it .', '*MOT: shake the salt (.) .', '*MOT: okay that is (e)nough with salt .', "*MOT: okay we're gonna give you some milk .", '*CHI: and can I do that ?', '*MOT: can you mix what ?', '*MOT: can you mix it ?', '*CHI: yeah .', '*MOT: well soon as I put everything all together (.) .', '*MOT: (o)kay .', '*MOT: put the milk in (.) .', '*MOT: you like helping your mother ?', '*CHI: yep !', '*MOT: okay .', '*MOT: here take this and mix it .', '*MOT: make sure you do it good .', "*MOT: don't drop it on the floor (.) .", '*MOT: mix it good .', '*MOT: easy easy .', '*CHI: this how to do it .', '*CHI: wait a minute .', '*CHI: I did a scratch .', '*MOT: xxx scratch ?', '*MOT: make sure you mix it good okay ?', '*CHI: yep !', '*MOT: mix it very very good (.) .', "*MOT: here I'll give you a big spoon and you can mix things better with a bigger spoon .", '*MOT: &a:h that tastes yucka@f like that .', '*CHI: mhm .', '*MOT: it tastes yucka@f .', '*MOT: wait (a) minute now .', "*MOT: see you're not getting it all .", '*CHI: can I do it ?', '*MOT: yes honey .', '*MOT: wait a minute .', '*MOT: see it all on the sides ?', '*MOT: xxx give it to you in one second you can mix it .', '*MOT: le(t) me just get the sides (.) .', '*MOT: did you used to make this in school ?', '*CHI: hunhunh .', '*MOT: xxx you made cornbread !', '*MOT: Miss Rand used to make it .', "*MOT: don't you (re)member Miss Rand making cornbread in school ?", '*CHI: she [/] <she [/]> [>] .', '*MOT: now [<] you got ta make sure you go around .', "*MOT: don't go back and forth (.) .", '*MOT: what are you making ?', '*MOT: you making a mess or are you making cornbread ?', '*CHI: cornbread .', '*MOT: oh (.) .', '*MOT: sleeves sleeves +...', "*CHI: it's getting there .", '*MOT: is it getting there ?', '*CHI: yep !', '*MOT: is it hard to do ?', '*CHI: yeah .', '*MOT: yeah .', '*CHI: you can [///] like this .', '*CHI: sideway(s) (.) .', "*CHI: it's blocking it .", '*MOT: huh ?', '*CHI: these are lumps in it !', '*MOT: yeah well keep on stirring it make sure the lumps disappear okay ?', '*CHI: why these lumps in it ?', '*MOT: yeah .', '*MOT: why [!] (.) ?', '*CHI: wh(y) +/.', '*MOT: (be)cause sometimes when the corn <brea(d)> [/] [>] .', '*CHI: see [<] the lump right there ?', '*MOT: yes yes .', '*MOT: want me to xxx [>] ?', '*MOT: okay keep on doing it .', '*CHI: zzz [<] .', '*MOT: mix it !', "*MOT: you're not mixing it .", '*MOT: it has got ta be mixed very well .', "*CHI: now that's it ?", '*MOT: keep on mixing it (.) .', '*CHI: wait (un)til I get here .', '*MOT: keep on mixing it .', '*MOT: xxx now I got ta put some butter on that +...', '*MOT: on the &-uh +...', '*CHI: this here .', '*MOT: on <the little> [//] the &-um +...', "*MOT: you're the one (who')s mixing it .", '*MOT: keep on mixing it then (.) .', '*CHI: this here you done this okay ?', '*CHI: and I do this okay ?', '*MOT: do what ?', '*CHI: that .', '*MOT: I know .', '*MOT: Mama wants to pour it in this .', '*MOT: okay (.) ?', '*MOT: okay you can keep on mixing it .', "*MOT: make sure it's mixed well [!] (.) .", "*MOT: you're gonna have some liver and pepper and onions for supper ?", '*CHI: yeah with this .', '*MOT: yeah (.) .', '*MOT: with that ?', "*MOT: once that's all cooked then you're gonna some of that with your liver and peppers ?", '*CHI: yeah .', '*MOT: and potatoes .', '*MOT: what do you want for a vegetable ?', '*MOT: do you like beets ?', '*CHI: yeah that [!] there .', '*MOT: yeah that [!] there ?', '*MOT: <you got ta make sure stir this> [>] .', '*MOT: <watch it> [>] .', '*CHI: zzz [<] .', '*MOT: why .', '*MOT: you all done doing it ?', '*CHI: yeah .', '*MOT: was that hard to do or what ?', '*CHI: yeah .', "*CHI: my feet's sound asleep .", "*MOT: oh yeah that's (be)cause you're kneeling on them hon(ey) .", '*MOT: you think you can wake them up ?', '*CHI: no .', '*MOT: no ?', '*MOT: you been being a very good boy today ?', '*CHI: yep .', '*CHI: <I being> [<] [>] so patient .', "*CHI: <they didn't> [<] [>] have that fire truck .", '*MOT: yeah [<] .', '*MOT: <so what> [<] ?', "*MOT: they didn't [!] ?", '*MOT: oh my god .', "*MOT: you've been waiting so what patiently ?", '*CHI: for that fire truck +/.', "*MOT: but you've been waiting patiently ?", '*MOT: well (.) when I get some money (.) I can get you that big fire that you want .', '*MOT: maybe .', '*CHI: and it comes apart too [>] .', '*MOT: <oh yeah> [<] ?', '*MOT: it does ?', '*CHI: but you got_to send away for it .', '*MOT: yeah .', '*CHI: you got ta &-um [///] zzz !', '*MOT: did you help me today +/?', "*CHI: what's that flappin@o ?", "*MOT: what's that what ?", '*CHI: flappin(g) !', '*MOT: flattened ?', '*CHI: no like slap <slap slap> [>] .', '*MOT: <oh you mean> [<] slapping ?', '*CHI: yeah .', "*MOT: it's the &-um (.) the stuff .", '*MOT: the &-um cornbread .', '*MOT: is it all mixed now or what ?', '*CHI: yep !', "*MOT: do you think it's ready to go in the oven ?", '*CHI: yep .', '*CHI: I got my hand in it .', "*MOT: that's alright .", '*MOT: can you wipe your hand ?', '*MOT: lick it (.) .', '*MOT: lick it .', "*CHI: oh [!] it's too salty .", '*MOT: too salty [!] ?', '*MOT: maybe you put too much salt in it ?', '*MOT: you think so ?', '*CHI: you [!] did !', "*MOT: I didn't put the salt in I asked Chi to do it .", "*MOT: didn't I ask you to put the salt in it ?", "*CHI: and you did'n(t) [///] I did [>] .", "*MOT: <no it> [<] ain't salty [!] .", "*MOT: it's not salty .", '*CHI: will you put all down here and eat it ?', '*MOT: I can taste sugar (.) .', "*MOT: that's what I [!] taste (.) .", '*MOT: is that what I taste ?', '*MOT: sugar .', '*CHI: I was gonna say taste like that <and I> [>] xxx +...', '*CHI: should I go and fix it ?', '*MOT: <oh yeah> [<] ?', '*MOT: xxx called me up earlier .', '*CHI: why ?', '*MOT: he asked me how you were doing .', "*MOT: I said he's laying down taking a nap .", '*MOT: he said really@q ?', '*MOT: I said yep@q .', "*MOT: oh cornbread's in the oven I think we had a good day today did you have a good day today or what ?", '*MOT: huh ?', '*MOT: did you have a good day ?', '*CHI: nothing !', '*MOT: nothing ?', '*MOT: wha(t) (do) you mean nothing ?', '*CHI: hey !', '*CHI: why xxx not +...', '*MOT: huh ?', '*CHI: turned up ?', '*MOT: what ?', '*MOT: (be)cause I turned it down [!] so we can record us talking .', '*MOT: do you think we did a good job ?', '*MOT: huh ?', '*MOT: <&c> [/] can you sing this song ?', '*MOT: wan(t) (t)a sing with Mama ?', "*MOT: <let's sing> [>] a song .", '*CHI: no [<] .', '*MOT: come on .', '*CHI: no !', '*MOT: oh .', "*MOT: it makes me so sad when you don't want to do things like that .", '*CHI: xxx .', '*MOT: huh ?', '*CHI: xxx .', "*MOT: where's my huggings@wp and my kissings@wp ?", '*MOT: I thought I always get one of those every day .', "*MOT: don't I always get a hug and a kiss ?", '*MOT: okay .', '*MOT: now we get this (.) <love you> [>] +/.', '*CHI: <the stove> [<] .', '*MOT: love you who will do much ?', '*CHI: a willy@c wunch@c .', '*MOT: a wilda@f bunch ?', '*MOT: are [>] you sure ?', '*CHI: yeah [<] .', '*CHI: yeah .', '*MOT: yeah .', '*MOT: you [/] you fakin(g) me ?', '*CHI: yeah .', "*MOT: you're fakin(g) huh (.) ?", "*MOT: you sure about that you sure you're fakin(g) ?", '*MOT: umhum .', '*MOT: oh [!] <I want> [/] <I want> [/] I want a good one .', '*MOT: I want my big hug !', '*MOT: and my big kiss !', '*MOT: how can I get my big kisses ?', '*MOT: &aw baby [>] .', '*CHI: <can we> [<] [/] can we go lay down in your bed ?', '*MOT: but what am I doing ?', "*CHI: oh here's that .", '*MOT: what am I doing ?', "*MOT: can you tell what I'm doing ?", '*CHI: cooking .', '*MOT: yeah .', '*MOT: and what did we make ?', '*CHI: cornbread .', '*MOT: and what else am <I xxx> [>] +/.', '*CHI: cooking [<] supper !', '*MOT: yeah !', '*CHI: you can put it in this in that .', "*MOT: it's in the oven .", '*MOT: come on babe .', '*CHI: can &-um I have xxx .', '*MOT: what ?', '*MOT: cheesies@f ?', '*CHI: yeah .', "*MOT: (re)member you're eating supper and you won't eat supper if you eat all that kind of garbage .", '*CHI: no just one .', '*MOT: just one ?', '*MOT: are you sure just one ?', '*MOT: can you just eat one ?', "*MOT: I don't think so (.) .", '*MOT: well that should be it .', "*MOT: I guess that's all she needs is (.) us doing cooking and everything .", '*MOT: huh ?', '*MOT: okay ?', '*CHI: zzz .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//stnmt1.cha
HSLLD/HV1/MT//jeamt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: you [//] is it a good supper ?', '*MOT: need a napkin ?', '*CHI: yeah .', '*CHI: xxx eating .', '*MOT: good !', "*MOT: chew it real good <don't> [//] careful of the chicken okay ?", "*MOT: (..) now it's my turn to get stuff .", '*MOT: so after supper +...', '*CHI: yeah ?', '*MOT: and you take a bath .', '*MOT: okay ?', '*CHI: yeah .', '*MOT: and go pick out what bathing suit you wanna wear tomorrow .', '*MOT: alright ?', '*CHI: mhm .', "*CHI: I'm gonna go to bed .", '*MOT: after Fraggle Rock .', '*MOT: (you) gotta watch Fraggle Rock first .', '*CHI: &=laughs .', '*CHI: I forgot .', '*MOT: pick out a book too if you want me to read you a book you gotta pick out a book alright ?', '*CHI: yeah .', '*CHI: haha [x 2] .', '*MOT: what ?', '*CHI: something in the middle xxx .', '*MOT: chicken ?', "*CHI: yeah but I don't like it there .", '*MOT: you like chicken what are you talking about ?', "*CHI: I don't like it like chicken .", "*CHI: I don't have any butter I like xxx [>] +/.", '*MOT: <I put butter> [<] on it already melted .', '*CHI: I want some more butter I want your [!] butter .', "*MOT: I'll give you some of it .", '*CHI: thanks .', '*MOT: push it on a bit okay ?', "*MOT: (..) so [!] tell me about yesterday when you went to Friendly's with &-um (.) Grand and mother .", "*CHI: I didn't cry .", "*MOT: you didn't cry ?", '*CHI: no .', '*MOT: what color ice cream did you have ?', '*CHI: strawberry and she had strawberry .', '*MOT: strawberry ?', '*CHI: yep .', "*CHI: it's good .", '*MOT: it was good ?', '*CHI: yeah .', "*MOT: well I'm glad you're a good girl Chi .", '*MOT: or some time we can take him with us when we go .', '*MOT: hm: ?', '*CHI: yep .', '*MOT: did you get along with him ?', '*CHI: yep .', '*MOT: yep ?', '*CHI: played with him .', '*MOT: good !', '*MOT: how old is he ?', '*CHI: &-uh three .', "*MOT: he's three ?", '*CHI: mhm .', '*CHI: he just turned [!] three .', '*MOT: he just turned three ?', '*CHI: yep .', '*MOT: eat your rice too hon (.) and your spinach .', '*CHI: I am gonna .', '*MOT: wanna see your face you got a little sunburned today .', '*CHI: is it gonna hurt ?', '*MOT: no .', '*MOT: &=gasps hot !', '*CHI: xxx .', "*MOT: it's hot .", '*CHI: do I have_to eat the spinach ?', '*MOT: yes .', '*CHI: have_to chew on it like this .', '*MOT: the spinach ?', '*CHI: yeah .', "*CHI: you don't ?", '*MOT: just chew it up .', "*CHI: I don't want to (be)cause I can swallow it better .", "*CHI: (be)cause it's hot (.) now watch me swallow it okay ?", '*MOT: well blow on it before you put it in your mouth hon .', "*MOT: then it won't be hot .", '*CHI: 0 [=! makes blowing sounds] .', '*MOT: good chicken .', '*CHI: hot hot hot .', '*MOT: love Boston chicken .', "*CHI: I don't .", '*MOT: yes you do !', '*CHI: nuhhuh .', '*MOT: what are you eating it for then ?', "*CHI: (be)cause it's good .", '*MOT: &=laughs .', '*CHI: I xxx up .', '*MOT: I know you do .', '*CHI: you fooling .', '*MOT: mm .', '*MOT: you were fooling .', '*CHI: what ?', '*MOT: you [!] were fooling .', '*CHI: I know !', '*MOT: oh .', '*CHI: I said that .', '*MOT: oh .', '*CHI: &=laughs .', "*MOT: you're silly .", "*MOT: you're getting to be a pretty good swimmer Chi .", '*CHI: (be)cause I put my feet up in the air ?', '*MOT: is that (be)cause you can your face under the water ?', '*MOT: you can do the doggie paddle <with your &l> [//] with your &-um (.) life jacket on .', '*CHI: because I know how to put on my seat up in the xxx like xxx does ?', '*MOT: mhm yep .', '*CHI: how old me ?', '*MOT: four .', "*CHI: no I had a birthday party so I'm different .", '*MOT: no .', '*MOT: <you were> [>] +/.', '*CHI: yeah [<] +/.', '*MOT: you were three before the birthday and then you turned four .', '*MOT: you know that .', "*CHI: <I> [//] I'm this much now (be)cause I +/.", "*MOT: you're four .", '*CHI: no I just turned [!] this month .', "*MOT: no your next birthday [!] you'll be five .", '*CHI: listen [!] to me !', '*CHI: listen to [!] me .', '*CHI: I wanna be five (be)cause I just had a birthday .', '*MOT: no &=laughing .', '*CHI: what do you mean one [!] I just xxx [!] five .', '*MOT: oh okay .', '*CHI: <(be)cause I know to> [/] (be)cause I know how to pull my seat up in the car .', '*MOT: okay .', "*MOT: you're just pretending .", '*CHI: (..) the pea soup was finished .', '*MOT: what honey ?', '*MOT: (..) what a good girl you are .', '*CHI: it looks like xxx this pea soup likes broccoli .', '*MOT: you ate all your spinach ?', '*MOT: excellent .', '*CHI: mm .', '*CHI: (.) yummy .', '*MOT: mm !', '*CHI: that yum stuff xxx this good stuff xxx .', '*MOT: spinach gives you muscles you know .', '*CHI: like a mean muscle ?', '*MOT: mhm .', '*CHI: see my muscle ?', '*MOT: yeah .', "*CHI: oh xxx <you're not gonna> [//] you're gonna [: going to] eat all your spinach xxx .", '*MOT: not yet .', '*CHI: what ?', '*MOT: eat some of your rice .', "*CHI: it's white does rice make your muscles grow ?", '*CHI: every food does and every drink do ?', '*MOT: every food and every (.) liquid gives you some kind of vitamins or helps you get big and strong .', '*CHI: is me gonna get big and strong (be)cause I eat special vitamins ?', '*MOT: yep !', '*MOT: look how big you are already .', '*CHI: hm: ?', '*MOT: look how big you are already .', "*MOT: you're growing out of all your clothes .", '*CHI: I get more bigger .', '*MOT: mhm .', '*MOT: (..) eat your rice hon .', '*CHI: I will .', '*MOT: oh good .', "*CHI: (..) I'm done .", "*MOT: oh no you're not .", '*CHI: just my rice xxx [>] .', '*MOT: no [<] you eat some chicken too .', '*MOT: &-um what happened today at the play ground how did you get hurt ?', '*CHI: someone pushed me one time then I stand up and got sand in my mouth .', '*MOT: someone pushed you ?', '*CHI: yep .', '*MOT: they pushed you\xe2\x86\x91 were you on the swing ?', '*CHI: no .', '*CHI: when they [!] were on the swing they pushed me one time .', '*MOT: did they hit with you with their feet by accident ?', '*CHI: yep .', '*MOT: wow .', '*MOT: (.) you did have a mouth full of sand Chi .', '*CHI: like a like an aminal [: animal] ?', '*MOT: &=laughs .', '*CHI: huh ?', '*CHI: like a aminal [: animal] ?', '*MOT: no .', '*CHI: like a Fraggle Rock cartoon ?', '*MOT: yeah .', "*MOT: (..) I'm glad you didn't get too hurt though .", '*CHI: I did .', "*MOT: well you didn't bleed [!] you didn't cut yourself or anything .", "*CHI: yeah but I didn't get too hurt I got a little bit xxx .", '*MOT: mhm [=! clears throat] your heart got hurt you said ?', "*CHI: no I got a little bit hotter [!] (.) it's hard to [/] to hurt you under your mouth right here .", '*MOT: oh .', '*CHI: I hurt my nose too .', '*MOT: you did &=laughing ?', '*CHI: uhhuh .', '*CHI: look .', '*MOT: looks perfect to me .', '*CHI: &-uh right here .', '*CHI: little bump on nose .', '*MOT: really ?', '*CHI: feel my nose ?', '*CHI: booboo .', '*MOT: does it hurt ?', '*CHI: uhhuh .', '*MOT: hm: ?', '*MOT: was that a yes or a no ?', '*CHI: yes .', '*MOT: huh ?', '*CHI: no !', '*MOT: oh .', "*CHI: it doesn't hurt .", '*CHI: (..) &-uh ow !', '*MOT: Chi !', "*MOT: oh I'm full .", '*MOT: I ate all [!] my dinner .', "*CHI: I'm full ate all my dinner .", "*MOT: you eat all your dinner all your chicken right now (.) and <I'll> [/] I'll give you a [//] &-um popsicle .", "*CHI: I can't do this .", "*MOT: well don't worry about it Chi I'll fix it when you get up .", "*MOT: don't worry about it .", '*MOT: I might have some more rice .', '*CHI: xxx .', '*MOT: I want you to eat your chicken .', "*CHI: me's done !", "*MOT: you're not done yet .", '*CHI: mhm !', "*MOT: not if you want a popsicle later you're not done .", '*CHI: &=whines .', '*MOT: want some more rice ?', '*CHI: xxx .', '*MOT: huh ?', '*CHI: no !', "*MOT: I didn't hear you ask me !", '*CHI: xxx .', '*MOT: what ?', '*CHI: me .', '*MOT: forget it .', '*CHI: I said please !', '*MOT: please what ?', '*CHI: can I have some more rice ?', '*MOT: oh okay .', "*MOT: well you Ohave gotta talk I don't understand +/.", '*CHI: I was !', "*CHI: you didn't hear me though .", '*MOT: oh .', "*MOT: that's it .", '*CHI: I wanted it xxx .', '*MOT: still got the chicken there Chi .', '*CHI: I wanted a little [!] bit !', '*MOT: xxx .', "*CHI: you're bad .", "*MOT: don't call me bad .", '*CHI: &=laughs .', '*MOT: it hurts my feelings .', '*CHI: &=laughs .', '*CHI: I just was fooling .', '*MOT: oh .', '*MOT: are you tired ?', '*CHI: can I have green (.) popsicle ?', "*MOT: I'll see if there is green .", '*MOT: are you tired ?', '*CHI: I said [!] see the green popsicle .', "*MOT: you're funny .", '*CHI: huh ?', "*MOT: you're funny .", '*CHI: I want some green .', "*CHI: there's no green popsicle .", '*MOT: how do you know ?', '*CHI: find one .', '*CHI: okay ?', "*MOT: I'll try .", '*CHI: <(be)cause I> [//] because please xxx .', "*MOT: I don't know .", '*CHI: I know !', '*MOT: is green your favorite color ?', '*CHI: yep .', '*MOT: yep ?', '*CHI: it is .', '*CHI: (.) it xxx .', '*MOT: you gonna help me decorate your room when we move ?', '*CHI: yep !', '*MOT: what color do you want it to be ?', '*CHI: blue .', '*MOT: blue ?', '*MOT: what about purple ?', '*CHI: and purple too .', '*MOT: oh .', '*CHI: I want blue and purple and green and orange and red .', '*MOT: wow .', '*CHI: okay ?', "*MOT: I'm sure we could find some [//] pictures with those colors in them we could put them up on your wall .", '*MOT: alright .', '*MOT: does that sound good ?', '*CHI: mhm .', '*MOT: know what ?', "*MOT: &y you know what you're gonna get from Mimi and Pappa for your birthday when we move ?", '*CHI: huh ?', '*MOT: a play house that goes out in the backyard right near the swingset .', '*MOT: you remember ?', '*CHI: like xxx has ?', '*MOT: yes !', '*MOT: and you and Adam can play on there .', "*CHI: what's &an &a nama@n ?", "*MOT: Adam that little boy who lives at the &h where we're gonna [: going to] move .", '*CHI: oh .', '*MOT: remember ?', "*CHI: we're xxx .", '*MOT: hm: ?', '*CHI: xxx we got xxx .', '*CHI: we got apple .', '*CHI: we got Quick !', '*CHI: (.) she got xxx .', '*CHI: (.) she got milk .', '*MOT: you got the Muppet Babies plate .', '*CHI: yeah this is a baby plate right ?', "*MOT: well (.) you have girl's plates .", '*CHI: can I put this on xxx ?', "*CHI: I'm done now I can walk .", '*MOT: let me see let me see let me see .', '*MOT: yeah I guess you did eat a lot is your tummy full ?', "*MOT: here I'll give you a popsicle .", '*CHI: &=laughs .', "*MOT: watch out you don't fall !", '*MOT: alright .', '*MOT: (.) you got (.) cherry (.) tropical punch (.) grape (.) tropical punch +...', '*CHI: I want tropical punch .', '*MOT: here you go .', '*CHI: is tropical +/.', "*MOT: I'll put &-um Sesame Street on okay ?", '*CHI: is tropical punch good ?', '*MOT: yes [!] you tell me .', '*MOT: alright ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jeamt1.cha
HSLLD/HV1/MT//astmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: alright give me the fish .', '*CHI: I love fish .', '*CHI: okay .', '*CHI: Daddy use this bowl .', '*CHI: Daddy ?', '*MOT: that is enough Astra ?', '*CHI: yeah .', '*MOT: and a piece of cucumber okay (.) ?', '*CHI: you give me a big big big .', '*CHI: you gonna give me a big big big big chicken mommy [>] ?', "*MOT: <you don't wan (t)a> [<] big one do you ?", '*CHI: <&n> [//] no .', '*FAT: Astra stop xxx [>] .', '*MOT: xxx [<] .', '*CHI: I wan (t)a a small piece .', '*CHI: I want a small tiny fishy .', '*CHI: just like peas .', '*CHI: xxx ready like xxx .', '*FAT: you have_to say your grace now .', '*CHI: when Ronny comes and my Auntie .', '*MOT: Ronny come on !', '*CHI: Ronny come on !', '*CHI: I need to say your grace .', '*CHI: say your grace .', '*MOT: Ronny sleeping still ?', "*AD1: she's up .", '*MOT: hm: .', '*CHI: Mommy !', "*MOT: let's wait for Ronny .", '*CHI: Mommy !', '*CHI: <you know> [/] you know your grace now ?', '*MOT: no .', '*MOT: I never learn it .', '*MOT: you have_to teach it to me right ?', '*CHI: okay .', '*CHI: Ronny you know your grace ?', '*BRO: yeah .', '*CHI: let me hear you .', '*BRO: God is good .', '*BRO: God is great .', '*BRO: let us thank him for our food .', '*CHI: let me hear <it end> [>] .', '*BRO: amen [<] .', '*CHI: God is good .', '*CHI: let us thank him for us food .', '*CHI: amen .', '*CHI: thank you God .', '*FAT: good .', "*CHI: I'm not [!] eating the salad .", '*MOT: you have_to eat the salad before xxx [///] Eliot [?] you want some more of that now ?', '*MOT: well give me that .', '*CHI: I want some Mommy .', '*CHI: I thought you was gonna give me some ?', '*BRO: xxx .', '*MOT: yeah .', '*CHI: yes .', '*CHI: you gonna have some .', '*MOT: (..) you want bread ?', '*CHI: hm: .', '*CHI: taste good what <he has> [/] he has got .', "*CHI: don't taste like pepper Ronny .", '*CHI: Ronny you want some of that stuff ?', '*CHI: not pepper (.) .', '*CHI: okay ?', '*MOT: Astra do you want bread ?', '*MOT: you had bread already .', '*MOT: <it just xxx> [>] .', '*FAT: <sit properly at the table> [<] .', '*MOT: sit properly at the table .', '*MOT: Ronny how much pieces you want ?', '*CHI: one I want two .', '*CHI: mm [>] .', '*MOT: <Ronny you want bread> [<] ?', '*BRO: yes please .', '*CHI: Mommy .', '*CHI: you gave me some ?', '*MOT: mhm .', '*CHI: well where is it ?', '*MOT: on your salad I put it .', "*CHI: I don't see it .", "*MOT: you don't have_to see it (.) but it's there (.) .", '*FAT: xxx .', '*CHI: Daddy can you throw this in the garbage ?', '*FAT: sure .', '*CHI: thank you Daddy .', "*FAT: you're welcome .", '*MOT: you like the fish ?', '*CHI: uhhuh .', '*MOT: remember you have_to eat the salad .', '*CHI: okay Mommy (.) .', '*CHI: remember I ate that salad before with that other day ?', '*CHI: that was good [!] and I ate that too .', '*MOT: mhm .', '*CHI: it was so good good good .', '*CHI: I love it (.) .', "*CHI: but I'm gonna eat down that [!] (.) .", '*CHI: that tastes so good Mommy .', '*MOT: mhm (.) .', '*CHI: <and never (.) ever> [>] .', '*MOT: xxx [<] .', '*CHI: I got one Daddy .', '*MOT: be careful .', '*CHI: okay Daddy .', '*MOT: push your glass inside xxx .', '*CHI: okay .', '*MOT: xxx .', '*FAT: mhm .', '*MOT: you better eat your salad .', "*FAT: Astra don't eat like that .", '*FAT: make noise with your mouth like that .', '*MOT: eat a small piece of salad Astra .', '*CHI: okay .', '*CHI: you sure Mommy ?', "*MOT: yes I'm sure .", '*CHI: okay .', '*CHI: want me to xxx tiny piece .', '*CHI: oh Mommy watch me swallow it up .', '*MOT: mhm .', '*MOT: you have_to eat all of it okay .', "*CHI: I'm going to like after that .", '*MOT: yes you will .', '*MOT: but you have_to eat salad first .', '*CHI: no .', '*CHI: have_to eat the salad xxx .', '*MOT: you see Ronny eating salad ?', '*CHI: mhm .', '*CHI: <&m> [>] .', '*MOT: <he [?]> [<] almost reach the light (.) .', '*CHI: all of us almost reach [/] reach the light .', '*MOT: mhm .', '*CHI: when summer [?] comes the right way he jumps and xxx I came faster than running .', "*MOT: don't eat too fast Astra .", "*MOT: you'll choke yourself .", '*CHI: okay (.) .', '*CHI: not too fast .', '*CHI: can we eat a little bit fast (.) ?', '*CHI: huh ?', '*MOT: you can eat fast (.) but not too fast .', '*CHI: okay .', '*MOT: but there is no rush (.) so take your time .', '*CHI: okay .', "*CHI: Daddy don't put salt in yours .", '*MOT: I have no salt on it Astra .', '*CHI: huh ?', '*MOT: I have no salt on it [!] .', '*CHI: that fat is [!] salt (.) Mommy (.) .', "*CHI: if you put salt and some beans [?] in your mouth it's salt and pepper (.) .", '*CHI: &a:h .', '*CHI: but (.) you only have_to put that in it .', '*CHI: only that thing in it (.) not .', '*FAT: sit properly at the table and eat up .', '*MOT: she gonna eat all [!] that salad .', "*MOT: don't forget that .", '*CHI: okay Mommy .', '*CHI: you told me that before .', "*MOT: I know but you're not making a move to eat it .", '*CHI: I am !', '*CHI: watch me make a move again .', '*CHI: oops I made it (.) .', '*CHI: Mommy ?', '*MOT: hm: ?', '*CHI: know what (.) ?', '*CHI: this is like &-um [/] &-um flower .', '*MOT: these are lettuce leaf .', '*CHI: huh ?', "*MOT: it's lettuce .", '*CHI: lettuce leaf too .', '*MOT: mhm .', '*FAT: yeah [>] .', "*FAT: <but it's good for you> [>] .", '*MOT: <eat it> [<] .', '*MOT: eat it .', '*MOT: <you know what the doctor said> [>] .', "*CHI: <I'm going to> [<] .", '*CHI: huh ?', "*CHI: <I won't> [/] I won't ask you for no more .", '*MOT: I know and vegetables you have_to eat vegetables and salad .', '*CHI: oh .', '*CHI: is that what the doctor said ?', '*MOT: uhhuh [>] .', '*FAT: yup [<] .', '*CHI: yay !', '*CHI: I love vegetables !', '*FAT: you can get seconds in vegetables .', '*CHI: okay Daddy (.) .', '*CHI: come on go look .', "*CHI: who's that (.) ?", '*CHI: Mommy ?', "*CHI: <what's> [//] I'm going in the first grade when I grow up ?", '*CHI: huh ?', "*CHI: I'm going in the first grade when I grow up ?", '*MOT: uhhuh .', '*CHI: Ronny ?', "*CHI: I'm gonna be in the first grade .", "*CHI: I'm going in the first grade and when I grow up .", '*CHI: going in the first grade .', '*CHI: cars (.) ?', '*CHI: I knew it .', "*CHI: I knew it he don't have cars (.) .", "*CHI: don't pick at me okay ?", "*CHI: don't pick me .", '*FAT: (..) xxx .', '*FAT: huh ?', '*AD1: no .', "*MOT: (..) you don't eat fish ?", '*AD1: xxx .', '*FAT: huh ?', "*AD1: I don't eat xxx .", '*AD1: xxx .', '*FAT: oh .', '*FAT: zzz .', '*CHI: no [!] never put that in your +...', "*CHI: Daddy that's pepper right there ?", '*CHI: I thought it was pepper like peppers .', '*CHI: xxx .', "*CHI: if it's good for Ronny it's good for my daddy .", '*FAT: yeah .', '*BRO: good for me ?', "*BRO: it's not good for me .", '*CHI: yes it is .', '*CHI: uhhuh (.) .', '*CHI: not pepper .', '*BRO: this is pepper .', '*CHI: Mommy (.) is that pepper ?', '*MOT: what ?', '*CHI: that xxx right there .', '*MOT: yeah .', '*BRO: oh .', "*BRO: it's salad dressing I thought you were talking about the pepper .", '*CHI: that [!] pepper !', '*CHI: not that already not pepper .', "*MOT: it's not food [?] that's callaloo [= West Indian vegetable] .", "*CHI: I'm gonna make a move .", "*CHI: I'm gonna make a move Mommy .", '*CHI: want me see you when I make a move ?', '*MOT: uhhuh .', '*CHI: okay watch me .', "*FAT: that's good .", '*FAT: now you have_to eat everything .', '*FAT: do you like me ?', '*CHI: me ?', '*CHI: do you like me ?', "*MOT: it's good (.) alright ?", '*CHI: uhhuh (.) .', '*CHI: I love you Mommy .', '*MOT: I love you too Astra .', '*MOT: eat your salad .', '*CHI: okay .', '*MOT: xxx .', '*CHI: Mommy I want the +...', '*BRO: xxx .', '*MOT: what you say Astra ?', '*CHI: can I have a piece of fish ?', '*MOT: yeah you can have a piece of fish but you have_to eat your salad .', '*CHI: okay .', '*CHI: I eating the salad up .', '*CHI: thank you Mommy .', "*MOT: you're welcome .", "*CHI: it's too much to eat meat [!] me .", "*MOT: I'm watching you [!] .", "*CHI: I'm eating the salad (.) !", '*CHI: what you watching me for why ?', '*MOT: go ahead and eat your salad .', '*CHI: I know how eat my salad Mommy .', '*MOT: you know how to ?', '*CHI: yes I do !', '*MOT: uhhuh .', '*MOT: zzz .', "*CHI: and I don't know how to lie down .", '*MOT: you doing good Astra eat up <a lot> [/] a lot already .', '*MOT: eat up .', "*CHI: Mommy I'm doing good too .", '*MOT: mhm .', "*MOT: that's what I said you doing good eating your salad right (.) ?", "*CHI: Mommy you didn't give me no bread !", '*MOT: you have not finished eating your salad yet .', "*CHI: <that's> [>] [/] .", '*MOT: and [<] you had bread already this morning (.) .', '*CHI: mm .', "*MOT: that's the fish you ate .", "*MOT: that's not your salad .", "*CHI: because I'm not eating it .", "*CHI: I'm taking my bread and xxx light .", "*CHI: don't talk to me back .", '*FAT: be quiet Astra (.) .', '*FAT: none of that .', '*CHI: xxx .', '*CHI: oh let me tell you something Mommy !', '*CHI: let me tell you something .', "*CHI: just don't believe me okay ?", '*CHI: Dad let me tell you something .', '*CHI: okay ?', '*FAT: eat your salad .', "*FAT: I don't want to hear you talk like that .", '*FAT: okay ?', '*FAT: good (.) .', '*CHI: zzz .', "*CHI: Mom what's this thing ?", '*CHI: xxx [>] .', "*MOT: <it's a> [<] piece of fish .", '*MOT: eat a piece of cucumber Astra .', '*CHI: yyy .', '*MOT: cucumber .', '*CHI: cucumber ?', '*MOT: uhhuh .', '*FAT: this one .', "*MOT: it's good for you .", '*MOT: you want to reach the light right ?', "*CHI: I can't .", '*CHI: I <wan (t)a> [/] I wan (t)a xxx the light xxx because the cucumber has seeds in it .', "*CHI: I can't eat seeds .", '*MOT: alright eat the <&c> [//] <eat the &-um leaf> [//] lettuce leaf .', "*CHI: where's the lettuce ?", '*MOT: the other one on your plate .', '*CHI: not that .', '*MOT: yes .', "*MOT: turn around Astra and eat that I don't play with you know .", '*MOT: sit down and eat it !', '*CHI: zzz .', '*MOT: use a napkin to wipe your hands and your mouth .', "*CHI: I'm full !", '*MOT: wipe your hands .', "*MOT: xxx you're gonna be full in a minute .", '*CHI: I am full now (.) .', '*CHI: I not full .', "*CHI: I'm not joking Mommy .", "*CHI: I'm not joking !", "*CHI: I'm not joking !", '*FAT: you full ?', '*CHI: yeah .', '*MOT: okay .', '*MOT: go wash your hands in the bath+room and xxx [/] .', '*CHI: wait a minute !', '*CHI: hold it !', '*CHI: hold it !', "*CHI: don't make me .", '*MOT: alright go wash your hands and your mouth now (.) .', '*MOT: none of that !', '*MOT: that is it .', '*MOT: the end !', '*MOT: put that glass back !', '*CHI: zzz .', '*MOT: go wash your hands <and your mouth xxx> [>] .', '*CHI: <I made it Mommy> [<] .', '*MOT: I know you did .', '*CHI: zzz .', '*FAT: Astra !', "*MOT: don't do that !", '*MOT: get up from that table the right way .', "*CHI: I'm not full .", "*MOT: you're not ?", '*MOT: too bad (.) .', '*MOT: (good)bye .', '*CHI: bye Ronny and bye Mommy .', "*CHI: I'm going to the shop ."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//astmt1.cha
HSLLD/HV1/MT//casmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: xxx .', '*CHI: xxx when they need milk they mix Pepsi in the milk .', '*BRI: uhhuh .', '*CHI: xxx Pepsi in the milk get it ?', '*FAT: hey Brian .', '*MOT: so you had a good time at the circus Brian ?', '*BRI: yeah .', '*MOT: what did you like about it ?', '*CHI: what you get ?', '*BRI: xxx .', '*MOT: tell him what you got first .', '*BRI: I got popcorn and cotton candy .', '*CHI: no <what did you get as toys> [>] ?', '*MOT: <how did you get> [<] [/] .', "*BRI: <I didn't get> [>] [/] .", '*MOT: <no toys> [<] .', '*FAT: xxx .', '*MOT: nothing .', '*MOT: <how did you> [/] how did you get both of them with with two dollars ?', '*BRI: the popcorn was a dollar .', '*MOT: yeah ?', '*BRI: and the cotton candy was a dollar .', '*MOT: really ?', '*FAT: what did you have_to drink ?', '*BRI: nothing .', '*MOT: zzz .', "*BRI: I didn't want anything to drink I wasn't thirsty .", "*MOT: you think you'd be with all that candy .", '*CHI: I love [!] cotton candy when I go to the circus with the xxx act and everything .', '*CHI: I love it !', '*CHI: I love cotton candy .', "*FAT: that's nice xxx [>] [/] .", "*MOT: <it's> [<] all sugar it's not good for you .", "*BRI: I don't want a back xxx in my mouth .", '*MOT: zzz .', '*CHI: they got xxx !', '*MOT: so everybody had a good <time huh> [>] ?', '*BRI: <my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .', '*BRI: &-um .', '*BRI: they [//] <they full> [//] <they fill up> [//] they filled up a two little round small things .', '*BRI: and they were on boats .', '*BRI: they filled it up with this red stuff and then they swung them around on their fingers .', '*BRI: and guess what ?', '*MOT: what ?', "*BRI: the stuff didn't come out like water .", '*BRI: and they swung them around on their hands .', '*BRI: then the guy swung it on his foot .', '*FAT: did anybody else xxx by anybody miss it ?', '*BRI: oh &-um Brendan almost missed it .', '*MOT: how he came late ?', "*BRI: no xxx Missus Reilly called up Brendan's mom and said do you think Brendan could come (be)cause he didn't come in .", '*MOT: why was he out ?', '*BRI: (be)cause he was sick yesterday and he was a little bit sick today .', '*BRI: but he was fine [!] in school .', '*MOT: he came in ?', '*BRI: mhm (.) .', '*MOT: so that was good everybody got_to go .', '*CHI: I love circuses .', "*MOT: yeah we're gonna go Sunday [!] with Casey <to the circus> [>] .", "*BRI: <and I'm going to go>[<] again to the same thing xxx ?", '*MOT: yeah .', '*MOT: who did you sit <next to Brian> [>] ?', '*CHI: <same circus> [<] ?', '*BRI: yeah .', '*BRI: Sasha .', '*FAT: xxx at [?] the apple circus Brian .', '*BRI: and Ryan .', '*BRI: and then in intermission when we came back Sasha and Amelia [?] .', '*MOT: who are the parents that went ?', '*MOT: Kay and Stanley ?', "*BRI: Kay couldn't [//] Stanley couldn't come .", '*BRI: Kate could .', '*MOT: Kay went ?', '*BRI: yeah .', '*BRI: they arranged it for us .', '*MOT: I know xxx .', '*BRI: xxx .', "*CHI: I'm gonna go to a <basketball game> [>] .", "*BRI: <I'm gonna do it at> [<] school tomorrow .", "*CHI: I'm gonna go to a basketball game in the &-um the Celtics and &-uh +...", '*MOT: good boy Casey .', "*MOT: that's good .", '*MOT: Brian I want you to eat all of yours .', '*BRI: I know [!] .', '*MOT: <well good> [>] .', "*CHI: <hey where's> [<] my xxx tomatoes ?", "*FAT: there wasn't any .", "*FAT: that's what I told you .", '*CHI: potatoes [>] ?', '*MOT: <&p> [<] .', '*FAT: yeah .', "*MOT: no Casey there wasn't any tomatoes left .", "*FAT: there wasn't any [/] there wasn't any at alright so we gave you some Casey .", '*MOT: there was none honey for <the salad> [>] .', '*MOT: right ?', '*MOT: the ones we had in there were [//] went bad they were rotten .', "*MOT: I'll go shopping tomorrow and I'll get you one tomato okay ?", '*FAT: xxx [/] [<] .', '*CHI: okay .', '*CHI: zzz .', "*MOT: I know that's one of your favorites right Casey tomatoes ?", '*CHI: yeah .', "*BRI: you don't know one of my favorites .", '*MOT: what ?', '*BRI: guess .', '*MOT: french fries .', '*MOT: in a salad ?', '*MOT: a vegetable ?', '*BRI: croutons [?] .', '*MOT: croutons .', "*MOT: they're not vegetables .", '*MOT: they go on in salads then .', '*MOT: Casey that insect that you made ?', '*MOT: I like it .', '*MOT: when did you make that ?', '*CHI: xxx .', '*CHI: a long time we made it .', '*MOT: a long time ago ?', '*MOT: it was sitting in your cubby waiting for you to take it home ?', '*CHI: I make it fly [?] .', '*CHI: it was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .', '*MOT: oh [<] I see .', "*CHI: and I didn't want to make one but I tried .", '*CHI: the bugs come in it and then they walked in it .', '*CHI: so when I heard the beach the xxx was loud and I go to get a xxx .', "*BRI: Casey I'm eating .", '*MOT: I [/] I really liked it though .', '*MOT: it was good .', '*CHI: I know [!] you liked it .', '*MOT: I told Nina that we were gonna go down to the Cape in July for a week but +...', '*MOT: did you know we are going on the Cape ?', '*BRI: since when ?', '*MOT: yeah but xxx get up to the lighthouse for a whole week .', '*MOT: and get out there with Ann and you and xxx .', '*BRI: and Daniel ?', "*MOT: he might be out there I don't know .", "*MOT: he'll be down on the weekends .", "*MOT: maybe he'll be down on the weekend [/] .", '*BRI: what days ?', '*FAT: sit down Brian .', '*MOT: probably July Fourth weekend .', '*BRI: July Fourth ?', '*MOT: yeah we go down to the beach probably .', '*MOT: xxx David will be down there and .', '*CHI: can xxx and Mick come [?] ?', '*MOT: yeah .', '*FAT: eat your corn Brian .', '*FAT: <come on> [>] .', '*CHI: <Stan and Mick> [<] I love .', "*FAT: good it's probably safer when your growing up lousy .", '*FAT: you can xxx .', '*FAT: you xxx [>] say you going out there this year xxx no way .', '*CHI: <Mom> [<] !', '*CHI: am I going good Mom ?', "*MOT: oh look at that Daddy all the steak's gone .", '*FAT: yeah .', '*BRI: mine is too .', '*CHI: nobody [>] [/] is .', '*MOT: aside [<] from one two three four six pieces .', "*FAT: you're going to get in the croutons Brian .", "*CHI: <I'm not> [/] [>] .", '*MOT: <the corn> [<] eat your corn .', '*FAT: xxx .', '*BRI: what ?', '*FAT: croutons .', '*MOT: Larry .', '*CHI: zzz .', '*BRI: xxx .', '*FAT: <who is Larry> [>] ?', '*CHI: oh [<] that really cracks us up <Brian> [>] .', '*FAT: <who is Larry> [<] ?', '*MOT: <Brian> [>] [/] .', '*CHI: <Brian> [<] will you give the croutons to me ?', "*BRI: you've got your own (.) .", "*MOT: you're the one who wanted salad .", "*FAT: you know a whole bunch there that's the salad .", "*BRI: it doesn't say anything .", '*FAT: eat the corn .', "*FAT: you don't want it ?", '*CHI: yeah .', '*CHI: I do (.) .', '*CHI: Mom yes the act did firecrackers [>] and when we went to xxx .', '*BRI: <Mom> [<] !', '*MOT: did you like the firecrackers at xxx .', '*BRI: that was xxx [>] the car .', '*CHI: <the fire> [<][>] [//] <the fire crackers> [//] the fire crackers were [/] .', '*FAT: well [//] .', "*FAT: <I didn't> [//] <I didn't xxx> [//] <I didn't xxx> [<][>] [/] .", "*BRI: <he's like> [<] [//] xxx is like oh my god reading the paper over", "*BRI: he's like oh_my_god I'll regret this thing .", "*BRI: I'll regret it .", '*MOT: &=laughs .', '*FAT: yeah I was in there protected .', "*FAT: I didn't have_to duck to follow rockets [?] like you guys .", '*FAT: there is one <coming at you> [/] [>] .', "*MOT: <you guys were> [<] xxx when I'm driving ?", '*FAT: sorry yeah [>] .', '*CHI: <zzz the firecrackers> [<] +...', '*FAT: <when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...', '*CHI: <the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .', "*FAT: <as long as it's one> [<] [/] as long as it's one of the other kids it's fine but there were these guys that had one they had xxx [>] .", '*BRI: remember [<] when Mikey got burnt in the stomach ?', '*MOT: yeah .', "*MOT: that's because he was handling something (.) .", '*MOT: the roman candle .', '*CHI: Mikey said to Mom [>] .', '*BRI: <who let him> [<] [/] who let him do that ?', '*MOT: his uncle .', '*CHI: I guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .', '*BRI: <did his uncle get arrested> [<] ?', '*MOT: what ?', '*BRI: <did his uncle> [>] get arrested ?', '*CHI: <the xxx> [<] [/] .', '*BRI: why do you let him handle one ?', '*FAT: booze Brian (.) .', '*FAT: he was drunk [?] (.) .', "*BRI: have you ever gotten drunk and you're alright Dad ?", '*FAT: yeah .', '*BRI: really ?', '*BRI: really really really really really ?', '*BRI: wild [>] !', '*MOT: zzz [<] .', "*CHI: you've been drunk and all over the place .", "*BRI: don't say that to xxx and xxx .", '*MOT: the baby would be xxx .', '*MOT: zzz .', '*FAT: do you think I could do that xxx huh Brian ?', "*MOT: that's what Peter said .", "*MOT: he goes J_C it's cut like Danny Ainge and then he goes do you know what Danny Ainge would say then I go Peter [!] who do you think I'm married to then he goes oh I forgot Dad knows xxx he goes xxx .", '*MOT: Dad xxx he goes .', '*FAT: who you playing with an eight ball ?', "*CHI: Mom your strap's going in your drink .", '*FAT: oh god .', "*FAT: it's not Bran Brian come on no it is not cut it out .", '*BRI: zzz .', '*CHI: Dad you know what ?', '*CHI: Peter used to call me George .', '*FAT: well he thinks you look like me &-uh ?', '*CHI: yeah .', "*MOT: alright let's clean up everybody's just about done .", "*CHI: no I'm not .", '*MOT: just a little more .']
loading solution set
LINE NO ->  15
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  16
milk
milk milk 46
[('xxx', 'NN'), ('when', 'WRB'), ('they', 'PRP'), ('need', 'VBP'), ('milk', 'NN'), ('they', 'PRP'), ('mix', 'VBP'), ('pepsi', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  22
LINE NO ->  25
milk
milk milk 46
[('xxx', 'JJ'), ('pepsi', 'NN'), ('in', 'IN'), ('the', 'DT'), ('milk', 'NN'), ('get', 'VB'), ('it', 'PRP')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  29
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  32
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  37
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  40
LINE NO ->  43
LINE NO ->  46
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  47
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  51
popcorn
popcorn popcorn 429
[('i', 'NN'), ('got', 'VBD'), ('popcorn', 'JJ'), ('and', 'CC'), ('cotton', 'NN'), ('candy', 'NN')]
['popcorn']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  54
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  57
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  59
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  62
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  63
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  67
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0})
LINE NO ->  72
popcorn
popcorn popcorn 429
[('the', 'DT'), ('popcorn', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('dollar', 'NN')]
['popcorn']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  82
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  87
LINE NO ->  90
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  93
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  97
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  102
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  108
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  115
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  118
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  121
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  124
sugar
sugar sugar 399
[('it', 'PRP'), ('s', 'VBZ'), ('all', 'DT'), ('sugar', 'NN'), ('it', 'PRP'), ('s', 'VBZ'), ('not', 'RB'), ('good', 'JJ'), ('for', 'IN'), ('you', 'PRP')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  129
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  134
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  138
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  142
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  147
chinese
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947220cb0>)
[('my', 'PRP$'), ('favorite', 'JJ'), ('thing', 'NN'), ('was', 'VBD'), ('a', 'DT'), ('chinese', 'JJ'), ('boy', 'NN'), ('a', 'DT'), ('chinese', 'JJ'), ('girl', 'NN'), ('and', 'CC'), ('another', 'DT'), ('chinese', 'JJ'), ('boy', 'NN')]
['chinese']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0})
LINE NO ->  153
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  154
round
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472207a0>)
[('they', 'PRP'), ('they', 'PRP'), ('full', 'JJ'), ('they', 'PRP'), ('fill', 'VBP'), ('up', 'RP'), ('they', 'PRP'), ('filled', 'VBD'), ('up', 'RP'), ('a', 'DT'), ('two', 'CD'), ('little', 'JJ'), ('round', 'RB'), ('small', 'JJ'), ('things', 'NNS')]
['round']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 0, 100: 0, 101: 0, -1: 1})
LINE NO ->  159
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 0, 93: 0, 94: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  172
LINE NO ->  175
water
water water 18
[('the', 'DT'), ('stuff', 'NN'), ('didn', 'NN'), ('t', 'NN'), ('come', 'VBP'), ('out', 'IN'), ('like', 'IN'), ('water', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  185
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  193
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  197
LINE NO ->  200
LINE NO ->  204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0})
LINE NO ->  215
LINE NO ->  218
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  225
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  228
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  231
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  234
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  239
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  242
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0})
LINE NO ->  247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0})
LINE NO ->  252
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  260
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  263
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  266
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  269
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  275
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  281
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  285
LINE NO ->  288
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0})
LINE NO ->  291
LINE NO ->  294
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  297
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  303
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  306
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  307
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0})
LINE NO ->  312
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  317
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0})
LINE NO ->  324
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  330
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  335
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  339
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  342
tomatoes
tomatoes tomatoes 213
[('hey', 'NN'), ('where', 'WRB'), ('s', 'NN'), ('my', 'PRP$'), ('xxx', 'NN'), ('tomatoes', 'NNS')]
['tomatoes']
('food -> ', [['tomatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  346
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  349
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  353
potatoes
potatoes potatoes 62
[('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  357
LINE NO ->  358
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  363
tomatoes
tomatoes tomatoes 213
[('no', 'DT'), ('casey', 'NN'), ('there', 'RB'), ('wasn', 'JJ'), ('t', 'NN'), ('any', 'DT'), ('tomatoes', 'NNS'), ('left', 'VBD')]
['tomatoes']
('food -> ', [['tomatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  376
honey
honey honey 304
[('there', 'EX'), ('was', 'VBD'), ('none', 'NN'), ('honey', 'NN'), ('for', 'IN'), ('the', 'DT'), ('salad', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  380
LINE NO ->  384
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  391
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  398
LINE NO ->  399
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  402
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  406
tomatoes
tomatoes tomatoes 213
[('i', 'NN'), ('know', 'VBP'), ('that', 'IN'), ('s', 'VBP'), ('one', 'CD'), ('of', 'IN'), ('your', 'PRP$'), ('favorites', 'NNS'), ('right', 'RB'), ('casey', 'NN'), ('tomatoes', 'NNS')]
['tomatoes']
('food -> ', [['tomatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  412
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  416
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  421
LINE NO ->  424
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  427
french
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94704e1b8>)
[('french', 'JJ'), ('fries', 'NNS')]
['french']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  430
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  433
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  436
croutons
croutons croutons 465
[('croutons', 'NNS')]
['croutons']
('food -> ', [['croutons', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  439
croutons
croutons croutons 465
[('croutons', 'NNS')]
['croutons']
('food -> ', [['croutons', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  442
vegetables
vegetables vegetables 37
[('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('vegetables', 'NNS')]
['vegetables']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  445
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  450
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  455
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  458
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  462
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  463
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  466
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  470
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  480
doughnuts
doughnuts doughnuts 403
[('it', 'PRP'), ('was', 'VBD'), ('just', 'RB'), ('like', 'JJ'), ('doughnuts', 'NNS'), ('like', 'IN'), ('except', 'IN'), ('the', 'DT'), ('xxx', 'NNP'), ('really', 'RB'), ('taste', 'VBP'), ('like', 'IN'), ('doughnuts', 'NNS'), ('they', 'PRP'), ('were', 'VBD'), ('xxx', 'NNP'), ('they', 'PRP'), ('was', 'VBD'), ('and', 'CC'), ('the', 'DT'), ('light', 'NN'), ('was', 'VBD'), ('in', 'IN'), ('it', 'PRP')]
['doughnuts']
('food -> ', [['doughnuts', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 1, 124: 1, 125: 1, 126: 1, 127: 1, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, -1: 1})
LINE NO ->  488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  491
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  497
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  502
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, -1: 1})
LINE NO ->  510
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  514
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  517
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  520
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, -1: 1})
LINE NO ->  532
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  537
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  540
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  545
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  550
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  558
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  562
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  565
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  568
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  571
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  574
LINE NO ->  577
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  582
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  585
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  589
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  592
corn
corn corn 419
[('eat', 'VB'), ('your', 'PRP$'), ('corn', 'NN'), ('brian', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  598
LINE NO ->  601
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0})
LINE NO ->  606
LINE NO ->  609
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  614
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  617
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  621
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  626
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  629
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  632
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  635
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  640
croutons
croutons croutons 465
[('you', 'PRP'), ('re', 'VBP'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('in', 'IN'), ('the', 'DT'), ('croutons', 'NNS'), ('brian', 'VBP')]
['croutons']
('food -> ', [['croutons', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  645
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  646
corn
corn corn 419
[('the', 'DT'), ('corn', 'NN'), ('eat', 'VB'), ('your', 'PRP$'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  649
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  650
LINE NO ->  653
croutons
croutons croutons 465
[('croutons', 'NNS')]
['croutons']
('food -> ', [['croutons', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  656
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  659
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  663
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  665
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  668
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  672
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  675
LINE NO ->  676
croutons
croutons croutons 465
[('brian', 'NN'), ('will', 'MD'), ('you', 'PRP'), ('give', 'VB'), ('the', 'DT'), ('croutons', 'NNS'), ('to', 'TO'), ('me', 'PRP')]
['croutons']
('food -> ', [['croutons', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  681
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  684
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  688
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  693
LINE NO ->  696
corn
corn corn 419
[('eat', 'NN'), ('the', 'DT'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  699
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  703
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  706
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  710
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  716
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  719
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  723
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  726
crackers
crackers crackers 453
[('the', 'DT'), ('fire', 'NN'), ('the', 'DT'), ('fire', 'NN'), ('crackers', 'VBZ'), ('the', 'DT'), ('fire', 'NN'), ('crackers', 'NNS'), ('were', 'VBD')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0})
LINE NO ->  729
LINE NO ->  730
LINE NO ->  731
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0})
LINE NO ->  737
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  742
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  745
LINE NO ->  746
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  750
duck
duck duck 84
[('i', 'NN'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('duck', 'VB'), ('to', 'TO'), ('follow', 'VB'), ('rockets', 'NNS'), ('like', 'IN'), ('you', 'PRP'), ('guys', 'VBP')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  758
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  762
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  765
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  769
crackers
crackers crackers 453
[('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('when', 'WRB'), ('you', 'PRP'), ('see', 'VBP'), ('two', 'CD'), ('fire', 'NN'), ('crackers', 'NNS'), ('come', 'VBP'), ('out', 'IN'), ('of', 'IN'), ('these', 'DT'), ('kids', 'NNS'), ('hands', 'NNS')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 1, 85: 1, 86: 1, 87: 1, 88: 0, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, -1: 1})
LINE NO ->  774
crackers
crackers crackers 453
[('the', 'DT'), ('fire', 'NN'), ('crackers', 'VBZ'), ('the', 'DT'), ('firecrackers', 'NNS'), ('were', 'VBD'), ('going', 'VBG'), ('all', 'DT'), ('over', 'IN'), ('the', 'DT'), ('place', 'NN'), ('they', 'PRP'), ('were', 'VBD'), ('firing', 'VBG'), ('they', 'PRP'), ('were', 'VBD'), ('firing', 'VBG'), ('in', 'IN'), ('the', 'DT'), ('grass', 'NN')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 0, 132: 1, 133: 1, 134: 1, 135: 0, 136: 0, 137: 0})
LINE NO ->  782
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 1, 106: 1, 107: 1, 108: 1, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, -1: 1})
LINE NO ->  792
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0})
LINE NO ->  797
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  800
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  804
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  807
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  812
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  815
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  818
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 1, 84: 1, 85: 1, 86: 1, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 1, 100: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 0, 106: 1, 107: 1, 108: 1, 109: 0, 110: 0, 111: 0, -1: 1})
LINE NO ->  826
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  829
LINE NO ->  832
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  835
LINE NO ->  836
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  840
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  843
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  849
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  854
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  857
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  860
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  864
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  867
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  871
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  876
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  879
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947038950>)
[('the', 'DT'), ('baby', 'NN'), ('would', 'MD'), ('be', 'VB'), ('xxx', 'JJ')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  882
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  886
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  891
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  894
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 1, 188: 1, 189: 1, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, -1: 1})
LINE NO ->  909
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  912
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  917
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  922
LINE NO ->  925
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  931
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  935
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  940
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  943
LINE NO ->  948
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  953
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  959
LINE NO ->  962
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
loading solution set
calculating
set([(641, (33, 41)), (446, (20, 26)), (697, (14, 18)), (176, (37, 42)), (17, (25, 29)), (26, (10, 15)), (73, (10, 17)), (52, (12, 19)), (428, (6, 18)), (689, (46, 51)), (654, (6, 14)), (17, (52, 56)), (354, (6, 14)), (119, (13, 25)), (125, (21, 26)), (440, (6, 14)), (17, (39, 44)), (377, (21, 26)), (437, (6, 14)), (481, (71, 80)), (647, (30, 34)), (52, (24, 36)), (343, (31, 39)), (407, (54, 62)), (364, (32, 40)), (443, (18, 28)), (819, (35, 40)), (677, (36, 44)), (26, (23, 27)), (392, (53, 59)), (819, (49, 54)), (481, (23, 32)), (593, (15, 19))])
[((17, (25, 29)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (39, 44)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (52, 56)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((26, (10, 15)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((26, (23, 27)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((52, (12, 19)), '*BRI:\tI got popcorn and cotton candy .\n'), ((52, (24, 36)), '*BRI:\tI got popcorn and cotton candy .\n'), ((73, (10, 17)), '*BRI:\tthe popcorn was a dollar .\n'), ((119, (13, 25)), '*CHI:\tI love cotton candy .\n'), ((125, (21, 26)), "*MOT:\t<it's> [<] all sugar it's not good for you .\n"), ((176, (37, 42)), "*BRI:\tthe stuff didn't come out like water .\n"), ((343, (31, 39)), "*CHI:\t<hey where's> [<] my xxx tomatoes ?\n"), ((354, (6, 14)), '*CHI:\tpotatoes [>] ?\n'), ((364, (32, 40)), "*MOT:\tno Casey there wasn't any tomatoes left .\n"), ((377, (21, 26)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((392, (53, 59)), "*MOT:\tI'll go shopping tomorrow and I'll get you one tomato okay ?\n"), ((407, (54, 62)), "*MOT:\tI know that's one of your favorites right Casey tomatoes ?\n"), ((428, (6, 18)), '*MOT:\tfrench fries .\n'), ((437, (6, 14)), '*BRI:\tcroutons [?] .\n'), ((440, (6, 14)), '*MOT:\tcroutons .\n'), ((443, (18, 28)), "*MOT:\tthey're not vegetables .\n"), ((446, (20, 26)), '*MOT:\tthey go on in salads then .\n'), ((481, (23, 32)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((481, (71, 80)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((593, (15, 19)), '*FAT:\teat your corn Brian .\n'), ((641, (33, 41)), "*FAT:\tyou're going to get in the croutons Brian .\n"), ((647, (30, 34)), '*MOT:\t<the corn> [<] eat your corn .\n'), ((654, (6, 14)), '*FAT:\tcroutons .\n'), ((677, (36, 44)), '*CHI:\t<Brian> [<] will you give the croutons to me ?\n'), ((689, (46, 51)), "*FAT:\tyou know a whole bunch there that's the salad .\n"), ((697, (14, 18)), '*FAT:\teat the corn .\n'), ((819, (35, 40)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((819, (49, 54)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n')]
set([(808, (-1, 4)), (194, (10, 17)), (759, (26, 29)), (887, (39, 42)), (837, (-1, 4)), (697, (14, 18)), (143, (36, 40)), (52, (31, 36)), (459, (-1, 4)), (763, (12, 16)), (176, (10, 15)), (340, (-1, 4)), (79, (-1, 4)), (711, (26, 38)), (354, (-1, 4)), (79, (21, 26)), (759, (-1, 4)), (109, (67, 70)), (33, (36, 42)), (407, (54, 62)), (264, (6, 10)), (783, (-1, 4)), (52, (24, 30)), (895, (-1, 4)), (700, (-1, 4)), (805, (10, 15)), (751, (-1, 4)), (336, (-1, 4)), (377, (43, 46)), (566, (11, 15)), (819, (99, 105)), (170, (-1, 4)), (282, (18, 25)), (289, (41, 45)), (850, (-1, 4)), (270, (21, 26)), (143, (41, 44)), (682, (6, 12)), (253, (6, 10)), (109, (17, 23)), (58, (6, 10)), (647, (30, 34)), (267, (-1, 4)), (155, (39, 43)), (858, (-1, 4)), (636, (44, 50)), (578, (6, 10)), (226, (29, 35)), (630, (6, 10)), (148, (24, 29)), (833, (-1, 4)), (331, (37, 42)), (417, (-1, 4)), (343, (27, 39)), (525, (71, 75)), (413, (6, 10)), (98, (-1, 4)), (622, (36, 43)), (622, (9, 13)), (732, (61, 66)), (392, (53, 59)), (30, (-1, 4)), (481, (71, 80)), (751, (23, 27)), (467, (13, 17)), (55, (36, 39)), (219, (58, 61)), (148, (50, 57)), (563, (33, 40)), (109, (-1, 4)), (850, (37, 43)), (913, (-1, 4)), (155, (-1, 4)), (33, (24, 28)), (446, (-1, 4)), (727, (63, 71)), (481, (-1, 4)), (711, (18, 21)), (60, (10, 15)), (578, (29, 34)), (666, (6, 10)), (511, (-1, 4)), (325, (11, 14)), (243, (17, 22)), (186, (35, 39)), (298, (6, 10)), (240, (13, 21)), (586, (-1, 4)), (610, (47, 51)), (525, (-1, 6)), (186, (-1, 4)), (827, (-1, 4)), (148, (36, 43)), (130, (26, 29)), (756, (19, 26)), (895, (187, 190)), (841, (-1, 4)), (155, (93, 99)), (775, (34, 46)), (83, (-1, 4)), (664, (6, 9)), (615, (12, 15)), (364, (32, 40)), (775, (11, 25)), (763, (-1, 4)), (793, (47, 54)), (602, (11, 15)), (176, (37, 42)), (805, (16, 22)), (219, (-1, 4)), (633, (-1, 4)), (186, (15, 18)), (657, (-1, 4)), (304, (-1, 4)), (538, (-1, 4)), (119, (-1, 4)), (160, (-1, 4)), (163, (85, 92)), (738, (43, 48)), (369, (-1, 4)), (949, (6, 10)), (770, (43, 56)), (770, (89, 94)), (783, (32, 35)), (68, (67, 74)), (428, (13, 18)), (717, (12, 15)), (385, (10, 14)), (559, (6, 11)), (243, (11, 16)), (328, (13, 17)), (261, (20, 23)), (205, (47, 50)), (64, (6, 13)), (883, (6, 9)), (610, (-1, 4)), (865, (11, 14)), (377, (21, 26)), (232, (10, 13)), (437, (6, 14)), (431, (11, 16)), (451, (-1, 4)), (685, (-1, 4)), (318, (10, 15)), (308, (36, 41)), (109, (47, 53)), (936, (-1, 4)), (801, (6, 12)), (119, (13, 19)), (219, (67, 72)), (669, (46, 49)), (770, (-1, 4)), (139, (-1, 4)), (308, (10, 15)), (392, (-1, 4)), (689, (46, 51)), (816, (10, 15)), (163, (34, 43)), (17, (52, 56)), (443, (-1, 4)), (48, (-1, 4)), (868, (6, 9)), (125, (21, 26)), (887, (-1, 4)), (627, (6, 10)), (503, (26, 31)), (226, (22, 25)), (343, (-1, 4)), (918, (15, 22)), (677, (36, 44)), (154, (6, 10)), (60, (16, 19)), (689, (23, 28)), (261, (12, 19)), (827, (15, 20)), (135, (6, 9)), (596, (16, 19)), (654, (6, 14)), (673, (-1, 4)), (308, (42, 45)), (273, (-1, 4)), (350, (-1, 4)), (563, (41, 44)), (759, (11, 15)), (559, (-1, 4)), (770, (6, 11)), (55, (30, 35)), (759, (39, 46)), (148, (58, 62)), (160, (23, 28)), (243, (6, 10)), (456, (-1, 4)), (801, (47, 50)), (443, (18, 28)), (76, (-1, 4)), (248, (55, 58)), (481, (23, 32)), (770, (84, 88)), (756, (-1, 4)), (841, (6, 11)), (17, (25, 29)), (295, (-1, 4)), (727, (34, 48)), (340, (18, 21)), (463, (6, 9)), (541, (6, 10)), (226, (-1, 4)), (892, (-1, 4)), (440, (6, 14)), (751, (38, 45)), (431, (-1, 4)), (148, (44, 47)), (492, (-1, 4)), (235, (33, 39)), (646, (11, 15)), (498, (10, 14)), (813, (24, 27)), (583, (6, 9)), (301, (-1, 4)), (30, (6, 9)), (738, (6, 10)), (704, (6, 10)), (932, (6, 9)), (572, (-1, 4)), (47, (6, 9)), (766, (29, 32)), (610, (59, 62)), (64, (-1, 4)), (143, (30, 35)), (17, (-1, 4)), (877, (6, 11)), (91, (6, 13)), (503, (-1, 4)), (720, (23, 35)), (148, (75, 82)), (747, (6, 10)), (79, (14, 20)), (783, (18, 22)), (313, (11, 16)), (593, (15, 19)), (270, (6, 9)), (563, (12, 17)), (630, (-1, 4)), (963, (-1, 4)), (155, (81, 86)), (682, (26, 29)), (243, (64, 67)), (844, (-1, 4)), (229, (-1, 4)), (819, (-1, 4)), (666, (-1, 4)), (68, (6, 10)), (586, (28, 31)), (850, (27, 32)), (340, (12, 17)), (63, (6, 9)), (38, (6, 10)), (109, (24, 29)), (16, (6, 9)), (783, (69, 73)), (689, (-1, 4)), (766, (-1, 4)), (73, (10, 17)), (52, (12, 19)), (354, (6, 14)), (783, (105, 109)), (181, (42, 47)), (407, (-1, 4)), (26, (23, 27)), (328, (6, 12)), (403, (6, 9)), (541, (50, 60)), (798, (6, 10)), (833, (26, 29)), (511, (16, 22)), (464, (13, 17)), (732, (45, 48)), (926, (-1, 4)), (641, (33, 41)), (347, (-1, 4)), (130, (-1, 4)), (610, (14, 17)), (763, (6, 11)), (819, (106, 109)), (130, (36, 41)), (775, (132, 135)), (181, (-1, 4)), (400, (6, 10)), (76, (6, 10)), (861, (-1, 4)), (122, (6, 12)), (743, (11, 17)), (52, (-1, 4)), (641, (-1, 4)), (103, (-1, 4)), (707, (-1, 4)), (673, (6, 10)), (827, (35, 38)), (377, (16, 20)), (313, (31, 37)), (647, (11, 16)), (58, (28, 31)), (819, (83, 87)), (489, (9, 12)), (941, (-1, 4)), (775, (71, 76)), (590, (6, 10)), (910, (10, 13)), (685, (17, 20)), (855, (6, 10)), (954, (14, 19)), (895, (23, 26)), (243, (56, 63)), (73, (24, 30)), (724, (-1, 4)), (33, (-1, 4)), (434, (8, 17)), (533, (-1, 4)), (569, (-1, 4)), (194, (-1, 4)), (232, (6, 9)), (119, (20, 25)), (724, (27, 30)), (813, (-1, 4)), (918, (37, 42)), (307, (6, 9)), (235, (-1, 4)), (116, (-1, 4)), (91, (-1, 4)), (720, (-1, 4)), (359, (6, 10)), (515, (-1, 4)), (94, (6, 9)), (428, (6, 12)), (554, (-1, 4)), (727, (11, 16)), (369, (23, 26)), (318, (35, 39)), (59, (16, 20)), (79, (33, 39)), (392, (60, 64)), (685, (32, 37)), (471, (-1, 4)), (868, (10, 13)), (276, (-1, 4)), (641, (6, 12)), (819, (35, 40)), (660, (6, 9)), (425, (6, 11)), (732, (12, 17)), (377, (36, 42)), (546, (-1, 4)), (481, (123, 128)), (248, (49, 54)), (521, (-1, 4)), (650, (6, 9)), (446, (20, 26)), (596, (12, 15)), (377, (-1, 4)), (551, (-1, 4)), (572, (27, 34)), (880, (10, 14)), (103, (39, 44)), (471, (29, 34)), (478, (-1, 4)), (872, (41, 46)), (775, (125, 131)), (282, (-1, 4)), (257, (-1, 4)), (913, (36, 40)), (738, (31, 37)), (503, (36, 39)), (270, (27, 33)), (261, (6, 11)), (143, (-1, 4)), (669, (9, 12)), (518, (-1, 4)), (618, (-1, 4)), (471, (62, 66)), (240, (-1, 4))])
[((16, (6, 9)), '*CHI:\txxx .\n'), ((17, (-1, 4)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (25, 29)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((17, (52, 56)), '*CHI:\txxx when they need milk they mix Pepsi in the milk .\n'), ((26, (23, 27)), '*CHI:\txxx Pepsi in the milk get it ?\n'), ((30, (-1, 4)), '*FAT:\they Brian .\n'), ((30, (6, 9)), '*FAT:\they Brian .\n'), ((33, (-1, 4)), '*MOT:\tso you had a good time at the circus Brian ?\n'), ((33, (24, 28)), '*MOT:\tso you had a good time at the circus Brian ?\n'), ((33, (36, 42)), '*MOT:\tso you had a good time at the circus Brian ?\n'), ((38, (6, 10)), '*BRI:\tyeah .\n'), ((47, (6, 9)), '*BRI:\txxx .\n'), ((48, (-1, 4)), '*MOT:\ttell him what you got first .\n'), ((52, (-1, 4)), '*BRI:\tI got popcorn and cotton candy .\n'), ((52, (12, 19)), '*BRI:\tI got popcorn and cotton candy .\n'), ((52, (24, 30)), '*BRI:\tI got popcorn and cotton candy .\n'), ((52, (31, 36)), '*BRI:\tI got popcorn and cotton candy .\n'), ((55, (30, 35)), '*CHI:\tno <what did you get as toys> [>] ?\n'), ((55, (36, 39)), '*CHI:\tno <what did you get as toys> [>] ?\n'), ((58, (6, 10)), '*MOT:\t<how did you get> [<] [/] .\n'), ((58, (28, 31)), '*MOT:\t<how did you get> [<] [/] .\n'), ((59, (16, 20)), "*BRI:\t<I didn't get> [>] [/] .\n"), ((60, (10, 15)), '*MOT:\t<no toys> [<] .\n'), ((60, (16, 19)), '*MOT:\t<no toys> [<] .\n'), ((63, (6, 9)), '*FAT:\txxx .\n'), ((64, (-1, 4)), '*MOT:\tnothing .\n'), ((64, (6, 13)), '*MOT:\tnothing .\n'), ((68, (6, 10)), '*MOT:\t<how did you> [/] how did you get both of them with with two dollars ?\n'), ((68, (67, 74)), '*MOT:\t<how did you> [/] how did you get both of them with with two dollars ?\n'), ((73, (10, 17)), '*BRI:\tthe popcorn was a dollar .\n'), ((73, (24, 30)), '*BRI:\tthe popcorn was a dollar .\n'), ((76, (-1, 4)), '*MOT:\tyeah ?\n'), ((76, (6, 10)), '*MOT:\tyeah ?\n'), ((79, (-1, 4)), '*BRI:\tand the cotton candy was a dollar .\n'), ((79, (14, 20)), '*BRI:\tand the cotton candy was a dollar .\n'), ((79, (21, 26)), '*BRI:\tand the cotton candy was a dollar .\n'), ((79, (33, 39)), '*BRI:\tand the cotton candy was a dollar .\n'), ((83, (-1, 4)), '*MOT:\treally ?\n'), ((91, (-1, 4)), '*BRI:\tnothing .\n'), ((91, (6, 13)), '*BRI:\tnothing .\n'), ((94, (6, 9)), '*MOT:\tzzz .\n'), ((98, (-1, 4)), "*BRI:\tI didn't want anything to drink I wasn't thirsty .\n"), ((103, (-1, 4)), "*MOT:\tyou think you'd be with all that candy .\n"), ((103, (39, 44)), "*MOT:\tyou think you'd be with all that candy .\n"), ((109, (-1, 4)), '*CHI:\tI love [!] cotton candy when I go to the circus with the xxx act and everything .\n'), ((109, (17, 23)), '*CHI:\tI love [!] cotton candy when I go to the circus with the xxx act and everything .\n'), ((109, (24, 29)), '*CHI:\tI love [!] cotton candy when I go to the circus with the xxx act and everything .\n'), ((109, (47, 53)), '*CHI:\tI love [!] cotton candy when I go to the circus with the xxx act and everything .\n'), ((109, (67, 70)), '*CHI:\tI love [!] cotton candy when I go to the circus with the xxx act and everything .\n'), ((116, (-1, 4)), '*CHI:\tI love it !\n'), ((119, (-1, 4)), '*CHI:\tI love cotton candy .\n'), ((119, (13, 19)), '*CHI:\tI love cotton candy .\n'), ((119, (20, 25)), '*CHI:\tI love cotton candy .\n'), ((122, (6, 12)), "*FAT:\tthat's nice xxx [>] [/] .\n"), ((125, (21, 26)), "*MOT:\t<it's> [<] all sugar it's not good for you .\n"), ((130, (-1, 4)), "*BRI:\tI don't want a back xxx in my mouth .\n"), ((130, (26, 29)), "*BRI:\tI don't want a back xxx in my mouth .\n"), ((130, (36, 41)), "*BRI:\tI don't want a back xxx in my mouth .\n"), ((135, (6, 9)), '*MOT:\tzzz .\n'), ((139, (-1, 4)), '*CHI:\tthey got xxx !\n'), ((143, (-1, 4)), '*MOT:\tso everybody had a good <time huh> [>] ?\n'), ((143, (30, 35)), '*MOT:\tso everybody had a good <time huh> [>] ?\n'), ((143, (36, 40)), '*MOT:\tso everybody had a good <time huh> [>] ?\n'), ((143, (41, 44)), '*MOT:\tso everybody had a good <time huh> [>] ?\n'), ((148, (24, 29)), '*BRI:\t<my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .\n'), ((148, (36, 43)), '*BRI:\t<my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .\n'), ((148, (44, 47)), '*BRI:\t<my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .\n'), ((148, (50, 57)), '*BRI:\t<my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .\n'), ((148, (58, 62)), '*BRI:\t<my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .\n'), ((148, (75, 82)), '*BRI:\t<my favorite> [<] thing was a Chinese boy a Chinese girl and another Chinese boy .\n'), ((154, (6, 10)), '*BRI:\t&-um .\n'), ((155, (-1, 4)), '*BRI:\tthey [//] <they full> [//] <they fill up> [//] they filled up a two little round small things .\n'), ((155, (39, 43)), '*BRI:\tthey [//] <they full> [//] <they fill up> [//] they filled up a two little round small things .\n'), ((155, (81, 86)), '*BRI:\tthey [//] <they full> [//] <they fill up> [//] they filled up a two little round small things .\n'), ((155, (93, 99)), '*BRI:\tthey [//] <they full> [//] <they fill up> [//] they filled up a two little round small things .\n'), ((160, (-1, 4)), '*BRI:\tand they were on boats .\n'), ((160, (23, 28)), '*BRI:\tand they were on boats .\n'), ((163, (34, 43)), '*BRI:\tthey filled it up with this red stuff and then they swung them around on their fingers .\n'), ((163, (85, 92)), '*BRI:\tthey filled it up with this red stuff and then they swung them around on their fingers .\n'), ((170, (-1, 4)), '*BRI:\tand guess what ?\n'), ((176, (10, 15)), "*BRI:\tthe stuff didn't come out like water .\n"), ((176, (37, 42)), "*BRI:\tthe stuff didn't come out like water .\n"), ((181, (-1, 4)), '*BRI:\tand they swung them around on their hands .\n'), ((181, (42, 47)), '*BRI:\tand they swung them around on their hands .\n'), ((186, (-1, 4)), '*BRI:\tthen the guy swung it on his foot .\n'), ((186, (15, 18)), '*BRI:\tthen the guy swung it on his foot .\n'), ((186, (35, 39)), '*BRI:\tthen the guy swung it on his foot .\n'), ((194, (-1, 4)), '*FAT:\tdid anybody else xxx by anybody miss it ?\n'), ((194, (10, 17)), '*FAT:\tdid anybody else xxx by anybody miss it ?\n'), ((205, (47, 50)), "*BRI:\tno xxx Missus Reilly called up Brendan's mom and said do you think Brendan could come (be)cause he didn't come in .\n"), ((219, (-1, 4)), '*BRI:\t(be)cause he was sick yesterday and he was a little bit sick today .\n'), ((219, (58, 61)), '*BRI:\t(be)cause he was sick yesterday and he was a little bit sick today .\n'), ((219, (67, 72)), '*BRI:\t(be)cause he was sick yesterday and he was a little bit sick today .\n'), ((226, (-1, 4)), '*BRI:\tbut he was fine [!] in school .\n'), ((226, (22, 25)), '*BRI:\tbut he was fine [!] in school .\n'), ((226, (29, 35)), '*BRI:\tbut he was fine [!] in school .\n'), ((229, (-1, 4)), '*MOT:\the came in ?\n'), ((232, (6, 9)), '*BRI:\tmhm (.) .\n'), ((232, (10, 13)), '*BRI:\tmhm (.) .\n'), ((235, (-1, 4)), '*MOT:\tso that was good everybody got_to go .\n'), ((235, (33, 39)), '*MOT:\tso that was good everybody got_to go .\n'), ((240, (-1, 4)), '*CHI:\tI love circuses .\n'), ((240, (13, 21)), '*CHI:\tI love circuses .\n'), ((243, (6, 10)), "*MOT:\tyeah we're gonna go Sunday [!] with Casey <to the circus> [>] .\n"), ((243, (11, 16)), "*MOT:\tyeah we're gonna go Sunday [!] with Casey <to the circus> [>] .\n"), ((243, (17, 22)), "*MOT:\tyeah we're gonna go Sunday [!] with Casey <to the circus> [>] .\n"), ((243, (56, 63)), "*MOT:\tyeah we're gonna go Sunday [!] with Casey <to the circus> [>] .\n"), ((243, (64, 67)), "*MOT:\tyeah we're gonna go Sunday [!] with Casey <to the circus> [>] .\n"), ((248, (49, 54)), "*BRI:\t<and I'm going to go>[<] again to the same thing xxx ?\n"), ((248, (55, 58)), "*BRI:\t<and I'm going to go>[<] again to the same thing xxx ?\n"), ((253, (6, 10)), '*MOT:\tyeah .\n'), ((257, (-1, 4)), '*MOT:\twho did you sit <next to Brian> [>] ?\n'), ((261, (6, 11)), '*CHI:\t<same circus> [<] ?\n'), ((261, (12, 19)), '*CHI:\t<same circus> [<] ?\n'), ((261, (20, 23)), '*CHI:\t<same circus> [<] ?\n'), ((264, (6, 10)), '*BRI:\tyeah .\n'), ((267, (-1, 4)), '*BRI:\tSasha .\n'), ((270, (6, 9)), '*FAT:\txxx at [?] the apple circus Brian .\n'), ((270, (21, 26)), '*FAT:\txxx at [?] the apple circus Brian .\n'), ((270, (27, 33)), '*FAT:\txxx at [?] the apple circus Brian .\n'), ((273, (-1, 4)), '*BRI:\tand Ryan .\n'), ((276, (-1, 4)), '*BRI:\tand then in intermission when we came back Sasha and Amelia [?] .\n'), ((282, (-1, 4)), '*MOT:\twho are the parents that went ?\n'), ((282, (18, 25)), '*MOT:\twho are the parents that went ?\n'), ((289, (41, 45)), "*BRI:\tKay couldn't [//] Stanley couldn't come .\n"), ((295, (-1, 4)), '*MOT:\tKay went ?\n'), ((298, (6, 10)), '*BRI:\tyeah .\n'), ((301, (-1, 4)), '*BRI:\tthey arranged it for us .\n'), ((304, (-1, 4)), '*MOT:\tI know xxx .\n'), ((307, (6, 9)), '*BRI:\txxx .\n'), ((308, (10, 15)), "*CHI:\tI'm gonna go to a <basketball game> [>] .\n"), ((308, (36, 41)), "*CHI:\tI'm gonna go to a <basketball game> [>] .\n"), ((308, (42, 45)), "*CHI:\tI'm gonna go to a <basketball game> [>] .\n"), ((313, (11, 16)), "*BRI:\t<I'm gonna do it at> [<] school tomorrow .\n"), ((313, (31, 37)), "*BRI:\t<I'm gonna do it at> [<] school tomorrow .\n"), ((318, (10, 15)), "*CHI:\tI'm gonna go to a basketball game in the &-um the Celtics and &-uh +...\n"), ((318, (35, 39)), "*CHI:\tI'm gonna go to a basketball game in the &-um the Celtics and &-uh +...\n"), ((325, (11, 14)), '*MOT:\tgood boy Casey .\n'), ((328, (6, 12)), "*MOT:\tthat's good .\n"), ((328, (13, 17)), "*MOT:\tthat's good .\n"), ((331, (37, 42)), '*MOT:\tBrian I want you to eat all of yours .\n'), ((336, (-1, 4)), '*BRI:\tI know [!] .\n'), ((340, (-1, 4)), '*MOT:\t<well good> [>] .\n'), ((340, (12, 17)), '*MOT:\t<well good> [>] .\n'), ((340, (18, 21)), '*MOT:\t<well good> [>] .\n'), ((343, (-1, 4)), "*CHI:\t<hey where's> [<] my xxx tomatoes ?\n"), ((343, (27, 39)), "*CHI:\t<hey where's> [<] my xxx tomatoes ?\n"), ((347, (-1, 4)), "*FAT:\tthere wasn't any .\n"), ((350, (-1, 4)), "*FAT:\tthat's what I told you .\n"), ((354, (-1, 4)), '*CHI:\tpotatoes [>] ?\n'), ((354, (6, 14)), '*CHI:\tpotatoes [>] ?\n'), ((359, (6, 10)), '*FAT:\tyeah .\n'), ((364, (32, 40)), "*MOT:\tno Casey there wasn't any tomatoes left .\n"), ((369, (-1, 4)), "*FAT:\tthere wasn't any [/] there wasn't any at alright so we gave you some Casey .\n"), ((369, (23, 26)), "*FAT:\tthere wasn't any [/] there wasn't any at alright so we gave you some Casey .\n"), ((377, (-1, 4)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((377, (16, 20)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((377, (21, 26)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((377, (36, 42)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((377, (43, 46)), '*MOT:\tthere was none honey for <the salad> [>] .\n'), ((385, (10, 14)), '*MOT:\tthe ones we had in there were [//] went bad they were rotten .\n'), ((392, (-1, 4)), "*MOT:\tI'll go shopping tomorrow and I'll get you one tomato okay ?\n"), ((392, (53, 59)), "*MOT:\tI'll go shopping tomorrow and I'll get you one tomato okay ?\n"), ((392, (60, 64)), "*MOT:\tI'll go shopping tomorrow and I'll get you one tomato okay ?\n"), ((400, (6, 10)), '*CHI:\tokay .\n'), ((403, (6, 9)), '*CHI:\tzzz .\n'), ((407, (-1, 4)), "*MOT:\tI know that's one of your favorites right Casey tomatoes ?\n"), ((407, (54, 62)), "*MOT:\tI know that's one of your favorites right Casey tomatoes ?\n"), ((413, (6, 10)), '*CHI:\tyeah .\n'), ((417, (-1, 4)), "*BRI:\tyou don't know one of my favorites .\n"), ((425, (6, 11)), '*BRI:\tguess .\n'), ((428, (6, 12)), '*MOT:\tfrench fries .\n'), ((428, (13, 18)), '*MOT:\tfrench fries .\n'), ((431, (-1, 4)), '*MOT:\tin a salad ?\n'), ((431, (11, 16)), '*MOT:\tin a salad ?\n'), ((434, (8, 17)), '*MOT:\ta vegetable ?\n'), ((437, (6, 14)), '*BRI:\tcroutons [?] .\n'), ((440, (6, 14)), '*MOT:\tcroutons .\n'), ((443, (-1, 4)), "*MOT:\tthey're not vegetables .\n"), ((443, (18, 28)), "*MOT:\tthey're not vegetables .\n"), ((446, (-1, 4)), '*MOT:\tthey go on in salads then .\n'), ((446, (20, 26)), '*MOT:\tthey go on in salads then .\n'), ((451, (-1, 4)), '*MOT:\tCasey that insect that you made ?\n'), ((456, (-1, 4)), '*MOT:\tI like it .\n'), ((459, (-1, 4)), '*MOT:\twhen did you make that ?\n'), ((463, (6, 9)), '*CHI:\txxx .\n'), ((464, (13, 17)), '*CHI:\ta long time we made it .\n'), ((467, (13, 17)), '*MOT:\ta long time ago ?\n'), ((471, (-1, 4)), '*MOT:\tit was sitting in your cubby waiting for you to take it home ?\n'), ((471, (29, 34)), '*MOT:\tit was sitting in your cubby waiting for you to take it home ?\n'), ((471, (62, 66)), '*MOT:\tit was sitting in your cubby waiting for you to take it home ?\n'), ((478, (-1, 4)), '*CHI:\tI make it fly [?] .\n'), ((481, (-1, 4)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((481, (23, 32)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((481, (71, 80)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((481, (123, 128)), '*CHI:\tit was just like doughnuts like except the xxx really taste like doughnuts they were xxx <they was> [//] [>] and the light was in it [?] .\n'), ((489, (9, 12)), '*MOT:\toh [<] I see .\n'), ((492, (-1, 4)), "*CHI:\tand I didn't want to make one but I tried .\n"), ((498, (10, 14)), '*CHI:\tthe bugs come in it and then they walked in it .\n'), ((503, (-1, 4)), '*CHI:\tso when I heard the beach the xxx was loud and I go to get a xxx .\n'), ((503, (26, 31)), '*CHI:\tso when I heard the beach the xxx was loud and I go to get a xxx .\n'), ((503, (36, 39)), '*CHI:\tso when I heard the beach the xxx was loud and I go to get a xxx .\n'), ((511, (-1, 4)), "*BRI:\tCasey I'm eating .\n"), ((511, (16, 22)), "*BRI:\tCasey I'm eating .\n"), ((515, (-1, 4)), '*MOT:\tI [/] I really liked it though .\n'), ((518, (-1, 4)), '*MOT:\tit was good .\n'), ((521, (-1, 4)), '*CHI:\tI know [!] you liked it .\n'), ((525, (-1, 6)), '*MOT:\tI told Nina that we were gonna go down to the Cape in July for a week but +...\n'), ((525, (71, 75)), '*MOT:\tI told Nina that we were gonna go down to the Cape in July for a week but +...\n'), ((533, (-1, 4)), '*MOT:\tdid you know we are going on the Cape ?\n'), ((538, (-1, 4)), '*BRI:\tsince when ?\n'), ((541, (6, 10)), '*MOT:\tyeah but xxx get up to the lighthouse for a whole week .\n'), ((541, (50, 60)), '*MOT:\tyeah but xxx get up to the lighthouse for a whole week .\n'), ((546, (-1, 4)), '*MOT:\tand get out there with Ann and you and xxx .\n'), ((551, (-1, 4)), '*BRI:\tand Daniel ?\n'), ((554, (-1, 4)), "*MOT:\the might be out there I don't know .\n"), ((559, (-1, 4)), "*MOT:\the'll be down on the weekends .\n"), ((559, (6, 11)), "*MOT:\the'll be down on the weekends .\n"), ((563, (12, 17)), "*MOT:\tmaybe he'll be down on the weekend [/] .\n"), ((563, (33, 40)), "*MOT:\tmaybe he'll be down on the weekend [/] .\n"), ((563, (41, 44)), "*MOT:\tmaybe he'll be down on the weekend [/] .\n"), ((566, (11, 15)), '*BRI:\twhat days ?\n'), ((569, (-1, 4)), '*FAT:\tsit down Brian .\n'), ((572, (-1, 4)), '*MOT:\tprobably July Fourth weekend .\n'), ((572, (27, 34)), '*MOT:\tprobably July Fourth weekend .\n'), ((578, (6, 10)), '*MOT:\tyeah we go down to the beach probably .\n'), ((578, (29, 34)), '*MOT:\tyeah we go down to the beach probably .\n'), ((583, (6, 9)), '*MOT:\txxx David will be down there and .\n'), ((586, (-1, 4)), '*CHI:\tcan xxx and Mick come [?] ?\n'), ((586, (28, 31)), '*CHI:\tcan xxx and Mick come [?] ?\n'), ((590, (6, 10)), '*MOT:\tyeah .\n'), ((593, (15, 19)), '*FAT:\teat your corn Brian .\n'), ((596, (12, 15)), '*FAT:\t<come on> [>] .\n'), ((596, (16, 19)), '*FAT:\t<come on> [>] .\n'), ((602, (11, 15)), "*FAT:\tgood it's probably safer when your growing up lousy .\n"), ((610, (-1, 4)), '*FAT:\tyou xxx [>] say you going out there this year xxx no way .\n'), ((610, (14, 17)), '*FAT:\tyou xxx [>] say you going out there this year xxx no way .\n'), ((610, (47, 51)), '*FAT:\tyou xxx [>] say you going out there this year xxx no way .\n'), ((610, (59, 62)), '*FAT:\tyou xxx [>] say you going out there this year xxx no way .\n'), ((615, (12, 15)), '*CHI:\t<Mom> [<] !\n'), ((618, (-1, 4)), '*CHI:\tam I going good Mom ?\n'), ((622, (9, 13)), "*MOT:\toh look at that Daddy all the steak's gone .\n"), ((622, (36, 43)), "*MOT:\toh look at that Daddy all the steak's gone .\n"), ((627, (6, 10)), '*FAT:\tyeah .\n'), ((630, (-1, 4)), '*BRI:\tmine is too .\n'), ((630, (6, 10)), '*BRI:\tmine is too .\n'), ((633, (-1, 4)), '*CHI:\tnobody [>] [/] is .\n'), ((636, (44, 50)), '*MOT:\taside [<] from one two three four six pieces .\n'), ((641, (-1, 4)), "*FAT:\tyou're going to get in the croutons Brian .\n"), ((641, (6, 12)), "*FAT:\tyou're going to get in the croutons Brian .\n"), ((641, (33, 41)), "*FAT:\tyou're going to get in the croutons Brian .\n"), ((646, (11, 15)), "*CHI:\t<I'm not> [/] [>] .\n"), ((647, (11, 16)), '*MOT:\t<the corn> [<] eat your corn .\n'), ((647, (30, 34)), '*MOT:\t<the corn> [<] eat your corn .\n'), ((650, (6, 9)), '*FAT:\txxx .\n'), ((654, (6, 14)), '*FAT:\tcroutons .\n'), ((657, (-1, 4)), '*MOT:\tLarry .\n'), ((660, (6, 9)), '*CHI:\tzzz .\n'), ((664, (6, 9)), '*BRI:\txxx .\n'), ((666, (-1, 4)), '*FAT:\t<who is Larry> [>] ?\n'), ((666, (6, 10)), '*FAT:\t<who is Larry> [>] ?\n'), ((669, (9, 12)), '*CHI:\toh [<] that really cracks us up <Brian> [>] .\n'), ((669, (46, 49)), '*CHI:\toh [<] that really cracks us up <Brian> [>] .\n'), ((673, (-1, 4)), '*FAT:\t<who is Larry> [<] ?\n'), ((673, (6, 10)), '*FAT:\t<who is Larry> [<] ?\n'), ((677, (36, 44)), '*CHI:\t<Brian> [<] will you give the croutons to me ?\n'), ((682, (6, 12)), "*BRI:\tyou've got your own (.) .\n"), ((682, (26, 29)), "*BRI:\tyou've got your own (.) .\n"), ((685, (-1, 4)), "*MOT:\tyou're the one who wanted salad .\n"), ((685, (17, 20)), "*MOT:\tyou're the one who wanted salad .\n"), ((685, (32, 37)), "*MOT:\tyou're the one who wanted salad .\n"), ((689, (-1, 4)), "*FAT:\tyou know a whole bunch there that's the salad .\n"), ((689, (23, 28)), "*FAT:\tyou know a whole bunch there that's the salad .\n"), ((689, (46, 51)), "*FAT:\tyou know a whole bunch there that's the salad .\n"), ((697, (14, 18)), '*FAT:\teat the corn .\n'), ((700, (-1, 4)), "*FAT:\tyou don't want it ?\n"), ((704, (6, 10)), '*CHI:\tyeah .\n'), ((707, (-1, 4)), '*CHI:\tI do (.) .\n'), ((711, (18, 21)), '*CHI:\tMom yes the act did firecrackers [>] and when we went to xxx .\n'), ((711, (26, 38)), '*CHI:\tMom yes the act did firecrackers [>] and when we went to xxx .\n'), ((717, (12, 15)), '*BRI:\t<Mom> [<] !\n'), ((720, (-1, 4)), '*MOT:\tdid you like the firecrackers at xxx .\n'), ((720, (23, 35)), '*MOT:\tdid you like the firecrackers at xxx .\n'), ((724, (-1, 4)), '*BRI:\tthat was xxx [>] the car .\n'), ((724, (27, 30)), '*BRI:\tthat was xxx [>] the car .\n'), ((727, (11, 16)), '*CHI:\t<the fire> [<][>] [//] <the fire crackers> [//] the fire crackers were [/] .\n'), ((727, (34, 48)), '*CHI:\t<the fire> [<][>] [//] <the fire crackers> [//] the fire crackers were [/] .\n'), ((727, (63, 71)), '*CHI:\t<the fire> [<][>] [//] <the fire crackers> [//] the fire crackers were [/] .\n'), ((732, (12, 17)), "*BRI:\t<he's like> [<] [//] xxx is like oh my god reading the paper over\n"), ((732, (45, 48)), "*BRI:\t<he's like> [<] [//] xxx is like oh my god reading the paper over\n"), ((732, (61, 66)), "*BRI:\t<he's like> [<] [//] xxx is like oh my god reading the paper over\n"), ((738, (6, 10)), "*BRI:\the's like oh_my_god I'll regret this thing .\n"), ((738, (31, 37)), "*BRI:\the's like oh_my_god I'll regret this thing .\n"), ((738, (43, 48)), "*BRI:\the's like oh_my_god I'll regret this thing .\n"), ((743, (11, 17)), "*BRI:\tI'll regret it .\n"), ((747, (6, 10)), '*FAT:\tyeah I was in there protected .\n'), ((751, (-1, 4)), "*FAT:\tI didn't have_to duck to follow rockets [?] like you guys .\n"), ((751, (23, 27)), "*FAT:\tI didn't have_to duck to follow rockets [?] like you guys .\n"), ((751, (38, 45)), "*FAT:\tI didn't have_to duck to follow rockets [?] like you guys .\n"), ((756, (-1, 4)), '*FAT:\tthere is one <coming at you> [/] [>] .\n'), ((756, (19, 26)), '*FAT:\tthere is one <coming at you> [/] [>] .\n'), ((759, (-1, 4)), "*MOT:\t<you guys were> [<] xxx when I'm driving ?\n"), ((759, (11, 15)), "*MOT:\t<you guys were> [<] xxx when I'm driving ?\n"), ((759, (26, 29)), "*MOT:\t<you guys were> [<] xxx when I'm driving ?\n"), ((759, (39, 46)), "*MOT:\t<you guys were> [<] xxx when I'm driving ?\n"), ((763, (-1, 4)), '*FAT:\tsorry yeah [>] .\n'), ((763, (6, 11)), '*FAT:\tsorry yeah [>] .\n'), ((763, (12, 16)), '*FAT:\tsorry yeah [>] .\n'), ((766, (-1, 4)), '*CHI:\t<zzz the firecrackers> [<] +...\n'), ((766, (29, 32)), '*CHI:\t<zzz the firecrackers> [<] +...\n'), ((770, (-1, 4)), '*FAT:\t<when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...\n'), ((770, (6, 11)), '*FAT:\t<when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...\n'), ((770, (43, 56)), '*FAT:\t<when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...\n'), ((770, (84, 88)), '*FAT:\t<when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...\n'), ((770, (89, 94)), '*FAT:\t<when you see> [/] <when you see two fire crackers [?]> [>] come out of these kids hands [?] +...\n'), ((775, (11, 25)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((775, (34, 46)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((775, (71, 76)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((775, (125, 131)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((775, (132, 135)), '*CHI:\t<the fire crackers> [<] the firecrackers were going all over the place <they were firing> [/] they were firing <in the grass> [>] .\n'), ((783, (-1, 4)), "*FAT:\t<as long as it's one> [<] [/] as long as it's one of the other kids it's fine but there were these guys that had one they had xxx [>] .\n"), ((783, (18, 22)), "*FAT:\t<as long as it's one> [<] [/] as long as it's one of the other kids it's fine but there were these guys that had one they had xxx [>] .\n"), ((783, (32, 35)), "*FAT:\t<as long as it's one> [<] [/] as long as it's one of the other kids it's fine but there were these guys that had one they had xxx [>] .\n"), ((783, (69, 73)), "*FAT:\t<as long as it's one> [<] [/] as long as it's one of the other kids it's fine but there were these guys that had one they had xxx [>] .\n"), ((783, (105, 109)), "*FAT:\t<as long as it's one> [<] [/] as long as it's one of the other kids it's fine but there were these guys that had one they had xxx [>] .\n"), ((793, (47, 54)), '*BRI:\tremember [<] when Mikey got burnt in the stomach ?\n'), ((798, (6, 10)), '*MOT:\tyeah .\n'), ((801, (6, 12)), "*MOT:\tthat's because he was handling something (.) .\n"), ((801, (47, 50)), "*MOT:\tthat's because he was handling something (.) .\n"), ((805, (10, 15)), '*MOT:\tthe roman candle .\n'), ((805, (16, 22)), '*MOT:\tthe roman candle .\n'), ((808, (-1, 4)), '*CHI:\tMikey said to Mom [>] .\n'), ((813, (-1, 4)), '*BRI:\t<who let him> [<] [/] who let him do that ?\n'), ((813, (24, 27)), '*BRI:\t<who let him> [<] [/] who let him do that ?\n'), ((816, (10, 15)), '*MOT:\this uncle .\n'), ((819, (-1, 4)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((819, (35, 40)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((819, (83, 87)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((819, (99, 105)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((819, (106, 109)), '*CHI:\tI guess he was drinking some beers and two beers and he scratched him on his face [?] <three beers> [>] .\n'), ((827, (-1, 4)), '*BRI:\t<did his uncle get arrested> [<] ?\n'), ((827, (15, 20)), '*BRI:\t<did his uncle get arrested> [<] ?\n'), ((827, (35, 38)), '*BRI:\t<did his uncle get arrested> [<] ?\n'), ((833, (-1, 4)), '*BRI:\t<did his uncle> [>] get arrested ?\n'), ((833, (26, 29)), '*BRI:\t<did his uncle> [>] get arrested ?\n'), ((837, (-1, 4)), '*BRI:\twhy do you let him handle one ?\n'), ((841, (-1, 4)), '*FAT:\tbooze Brian (.) .\n'), ((841, (6, 11)), '*FAT:\tbooze Brian (.) .\n'), ((844, (-1, 4)), '*FAT:\the was drunk [?] (.) .\n'), ((850, (-1, 4)), "*BRI:\thave you ever gotten drunk and you're alright Dad ?\n"), ((850, (27, 32)), "*BRI:\thave you ever gotten drunk and you're alright Dad ?\n"), ((850, (37, 43)), "*BRI:\thave you ever gotten drunk and you're alright Dad ?\n"), ((855, (6, 10)), '*FAT:\tyeah .\n'), ((858, (-1, 4)), '*BRI:\treally ?\n'), ((861, (-1, 4)), '*BRI:\treally really really really really ?\n'), ((865, (11, 14)), '*BRI:\twild [>] !\n'), ((868, (6, 9)), '*MOT:\tzzz [<] .\n'), ((868, (10, 13)), '*MOT:\tzzz [<] .\n'), ((872, (41, 46)), "*CHI:\tyou've been drunk and all over the place .\n"), ((877, (6, 11)), "*BRI:\tdon't say that to xxx and xxx .\n"), ((880, (10, 14)), '*MOT:\tthe baby would be xxx .\n'), ((883, (6, 9)), '*MOT:\tzzz .\n'), ((887, (-1, 4)), '*FAT:\tdo you think I could do that xxx huh Brian ?\n'), ((887, (39, 42)), '*FAT:\tdo you think I could do that xxx huh Brian ?\n'), ((892, (-1, 4)), "*MOT:\tthat's what Peter said .\n"), ((895, (-1, 4)), "*MOT:\the goes J_C it's cut like Danny Ainge and then he goes do you know what Danny Ainge would say then I go Peter [!] who do you think I'm married to then he goes oh I forgot Dad knows xxx he goes xxx .\n"), ((895, (23, 26)), "*MOT:\the goes J_C it's cut like Danny Ainge and then he goes do you know what Danny Ainge would say then I go Peter [!] who do you think I'm married to then he goes oh I forgot Dad knows xxx he goes xxx .\n"), ((895, (187, 190)), "*MOT:\the goes J_C it's cut like Danny Ainge and then he goes do you know what Danny Ainge would say then I go Peter [!] who do you think I'm married to then he goes oh I forgot Dad knows xxx he goes xxx .\n"), ((910, (10, 13)), '*MOT:\tDad xxx he goes .\n'), ((913, (-1, 4)), '*FAT:\twho you playing with an eight ball ?\n'), ((913, (36, 40)), '*FAT:\twho you playing with an eight ball ?\n'), ((918, (15, 22)), "*CHI:\tMom your strap's going in your drink .\n"), ((918, (37, 42)), "*CHI:\tMom your strap's going in your drink .\n"), ((926, (-1, 4)), "*FAT:\tit's not Bran Brian come on no it is not cut it out .\n"), ((932, (6, 9)), '*BRI:\tzzz .\n'), ((936, (-1, 4)), '*CHI:\tDad you know what ?\n'), ((941, (-1, 4)), '*CHI:\tPeter used to call me George .\n'), ((949, (6, 10)), '*CHI:\tyeah .\n'), ((954, (14, 19)), "*MOT:\talright let's clean up everybody's just about done .\n"), ((963, (-1, 4)), '*MOT:\tjust a little more .\n')]
calculating accuracy and recall
correct labels:
set(['tomato', 'honey', 'salad', 'corn', 'potatoes', 'cotton candy', 'vegetables', 'doughnuts', 'french fries', 'sugar', 'water', 'croutons', 'beers', 'pepsi', 'popcorn', 'salads', 'milk', 'tomatoes'])
predicted labels:
set(['', 'chinese', "don't", 'beers>', 'dollar', '[!]', 'grass>', '&-um', 'booze', 'paper', 'guys', 'milk', 'bunch', 'cut', "he's", 'sugar', 'parents', 'sorry', 'good', 'get', 'none', 'gonna', 'vegetable', 'game', 'ones', "you've", 'mom', 'hands', 'foot', 'bit', 'school', 'mhm', 'potatoes', 'candy', 'xxx tomatoes', 'stuff', 'rockets', 'guy', 'round', 'regret', 'yeah', 'whole week', 'year', 'home', 'girl', 'salads', 'driving', '(.)', 'god', 'fingers', 'good>', 'toys>', 'game>', 'fire crackers>', 'cubby', 'croutons', 'eating', 'zzz', 'corn', 'french', 'water', 'salad>', 'come', 'fire>', 'boy', 'kids', 'red stuff', 'dollars', 'days', 'thing', 'roman', 'place', 'act', 'popcorn', '<when', 'apple', 'drunk', '<who', 'doughnuts', 'one', 'duck', "strap's", 'baby', "you're", 'guess', 'beers', "it's", 'vegetables', 'hey', "we're", 'way', 'today', 'stomach', 'xxx', 'huh', 'on>', 'like>', 'pieces', 'candle', '<time', 'look', 'salad', 'car', 'fries', 'crackers', 'circuses', 'circus', 'mine', 'bugs', 'honey', '[?]', 'huh>', 'got_to', 'cotton', "steak's", '[/]', 'things', '<same', 'boats', 'fill', 'beach', 'tomatoes', 'week', '<how', 'ball', 'okay', 'firecrackers', 'drink', "let's", 'corn>', 'fire crackers', 'mouth', 'nothing', '[<]', 'weekend', "he'll", 'circus>', 'tomato', 'light', 'not>', 'anybody', 'face', '[>]', 'get>', 'time', 'uncle', '<coming', 'yours', "that's"])
file:HSLLD/HV1/MT//casmt1.cha
precision: 0.10067114094
recall: 0.833333333333
true positives:['beers', 'corn', 'croutons', 'doughnuts', 'honey', 'milk', 'popcorn', 'potatoes', 'salad', 'salads', 'sugar', 'tomato', 'tomatoes', 'vegetables', 'water']
false positives: ['', '&-um', '(.)', '<coming', '<how', '<same', '<time', '<when', '<who', '[!]', '[/]', '[<]', '[>]', '[?]', 'act', 'anybody', 'apple', 'baby', 'ball', 'beach', 'beers>', 'bit', 'boats', 'booze', 'boy', 'bugs', 'bunch', 'candle', 'candy', 'car', 'chinese', 'circus', 'circus>', 'circuses', 'come', 'corn>', 'cotton', 'crackers', 'cubby', 'cut', 'days', 'dollar', 'dollars', "don't", 'drink', 'driving', 'drunk', 'duck', 'eating', 'face', 'fill', 'fingers', 'fire crackers', 'fire crackers>', 'fire>', 'firecrackers', 'foot', 'french', 'fries', 'game', 'game>', 'get', 'get>', 'girl', 'god', 'gonna', 'good', 'good>', 'got_to', 'grass>', 'guess', 'guy', 'guys', 'hands', "he'll", "he's", 'hey', 'home', 'huh', 'huh>', "it's", 'kids', "let's", 'light', 'like>', 'look', 'mhm', 'mine', 'mom', 'mouth', 'none', 'not>', 'nothing', 'okay', 'on>', 'one', 'ones', 'paper', 'parents', 'pieces', 'place', 'red stuff', 'regret', 'rockets', 'roman', 'round', 'salad>', 'school', 'sorry', "steak's", 'stomach', "strap's", 'stuff', "that's", 'thing', 'things', 'time', 'today', 'toys>', 'uncle', 'vegetable', 'way', "we're", 'week', 'weekend', 'whole week', 'xxx', 'xxx tomatoes', 'yeah', 'year', "you're", "you've", 'yours', 'zzz']
false negatives: ['cotton candy', 'french fries', 'pepsi']
# true pos: 15
# false pos: 134
# false neg: 3
HSLLD/HV1/MT//mitmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: Chi what're you doing ?", '*MOT: you eating breakfast (.) ?', '*MOT: what are you eating ?', "*CHI: I don't want it .", '*MOT: you eating waffles ?', '*MOT: and orange juice ?', "*MOT: you <don't> [>] want no more ?", "*CHI: <I don't [/]> [<] .", "*CHI: I don't want it .", '*MOT: what ?', '*CHI: I want a drink !', '*MOT: you want a drink [!] ?', '*MOT: you had two drinks .', '*CHI: oh I want another one .', '*MOT: you do ?', '*CHI: yes .', '*MOT: why ?', '*CHI: because <I want it> [>] .', "*MOT: <don't play with> [<] the pen !", '*MOT: give me that !', "*MOT: you don't play when you're eating !", '*MOT: Chi .', "*MOT: don't play .", '*MOT: you watching T V after you eat (.) ?', '*MOT: huh (.) ?', '*MOT: what are you gonna do today ?', '*MOT: are you gonna go (.) for a ride in the car ?', '*CHI: with Daddy ?', "*MOT: I don't know (.) .", '*FAT: want me to go with you ?', '*CHI: mhm .', '*MOT: go to the beach ?', '*FAT: want to walk on the beach ?', '*MOT: after Tuesday Park ?', '*CHI: xxx .', '*MOT: zzz .', '*CHI: Tuesday xxx too [?] .', '*MOT: yeah ?', "*CHI: and they will find out we're at the beach .", '*MOT: oh yeah ?', '*MOT: <what will happen will he get [/]> [>] ?', '*CHI: <xxx xxx xxx> [<][>] .', '*MOT: <Troy will get> [<] mad .', '*MOT: huh ?', '*CHI: what ?', "*MOT: Troy will get mad (be)cause he didn't get to go ?", '*CHI: what ?', "*CHI: don't let him go (.) !", '*MOT: so walk with him ?', "*CHI: when I finish this I'm gonna go to the beach !", '*MOT: you are ?', '*CHI: uhhuh (.) .', '*MOT: let me get a drink .', '*MOT: please (.) ?', '*MOT: you had two drinks already .', '*CHI: zzz .', '*CHI: no .', '*FAT: more o@l j@l (.) ?', "*FAT: that's enough .", '*CHI: drink [?] .', '*MOT: xxx put this back together (.) ?', "*MOT: don't stuff your mouth (.) .", '*MOT: go put your plate in the sink (.) .', '*MOT: okay ?', "*MOT: don't spill the crumbs on Mommy's floor .", '*MOT: okay ?', '*MOT: you gonna put it in the sink for Mama ?', '*MOT: thank you .', '*MOT: good boy .', '*MOT: put it in easy .', "*MOT: don't drop it hard (be)cause it would break alright ?", '*MOT: good boy .', '*MOT: all done ?', '*CHI: the knife .', '*MOT: the knife .', '*MOT: put it in the sink .', '*MOT: yeah [>] .', '*CHI: xxx [<] xxx xxx .', '*MOT: no !', '*MOT: put it in the sink .', '*CHI: like that [!] one .', '*MOT: you gonna watch Robo Cop now or what (.) ?', '*MOT: you gonna watch T V Chi (.) ?', '*MOT: Chi ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//mitmt1.cha
HSLLD/HV1/MT//devmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: xxx .', '*MOT: is it good ?', '*CHI: yeah .', '*MOT: yeah ?', '*CHI: I like the music .', '*MOT: uhhuh .', '*CHI: yeah .', '*MOT: did you have a good day today ?', '*CHI: mhm .', "*MOT: mhm what'd you do ?", '*CHI: mm !', '*MOT: good ?', '*CHI: yes .', "*MOT: what'd you do today ?", '*CHI: oat bran cereal .', '*MOT: uhhuh !', '*MOT: oat bran cereal .', '*MOT: okay then eat .', "*CHI: there's my Eggo .", "*CHI: there's my Eggo xxx .", '*MOT: you having fun ?', '*MOT: having fun ?', '*MOT: oh_my_goodness &a:h &=gasps !', '*MOT: you like the commercial ?', '*CHI: yeah !', '*CHI: me .', '*CHI: my Eggo please .', "*CHI: don't get mad get glad .", "*CHI: don't get <mad get glad> [>] .", '*MOT: <mad get glad> [<] .', "*CHI: don't get mad get glad .", '*MOT: finish eating your cereal .', '*CHI: okay .', '*CHI: I like .', '*MOT: mhm .', '*CHI: mhm .', '*MOT: were you good today ?', '*CHI: mhm .', '*MOT: you a good boy ?', '*CHI: mhm .', '*MOT: you like your hair+cut ?', '*CHI: mhm .', '*MOT: uhhum .', "*CHI: don't get mad get glad .", '*CHI: say it back .', "*CHI: don't get mad get glad .", '*MOT: mhm .', "*CHI: don't get mad get glad .", '*MOT: (..) what do you want for lunch tomorrow ?', '*CHI: oat bran cereal .', "*MOT: you're eating oat bran cereal .", '*MOT: what do you want for lunch tomorrow Chi ?', '*CHI: I want yogurt .', '*MOT: you want yogurt and your sandwich ?', '*CHI: a sandwich my bread .', '*MOT: and your bread .', '*CHI: yes .', '*CHI: grandma makes my lunch .', '*MOT: yep grandma makes your lunch .', '*CHI: yeah grandma is making some lunch .', '*CHI: some coffee .', '*CHI: (..) rice crispies .', '*CHI: Mom !', '*CHI: rice crispies .', '*MOT: rice crispies\xe2\x86\x91 nah .', '*CHI: I like that music .', "*MOT: it's not .", "*MOT: it's a tape .", '*CHI: a tape .', "*MOT: it's recording .", "*CHI: that's a [/] a tape !", '*MOT: mhm .', '*CHI: a tape yeah !', '*MOT: yeah [>] .', '*CHI: yeah [<] .', '*MOT: did you have fun Saturday with Barry ?', '*CHI: mhm .', '*MOT: yeah ?', '*CHI: yeah .', "*MOT: you didn't like your hair+cut ?", "*MOT: you didn't like it ?", '*MOT: you were crying huh ?', '*CHI: yes you do !', '*MOT: you were crying huh ?', '*CHI: no yes you do .', '*MOT: no .', '*MOT: you like the movie (.) yesterday [>] ?', '*CHI: mhm [<] .', '*MOT: was it good ?', '*MOT: good movie ?', '*CHI: yes [>] .', '*MOT: the [<] Abyss .', '*CHI: yes .', '*MOT: was Bro good .', '*CHI: no .', '*MOT: no he was bad ?', '*CHI: no .', "*CHI: yeah he's bad !", '*MOT: he was bad yesterday ?', '*MOT: what happened ?', '*CHI: Bro &-um xxx play in the door .', '*MOT: oh .', '*CHI: yes .', "*CHI: he xxx don't come xxx .", '*CHI: xxx .', '*CHI: (..) xxx second piece ?', "*MOT: that's not .", '*MOT: uhhuh .', '*MOT: good cereal ?', '*CHI: uhhum .', '*MOT: (..) Bro get in your bed .', '*BRO: (.) I want cereal .', '*MOT: you want some too ?', '*MOT: you want to eat too ?', '*BRO: yeah .', '*MOT: yeah ?', "*BRO: what's that ?", '*MOT: a tape recorder .', "*CHI: it's a tape .", "*MOT: it's taping .", '*BRO: tapes .', '*CHI: <and they play music> [>] !', '*MOT: <xxx bed> [<] .', '*CHI: play music .', '*MOT: or Mommy gonna find you up .', "*MOT: it's getting late .", '*BRO: <I want some> [//] I wanna eat .', '*BRO: I want cereal .', '*MOT: you want some cereal ?', '*MOT: come on .', '*BRO: mhm .', '*MOT: sit down Chi .', "*MOT: don't touch anything .", '*MOT: Bro sit down .', "*MOT: don't touch anything Chi .", '*CHI: okay .', "*MOT: don't touch the tape .", '*CHI: okay .', '*MOT: okay ?', '*CHI: okay .', "*MOT: don't touch anything .", '*CHI: okay .', "*BRO: (.) what's that ?", "*BRO: what's that ?", '*MOT: cereal xxx .', "*BRO: what's that ?", '*BRO: xxx .', '*MOT: xxx alright .', '*MOT: come sit down here with Chi and eat (.) your food .', "*MOT: Chi don't do that .", "*MOT: <you don't xxx> [//] <you don't understand where you are> [>] .", '*CHI: <xxx Mom> [<] !', '*CHI: okay .', '*BRO: is that xxx ?', "*BRO: don't touch the picture !", "*MOT: don't touch .", "*CHI: don't touch .", "*CHI: you're gonna break it .", '*BRO: gonna break it .', "*MOT: don't touch the stereo and sit !", '*MOT: sit up .', "*MOT: don't make a mess now Bro .", '*MOT: whoops .', '*MOT: look what you did .', '*MOT: did you do that ?', '*MOT: you be careful .', '*CHI: xxx .', "*MOT: Chi don't eat all the milk try to eat all your cereal together .", '*MOT: huh ?', '*CHI: yeah .', '*MOT: yeah ?', '*CHI: yeah .', '*BRO: (..) exercise ?', '*MOT: huh ?', '*BRO: exercise ?', "*MOT: no I'm not gonna do no exercises .", "*MOT: it's too late .", "*BRO: it's too late ?", "*MOT: I'm tired .", '*BRO: tired ?', '*CHI: too hot !', '*MOT: too hot .', '*BRO: uhhum .', "*CHI: yeah it's real hot .", "*MOT: it's too hot .", '*CHI: <I do it with T_V> [>] .', '*BRO: exercise [<] .', '*BRO: I got it !', '*MOT: mhm .', '*BRO: oh I won !', "*MOT: I hope this thing's working .", '*CHI: xxx how this tapes ?', '*BRO: the pictures .', '*CHI: xxx .', '*CHI: xxx &=crying .', "*MOT: what's wrong ?", '*CHI: my milk .', '*MOT: be careful .', '*CHI: look_it .', '*CHI: Mom !', '*MOT: what ?', '*CHI: come here !', "*MOT: what's wrong ?", "*MOT: what's wrong with your mouth ?", '*MOT: nothing right ?', '*MOT: your mouth is alright .', "*MOT: there's nothing wrong .", '*CHI: with what [>] ?', '*BRO: what [<] !', '*CHI: huh ?', '*BRO: huh .', '*CHI: huh ?', '*BRO: huh .', '*CHI: huh ?', '*BRO: huh .', "*CHI: it's not working .", '*MOT: it is working [!] I hope it is .', '*CHI: no .', '*BRO: I broke .', "*CHI: it's not working .", '*MOT: finish eating the whole bowl okay ?', '*CHI: okay .', "*MOT: don't touch the tape .", "*CHI: I'm finished .", '*MOT: you finished ?', '*CHI: mhm .', '*MOT: mhm ?', '*CHI: yeah .', '*MOT: finish this .', '*MOT: come on .', '*CHI: hm: .', '*MOT: come on .', '*MOT: Bro you almost done ?', '*BRO: no yet .', '*MOT: not yet ?', '*MOT: want some juice Chi ?', '*BRO: xxx .', '*MOT: want some juice ?', '*CHI: no thank you .', '*MOT: no thank you .', '*MOT: want some milk ?', '*CHI: no thank you .', '*MOT: no thank you .', '*CHI: no .', '*CHI: <no thank you> [>] .', '*MOT: <want some milk> [<] ?', '*BRO: yeah [>] .', '*MOT: you [<] already got milk in there .', '*MOT: finish your cereal .', '*MOT: put this in the sink .', '*BRO: xxx .', '*CHI: no [!] xxx no no !', '*BRO: I want juice .', "*MOT: there's no more now .", '*BRO: I want juice .', '*MOT: I have_to make it .', '*BRO: I want milk .', '*MOT: well here put this in the sink .', '*BRO: I want milk .', '*CHI: xxx .', '*MOT: you finish your cereal and you can have some more .', "*MOT: don't touch the tape .", '*MOT: huh\xe2\x86\x91 Chi\xe2\x86\x91 come here .', '*MOT: Chi .', '*CHI: huh ?', '*MOT: come here .', '*CHI: huh ?', "*BRO: what's that .", "*BRO: don't touch it .", '*BRO: xxx .', '*MOT: go sit down and eat .', "*MOT: let's go .", '*CHI: mommy my boom boom .', '*MOT: your boom boom hurt .', '*MOT: why your boom boom hurt ?', '*BRO: picture\xe2\x86\x91 pictures .', '*MOT: come on come on sit down .', '*BRO: okay .', "*MOT: don't spill the carton .", '*CHI: okay .', '*CHI: thanks mommy .', "*MOT: you're welcome .", '*CHI: xxx .', '*MOT: hurry up and finish xxx you ought_to go to bed .', '*CHI: xxx .', '*MOT: huh ?', '*CHI: xxx .', "*MOT: if you're good maybe we can go shopping with Grandma tonight .", '*MOT: huh ?', '*MOT: go shopping with Grandma tonight ?', '*CHI: xxx Grandma .', '*MOT: you want to go shopping with Grandma tonight ?', '*CHI: yeah .', '*MOT: yeah .', '*CHI: yeah .', '*CHI: (..) sit down !', "*MOT: I don't want to sit down .", '*MOT: finish your dinner (.) and drink your milk .', '*CHI: xxx .', "*CHI: that's the milk .", "*MOT: okay you're all finished ?"]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//devmt1.cha
HSLLD/HV1/MT//monmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*SIS: is Grammy eatin(g) over ?', '*CHI: 0 [=! babbling noises] .', '*MOT: no .', '*SIS: oh .', '*SIS: <xxx xxx> [>] mom .', '*MOT: <Chi you gonna eat all this spaghetti> [<] ?', '*SIS: xxx mom (.) daddy .', '*SIS2: no .', '*SIS: put that one back and take this one .', '*SIS: <daddy made the> [>] big one .', '*MOT: <Chi> [<] Chi are you gonna be eatin(g) all this ?', '*CHI: no !', '*CHI: no (.) no [=! begins to cry] .', '*MOT: what ?', '*CHI: &=whines .', '*MOT: what ?', '*CHI: xxx .', '*MOT: want any (.) just eat what you can okay ?', "*CHI: I can't eat all that &=whining .", '*MOT: Chi .', "*SIS2: I'm xxx .", '*MOT: Chi (.) you have_to eat what you can alright ?', '*SIS: wanna <grow up big> [>] ?', '*MOT: <and you grow up> [<] big and strong .', '*SIS2: Chi .', '*CHI: mommy can xxx [>] ?', '*SIS2: xxx [<][>] .', '*SIS: xxx [<] .', '*MOT: yep .', '*MOT: &-uh you want some cheese on this ?', '*CHI: what ?', '*MOT: huh ?', '*CHI: I wanna do it .', "*SIS2: Ma , Chi doesn't want hers .", '*MOT: just a little .', '*SIS: garlic bread .', '*MOT: nobody told you that you could have that .', "*MOT: <just a little> [//] don't stick it in the sauce .", '*MOT: wait a minute .', '*SIS: pass <the xxx can I have the garlic bread> [>] ?', '*CHI: <your in> [<] +...', '*SIS: huh ?', "*CHI: I can't eat all of this .", '*MOT: Chi just eat some honey .', '*SIS: whose Pepsi is that ?', '*SIS2: mamma .', "*MOT: it's mine .", '*CHI: 0 [=! making baby noises] .', '*SIS: I want lot I want a la &-uh &-uh +...', '*SIS2: daddy told me to ask you .', "*MOT: good eat it I don't care .", '*MOT: okay ?', '*SIS2: mhm .', '*SIS: thank you mommy .', '*CHI: mommy can I please have a cup ?', '*MOT: one second .', '*SIS2: yup .', '*CHI: 0 [=! hums a tune] .', "*MOT: Sis you know you're not supposed to have (.) seconds of this .", '*SIS2: I know !', "*MOT: so I'll give you this for now and this is it .", '*SIS2: you took the lid off .', '*MOT: huh ?', '*SIS2: you took the lid off ?', '*CHI: &=humming .', '*MOT: you want cheese ?', '*SIS2: &-uh .', '*MOT: huh ?', '*SIS: mommy I need a little bit more please .', "*SIS2: <that cheese doesn't come out good> [>] .", '*CHI: xxx [<] .', '*MOT: okay ?', '*CHI: yep thank you .', '*MOT: drinkin(g) my Pepsi start eatin(g) your spaghetti .', '*CHI: spaghetti .', '*MOT: alright ?', '*CHI: 0 .', '*MOT: Chi stop that .', '*SIS: thank you .', '*MOT: eat !', '*CHI: xxx spaghetti xxx .', '*MOT: (.) eat that spaghetti right now !', '*CHI: Sis !', "*CHI: there wasn't brown in those things .", '*SIS3: huh ?', "*CHI: there wasn't brown in those things .", '*SIS3: brown .', '*CHI: wait xxx can I have my piece of bread for a minute .', '*SIS: why ?', '*CHI: (be)cause .', '*MOT: Sis your not suppose to be eatin(g) all that bread you know .', "*SIS2: hunhunh I'm not eating Sis's .", "*SIS2: never mind I won't have it .", '*MOT: (.) Chi eat your spaghetti please .', "*CHI: I can't tell who (.) made that .", '*MOT: your father cooked that .', '*CHI: how did he cook it ?', '*CHI: huh ?', '*SIS: on stove .', '*SIS2: not on stove the oven !', '*CHI: &=whines .', "*SIS2: it won't kill ya [= you] .", "*CHI: <I don't like> [>] xxx .", '*SIS2: I@q eat it .', '*CHI: I eat it .', "*CHI: Ma , I can't <eat all of that> [>] .", "*MOT: <you don't> [<] [//] just eat what you can alright ?", '*CHI: xxx it was real hot !', '*SIS: well let it cool off !', '*MOT: xxx .', '*CHI: xxx .', '*SIS: why not .', '*CHI: yes &=yelling !', '*MOT: (h)ey (h)ey stop yelling .', '*CHI: &=crying .', "*CHI: <I can't eat all of this> [>] .", "*SIS: <that's just (be)cause [?] xxx> [<][>] .", "*MOT: <Chi you don't> [<] have_to eat it all .", '*MOT: just eat some alright ?', '*MOT: alright ?', '*MOT: just eat some of it !', "*MOT: it's not the end of the world .", '*SIS2: looks like you like it Sis .', '*SIS2: xxx .', '*SIS: hm: ?', '*SIS2: <looks like you like it> [>] .', '*SIS: xxx [<] .', '*CHI: 0 [=! whining and crying] .', '*CHI: 0 [=! makes baby noise] .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//monmt1.cha
HSLLD/HV1/MT//jebmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: another one .', '*MOT: is that the kind of pasta that you wanted ?', '*CHI: yep .', '*CHI: I always like some pasta .', '*MOT: yeah ?', '*MOT: do [<] you want some parmesan cheese on it ?', '*CHI: no .', '*MOT: no ?', '*CHI: no xxx .', '*CHI: only bread [?] .', '*MOT: okay .', '*CHI: (.) xxx .', '*MOT: (.) what are you doing ?', '*CHI: xxx .', '*MOT: what ?', '*CHI: xxx .', '*MOT: okay .', '*MOT: did you put it on all by yourself ?', '*CHI: yep .', '*MOT: yeah ?', '*CHI: I did .', '*MOT: you did ?', '*CHI: yep .', '*MOT: xxx .', '*CHI: (.) I want mine .', "*CHI: how come I don't got none &=whining ?", "*MOT: what don't you have ?", '*CHI: a napkin !', '*MOT: a napkin ?', '*MOT: where did you put your napkins ?', '*CHI: you got it .', '*MOT: I thought you brought in your own .', '*MOT: okay here you go you can have one of these .', '*MOT: okay ?', '*MOT: put it in your lap .', "*MOT: (.) here's your salad .", "*MOT: (..) oh it's so hot today .", '*CHI: yeah .', '*MOT: too hot to eat in the kitchen .', '*CHI: yeah .', '*CHI: (.) that yours xxx ?', '*MOT: yep .', "*CHI: no that's mine .", "*MOT: hm: you're right .", "*MOT: that one's your salad .", "*CHI: xxx don't call that one yours .", "*MOT: I know I'm so sorry .", '*MOT: &=laughs .', '*CHI: you was gonna get two of them .', "*MOT: yeah I'll have two salads and you'll have how many salads ?", '*CHI: huh ?', '*MOT: &=laughs .', '*CHI: silly goose .', "*MOT: I'm a silly goose ?", '*CHI: yeah !', '*MOT: (..) when you left on vacation was Timmy back at school yet ?', '*CHI: no .', '*MOT: where was he ?', '*CHI: he was on [/] on vacation .', '*MOT: on vacation ?', '*CHI: he went to vacation .', "*MOT: yeah I haven't seen him in a while .", '*CHI: xxx .', "*MOT: he'll probably be back in September just like you and me .", '*CHI: maybe .', '*CHI: oh yes he will <be in> [//] come back in September .', "*MOT: he'll be back in September ?", '*CHI: yeah .', '*MOT: yeah ?', '*MOT: so will you .', '*CHI: sure .', '*MOT: and so will mommy .', '*MOT: mommy goes back to school in September too .', '*CHI: now I wanna go to school .', '*MOT: what ?', '*CHI: now I wanna go to school .', '*MOT: now you wanna go to school ?', '*CHI: yeah .', '*MOT: right now ?', '*CHI: not +/.', '*MOT: right this second ?', '*CHI: no !', '*MOT: &=laughs .', '*CHI: (be)cause it close at night time .', '*CHI: nuhhuh .', '*CHI: (..) you go to school xxx dinner .', '*MOT: I should go to school right now ?', '*CHI: yeah !', '*CHI: you have_to .', "*MOT: no my school's closed today too .", '*MOT: you know what day it is today ?', '*CHI: what ?', "*CHI: xxx what [/] what [//] it's Wednesday .", "*MOT: no it's not Wednesday .", '*CHI: Friday .', "*MOT: no it's not Friday .", '*CHI: what day is it ?', "*MOT: it's the day before Monday .", '*MOT: do you know what that day is ?', "*MOT: it's called Sunday .", "*CHI: I don't know .", "*MOT: (.) how's your pasta ?", '*CHI: good .', '*CHI: you got more ?', '*MOT: yep I made a lot for you .', '*CHI: oh .', '*MOT: you can have some more if you want .', '*MOT: make sure to eat your salad too though .', "*MOT: (..) hey [!] where's your dragon ?", "*MOT: wasn't he gonna have some dinner with us ?", '*CHI: no .', "*MOT: I think he's over there behind the fan .", '*CHI: I xxx .', '*CHI: &=shouts .', '*MOT: is he gonna sit here next to us ?', '*CHI: I xxx .', '*CHI: because he xxx dinner .', '*MOT: what ?', "*CHI: he's our dinner now .", "*MOT: he's our dinner ?", '*CHI: yeah .', '*MOT: &=laughs .', '*CHI: xxx dinner now .', "*MOT: what's his favorite kind of food ?", "*CHI: <it's> [/] it's pasta .", '*CHI: pasta Mot ?', '*MOT: yeah .', '*CHI: 0 [=! makes chewing sounds] .', "*MOT: why don't you slide over here a little bit .", "*CHI: he's gonna slide .", '*CHI: like a slide .', '*MOT: like a slide ?', '*CHI: yeah .', '*CHI: on a play ground .', '*MOT: well sometimes when you say slide over it just means scooch over .', '*MOT: like move over a little bit .', '*CHI: oh .', "*MOT: but you're right it is also a slide at the play ground .", '*CHI: xxx [>] .', '*MOT: same [<] word sometimes it just means different things .', "*CHI: no <it's> [/] <it's> [/] it's a (.) xxx people .", '*MOT: what ?', '*CHI: and xxx people go down .', "*MOT: yeah that's right .", '*CHI: xxx .', '*MOT: (..) is your dragon gonna eat some salad ?', '*MOT: I bet you he likes salad .', '*MOT: he told me that was one of his favorite kinds of food .', '*CHI: xxx gonna eat xxx .', "*MOT: don't talk with your mouth too full .", "*CHI: he's gonna eat with xxx little tiny one .", '*MOT: okay .', '*CHI: xxx .', '*CHI: xxx pretending .', "*MOT: he's pretending ?", "*MOT: (..) what's your dragon gonna do when he grows up ?", '*MOT: (..) &=laughs .', '*MOT: sorry I got you when your mouth was full .', "*CHI: and he's gonna be superman when he grows up .", "*MOT: <he's gonna be superman> [>] ?", '*CHI: super dragon [<] .', '*CHI: no super dragon .', '*MOT: super dragon ?', '*MOT: that sounds pretty good .', "*CHI: and he's gonna fly in the sky like xxx wings .", "*MOT: he's gonna fly in the sky with what ?", '*CHI: with his wings !', '*MOT: his wings ?', '*CHI: yup !', '*MOT: is his mommy dragon gonna come with him ?', '*CHI: &-uh yeah .', '*MOT: what about his daddy dragon ?', "*CHI: he's gone because he's dead .", "*MOT: he's dead ?", '*CHI: yep .', '*MOT: hm: .', '*MOT: that must be sad .', '*CHI: I told him that .', '*MOT: what ?', '*CHI: I told him that this morning .', '*MOT: you told him that this morning ?', '*CHI: yep .', '*MOT: that his daddy dragon was dead ?', '*CHI: yep .', '*MOT: what did the baby dragon say ?', "*CHI: I don't know .", '*CHI: xxx go find him xxx alive .', '*CHI: he said that to me .', "*MOT: he said why don't we go find him maybe he's alive ?", '*MOT: okay .', "*MOT: maybe someday we'll have_to go back to the toy store and buy a daddy dragon .", '*CHI: (.) yeah .', '*MOT: 0 [=! clears throat] .', "*MOT: did I tell you Barbara's coming over tomorrow ?", '*CHI: yeah .', "*MOT: she's gonna come over after I go to my exercise class .", "*CHI: Dad's gonna stay with me ?", '*MOT: daddy ?', '*CHI: yep .', "*MOT: no daddy's still on vacation .", '*CHI: xxx .', '*MOT: you know what I was thinking ?', '*CHI: what ?', "*MOT: I was thinking if I can't find a baby+sitter for you maybe you can come to my exercise class with me would you like to do that ?", '*MOT: and lay on the floor and do exercises with mommy ?', "*MOT: and meet my teacher she's real nice her name is <Linda> [>] .", '*CHI: yeah [<] yeah .', '*CHI: I like Linda .', "*MOT: mhm she's nice .", '*CHI: yeah .', "*MOT: well we'll see .", "*MOT: if we can't find a baby+sitter then you can come with me to my class okay ?", '*CHI: this night ?', '*MOT: no tomorrow night .', '*MOT: Monday night .', '*CHI: when Barbara comes ?', '*MOT: uhhuh and then Barbara will come after that .', '*MOT: okay ?', "*CHI: I don't wanna go there .", "*MOT: well it's tomorrow we don't have_to think about it right now .", "*CHI: I don't wanna think about it right now .", '*MOT: that was delicious !', '*MOT: you can save the rest of your pasta for lunch tomorrow if you want to .', '*CHI: I want to .', "*MOT: do you want to eat what's on your plate and then I'll save the rest of it (.) that's in the kitchen ?", '*CHI: I wanna eat all of this .', '*MOT: okay .', '*CHI: what was that (.) hm: ?', '*MOT: what ?', '*CHI: what was that ?', "*MOT: it's a car out on the street .", '*CHI: what was it hm: hm: hm: ?', '*MOT: you can get dizzy <&si> [//] shaking your head around like that .', '*MOT: beany !', '*MOT: &=laughs .', "*MOT: you're gonna fall in your pasta .", '*MOT: &=laughs .', "*CHI: I'm gonna put my face in it !", '*MOT: put your face in it ?', "*MOT: oh beany [!] I can't believe you did that !", '*CHI: &=laughs .', '*MOT: god &=laughing .', '*MOT: you put your hand right in your salad !', '*CHI: &=laughs .', "*MOT: now you gotta eat your hand that's got salad dressing all over it .", '*MOT: god !', '*CHI: mom ?', "*MOT: no [!] don't do that .", '*CHI: &=laughs .', '*MOT: you drive me crazy !', '*MOT: you gotta eat your hand now .', "*CHI: no [!] I don't have_to eat (.) my &ea [//] my hand that won't be back to .", "*MOT: if you eat your hand it won't be back to ?", '*CHI: yeah .', "*MOT: then you'll only have one hand ?", '*CHI: yeah .', "*MOT: oh okay you don't have_to eat it then .", '*CHI: &=laughs .', '*MOT: &=laughs .', "*CHI: you're kidding !", '*MOT: I was just kidding .', '*CHI: I threw a pie at your face .', '*MOT: you threw a pie at my face ?', '*CHI: yeah .', '*MOT: wow [!] what was that ?', '*CHI: a horn .', '*CHI: xxx .', '*MOT: you got pasta on your bread .', "*MOT: whoops it's a pasta sandwich .", "*MOT: <go up> [//] it's okay just pick it up .", "*MOT: I'm gonna go get the rest of my Coke .", '*MOT: do you want anything while I go in the kitchen ?', '*CHI: I want xxx .', "*MOT: you're all done with your dinner ?", '*CHI: yep .', '*MOT: okay .', '*MOT: here take your cup in and put it in the sink .', "*CHI: I don't +/.", '*MOT: you know what\xe2\x86\x91 I hear Daniel outside .', '*MOT: so once we clean up the dinner stuff we can go outside and play with Daniel okay ?', '*CHI: no !', '*MOT: alright ?', '*MOT: okay take it and put it in the sink .', '*CHI: I bring the rest of it .', '*MOT: okay .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jebmt1.cha
HSLLD/HV1/MT//jesmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*BRO: what's that ?", '*MOT: a tape recorder .', "*MOT: how come the light's not oh there it goes .", '*MOT: come on Chi eat up .', '*CHI: (16.) xxx [=! cries out] .', '*MOT: <come on> [>] .', '*CHI: <xxx going on> [<] .', "*BRO: <it's a > [>] tape recorder .", '*MOT: mhm [<] .', '*CHI: look !', "*CHI: it's goin(g) on .", '*MOT: yep .', '*BRO: good .', '*CHI: 0 [=! squeals and giggles] .', '*CHI: xxx .', '*BRO: <have_to> [>] .', '*BRO: <eat up> [<] .', '*CHI: xxx .', '*CHI: &=giggles .', '*CHI: you like it so anyway !', '*CHI: &=shouts .', '*MOT: Chi xxx .', '*CHI: can you put more ketchup in there ?', '*MOT: mhm .', '*BRO: I want some ketchup myself .', '*CHI: put some in my xxx .', "*MOT: okay that's good .", '*BRO: Mom .', '*BRO: (6.) 0 [=! bleah noise] .', "*MOT: you don't have_to bang it you don't hafta bang it .", '*MOT: just once you have_to do that .', '*BRO: (13.) may I have a drink ?', '*FAT: after you eat .', '*BRO: half of it .', '*BRO: after I eat half of it .', "*CHI: (.) <and you're not> [/] and you're not having your milk .", '*BRO: (.) oh yes I will .', '*BRO: <right after> [//] if I get done eatin(g) .', '*CHI: when you all done and then [/] then you can have your milk .', '*CHI: okay ?', '*CHI: Brother .', "*BRO: Mom it's only xxx <it's only five> [>] .", '*CHI: <alright Bro> [<] ?', '*MOT: I know .', "*BRO: she'll cook it at six .", '*MOT: what ?', '*BRO: (be)fore we go to bed .', '*MOT: (8.) Chi asked if the ice cream truck comes [: (a)] round can you get ice cream ?', '*BRO: huh ?', '*BRO: (..) oh !', "*MOT: so you'll be all done in time ?", "*BRO: (.) I'll be done in ten minutes .", '*CHI: and when that goes through xxx +/.', "*BRO: and if we're still eatin(g) when the ice cream truck came I'll just run down there .", '*CHI: me too .', '*BRO: and get my ice cream and come back up .', "*BRO: <well I'll get you one> [>] .", '*CHI: and <me go down> [<] .', "*BRO: I'll get you one .", '*CHI: no !', '*BRO: okay Chi you wanna [: want a] snow cone or a plain ice cream ?', '*BRO: huh ?', '*BRO: snow cone ?', '*CHI: yeah .', "*BRO: (o)kay I'll get you a snow cone .", '*MOT: no get her a regular ice cream .', "*BRO: I'll get you a regular ice cream .", '*BRO: (.) xxx you one Chi ?', '*CHI: two .', '*BRO: (.) true .', '*BRO: (9.) I need more ketchup .', '*MOT: wanna give him some ?', '*MOT: thank you .', "*MOT: (17.) can't believe you're home early .", '*CHI: can I have more ?', '*FAT: uhhuh .', '*CHI: I want more !', '*MOT: (.) more what ?', '*FAT: (.) you gotta eat your hamburger .', "*MOT: (.) there's no more onion rings Chi .", '*CHI: I want more &=whines .', "*MOT: they're all gone .", '*BRO: chicken .', '*MOT: that is [!] it right there .', "*MOT: that's hamburger .", '*CHI: I want some chicken too .', '*BRO: (.) there is no chicken .', "*FAT: if you eat up your hamburger you can have daddy's onion rings (.) okay ?", '*BRO: what about me ?', '*FAT: you eat your hamburger and your corn .', "*BRO: no hamburger that's it .", '*MOT: (.) try your xxx Fat ?', '*FAT: no .', '*FAT: I had onion rings today .', '*FAT: they were lousy .', "*MOT: I was gonna say I'll bet you they were better than these .", '*MOT: &=laughs .', '*MOT: these are frozen [>] .', '*FAT: <Burger King> [<] .', '*MOT: oh yeah ?', '*FAT: yeah I had hamburger today too .', '*MOT: (.) sorry .', '*FAT: these are real hamburger .', '*CHI: yum burger .', '*MOT: always always .', '*MOT: hello ?', '*MOT: yup .', '*MOT: (.) yeah I called you twice .', '*BRO: Father can you put your foot on mine ?', '*FAT: stop it and eat please .', '*MOT: &=laughs it was me .', '*FAT: keep eating Bro .', '*BRO: xxx [<] .', "*FAT: just think the ice cream truck comes and you guys aren't done eatin(g) you don't get ice cream .", '*MOT: www .', '*BRO: who was that ?', "*MOT: it was Christie's mother .", '*MOT: sit down and eat Chi come on .', '*BRO: Christie who ?', '*MOT: Christie Magnuson .', '*CHI: no Christie Magason &=shouts .', '*BRO: ten bucks ?', "*MOT: Chi <be careful you're gettin(g)> [>] ketchup on your dress .", '*BRO: <and twenty two cents> [<] ?', '*BRO: (.) what was it ten bucks and twenty two cents Mot ?', '*MOT: mm .', '*BRO: crazy .', '*MOT: she owes me ten dollars and twenty two cents .', '*BRO: oh .', '*BRO: who ?', '*CHI: &=sigh .', '*BRO: (..) what she buy ?', '*MOT: move your plate Chi .', '*BRO: what she buying ?', '*MOT: toys .', '*BRO: what toys ?', "*MOT: actually she's not buying toys she's buying kitchen things .", '*BRO: (.) what kind of kitchen things ?', "*MOT: don't worry about it .", '*CHI: &=babbling .', "*BRO: I'm curious !", '*CHI: Freddy .', '*CHI: Freddy !', '*CHI: (.) Freddy !', '*CHI: Freddy !', '*MOT: Chi leave Freddy alone .', '*FAT: Brother !', '*MOT: he needs food in his dish I went through there today ?', '*MOT: he was gonna bite me so I said forget it &=laughs .', "*MOT: I'll let Bro do it .", '*CHI: Freddy !', '*BRO: me ?', '*FAT: no .', '*CHI: me ?', '*MOT: Chi .', '*MOT: come on eat up .', '*BRO: when xxx my corn .', "*BRO: I'm gonna +/.", '*CHI: &=laughs .', '*MOT: Chi you <want ice cream for> [>] dessert ?', "*CHI: <I'm running around> [<] !", '*MOT: you want ice cream ?', "*FAT: don't use your fingers .", '*MOT: come on get up and eat .', '*CHI: Fat !', '*CHI: 0 [=! baby prattle] .', '*CHI: Mother !', '*CHI: can you get me some (.) more [//] (.) &-um more water (be)cause his [/] his knocked over .', '*MOT: Father will take care of it .', "*CHI: Freddy don't bite Fat or you're getting out of the cage xxx you go to sleep .", '*MOT: Chi come on .', "*MOT: I'm gonna get an ice cream too .", '*BRO: me too .', '*MOT: Brother eat over your dish please .', "*FAT: what time's he usually come around ?", '*MOT: six .', '*MOT: supper .', '*MOT: &=chuckle .', '*FAT: Brother !', '*FAT: go (a)head play (.) go (a)head .', "*FAT: eight o'clock tonight you wanna go to bed even earlier ?", '*CHI: &=scream .', "*FAT: you're already going to bed at eight .", "*MOT: go ahead Chi you're not getting <away from it> [>] I'll take your dish away .", "*BRO: <I don't wanna go to bed> [<] (un)til later .", "*FAT: you're not .", "*FAT: and <if you keep it up> [>] you're gonna go to bed even earlier .", '*MOT: <wanna throw it away>[<] ?', '*CHI: whoa .', '*FAT: xxx onion rings or xxx ?', '*MOT: what ?', '*FAT: you want those onion rings or xxx ?', '*BRO: I want some .', '*FAT: oh you eat that .', '*FAT: eat over your plate !', '*FAT: seven thirty now .', '*MOT: cut it out Chi .', '*MOT: want some water or milk ?', '*BRO: Mother !', '*FAT: yes .', '*CHI: can I have some water[>] ?', '*BRO: yummy [<] !', '*BRO: yummy yummy yummy yummy yummy &=sings !', '*MOT: gotta eat Chi .', '*BRO: xxx .', '*FAT: watch out Chi !', "*FAT: &aw she's already got ketchup all over it .", "*MOT: sit down you're getting ketchup on your dress .", '*MOT: sit down .', '*MOT: sit !', "*MOT: what'd I do wit(h) my cigarettes ?", '*BRO: (.) we have a lot of drink to drink Chi .', '*BRO: way lot of little cups .', '*CHI: &=panting .', '*CHI: (.) xxx .', '*CHI: xxx .', '*CHI: get all his food and put xxx .', "*FAT: Brother that's enough now eat .", '*MOT: Jennifer was over today .', '*FAT: oh [>] .', '*CHI: <Freddy> [<] .', "*MOT: that's probably why she brought us Jennifer xxx .", '*MOT: sit down Chi .', "*FAT: Chi ain't <getting ice cream> [>] .", '*MOT: <you have_to go to the bath+room> [<][>] ?', "*CHI: <I've got stomach ache> [<] .", '*MOT: you have_to go to the bath+room ?', "*CHI: I've got a tummy ache .", '*MOT: do you have_to go to the bath+room though [>] ?', '*MOT: yeah[<] .', '*MOT: go !', '*MOT: hurry up !', '*CHI: come with me come .', "*MOT: no you don't need nobody to go witcha [: with you] I'll wait right here .", '*MOT: go ahead .', '*MOT: Father can see you .', '*CHI: <I want you to go with me> [>] .', '*FAT: <go ahead I can see you> [<] .', '*MOT: <he can see you> [<] .', '*FAT: go ahead .', "*MOT: <he's not> [>] coming he can see you go .", '*CHI: xxx [<] .', '*FAT: hurry up .', "*BRO: <I'll go> [>] .", '*MOT: <go ahead> [<] .', "*BRO: I'll go .", '*FAT: go ahead .', "*FAT: alright you pee in your pants you're gonna get a spankin(g) and go to bed .", '*CHI: no you come with me .', '*FAT: no go ahead I can see you from here go sit on the toilet watch .', '*FAT: go (a)head .', '*FAT: go ahead .', '*MOT: go ahead go watch .', '*MOT: go over there sit down and look over here and see if you see Fat .', '*MOT: go ahead .', "*CHI: I'm gonna xxx .", "*MOT: alright then forget it we'll just put your supper away and you can don't have_to have ice cream .", "*BRO: I'm going to go to the bath+room .", '*CHI: xxx .', '*CHI: xxx he said not to have a ice cream cone he dropped a xxx had little xxx he tried to have big xxx .', '*MOT: <Chi> [>] .', "*CHI: <and I'm> [<] gonna be a big girl and have a [/] a glass (.) <a cup> [//] glass .", '*CHI: cup of water .', '*FAT: get <your hands out of there> [>] .', '*MOT: <put your hands out of there> [<] .', '*CHI: (.) xxx .', '*MOT: Chi .', '*FAT: no .', "*MOT: you're supposed to eat your hamburger aren't you ?", '*CHI: (.) oh he [/] he xxx .', '*FAT: oh yeah ?', '*BRO: &=whistle .', '*CHI: I tried to go xxx .', "*MOT: dress don't even fit her .", '*FAT: I know <too small> [>] .', '*CHI: xxx[<] .', '*CHI: xxx .', "*CHI: don't come in the bath+room !", '*FAT: Brother !', '*CHI: he went in the bath+room !', "*BRO: Father I don't care if she's looking at xxx .", '*FAT: use this one .', "*MOT: it's trash .", '*MOT: was perfume .', '*CHI: (16.) hurry up .', '*CHI: xxx now I know my A_B_Cs &=sings .', '*BRO: Chi .', "*CHI: next time won't you sing with me &=sings .", "*MOT: okay why don't you eat Chi ?", '*FAT: stop .', '*MOT: come on .', '*BRO: xxx[>] .', '*CHI: <ab@k > [<] cdefg@k &=singing .', '*BRO: thank you thank you .', '*FAT: seven thirty .', '*CHI: abcdefg@k (.) H@l &=singing .', '*CHI: <abcd@k> [>] &=singing .', '*BRO: <abcdefg@k> [<] hijklmnopqrxtuvwxyz@k &=singing .', '*CHI: &a:h !', '*CHI: no <abcdef@k> [/] ghijk@k [/] ab@k [/] c@l &=singing xxx .', '*CHI: <abcdefg@k &=singing > [>] +/.', '*BRO: <one two three four five six seven eight nine ten> [<] Scoobydoo ninety nine a hundred .', '*CHI: abcdefghijklm@k R@l &=singing ah [=! small scream] tuvwxy@k and z@l &=sings .', '*CHI: now I know my <abcs> [>] &=singing .', '*BRO: <one two three fifty three ninety nine a hundred> [<] .', '*MOT: she goes so fast and then she slows down &=laughs .', '*FAT: yeah .', '*MOT: you <shoulda heard xxx the story> [>] the other day\xe2\x86\x91 +...', '*CHI: abcd@k [<] +...', '*MOT: <it was about five little monkeys> [>] +...', '*CHI: hijk@k [<] +...', '*MOT: should ask her <to sing it for you> [>] .', '*CHI: llmnop@k [<] .', '*FAT: hm: ?', '*MOT: should ask her to sing it for you .', '*FAT: she done eating ?', '*MOT: (.) come on Chi .', '*MOT: take that out of your mouth come on .', '*CHI: this is from xxx .', '*MOT: come on eat your hamburger up .', '*MOT: or your corn .', '*MOT: eat one or the other .', '*MOT: come on .', '*MOT: that <ice cream truck xxx not going to be> [>] able to have ice cream .', '*BRO: <who took my drink> [<] ?', '*MOT: you drank all your drink now just eat your hamburger .', '*BRO: uhuh .', "*MOT: come on you're doin(g) good Bro .", '*MOT: finish up .', "*BRO: I can't eat all that hamburger .", "*MOT: well if you can't eat all that hamburger then I guess you can't have ice cream .", "*BRO: where what's the bad stuff about the (.) ah (.) xxx ?", '*MOT: (.) what [/] what do you mean ?', '*BRO: time was [/] up .', "*MOT: well you're already going to bed at seven thirty so if you're not done eatin(g) by the time <the timer goes off> [>] +/.", "*BRO: <no eight o'clock> [<] .", "*MOT: I guess you don't get no ice cream for dessert .", '*MOT: and you only have about eight minutes left .', "*BRO: Mom don't make me eat all this hamburger .", '*CHI: no &=yelling !', '*CHI: A@l B@l C@l D@l E@l F@l G@l [=! loud singing] +/.', '*MOT: Chi !', '*CHI: A@l B@l C@l D@l E@l F@l G@l &=hollers !', '*MOT: stop !', '*MOT: stop .', '*MOT: stop !', '*MOT: you have time to do that ?', '*MOT: eat .', '*CHI: I sing at the end Mot .', '*CHI: <A@l B@l C@l D@l &=sings > [>] +...', '*MOT: <come on Chi here> [<] .', '*MOT: eat this come on .', '*CHI: xxx .', "*MOT: yeah come on you haven't eaten none of that yet come on .", '*MOT: eat the hamburger with the ketchup .', '*MOT: come on .', '*CHI: (.) A@l B@l C@l D@l E@l F@l G@l (.) H@l I@l &=sings first then G@l +...', '*CHI: A@l B@l C@l D@l E@l F@l G@l &=sings then A@l +...', '*CHI: A@l B@l C@l D@l then G@l then A@l then S@l .', '*CHI: 0 [=! inarticulate singing to tune of ABC@l] .', "*BRO: Mom (.) I hope I didn't tell you this but you know what ?", '*BRO: I xxx four feet .', '*MOT: what ?', '*BRO: I xxx four feet .', '*MOT: I know you can .', "*BRO: <yeah but at the bumper cars I couldn't go in four feet> [>] .", '*CHI: <A@l B@l C@l D@l E@l F@l G@l> [<] .', '*CHI: H@l I@l J@l K@l L@l M@l N@l O@l P@l [>] .', "*BRO: <xxx why couldn't I> [<] go with you ?", "*MOT: I don't know .", '*BRO: it said four feet five feet six feet .', '*BRO: before I was standing at four feet .', '*BRO: xxx .', '*BRO: two was standing at three feet .', '*BRO: two was standing at two feet and one was standing at one feet .', '*BRO: and zero was standing at zero feet xxx .', '*BRO: one xxx one teensie beensie@wp water right xxx .', '*BRO: a drop of water .', '*BRO: (.) one little drop of water .', '*BRO: but the other one (.) has a thousand drops of water twenty drops of water four hundred drops of water .', '*MOT: come on Bro time is going to go off .', "*BRO: Mom I don't want to eat all of this .", "*MOT: well don't .", '*BRO: Mom .', "*MOT: don't you can eat that you don't need ice cream .", "*BRO: I'll just eat these .", '*BRO: okay Mot not these .', '*MOT: alright .', '*BRO: can I still get my ice cream then ?', "*MOT: I dunno [: don't know] .", '*BRO: &=belch .', '*BRO: &=giggles .', '*CHI: &=giggles .', '*CHI: no way !', '*BRO: no let me put this on top xxx .', '*MOT: no Bro .', '*BRO: xxx .', '*MOT: <Brother stop> [>] .', '*CHI: <A@l B@l C@l D@l> [<] E@l F@l G@l +...', '*BRO: xxx .', "*MOT: okay let's go everyone's done .", "*MOT: that's it .", "*MOT: that's it Chi you're not getting your ice cream .", "*MOT: (.) we're all getting ice cream and you're not .", "*MOT: if you don't eat Chi .", "*CHI: I'm only gonna eat these <like that> [>] .", '*MOT: no [<] eat your hamburger .', '*MOT: you eat this .', '*MOT: this !', '*MOT: and your corn .', '*BRO: <and not that> [>] ?', '*MOT: <do you mind> [<] ?', '*MOT: (.) Chi get out of there .', '*MOT: those are all clean clothes .', "*CHI: xxx Mot that's mine that's mine and that's mine .", '*CHI: and that one .', '*MOT: come on .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jesmt1.cha
HSLLD/HV1/MT//megmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: are you hungry ?', '*MOT: huh ?', '*MOT: mm xxx .', '*CHI: mm yummy .', '*MOT: how long you wan(t) (t)a stay for ?', '*CHI: look at my footprints .', "*MOT: getting heavy that's why (.) .", '*MOT: okay (.) .', '*MOT: alright we need three forks .', '*CHI: three forks .', '*MOT: yep (.) .', '*MOT: okay .', '*MOT: Daddy gets the big plate .', '*CHI: they all same .', '*MOT: huh ?', '*CHI: they all the same .', '*CHI: this side .', '*MOT: no .', '*MOT: we have_to have a plate on your side .', "*MOT: now Daddy's coming to sit over here huh ?", '*CHI: probably [>] .', "*MOT: <I'm going to sit> [<] here and you sit near me .", '*MOT: xxx .', '*CHI: like sit right here .', '*CHI: xxx .', '*CHI: xxx eat because I got broccoli (.) !', "*MOT: see if Daddy's home (.) .", '*MOT: zzz .', '*MOT: zzz (.) .', '*MOT: come and have some milk .', '*MOT: be very careful .', '*CHI: xxx .', '*MOT: thank you .', '*MOT: xxx .', '*CHI: what ?', "*MOT: who's coming ?", '*MOT: okay have a little rice .', '*MOT: xxx .', '*CHI: yeah &-uh .', '*MOT: zzz .', '*CHI: zzz .', '*MOT: zzz .', '*CHI: zzz .', "*MOT: wait don't disappear !", '*MOT: xxx .', '*CHI: xxx .', '*MOT: yeah .', '*MOT: xxx .', '*CHI: I will put it in .', '*MOT: you will put it in ?', '*MOT: okay .', '*MOT: xxx .', '*MOT: nobody helping xxx .', '*CHI: can I pour it in ?', '*MOT: yup .', '*CHI: xxx .', '*CHI: in here !', '*MOT: xxx .', '*CHI: I xxx .', '*MOT: well pour it in .', '*MOT: you wan(t) (t)a throw it away we can .', '*MOT: xxx no .', '*MOT: <is it already open> [>] ?', "*CHI: <I'll pour> [<] .", '*CHI: hm: !', "*CHI: I'll pour it in xxx .", '*MOT: xxx .', '*CHI: xxx .', '*MOT: xxx .', '*MOT: okay alright now see the cups there .', '*CHI: oh !', '*MOT: get three out .', '*CHI: too big .', '*CHI: xxx too big .', '*CHI: <hurts my arm ow> [>] .', '*MOT: xxx [<] .', '*CHI: one (.) two (.) three .', "*CHI: <I'll pour some> [//] I'll put potatoes in them .", '*MOT: put them in each plate .', '*CHI: they are .', '*CHI: this one must get one .', '*CHI: xxx .', '*CHI: now let me do this .', '*MOT: every two boys .', "*CHI: I'm gonna put it in !", '*MOT: xxx two boys .', '*MOT: xxx .', "*MOT: you're touching it .", "*MOT: don't touch it !", '*CHI: what ?', '*CHI: I am gonna xxx you .', '*CHI: &-um .', '*CHI: &ha .', '*CHI: what are you doing ?', '*MOT: zzz .', "*MOT: steak's looking good .", '*CHI: I know .', "*CHI: it's getting hotter and hotter .", '*CHI: I can even smell it from here .', '*MOT: yeah smell good ?', '*CHI: yeah .', '*CHI: it good .', "*CHI: <it goes in> [//] it's going up my nose .", '*CHI: ready ?', '*CHI: xxx .', '*CHI: oh what are you doing baby ?', '*CHI: I love my Mommy .', "*CHI: I'm in pink with you .", '*MOT: and it feels good .', '*CHI: xxx me feel .', '*CHI: zzz .', '*MOT: zzz .', '*MOT: what do you mean what do you mean ?', '*CHI: zzz .', '*CHI: oh bike .', "*CHI: I don't hear .", "*CHI: we're just joking .", '*MOT: xxx .', '*CHI: alright .', '*CHI: in the rhythm of the +...', '*CHI: zzz .', '*CHI: I love the little girl that zzz the prettiest little girl xxx .', "*MOT: don't touch it okay ?", '*MOT: I should of made the rice first .', '*MOT: I said I should of made the rice first !', '*CHI: why !', '*MOT: because .', '*CHI: why Mommy !', '*FAT: xxx .', '*MOT: would you mind if I take it home within a week ?', "*CHI: well I'm gonna <do something else> [>] .", '*FAT: xxx [<] .', '*CHI: I want to do something new !', '*MOT: oh xxx .', '*MOT: I forgot bread .', '*MOT: wan(t) (t)a have bread ?', '*CHI: yep .', '*MOT: take the bread out xxx ?', '*CHI: what ?', '*MOT: will you get the butter ?', '*MOT: and the <butter knife> [>] ?', '*CHI: <&-um the butter> [<] .', "*CHI: and I'm gonna eat the bread .", '*CHI: with brown gravy for it .', '*MOT: oh yeah ?', '*CHI: yup !', '*CHI: can I do it ?', '*CHI: hm: ?', '*MOT: huh ?', '*CHI: can I please ?', '*MOT: no .', '*MOT: leave that knife there .', "*MOT: or you aren't having that butter .", '*CHI: oh .', '*CHI: well [>] .', '*MOT: <you can have the butter xxx> [<] .', "*CHI: well I'm having a piece of bread while I'm xxx .", "*MOT: no because you won't eat your supper .", '*CHI: yes I will .', "*MOT: no you won't .", '*CHI: yes I will !', '*CHI: I will .', '*CHI: I will eat my supper .', '*CHI: I will eat my supper a lot .', '*CHI: I will eat [>] +/.', '*MOT: <you better> [<] .', '*CHI: I will when I eat the piece of bread .', '*CHI: will eat it all .', '*CHI: I bet I am .', '*MOT: xxx .', "*CHI: that's my plate .", "*CHI: your plate's right here .", '*CHI: no plates ?', '*FAT: xxx .', '*FAT: give me my fork ?', '*FAT: is that mine ?', '*MOT: xxx .', '*FAT: okay .', '*FAT: xxx .', "*CHI: we're in the pink .", '*CHI: I want some steak .', '*CHI: xxx steak squishy gushy@o .', "*FAT: you don't like gushy@o ?", '*CHI: squish gush@o .', '*CHI: xxx [>] .', '*MOT: xxx [<] .', "*MOT: <don't think so> [<] .", '*FAT: what ?', "*CHI: where's my plate ?", "*FAT: where's what plate right there .", '*MOT: there near Daddy .', '*CHI: oh .', "*CHI: where's my plate !", '*MOT: where did you put it ?', '*CHI: xxx !', '*MOT: see if xxx .', '*CHI: wait Mommy you gave me a little bit of this .', '*FAT: you want more than +/.', '*MOT: you can have more than one .', '*MOT: see ?', '*FAT: your Dad first .', '*CHI: I got_to eat all the xxx see ?', '*FAT: uhhuh .', '*MOT: good ?', '*CHI: I chase you .', '*MOT: you xxx .', '*FAT: easy xxx .', "*CHI: that's the same thing only two .", '*FAT: huh ?', "*CHI: that's the same thing only two .", '*FAT: you want some milk or you want some juice .', '*CHI: milk .', '*CHI: wish I knew more .', '*FAT: xxx .', "*CHI: that's enough for you .", "*CHI: you're gonna go zzz and go down you throat .", "*CHI: you're gonna choke .", '*FAT: xxx .', "*CHI: that's where Mommy sits .", '*FAT: I know .', "*FAT: that's for Mommy .", '*FAT: try the steak yet ?', '*CHI: yeah .', '*FAT: you did ?', '*MOT: zzz .', '*FAT: xxx .', '*CHI: Mommy it went down the floor .', '*FAT: what .', '*FAT: look at this .', '*CHI: in the rubbish ?', '*FAT: yeah .', '*CHI: xxx .', "*FAT: I know I'm not right .", '*FAT: Chi you right in center ?', '*FAT: can you get closer to the table ?', '*CHI: yep .', '*CHI: mm .', '*MOT: zzz .', '*CHI: mm .', '*CHI: I love those weekend in the tractor ?', '*MOT: yeah .', '*CHI: when I went to see +...', '*FAT: went camping .', '*CHI: went camping .', '*FAT: with who ?', '*FAT: who was with us ?', '*CHI: &-um the Cape .', '*FAT: mhm ?', '*CHI: Ricky ?', '*FAT: mhm .', '*CHI: Cathy ?', '*FAT: mhm .', '*CHI: and us .', "*FAT: who's us ?", '*MOT: zzz .', '*CHI: Mommy Laura Daddy Lee Chi !', '*FAT: you know how to swim ?', '*CHI: yup !', "*FAT: yeah you're in the water most of the time .", '*CHI: fun swimming and &-um <came home> [>] .', '*FAT: <you like the big> [<] [//] you like the big pool ?', '*CHI: they had a pool .', '*CHI: xxx .', "*CHI: we're having rice and steak .", "*CHI: and we're having milk for a drink .", '*FAT: what did you do xxx ?', '*CHI: huh ?', '*FAT: what did you do today ?', '*CHI: &-um +...', '*FAT: you go shopping ?', '*FAT: you already forgot that ?', '*CHI: shopping (.) &-um and we go to the meat store .', '*FAT: mhm .', '*CHI: and came home .', '*MOT: and I cooked .', '*CHI: yeah xxx and then Mommy cooked with me .', '*FAT: yeah .', '*CHI: and Daddy ?', '*FAT: yeah .', '*CHI: and <we all sit down zzz> [>] .', '*FAT: <alright give me the steak> [<] .', '*FAT: <the rest> [<] .', "*MOT: didn't Daddy play on stage with Chi ?", '*CHI: yep !', '*FAT: mhm .', '*MOT: was that fun ?', '*CHI: yep !', '*CHI: and +/.', '*MOT: did you take in xxx .', '*CHI: yep !', '*CHI: and I got a &-um [/] &-um a picture which it says sweetheart .', '*MOT: sweetheart ?', '*CHI: zzz .', '*CHI: and +/.', '*FAT: want more steak ?', '*MOT: zzz .', '*MOT: &-um what ?', '*FAT: want more ?', '*CHI: hm: .', '*MOT: yep .', '*FAT: I guess you do .', '*MOT: mhm .', '*MOT: xxx .', '*CHI: and she wrote the name .', '*FAT: she wrote a name ?', '*CHI: and <she said her name like> [/] she said her name like hers .', '*CHI: y@l with a y@l .', '*MOT: oh she spelled your name with a y@l .', '*CHI: mhm .', '*CHI: yeah !', '*MOT: mm .', '*CHI: I know my &-um t@l a@l n@l i@l a@l .', "*MOT: that's the way you're supposed to spell it .", '*CHI: xxx spell it .', '*MOT: remember the puppet ?', '*CHI: mhm .', '*MOT: and Richie went up on stage .', '*CHI: yeah .', '*MOT: and xxx the puppet .', '*MOT: Ronnie that was his name Pepperoncini right ?', '*CHI: Ronnie .', '*MOT: and he was making fun of Richie .', '*CHI: mhm .', '*MOT: said he was a dummy .', '*CHI: &ha .', '*CHI: he was a dummy but he xxx a dummy .', '*MOT: mm .', "*FAT: there's a lot of people in the xxx .", '*CHI: yeah .', '*CHI: sat right with Dave !', '*FAT: xxx .', "*FAT: right in Dave's chair .", '*FAT: xxx J@l R@l Lisa .', '*CHI: yup .', '*CHI: <and Sally> [>] and Debbie tell me .', '*MOT: <and they tell you a lesson> [<] .', '*MOT: mhm .', '*CHI: and J@l P@l .', '*FAT: mhm .', '*MOT: <and his wife Barbara>[>] .', '*CHI: <and remember> [<] J@l P@l gave xxx the hat .', '*MOT: yeah and Mickey got jealous and went and dididit@wp gave his hat away to her .', '*CHI: mhm .', '*MOT: she was smart she gave to the guys in the band huh ?', '*MOT: zzz .', '*CHI: but you said xxx because you knew they were loud .', '*MOT: mm .', '*CHI: should of go up and give it to him .', '*MOT: and then she sang to you ?', '*MOT: particularly .', '*CHI: mhm .', '*MOT: she sang your favorite song .', '*CHI: mm .', '*MOT: she was surprised did you see the look on her face when she saw you singing it ?', '*CHI: mhm .', '*FAT: was it xxx ?', "*MOT: no she didn't xxx .", '*FAT: no .', '*MOT: she [//] her eyes bulged out of her head and she started xxx and snort while she was singing .', "*MOT: she couldn't believe Chi was singing the words .", '*FAT: xxx huh ?', '*MOT: mhm .', '*MOT: you try to get something too big huh ?', '*CHI: yeah .', '*MOT: oh no not them again .', '*MOT: zzz .', '*MOT: three in a row .', '*MOT: zzz .', '*CHI: xxx .', '*MOT: and those other little boys .', '*MOT: did you get to say hi to them Chi ?', '*CHI: mhm .', '*MOT: so xxx +/.', '*CHI: he gave me <to &-um> [//] to the bus .', '*CHI: Dad that xxx water .', '*MOT: mhm .', '*CHI: have_to go skiing with me in the water .', '*FAT: you mean with your major on the third go xxx[>] .', '*CHI: mhm [<] .', '*CHI: that was in the morning .', '*MOT: oh yeah <it was xxx> [>] .', '*CHI: <and we had a lake> [<] .', '*FAT: xxx the guy had to drain out the bowl .', '*FAT: xxx .', "*FAT: how's your xxx look ?", '*CHI: when I put it there &-uh !', "*CHI: it's heavy .", '*FAT: xxx .', '*MOT: mhm .', "*CHI: Mama I don't want this .", '*MOT: just put it there somewhere .', '*FAT: xxx soon ?', "*CHI: I won't have the rice alright ?", '*MOT: xxx .', "*CHI: I won't have the rice with the things in it .", '*MOT: just take them out .', "*MOT: that's what Mommy did .", "*MOT: Mommy ate the small ones but I didn't eat the big ones .", "*MOT: the small ones you can't taste .", "*FAT: don't taste them anyway (.) .", '*FAT: wan(t) (t)a have some beans before I beat your bum ?', '*CHI: hm: ?', '*MOT: hm: .', '*CHI: I want some more steak .', '*FAT: what do you want steak ?', '*CHI: please .', "*FAT: you aren't getting more I'm hungry .", '*MOT: rice is kind of stuck huh ?', '*MOT: xxx .', '*MOT: xxx .', '*CHI: I will just eat your food .', '*CHI: Mama gets to cook again .', '*MOT: xxx .', '*CHI: eat cooking .', '*CHI: xxx .', '*MOT: xxx supper .', '*CHI: xxx .', '*MOT: xxx .', '*FAT: xxx .', '*MOT: mhm .', '*MOT: xxx .', '*CHI: zzz .', '*CHI: I love you so much .', '*CHI: and I xxx so much .', '*MOT: zzz .', '*CHI: gonna eat all the steak .', '*FAT: some rice too .', "*CHI: there's sour xxx ?", "*MOT: I hope it's not too hot tomorrow .", '*FAT: xxx .', '*MOT: xxx .', '*CHI: the steak is better than the rice .', '*FAT: the steak is better than the rice ?', '*FAT: no .', '*CHI: mhm .', "*MOT: <yeah that's beautiful> [>] .", '*FAT: xxx [<] why ?', '*FAT: this is good .', '*MOT: still being such a good kid .', '*CHI: I <love steak> [>] !', '*MOT: <certain days> [<] .', '*MOT: zzz [<] .', '*CHI: I love steak better than lunch .', "*MOT: maybe next time you'll have rice pilaf with it .", '*MOT: xxx .', '*CHI: you got xxx in it ?', '*CHI: xxx .', '*MOT: it tastes like chicken .', '*MOT: rice pilaf .', '*CHI: I know !', "*CHI: I've had that .", "*MOT: then when you come home <I'll make some chicken>[>] .", "*MOT: <I'll make some rice and beans> [>] .", '*CHI: <can I go out> [<] ?', '*CHI: <after I eat> [<] ?', '*CHI: can I go out ?', '*MOT: too hot out there you wan(t) (t)a dehydrate ?', "*CHI: no it's cool out there .", "*MOT: notice I haven't been out either .", '*MOT: except to do what I have_to do .', '*CHI: <but I wan(t) (t)a go out> [>] .', '*FAT: xxx [<] .', '*CHI: I wan(t) (t)a <go out Daddy> [>] .', '*FAT: xxx [<] .', '*MOT: me too .', '*CHI: hm: ?', '*MOT: hurry up and grab a piece of pie .', "*CHI: <I don't like> [>] this pie .", '*MOT: lemon [<] .', '*MOT: lemon .', "*CHI: I don't like it .", "*MOT: you don't want any ?", "*MOT: it's delicious .", "*MOT: it's <got meringue> [>] on top .", "*CHI: <I'm full> [<] .", '*MOT: &-um .', '*MOT: wait till you see it .', "*CHI: I'm full .", "*MOT: just a tiny piece or a bite of Daddy's or something .", '*CHI: xxx .', '*FAT: you are .', '*CHI: let me see that .', "*CHI: I'll get full <if I eat too much> [>] and get a stomach ache .", '*MOT: xxx [<] .', '*FAT: xxx .', '*MOT: mm .', '*CHI: xxx .', '*FAT: taste this .', '*MOT: yum .', "*CHI: I'll get full .", '*MOT: well finish the rice anyway .', '*MOT: <a little bit more> [>] .', "*CHI: <I don't> [<] want the rice .", '*MOT: why ?', '*CHI: why ?', "*MOT: she'll never know .", "*CHI: I didn't do that .", '*CHI: oh oh xxx .', '*MOT: you did alright with the steak .', '*MOT: even asked for more .', '*MOT: xxx .', '*FAT: what ?', "*CHI: well I don't want it .", "*CHI: I'm full .", '*FAT: xxx .', "*CHI: I'm full really I'm full .", '*FAT: look at that !', '*FAT: lemon meringue .', "*FAT: sure you don't wan(t) (t)a try a piece ?", '*FAT: a bite even ?', '*FAT: it so xxx .', '*MOT: try it .', '*MOT: try some to make you full .', '*MOT: yum .', '*FAT: good huh ?', "*CHI: yeah but I'm full .", '*FAT: well maybe tomorrow .', "*CHI: I hope I don't get full [!] !", '*CHI: xxx I got_to eat supper .', '*CHI: breakfast lunch .', '*FAT: xxx .', '*CHI: supper eating .', "*CHI: that's a supper and dinner .", '*CHI: I mean dinner .', '*MOT: you have dinner on Sunday .', '*CHI: yeah that means lunch .', '*FAT: xxx breakfast xxx .', "*CHI: now this time I won't <eat my lunch> [>] .", '*FAT: oh [<] .', '*FAT: <oh yeah> [<] .', '*MOT: mm .', "*CHI: Daddy I won't xxx .", '*MOT: xxx or do you already have them ?', '*CHI: zzz .', "*CHI: I didn't hit nobody .", '*FAT: what ?', "*CHI: I didn't hit no one .", '*FAT: well talk to your mom with this time about it xxx .', "*CHI: I didn't hit no one Mama .", "*MOT: that's not the idea with me .", "*MOT: it's too hot outside .", '*CHI: no I +/.', "*MOT: I don't want the doors opened and closed .", "*MOT: there's <the air conditioner on> [>] .", '*CHI: <no there &-um> [<] .', '*CHI: xxx .', '*MOT: hm: ?', '*CHI: xxx .', '*MOT: &-uh .', '*CHI: xxx .', '*MOT: you know what time it is ?', '*MOT: seven thirty .', '*MOT: <gets dark in an hour> [>] .', '*FAT: xxx [<] .', '*CHI: mm !', "*MOT: besides isn't there that [/] that movie on tonight ?", '*MOT: gonna watch the movie .', '*MOT: Spaceballs or something .', '*CHI: I wan(t) (t)a go out !', '*FAT: hey .', '*MOT: do you know what it is Chi ?', "*MOT: I don't want you with Jamie xxx .", '*CHI: no <I want to see Jason> [>] .', "*MOT: <because Jamie's hanging around> [<] [///] .", "*MOT: Jason'has been playing with him all day .", '*FAT: xxx .', "*FAT: little while it's only for a few minutes and then it's a half hour .", '*CHI: no I wan(t) (t)a go out .', "*FAT: yeah why don't you +/.", "*MOT: if I want you out when I say Chi come in you can't whine and cry and everything .", '*CHI: alright .', "*MOT: because if you do you won't go out for three days .", '*CHI: alright .', '*FAT: promise ?', '*FAT: okay .', '*FAT: wan(t) (t)a sit over here ?', '*FAT: right now ?', '*FAT: wan(t) (t)a sit down ?', '*MOT: go out the kitchen door .', '*CHI: zzz .', '*MOT: and do not come in through the bath+room .', "*CHI: I'm getting my shoes on !", "*MOT: you're going to Jason's and Jason only .", '*MOT: alright ?', '*CHI: yup .', '*CHI: I will tell Mimi .', "*FAT: don't tell <xxx nothing> [>] .", "*MOT: <don't even talk to her> [<] .", '*FAT: alright ?', '*FAT: looks like it did a lot of good to talk +/.', "*MOT: <why don't you stay> [<] in the front and play with Cathy she's right out front .", "*MOT: that way Jamie won't even start on you if you're here .", '*MOT: see you .', '*FAT: bye .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//megmt1.cha
HSLLD/HV1/MT//zenmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: why do you want cereal (.) ?', '*MOT: huh ?', '*CHI: (be)cause I do .', '*MOT: huh ?', '*CHI: I do .', "*MOT: I can't hear you .", '*CHI: I do .', '*MOT: why ?', '*CHI: (be)cause I want some .', '*MOT: you do want some ?', '*CHI: mhm .', "*MOT: how come you don't want no (.) steak and rice ?", "*CHI: (be)cause I don't like steak .", "*MOT: you don't like [!] steak ?", '*CHI: no .', '*MOT: why ?', "*MOT: <you have> [//] <have you> [//] you have never eaten [!] it how can you say you don't like [!] it ?", "*CHI: (be)cause I don't .", '*MOT: how (a)bout some shrimp ?', '*CHI: no .', "*MOT: you don't want no shrimp neither ?", '*MOT: fried shrimp ?', '*CHI: why got that [= tape recorder] on ?', '*MOT: huh ?', '*CHI: why got that on ?', '*MOT: why do I have it on ?', '*MOT: (be)cause she wants to hear you talk (.) .', '*MOT: okay ?', "*MOT: you don't want no shrimp (.) ?", '*MOT: all you eat is cereal (.) .', "*MOT: well you know if you eat cereal you can't have dessert right ?", '*CHI: mhm .', '*MOT: alright ?', "*MOT: if you have cereal you can't have dessert .", '*CHI: I could eat cereal .', "*MOT: but you can't have dessert .", '*CHI: I could have dessert too .', '*MOT: no you got ta eat meat [!] and stuff to have dessert .', '*CHI: <I want lobster> [>] .', '*MOT: <know why> [<] ?', '*MOT: you want lobster [!] ?', '*CHI: no I want a hot dog .', '*MOT: hot dog ?', '*MOT: you want a hot dog ?', '*MOT: hot dog and beans (.) ?', "*MOT: okay we'll have hot dog and beans .", '*CHI: want hot dog and beans .', '*CHI: hot dogs .', '*CHI: want a hot dog bun .', '*CHI: hot dog .', '*CHI: hot dog .', '*CHI: want a hot dog bun .', '*MOT: I think we got +/.', '*CHI: hot dog (.) I want one .', "*MOT: I think we only got one hot dog bun you're in luck !", '*MOT: we have one [!] hot dog bun left .', '*MOT: one and only one !', '*CHI: who eat all up the hot dog bun ?', '*MOT: you and me .', '*MOT: who else ?', "*CHI: I'll cook .", "*MOT: no don't put it in there are no hot dog buns .", '*CHI: oh .', '*MOT: just me and you have hot dogs .', '*CHI: oh .', '*CHI: <me and you &m> [//] <me and you Meliss(a)> [//] <me and you> [//] me and Melissi [= the baby] .', '*MOT: no Melissi gets her hot dogs in a roundabout way .', '*MOT: first I got ta eat (th)em .', '*MOT: she gets (th)em by way of her booby@f milk .', '*MOT: huh Melissi ?', '*CHI: xxx .', '*MOT: say I get hot dogs in a roundabout [!] way .', '*MOT: I get hot dogs maybe a day later .', "*CHI: but Mama I don't want no hot dog bun !", '*MOT: huh ?', "*CHI: I said I don't want no hot dog buns .", '*MOT: okay .', '*CHI: who was it .', '*CHI: &-um (.) oh yeah that was it I want hot dog buns [!] !', "*MOT: well I'm gonna put the rest of this [///] we'll need part of this steak and rice .", '*CHI: <&y> [//] yeah !', '*MOT: you say yeah ?', '*CHI: yeah .', '*CHI: I say yeah too .', '*CHI: zzz we both say yeah .', '*CHI: xxx yeah yeah again [!] .', '*MOT: how many hot dogs can you eat ?', '*CHI: one left .', '*MOT: one (.) .', '*CHI: one hot dog left .', '*MOT: nope no we got a whole lot of hot dogs in here .', '*CHI: we love [!] hot dogs .', '*MOT: we got more than one hot dog left .', '*CHI: zzz (.) .', "*CHI: I'll cook .", "*CHI: I'll cook .", '*MOT: now be careful putting it in the pot .', "*MOT: see don't splash [!] the water !", '*CHI: zzz .', "*MOT: now what if that had been hot water which if it was you wouldn't have put that in the pot anyway .", '*MOT: <but it could have> [>] splashed [!] you and it would have been hot !', '*CHI: <you eat here> [<] .', '*MOT: huh ?', '*CHI: you eat here [?] .', "*MOT: who's eating what ?", '*CHI: you easy [?] the hot dog .', '*MOT: who eats cheese on their hot dog ?', '*CHI: mhm .', '*CHI: easy [!] the hot dog .', '*MOT: oh yeah yeah I put it in there easy [!] .', '*CHI: why easy ?', "*MOT: so the hot water doesn't splash on you .", '*CHI: well I xxx let [?] xxx the hot dog .', "*MOT: yeah but see that's because it's cold water .", "*MOT: but if it had o(f) been hot water and you had o(f) threw it in there <it'd burn> [//] the hot water would o(f) scalded [!] you .", '*MOT: you [!] know that .', '*CHI: no .', '*MOT: yessa@f .', "*MOT: don't we always tell her to put it in there easy Melissi ?", '*MOT: huh ?', "*MOT: see she just doesn't like to listen [!] too often that's all .", '*CHI: I do too !', "*MOT: no you don't .", "*MOT: you don't listen as much as you should (.) .", '*MOT: Melissi you get to have steak .', '*CHI: who ?', '*MOT: Melissi .', '*CHI: with everything (.) ?', "*CHI: Melissi doesn't like steak .", "*MOT: Melissi ain't gonna get any steak she's gonna get it as far she [!] cares this is milk .", '*CHI: ew .', "*MOT: it's gonna to be rearranged .", "*MOT: it's gonna be steak and gravy but it's gonna be rearranged and put into milk !", '*CHI: I like steak !', "*MOT: I thought you just told me you didn't like it .", '*CHI: no .', '*MOT: which is why you wanted hot dogs (.) and cereal right ?', '*CHI: xxx .', "*MOT: you're gonna eat your hot dog and beans first .", "*CHI: mama I don't want no steak .", "*CHI: mama (.) I said I don't want no steak .", "*MOT: I know you don't want no steak .", "*MOT: I'm not gonna make two or three meals (.) .", "*MOT: say we'll eat leftovers huh Melissi (.) ?", '*CHI: Mom you know what ?', '*MOT: what ?', '*CHI: when I was sad xxx xxx that they can .', '*CHI: (be)cause <Meli(ssa)> [//] (be)cause xxx give me a hug (be)cause I was sad .', '*MOT: why [?] ?', "*CHI: (be)cause I was crying (be)cause I didn't go to the bath+room (be)cause I was xxx [!] at school !", "*MOT: you was crying because <they wou(ld)> [//] you couldn't go the bath+room ?", '*CHI: (be)cause I was zzz .', '*CHI: (be)cause I was crying at school .', '*CHI: (be)cause I was crying xxx xxx [!] (.) at school [!] .', '*MOT: why were you crying again ?', '*MOT: hm: ?', '*MOT: were you crying ?', '*MOT: and Shakila [?] gave you a hug ?', "*MOT: and you were crying because you couldn't go to the bath+room ?", "*MOT: who said you couldn't go to the bath+room ?", "*CHI: I didn't .", "*MOT: why didn't you go ?", '*CHI: (be)cause xxx +...', "*MOT: did somebody tell you you couldn't go to the bath+room ?", "*MOT: then why didn't you go to the bath+room ?", '*CHI: xxx .', '*MOT: well <d(id)> [//] did you have_to go to the bath+room (.) ?', '*MOT: well when you feel like you have_to go to the bath+room go to the bath+room (.) okay ?', "*MOT: and if you have_to go real bad and the teacher tell that you you can't go go anyway .", "*CHI: that's (be)cause they only send one .", '*CHI: not all of us .', '*MOT: <th(ey)> [//] they only send one at a time right ?', '*CHI: this [/] this [!] many .', '*MOT: two [>] ?', '*CHI: xxx [<] .', '*CHI: yeah two .', '*CHI: not all [!] of us .', '*MOT: no not everybody ?', '*CHI: no just two [!] .', '*MOT: well when you say you have_to the bath+room tell (th)em that you have_to go the bath+room <then go> [>] +/.', '*CHI: no [<] !', '*CHI: no no no !', '*CHI: me and Kathleen !', '*MOT: you and Kathleen went to the bath+room ?', '*CHI: yeah .', "*MOT: I thought you said you didn't go to the bath+room .", "*CHI: I was with Kathleen who did that but it xxx (be)cause me and Kathleen didn't .", "*MOT: you and Kathleen didn't go the bath+room ?", '*CHI: no .', "*MOT: well I'm gonna get a letter from the doctor (.) telling them that whenever you got ta go to the bath+room whether you go with them or without them you can go to the bath+room .", '*MOT: you already have problems enough with constipation I already called Miss Allen .', '*CHI: xxx (.) .', '*CHI: I get that .', '*MOT: they know to let you go to the bath+room (16.) .', '*MOT: I forgot to call her today .', '*CHI: who ?', '*MOT: Ferguson Cage .', "*CHI: Fergo's Cage ?", '*MOT: yeah your doctor .', '*MOT: we got ta get a letter from her stating that you have problems going to the bath+room and that they need to let you go the bath+room when you have_to go .', '*CHI: <you forgot> [>] ?', '*MOT: <and nobody> [<] sitting there and expecting you to wait for an hour or two later .', '*CHI: and you forgot ?', '*MOT: yeah I forgot but I already called Miss Allen and told her that they have_to let you go to the bath+room .', "*MOT: because you got problems going to the bath+room and if I give you that medicine and you have_to go you're going to go to the bath+room on yourself .", "*CHI: <I> [/] I'm gonna have_to go bath+room go pee+pee .", '*MOT: yeah well I want you go to the bath+room to go doo+doo too if you have_to go .', '*MOT: okay ?', '*CHI: xxx no more vitamins .', '*MOT: I know I wan (t)a get you some more vitamins .', "*MOT: we don't have no money right now .", '*CHI: I want some .', "*MOT: no (.) no we don't have no money right now .", '*CHI: I do .', "*MOT: that's not enough for your vitamins your vitamins are expensive .", '*CHI: I do .', '*MOT: believe me your vitamins are very [!] expensive [>] .', '*CHI: xxx [<] xxx three or four +...', '*MOT: huh ?', '*CHI: I got xxx .', "*MOT: that's not enough money Chi .", "*MOT: two dollars ain't gonna buy no vitamins around here (.) .", '*MOT: hey what you down there talking about lady ?', '*MOT: yeah .', '*MOT: I thought that was her .', '*MOT: yeah .', '*MOT: oh yeah (.) ?', '*MOT: oh yeah ?', '*MOT: I see you (.) .', '*MOT: oop god bless you punkin@f .', '*CHI: yeah bless you baby [!] .', "*CHI: xxx what's that ?", '*CHI: raisins ?', "*MOT: yeah throw them away they're dried [!] out !", '*CHI: oh .', "*CHI: why can't I eat (th)em ?", "*MOT: (be)cause <you didn't> [/] you didn't finish (th)em and left them up in the cabinet .", "*MOT: and they got dry that's why I keep them in the closet so they stay moist .", '*MOT: see ?', '*MOT: you keep them in this plastic or wrap them in here they stay moist .', '*MOT: and they chewy [!] .', '*MOT: xxx .', "*CHI: why aren't they +...", '*CHI: huh ?', '*MOT: huh ?', '*CHI: can I take one ?', '*MOT: after [!] you eat .', "*CHI: <I don't want the> [//] I don't want (what) you're making for dessert (.) .", '*CHI: I +...', '*MOT: what dessert ?', '*CHI: chair [?] !', '*MOT: what we having for dessert ?', '*CHI: chair .', '*MOT: where ?', '*CHI: chair !', "*MOT: you're having a chair for dessert ?", '*MOT: one of these ?', "*MOT: that's a chair .", '*CHI: it has xxx in it .', '*MOT: huh ?', '*CHI: it has these in it .', "*MOT: sit up I can't understand what you're talking about .", '*CHI: the [/] the chair has these in it .', "*MOT: that's sherbert@f !", '*MOT: sherbert@f .', '*CHI: sherbert@f why call it sherbert@f ?', "*MOT: because (.) that's what they call it sherbert@f [!] zzz .", '*MOT: why do I call you Chi ?', "*MOT: that's because that's what I called you .", "*MOT: <that's what I gave you> [//] <that's what I named you> [>] Chi .", '*CHI: <<my name> [/] my name> [<] .', '*CHI: (be)cause I guess I wanted sherbert@f .', '*MOT: well you have sherbert@f after [!] you eat your dinner [>] .', '*CHI: mommy [<] <can I have sherbert@f after I have sherbert@f> [//] you said have sherbert@f <after you eat> [/] <after you eat> [//] after I eat .', '*MOT: after [///] Melissa gonna get her sherbert@f tomorrow [!] .', '*CHI: oh .', '*CHI: xxx <xxx [/]> [>] .', '*MOT: <they always> [<] get everything last [!] zzz .', '*CHI: I have xxx .', '*CHI: I will get (.) today [!] .', '*MOT: yeah you get yours today and Melissi has to wait for hers to be processed .', '*MOT: so she <got ta get hers tomorrow or later on tonight whenever it decides to get there> [>] .', '*CHI: <xxx xxx> [<] xxx get tomorrow ?', '*MOT: huh ?', '*CHI: does she [//] Melissi get it tomorrow ?', '*MOT: yeah I think she might get it tomorrow .', '*CHI: <I will get> [//] I will get it today .', "*MOT: I'm still trying <to see> [//] to remember how long it took for them onions to get her bootie@f .", '*MOT: well yeah <she should get it> [/] she should get it by tomorrow .', '*MOT: tomorrow morning .', '*CHI: who ?', '*CHI: who <Melissi> [>] ?', '*MOT: <Melissi> [<] yeah .', '*CHI: oh .', "*MOT: and if I'm not mistaken when I ate those onions at Grandma's house she got diaper rash .", '*MOT: I think the (.) second day later (.) the following day ?', '*MOT: zzz (..) .', '*MOT: yes say Mama you know onions give me diaper rash .', '*CHI: help me !', '*CHI: help me .', '*MOT: what are you doing ?', '*CHI: is this xxx up of the body ?', '*MOT: is she down there messing with you Melissi ?', "*CHI: I ain't .", "*CHI: I went down there and hid the top of Melissi's body .", "*MOT: you went down and hid the top of Melissi's body huh ?", '*CHI: yeah .', '*MOT: I wonder if I got another ham hock ?', '*CHI: xxx .', '*CHI: xxx .', '*CHI: yyy yyy yyy yyy yyy yyy yyy yyy yyy .', '*MOT: going to pick up a ham hock and I want some beans .', '*CHI: who ?', '*MOT: kidney beans .', '*MOT: me [!] I want some kidney beans .', '*MOT: I want <black eyed peas> [>] or something .', '*CHI: xxx [<] .', '*CHI: zzz zzz [>] .', "*MOT: <and pork and beans are not [!] what I'm interested in> [<] .", '*MOT: we got I think one can left ?', '*CHI: &-uh .', '*MOT: two cans (.) ?', '*MOT: one can !', "*MOT: what's the matter we choose Spaghetti_O's you want Spaghetti_O's xxx ?", '*CHI: and I want spaghetti too .', "*MOT: no you can't have spaghetti .", "*MOT: I'm only going to open one [/] one can at a time .", '*CHI: why ?', "*MOT: because it'll end up sitting in the (re)frigerator and you don't want to eat it .", "*MOT: so we'll have (.) I'll put pineapples in it !", '*MOT: want pineapples in your pork and beans ?', '*CHI: zzz .', '*MOT: or you want pineapples in sherbet ?', "*CHI: I'll have pineapples and pork and beans .", "*MOT: alright we'll just put one in there .", '*MOT: and some brown sugar .', '*MOT: I hate this thing !', "*MOT: I don't even know why [!] I bought a can opener !", '*CHI: dolly !', '*MOT: Chi leave Melissa alone .', '*CHI: xxx cry baby cry baby baby cry .', '*MOT: xxx [>] ?', '*CHI: xxx [<] cry baby .', '*MOT: hey [!] what is going on zzz .', '*CHI: xxx Melissi you are a cry baby .', "*MOT: Melissi ain't a cry baby all babies cry naturally a cry baby is when you cry for everything .", '*MOT: anything and everything .', '*CHI: mm .', "*MOT: you cry when somebody tell you no for something when you're not s(u)pposed to have it .", "*MOT: that's being a cry baby .", '*CHI: I know .', '*CHI: I was a cry baby (be)cause I was crying .', "*MOT: and you're a cry baby sometimes .", "*CHI: I didn't xxx [>] +/.", "*MOT: <everytime you's a> [<] cry baby all the time !", '*CHI: I think I like [!] Melissa (.) .', '*CHI: but I like my Mommy !', "*MOT: yeah you shouldn't cry .", '*CHI: zzz .', '*MOT: it be time to go sleep .', '*CHI: xxx .', '*MOT: I know .', '*MOT: you have_to run your bath water .', "*MOT: so that it be &g [///] won't be nine o'clock by the time you get into bed .", '*MOT: say we got_to go to bed early tonight Chi .', '*CHI: I could go to bed early tonight .', '*CHI: I could go to bed early .', "*MOT: oh Chi you do not know what you're missing .", '*MOT: taste good !', '*CHI: huh ?', '*MOT: is Chi [?] in there cooking ?', '*MOT: yum tasty .', '*CHI: <I cook> [//] I did cook .', '*MOT: hm: ?', "*CHI: <I said> [//] I thought you said I didn't cook .", "*MOT: no I'm cooking .", '*CHI: Melissa would know xxx cooking .', "*MOT: no I said Chi you don't know what you're missing [!] (.) (be)cause the taste is good .", '*CHI: oh .', '*MOT: the seasoning is going to soak into the meat and they look very ungelizing@f [///] <how (a)bout we> [>] sit you up here Melissa ?', '*CHI: <I taste> [<] [/] (.) I taste ?', "*MOT: I don't know .", '*MOT: sure you can handle it ?', '*CHI: yeah !', '*MOT: yeah (.) you think you can handle it ?', '*CHI: yeah !', "*MOT: you might not decide you don't want your hot dogs and beans I'm goin(g) (t)a be mad .", '*CHI: good hot dogs and beans .', '*MOT: try a little milk .', '*MOT: oh wait a minute wait a minute sweetheart !', '*MOT: I got news for you !', "*MOT: &a:h you think that's funny ?", "*MOT: zzz you think that's funny ?", "*MOT: say we got news [!] for you [///] let's put her on the floor it's so so hot [!] over here .", '*CHI: I hot too !', '*MOT: yes !', "*MOT: it's humid .", '*MOT: very humid .', "*CHI: yeah [!] let's eat .", '*CHI: and she has to +/.', '*MOT: zzz !', '*CHI: xxx zzz .', '*CHI: she said do the xxx xxx self about .', "*MOT: I don't hear no singing .", '*MOT: a Hokeypokey .', '*CHI: you put your feet in [!] put your feet out [!] put your feet in [!] put your feet out [!] shake all about .', "*CHI: do the Hokeypokey that's it all about !", '*CHI: do the ho(key) +/.', '*MOT: wan(t) (t)a taste ?', '*CHI: I wan(t) (t)a <xxx [/]> [>] .', "*MOT: <go on> [<] it's very hot .", '*MOT: you say she quit doing the Hokeypokey on you huh ?', '*MOT: say what happened to the Hokeypokey Chi <did you> [//] you stopped <doing the Hokeypokey> [>] !', '*CHI: <put your arms in> [<] put your arms out put your arms in and shake all about .', "*CHI: do the Hokeypokey and that's all about (.) that's what it's all about .", '*CHI: put your knees in put your knees out .', '*CHI: put your knees in put your knees out <shake all about> [>] .', '*MOT: <now taste> [<] .', '*CHI: <do the Hokeypokey and shake it all> [>] about .', "*MOT: <now see that's what you turned down for dinner> [<] .", '*CHI: about +...', "*MOT: pattycake pattycake baker's man yeah you don't wan(t) (t)a hear no pattycake ?", '*CHI: I do !', '*CHI: I do !', "*MOT: alright Melissa's fussing .", '*MOT: hey Melissi .', '*MOT: I [!] know what we got for you [!] .', '*CHI: what ?', "*MOT: we're gonna give her a bottle and quit her worrying .", '*MOT: she went right for this bottle [///] hold it hold it hold it now !', "*CHI: pattycake pattycake baker's man .", '*CHI: what ?', '*MOT: there you go .', '*CHI: thank you (10.) .', '*MOT: alright .', '*MOT: there you go sister Chi .', "*MOT: that'll hold you till we get this stuff on the road (.) and then we'll give you some booby@f milk !", "*MOT: zzz (.) oh pineapple too we'll have a pineapple in now .", '*MOT: go talk around her ears .', "*MOT: that's right say babies are made for kisses oh and <for lots_of love> [>] .", '*CHI: <and hug> [<] !', '*CHI: baby gets a hug .', '*CHI: baby <gets a> [<] [>] [//] (.) gets a bug !', '*CHI: and everything +...', '*MOT: huh ?', "*CHI: they're every day .", '*MOT: what are babies made for ?', "*CHI: they're baby kiddle@c kisses [!] hugs [!] and burps [!] .", '*MOT: zzz and burps huh ?', '*CHI: yeah !', "*MOT: well they weren't exactly made for burps but they do that anyway when <they get> [>] +/.", '*CHI: <xxx xxx> [<] [//] <I get xxx> [//] I [/] I got a big [!] burp .', '*MOT: oh yeah .', '*CHI: I got big burp xxx [>] +/.', '*MOT: drinking [<] that Pepsi gave you a big burp .', '*CHI: I know .', "*MOT: okay we're going to put a little bit of pineapple juice roll it around .", '*MOT: zzz !', '*MOT: yeah got_to remember to get some more brown sugar when we go shopping again .', '*CHI: why [/] (.) why do we .', '*MOT: yeah we only got a little bit !', '*CHI: for cake ?', "*MOT: nah we don't put brown sugar in cake .", "*MOT: there are some cakes you can make with brown sugar but mommy doesn't (.) make too many of those kind of cakes .", '*MOT: I use it mostly to take the [/] (.) the irony@o (.) taste out of the beans .', '*CHI: Melissi got it .', '*CHI: and we all [!] get [///] look she heard !', "*MOT: straw haired woman you're getting bigger by the minute huh you can hold your own bottle !", "*MOT: zzz <say don't worry overlap> [<] [>] .", '*CHI: <I put> [<] +...', "*MOT: Mama I'm not getting [>] used to this .", '*CHI: <Mommy> [<] !', '*CHI: Mama <I xxx> [//] I used [?] a bottle when I was a little baby I hold my own [!] bottle !', '*MOT: yeah you did hold your own bottle .', '*CHI: I did my xxx [>] +/.', '*MOT: <you were> [<] kind o(f) big [!] though when you started doing that .', '*CHI: zzz (.) .', '*CHI: well Mama xxx .', "*CHI: I'm gonna yyy by you .", '*MOT: why are you scooting on the floor ?', '*MOT: those little yellow pants of yours are going to be black [!] .', '*CHI: who ?', '*CHI: me (.) ?', '*CHI: me ?', '*MOT: your pants [!] .', '*CHI: me +/.', "*MOT: they're going to be dingy .", '*CHI: me and wash my pants ?', "*MOT: you ain't suppose to wash .", '*CHI: xxx .', '*MOT: hang on Melissa Rose (.) .', '*CHI: I want a bigger piece .', "*MOT: you [///] no [!] you'll have it for dessert .", "*MOT: it's almost finished .", '*MOT: okay you got pineapples in your dinner .', '*MOT: and then you can have the rest for dessert how (a)bout that ?', '*CHI: xxx xxx +/.', "*MOT: if you keep tasting you ain't gonna be able to eat nothing !", '*MOT: oh .', '*MOT: hold on .', '*MOT: go sit down move out the way from the stove .', '*CHI: zzz .', '*MOT: hi pumpkin !', '*CHI: hi pum(p)k(in) +...', '*MOT: you see Mommy ?', '*MOT: say I keeping up with you woman !', "*MOT: huh (.) say I'm keeping up with you woman (.) !", "*MOT: you don't think I'm gonna let you [!] get away out my [!] eyesight !", '*CHI: who ?', '*MOT: Melissi !', '*MOT: you keeping up with Mommy .', '*MOT: yeah .', "*CHI: I wasn't [?] keeping up with Mommy .", "*MOT: you don't [!] ?", '*CHI: no .', "*MOT: you don't care where I go ?", '*CHI: yeah .', "*MOT: well then that's keeping up with Mommy .", '*CHI: zzz .', '*MOT: how many napkins ?', '*CHI: I got it !', '*MOT: okay .', "*MOT: you don't get me a fork .", "*MOT: don't get me a fork I already have one I'll use the one I cook with .", '*CHI: Mommy ?', "*CHI: I'll get you a spoon .", "*CHI: I'll get you xxx [>] +/.", "*MOT: <what's the> [<] spoon for ?", '*CHI: huh ?', '*MOT: sherbert@f ?', '*MOT: pineapples ?', '*CHI: is this a big spoon ?', '*CHI: &-uh (.) (be)cause before (.) &-um +...', '*MOT: spoon and a fork ?', '*CHI: Melissi !', "*MOT: alright Melissi dinner's (.) almost finished .", '*MOT: and then you get to eat some more too .', '*CHI: okay .', '*CHI: xxx (.) .', '*MOT: alright we need a knife .', '*MOT: &-uh (.) want your hot dog cut up ?', '*CHI: no !', "*MOT: no [!] how you're going to eat your hot dog it's going to be hot .", '*CHI: yeah I want my hot dog cut up .', '*MOT: alright (.) .', '*MOT: hang on in there Melissi .', '*CHI: I got a xxx +/.', "*MOT: yeah I know you're getting tired of hanging in there .", "*MOT: say I'm ready to eat just like everybody else .", '*MOT: except I want mine now zzz .', '*CHI: call her .', '*CHI: hey xxx cry (.) cry baby .', "*CHI: yeah I'm sick [!] of it (.) .", '*MOT: yum [!] tasty !', '*MOT: maybe me and you should have hot dogs and beans tomorrow Melissi .', '*CHI: yeah .', '*MOT: yeah [!] they came out tasty !', '*CHI: the moon .', '*CHI: you put a little bit of steak on mine ?', '*MOT: you want a little bit of steak on yours ?', '*CHI: yeah .', "*MOT: okay I'll put a little bit of beans [!] on mine how (a)bout that ?", '*CHI: yeah put a little beans on mine too .', "*MOT: oh yeah I'm gonna give you some beans [!] .", "*MOT: you'll go to the bath+room .", '*CHI: yeah .', '*MOT: you xxx large [!] pieces of pineapple .', "*MOT: you like the pineapple don't you ?", '*CHI: I like that .', '*MOT: oh look what you did to my napkin .', '*CHI: what ?', '*MOT: you got it all mooshy@o [!] .', '*CHI: sorry .', "*CHI: I didn't xxx [>] +/.", "*MOT: <don't> [<] worry about it it's going to get mooshy@o anyway but don't worry about it don't use your spoon for mooshing@o .", "*MOT: don't worry about it .", "*MOT: so every time I wipe my mouth it's going to get stuff on it .", "*CHI: <oh I'll> [//] xxx [//] wipe your [!] mouth .", '*MOT: yum .', "*MOT: Melissi you just don't know [!] wait (un)til a couple of months from now .", '*MOT: there are so many things <you get to start> [>] trying [!] .', '*CHI: xxx [<] xxx wipe your mouth (.) .', '*MOT: here you go .', '*CHI: xxx [>] +...', '*MOT: <you want> [<] orange juice or milk ?', '*MOT: or water ?', '*CHI: milk .', '*MOT: oh !', '*MOT: I already got you a cup of milk .', "*MOT: yeah I knew when you came in you'd be talking milk .", '*MOT: I already had you a milk poured up .', '*CHI: can I go bath+room ?', '*MOT: yes (.) .', '*MOT: hi !', '*MOT: how you doing princess ?', '*MOT: &a:h (.) !', "*MOT: now we'll get small cups .", '*MOT: yeah when you get to teething you get to get popsicle .', '*MOT: and some sherbert@f (.) yeah !', '*MOT: yes !', "*MOT: in a couple more months say we'll gonna get [?] to get you some teeth .", '*MOT: say I get to get me a teeth .', '*MOT: zzz yes you do (24.) .', "*MOT: yeah say wait (un)til I get my first tooth we're going to be doing a whole [!] lot of damage .", '*MOT: huh .', '*MOT: one might be (.) woman [?] on me ?', '*MOT: going to have me some biscuits [!] and some crackers [!] .', '*MOT: yeah (.) you got a bubble for me ?', '*MOT: I know you want the booby@f .', "*MOT: say I'm hungry too Mama [///] <let me go get> [//] I'm going to get the orange juice (.) .", '*MOT: Mother needs orange juice .', '*MOT: so you [!] can get your orange juice [///] oh my vitamins (12.) .', '*CHI: xxx (10.) .', '*MOT: alright every little bit helps .', '*MOT: yeah !', "*MOT: say mama xxx I'm hungry .", '*CHI: xxx .', "*MOT: yeah come on too come on Chi let's eat .", "*MOT: say Mama I'm getting very very hungry !", '*CHI: if I could a xxx <xxx xxx I xxx eat yet> [>] .', "*MOT: <yes I know [!] yeah say Mama I'm hungry> [<] !", "*MOT: okay let's say grace .", "*MOT: Melissi can't hang on that long .", '*CHI: why .', "*MOT: say [/] say [/] say I can't hang on that long for breast Mama .", '*MOT: okay .', '*MOT: yeah xxx someone dropped food all over the xxx .', "*MOT: say it's kind of hot [!] when you stand up .", '*MOT: want to say grace ?', '*CHI: yeah .', '*CHI: thank you for our food we eat [!] .', '*CHI: thank you for our kind day [?] .', '*CHI: thank you for our food we eat .', '*CHI: thank you for our every day amen .', '*MOT: amen .', '*CHI: amen .', '*MOT: oop they tasty .', '*CHI: oop (.) tastes good .', '*MOT: yeah (.) !', '*MOT: &-uh (.) !', "*MOT: <I'm going do> [<] some baking .", '*CHI: when ?', '*MOT: we could have baked fish tomorrow .', "*CHI: <Mommy> [<] I don't like it .", '*MOT: you like it ?', '*MOT: what do you like ?', '*CHI: that that that and that .', '*MOT: what is that that that ?', '*CHI: steak [>] .', "*MOT: <what's> [<] that ?", '*CHI: steak .', '*MOT: and what ?', '*CHI: beans .', "*MOT: well what's with the steak ?", '*CHI: meat .', "*MOT: no what's the little things ?", '*MOT: rice ?', '*CHI: yeah .', '*MOT: steak and rice and beans ?', '*CHI: and hot dogs .', "*MOT: well let's see how much we can eat .", '*CHI: <I> [/] I like our xxx xxx xxx .', '*MOT: you want a little spinach ?', '*CHI: huh ?', '*MOT: want a little spinach ?', '*CHI: thank you .', '*CHI: put down .', "*MOT: wait a minute baby we don't have but a little bit of spinach this is leftovers [!] remember zzz (16.) .", '*MOT: xxx Melissi say I got_to get me some spinach too Chi .', '*MOT: say I want to be like Popeye .', '*MOT: nice and strong .', '*CHI: I go be like Popeye too .', '*MOT: yes (.) !', '*MOT: lots_of water is in spinach .', '*CHI: yeah .', '*MOT: carbohydrates .', '*CHI: what ?', '*CHI: could go do ?', '*CHI: and why are there two [/] two [/] (.) two Punkys [= Punky Brewster] coming on ?', '*CHI: huh ?', '*MOT: hm: ?', '*CHI: xxx xxx two Punkys coming on .', "*MOT: I don't know it's just like the Brady Bunch they come on back to back .", '*MOT: they have two Brady Bunches that come on .', '*CHI: why got two (.) one Punkys and one xxx .', "*MOT: maybe they're going to cut the series soon I don't know Honey .", '*CHI: how come she xxx two ?', "*MOT: maybe they don't have nothing else to fill <that spot> [//] that time slot .", '*CHI: oh .', "*MOT: from five thirty to six o'clock .", '*CHI: and <then they have> [>] +/.', '*MOT: <so they decided> [<] to put another Punky Brewster in .', '*CHI: xxx xxx T@l V@l .', '*MOT: yum .', '*MOT: tasty Melissi ?', '*MOT: hm: ?', '*MOT: is it tasty ?', '*CHI: I like it !', '*MOT: you like it ?', '*MOT: you like the pineapples in there ?', '*CHI: yeah I like beans .', '*CHI: I like beans when [>] +...', '*MOT: yum [<] this stuff tasty hm: ?', '*CHI: I like it .', '*MOT: yeah .', '*MOT: taste better with pineapple in it .', '*CHI: Mama who can have a hot dog ?', "*MOT: well eat some of the other food first then I'll get up and get the ketchup .", '*MOT: I doubt if you can reach it (.) .', '*MOT: yum .', '*MOT: you are getting so big baby girl you know that ?', '*CHI: who [>] ?', '*MOT: <yes you> [<] are .', '*CHI: who ?', '*MOT: Melissi .', "*MOT: Grandma says she wasn't getting enough of my booby +/.", '*CHI: alligator (.) !', '*CHI: I like Gator .', '*MOT: mhm .', '*CHI: why alligator xxx ?', '*CHI: huh ?', '*CHI: huh ?', "*MOT: that's what they named it (.) Crocodile Run .", '*CHI: it called .', '*MOT: hm: ?', '*CHI: why called crocodile run ?', "*MOT: that's just the name they gave it they could have called it anything and put the animal on the front flap .", '*MOT: but they decided the wanted to call it a crocodile run .', '*CHI: oh (30.) .', '*CHI: oop oop oop numnum !', '*MOT: mhm see ?', '*MOT: I told you you should have stuck with the leftovers zzz .', "*MOT: they're tastier today than they were yesterday huh [>] ?", '*CHI: <taste it> [<] +...', '*MOT: hm: ?', '*CHI: taste good .', '*MOT: mhm .', '*CHI: Melissi like it ?', '*MOT: Melissi going to sleep I think she just wanted the booby@f because she tired .', '*CHI: put her in the bed .', "*MOT: she isn't falling all the way into a complete sleep yet if I put her into bed she'll wake back up in two minutes .", "*MOT: (be)cause she's going to notice I'm gone .", "*MOT: you got_to let her fall into a deep sleep and then lay her down besides she's still drinking (.) from [>] time to time .", '*CHI: oh [<] .', '*MOT: her eyes are closed by her lips are still moving .', '*MOT: have more (.) .', '*MOT: all done baby (45.) .', '*MOT: yum (.) !', '*CHI: oop !', '*MOT: good girl (.) !', '*CHI: Mommy ?', '*MOT: hm: ?', '*CHI: can you +...', '*MOT: what ?', "*CHI: Mommy I'm full .", '*MOT: hm: ?', "*CHI: Mommy I'm full .", '*MOT: okay well you eat a bit of it .', "*CHI: <I don't> [/] I don't xxx .", '*CHI: I can xxx this .', '*CHI: xxx .', '*MOT: wait a minute !', '*MOT: wait a minute wait a minute wait a minute wait a minute [>] !', '*CHI: xxx [<] .', '*MOT: is that enough ?', '*CHI: yeah .', '*MOT: yum !', '*MOT: very delectable !', '*MOT: hey gi(ve) me gi(ve) me gi(ve) me zzz !', '*CHI: zzz .', "*CHI: I'm sorry .", '*MOT: can I borrow some of your sauce ?', '*CHI: sure !', '*MOT: yum [!] tasty did you eat your little piece of spinach (29.) ?', '*MOT: come on bookin@f .', "*MOT: you're not eating !", '*CHI: Mom look !', '*MOT: oh good girl .', '*CHI: xxx up .', '*CHI: xxx xxx xxx some more beans .', '*MOT: come on Melissa Rose you got_to eat to get big and strong .', "*MOT: she's sweating <to death> [>] .", '*CHI: <I put> [//] <I had> [//] I eat to be growing strong too !', '*MOT: mhm !', '*MOT: got ta eat your food !', '*MOT: what are the five things I told you ?', '*MOT: there were five ?', '*CHI: huh ?', "*MOT: what'd I say ?", '*MOT: you got ta eat your food ?', '*CHI: you got ta eat your beans after you eat all that you eat your steak and you have_to eat your sherbet !', "*MOT: no that's all considered food .", '*MOT: I say you got ta drink plenty of water (.) eat your food (.) take your vitamins .', "*MOT: what's the next one ?", '*CHI: go to the bath+room .', '*MOT: yep you got ta go the bath+room .', '*CHI: you have_to take your food with it .', '*MOT: no [!] get some rest !', '*CHI: zzz .', '*MOT: that keeps yours [//] that keeps everything in your <body working in good condition> [>] +/.', '*CHI: <gots@n to have some water> [<] .', '*MOT: right .', '*CHI: got ta take your vitamins .', '*MOT: right .', '*CHI: (.) you have_to take your <wa(ter)> [//] milk +...', "*MOT: that's food .", "*MOT: that's <part of food> [>] .", '*CHI: <you have_to> [<] take your food .', '*MOT: mhm .', '*CHI: you have_to take +...', '*MOT: you have_to go the bath+room .', '*CHI: you have_to go to bath you have_to take your rest .', "*MOT: that's right you got ta get some rest .", "*MOT: <your body works> [>] good when it's rested .", '*CHI: <I go bath> [<] (.) I go bath+room pee+pee .', '*MOT: yep you have_to go to the bath+room and go pee+pee and doo+doo .', '*CHI: xxx <I> [/] I go bath+room go pee+pee and doo+doo .', '*MOT: mhm .', '*CHI: and me very good .', '*MOT: yep !', '*MOT: very good !', '*MOT: <whatever you eat> [>] you always have something coming out .', '*CHI: xxx [<] .', '*CHI: that [/] that xxx I ate all the hot dog !', '*MOT: yes !']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//zenmt1.cha
HSLLD/HV1/MT//bramt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: xxx .', "*CHI: I'm Brave Star .", '*CHI: zzz .', "*CHI: I'm Brave Star (.) .", '*CHI: zzz [>] .', "*MOT: <he's watching himself in the mirror Mommy (.) singing> [<] .", '*CHI: zzz .', '*CHI: Brave Star Brave <Star> [>] .', "*MOT: <he's singing> [<] very good <isn't he> [>] ?", '*GMA: <I was gonna say what is he singing> [<][>] ?', '*CHI: zzz [<] .', '*MOT: what are you singing ?', '*CHI: Brave Star .', '*MOT: Brave Star (.) you sing <so good> [>] .', '*GMA: <oh Brave Star> [<] .', '*GMA: <sounded like praise the lord and pass the ammunition> [>] .', '*CHI: zzz <Brave Star Brave Star > [<] .', '*CHI: <Brave Star > [>] +...', '*MOT: zzz <Brave Star Brave Star > [<] +...', "*MOT: that's a good song (.) .", "*MOT: who's Brave Star Brad ?", "*CHI: he's in my Brave Star book .", '*GMA: <oh right> [>] .', "*CHI: <xxx singing [?]> [<] [///] <don't> [/] don't open that book [>] it's broken .", '*GMA: zzz [<] .', '*MOT: what book ?', '*MOT: <the Brave Star> [>] book is broken ?', '*CHI: <Brave Star> [<] (.) yep .', '*CHI: all the pages are falling out of it .', '*GMA: all the pages are falling out of it ?', '*CHI: <xxx it [?]> [>] .', '*GMA: <xxx will> [<] get you a new book .', '*GMA: zzz xxx .', '*MOT: zzz <zzz oh> [>] .', "*MOT: <you're bad> [>] .", '*MOT: <you want butter or margarine> [>] ?', '*CHI: Brave Star Brave Star Brave Star brave Brad +...', '*GMA: butter please .', '*GMA: <why not enjoy it > [<] ?', '*GMA: Brave Star +...', '*CHI: <butter xxx> [>] .', "*GMA: <oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .", '*MOT: <xxx xxx> [<][>] .', "*GMA: really [<] (.) that's disgusting .", '*GMA: <throw that away> [>] .', '*CHI: <Brave> [<] Brave Star (.) Brave Star (.) <Brave> [>] +...', "*MOT: <you're> [<] such a good singer .", '*CHI: <Mama> [>] ?', '*GMA: <Brave Star > [<][>] +...', '*MOT: what [<] ?', '*MOT: <you want catsup> [<] ?', '*CHI: yeah .', '*MOT: on your fish cakes ?', '*CHI: yeah (.) .', '*CHI: me me ?', '*CHI: Mama ?', '*MOT: what ?', '*CHI: juice me [!] me .', '*MOT: <me me> [>] .', '*MOT: okay [>] .', '*CHI: <Brave> [<] Star +...', '*GMA: Brave [!] Star (.) and +...', '*MOT: xxx .', "*MOT: &-um the brown bread's in there .", '*MOT: <Dad> [>] (.) ?', '*MOT: wan (t)a come out [?] to eat ?', '*CHI: <Brave> [<] Star (.) Brave (.) Brave[!] Star [!] .', '*CHI: oh .', '*GPA: what ?', '*CHI: oh [?] .', '*GMA: come in the kitchen .', '*GPA: what did you say ?', '*CHI: time for supper .', '*GPA: why ?', '*GPA: why should I have supper with you ?', '*GMA: xxx .', '*GPA: why [>] ?', '*CHI: time [<] for lunch (.) !', "*GMA: isn't that xxx .", '*GPA: xxx xxx .', '*GPA: I have_to have supper with you ?', '*CHI: yep .', "*MOT: oh I didn't even make anything for him .", '*CHI: Brave <Star> [>] +...', '*MOT: <come eat a half > [<] .', '*CHI: Brave Star (.) Brave Star .', "*CHI: I'm gonna have two too .", '*MOT: well I hope you like them (.) .', "*GMA: if he doesn't we'll help him eat them (.) .", '*GPA: how come you wanted two (.) ?', '*CHI: because [?] .', '*MOT: <Brad made> [//] helped make the tartar sauce .', '*GPA: did he ?', '*MOT: all the mayonnaise in the jar .', '*GMA: mm .', '*GPA: did he put his fingers in there ?', '*MOT: nope .', '*MOT: he was very very good .', '*GPA: xxx I get a spoon xxx .', '*GMA: learning how to cook huh ?', "*MOT: didn't you help me ?", '*CHI: yeah ?', '*MOT: what did you do ?', '*GMA: mm .', '*CHI: xxx .', '*CHI: xxx .', '*MOT: would you like +...', '*CHI: yeah ?', '*MOT: what are you gonna have .', '*MOT: milk first ?', '*MOT: then juice ?', '*CHI: yyy .', "*GMA: perhaps I'll <butter your piece> [>] ?", '*CHI: <Mommy> [<] .', '*CHI: Mama .', '*MOT: what (.) ?', '*CHI: first juice .', '*GPA: you want some beans ?', '*MOT: the juice first ?', '*GPA: you want some beans ?', '*CHI: yeah .', '*MOT: here xxx (.) .', '*CHI: juice please [?] .', '*CHI: no .', '*CHI: <enough juice> [>] .', "*GPA: <that's enough> [<] (.) ?", '*CHI: mine is big .', '*MOT: yeah .', "*MOT: you don't want the little cup ?", '*MOT: you want the big cup ?', '*CHI: yeah (.) .', '*GPA: so did you and Mommy see flowers today ?', '*CHI: yep .', '*MOT: zzz .', '*GPA: tomatoes ?', '*CHI: yep .', '*GMA: here you go Lovey .', '*GPA: and [/] and [/] and [/] you say there was people dancing ?', '*GMA: xxx (.) .', "*GMA: weren't they good ?", '*GMA: there were sticks too Dad (.) and bells (.) on their legs .', '*GPA: oh yeah ?', '*GMA: mhm .', '*MOT: who was collecting the money (.) ?', '*GMA: zzz .', '*CHI: the horse .', '*GMA: yeah [>] .', '*GMA: zzz [>] .', '*MOT: <the horse was collecting the money> [<] ?', '*GPA: how was the horse collecting the money ?', '*CHI: good .', '*CHI: and I told [>] him the man xxx <where the> [/] where the little holes are (.) xxx put all the money in xxx .', '*MOT: good [<] ?', '*GMA: and he in his mouth he threw it (.) .', "*GMA: in the <horse's> [>] mouth .", '*CHI: <in> [<] [//] yeah (.) and down his throat .', '*GMA: yeah (.) .', '*GMA: and what did the man xxx ?', '*MOT: it looked like Brad xxx right down his throat too .', '*GMA: &-um .', '*CHI: xxx awoh .', '*GMA: and what else did he do when you gave him money Brad (.) ?', '*GMA: beep beep .', '*CHI: beep beep .', '*GMA: zzz .', '*GMA: I was telling Dad he had one of those &-um like Groucho Marx +...', '*MOT: horns .', '*GMA: horns yeah .', '*GMA: that was so funny (.) .', '*MOT: then they had all the dancers .', "*GPA: I don't think Brad seen all that did you ?", '*MOT: well Brad wanted to have his picnic right by [!] the dancers <so he> [>] could hear the music .', '*GMA: huh [<] .', '*GMA: so that way it really turned out nice .', '*GMA: everybody was going down to the (..) main house .', '*MOT: oh this tartar sauce (..) +...', '*GPA: did they play songs for you (.) ?', '*CHI: yeah .', '*GPA: what songs did they play ?', '*GPA: do you know ?', '*GMA: no .', '*GMA: they did more yyy &-uh dancing .', '*GPA: was it Irish music ?', '*GMA: yep (.) .', '*MOT: Brad liked that .', '*MOT: said he liked having a picnic .', '*GMA: mm .', '*MOT: and what did Mama do after we ate ?', '*GMA: these are delicious .', '*CHI: you gave me candy .', '*MOT: I gave you candy .', "*MOT: but didn't I read you a story ?", '*CHI: yeah .', '*MOT: what story ?', '*CHI: Bambi .', '*MOT: Bambi .', '*GMA: hm: [>] .', '*MOT: yep [<] .', '*CHI: I know [?] xxx in there (.) .', '*CHI: a xxx a xxx .', '*MOT: a what ?', '*CHI: xxx .', '*MOT: a lot of thoughts ?', '*CHI: pretend (.) .', '*MOT: you want me to cut your fish cake (.) ?', "*MOT: they're delicious .", '*GPA: xxx having them in too [?] long .', '*GMA: mm .', '*GMA: they really are good .', '*MOT: did you eat some beans ?', '*CHI: yeah Mommy <&u>[/] &-um [>] +...', '*MOT: what [<] ?', '*GMA: these taste like the ones you get <out of town> [>] .', '*CHI: can [<] you cut this too ?', '*MOT: you want me to cut your brown bread ?', '*GMA: mhm [>] .', '*CHI: yeah [<] .', '*CHI: Mommy .', '*GMA: xxx (.) .', '*MOT: okay I cut one fish stick [?] xxx .', '*MOT: alright (.) ?', '*CHI: Brave Star +...', '*GMA: and did you tell Dad how you ran down the hill ?', '*MOT: zzz .', '*CHI: I ran down the hill .', '*GMA: he was <running down and xxx> [>] .', '*GMA: <a couple of times he fell and rolls> [>] +...', '*MOT: <way way down xxx> [<] .', '*MOT: zzz [<] .', '*MOT: he loved it .', "*MOT: Ma said [///] we were up on top of the hill and Brad couldn't wait to run down it .", '*MOT: Ma says (.) okay Brad do you wan(t) (t)a go down here now ?', '*MOT: and Brad yells out yay [!] .', '*MOT: zzz and he ran down the hill just as fast [!] as he could .', '*GMA: it looked like if we stayed on the top where we were that we were gonna end up (.) on the other side of the arboretum (.) .', '*GMA: zzz so I says well +/.', "*GMA: let's take this road back there's a church , right .", '*GMA: we did go across the original <road we> [>] were on .', '*CHI: stop [<] !', '*CHI: xxx .', '*CHI: xxx <my Mama> [/] my Mama to ask people if we could know <where the (.) &-um> [//] where the +...', '*GMA: arboretum .', '*CHI: where the arboretum was .', '*GPA: yeah ?', '*GMA: mhm .', '*GPA: xxx but you did find out how to get there huh ?', '*GMA: well [>] .', '*CHI: <some people> [<] .', '*GPA: some people told you ?', '*CHI: so [?] my Mama xxx .', '*GPA: <did you> [/] did you like it ?', '*GPA: how did the flowers [?] smell ?', '*MOT: mm [>] .', "*CHI: <I> [<] didn't smell it [?] .", '*CHI: I smelled some .', '*MOT: and how did they smell ?', '*CHI: good .', '*MOT: yeah [>] .', '*GMA: yeah [<] .', '*GPA: you smelled the lilacs ?', '*CHI: <there were some> [//] they was two yyy .', '*GPA: two lilacs ?', '*GMA: purple ones (.) and pink ones and white ones and lilac ones .', '*GMA: the purple .', "*GMA: they didn't smell that good .", '*GMA: they were deep deep purple .', '*GMA: looked like a bunch of <Concord grapes> [>] .', '*GPA: mm [<] .', '*GPA: yeah [<] .', "*GMA: but they didn't smell as pretty as the white and the light purple [/] .", '*MOT: the white [///] those two smelled the best .', "*GMA: didn't you hear xxx and it's true .", '*MOT: xxx really wanted to have a picnic .', '*CHI: zzz .', '*MOT: <you could> [//] all you could smell was the lilacs <and one> [>] lady was sitting across .', '*GMA: mm [<] .', '*CHI: zzz [>] .', '*MOT: right [<] ?', "*MOT: <here's the tree> [<] ?", '*MOT: and here she was <reading a book> [>] (.) .', '*GMA: mhm [<] .', "*MOT: I bet she didn't wan(t) (t)a leave that smell .", "*MOT: it's pouring out .", '*MOT: zzz .', '*GMA: mhm .', "*MOT: it's a good thing we didn't go out Bra .", '*CHI: why ?', "*GMA: I'm <glad I got>[>] .", "*GPA: <it's raining> [<] .", '*GMA: <home when I did> [>] .', "*MOT: <(be)cause it's> [<] pouring .", '*GMA: I went down to the river <to watch the boats [?] for about five minutes> [>] .', '*CHI: <is it xxx xxx now> [<] ?', "*MOT: it's raining .", "*CHI: and it's dirty outside now ?", '*CHI: but I wanted to go to the park .', "*MOT: we can't go to the park now it's raining .", '*CHI: I want (to) go to the fish store .', "*MOT: well you can't .", "*MOT: it's raining .", '*CHI: did you see the fish man go home (.) ?', '*CHI: I wan(t) (to) go to the fish store .', "*MOT: I don't know .", "*MOT: I don't know what time they close .", '*MOT: maybe we could put on our rain coats .', '*CHI: do you got a rain coat ?', "*MOT: no but I'll wear something .", '*CHI: <Ma> [>][/] .', "*GMA: <I'll let> [<] Mommy use my umbrella .", '*CHI: no .', '*CHI: if [/] if she has +...', '*GMA: mm [>] .', '*CHI: thunder [<] .', '*MOT: thunder .', '*GMA: mm .', '*CHI: <we can> [/] we can run to the fish store .', '*CHI: then we can run back home with our feet like [/] like [/] like [/] like I always do (.) ?', "*CHI: and [/] and so [/] so the thunder won't get us right ?", '*MOT: right .', '*GMA: you know what the thunder is ?', '*CHI: yeah .', '*CHI: thunder and lightning .', '*GMA: yeah .', '*GMA: and the thunder is when &-uh the angels are upstairs bowling .', "*GMA: and that's one of them just got a spare (.) .", "*MOT: Brad should get out his Berenstein Bear [?] [///] oh I'm going (t)a have_to let Ma read it and that'll tell her what thunder is huh ?", '*MOT: zzz .', '*GMA: mhm .', '*MOT: tells <&e> [//] all about thunder and [>] [/] .', "*GPA: <that's> [<] the energy [>] .", '*GMA: <why should> [<] [/] why should he be brought up on a <different story than you people were> [>] ?', '*GMA: zzz [>] .', "*CHI: because [//] that's because xxx mother [<] vacuum in it .", "*GPA: that's the energy huh ?", '*GPA: thunder is caused by energy in the clouds [>] .', '*CHI: <yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...', '*MOT: oh <Brad> [>] .', '*CHI: <and I> [<] was trying to find something that was yellow outside in the dark all by itself .', '*CHI: and it came out .', '*CHI: and it was thunder and lightning and I hided@n from it .', '*GMA: hm: [>] .', '*MOT: hm: [<][>] .', '*GPA: and [<] you hided@n from it ?', '*CHI: yeah .', '*GPA: where did you hide ?', '*GPA: under your blankets ?', '*CHI: no under my covers .', '*GPA: <under your covers> [>] ?', '*GMA: <are you gonna> [<] eat ?', '*CHI: like [/] like [/] like when I was sleeping and I was xxx .', '*GPA: do you always pull the covers up over your head ?', '*GPA: yeah ?', '*CHI: xxx [>] .', '*MOT: <he only> [<] has one blanket .', '*MOT: all the rest are covers .', '*GMA: zzz .', "*CHI: Mama I'm all done .", "*MOT: you didn't eat much .", "*MOT: don't you feel good ?", "*GMA: he didn't eat anything [!] .", "*CHI: <I'm all> [/] I'm all done though I want some milk .", '*MOT: let me rinse your cup .', '*GMA: xxx .', '*MOT: Brad .', '*CHI: Brave <Star > [>] +...', '*MOT: <does it> [<] hurt here (.) ?', '*GMA: where does it hurt ?', '*GPA: are you sick again ?', '*CHI: no .', '*CHI: right pot .', '*MOT: he told me his belly was hurting when we were <at the &-um> [>] arboretum .', '*GMA: mm [<] .', '*GMA: we were afraid he <was gonna have a> [>] problem .', '*MOT: <does your belly still hurt> [<] ?', '*GMA: where you going Kiddo ?', '*CHI: xxx Mama .', "*MOT: here's your milk .", '*CHI: Mommy ?', '*MOT: what ?', '*CHI: &-um [/] &-um [/] .', '*MOT: does your belly still hurt ?', '*CHI: no .', "*CHI: Mommy we have_to run like [/] like that so we won't get done [?] so the thunder won't get us .", '*CHI: xxx [>] .', "*MOT: <well Honey> [<] I don't think we should go .", '*CHI: yyy I want go to the fish store .', "*MOT: no I don't think so xxx you got that <bad a cough> [>] .", '*GMA: no [<] .', "*GMA: and <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .", '*GMA: you had enough candy today Lovey .', "*CHI: Mommy I'm gonna get ice cream .", '*GMA: zzz .', "*CHI: I'm gonna get ice cream bar[!] (.) .", '*CHI: okay ?', '*GMA: well (.) .', '*CHI: okay ?', "*MOT: I shouldn't let him but I know if I was having a sore belly I'd [/] .", "*GMA: <I'd> [//] well yes .", '*MOT: <want an ice cream too> [>] .', "*GMA: <that's what I was> [<] gonna say .", '*GMA: ice cream is better .', '*CHI: Ma I wan(t) (t)a go to the store and get <some ice cream> [>] .', '*GMA: <but no candy> [<] .', '*CHI: no just [?] candy .', '*CHI: I wan(t) (t)a go to the fish store and get some ice cream (.) .', '*CHI: (o)kay ?', '*GMA: no candy .', "*CHI: <I won't> [/] I won't get any (.) !", '*CHI: Ma you wan(t) go to the fish store with me and my Mama ?', '*GMA: but even his voice xxx [>] .', "*CHI: <don't you> [<] ?", '*GMA: sounds funny .', "*MOT: I don't think so Lovey .", "*CHI: you don't [///] you have [!] to because [/] because I wo'(nt) [/] .", '*MOT: Brad !', '*MOT: does your belly still hurt ?', '*CHI: zzz .', '*MOT: does it hurt when you cough (.) ?', '*CHI: zzz it hurted@n before when I coughed (.) .', '*CHI: &-um Mommy I wan(t) (t)a bring my new water gun to the preschool [>] .', "*GMA: <and there> [<] really isn't anyplace you can <drive him> [>] .", '*CHI: okay [<] Mommy ?', '*CHI: okay [>] ?', '*MOT: xxx [<] .', "*MOT: we don't have any ?", '*CHI: okay Mommy ?', '*CHI: okay [>] ?', '*GPA: xxx [<] .', '*GMA: xxx .', '*GMA: xxx [>] .', '*CHI: okay [<] ?', '*GPA: mhm .', '*GPA: xxx .', '*GMA: oh .', '*CHI: <okay Mommy> [>] ?', '*GMA: xxx [<][>] .', '*MOT: <okay what> [<] ?', '*CHI: okay ?', '*MOT: what Honey ?', '*CHI: okay ?', "*MOT: I didn't hear you .", "*CHI: do you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?", '*MOT: alright (.) .', '*MOT: come up here and drink your milk (.) .', '*MOT: thank you .', "*GPA: you're not gonna eat any supper at all ?", '*CHI: nope .', '*GPA: huh ?', '*CHI: nope .', '*CHI: just taste a little bit ?', '*GMA: we were going up to the main [?] house and &-uh arboretum (.) <and there was this> [>] [/] .', '*CHI: <it tastes> [<] cold .', '*GMA: we were about to find out what the name of the little bells flower is xxx a man going by me says xxx blue bells .', '*GMA: &ha .', '*GMA: thanks a lot .', '*GMA: &ha .', '*GMA: and someone else was saying well yeah I guess you would .', '*GMA: so I really wanted to find out the botanical name .', '*CHI: zzz .', "*GPA: uhhuh uhhuh [>] you had it over there and you didn't eat it .", '*GMA: xxx [<] .', '*CHI: where is it ?', '*GPA: mom [//] your mommy just ate it .', '*MOT: yes I did .', "*GPA: because you wasn't eating it .", '*CHI: oh .', '*CHI: zzz .', '*GMA: <they had> [//] they were putting on like a video show .', '*CHI: xxx .', '*GMA: they were really xxx [>] .', '*GPA: zzz [<] .', '*CHI: my shoe .', '*CHI: <my shoe> [>] Mommy .', "*GPA: you can't go .", '*GPA: <I got your shoe>[<] .', '*GPA: he went to kick me and his shoe fell off .', '*GPA: zzz [>] .', '*MOT: zzz [<][>] .', '*CHI: <Mommy> [<] .', '*CHI: <I wan(t) (t)a> [/] <I wan(t) (t)a wear> [<] my boots .', '*MOT: nope .', "*MOT: you're not wearing your boots .", '*CHI: yes .', '*GPA: no <Mommy said> [>] .', '*CHI: yes [<] .', '*GMA: no .', '*GMA: your boots would look silly .', '*GMA: those are winter boots .', '*CHI: but I want my brown boots .', "*CHI: where's [?] my rain boots ?", "*GMA: they'd look silly .", "*MOT: we don't have rain boots for you .", '*CHI: one day I had them .', '*GPA: one day you had them ?', '*CHI: on one day I had rain [/] .', '*GPA: what day did you have them ?', '*CHI: well one day I had rain boots red ones and [/] and [/] and &-um +...', '*GPA: you had red ones and <you had> [>] blue ones .', '*CHI: <yeah I had my> [<] [///] .', '*GPA: you never had any brown boots .', '*CHI: yes I did .', '*GPA: oh the big heavy shoes (.) !', '*GPA: the brown work shoes ?', "*GPA: oh [>] I don't know where they are .", '*CHI: xxx [<] .', '*CHI: one day I had rain boots and they were red and now I lost them .', '*GPA: xxx .', '*MOT: where did they go ?', "*CHI: I don't know .", '*GPA: did you outgrow them ?', '*CHI: no .', '*GPA: no ?', '*GMA: where did [!] they go (.) ?', "*MOT: it's in one of his bureau drawers with his winter coat .", '*CHI: zzz .', '*GMA: &ha .', '*CHI: I have a new <coat too> [>] .', '*GMA: <his boots> [<] ?', '*GPA: zzz [>] .', '*CHI: <I> [<][>] [/] .', '*MOT: xxx [<] .', '*CHI: <now I have new> [>] [/] .', '*GMA: zzz [<] .', '*GMA: <oh Jesus> [<] .', '*CHI: now I have two new coats .', '*GPA: you got them on the wrong feet .', '*GPA: you got the shoes on the wrong feet .', '*CHI: I know this .', '*GPA: what do you mean you know that ?', '*GPA: <what do you know it for> [>] ?', '*MOT: <I know this> [<] .', '*CHI: Mommy is this the right feet ?', '*GPA: no !', '*CHI: is it ?', '*GPA: no !', '*GMA: no .', '*GPA: zzz [>] .', '*GMA: zzz [<][>] .', '*CHI: <is it> [<] is this the right feet ?', '*GMA: look at Charlie Chaplin .', "*GMA: I can't [///] no I <don't think so Brad> [>] .", '*GPA: zzz [<][>] .', '*CHI: <is this the right feet> [<] ?', "*GMA: he knows them and they're not hard .", "*GMA: he wouldn't ask .", '*GPA: zzz [>] .', '*CHI: no [<] ?', '*CHI: <this one xxx> [<] this one ?', '*MOT: you messed up .', '*CHI: xxx [>] that one ?', '*GPA: oh [<] .', '*MOT: yep .', '*GPA: oh you big phony baloney (.) .', '*MOT: kind of ice cream you going (t)a get at the fish store ?', '*GMA: zzz .']
loading solution set
LINE NO ->  15
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  17
LINE NO ->  21
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  24
LINE NO ->  28
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  33
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0})
LINE NO ->  38
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  42
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  45
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  50
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  55
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  59
LINE NO ->  63
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  66
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  70
LINE NO ->  73
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  82
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  85
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  89
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  92
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  96
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  100
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  105
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0})
LINE NO ->  110
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  114
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  119
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  124
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  128
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  134
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  139
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  146
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  151
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  155
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  158
margarine
margarine margarine 717
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'NN'), ('or', 'CC'), ('margarine', 'NN')]
['margarine']
('food -> ', [['margarine', 'Fats and Oils']])
butter
butter butter 499
[('you', 'PRP'), ('want', 'VBP'), ('butter', 'NN'), ('or', 'CC'), ('margarine', 'NN')]
['butter']
('food -> ', [['margarine', 'Fats and Oils'], ['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  168
butter
butter butter 499
[('butter', 'NN'), ('please', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  171
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  175
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  180
butter
butter butter 499
[('butter', 'NN'), ('xxx', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  184
butter
butter butter 499
[('oh', 'IN'), ('no', 'DT'), ('i', 'NN'), ('like', 'IN'), ('m', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'NN'), ('like', 'IN'), ('my', 'PRP$'), ('butter', 'NN'), ('that', 'WDT'), ('has', 'VBZ'), ('been', 'VBN'), ('left', 'VBN'), ('open', 'JJ'), ('like', 'IN'), ('that', 'DT'), ('thank', 'NN'), ('you', 'PRP'), ('very', 'RB'), ('much', 'RB')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 1, 115: 1, 116: 1, 117: 0, 118: 0, 119: 0})
LINE NO ->  191
LINE NO ->  192
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  196
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  199
LINE NO ->  204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  215
LINE NO ->  219
catsup
catsup catsup 101
[('you', 'PRP'), ('want', 'VBP'), ('catsup', 'NNS')]
['catsup']
('food -> ', [['catsup', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  223
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  227
fish
fish fish 305
[('on', 'IN'), ('your', 'PRP$'), ('fish', 'JJ'), ('cakes', 'NNS')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  231
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  235
LINE NO ->  239
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  244
LINE NO ->  248
juice
juice juice 52
[('juice', 'NN'), ('me', 'PRP'), ('me', 'PRP')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  252
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  259
LINE NO ->  264
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  269
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  270
bread
bread bread 186
[('um', 'IN'), ('the', 'DT'), ('brown', 'JJ'), ('bread', 'NN'), ('s', 'NN'), ('in', 'IN'), ('there', 'EX')]
['bread']
('food -> ', [])
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471e3050>)
[('um', 'IN'), ('the', 'DT'), ('brown', 'JJ'), ('bread', 'NN'), ('s', 'NN'), ('in', 'IN'), ('there', 'EX')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  273
LINE NO ->  276
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  280
LINE NO ->  284
LINE NO ->  287
LINE NO ->  291
LINE NO ->  294
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  299
LINE NO ->  303
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  307
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  310
LINE NO ->  315
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  320
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  324
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  327
LINE NO ->  328
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  331
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  334
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  339
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  343
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  347
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  351
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  354
LINE NO ->  357
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  364
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  367
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  372
tartar
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94712ad40>)
[('brad', 'NN'), ('made', 'VBD'), ('helped', 'VBD'), ('make', 'VB'), ('the', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['tartar']
('food -> ', [])
tartar sauce
tartar sauce tartar sauce 211
[('brad', 'NN'), ('made', 'VBD'), ('helped', 'VBD'), ('make', 'VB'), ('the', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['tartar', 'sauce']
('food -> ', [['tartar sauce', 'Soups, Sauces, and Gravies']])
sauce
sauce sauce 29
[('brad', 'NN'), ('made', 'VBD'), ('helped', 'VBD'), ('make', 'VB'), ('the', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['sauce']
('food -> ', [['tartar sauce', 'Soups, Sauces, and Gravies'], ['sauce', 'Soups, Sauces, and Gravies']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  378
mayonnaise
mayonnaise mayonnaise 231
[('all', 'PDT'), ('the', 'DT'), ('mayonnaise', 'NN'), ('in', 'IN'), ('the', 'DT'), ('jar', 'NN')]
['mayonnaise']
('food -> ', [['mayonnaise', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  381
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  384
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  388
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  391
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  394
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  397
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  400
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  404
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  408
LINE NO ->  412
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  415
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  416
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  417
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  420
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  425
LINE NO ->  428
milk
milk milk 46
[('milk', 'NN'), ('first', 'RB')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  432
juice
juice juice 52
[('then', 'RB'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  436
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  437
butter
butter butter 499
[('perhaps', 'RB'), ('i', 'JJ'), ('ll', 'VBP'), ('butter', 'VB'), ('your', 'PRP$'), ('piece', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  440
LINE NO ->  443
LINE NO ->  446
LINE NO ->  450
juice
juice juice 52
[('first', 'RB'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  453
beans
beans beans 105
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('beans', 'NNS')]
['beans']
('food -> ', [['beans', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  456
juice
juice juice 52
[('the', 'DT'), ('juice', 'NN'), ('first', 'RB')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  460
beans
beans beans 105
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('beans', 'NNS')]
['beans']
('food -> ', [['beans', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  463
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  467
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  470
juice
juice juice 52
[('juice', 'NN'), ('please', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  473
LINE NO ->  476
juice
juice juice 52
[('enough', 'JJ'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  479
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  482
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  488
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  492
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  496
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  500
flowers
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947147878>)
[('so', 'RB'), ('did', 'VBD'), ('you', 'PRP'), ('and', 'CC'), ('mommy', 'VB'), ('see', 'NN'), ('flowers', 'NNS'), ('today', 'NN')]
['flowers']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  505
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  508
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  512
tomatoes
tomatoes tomatoes 213
[('tomatoes', 'NNS')]
['tomatoes']
('food -> ', [['tomatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  515
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  519
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  522
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  526
LINE NO ->  527
LINE NO ->  530
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  535
LINE NO ->  538
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  541
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  546
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  550
horse
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947112ef0>)
[('the', 'DT'), ('horse', 'NN')]
['horse']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  556
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  561
horse
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947143bd8>)
[('the', 'DT'), ('horse', 'NN'), ('was', 'VBD'), ('collecting', 'VBG'), ('the', 'DT'), ('money', 'NN')]
['horse']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  566
horse
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947147200>)
[('how', 'WRB'), ('was', 'VBD'), ('the', 'DT'), ('horse', 'NN'), ('collecting', 'VBG'), ('the', 'DT'), ('money', 'NN')]
['horse']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  570
LINE NO ->  573
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 1, 102: 1, 103: 1, 104: 1, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, -1: 1})
LINE NO ->  581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  585
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  590
horse
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94703ea70>)
[('in', 'IN'), ('the', 'DT'), ('horse', 'NN'), ('s', 'NN'), ('mouth', 'NN')]
['horse']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  593
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  596
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  599
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  602
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  607
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  609
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  612
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  617
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  620
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  623
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  627
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  636
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  640
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  643
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  647
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  653
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 0, 100: 0, 101: 0})
LINE NO ->  661
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  664
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  669
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  674
tartar
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94703ef80>)
[('oh', 'UH'), ('this', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['tartar']
('food -> ', [])
tartar sauce
tartar sauce tartar sauce 211
[('oh', 'UH'), ('this', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['tartar', 'sauce']
('food -> ', [['tartar sauce', 'Soups, Sauces, and Gravies']])
sauce
sauce sauce 29
[('oh', 'UH'), ('this', 'DT'), ('tartar', 'NN'), ('sauce', 'NN')]
['sauce']
('food -> ', [['tartar sauce', 'Soups, Sauces, and Gravies'], ['sauce', 'Soups, Sauces, and Gravies']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  677
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  680
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  683
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  686
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  689
LINE NO ->  692
LINE NO ->  695
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  701
LINE NO ->  704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  708
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  711
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  717
LINE NO ->  720
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  724
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  727
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  733
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  736
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  740
LINE NO ->  744
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  751
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  758
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  761
LINE NO ->  765
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  767
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  771
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  774
fish
fish fish 305
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('fish', 'JJ'), ('cake', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
cake
cake cake 412
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('fish', 'JJ'), ('cake', 'NN')]
['cake']
('food -> ', [['fish', 'Finfish and Shellfish Products'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  780
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  783
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  786
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  789
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  792
beans
beans beans 105
[('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('some', 'DT'), ('beans', 'NNS')]
['beans']
('food -> ', [['beans', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  796
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  799
LINE NO ->  803
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0})
LINE NO ->  808
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  812
bread
bread bread 186
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('brown', 'JJ'), ('bread', 'NN')]
['bread']
('food -> ', [])
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472149e0>)
[('you', 'PRP'), ('want', 'VBP'), ('me', 'PRP'), ('to', 'TO'), ('cut', 'VB'), ('your', 'PRP$'), ('brown', 'JJ'), ('bread', 'NN')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  818
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  821
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  824
LINE NO ->  828
LINE NO ->  829
fish
fish fish 305
[('okay', 'NN'), ('i', 'NN'), ('cut', 'VBD'), ('one', 'CD'), ('fish', 'NN'), ('stick', 'NN'), ('xxx', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  833
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  837
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  842
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  847
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  851
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  855
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  858
rolls
rolls rolls 276
[('a', 'DT'), ('couple', 'NN'), ('of', 'IN'), ('times', 'NNS'), ('he', 'PRP'), ('fell', 'VBD'), ('and', 'CC'), ('rolls', 'NNS')]
['rolls']
('food -> ', [['rolls', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  863
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  866
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  870
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  873
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, -1: 1})
LINE NO ->  880
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  885
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  888
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0})
LINE NO ->  897
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 1, 103: 1, 104: 1, 105: 1, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0})
LINE NO ->  907
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  910
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  917
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0})
LINE NO ->  922
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  925
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  926
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0})
LINE NO ->  931
LINE NO ->  934
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  937
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  940
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  943
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  948
LINE NO ->  951
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  954
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  957
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  961
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  966
flowers
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94703e320>)
[('how', 'WRB'), ('did', 'VBD'), ('the', 'DT'), ('flowers', 'NNS'), ('smell', 'VBP')]
['flowers']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  969
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  972
LINE NO ->  976
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  979
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  983
LINE NO ->  986
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  989
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  992
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  995
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  998
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1001
pink
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947214e18>)
[('purple', 'JJ'), ('ones', 'NNS'), ('and', 'CC'), ('pink', 'VB'), ('ones', 'NNS'), ('and', 'CC'), ('white', 'JJ'), ('ones', 'NNS'), ('and', 'CC'), ('lilac', 'NN'), ('ones', 'NNS')]
['pink']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  1007
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1010
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1013
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1016
grapes
grapes grapes 76
[('looked', 'VBN'), ('like', 'IN'), ('a', 'DT'), ('bunch', 'NN'), ('of', 'IN'), ('concord', 'NN'), ('grapes', 'NNS')]
['grapes']
('food -> ', [['grapes', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1020
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1023
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1026
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, -1: 1})
LINE NO ->  1032
LINE NO ->  1037
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1043
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1047
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1051
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, -1: 1})
LINE NO ->  1057
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1060
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1064
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1068
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1072
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1076
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1079
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1084
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1087
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1091
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1095
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1106
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1109
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1113
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1116
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1120
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, -1: 1})
LINE NO ->  1126
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1131
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1134
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1138
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1152
fish
fish fish 305
[('i', 'NN'), ('want', 'VBP'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1156
LINE NO ->  1159
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1163
fish
fish fish 305
[('did', 'VBD'), ('you', 'PRP'), ('see', 'VB'), ('the', 'DT'), ('fish', 'JJ'), ('man', 'NN'), ('go', 'VBP'), ('home', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1168
fish
fish fish 305
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('to', 'TO'), ('go', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1172
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1175
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  1185
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1189
LINE NO ->  1192
LINE NO ->  1193
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  1197
LINE NO ->  1200
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1210
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1213
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1217
fish
fish fish 305
[('we', 'PRP'), ('can', 'MD'), ('we', 'PRP'), ('can', 'MD'), ('run', 'VB'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  1220
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470fe4d0>)
[('then', 'RB'), ('we', 'PRP'), ('can', 'MD'), ('run', 'VB'), ('back', 'RB'), ('home', 'NN'), ('with', 'IN'), ('our', 'PRP$'), ('feet', 'NNS'), ('like', 'IN'), ('like', 'IN'), ('like', 'IN'), ('like', 'IN'), ('i', 'NN'), ('always', 'RB'), ('do', 'VBP')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0})
LINE NO ->  1226
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  1232
LINE NO ->  1238
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1241
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1250
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  1255
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1262
bear
bear bear 130
[('brad', 'NN'), ('should', 'MD'), ('get', 'VB'), ('out', 'RP'), ('his', 'PRP$'), ('berenstein', 'NN'), ('bear', 'IN'), ('oh', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('going', 'VBG'), ('t', 'NN'), ('a', 'DT'), ('have', 'VBP'), ('to', 'TO'), ('let', 'VB'), ('ma', 'PRP'), ('read', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('that', 'IN'), ('ll', 'NN'), ('tell', 'VB'), ('her', 'PRP$'), ('what', 'WP'), ('thunder', 'NN'), ('is', 'VBZ'), ('huh', 'JJ')]
['bear']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 1, 124: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0})
LINE NO ->  1272
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1276
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1279
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1282
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1287
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0})
LINE NO ->  1293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1299
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  1306
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1309
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  1316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 1, 84: 1, 85: 1, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 1, 104: 1, 105: 1, 106: 1, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 1, 113: 1, 114: 1, 115: 1, 116: 1, 117: 1, 118: 1, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0})
LINE NO ->  1327
LINE NO ->  1331
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947143170>)
[('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('trying', 'VBG'), ('to', 'TO'), ('find', 'VB'), ('something', 'NN'), ('that', 'WDT'), ('was', 'VBD'), ('yellow', 'JJ'), ('outside', 'RB'), ('in', 'IN'), ('the', 'DT'), ('dark', 'NN'), ('all', 'DT'), ('by', 'IN'), ('itself', 'PRP')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0})
LINE NO ->  1339
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1342
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1347
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1350
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1353
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1356
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1359
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1362
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1365
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1368
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1371
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1374
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  1379
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1384
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1387
LINE NO ->  1388
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1391
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1394
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1399
LINE NO ->  1402
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1405
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1409
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1412
milk
milk milk 46
[('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('i', 'JJ'), ('m', 'VBP'), ('all', 'DT'), ('done', 'VBN'), ('though', 'IN'), ('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  1417
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1420
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1421
LINE NO ->  1424
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1428
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1435
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1438
LINE NO ->  1441
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1444
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, -1: 1})
LINE NO ->  1450
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1453
LINE NO ->  1458
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1462
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1465
LINE NO ->  1468
milk
milk milk 46
[('here', 'RB'), ('s', 'VB'), ('your', 'PRP$'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1475
LINE NO ->  1479
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1480
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1484
LINE NO ->  1488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0})
LINE NO ->  1497
LINE NO ->  1499
honey
honey honey 304
[('well', 'RB'), ('honey', 'NN'), ('i', 'NN'), ('don', 'VBP'), ('t', 'JJ'), ('think', 'VBP'), ('we', 'PRP'), ('should', 'MD'), ('go', 'VB')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1505
fish
fish fish 305
[('yyy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1508
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  1513
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 1, 95: 1, 96: 1, 97: 0, 98: 1, 99: 1, 100: 1, 101: 1, 102: 1, 103: 0, 104: 0, 105: 0, -1: 1})
LINE NO ->  1523
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1527
cream
cream cream 72
[('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('mommy', 'NN'), ('i', 'NN'), ('m', 'VBP'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1532
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1536
cream
cream cream 72
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')]
['cream']
('food -> ', [])
ice cream bar
ice cream bar ice cream bar 303
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')]
['ice', 'cream', 'bar']
('food -> ', [['ice cream bar', 'Dairy and Egg Products']])
ice cream
ice cream ice cream 265
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('ice', 'JJ'), ('cream', 'NN'), ('bar', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream bar', 'Dairy and Egg Products'], ['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1539
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1543
LINE NO ->  1546
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1551
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  1558
LINE NO ->  1561
cream
cream cream 72
[('want', 'VB'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('too', 'RB')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('want', 'VB'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('too', 'RB')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1564
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1568
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('is', 'VBZ'), ('better', 'RBR')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('is', 'VBZ'), ('better', 'RBR')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1572
cream
cream cream 72
[('ma', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('ma', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0})
LINE NO ->  1578
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1584
cream
cream cream 72
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['cream']
('food -> ', [])
fish
fish fish 305
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
ice cream
ice cream ice cream 265
[('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('and', 'CC'), ('get', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN')]
['ice', 'cream']
('food -> ', [['fish', 'Finfish and Shellfish Products'], ['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  1589
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1592
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1598
fish
fish fish 305
[('ma', 'NN'), ('you', 'PRP'), ('wan', 'VBP'), ('t', 'RB'), ('go', 'VBP'), ('to', 'TO'), ('the', 'DT'), ('fish', 'JJ'), ('store', 'NN'), ('with', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('my', 'PRP$'), ('mama', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1603
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1606
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1609
LINE NO ->  1612
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1615
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, -1: 1})
LINE NO ->  1618
LINE NO ->  1621
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1625
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1629
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1633
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1638
water
water water 18
[('um', 'JJ'), ('mommy', 'NN'), ('i', 'NN'), ('wan', 'VBP'), ('t', 'NN'), ('t', 'NN'), ('a', 'DT'), ('bring', 'NN'), ('my', 'PRP$'), ('new', 'JJ'), ('water', 'NN'), ('gun', 'NN'), ('to', 'TO'), ('the', 'DT'), ('preschool', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0})
LINE NO ->  1643
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0})
LINE NO ->  1648
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1652
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1657
LINE NO ->  1658
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1662
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1666
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1671
LINE NO ->  1672
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1673
LINE NO ->  1674
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1679
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1682
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1683
LINE NO ->  1686
LINE NO ->  1691
LINE NO ->  1692
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1696
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1701
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1705
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1709
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1712
cream
cream cream 72
[('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
cake
cake cake 412
[('do', 'VB'), ('you', 'PRP'), ('wan', 'VB'), ('t', 'JJ'), ('t', 'NN'), ('a', 'DT'), ('go', 'NN'), ('to', 'TO'), ('the', 'DT'), ('store', 'NN'), ('and', 'CC'), ('i', 'JJ'), ('won', 'VBD'), ('t', 'JJ'), ('get', 'NN'), ('candy', 'NN'), ('and', 'CC'), ('i', 'NN'), ('ll', 'VBP'), ('get', 'VB'), ('just', 'RB'), ('ice', 'JJ'), ('cream', 'NN'), ('or', 'CC'), ('cake', 'VB')]
['cake']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 0, 91: 0, 92: 0, 93: 0, 94: 1, 95: 1, 96: 1, 97: 1, 98: 0, 99: 0, 100: 0, -1: 1})
LINE NO ->  1721
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1725
milk
milk milk 46
[('come', 'VB'), ('up', 'RP'), ('here', 'RB'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1728
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1731
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1736
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1739
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1742
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1745
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0})
LINE NO ->  1754
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1758
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94713e6c8>)
[('we', 'PRP'), ('were', 'VBD'), ('about', 'RB'), ('to', 'TO'), ('find', 'VB'), ('out', 'RP'), ('what', 'WP'), ('the', 'DT'), ('name', 'NN'), ('of', 'IN'), ('the', 'DT'), ('little', 'JJ'), ('bells', 'NNS'), ('flower', 'NN'), ('is', 'VBZ'), ('xxx', 'PDT'), ('a', 'DT'), ('man', 'NN'), ('going', 'VBG'), ('by', 'IN'), ('me', 'PRP'), ('says', 'VBZ'), ('xxx', 'JJ'), ('blue', 'NN'), ('bells', 'NNS')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 1, 108: 1, 109: 1, 110: 1, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0})
LINE NO ->  1767
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1768
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1771
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1772
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  1778
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  1784
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1788
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  1794
LINE NO ->  1796
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1799
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1802
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1805
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1809
LINE NO ->  1813
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1817
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1822
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1823
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  1826
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1831
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1834
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1839
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1843
LINE NO ->  1847
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1852
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1856
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1861
LINE NO ->  1865
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0})
LINE NO ->  1868
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1871
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1875
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1878
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1881
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1886
LINE NO ->  1889
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1892
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1895
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471f13b0>)
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('my', 'PRP$'), ('brown', 'JJ'), ('boots', 'NNS')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1898
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  1901
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1905
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1911
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1914
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1917
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1920
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  1923
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0})
LINE NO ->  1928
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947134128>)
[('you', 'PRP'), ('had', 'VBD'), ('red', 'VBN'), ('ones', 'NNS'), ('and', 'CC'), ('you', 'PRP'), ('had', 'VBD'), ('blue', 'VBN'), ('ones', 'NNS')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1933
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  1934
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471340e0>)
[('you', 'PRP'), ('never', 'RB'), ('had', 'VBD'), ('any', 'DT'), ('brown', 'JJ'), ('boots', 'NNS')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1937
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1940
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1943
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471f1908>)
[('the', 'DT'), ('brown', 'JJ'), ('work', 'NN'), ('shoes', 'NNS')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1946
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  1952
LINE NO ->  1953
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  1960
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1961
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1965
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1970
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1973
LINE NO ->  1976
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  1979
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1982
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  1987
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1991
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1992
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1995
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1998
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2002
LINE NO ->  2003
LINE NO ->  2004
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2005
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2009
LINE NO ->  2013
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2016
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947134368>)
[('you', 'PRP'), ('got', 'VBD'), ('them', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('wrong', 'JJ'), ('feet', 'NNS')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2020
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947145098>)
[('you', 'PRP'), ('got', 'VBD'), ('the', 'DT'), ('shoes', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('wrong', 'JJ'), ('feet', 'NNS')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  2025
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2028
LINE NO ->  2032
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  2035
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2038
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94703ef80>)
[('mommy', 'NN'), ('is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('right', 'JJ'), ('feet', 'NNS')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  2043
LINE NO ->  2046
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2049
LINE NO ->  2052
LINE NO ->  2055
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2059
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  2063
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947152908>)
[('is', 'VBZ'), ('it', 'PRP'), ('is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('right', 'JJ'), ('feet', 'NNS')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  2068
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  2071
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  2076
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  2080
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947104830>)
[('is', 'VBZ'), ('this', 'DT'), ('the', 'DT'), ('right', 'JJ'), ('feet', 'NNS')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  2084
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471e5950>)
[('he', 'PRP'), ('knows', 'VBZ'), ('them', 'PRP'), ('and', 'CC'), ('they', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('hard', 'JJ')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2089
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2092
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2095
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2098
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  2102
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2105
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  2109
LINE NO ->  2113
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2116
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2120
cream
cream cream 72
[('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['cream']
('food -> ', [])
fish
fish fish 305
[('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
ice cream
ice cream ice cream 265
[('kind', 'NN'), ('of', 'IN'), ('ice', 'NN'), ('cream', 'NN'), ('you', 'PRP'), ('going', 'VBG'), ('t', 'VB'), ('a', 'DT'), ('get', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'NN'), ('store', 'NN')]
['ice', 'cream']
('food -> ', [['fish', 'Finfish and Shellfish Products'], ['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  2126
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
loading solution set
calculating
set([(454, (20, 25)), (220, (16, 22)), (1537, (20, 33)), (433, (11, 16)), (1413, (52, 56)), (471, (6, 11)), (2121, (14, 23)), (457, (10, 15)), (181, (7, 13)), (725, (17, 22)), (1585, (54, 63)), (477, (14, 19)), (1726, (34, 38)), (271, (15, 26)), (1519, (98, 103)), (159, (16, 22)), (159, (26, 35)), (1713, (81, 90)), (249, (6, 11)), (1562, (15, 24)), (721, (18, 23)), (429, (6, 10)), (1713, (94, 98)), (1573, (53, 62)), (1579, (14, 19)), (461, (20, 25)), (451, (12, 17)), (228, (14, 24)), (830, (21, 31)), (1017, (30, 44)), (1469, (18, 22)), (1524, (21, 26)), (793, (23, 28)), (1713, (57, 62)), (513, (6, 14)), (1593, (9, 14)), (185, (51, 57)), (379, (14, 24)), (1528, (26, 35)), (675, (14, 26)), (1569, (6, 15)), (775, (30, 39)), (373, (39, 51)), (438, (20, 26)), (813, (30, 41)), (169, (6, 12)), (1582, (18, 23))])
[((159, (16, 22)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((159, (26, 35)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((169, (6, 12)), '*GMA:\tbutter please .\n'), ((181, (7, 13)), '*CHI:\t<butter xxx> [>] .\n'), ((185, (51, 57)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((220, (16, 22)), '*MOT:\t<you want catsup> [<] ?\n'), ((228, (14, 24)), '*MOT:\ton your fish cakes ?\n'), ((249, (6, 11)), '*CHI:\tjuice me [!] me .\n'), ((271, (15, 26)), "*MOT:\t&-um the brown bread's in there .\n"), ((373, (39, 51)), '*MOT:\t<Brad made> [//] helped make the tartar sauce .\n'), ((379, (14, 24)), '*MOT:\tall the mayonnaise in the jar .\n'), ((429, (6, 10)), '*MOT:\tmilk first ?\n'), ((433, (11, 16)), '*MOT:\tthen juice ?\n'), ((438, (20, 26)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((451, (12, 17)), '*CHI:\tfirst juice .\n'), ((454, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((457, (10, 15)), '*MOT:\tthe juice first ?\n'), ((461, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((471, (6, 11)), '*CHI:\tjuice please [?] .\n'), ((477, (14, 19)), '*CHI:\t<enough juice> [>] .\n'), ((513, (6, 14)), '*GPA:\ttomatoes ?\n'), ((675, (14, 26)), '*MOT:\toh this tartar sauce (..) +...\n'), ((721, (18, 23)), '*CHI:\tyou gave me candy .\n'), ((725, (17, 22)), '*MOT:\tI gave you candy .\n'), ((775, (30, 39)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((793, (23, 28)), '*MOT:\tdid you eat some beans ?\n'), ((813, (30, 41)), '*MOT:\tyou want me to cut your brown bread ?\n'), ((830, (21, 31)), '*MOT:\tokay I cut one fish stick [?] xxx .\n'), ((1017, (30, 44)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1413, (52, 56)), "*CHI:\t<I'm all> [/] I'm all done though I want some milk .\n"), ((1469, (18, 22)), "*MOT:\there's your milk .\n"), ((1519, (98, 103)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1524, (21, 26)), '*GMA:\tyou had enough candy today Lovey .\n'), ((1528, (26, 35)), "*CHI:\tMommy I'm gonna get ice cream .\n"), ((1537, (20, 33)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1562, (15, 24)), '*MOT:\t<want an ice cream too> [>] .\n'), ((1569, (6, 15)), '*GMA:\tice cream is better .\n'), ((1573, (53, 62)), '*CHI:\tMa I wan(t) (t)a go to the store and get <some ice cream> [>] .\n'), ((1579, (14, 19)), '*GMA:\t<but no candy> [<] .\n'), ((1582, (18, 23)), '*CHI:\tno just [?] candy .\n'), ((1585, (54, 63)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1593, (9, 14)), '*GMA:\tno candy .\n'), ((1713, (57, 62)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (81, 90)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (94, 98)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1726, (34, 38)), '*MOT:\tcome up here and drink your milk (.) .\n'), ((2121, (14, 23)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n')]
set([(193, (-1, 4)), (1579, (21, 24)), (859, (-1, 4)), (1653, (6, 10)), (483, (6, 10)), (1941, (23, 28)), (120, (27, 31)), (1132, (6, 10)), (181, (7, 13)), (1918, (23, 27)), (1944, (10, 20)), (987, (11, 14)), (709, (6, 8)), (562, (11, 16)), (46, (42, 45)), (340, (-1, 4)), (1697, (-1, 4)), (1176, (24, 28)), (1924, (30, 35)), (1406, (6, 11)), (376, (-1, 4)), (911, (22, 26)), (797, (30, 33)), (2021, (18, 23)), (874, (34, 37)), (1317, (50, 53)), (737, (11, 16)), (1017, (38, 45)), (329, (-1, 4)), (1153, (-1, 4)), (1713, (-1, 4)), (1644, (64, 67)), (1693, (12, 17)), (1442, (12, 15)), (1853, (10, 13)), (106, (71, 75)), (787, (6, 8)), (600, (-1, 4)), (1797, (-1, 4)), (152, (6, 9)), (1273, (6, 9)), (1310, (41, 47)), (1205, (9, 12)), (464, (6, 10)), (2006, (6, 9)), (1988, (6, 9)), (429, (-1, 4)), (1433, (-1, 4)), (1500, (12, 17)), (2099, (21, 24)), (1693, (18, 21)), (1800, (20, 25)), (1971, (-1, 4)), (1848, (33, 37)), (1372, (6, 10)), (1348, (10, 13)), (1961, (6, 9)), (1251, (59, 66)), (1634, (6, 9)), (734, (6, 10)), (1002, (40, 50)), (531, (-1, 4)), (1380, (-1, 4)), (1208, (6, 13)), (641, (24, 27)), (1348, (6, 9)), (513, (-1, 4)), (1283, (30, 33)), (562, (43, 46)), (1073, (40, 43)), (321, (19, 24)), (1759, (66, 72)), (34, (36, 42)), (775, (-1, 4)), (1489, (78, 85)), (597, (6, 10)), (1759, (60, 65)), (1110, (21, 24)), (911, (51, 56)), (2085, (-1, 4)), (304, (15, 21)), (1061, (10, 13)), (156, (14, 18)), (696, (19, 24)), (451, (12, 17)), (848, (6, 9)), (501, (39, 44)), (1626, (6, 9)), (1048, (6, 9)), (749, (6, 9)), (1726, (-1, 4)), (967, (30, 35)), (493, (23, 26)), (501, (-1, 4)), (67, (-1, 4)), (941, (6, 9)), (874, (45, 49)), (567, (39, 44)), (358, (-1, 4)), (352, (10, 15)), (1135, (15, 20)), (775, (40, 43)), (582, (11, 14)), (438, (20, 26)), (1509, (57, 60)), (2005, (-1, 4)), (1634, (44, 47)), (628, (-1, 4)), (586, (20, 25)), (1418, (24, 27)), (1145, (39, 46)), (699, (10, 13)), (228, (-1, 4)), (1410, (-1, 4)), (90, (20, 24)), (1280, (6, 11)), (1052, (-1, 4)), (1027, (-1, 4)), (1069, (24, 27)), (1675, (6, 10)), (389, (6, 10)), (1876, (6, 9)), (1722, (14, 17)), (1073, (44, 47)), (952, (12, 19)), (681, (6, 10)), (1732, (-1, 4)), (1117, (-1, 4)), (804, (48, 53)), (1459, (17, 22)), (1021, (6, 8)), (562, (36, 42)), (970, (9, 12)), (1746, (-1, 4)), (1622, (16, 21)), (277, (6, 9)), (1307, (-1, 4)), (990, (11, 14)), (1573, (33, 38)), (144, (11, 16)), (768, (8, 11)), (1459, (35, 38)), (2106, (10, 13)), (600, (23, 26)), (574, (-1, 4)), (1294, (6, 9)), (1993, (30, 33)), (678, (20, 25)), (1667, (11, 14)), (1354, (10, 13)), (1027, (72, 75)), (926, (6, 9)), (111, (10, 13)), (1607, (-1, 4)), (1827, (6, 9)), (382, (6, 8)), (1208, (14, 17)), (918, (42, 45)), (1069, (18, 23)), (621, (6, 10)), (480, (14, 21)), (1451, (9, 12)), (1519, (-1, 4)), (1021, (9, 12)), (1413, (52, 56)), (574, (70, 75)), (1317, (112, 119)), (1429, (6, 11)), (1366, (18, 24)), (1017, (46, 49)), (1092, (6, 9)), (594, (25, 28)), (489, (-1, 4)), (999, (10, 16)), (106, (62, 66)), (1893, (-1, 4)), (1519, (98, 103)), (644, (28, 35)), (938, (-1, 4)), (56, (10, 13)), (608, (6, 10)), (1779, (-1, 4)), (551, (10, 15)), (987, (6, 10)), (1599, (-1, 4)), (2021, (37, 41)), (321, (6, 10)), (1993, (-1, 4)), (1164, (34, 38)), (1879, (22, 25)), (2085, (36, 40)), (1938, (6, 9)), (1613, (-1, 4)), (766, (6, 9)), (185, (114, 117)), (1890, (11, 16)), (889, (6, 9)), (169, (13, 19)), (1596, (36, 39)), (1186, (19, 28)), (1509, (50, 56)), (523, (10, 13)), (2064, (10, 13)), (1069, (-1, 4)), (852, (21, 25)), (1915, (10, 13)), (1218, (37, 47)), (1058, (6, 8)), (56, (6, 9)), (1596, (16, 19)), (1410, (29, 32)), (749, (10, 13)), (952, (20, 23)), (1983, (6, 10)), (705, (-1, 4)), (2005, (27, 30)), (967, (18, 25)), (586, (-1, 4)), (935, (-1, 4)), (1176, (-1, 4)), (457, (10, 15)), (996, (-1, 4)), (193, (21, 27)), (531, (17, 23)), (1317, (32, 36)), (1385, (-1, 4)), (379, (32, 35)), (852, (-1, 4)), (79, (6, 9)), (471, (12, 18)), (1585, (54, 67)), (344, (18, 22)), (542, (35, 38)), (830, (6, 10)), (1242, (6, 10)), (2036, (14, 19)), (1818, (56, 60)), (497, (11, 14)), (46, (46, 49)), (1562, (15, 29)), (1024, (11, 14)), (662, (-1, 4)), (2081, (31, 34)), (486, (6, 10)), (1983, (32, 39)), (1639, (40, 49)), (1902, (13, 17)), (1999, (10, 13)), (1127, (-1, 4)), (1743, (6, 10)), (83, (-1, 4)), (1061, (6, 9)), (1552, (55, 59)), (2093, (6, 9)), (1524, (21, 26)), (2014, (-1, 4)), (1713, (57, 62)), (1451, (6, 8)), (1310, (27, 33)), (144, (21, 24)), (1002, (26, 30)), (752, (6, 9)), (506, (6, 9)), (1832, (9, 13)), (1375, (11, 14)), (1429, (20, 24)), (859, (37, 42)), (977, (-1, 4)), (1300, (19, 25)), (958, (21, 24)), (1565, (-1, 4)), (1052, (72, 76)), (1218, (10, 14)), (1983, (56, 60)), (684, (11, 16)), (1713, (94, 98)), (531, (40, 45)), (2121, (14, 23)), (1667, (6, 10)), (2072, (-1, 4)), (197, (-1, 4)), (74, (61, 64)), (433, (-1, 4)), (574, (100, 105)), (1596, (9, 15)), (1117, (27, 34)), (413, (6, 8)), (2060, (6, 9)), (1814, (6, 9)), (993, (22, 28)), (106, (76, 82)), (438, (39, 42)), (477, (21, 24)), (1480, (11, 14)), (253, (14, 17)), (344, (12, 15)), (2096, (9, 12)), (1044, (34, 40)), (249, (6, 11)), (557, (10, 13)), (864, (7, 10)), (752, (10, 13)), (574, (29, 32)), (867, (10, 13)), (74, (31, 35)), (856, (36, 39)), (1121, (45, 50)), (1857, (6, 9)), (610, (10, 14)), (1929, (41, 45)), (1996, (18, 21)), (34, (6, 11)), (1659, (-1, 4)), (1380, (49, 53)), (793, (-1, 4)), (1052, (11, 17)), (379, (14, 24)), (1065, (12, 15)), (1459, (-1, 4)), (1773, (-1, 4)), (1077, (10, 13)), (335, (6, 8)), (1160, (11, 18)), (1772, (6, 9)), (304, (6, 10)), (1983, (25, 31)), (822, (11, 14)), (721, (18, 23)), (1251, (39, 45)), (1354, (-1, 4)), (1317, (83, 86)), (1540, (6, 10)), (591, (14, 19)), (594, (42, 48)), (125, (-1, 4)), (1406, (-1, 4)), (97, (6, 10)), (1759, (107, 111)), (520, (-1, 4)), (662, (6, 9)), (93, (6, 11)), (1726, (34, 38)), (542, (29, 34)), (1713, (20, 24)), (1164, (-1, 4)), (1866, (54, 59)), (1248, (6, 10)), (1779, (51, 55)), (772, (6, 13)), (1214, (6, 8)), (2047, (-1, 4)), (1630, (-1, 4)), (1803, (6, 9)), (417, (6, 9)), (603, (45, 51)), (1392, (14, 18)), (1251, (-1, 4)), (618, (6, 10)), (385, (-1, 4)), (2039, (30, 34)), (728, (30, 35)), (1935, (24, 29)), (1585, (30, 40)), (1912, (10, 13)), (228, (14, 18)), (1245, (6, 13)), (547, (6, 9)), (451, (-1, 4)), (1300, (-1, 4)), (1121, (-1, 4)), (759, (8, 11)), (1966, (-1, 4)), (1954, (25, 30)), (721, (-1, 4)), (1823, (6, 9)), (1882, (10, 13)), (368, (-1, 4)), (1221, (41, 45)), (542, (-1, 4)), (257, (6, 10)), (321, (25, 28)), (454, (20, 25)), (1622, (-1, 4)), (938, (6, 10)), (1429, (-1, 4)), (1506, (6, 9)), (898, (102, 106)), (1906, (25, 30)), (2056, (10, 13)), (889, (48, 51)), (1317, (103, 107)), (804, (12, 17)), (1436, (-1, 4)), (325, (6, 11)), (1800, (6, 9)), (392, (-1, 4)), (927, (39, 45)), (1445, (21, 26)), (468, (-1, 4)), (1472, (-1, 4)), (1649, (6, 10)), (1389, (16, 19)), (1773, (10, 17)), (421, (-1, 4)), (678, (-1, 4)), (1899, (21, 25)), (1533, (6, 9)), (1425, (-1, 4)), (1357, (6, 10)), (1644, (11, 17)), (1590, (6, 12)), (1918, (13, 16)), (898, (85, 88)), (1590, (-1, 4)), (1263, (41, 45)), (594, (20, 24)), (51, (-1, 1)), (220, (16, 23)), (1552, (-1, 4)), (1310, (6, 13)), (958, (-1, 4)), (523, (-1, 4)), (1372, (-1, 4)), (1211, (6, 13)), (332, (6, 9)), (257, (11, 14)), (993, (-1, 4)), (1002, (13, 17)), (1027, (65, 71)), (185, (51, 57)), (228, (19, 24)), (125, (27, 30)), (613, (-1, 4)), (1221, (51, 54)), (1169, (30, 40)), (970, (6, 8)), (1038, (-1, 4)), (249, (-1, 4)), (1599, (30, 40)), (1073, (-1, 4)), (2117, (23, 30)), (185, (14, 17)), (1153, (28, 38)), (539, (6, 9)), (1954, (10, 13)), (1489, (32, 35)), (1489, (52, 57)), (654, (75, 78)), (725, (17, 22)), (1080, (46, 51)), (321, (11, 14)), (493, (-1, 4)), (497, (6, 10)), (115, (11, 15)), (2064, (36, 40)), (74, (20, 26)), (2014, (25, 30)), (1827, (10, 13)), (1528, (16, 21)), (185, (10, 13)), (1173, (-1, 4)), (1002, (18, 21)), (1941, (17, 22)), (1840, (-1, 4)), (1683, (6, 9)), (90, (25, 28)), (2033, (-1, 4)), (159, (-1, 4)), (220, (-1, 4)), (809, (-1, 4)), (1239, (-1, 4)), (886, (-1, 4)), (1121, (79, 82)), (1607, (18, 21)), (1673, (6, 9)), (1818, (50, 55)), (1710, (-1, 4)), (1080, (-1, 4)), (644, (-1, 4)), (2069, (6, 10)), (144, (35, 39)), (1139, (32, 36)), (147, (10, 13)), (1194, (27, 30)), (813, (30, 41)), (265, (-1, 4)), (90, (-1, 4)), (756, (-1, 4)), (2017, (32, 36)), (433, (11, 16)), (1789, (18, 21)), (1145, (-1, 4)), (2081, (25, 30)), (1726, (39, 42)), (1307, (24, 27)), (1737, (6, 10)), (271, (15, 20)), (1375, (-1, 4)), (1360, (-1, 4)), (489, (32, 35)), (867, (6, 9)), (212, (-1, 4)), (1565, (30, 35)), (1107, (10, 15)), (591, (27, 32)), (159, (16, 22)), (1221, (27, 31)), (1011, (-1, 4)), (1277, (6, 9)), (1169, (-1, 4)), (1280, (32, 39)), (208, (13, 16)), (699, (6, 9)), (2006, (10, 13)), (2093, (10, 13)), (1769, (6, 12)), (923, (6, 10)), (1896, (-1, 4)), (1866, (41, 46)), (637, (6, 11)), (232, (11, 14)), (1369, (18, 25)), (1524, (27, 32)), (1194, (12, 16)), (1014, (26, 32)), (881, (-1, 4)), (152, (15, 18)), (477, (14, 20)), (1944, (21, 26)), (781, (6, 13)), (2127, (6, 9)), (1935, (-1, 4)), (1980, (-1, 4)), (1160, (6, 10)), (591, (-1, 4)), (1675, (11, 14)), (1729, (6, 11)), (881, (18, 22)), (1540, (-1, 4)), (1186, (-1, 4)), (34, (62, 65)), (665, (14, 17)), (373, (39, 51)), (662, (10, 13)), (169, (6, 12)), (1582, (18, 23)), (1899, (26, 31)), (1294, (10, 13)), (365, (30, 33)), (1017, (20, 25)), (344, (25, 28)), (2121, (39, 42)), (232, (6, 10)), (172, (-1, 4)), (156, (19, 22)), (1759, (82, 85)), (838, (-1, 4)), (1300, (38, 44)), (1918, (-1, 4)), (886, (29, 32)), (135, (14, 19)), (438, (-1, 4)), (1514, (9, 12)), (597, (11, 14)), (1132, (11, 18)), (1519, (62, 68)), (2090, (-1, 4)), (859, (19, 24)), (129, (14, 19)), (531, (59, 63)), (1145, (25, 29)), (385, (21, 28)), (1080, (30, 34)), (756, (17, 20)), (1263, (82, 85)), (398, (27, 30)), (1288, (86, 92)), (523, (48, 54)), (308, (-1, 4)), (1769, (15, 18)), (1977, (-1, 4)), (1579, (14, 20)), (2064, (14, 17)), (316, (6, 9)), (1363, (-1, 4)), (516, (6, 9)), (1713, (35, 40)), (270, (6, 9)), (1307, (17, 23)), (1893, (23, 28)), (1921, (11, 14)), (1096, (18, 23)), (1702, (11, 16)), (1934, (6, 11)), (1848, (-1, 4)), (1463, (-1, 4)), (1524, (-1, 4)), (1593, (9, 14)), (421, (6, 10)), (670, (48, 53)), (1395, (6, 9)), (501, (31, 38)), (16, (6, 9)), (1380, (29, 35)), (1528, (22, 25)), (1999, (6, 9)), (654, (94, 99)), (2056, (6, 9)), (1924, (40, 44)), (22, (6, 9)), (980, (-1, 4)), (1547, (6, 10)), (2036, (-1, 1)), (1073, (34, 39)), (1537, (20, 36)), (1332, (56, 62)), (819, (6, 9)), (1962, (-1, 4)), (1653, (11, 14)), (654, (59, 66)), (1604, (-1, 4)), (793, (23, 28)), (1579, (-1, 4)), (39, (6, 9)), (1663, (6, 10)), (790, (-1, 4)), (1421, (6, 9)), (1537, (16, 19)), (2114, (6, 9)), (1121, (25, 30)), (1573, (53, 63)), (101, (17, 20)), (1413, (11, 15)), (1993, (19, 24)), (29, (6, 9)), (1469, (18, 22)), (822, (6, 10)), (804, (54, 57)), (1639, (71, 74)), (1941, (-1, 4)), (1181, (37, 42)), (1351, (6, 9)), (513, (6, 14)), (1096, (-1, 4)), (1139, (-1, 4)), (373, (12, 17)), (889, (30, 34)), (1343, (17, 24)), (97, (28, 32)), (2036, (20, 23)), (1740, (-1, 4)), (368, (14, 17)), (696, (-1, 4)), (843, (48, 52)), (1205, (6, 8)), (1569, (6, 15)), (859, (44, 47)), (1746, (26, 29)), (1340, (-1, 4)), (1929, (-1, 4)), (725, (-1, 4)), (1310, (48, 51)), (1227, (40, 45)), (874, (68, 72)), (1077, (6, 9)), (395, (6, 9)), (471, (6, 11)), (1389, (10, 15)), (1879, (16, 21)), (325, (-1, 4)), (1585, (-1, 4)), (1947, (9, 12)), (2121, (6, 10)), (554, (6, 10)), (1806, (-1, 4)), (1992, (6, 9)), (1697, (6, 10)), (197, (6, 12)), (1639, (50, 53)), (1058, (9, 12)), (437, (6, 9)), (1713, (81, 90)), (2077, (6, 9)), (918, (36, 41)), (2117, (31, 34)), (1896, (26, 31)), (1164, (39, 42)), (483, (-1, 4)), (641, (-1, 4)), (654, (35, 41)), (461, (-1, 4)), (317, (10, 13)), (1283, (23, 29)), (1755, (10, 17)), (1017, (-1, 4)), (147, (6, 9)), (2021, (-1, 4)), (772, (14, 17)), (2017, (-1, 4)), (1993, (25, 29)), (1996, (11, 17)), (1740, (6, 9)), (1392, (23, 29)), (557, (6, 9)), (220, (24, 27)), (1024, (6, 10)), (1332, (78, 82)), (1372, (26, 29)), (775, (30, 39)), (358, (26, 30)), (163, (-1, 4)), (2121, (50, 60)), (1866, (9, 15)), (784, (6, 9)), (454, (-1, 4)), (1918, (28, 31)), (2026, (-1, 4)), (1872, (-1, 4)), (843, (-1, 4)), (416, (6, 9)), (1869, (6, 10)), (648, (-1, 4)), (1227, (-1, 4)), (1251, (14, 21)), (574, (49, 52)), (106, (35, 40)), (295, (18, 25)), (1706, (-1, 4)), (159, (26, 35)), (1181, (32, 36)), (1343, (-1, 4)), (2117, (-1, 4)), (1562, (-1, 4)), (1924, (15, 18)), (1110, (12, 20)), (461, (20, 25)), (634, (6, 11)), (911, (6, 11)), (1732, (23, 26)), (784, (-1, 4)), (728, (-1, 4)), (1239, (24, 31)), (1785, (6, 9)), (813, (-1, 4)), (624, (6, 9)), (874, (-1, 4)), (395, (18, 23)), (64, (-1, 4)), (1506, (27, 37)), (185, (92, 97)), (405, (6, 10)), (670, (-1, 4)), (2103, (-1, 4)), (197, (24, 27)), (1481, (16, 21)), (1135, (-1, 4)), (1680, (6, 9)), (1085, (6, 10)), (859, (9, 15)), (1227, (32, 39)), (819, (10, 13)), (1935, (30, 35)), (908, (6, 9)), (1227, (10, 13)), (1547, (-1, 4)), (1768, (6, 9)), (1114, (6, 11)), (67, (34, 39)), (1052, (63, 67)), (67, (40, 43)), (705, (29, 35)), (140, (-1, 4)), (944, (6, 9)), (224, (6, 10)), (1573, (64, 67)), (1263, (123, 130)), (1634, (-1, 4)), (1607, (13, 17)), (176, (-1, 4)), (1818, (-1, 4)), (1256, (-1, 4)), (405, (-1, 4)), (111, (6, 9)), (253, (10, 13)), (438, (32, 38)), (871, (-1, 4)), (856, (-1, 4)), (1528, (26, 35)), (120, (6, 10)), (1500, (-1, 4)), (1280, (48, 51)), (712, (-1, 4)), (996, (42, 45)), (654, (42, 47)), (1519, (94, 97)), (1280, (-1, 4)), (665, (-1, 4)), (1088, (6, 9)), (1164, (22, 30)), (675, (14, 26)), (2090, (18, 21)), (830, (21, 31)), (600, (27, 30)), (955, (11, 17)), (1983, (49, 55)), (1369, (26, 29)), (1403, (-1, 4)), (1824, (27, 30)), (911, (42, 48)), (990, (6, 10)), (613, (48, 53)), (1201, (-1, 4)), (1616, (-1, 4)), (152, (19, 22)), (1562, (30, 33)), (1835, (10, 15)), (1706, (6, 10)), (1906, (-1, 4)), (1537, (10, 15)), (29, (10, 13)), (1749, (39, 44)), (797, (6, 10)), (325, (17, 20)), (1445, (-1, 4)), (1385, (6, 10)), (509, (6, 9)), (401, (-1, 4)), (1853, (6, 9)), (43, (-1, 4)), (1537, (37, 40)), (1481, (-1, 4)), (429, (6, 10)), (1872, (30, 35)), (687, (-1, 4)), (1008, (10, 16)), (1101, (-1, 4)), (1929, (18, 22)), (271, (21, 28)), (1604, (19, 24)), (1755, (22, 26)), (962, (-1, 4)), (1317, (75, 78)), (554, (11, 14)), (348, (-1, 4)), (923, (11, 14)), (1896, (20, 25)), (1389, (28, 35)), (86, (6, 9)), (1256, (46, 49)), (804, (27, 31)), (1288, (71, 76)), (567, (18, 23)), (418, (-1, 4)), (834, (14, 17)), (240, (-1, 4)), (1759, (41, 45)), (205, (31, 37))])
[((16, (6, 9)), '*CHI:\txxx .\n'), ((22, (6, 9)), '*CHI:\tzzz .\n'), ((29, (6, 9)), '*CHI:\tzzz [>] .\n'), ((29, (10, 13)), '*CHI:\tzzz [>] .\n'), ((34, (6, 11)), "*MOT:\t<he's watching himself in the mirror Mommy (.) singing> [<] .\n"), ((34, (36, 42)), "*MOT:\t<he's watching himself in the mirror Mommy (.) singing> [<] .\n"), ((34, (62, 65)), "*MOT:\t<he's watching himself in the mirror Mommy (.) singing> [<] .\n"), ((39, (6, 9)), '*CHI:\tzzz .\n'), ((43, (-1, 4)), '*CHI:\tBrave Star Brave <Star> [>] .\n'), ((46, (42, 45)), "*MOT:\t<he's singing> [<] very good <isn't he> [>] ?\n"), ((46, (46, 49)), "*MOT:\t<he's singing> [<] very good <isn't he> [>] ?\n"), ((51, (-1, 1)), '*GMA:\t<I was gonna say what is he singing> [<][>] ?\n'), ((56, (6, 9)), '*CHI:\tzzz [<] .\n'), ((56, (10, 13)), '*CHI:\tzzz [<] .\n'), ((64, (-1, 4)), '*CHI:\tBrave Star .\n'), ((67, (-1, 4)), '*MOT:\tBrave Star (.) you sing <so good> [>] .\n'), ((67, (34, 39)), '*MOT:\tBrave Star (.) you sing <so good> [>] .\n'), ((67, (40, 43)), '*MOT:\tBrave Star (.) you sing <so good> [>] .\n'), ((74, (20, 26)), '*GMA:\t<sounded like praise the lord and pass the ammunition> [>] .\n'), ((74, (31, 35)), '*GMA:\t<sounded like praise the lord and pass the ammunition> [>] .\n'), ((74, (61, 64)), '*GMA:\t<sounded like praise the lord and pass the ammunition> [>] .\n'), ((79, (6, 9)), '*CHI:\tzzz <Brave Star Brave Star > [<] .\n'), ((83, (-1, 4)), '*CHI:\t<Brave Star > [>] +...\n'), ((86, (6, 9)), '*MOT:\tzzz <Brave Star Brave Star > [<] +...\n'), ((90, (-1, 4)), "*MOT:\tthat's a good song (.) .\n"), ((90, (20, 24)), "*MOT:\tthat's a good song (.) .\n"), ((90, (25, 28)), "*MOT:\tthat's a good song (.) .\n"), ((93, (6, 11)), "*MOT:\twho's Brave Star Brad ?\n"), ((97, (6, 10)), "*CHI:\the's in my Brave Star book .\n"), ((97, (28, 32)), "*CHI:\the's in my Brave Star book .\n"), ((101, (17, 20)), '*GMA:\t<oh right> [>] .\n'), ((106, (35, 40)), "*CHI:\t<xxx singing [?]> [<] [///] <don't> [/] don't open that book [>] it's broken .\n"), ((106, (62, 66)), "*CHI:\t<xxx singing [?]> [<] [///] <don't> [/] don't open that book [>] it's broken .\n"), ((106, (71, 75)), "*CHI:\t<xxx singing [?]> [<] [///] <don't> [/] don't open that book [>] it's broken .\n"), ((106, (76, 82)), "*CHI:\t<xxx singing [?]> [<] [///] <don't> [/] don't open that book [>] it's broken .\n"), ((111, (6, 9)), '*GMA:\tzzz [<] .\n'), ((111, (10, 13)), '*GMA:\tzzz [<] .\n'), ((115, (11, 15)), '*MOT:\twhat book ?\n'), ((120, (6, 10)), '*MOT:\t<the Brave Star> [>] book is broken ?\n'), ((120, (27, 31)), '*MOT:\t<the Brave Star> [>] book is broken ?\n'), ((125, (-1, 4)), '*CHI:\t<Brave Star> [<] (.) yep .\n'), ((125, (27, 30)), '*CHI:\t<Brave Star> [<] (.) yep .\n'), ((129, (14, 19)), '*CHI:\tall the pages are falling out of it .\n'), ((135, (14, 19)), '*GMA:\tall the pages are falling out of it ?\n'), ((140, (-1, 4)), '*CHI:\t<xxx it [?]> [>] .\n'), ((144, (11, 16)), '*GMA:\t<xxx will> [<] get you a new book .\n'), ((144, (21, 24)), '*GMA:\t<xxx will> [<] get you a new book .\n'), ((144, (35, 39)), '*GMA:\t<xxx will> [<] get you a new book .\n'), ((147, (6, 9)), '*GMA:\tzzz xxx .\n'), ((147, (10, 13)), '*GMA:\tzzz xxx .\n'), ((152, (6, 9)), '*MOT:\tzzz <zzz oh> [>] .\n'), ((152, (15, 18)), '*MOT:\tzzz <zzz oh> [>] .\n'), ((152, (19, 22)), '*MOT:\tzzz <zzz oh> [>] .\n'), ((156, (14, 18)), "*MOT:\t<you're bad> [>] .\n"), ((156, (19, 22)), "*MOT:\t<you're bad> [>] .\n"), ((159, (-1, 4)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((159, (16, 22)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((159, (26, 35)), '*MOT:\t<you want butter or margarine> [>] ?\n'), ((163, (-1, 4)), '*CHI:\tBrave Star Brave Star Brave Star brave Brad +...\n'), ((169, (6, 12)), '*GMA:\tbutter please .\n'), ((169, (13, 19)), '*GMA:\tbutter please .\n'), ((172, (-1, 4)), '*GMA:\t<why not enjoy it > [<] ?\n'), ((176, (-1, 4)), '*GMA:\tBrave Star +...\n'), ((181, (7, 13)), '*CHI:\t<butter xxx> [>] .\n'), ((185, (10, 13)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((185, (14, 17)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((185, (51, 57)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((185, (92, 97)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((185, (114, 117)), "*GMA:\t<oh no> [<] I like <&m> [//] I don't like my butter that has been left open like that thank <you very much> [>] .\n"), ((193, (-1, 4)), "*GMA:\treally [<] (.) that's disgusting .\n"), ((193, (21, 27)), "*GMA:\treally [<] (.) that's disgusting .\n"), ((197, (-1, 4)), '*GMA:\t<throw that away> [>] .\n'), ((197, (6, 12)), '*GMA:\t<throw that away> [>] .\n'), ((197, (24, 27)), '*GMA:\t<throw that away> [>] .\n'), ((205, (31, 37)), "*MOT:\t<you're> [<] such a good singer .\n"), ((208, (13, 16)), '*CHI:\t<Mama> [>] ?\n'), ((212, (-1, 4)), '*GMA:\t<Brave Star > [<][>] +...\n'), ((220, (-1, 4)), '*MOT:\t<you want catsup> [<] ?\n'), ((220, (16, 23)), '*MOT:\t<you want catsup> [<] ?\n'), ((220, (24, 27)), '*MOT:\t<you want catsup> [<] ?\n'), ((224, (6, 10)), '*CHI:\tyeah .\n'), ((228, (-1, 4)), '*MOT:\ton your fish cakes ?\n'), ((228, (14, 18)), '*MOT:\ton your fish cakes ?\n'), ((228, (19, 24)), '*MOT:\ton your fish cakes ?\n'), ((232, (6, 10)), '*CHI:\tyeah (.) .\n'), ((232, (11, 14)), '*CHI:\tyeah (.) .\n'), ((240, (-1, 4)), '*CHI:\tMama ?\n'), ((249, (-1, 4)), '*CHI:\tjuice me [!] me .\n'), ((249, (6, 11)), '*CHI:\tjuice me [!] me .\n'), ((253, (10, 13)), '*MOT:\t<me me> [>] .\n'), ((253, (14, 17)), '*MOT:\t<me me> [>] .\n'), ((257, (6, 10)), '*MOT:\tokay [>] .\n'), ((257, (11, 14)), '*MOT:\tokay [>] .\n'), ((265, (-1, 4)), '*GMA:\tBrave [!] Star (.) and +...\n'), ((270, (6, 9)), '*MOT:\txxx .\n'), ((271, (15, 20)), "*MOT:\t&-um the brown bread's in there .\n"), ((271, (21, 28)), "*MOT:\t&-um the brown bread's in there .\n"), ((277, (6, 9)), '*MOT:\twan (t)a come out [?] to eat ?\n'), ((295, (18, 25)), '*GMA:\tcome in the kitchen .\n'), ((304, (6, 10)), '*CHI:\ttime for supper .\n'), ((304, (15, 21)), '*CHI:\ttime for supper .\n'), ((308, (-1, 4)), '*GPA:\twhy ?\n'), ((316, (6, 9)), '*GMA:\txxx .\n'), ((317, (10, 13)), '*GPA:\twhy [>] ?\n'), ((321, (6, 10)), '*CHI:\ttime [<] for lunch (.) !\n'), ((321, (11, 14)), '*CHI:\ttime [<] for lunch (.) !\n'), ((321, (19, 24)), '*CHI:\ttime [<] for lunch (.) !\n'), ((321, (25, 28)), '*CHI:\ttime [<] for lunch (.) !\n'), ((325, (-1, 4)), "*GMA:\tisn't that xxx .\n"), ((325, (6, 11)), "*GMA:\tisn't that xxx .\n"), ((325, (17, 20)), "*GMA:\tisn't that xxx .\n"), ((329, (-1, 4)), '*GPA:\tI have_to have supper with you ?\n'), ((332, (6, 9)), '*CHI:\tyep .\n'), ((335, (6, 8)), "*MOT:\toh I didn't even make anything for him .\n"), ((340, (-1, 4)), '*CHI:\tBrave <Star> [>] +...\n'), ((344, (12, 15)), '*MOT:\t<come eat a half > [<] .\n'), ((344, (18, 22)), '*MOT:\t<come eat a half > [<] .\n'), ((344, (25, 28)), '*MOT:\t<come eat a half > [<] .\n'), ((348, (-1, 4)), '*CHI:\tBrave Star (.) Brave Star .\n'), ((352, (10, 15)), "*CHI:\tI'm gonna have two too .\n"), ((358, (-1, 4)), "*GMA:\tif he doesn't we'll help him eat them (.) .\n"), ((358, (26, 30)), "*GMA:\tif he doesn't we'll help him eat them (.) .\n"), ((365, (30, 33)), '*GPA:\thow come you wanted two (.) ?\n'), ((368, (-1, 4)), '*CHI:\tbecause [?] .\n'), ((368, (14, 17)), '*CHI:\tbecause [?] .\n'), ((373, (12, 17)), '*MOT:\t<Brad made> [//] helped make the tartar sauce .\n'), ((373, (39, 51)), '*MOT:\t<Brad made> [//] helped make the tartar sauce .\n'), ((376, (-1, 4)), '*GPA:\tdid he ?\n'), ((379, (14, 24)), '*MOT:\tall the mayonnaise in the jar .\n'), ((379, (32, 35)), '*MOT:\tall the mayonnaise in the jar .\n'), ((382, (6, 8)), '*GMA:\tmm .\n'), ((385, (-1, 4)), '*GPA:\tdid he put his fingers in there ?\n'), ((385, (21, 28)), '*GPA:\tdid he put his fingers in there ?\n'), ((389, (6, 10)), '*MOT:\tnope .\n'), ((392, (-1, 4)), '*MOT:\the was very very good .\n'), ((395, (6, 9)), '*GPA:\txxx I get a spoon xxx .\n'), ((395, (18, 23)), '*GPA:\txxx I get a spoon xxx .\n'), ((398, (27, 30)), '*GMA:\tlearning how to cook huh ?\n'), ((401, (-1, 4)), "*MOT:\tdidn't you help me ?\n"), ((405, (-1, 4)), '*CHI:\tyeah ?\n'), ((405, (6, 10)), '*CHI:\tyeah ?\n'), ((413, (6, 8)), '*GMA:\tmm .\n'), ((416, (6, 9)), '*CHI:\txxx .\n'), ((417, (6, 9)), '*CHI:\txxx .\n'), ((418, (-1, 4)), '*MOT:\twould you like +...\n'), ((421, (-1, 4)), '*CHI:\tyeah ?\n'), ((421, (6, 10)), '*CHI:\tyeah ?\n'), ((429, (-1, 4)), '*MOT:\tmilk first ?\n'), ((429, (6, 10)), '*MOT:\tmilk first ?\n'), ((433, (-1, 4)), '*MOT:\tthen juice ?\n'), ((433, (11, 16)), '*MOT:\tthen juice ?\n'), ((437, (6, 9)), '*CHI:\tyyy .\n'), ((438, (-1, 4)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((438, (20, 26)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((438, (32, 38)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((438, (39, 42)), "*GMA:\tperhaps I'll <butter your piece> [>] ?\n"), ((451, (-1, 4)), '*CHI:\tfirst juice .\n'), ((451, (12, 17)), '*CHI:\tfirst juice .\n'), ((454, (-1, 4)), '*GPA:\tyou want some beans ?\n'), ((454, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((457, (10, 15)), '*MOT:\tthe juice first ?\n'), ((461, (-1, 4)), '*GPA:\tyou want some beans ?\n'), ((461, (20, 25)), '*GPA:\tyou want some beans ?\n'), ((464, (6, 10)), '*CHI:\tyeah .\n'), ((468, (-1, 4)), '*MOT:\there xxx (.) .\n'), ((471, (6, 11)), '*CHI:\tjuice please [?] .\n'), ((471, (12, 18)), '*CHI:\tjuice please [?] .\n'), ((477, (14, 20)), '*CHI:\t<enough juice> [>] .\n'), ((477, (21, 24)), '*CHI:\t<enough juice> [>] .\n'), ((480, (14, 21)), "*GPA:\t<that's enough> [<] (.) ?\n"), ((483, (-1, 4)), '*CHI:\tmine is big .\n'), ((483, (6, 10)), '*CHI:\tmine is big .\n'), ((486, (6, 10)), '*MOT:\tyeah .\n'), ((489, (-1, 4)), "*MOT:\tyou don't want the little cup ?\n"), ((489, (32, 35)), "*MOT:\tyou don't want the little cup ?\n"), ((493, (-1, 4)), '*MOT:\tyou want the big cup ?\n'), ((493, (23, 26)), '*MOT:\tyou want the big cup ?\n'), ((497, (6, 10)), '*CHI:\tyeah (.) .\n'), ((497, (11, 14)), '*CHI:\tyeah (.) .\n'), ((501, (-1, 4)), '*GPA:\tso did you and Mommy see flowers today ?\n'), ((501, (31, 38)), '*GPA:\tso did you and Mommy see flowers today ?\n'), ((501, (39, 44)), '*GPA:\tso did you and Mommy see flowers today ?\n'), ((506, (6, 9)), '*CHI:\tyep .\n'), ((509, (6, 9)), '*MOT:\tzzz .\n'), ((513, (-1, 4)), '*GPA:\ttomatoes ?\n'), ((513, (6, 14)), '*GPA:\ttomatoes ?\n'), ((516, (6, 9)), '*CHI:\tyep .\n'), ((520, (-1, 4)), '*GMA:\there you go Lovey .\n'), ((523, (-1, 4)), '*GPA:\tand [/] and [/] and [/] you say there was people dancing ?\n'), ((523, (10, 13)), '*GPA:\tand [/] and [/] and [/] you say there was people dancing ?\n'), ((523, (48, 54)), '*GPA:\tand [/] and [/] and [/] you say there was people dancing ?\n'), ((531, (-1, 4)), '*GMA:\tthere were sticks too Dad (.) and bells (.) on their legs .\n'), ((531, (17, 23)), '*GMA:\tthere were sticks too Dad (.) and bells (.) on their legs .\n'), ((531, (40, 45)), '*GMA:\tthere were sticks too Dad (.) and bells (.) on their legs .\n'), ((531, (59, 63)), '*GMA:\tthere were sticks too Dad (.) and bells (.) on their legs .\n'), ((539, (6, 9)), '*GMA:\tmhm .\n'), ((542, (-1, 4)), '*MOT:\twho was collecting the money (.) ?\n'), ((542, (29, 34)), '*MOT:\twho was collecting the money (.) ?\n'), ((542, (35, 38)), '*MOT:\twho was collecting the money (.) ?\n'), ((547, (6, 9)), '*GMA:\tzzz .\n'), ((551, (10, 15)), '*CHI:\tthe horse .\n'), ((554, (6, 10)), '*GMA:\tyeah [>] .\n'), ((554, (11, 14)), '*GMA:\tyeah [>] .\n'), ((557, (6, 9)), '*GMA:\tzzz [>] .\n'), ((557, (10, 13)), '*GMA:\tzzz [>] .\n'), ((562, (11, 16)), '*MOT:\t<the horse was collecting the money> [<] ?\n'), ((562, (36, 42)), '*MOT:\t<the horse was collecting the money> [<] ?\n'), ((562, (43, 46)), '*MOT:\t<the horse was collecting the money> [<] ?\n'), ((567, (18, 23)), '*GPA:\thow was the horse collecting the money ?\n'), ((567, (39, 44)), '*GPA:\thow was the horse collecting the money ?\n'), ((574, (-1, 4)), '*CHI:\tand I told [>] him the man xxx <where the> [/] where the little holes are (.) xxx put all the money in xxx .\n'), ((574, (29, 32)), '*CHI:\tand I told [>] him the man xxx <where the> [/] where the little holes are (.) xxx put all the money in xxx .\n'), ((574, (49, 52)), '*CHI:\tand I told [>] him the man xxx <where the> [/] where the little holes are (.) xxx put all the money in xxx .\n'), ((574, (70, 75)), '*CHI:\tand I told [>] him the man xxx <where the> [/] where the little holes are (.) xxx put all the money in xxx .\n'), ((574, (100, 105)), '*CHI:\tand I told [>] him the man xxx <where the> [/] where the little holes are (.) xxx put all the money in xxx .\n'), ((582, (11, 14)), '*MOT:\tgood [<] ?\n'), ((586, (-1, 4)), '*GMA:\tand he in his mouth he threw it (.) .\n'), ((586, (20, 25)), '*GMA:\tand he in his mouth he threw it (.) .\n'), ((591, (-1, 4)), "*GMA:\tin the <horse's> [>] mouth .\n"), ((591, (14, 19)), "*GMA:\tin the <horse's> [>] mouth .\n"), ((591, (27, 32)), "*GMA:\tin the <horse's> [>] mouth .\n"), ((594, (20, 24)), '*CHI:\t<in> [<] [//] yeah (.) and down his throat .\n'), ((594, (25, 28)), '*CHI:\t<in> [<] [//] yeah (.) and down his throat .\n'), ((594, (42, 48)), '*CHI:\t<in> [<] [//] yeah (.) and down his throat .\n'), ((597, (6, 10)), '*GMA:\tyeah (.) .\n'), ((597, (11, 14)), '*GMA:\tyeah (.) .\n'), ((600, (-1, 4)), '*GMA:\tand what did the man xxx ?\n'), ((600, (23, 26)), '*GMA:\tand what did the man xxx ?\n'), ((600, (27, 30)), '*GMA:\tand what did the man xxx ?\n'), ((603, (45, 51)), '*MOT:\tit looked like Brad xxx right down his throat too .\n'), ((608, (6, 10)), '*GMA:\t&-um .\n'), ((610, (10, 14)), '*CHI:\txxx awoh .\n'), ((613, (-1, 4)), '*GMA:\tand what else did he do when you gave him money Brad (.) ?\n'), ((613, (48, 53)), '*GMA:\tand what else did he do when you gave him money Brad (.) ?\n'), ((618, (6, 10)), '*GMA:\tbeep beep .\n'), ((621, (6, 10)), '*CHI:\tbeep beep .\n'), ((624, (6, 9)), '*GMA:\tzzz .\n'), ((628, (-1, 4)), '*GMA:\tI was telling Dad he had one of those &-um like Groucho Marx +...\n'), ((634, (6, 11)), '*MOT:\thorns .\n'), ((637, (6, 11)), '*GMA:\thorns yeah .\n'), ((641, (-1, 4)), '*GMA:\tthat was so funny (.) .\n'), ((641, (24, 27)), '*GMA:\tthat was so funny (.) .\n'), ((644, (-1, 4)), '*MOT:\tthen they had all the dancers .\n'), ((644, (28, 35)), '*MOT:\tthen they had all the dancers .\n'), ((648, (-1, 4)), "*GPA:\tI don't think Brad seen all that did you ?\n"), ((654, (35, 41)), '*MOT:\twell Brad wanted to have his picnic right by [!] the dancers <so he> [>] could hear the music .\n'), ((654, (42, 47)), '*MOT:\twell Brad wanted to have his picnic right by [!] the dancers <so he> [>] could hear the music .\n'), ((654, (59, 66)), '*MOT:\twell Brad wanted to have his picnic right by [!] the dancers <so he> [>] could hear the music .\n'), ((654, (75, 78)), '*MOT:\twell Brad wanted to have his picnic right by [!] the dancers <so he> [>] could hear the music .\n'), ((654, (94, 99)), '*MOT:\twell Brad wanted to have his picnic right by [!] the dancers <so he> [>] could hear the music .\n'), ((662, (-1, 4)), '*GMA:\thuh [<] .\n'), ((662, (6, 9)), '*GMA:\thuh [<] .\n'), ((662, (10, 13)), '*GMA:\thuh [<] .\n'), ((665, (-1, 4)), '*GMA:\tso that way it really turned out nice .\n'), ((665, (14, 17)), '*GMA:\tso that way it really turned out nice .\n'), ((670, (-1, 4)), '*GMA:\teverybody was going down to the (..) main house .\n'), ((670, (48, 53)), '*GMA:\teverybody was going down to the (..) main house .\n'), ((675, (14, 26)), '*MOT:\toh this tartar sauce (..) +...\n'), ((678, (-1, 4)), '*GPA:\tdid they play songs for you (.) ?\n'), ((678, (20, 25)), '*GPA:\tdid they play songs for you (.) ?\n'), ((681, (6, 10)), '*CHI:\tyeah .\n'), ((684, (11, 16)), '*GPA:\twhat songs did they play ?\n'), ((687, (-1, 4)), '*GPA:\tdo you know ?\n'), ((696, (-1, 4)), '*GPA:\twas it Irish music ?\n'), ((696, (19, 24)), '*GPA:\twas it Irish music ?\n'), ((699, (6, 9)), '*GMA:\tyep (.) .\n'), ((699, (10, 13)), '*GMA:\tyep (.) .\n'), ((705, (-1, 4)), '*MOT:\tsaid he liked having a picnic .\n'), ((705, (29, 35)), '*MOT:\tsaid he liked having a picnic .\n'), ((709, (6, 8)), '*GMA:\tmm .\n'), ((712, (-1, 4)), '*MOT:\tand what did Mama do after we ate ?\n'), ((721, (-1, 4)), '*CHI:\tyou gave me candy .\n'), ((721, (18, 23)), '*CHI:\tyou gave me candy .\n'), ((725, (-1, 4)), '*MOT:\tI gave you candy .\n'), ((725, (17, 22)), '*MOT:\tI gave you candy .\n'), ((728, (-1, 4)), "*MOT:\tbut didn't I read you a story ?\n"), ((728, (30, 35)), "*MOT:\tbut didn't I read you a story ?\n"), ((734, (6, 10)), '*CHI:\tyeah .\n'), ((737, (11, 16)), '*MOT:\twhat story ?\n'), ((749, (6, 9)), '*GMA:\thm: [>] .\n'), ((749, (10, 13)), '*GMA:\thm: [>] .\n'), ((752, (6, 9)), '*MOT:\tyep [<] .\n'), ((752, (10, 13)), '*MOT:\tyep [<] .\n'), ((756, (-1, 4)), '*CHI:\tI know [?] xxx in there (.) .\n'), ((756, (17, 20)), '*CHI:\tI know [?] xxx in there (.) .\n'), ((759, (8, 11)), '*CHI:\ta xxx a xxx .\n'), ((766, (6, 9)), '*CHI:\txxx .\n'), ((768, (8, 11)), '*MOT:\ta lot of thoughts ?\n'), ((772, (6, 13)), '*CHI:\tpretend (.) .\n'), ((772, (14, 17)), '*CHI:\tpretend (.) .\n'), ((775, (-1, 4)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((775, (30, 39)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((775, (40, 43)), '*MOT:\tyou want me to cut your fish cake (.) ?\n'), ((781, (6, 13)), "*MOT:\tthey're delicious .\n"), ((784, (-1, 4)), '*GPA:\txxx having them in too [?] long .\n'), ((784, (6, 9)), '*GPA:\txxx having them in too [?] long .\n'), ((787, (6, 8)), '*GMA:\tmm .\n'), ((790, (-1, 4)), '*GMA:\tthey really are good .\n'), ((793, (-1, 4)), '*MOT:\tdid you eat some beans ?\n'), ((793, (23, 28)), '*MOT:\tdid you eat some beans ?\n'), ((797, (6, 10)), '*CHI:\tyeah Mommy <&u>[/] &-um [>] +...\n'), ((797, (30, 33)), '*CHI:\tyeah Mommy <&u>[/] &-um [>] +...\n'), ((804, (12, 17)), '*GMA:\tthese taste like the ones you get <out of town> [>] .\n'), ((804, (27, 31)), '*GMA:\tthese taste like the ones you get <out of town> [>] .\n'), ((804, (48, 53)), '*GMA:\tthese taste like the ones you get <out of town> [>] .\n'), ((804, (54, 57)), '*GMA:\tthese taste like the ones you get <out of town> [>] .\n'), ((809, (-1, 4)), '*CHI:\tcan [<] you cut this too ?\n'), ((813, (-1, 4)), '*MOT:\tyou want me to cut your brown bread ?\n'), ((813, (30, 41)), '*MOT:\tyou want me to cut your brown bread ?\n'), ((819, (6, 9)), '*GMA:\tmhm [>] .\n'), ((819, (10, 13)), '*GMA:\tmhm [>] .\n'), ((822, (6, 10)), '*CHI:\tyeah [<] .\n'), ((822, (11, 14)), '*CHI:\tyeah [<] .\n'), ((830, (6, 10)), '*MOT:\tokay I cut one fish stick [?] xxx .\n'), ((830, (21, 31)), '*MOT:\tokay I cut one fish stick [?] xxx .\n'), ((834, (14, 17)), '*MOT:\talright (.) ?\n'), ((838, (-1, 4)), '*CHI:\tBrave Star +...\n'), ((843, (-1, 4)), '*GMA:\tand did you tell Dad how you ran down the hill ?\n'), ((843, (48, 52)), '*GMA:\tand did you tell Dad how you ran down the hill ?\n'), ((848, (6, 9)), '*MOT:\tzzz .\n'), ((852, (-1, 4)), '*CHI:\tI ran down the hill .\n'), ((852, (21, 25)), '*CHI:\tI ran down the hill .\n'), ((856, (-1, 4)), '*GMA:\the was <running down and xxx> [>] .\n'), ((856, (36, 39)), '*GMA:\the was <running down and xxx> [>] .\n'), ((859, (-1, 4)), '*GMA:\t<a couple of times he fell and rolls> [>] +...\n'), ((859, (9, 15)), '*GMA:\t<a couple of times he fell and rolls> [>] +...\n'), ((859, (19, 24)), '*GMA:\t<a couple of times he fell and rolls> [>] +...\n'), ((859, (37, 42)), '*GMA:\t<a couple of times he fell and rolls> [>] +...\n'), ((859, (44, 47)), '*GMA:\t<a couple of times he fell and rolls> [>] +...\n'), ((864, (7, 10)), '*MOT:\t<way way down xxx> [<] .\n'), ((867, (6, 9)), '*MOT:\tzzz [<] .\n'), ((867, (10, 13)), '*MOT:\tzzz [<] .\n'), ((871, (-1, 4)), '*MOT:\the loved it .\n'), ((874, (-1, 4)), "*MOT:\tMa said [///] we were up on top of the hill and Brad couldn't wait to run down it .\n"), ((874, (34, 37)), "*MOT:\tMa said [///] we were up on top of the hill and Brad couldn't wait to run down it .\n"), ((874, (45, 49)), "*MOT:\tMa said [///] we were up on top of the hill and Brad couldn't wait to run down it .\n"), ((874, (68, 72)), "*MOT:\tMa said [///] we were up on top of the hill and Brad couldn't wait to run down it .\n"), ((881, (-1, 4)), '*MOT:\tMa says (.) okay Brad do you wan(t) (t)a go down here now ?\n'), ((881, (18, 22)), '*MOT:\tMa says (.) okay Brad do you wan(t) (t)a go down here now ?\n'), ((886, (-1, 4)), '*MOT:\tand Brad yells out yay [!] .\n'), ((886, (29, 32)), '*MOT:\tand Brad yells out yay [!] .\n'), ((889, (6, 9)), '*MOT:\tzzz and he ran down the hill just as fast [!] as he could .\n'), ((889, (30, 34)), '*MOT:\tzzz and he ran down the hill just as fast [!] as he could .\n'), ((889, (48, 51)), '*MOT:\tzzz and he ran down the hill just as fast [!] as he could .\n'), ((898, (85, 88)), '*GMA:\tit looked like if we stayed on the top where we were that we were gonna end up (.) on the other side of the arboretum (.) .\n'), ((898, (102, 106)), '*GMA:\tit looked like if we stayed on the top where we were that we were gonna end up (.) on the other side of the arboretum (.) .\n'), ((908, (6, 9)), '*GMA:\tzzz so I says well +/.\n'), ((911, (6, 11)), "*GMA:\tlet's take this road back there's a church , right .\n"), ((911, (22, 26)), "*GMA:\tlet's take this road back there's a church , right .\n"), ((911, (42, 48)), "*GMA:\tlet's take this road back there's a church , right .\n"), ((911, (51, 56)), "*GMA:\tlet's take this road back there's a church , right .\n"), ((918, (36, 41)), '*GMA:\twe did go across the original <road we> [>] were on .\n'), ((918, (42, 45)), '*GMA:\twe did go across the original <road we> [>] were on .\n'), ((923, (6, 10)), '*CHI:\tstop [<] !\n'), ((923, (11, 14)), '*CHI:\tstop [<] !\n'), ((926, (6, 9)), '*CHI:\txxx .\n'), ((927, (39, 45)), '*CHI:\txxx <my Mama> [/] my Mama to ask people if we could know <where the (.) &-um> [//] where the +...\n'), ((935, (-1, 4)), '*CHI:\twhere the arboretum was .\n'), ((938, (-1, 4)), '*GPA:\tyeah ?\n'), ((938, (6, 10)), '*GPA:\tyeah ?\n'), ((941, (6, 9)), '*GMA:\tmhm .\n'), ((944, (6, 9)), '*GPA:\txxx but you did find out how to get there huh ?\n'), ((952, (12, 19)), '*CHI:\t<some people> [<] .\n'), ((952, (20, 23)), '*CHI:\t<some people> [<] .\n'), ((955, (11, 17)), '*GPA:\tsome people told you ?\n'), ((958, (-1, 4)), '*CHI:\tso [?] my Mama xxx .\n'), ((958, (21, 24)), '*CHI:\tso [?] my Mama xxx .\n'), ((962, (-1, 4)), '*GPA:\t<did you> [/] did you like it ?\n'), ((967, (18, 25)), '*GPA:\thow did the flowers [?] smell ?\n'), ((967, (30, 35)), '*GPA:\thow did the flowers [?] smell ?\n'), ((970, (6, 8)), '*MOT:\tmm [>] .\n'), ((970, (9, 12)), '*MOT:\tmm [>] .\n'), ((977, (-1, 4)), '*CHI:\tI smelled some .\n'), ((980, (-1, 4)), '*MOT:\tand how did they smell ?\n'), ((987, (6, 10)), '*MOT:\tyeah [>] .\n'), ((987, (11, 14)), '*MOT:\tyeah [>] .\n'), ((990, (6, 10)), '*GMA:\tyeah [<] .\n'), ((990, (11, 14)), '*GMA:\tyeah [<] .\n'), ((993, (-1, 4)), '*GPA:\tyou smelled the lilacs ?\n'), ((993, (22, 28)), '*GPA:\tyou smelled the lilacs ?\n'), ((996, (-1, 4)), '*CHI:\t<there were some> [//] they was two yyy .\n'), ((996, (42, 45)), '*CHI:\t<there were some> [//] they was two yyy .\n'), ((999, (10, 16)), '*GPA:\ttwo lilacs ?\n'), ((1002, (13, 17)), '*GMA:\tpurple ones (.) and pink ones and white ones and lilac ones .\n'), ((1002, (18, 21)), '*GMA:\tpurple ones (.) and pink ones and white ones and lilac ones .\n'), ((1002, (26, 30)), '*GMA:\tpurple ones (.) and pink ones and white ones and lilac ones .\n'), ((1002, (40, 50)), '*GMA:\tpurple ones (.) and pink ones and white ones and lilac ones .\n'), ((1008, (10, 16)), '*GMA:\tthe purple .\n'), ((1011, (-1, 4)), "*GMA:\tthey didn't smell that good .\n"), ((1014, (26, 32)), '*GMA:\tthey were deep deep purple .\n'), ((1017, (-1, 4)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1017, (20, 25)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1017, (38, 45)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1017, (46, 49)), '*GMA:\tlooked like a bunch of <Concord grapes> [>] .\n'), ((1021, (6, 8)), '*GPA:\tmm [<] .\n'), ((1021, (9, 12)), '*GPA:\tmm [<] .\n'), ((1024, (6, 10)), '*GPA:\tyeah [<] .\n'), ((1024, (11, 14)), '*GPA:\tyeah [<] .\n'), ((1027, (-1, 4)), "*GMA:\tbut they didn't smell as pretty as the white and the light purple [/] .\n"), ((1027, (65, 71)), "*GMA:\tbut they didn't smell as pretty as the white and the light purple [/] .\n"), ((1027, (72, 75)), "*GMA:\tbut they didn't smell as pretty as the white and the light purple [/] .\n"), ((1038, (-1, 4)), "*GMA:\tdidn't you hear xxx and it's true .\n"), ((1044, (34, 40)), '*MOT:\txxx really wanted to have a picnic .\n'), ((1048, (6, 9)), '*CHI:\tzzz .\n'), ((1052, (-1, 4)), '*MOT:\t<you could> [//] all you could smell was the lilacs <and one> [>] lady was sitting across .\n'), ((1052, (11, 17)), '*MOT:\t<you could> [//] all you could smell was the lilacs <and one> [>] lady was sitting across .\n'), ((1052, (63, 67)), '*MOT:\t<you could> [//] all you could smell was the lilacs <and one> [>] lady was sitting across .\n'), ((1052, (72, 76)), '*MOT:\t<you could> [//] all you could smell was the lilacs <and one> [>] lady was sitting across .\n'), ((1058, (6, 8)), '*GMA:\tmm [<] .\n'), ((1058, (9, 12)), '*GMA:\tmm [<] .\n'), ((1061, (6, 9)), '*CHI:\tzzz [>] .\n'), ((1061, (10, 13)), '*CHI:\tzzz [>] .\n'), ((1065, (12, 15)), '*MOT:\tright [<] ?\n'), ((1069, (-1, 4)), "*MOT:\t<here's the tree> [<] ?\n"), ((1069, (18, 23)), "*MOT:\t<here's the tree> [<] ?\n"), ((1069, (24, 27)), "*MOT:\t<here's the tree> [<] ?\n"), ((1073, (-1, 4)), '*MOT:\tand here she was <reading a book> [>] (.) .\n'), ((1073, (34, 39)), '*MOT:\tand here she was <reading a book> [>] (.) .\n'), ((1073, (40, 43)), '*MOT:\tand here she was <reading a book> [>] (.) .\n'), ((1073, (44, 47)), '*MOT:\tand here she was <reading a book> [>] (.) .\n'), ((1077, (6, 9)), '*GMA:\tmhm [<] .\n'), ((1077, (10, 13)), '*GMA:\tmhm [<] .\n'), ((1080, (-1, 4)), "*MOT:\tI bet she didn't wan(t) (t)a leave that smell .\n"), ((1080, (30, 34)), "*MOT:\tI bet she didn't wan(t) (t)a leave that smell .\n"), ((1080, (46, 51)), "*MOT:\tI bet she didn't wan(t) (t)a leave that smell .\n"), ((1085, (6, 10)), "*MOT:\tit's pouring out .\n"), ((1088, (6, 9)), '*MOT:\tzzz .\n'), ((1092, (6, 9)), '*GMA:\tmhm .\n'), ((1096, (-1, 4)), "*MOT:\tit's a good thing we didn't go out Bra .\n"), ((1096, (18, 23)), "*MOT:\tit's a good thing we didn't go out Bra .\n"), ((1101, (-1, 4)), '*CHI:\twhy ?\n'), ((1107, (10, 15)), "*GMA:\tI'm <glad I got>[>] .\n"), ((1110, (12, 20)), "*GPA:\t<it's raining> [<] .\n"), ((1110, (21, 24)), "*GPA:\t<it's raining> [<] .\n"), ((1114, (6, 11)), '*GMA:\t<home when I did> [>] .\n'), ((1117, (-1, 4)), "*MOT:\t<(be)cause it's> [<] pouring .\n"), ((1117, (27, 34)), "*MOT:\t<(be)cause it's> [<] pouring .\n"), ((1121, (-1, 4)), '*GMA:\tI went down to the river <to watch the boats [?] for about five minutes> [>] .\n'), ((1121, (25, 30)), '*GMA:\tI went down to the river <to watch the boats [?] for about five minutes> [>] .\n'), ((1121, (45, 50)), '*GMA:\tI went down to the river <to watch the boats [?] for about five minutes> [>] .\n'), ((1121, (79, 82)), '*GMA:\tI went down to the river <to watch the boats [?] for about five minutes> [>] .\n'), ((1127, (-1, 4)), '*CHI:\t<is it xxx xxx now> [<] ?\n'), ((1132, (6, 10)), "*MOT:\tit's raining .\n"), ((1132, (11, 18)), "*MOT:\tit's raining .\n"), ((1135, (-1, 4)), "*CHI:\tand it's dirty outside now ?\n"), ((1135, (15, 20)), "*CHI:\tand it's dirty outside now ?\n"), ((1139, (-1, 4)), '*CHI:\tbut I wanted to go to the park .\n'), ((1139, (32, 36)), '*CHI:\tbut I wanted to go to the park .\n'), ((1145, (-1, 4)), "*MOT:\twe can't go to the park now it's raining .\n"), ((1145, (25, 29)), "*MOT:\twe can't go to the park now it's raining .\n"), ((1145, (39, 46)), "*MOT:\twe can't go to the park now it's raining .\n"), ((1153, (-1, 4)), '*CHI:\tI want (to) go to the fish store .\n'), ((1153, (28, 38)), '*CHI:\tI want (to) go to the fish store .\n'), ((1160, (6, 10)), "*MOT:\tit's raining .\n"), ((1160, (11, 18)), "*MOT:\tit's raining .\n"), ((1164, (-1, 4)), '*CHI:\tdid you see the fish man go home (.) ?\n'), ((1164, (22, 30)), '*CHI:\tdid you see the fish man go home (.) ?\n'), ((1164, (34, 38)), '*CHI:\tdid you see the fish man go home (.) ?\n'), ((1164, (39, 42)), '*CHI:\tdid you see the fish man go home (.) ?\n'), ((1169, (-1, 4)), '*CHI:\tI wan(t) (to) go to the fish store .\n'), ((1169, (30, 40)), '*CHI:\tI wan(t) (to) go to the fish store .\n'), ((1173, (-1, 4)), "*MOT:\tI don't know .\n"), ((1176, (-1, 4)), "*MOT:\tI don't know what time they close .\n"), ((1176, (24, 28)), "*MOT:\tI don't know what time they close .\n"), ((1181, (32, 36)), '*MOT:\tmaybe we could put on our rain coats .\n'), ((1181, (37, 42)), '*MOT:\tmaybe we could put on our rain coats .\n'), ((1186, (-1, 4)), '*CHI:\tdo you got a rain coat ?\n'), ((1186, (19, 28)), '*CHI:\tdo you got a rain coat ?\n'), ((1194, (12, 16)), "*GMA:\t<I'll let> [<] Mommy use my umbrella .\n"), ((1194, (27, 30)), "*GMA:\t<I'll let> [<] Mommy use my umbrella .\n"), ((1201, (-1, 4)), '*CHI:\tif [/] if she has +...\n'), ((1205, (6, 8)), '*GMA:\tmm [>] .\n'), ((1205, (9, 12)), '*GMA:\tmm [>] .\n'), ((1208, (6, 13)), '*CHI:\tthunder [<] .\n'), ((1208, (14, 17)), '*CHI:\tthunder [<] .\n'), ((1211, (6, 13)), '*MOT:\tthunder .\n'), ((1214, (6, 8)), '*GMA:\tmm .\n'), ((1218, (10, 14)), '*CHI:\t<we can> [/] we can run to the fish store .\n'), ((1218, (37, 47)), '*CHI:\t<we can> [/] we can run to the fish store .\n'), ((1221, (27, 31)), '*CHI:\tthen we can run back home with our feet like [/] like [/] like [/] like I always do (.) ?\n'), ((1221, (41, 45)), '*CHI:\tthen we can run back home with our feet like [/] like [/] like [/] like I always do (.) ?\n'), ((1221, (51, 54)), '*CHI:\tthen we can run back home with our feet like [/] like [/] like [/] like I always do (.) ?\n'), ((1227, (-1, 4)), "*CHI:\tand [/] and so [/] so the thunder won't get us right ?\n"), ((1227, (10, 13)), "*CHI:\tand [/] and so [/] so the thunder won't get us right ?\n"), ((1227, (32, 39)), "*CHI:\tand [/] and so [/] so the thunder won't get us right ?\n"), ((1227, (40, 45)), "*CHI:\tand [/] and so [/] so the thunder won't get us right ?\n"), ((1239, (-1, 4)), '*GMA:\tyou know what the thunder is ?\n'), ((1239, (24, 31)), '*GMA:\tyou know what the thunder is ?\n'), ((1242, (6, 10)), '*CHI:\tyeah .\n'), ((1245, (6, 13)), '*CHI:\tthunder and lightning .\n'), ((1248, (6, 10)), '*GMA:\tyeah .\n'), ((1251, (-1, 4)), '*GMA:\tand the thunder is when &-uh the angels are upstairs bowling .\n'), ((1251, (14, 21)), '*GMA:\tand the thunder is when &-uh the angels are upstairs bowling .\n'), ((1251, (39, 45)), '*GMA:\tand the thunder is when &-uh the angels are upstairs bowling .\n'), ((1251, (59, 66)), '*GMA:\tand the thunder is when &-uh the angels are upstairs bowling .\n'), ((1256, (-1, 4)), "*GMA:\tand that's one of them just got a spare (.) .\n"), ((1256, (46, 49)), "*GMA:\tand that's one of them just got a spare (.) .\n"), ((1263, (41, 45)), "*MOT:\tBrad should get out his Berenstein Bear [?] [///] oh I'm going (t)a have_to let Ma read it and that'll tell her what thunder is huh ?\n"), ((1263, (82, 85)), "*MOT:\tBrad should get out his Berenstein Bear [?] [///] oh I'm going (t)a have_to let Ma read it and that'll tell her what thunder is huh ?\n"), ((1263, (123, 130)), "*MOT:\tBrad should get out his Berenstein Bear [?] [///] oh I'm going (t)a have_to let Ma read it and that'll tell her what thunder is huh ?\n"), ((1273, (6, 9)), '*MOT:\tzzz .\n'), ((1277, (6, 9)), '*GMA:\tmhm .\n'), ((1280, (-1, 4)), '*MOT:\ttells <&e> [//] all about thunder and [>] [/] .\n'), ((1280, (6, 11)), '*MOT:\ttells <&e> [//] all about thunder and [>] [/] .\n'), ((1280, (32, 39)), '*MOT:\ttells <&e> [//] all about thunder and [>] [/] .\n'), ((1280, (48, 51)), '*MOT:\ttells <&e> [//] all about thunder and [>] [/] .\n'), ((1283, (23, 29)), "*GPA:\t<that's> [<] the energy [>] .\n"), ((1283, (30, 33)), "*GPA:\t<that's> [<] the energy [>] .\n"), ((1288, (71, 76)), '*GMA:\t<why should> [<] [/] why should he be brought up on a <different story than you people were> [>] ?\n'), ((1288, (86, 92)), '*GMA:\t<why should> [<] [/] why should he be brought up on a <different story than you people were> [>] ?\n'), ((1294, (6, 9)), '*GMA:\tzzz [>] .\n'), ((1294, (10, 13)), '*GMA:\tzzz [>] .\n'), ((1300, (-1, 4)), "*CHI:\tbecause [//] that's because xxx mother [<] vacuum in it .\n"), ((1300, (19, 25)), "*CHI:\tbecause [//] that's because xxx mother [<] vacuum in it .\n"), ((1300, (38, 44)), "*CHI:\tbecause [//] that's because xxx mother [<] vacuum in it .\n"), ((1307, (-1, 4)), "*GPA:\tthat's the energy huh ?\n"), ((1307, (17, 23)), "*GPA:\tthat's the energy huh ?\n"), ((1307, (24, 27)), "*GPA:\tthat's the energy huh ?\n"), ((1310, (6, 13)), '*GPA:\tthunder is caused by energy in the clouds [>] .\n'), ((1310, (27, 33)), '*GPA:\tthunder is caused by energy in the clouds [>] .\n'), ((1310, (41, 47)), '*GPA:\tthunder is caused by energy in the clouds [>] .\n'), ((1310, (48, 51)), '*GPA:\tthunder is caused by energy in the clouds [>] .\n'), ((1317, (32, 36)), '*CHI:\t<yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...\n'), ((1317, (50, 53)), '*CHI:\t<yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...\n'), ((1317, (75, 78)), '*CHI:\t<yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...\n'), ((1317, (83, 86)), '*CHI:\t<yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...\n'), ((1317, (103, 107)), '*CHI:\t<yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...\n'), ((1317, (112, 119)), '*CHI:\t<yeah [<] yyy> [//] <yeah but> [//] but one day I was sleeping in my bed for [/] for a long long time and thunder and lightning came from outside and I was trying to zzz +...\n'), ((1332, (56, 62)), '*CHI:\t<and I> [<] was trying to find something that was yellow outside in the dark all by itself .\n'), ((1332, (78, 82)), '*CHI:\t<and I> [<] was trying to find something that was yellow outside in the dark all by itself .\n'), ((1340, (-1, 4)), '*CHI:\tand it came out .\n'), ((1343, (-1, 4)), '*CHI:\tand it was thunder and lightning and I hided@n from it .\n'), ((1343, (17, 24)), '*CHI:\tand it was thunder and lightning and I hided@n from it .\n'), ((1348, (6, 9)), '*GMA:\thm: [>] .\n'), ((1348, (10, 13)), '*GMA:\thm: [>] .\n'), ((1351, (6, 9)), '*MOT:\thm: [<][>] .\n'), ((1354, (-1, 4)), '*GPA:\tand [<] you hided@n from it ?\n'), ((1354, (10, 13)), '*GPA:\tand [<] you hided@n from it ?\n'), ((1357, (6, 10)), '*CHI:\tyeah .\n'), ((1360, (-1, 4)), '*GPA:\twhere did you hide ?\n'), ((1363, (-1, 4)), '*GPA:\tunder your blankets ?\n'), ((1366, (18, 24)), '*CHI:\tno under my covers .\n'), ((1369, (18, 25)), '*GPA:\t<under your covers> [>] ?\n'), ((1369, (26, 29)), '*GPA:\t<under your covers> [>] ?\n'), ((1372, (-1, 4)), '*GMA:\t<are you gonna> [<] eat ?\n'), ((1372, (6, 10)), '*GMA:\t<are you gonna> [<] eat ?\n'), ((1372, (26, 29)), '*GMA:\t<are you gonna> [<] eat ?\n'), ((1375, (-1, 4)), '*CHI:\tlike [/] like [/] like when I was sleeping and I was xxx .\n'), ((1375, (11, 14)), '*CHI:\tlike [/] like [/] like when I was sleeping and I was xxx .\n'), ((1380, (-1, 4)), '*GPA:\tdo you always pull the covers up over your head ?\n'), ((1380, (29, 35)), '*GPA:\tdo you always pull the covers up over your head ?\n'), ((1380, (49, 53)), '*GPA:\tdo you always pull the covers up over your head ?\n'), ((1385, (-1, 4)), '*GPA:\tyeah ?\n'), ((1385, (6, 10)), '*GPA:\tyeah ?\n'), ((1389, (10, 15)), '*MOT:\t<he only> [<] has one blanket .\n'), ((1389, (16, 19)), '*MOT:\t<he only> [<] has one blanket .\n'), ((1389, (28, 35)), '*MOT:\t<he only> [<] has one blanket .\n'), ((1392, (14, 18)), '*MOT:\tall the rest are covers .\n'), ((1392, (23, 29)), '*MOT:\tall the rest are covers .\n'), ((1395, (6, 9)), '*GMA:\tzzz .\n'), ((1403, (-1, 4)), "*MOT:\tyou didn't eat much .\n"), ((1406, (-1, 4)), "*MOT:\tdon't you feel good ?\n"), ((1406, (6, 11)), "*MOT:\tdon't you feel good ?\n"), ((1410, (-1, 4)), "*GMA:\the didn't eat anything [!] .\n"), ((1410, (29, 32)), "*GMA:\the didn't eat anything [!] .\n"), ((1413, (11, 15)), "*CHI:\t<I'm all> [/] I'm all done though I want some milk .\n"), ((1413, (52, 56)), "*CHI:\t<I'm all> [/] I'm all done though I want some milk .\n"), ((1418, (24, 27)), '*MOT:\tlet me rinse your cup .\n'), ((1421, (6, 9)), '*GMA:\txxx .\n'), ((1425, (-1, 4)), '*CHI:\tBrave <Star > [>] +...\n'), ((1429, (-1, 4)), '*MOT:\t<does it> [<] hurt here (.) ?\n'), ((1429, (6, 11)), '*MOT:\t<does it> [<] hurt here (.) ?\n'), ((1429, (20, 24)), '*MOT:\t<does it> [<] hurt here (.) ?\n'), ((1433, (-1, 4)), '*GMA:\twhere does it hurt ?\n'), ((1436, (-1, 4)), '*GPA:\tare you sick again ?\n'), ((1442, (12, 15)), '*CHI:\tright pot .\n'), ((1445, (-1, 4)), '*MOT:\the told me his belly was hurting when we were <at the &-um> [>] arboretum .\n'), ((1445, (21, 26)), '*MOT:\the told me his belly was hurting when we were <at the &-um> [>] arboretum .\n'), ((1451, (6, 8)), '*GMA:\tmm [<] .\n'), ((1451, (9, 12)), '*GMA:\tmm [<] .\n'), ((1459, (-1, 4)), '*MOT:\t<does your belly still hurt> [<] ?\n'), ((1459, (17, 22)), '*MOT:\t<does your belly still hurt> [<] ?\n'), ((1459, (35, 38)), '*MOT:\t<does your belly still hurt> [<] ?\n'), ((1463, (-1, 4)), '*GMA:\twhere you going Kiddo ?\n'), ((1469, (18, 22)), "*MOT:\there's your milk .\n"), ((1472, (-1, 4)), '*CHI:\tMommy ?\n'), ((1480, (11, 14)), '*CHI:\t&-um [/] &-um [/] .\n'), ((1481, (-1, 4)), '*MOT:\tdoes your belly still hurt ?\n'), ((1481, (16, 21)), '*MOT:\tdoes your belly still hurt ?\n'), ((1489, (32, 35)), "*CHI:\tMommy we have_to run like [/] like that so we won't get done [?] so the thunder won't get us .\n"), ((1489, (52, 57)), "*CHI:\tMommy we have_to run like [/] like that so we won't get done [?] so the thunder won't get us .\n"), ((1489, (78, 85)), "*CHI:\tMommy we have_to run like [/] like that so we won't get done [?] so the thunder won't get us .\n"), ((1500, (-1, 4)), "*MOT:\t<well Honey> [<] I don't think we should go .\n"), ((1500, (12, 17)), "*MOT:\t<well Honey> [<] I don't think we should go .\n"), ((1506, (6, 9)), '*CHI:\tyyy I want go to the fish store .\n'), ((1506, (27, 37)), '*CHI:\tyyy I want go to the fish store .\n'), ((1509, (50, 56)), "*MOT:\tno I don't think so xxx you got that <bad a cough> [>] .\n"), ((1509, (57, 60)), "*MOT:\tno I don't think so xxx you got that <bad a cough> [>] .\n"), ((1514, (9, 12)), '*GMA:\tno [<] .\n'), ((1519, (-1, 4)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1519, (62, 68)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1519, (94, 97)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1519, (98, 103)), "*GMA:\tand <you really [!] shouldn't> [//] you didn't have any dinner you really [!] shouldn't eat candy .\n"), ((1524, (-1, 4)), '*GMA:\tyou had enough candy today Lovey .\n'), ((1524, (21, 26)), '*GMA:\tyou had enough candy today Lovey .\n'), ((1524, (27, 32)), '*GMA:\tyou had enough candy today Lovey .\n'), ((1528, (16, 21)), "*CHI:\tMommy I'm gonna get ice cream .\n"), ((1528, (22, 25)), "*CHI:\tMommy I'm gonna get ice cream .\n"), ((1528, (26, 35)), "*CHI:\tMommy I'm gonna get ice cream .\n"), ((1533, (6, 9)), '*GMA:\tzzz .\n'), ((1537, (10, 15)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1537, (16, 19)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1537, (20, 36)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1537, (37, 40)), "*CHI:\tI'm gonna get ice cream bar[!] (.) .\n"), ((1540, (-1, 4)), '*CHI:\tokay ?\n'), ((1540, (6, 10)), '*CHI:\tokay ?\n'), ((1547, (-1, 4)), '*CHI:\tokay ?\n'), ((1547, (6, 10)), '*CHI:\tokay ?\n'), ((1552, (-1, 4)), "*MOT:\tI shouldn't let him but I know if I was having a sore belly I'd [/] .\n"), ((1552, (55, 59)), "*MOT:\tI shouldn't let him but I know if I was having a sore belly I'd [/] .\n"), ((1562, (-1, 4)), '*MOT:\t<want an ice cream too> [>] .\n'), ((1562, (15, 29)), '*MOT:\t<want an ice cream too> [>] .\n'), ((1562, (30, 33)), '*MOT:\t<want an ice cream too> [>] .\n'), ((1565, (-1, 4)), "*GMA:\t<that's what I was> [<] gonna say .\n"), ((1565, (30, 35)), "*GMA:\t<that's what I was> [<] gonna say .\n"), ((1569, (6, 15)), '*GMA:\tice cream is better .\n'), ((1573, (33, 38)), '*CHI:\tMa I wan(t) (t)a go to the store and get <some ice cream> [>] .\n'), ((1573, (53, 63)), '*CHI:\tMa I wan(t) (t)a go to the store and get <some ice cream> [>] .\n'), ((1573, (64, 67)), '*CHI:\tMa I wan(t) (t)a go to the store and get <some ice cream> [>] .\n'), ((1579, (-1, 4)), '*GMA:\t<but no candy> [<] .\n'), ((1579, (14, 20)), '*GMA:\t<but no candy> [<] .\n'), ((1579, (21, 24)), '*GMA:\t<but no candy> [<] .\n'), ((1582, (18, 23)), '*CHI:\tno just [?] candy .\n'), ((1585, (-1, 4)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1585, (30, 40)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1585, (54, 67)), '*CHI:\tI wan(t) (t)a go to the fish store and get some ice cream (.) .\n'), ((1590, (-1, 4)), '*CHI:\t(o)kay ?\n'), ((1590, (6, 12)), '*CHI:\t(o)kay ?\n'), ((1593, (9, 14)), '*GMA:\tno candy .\n'), ((1596, (9, 15)), "*CHI:\t<I won't> [/] I won't get any (.) !\n"), ((1596, (16, 19)), "*CHI:\t<I won't> [/] I won't get any (.) !\n"), ((1596, (36, 39)), "*CHI:\t<I won't> [/] I won't get any (.) !\n"), ((1599, (-1, 4)), '*CHI:\tMa you wan(t) go to the fish store with me and my Mama ?\n'), ((1599, (30, 40)), '*CHI:\tMa you wan(t) go to the fish store with me and my Mama ?\n'), ((1604, (-1, 4)), '*GMA:\tbut even his voice xxx [>] .\n'), ((1604, (19, 24)), '*GMA:\tbut even his voice xxx [>] .\n'), ((1607, (-1, 4)), "*CHI:\t<don't you> [<] ?\n"), ((1607, (13, 17)), "*CHI:\t<don't you> [<] ?\n"), ((1607, (18, 21)), "*CHI:\t<don't you> [<] ?\n"), ((1613, (-1, 4)), "*MOT:\tI don't think so Lovey .\n"), ((1616, (-1, 4)), "*CHI:\tyou don't [///] you have [!] to because [/] because I wo'(nt) [/] .\n"), ((1622, (-1, 4)), '*MOT:\tdoes your belly still hurt ?\n'), ((1622, (16, 21)), '*MOT:\tdoes your belly still hurt ?\n'), ((1626, (6, 9)), '*CHI:\tzzz .\n'), ((1630, (-1, 4)), '*MOT:\tdoes it hurt when you cough (.) ?\n'), ((1634, (-1, 4)), '*CHI:\tzzz it hurted@n before when I coughed (.) .\n'), ((1634, (6, 9)), '*CHI:\tzzz it hurted@n before when I coughed (.) .\n'), ((1634, (44, 47)), '*CHI:\tzzz it hurted@n before when I coughed (.) .\n'), ((1639, (40, 49)), '*CHI:\t&-um Mommy I wan(t) (t)a bring my new water gun to the preschool [>] .\n'), ((1639, (50, 53)), '*CHI:\t&-um Mommy I wan(t) (t)a bring my new water gun to the preschool [>] .\n'), ((1639, (71, 74)), '*CHI:\t&-um Mommy I wan(t) (t)a bring my new water gun to the preschool [>] .\n'), ((1644, (11, 17)), "*GMA:\t<and there> [<] really isn't anyplace you can <drive him> [>] .\n"), ((1644, (64, 67)), "*GMA:\t<and there> [<] really isn't anyplace you can <drive him> [>] .\n"), ((1649, (6, 10)), '*CHI:\tokay [<] Mommy ?\n'), ((1653, (6, 10)), '*CHI:\tokay [>] ?\n'), ((1653, (11, 14)), '*CHI:\tokay [>] ?\n'), ((1659, (-1, 4)), "*MOT:\twe don't have any ?\n"), ((1663, (6, 10)), '*CHI:\tokay Mommy ?\n'), ((1667, (6, 10)), '*CHI:\tokay [>] ?\n'), ((1667, (11, 14)), '*CHI:\tokay [>] ?\n'), ((1673, (6, 9)), '*GMA:\txxx .\n'), ((1675, (6, 10)), '*CHI:\tokay [<] ?\n'), ((1675, (11, 14)), '*CHI:\tokay [<] ?\n'), ((1680, (6, 9)), '*GPA:\tmhm .\n'), ((1683, (6, 9)), '*GPA:\txxx .\n'), ((1693, (12, 17)), '*MOT:\t<okay what> [<] ?\n'), ((1693, (18, 21)), '*MOT:\t<okay what> [<] ?\n'), ((1697, (-1, 4)), '*CHI:\tokay ?\n'), ((1697, (6, 10)), '*CHI:\tokay ?\n'), ((1702, (11, 16)), '*MOT:\twhat Honey ?\n'), ((1706, (-1, 4)), '*CHI:\tokay ?\n'), ((1706, (6, 10)), '*CHI:\tokay ?\n'), ((1710, (-1, 4)), "*MOT:\tI didn't hear you .\n"), ((1713, (-1, 4)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (20, 24)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (35, 40)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (57, 62)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (81, 90)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1713, (94, 98)), "*CHI:\tdo you wan(t) (t)a go to the store and I won't get candy and I'll get just ice cream or cake ?\n"), ((1722, (14, 17)), '*MOT:\talright (.) .\n'), ((1726, (-1, 4)), '*MOT:\tcome up here and drink your milk (.) .\n'), ((1726, (34, 38)), '*MOT:\tcome up here and drink your milk (.) .\n'), ((1726, (39, 42)), '*MOT:\tcome up here and drink your milk (.) .\n'), ((1729, (6, 11)), '*MOT:\tthank you .\n'), ((1732, (-1, 4)), "*GPA:\tyou're not gonna eat any supper at all ?\n"), ((1732, (23, 26)), "*GPA:\tyou're not gonna eat any supper at all ?\n"), ((1737, (6, 10)), '*CHI:\tnope .\n'), ((1740, (-1, 4)), '*GPA:\thuh ?\n'), ((1740, (6, 9)), '*GPA:\thuh ?\n'), ((1743, (6, 10)), '*CHI:\tnope .\n'), ((1746, (-1, 4)), '*CHI:\tjust taste a little bit ?\n'), ((1746, (26, 29)), '*CHI:\tjust taste a little bit ?\n'), ((1749, (39, 44)), '*GMA:\twe were going up to the main [?] house and &-uh arboretum (.) <and there was this> [>] [/] .\n'), ((1755, (10, 17)), '*CHI:\t<it tastes> [<] cold .\n'), ((1755, (22, 26)), '*CHI:\t<it tastes> [<] cold .\n'), ((1759, (41, 45)), '*GMA:\twe were about to find out what the name of the little bells flower is xxx a man going by me says xxx blue bells .\n'), ((1759, (60, 65)), '*GMA:\twe were about to find out what the name of the little bells flower is xxx a man going by me says xxx blue bells .\n'), ((1759, (66, 72)), '*GMA:\twe were about to find out what the name of the little bells flower is xxx a man going by me says xxx blue bells .\n'), ((1759, (82, 85)), '*GMA:\twe were about to find out what the name of the little bells flower is xxx a man going by me says xxx blue bells .\n'), ((1759, (107, 111)), '*GMA:\twe were about to find out what the name of the little bells flower is xxx a man going by me says xxx blue bells .\n'), ((1768, (6, 9)), '*GMA:\t&ha .\n'), ((1769, (6, 12)), '*GMA:\tthanks a lot .\n'), ((1769, (15, 18)), '*GMA:\tthanks a lot .\n'), ((1772, (6, 9)), '*GMA:\t&ha .\n'), ((1773, (-1, 4)), '*GMA:\tand someone else was saying well yeah I guess you would .\n'), ((1773, (10, 17)), '*GMA:\tand someone else was saying well yeah I guess you would .\n'), ((1779, (-1, 4)), '*GMA:\tso I really wanted to find out the botanical name .\n'), ((1779, (51, 55)), '*GMA:\tso I really wanted to find out the botanical name .\n'), ((1785, (6, 9)), '*CHI:\tzzz .\n'), ((1789, (18, 21)), "*GPA:\tuhhuh uhhuh [>] you had it over there and you didn't eat it .\n"), ((1797, (-1, 4)), '*CHI:\twhere is it ?\n'), ((1800, (6, 9)), '*GPA:\tmom [//] your mommy just ate it .\n'), ((1800, (20, 25)), '*GPA:\tmom [//] your mommy just ate it .\n'), ((1803, (6, 9)), '*MOT:\tyes I did .\n'), ((1806, (-1, 4)), "*GPA:\tbecause you wasn't eating it .\n"), ((1814, (6, 9)), '*CHI:\tzzz .\n'), ((1818, (-1, 4)), '*GMA:\t<they had> [//] they were putting on like a video show .\n'), ((1818, (50, 55)), '*GMA:\t<they had> [//] they were putting on like a video show .\n'), ((1818, (56, 60)), '*GMA:\t<they had> [//] they were putting on like a video show .\n'), ((1823, (6, 9)), '*CHI:\txxx .\n'), ((1824, (27, 30)), '*GMA:\tthey were really xxx [>] .\n'), ((1827, (6, 9)), '*GPA:\tzzz [<] .\n'), ((1827, (10, 13)), '*GPA:\tzzz [<] .\n'), ((1832, (9, 13)), '*CHI:\tmy shoe .\n'), ((1835, (10, 15)), '*CHI:\t<my shoe> [>] Mommy .\n'), ((1840, (-1, 4)), "*GPA:\tyou can't go .\n"), ((1848, (-1, 4)), '*GPA:\the went to kick me and his shoe fell off .\n'), ((1848, (33, 37)), '*GPA:\the went to kick me and his shoe fell off .\n'), ((1853, (6, 9)), '*GPA:\tzzz [>] .\n'), ((1853, (10, 13)), '*GPA:\tzzz [>] .\n'), ((1857, (6, 9)), '*MOT:\tzzz [<][>] .\n'), ((1866, (9, 15)), '*CHI:\t<I wan(t) (t)a> [/] <I wan(t) (t)a wear> [<] my boots .\n'), ((1866, (41, 46)), '*CHI:\t<I wan(t) (t)a> [/] <I wan(t) (t)a wear> [<] my boots .\n'), ((1866, (54, 59)), '*CHI:\t<I wan(t) (t)a> [/] <I wan(t) (t)a wear> [<] my boots .\n'), ((1869, (6, 10)), '*MOT:\tnope .\n'), ((1872, (-1, 4)), "*MOT:\tyou're not wearing your boots .\n"), ((1872, (30, 35)), "*MOT:\tyou're not wearing your boots .\n"), ((1876, (6, 9)), '*CHI:\tyes .\n'), ((1879, (16, 21)), '*GPA:\tno <Mommy said> [>] .\n'), ((1879, (22, 25)), '*GPA:\tno <Mommy said> [>] .\n'), ((1882, (10, 13)), '*CHI:\tyes [<] .\n'), ((1890, (11, 16)), '*GMA:\tyour boots would look silly .\n'), ((1893, (-1, 4)), '*GMA:\tthose are winter boots .\n'), ((1893, (23, 28)), '*GMA:\tthose are winter boots .\n'), ((1896, (-1, 4)), '*CHI:\tbut I want my brown boots .\n'), ((1896, (20, 25)), '*CHI:\tbut I want my brown boots .\n'), ((1896, (26, 31)), '*CHI:\tbut I want my brown boots .\n'), ((1899, (21, 25)), "*CHI:\twhere's [?] my rain boots ?\n"), ((1899, (26, 31)), "*CHI:\twhere's [?] my rain boots ?\n"), ((1902, (13, 17)), "*GMA:\tthey'd look silly .\n"), ((1906, (-1, 4)), "*MOT:\twe don't have rain boots for you .\n"), ((1906, (25, 30)), "*MOT:\twe don't have rain boots for you .\n"), ((1912, (10, 13)), '*CHI:\tone day I had them .\n'), ((1915, (10, 13)), '*GPA:\tone day you had them ?\n'), ((1918, (-1, 4)), '*CHI:\ton one day I had rain [/] .\n'), ((1918, (13, 16)), '*CHI:\ton one day I had rain [/] .\n'), ((1918, (23, 27)), '*CHI:\ton one day I had rain [/] .\n'), ((1918, (28, 31)), '*CHI:\ton one day I had rain [/] .\n'), ((1921, (11, 14)), '*GPA:\twhat day did you have them ?\n'), ((1924, (15, 18)), '*CHI:\twell one day I had rain boots red ones and [/] and [/] and &-um +...\n'), ((1924, (30, 35)), '*CHI:\twell one day I had rain boots red ones and [/] and [/] and &-um +...\n'), ((1924, (40, 44)), '*CHI:\twell one day I had rain boots red ones and [/] and [/] and &-um +...\n'), ((1929, (-1, 4)), '*GPA:\tyou had red ones and <you had> [>] blue ones .\n'), ((1929, (18, 22)), '*GPA:\tyou had red ones and <you had> [>] blue ones .\n'), ((1929, (41, 45)), '*GPA:\tyou had red ones and <you had> [>] blue ones .\n'), ((1934, (6, 11)), '*CHI:\t<yeah I had my> [<] [///] .\n'), ((1935, (-1, 4)), '*GPA:\tyou never had any brown boots .\n'), ((1935, (24, 29)), '*GPA:\tyou never had any brown boots .\n'), ((1935, (30, 35)), '*GPA:\tyou never had any brown boots .\n'), ((1938, (6, 9)), '*CHI:\tyes I did .\n'), ((1941, (-1, 4)), '*GPA:\toh the big heavy shoes (.) !\n'), ((1941, (17, 22)), '*GPA:\toh the big heavy shoes (.) !\n'), ((1941, (23, 28)), '*GPA:\toh the big heavy shoes (.) !\n'), ((1944, (10, 20)), '*GPA:\tthe brown work shoes ?\n'), ((1944, (21, 26)), '*GPA:\tthe brown work shoes ?\n'), ((1947, (9, 12)), "*GPA:\toh [>] I don't know where they are .\n"), ((1954, (10, 13)), '*CHI:\tone day I had rain boots and they were red and now I lost them .\n'), ((1954, (25, 30)), '*CHI:\tone day I had rain boots and they were red and now I lost them .\n'), ((1961, (6, 9)), '*GPA:\txxx .\n'), ((1962, (-1, 4)), '*MOT:\twhere did they go ?\n'), ((1966, (-1, 4)), "*CHI:\tI don't know .\n"), ((1971, (-1, 4)), '*GPA:\tdid you outgrow them ?\n'), ((1977, (-1, 4)), '*GPA:\tno ?\n'), ((1980, (-1, 4)), '*GMA:\twhere did [!] they go (.) ?\n'), ((1983, (6, 10)), "*MOT:\tit's in one of his bureau drawers with his winter coat .\n"), ((1983, (25, 31)), "*MOT:\tit's in one of his bureau drawers with his winter coat .\n"), ((1983, (32, 39)), "*MOT:\tit's in one of his bureau drawers with his winter coat .\n"), ((1983, (49, 55)), "*MOT:\tit's in one of his bureau drawers with his winter coat .\n"), ((1983, (56, 60)), "*MOT:\tit's in one of his bureau drawers with his winter coat .\n"), ((1988, (6, 9)), '*CHI:\tzzz .\n'), ((1992, (6, 9)), '*GMA:\t&ha .\n'), ((1993, (-1, 4)), '*CHI:\tI have a new <coat too> [>] .\n'), ((1993, (19, 24)), '*CHI:\tI have a new <coat too> [>] .\n'), ((1993, (25, 29)), '*CHI:\tI have a new <coat too> [>] .\n'), ((1993, (30, 33)), '*CHI:\tI have a new <coat too> [>] .\n'), ((1996, (11, 17)), '*GMA:\t<his boots> [<] ?\n'), ((1996, (18, 21)), '*GMA:\t<his boots> [<] ?\n'), ((1999, (6, 9)), '*GPA:\tzzz [>] .\n'), ((1999, (10, 13)), '*GPA:\tzzz [>] .\n'), ((2005, (-1, 4)), '*CHI:\t<now I have new> [>] [/] .\n'), ((2005, (27, 30)), '*CHI:\t<now I have new> [>] [/] .\n'), ((2006, (6, 9)), '*GMA:\tzzz [<] .\n'), ((2006, (10, 13)), '*GMA:\tzzz [<] .\n'), ((2014, (-1, 4)), '*CHI:\tnow I have two new coats .\n'), ((2014, (25, 30)), '*CHI:\tnow I have two new coats .\n'), ((2017, (-1, 4)), '*GPA:\tyou got them on the wrong feet .\n'), ((2017, (32, 36)), '*GPA:\tyou got them on the wrong feet .\n'), ((2021, (-1, 4)), '*GPA:\tyou got the shoes on the wrong feet .\n'), ((2021, (18, 23)), '*GPA:\tyou got the shoes on the wrong feet .\n'), ((2021, (37, 41)), '*GPA:\tyou got the shoes on the wrong feet .\n'), ((2026, (-1, 4)), '*CHI:\tI know this .\n'), ((2033, (-1, 4)), '*GPA:\t<what do you know it for> [>] ?\n'), ((2036, (-1, 1)), '*MOT:\t<I know this> [<] .\n'), ((2036, (14, 19)), '*MOT:\t<I know this> [<] .\n'), ((2036, (20, 23)), '*MOT:\t<I know this> [<] .\n'), ((2039, (30, 34)), '*CHI:\tMommy is this the right feet ?\n'), ((2047, (-1, 4)), '*CHI:\tis it ?\n'), ((2056, (6, 9)), '*GPA:\tzzz [>] .\n'), ((2056, (10, 13)), '*GPA:\tzzz [>] .\n'), ((2060, (6, 9)), '*GMA:\tzzz [<][>] .\n'), ((2064, (10, 13)), '*CHI:\t<is it> [<] is this the right feet ?\n'), ((2064, (14, 17)), '*CHI:\t<is it> [<] is this the right feet ?\n'), ((2064, (36, 40)), '*CHI:\t<is it> [<] is this the right feet ?\n'), ((2069, (6, 10)), '*GMA:\tlook at Charlie Chaplin .\n'), ((2072, (-1, 4)), "*GMA:\tI can't [///] no I <don't think so Brad> [>] .\n"), ((2077, (6, 9)), '*GPA:\tzzz [<][>] .\n'), ((2081, (25, 30)), '*CHI:\t<is this the right feet> [<] ?\n'), ((2081, (31, 34)), '*CHI:\t<is this the right feet> [<] ?\n'), ((2085, (-1, 4)), "*GMA:\the knows them and they're not hard .\n"), ((2085, (36, 40)), "*GMA:\the knows them and they're not hard .\n"), ((2090, (-1, 4)), "*GMA:\the wouldn't ask .\n"), ((2090, (18, 21)), "*GMA:\the wouldn't ask .\n"), ((2093, (6, 9)), '*GPA:\tzzz [>] .\n'), ((2093, (10, 13)), '*GPA:\tzzz [>] .\n'), ((2096, (9, 12)), '*CHI:\tno [<] ?\n'), ((2099, (21, 24)), '*CHI:\t<this one xxx> [<] this one ?\n'), ((2103, (-1, 4)), '*MOT:\tyou messed up .\n'), ((2106, (10, 13)), '*CHI:\txxx [>] that one ?\n'), ((2114, (6, 9)), '*MOT:\tyep .\n'), ((2117, (-1, 4)), '*GPA:\toh you big phony baloney (.) .\n'), ((2117, (23, 30)), '*GPA:\toh you big phony baloney (.) .\n'), ((2117, (31, 34)), '*GPA:\toh you big phony baloney (.) .\n'), ((2121, (6, 10)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n'), ((2121, (14, 23)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n'), ((2121, (39, 42)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n'), ((2121, (50, 60)), '*MOT:\tkind of ice cream you going (t)a get at the fish store ?\n'), ((2127, (6, 9)), '*GMA:\tzzz .\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'fish cakes', 'brown bread', 'catsup', 'tartar sauce', 'cake', 'ice cream bar', 'candy', 'ice cream', 'juice', 'beans', 'concord grapes', 'fish cake', 'fish stick', 'margarine', 'mayonnaise', 'milk', 'tomatoes'])
predicted labels:
set(['', 'raining', '(t)a', 'tree>', 'help', "don't", 'money', 'dancers', '[!]', '&-um', 'no>', "won't", 'thanks', 'horns', 'yep', 'rest', 'milk', 'one>', 'bunch', 'cough>', 'thank', "he's", 'shoe', 'raining>', 'jar', 'baloney', 'lord', 'lilacs', 'mommy', 'could>', 'brown', 'someone', 'get', 'shoe>', 'grapes>', 'couple', "who's", 'stop', 'gonna', 'dark', 'lunch', 'spoon', '[>]', 'awoh', 'mom', 'half', 'boots>', 'bit', 'lady', 'day', '<throw', 'mhm', 'clouds', 'name', 'brown work', 'gun', 'candy', 'ice cream bar[!]', 'bowling', 'all>', '<does', 'river', 'side', "isn't", 'let>', 'heavy', 'right', 'picnic', 'people', 'wear>', 'house', 'fish', 'church', 'yeah', 'fish man', 'video', 'ice cream (.)', 'mirror', 'wait', 'me>', 'mother', 'ice cream', 'brown bread', 'blue', 'covers>', '<road', 'margarine', '(.)', 'thunder', 'please', 'fingers', 'good>', 'but>', 'bureau', 'hill', '(o)kay', 'nope', 'wan(t)', 'zzz', 'pouring', 'story', 'broken', 'let', 'rain', 'said>', 'ask', 'pretend', 'yes', 'book>', 'kitchen', 'store', 'only>', 'oh', "<he's", 'cup', 'shoes', 'times', 'thing', 'dinner', 'beans', '<glad', 'road', 'cakes', 'hm:', 'feet>', '&ha', 'pot', 'yyy', 'new water', 'feet', '<yeah', 'cold', 'town>', 'too>', '<the', 'money>', 'rolls', 'tastes>', 'wan', 'horse', 'enough>', "it's", 'top', 'beep', 'there>', 'music', 'way', 'fish stick', 'legs', 'angels', 'energy', 'today', 'head', 'hard', 'lot', 'what>', 'xxx', 'huh', "bread's", 'sore', 'boots', 'candy>', 'flowers', 'eat', "they're", 'kind', 'look', 'will>', 'mm', 'he>', 'tartar sauce', 'show', 'bed', 'coats', 'dirty', 'praise', 'cake', 'voice', 'this>', 'juice>', 'sticks', 'taste', '<coat', 'mine', 'covers', 'ice cream too>', 'honey', 'juice', '[?]', 'fish cake', 'throat', 'white ones', 'tells', 'we>', 'pink', '[/]', 'winter', 'drawers', 'bad>', 'yellow', 'song', 'ice cream>', 'book', 'belly', 'boats', '<home', 'mayonnaise', 'smell', 'blanket', 'tomatoes', 'bells', 'piece>', "won't>", 'okay', '<are', 'park', 'use', 'made>', "let's", 'oh>', 'flower', 'mouth', 'bear', 'supper', 'can>', '[<]', 'rain coat', 'hurt', 'pages', 'man', 'butter', 'it>', 'singer', 'you>', 'home', 'coat', 'holes', 'purple', 'ones', 'time', 'catsup>', 'people>', 'songs', 'fish store', "that's"])
file:HSLLD/HV1/MT//bramt1.cha
precision: 0.0571428571429
recall: 0.777777777778
true positives:['beans', 'brown bread', 'butter', 'cake', 'candy', 'fish cake', 'fish stick', 'ice cream', 'juice', 'margarine', 'mayonnaise', 'milk', 'tartar sauce', 'tomatoes']
false positives: ['', '&-um', '&ha', '(.)', '(o)kay', '(t)a', '<are', '<coat', '<does', '<glad', "<he's", '<home', '<road', '<the', '<throw', '<yeah', '[!]', '[/]', '[<]', '[>]', '[?]', 'all>', 'angels', 'ask', 'awoh', 'bad>', 'baloney', 'bear', 'bed', 'beep', 'bells', 'belly', 'bit', 'blanket', 'blue', 'boats', 'book', 'book>', 'boots', 'boots>', 'bowling', "bread's", 'broken', 'brown', 'brown work', 'bunch', 'bureau', 'but>', 'cakes', 'can>', 'candy>', 'catsup>', 'church', 'clouds', 'coat', 'coats', 'cold', 'cough>', 'could>', 'couple', 'covers', 'covers>', 'cup', 'dancers', 'dark', 'day', 'dinner', 'dirty', "don't", 'drawers', 'eat', 'energy', 'enough>', 'feet', 'feet>', 'fingers', 'fish', 'fish man', 'fish store', 'flower', 'flowers', 'get', 'gonna', 'good>', 'grapes>', 'gun', 'half', 'hard', "he's", 'he>', 'head', 'heavy', 'help', 'hill', 'hm:', 'holes', 'home', 'honey', 'horns', 'horse', 'house', 'huh', 'hurt', 'ice cream (.)', 'ice cream bar[!]', 'ice cream too>', 'ice cream>', "isn't", "it's", 'it>', 'jar', 'juice>', 'kind', 'kitchen', 'lady', 'legs', 'let', "let's", 'let>', 'lilacs', 'look', 'lord', 'lot', 'lunch', 'made>', 'man', 'me>', 'mhm', 'mine', 'mirror', 'mm', 'mom', 'mommy', 'money', 'money>', 'mother', 'mouth', 'music', 'name', 'new water', 'no>', 'nope', 'oh', 'oh>', 'okay', 'one>', 'ones', 'only>', 'pages', 'park', 'people', 'people>', 'picnic', 'piece>', 'pink', 'please', 'pot', 'pouring', 'praise', 'pretend', 'purple', 'rain', 'rain coat', 'raining', 'raining>', 'rest', 'right', 'river', 'road', 'rolls', 'said>', 'shoe', 'shoe>', 'shoes', 'show', 'side', 'singer', 'smell', 'someone', 'song', 'songs', 'sore', 'spoon', 'sticks', 'stop', 'store', 'story', 'supper', 'taste', 'tastes>', 'tells', 'thank', 'thanks', "that's", 'there>', "they're", 'thing', 'this>', 'throat', 'thunder', 'time', 'times', 'today', 'too>', 'top', 'town>', 'tree>', 'use', 'video', 'voice', 'wait', 'wan', 'wan(t)', 'way', 'we>', 'wear>', 'what>', 'white ones', "who's", 'will>', 'winter', "won't", "won't>", 'xxx', 'yeah', 'yellow', 'yep', 'yes', 'you>', 'yyy', 'zzz']
false negatives: ['catsup', 'concord grapes', 'fish cakes', 'ice cream bar']
# true pos: 14
# false pos: 231
# false neg: 4
HSLLD/HV1/MT//kurmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*CHI: whose [///] you're playin(g) that ?", '*MOT: yeah .', "*MOT: just don't touch it <eat your lu(nch)> [//] eat your supper .", '*CHI: what is that for ?', "*MOT: it's a tape recorder .", '*CHI: for me ?', '*MOT: for the both of you .', '*MOT: I have_to record suppertime .', "*CHI: that's what it is for ?", '*MOT: yep .', '*SIS: who gave you that ?', '*MOT: Anne and Maggie .', "*CHI: well &-um that's alright .", '*MOT: no not stuck in there .', "*CHI: what's the red one for ?", '*MOT: to play .', '*UNC: how did things go today ?', '*MOT: alright xxx .', "*CHI: that [/] that's mine right ?", '*CHI: some both of us .', "*SIS: I'm not talkin(g) .", "*MOT: no <you're> [//] it's gonna record what you [!] say at suppertime .", '*CHI: me and Nikki ?', '*MOT: yep .', '*SIS: yay !', '*MOT: hot very hot .', '*MOT: blow on it .', "*SIS: doesn't [?] do it !", '*MOT: stick your sandwiches [///] no Nikki !', "*MOT: don't do that you'll make a big mess .", '*MOT: see !', '*MOT: I told you !', "*SIS: I'm gonna wipe .", '*MOT: butter [?] stick to sandwiches and I hope you do .', "*CHI: that's how I like it .", "*CHI: that's how I like it .", '*CHI: I like it hot .', '*MOT: eat over your bowl .', '*SIS: zzz .', '*CHI: Ma ?', "*CHI: you're puttin(g) wine in that ?", '*MOT: nope .', '*CHI: right ?', "*MOT: that's a fireman [?] .", "*SIS: I've a diamond right there .", '*MOT: okay .', '*MOT: push this on the table .', "*CHI: this [///] we willn't look at the little +/.", '*SIS: I make a hot .', '*CHI: what ?', '*MOT: you make it hot ?', '*SIS: mhm .', '*MOT: what if it burns your mouth ?', '*CHI: no .', "*MOT: it doesn't burn your mouth ?", '*CHI: nope .', '*SIS: uhuh .', '*CHI: it cool .', '*CHI: my &-uh &-uh &-uh what is [///] <well I like it> [>] .', '*MOT: <eat over the bowl> [<] !', "*SIS: don't xxx there .", "*SIS: where's Uncle <Dav(id)> [/] Davids goin(g) ?", '*MOT: to the tow truck .', "*SIS: and then he'll come right back ?", '*MOT: yeah .', '*MOT: turn around and eat your dinner .', '*MOT: come on Buddy eat your soup .', '*MOT: do you guys want a drink of milk ?', '*SIS: yeah !', '*MOT: eat over your bowls .', "*CHI: &-uh I'll have a glass of milk .", '*MOT: please ?', '*CHI: please (.) .', "*CHI: David's goin(g) bye bye (.) .", '*CHI: another beer [?] (.) .', '*CHI: xxx milk .', '*CHI: mine .', "*MOT: don't spill it .", "*CHI: where'd you get the glass from ?", "*MOT: don't drink it all either (be)cause then you'll fill up and you won't eat your supper .", '*UNC: you gonna go to Boston this weekend ?', '*MOT: yeah .', '*UNC: to the concert hall ?', '*MOT: xxx [>] .', "*CHI: <you don't go up high> [<] .", '*CHI: you want me to stir it ?', '*CHI: you want me to cut it you want me to stir it ?', "*MOT: it'll cool down .", '*CHI: what ?', "*MOT: it'll cool down .", '*CHI: want me to stir it ?', "*MOT: yep and you're gonna spill all xxx .", '*MOT: take it easy !', "*MOT: Martha's comin(g) tonight .", '*SIS: mhm .', "*SIS: Martha's comin(g) tonight too .", "*MOT: she's gonna sit in your seat .", '*CHI: zzz .', '*MOT: see what a slob [!] you are .', '*CHI: <last time I > [//] <last night> [//] last time I was eatin(g) [?] .', '*MOT: mhm .', '*CHI: last time I was eatin(g) .', '*MOT: come on eat your sandwich too .', "*MOT: eat over your bowl that's how come you spill it all over you .", '*SIS: I miss it xxx (.) .', '*MOT: hot in here ?', '*UNC: that a good sandwich Nik ?', '*SIS: I like it hot .', '*MOT: you like it hot ?', '*UNC: that a good sandwich ?', '*MOT: Eric !', '*SIS: mhm .', "*MOT: please don't ask [//] make me ask you again .", '*CHI: what ?', '*MOT: to eat <your sandwich and stop playin(g)> [>] .', "*SIS: <don't <make a> [/] make a > [<] +...", "*CHI: I'm just stirrin(g) it .", '*SIS: xxx .', '*MOT: I want you to eat .', "*MOT: you're gonna spill it .", '*SIS: what eatin(g) ?', "*UNC: where's Alf ?", '*MOT: sleepin(g) or hidin(g) somewhere .', '*MOT: kids got him xxx [>] .', '*SIS: <I was peeing [?]> [<] in the bath+room and I was peeing [?] in the cubby .', "*UNC: <he's sleepin(g) in there> [>] .", '*MOT: <I know> [<] .', '*MOT: probably (be)cause the kids got <hold of him> [>] this afternoon .', '*UNC: <he is> [<] .', '*CHI: yep !', '*MOT: Nikki do you want Mommy to make you another sandwich ?', '*SIS: yeah .', '*SIS: blum@b blum@b .', "*CHI: I'm eatin(g) all my sandwich (.) .", "*CHI: the light's on ?", '*CHI: I see a light on .', '*UNC: want me to try xxx ?', "*MOT: I can't xxx for saturday .", '*MOT: xxx .', '*UNC: oh .', "*MOT: Theresa's leaving saturday .", "*MOT: I'd love to xxx .", "*MOT: that's xxx .", "*UNC: xxx for Donald's [?] for saturday night ?", '*MOT: late saturday afternoon .', '*MOT: Theresa has to be at the airport around five (.) at five .', '*UNC: Brian still need a ride or somethin(g) tomorrow ?', '*MOT: xxx .', "*UNC: (be)cause I could get [>] I'll be out of work &-uh by ten thirty tomorrow or eleven o'clock if you want me to babysit (th)em or somethin(g) .", '*SIS: <Brian> [<] !', '*MOT: xxx (un)til nine tomorrow .', '*UNC: oh a better idea .', "*UNC: I'll go drive him home .", '*UNC: zzz .', '*MOT: xxx .', "*UNC: well if you need (.) you know (.) if Brian's not gonna do that .", "*UNC: I'll be around .", '*MOT: yeah I xxx .', '*UNC: xxx huh ?', '*MOT: yeah .', '*MOT: xxx [>] .', '*CHI: <zzz right> [<] ?', "*SIS: <I'm gonna have xxx> [>] .", '*CHI: what@q ?', '*SIS: xxx [>] .', '*MOT: xxx [<] .', '*MOT: xxx Brian was asleep .', '*UNC: xxx was unlocked ?', '*CHI: what ?', '*MOT: it was locked but the inside [>] all you have_to do is turn the knob and it unlocks .', "*MOT: so <she took> [/] she took <the latch> [/] the latch so she could put it at the top of the door so he can't get in .", '*CHI: what [<] ?', '*UNC: is Jerry and &-uh Timmy gonna go down there this weekend ?', "*MOT: I'm not sure .", '*MOT: I xxx .', '*SIS: I xxx sandwich .', '*UNC: xxx take it over tell him to &-um xxx [>] .', '*SIS: <I xxx sandwich> [<] .', '*MOT: what Nik ?', "*SIS: I don't want a sandwich .", "*MOT: you don't want another sandwich ?", '*SIS: uhuh .', '*UNC: xxx .', "*SIS: I'm full .", '*MOT: well I want you to eat your soup .', "*SIS: I don't wan (t)a .", "*MOT: <I want you> [//] Uncle David'll eat it .", '*MOT: you eat your soup .', '*CHI: need a napkin .', '*MOT: hey !', "*MOT: what's going on ?", '*UNC: so what did you do today Eric ?', '*CHI: just stayed home .', '*UNC: just stayed home ?', '*UNC: play outside ?', '*CHI: yes but [/] but Billy and Roxanne made Nikki cry [?] .', "*UNC: that wasn't nice of him .", '*CHI: nope [>] .', '*SIS: nope [<] .', '*SIS: and [/] and I was cryin(g) and then my mama +...', '*UNC: ssh !', '*UNC: xxx .', '*CHI: and then she did this .', '*CHI: Billy helped [?] .', "*UNC: who's Billy ?", '*CHI: &-um &-uh over the way hill .', '*SIS: over that way hill .', '*SIS: that way hill .', '*UNC: that one ?', '*SIS: yeah .', '*UNC: yeah ?', '*CHI: yeah .', '*UNC: did he say he was sorry ?', '*CHI: no .', '*CHI: &-um <he &w> [/] he lives over that house .', '*SIS: he lives over that house .', '*CHI: then he lives over this house .', '*SIS: yep !', '*CHI: where his car [?] is asleep .', '*SIS: yep !', '*SIS: that car right ?', '*CHI: the white car ?', '*SIS: yeah .', "*UNC: that's enough Eric (.) !", '*UNC: thank you .', '*SIS: xxx .', '*CHI: drink your milk .', '*UNC: yeah .', '*UNC: zzz .', '*CHI: there <turn it on> [>] .', '*UNC: <turn this on> [<] .', "*UNC: it's good for you .", "*CHI: I'm full .", '*CHI: full .', "*CHI: I'm gettin(g) a bellyache .", "*SIS: I'm gettin(g) a bellyache .", '*UNC: oh stop !', '*CHI: I am .', '*UNC: you still got some sandwich and some soup left Eric .', "*SIS: I'm all done my sandwich .", '*UNC: yeah .', '*CHI: yep !', '*UNC: you just got ta eat your soup .', '*CHI: yep .', '*SIS: I ate it all .', '*SIS: right ?', '*UNC: who gave you that new hair do xxx ?', '*CHI: Mom put spike in it .', '*UNC: oh she spiked it today ?', '*CHI: yep .', '*UNC: yeah ?', '*UNC: new hair+cut .', '*UNC: xxx .', "*SIS: me [/] my hair's gonna get cut +/.", '*UNC: no .', '*SIS: xxx right ?', '*UNC: Mommy wants to leave your hair long .', "*SIS: no I'm gonna get my hair cut .", '*UNC: oh yeah ?', '*SIS: yeah .', '*UNC: why ?', '*SIS: cut it all .', '*UNC: no .', "*UNC: girls don't get all their hair cut !", '*SIS: yeah !', '*UNC: no .', '*UNC: they leave it long .', '*CHI: down to the ground right ?', '*UNC: no not that far .', '*UNC: but <they let> [/] they let it grow long [>] .', '*SIS: yeah [<] !', '*CHI: but they let it down to the ground ?', '*SIS: one two three four five six seven eight (.) bowl .', '*CHI: one two three four .', '*SIS: one two three four five six seven eight .', "*SIS: don't eat my sandwich !", "*CHI: that's Nikki's sandwich ?", "*SIS: I don't like it .", "*UNC: Nikki don't want a sandwich .", "*MOT: come on let's eat .", "*UNC: what's up with Brian ?", "*MOT: Brian doesn't need anybody tomorrow night .", '*UNC: no ?', '*MOT: no .', '*UNC: he got someone ?', '*MOT: no .', "*MOT: they're just makin(g) an impression like when you go in and you have false teeth done .", "*MOT: so he called in today I guess and said he doesn't need anybody .", '*CHI: only big people meet ?', "*UNC: this isn't Cyrus [?] from work that run this ?", '*MOT: no .', '*MOT: xxx .', '*CHI: mhm .', '*UNC: must be .', '*CHI: Mommy ?', '*MOT: I have no idea .', '*CHI: Mommy is this [= tape recorder] playin(g) ?', '*MOT: yes it is .', '*CHI: then why is it not gonna talk ?', "*MOT: because it's recording what you're saying .", "*MOT: I'll show you after when you're all done eating .", "*CHI: Mommy I'm done can I sit in that chair ?", "*MOT: you're not gonna touch that .", "*MOT: you're gonna eat your supper first .", "*MOT: Nikki do you want the other half of Eric's sandwich ?", '*SIS: no .', '*MOT: to dunk in your soup ?', '*SIS: no .', '*CHI: here you go .', "*CHI: I'll give it to you .", "*SIS: no I don't +/.", "*MOT: she doesn't want it .", "*MOT: don't make her .", '*CHI: Nikki <w(ant)> [/] want my sandwich ?', "*MOT: she doesn't want it Eric .", "*CHI: well I'll give it to you .", "*MOT: I don't want it .", "*MOT: I'm not hungry .", "*SIS: I don't want it .", '*MOT: come on eat !', '*UNC: Daniel xxx work xxx today .', '*MOT: Daniel did ?', "*UNC: <he didn't even> [//] actually he didn't even work .", "*UNC: he showed up about nine o'clock on his motorcycle and it was still you know kind o(f) drizzling out and stuff (.) so <he went> [//] he took first truck and went home (.) to pick up Mark (.) he came back (.) he dropped some stuff off at Fred's house came back (.) took his motorcycle and left .", '*MOT: did Mark work ?', '*UNC: yep .', '*UNC: Mark and I just got done you know .', '*UNC: you know and he xxx over there .', '*CHI: yeah <I took> [/] I took some of this in my mouth <I> [/] <I> [/] I keeped@n it in my mouth and I took some of the milk [?] .', '*CHI: it taste good .', '*SIS: xxx +/.', '*CHI: you can feel my muscles .', '*MOT: yeah I can see them .', '*CHI: Mommy <want to feel (th)em> [>] ?', '*SIS: xxx [<] .', '*CHI: wait <can you> [/] can you feel [!] (th)em ?', "*CHI: they're pretty big .", '*MOT: they look [!] big .', '*MOT: oh yeah !', '*MOT: big [>] muscles !', '*CHI: yeah [<] .', '*CHI: feel the other one .', '*CHI: big ?', '*SIS: feel mine .', '*MOT: big muscles oh yeah baby !', '*SIS: feel this one .', '*MOT: boy .', '*CHI: &-uh &-uh that muscle !', '*CHI: let me see the other muscle .', '*UNC: zzz .', "*CHI: it's small ?", '*UNC: small ?', '*MOT: zzz .', "*UNC: yeah <they're> [/] they're small Buddy .", '*MOT: xxx David .', '*CHI: big [?] !', '*MOT: okay eat up your soup .', '*UNC: yeah .', '*UNC: dunk your sandwich in your soup .', '*CHI: all gone .', '*UNC: eat your soup .', '*UNC: wow !', "*SIS: I <can dunk it in my milk> [<] and it's gonna be good .", '*SIS: one two three four five six seven eight nine twelve twenty [?] .', '*MOT: zzz .', '*MOT: got_to call Nanna .', "*UNC: you still haven't got in touch with her ?", "*MOT: I didn't try today .", "*SIS: Uncle Dave's truck right ?", '*MOT: mhm .', "*SIS: and Jimmy [?] do this and I'm gonna do this .", '*MOT: come on eat nice .', "*MOT: you're gonna make me mad .", '*MOT: Eric !', '*MOT: swallow it !', '*MOT: you can go to bed early tonight [>] .', "*SIS: <I'm gonna do> [<] that .", "*MOT: no you're not .", '*MOT: see what you teach your sister ?', "*MOT: that's not nice to do at the supper table .", '*CHI: zzz .', '*CHI: like that .', "*MOT: I don't (.) !", '*MOT: Eric !', "*MOT: it's not funny .", '*CHI: tryin(g) to stop .', "*MOT: no you're not .", "*MOT: you're not trying hard enough .", '*SIS: like that !', '*CHI: uhuh .', '*MOT: I did the best I could at cleaning that car out .', "*SIS: I'm gonna <scream with a fork > [>] .", '*UNC: xxx [<] .', "*MOT: it's got a lot of dirt in <it &-uh> [>] on the passenger side the leather's all like going to shreds xxx .", '*CHI: hey [<] !', '*CHI: <le(t) me see> [<] .', '*UNC: did you vacuum it [>] ?', '*CHI: <boom@o> [<] !', '*MOT: he said it was hard getting the xxx out .', "*SIS: let's see yours .", "*MOT: come on <Martha's> [>] gonna be here and you're not gonna be done eatin(g) supper .", '*SIS: no [<] !', '*CHI: yes !', "*MOT: no you're not .", "*CHI: I'm gonna beat Martha up .", '*CHI: yes [>] !', "*MOT: <that's not nice> [<] .", "*CHI: I'm gonna chop it up and eat it .", '*UNC: when was that &-uh <cruise thing> [>] ?', '*CHI: <<I> [/] <&w> [/] wan (t)a> [<] chop it up and eat it .', '*SIS: yeah !', "*UNC: <it's this weekend isn't it> [>] ?", '*CHI: zzz [<] .', '*MOT: July fifteenth .', "*UNC: oh it's next weekend .", '*UNC: are you gonna go ?', '*MOT: two weekends .', '*MOT: three weekends .', '*MOT: July fifteenth [>] .', '*UNC: <two weekends> [<] .', '*UNC: <two more weeks> [>] .', '*MOT: <no next> [<] [///] this weekend comin(g) up is July first .', '*MOT: next weekend is July ninth .', '*UNC: are you gonna go ?', "*MOT: I don't know .", '*UNC: <Mark said> [//] Mark went on one <&-uh > [>] .', '*MOT: when [<] ?', '*UNC: what is it ?', "*UNC: one of those xxx <called the> [//] it's called the Bud Light &-uh cruise or something like that you know [>] ?", '*MOT: <over your bowl> [<] !', '*MOT: yeah .', '*UNC: Bud Light sponsors it .', '*UNC: he said that he went on one it was pretty good he saw Beatlemania .', '*MOT: Jasmine +/.', '*SIS: ahhah !', "*MOT: Jasmine's gonna be on it .", '*UNC: yeah he said it was pretty good .', '*MOT: no !', '*MOT: no !', '*UNC: they <had a &-uh they had the> [>] live band upstairs and the disc jockey downstairs .', '*SIS: <xxx this thing [= taperecorder?] talk> [<] ?', '*MOT: yeah ?', '*UNC: he said it was well worth the money .', '*UNC: I told him you know that it was twelve bucks +/.', '*MOT: Eric where are you goin(g) ?', "*CHI: I'm goin(g) potty .", '*CHI: xxx .', '*CHI: I fell .', '*MOT: you got ta eat some soup .', '*CHI: ow !', '*CHI: ow !', '*MOT: you alright ?', '*CHI: I bumped my head !', '*MOT: come (h)ere .', '*CHI: you see the cut .', "*MOT: you're fine .", '*MOT: go potty [>] .', '*CHI: <it hurts> [<] .', '*MOT: go potty .', '*CHI: but I xxx .', "*CHI: it's all filled .", "*MOT: that's because you kept drinkin(g) your milk .", '*MOT: go to your room .', '*MOT: xxx to make Mommy happy again please .', '*SIS: feel my stomach .', '*CHI: <would you> [/] would you <xxx me up> [>] ?', '*SIS: <Mom feel my stomach> [<] .', "*MOT: I know it's fat .", '*SIS: yeah but my bum is +/.', '*MOT: wow !', "*MOT: Nikki's <beatin(g) > [>] .", '*CHI: <would you> [<] help once ?', "*MOT: Nikki's beatin(g) you Eric .", '*CHI: xxx .', '*MOT: probably .', "*CHI: I think it's +/.", '*MOT: pull your pants up please .', '*MOT: you should do that in the bath+room .', '*MOT: stop it .', '*MOT: now go finish your soup .', "*MOT: Nikki's beatin(g) you and she's littler than you .", '*CHI: zzz .', "*CHI: she ain't !", '*MOT: yeah she is .', '*SIS: look_it !', '*MOT: over your bowl !', '*CHI: <I can> [/] I can eat faster than her .', '*SIS: uhuh .', '*MOT: Eric sit down .', '*MOT: the right way .', '*MOT: move your milk out of the way .', '*SIS: move your milk out of the way !', "*MOT: don't yell .", '*SIS: xxx [>] .', '*CHI: <Nikki> [<] you can get that over here so I can see it ?', '*MOT: no !', '*MOT: you can eat your supper .', '*SIS: nima@b .', '*SIS: Mommy nima@b ?', "*MOT: eat over the bowl I'll clean it up after .", '*SIS: xxx this ?', '*MOT: eat please .', "*CHI: &-um I'm almost beatin(g) her too .", '*SIS: uhuh .', '*SIS: xxx [>] .', '*MOT: <over your bowl> [<] .', '*MOT: how many times do I have_to tell you ?', '*MOT: over your bowl !', '*SIS: hm: !', "*SIS: <I'm makin(g) xxx> [>] .", '*CHI: <we make a nice> [<] car right [>] ?', '*MOT: huh [<] ?', '*CHI: we make a nice car right ?', '*SIS: zzz .', '*MOT: eat please .', "*SIS: that's alright .", '*CHI: what car ?', "*SIS: my mama's car .", '*CHI: and <whose c(ar)> [//] whose truck ?', '*MOT: Eric !', "*MOT: you're gonna spill your soup please eat (.) !", '*MOT: no !', '*MOT: eat your soup !', "*MOT: that's why you're gettin(g) filled up and can't eat your supper .", '*SIS: oh you rotten egg !', "*SIS: right I'm gonna be in a rotten egg right ?", "*MOT: no you're not gonna be a rotten egg Eric's gonna be a rotten egg .", '*SIS: no !', "*SIS: I'm gonna be a rotten egg .", '*MOT: no !', "*MOT: you're gonna win .", "*MOT: he's gonna be the rotten egg .", "*SIS: I'm gonna win ?", '*MOT: &-uh huh .', "*SIS: Eric's gonna be a rotten egg ?", '*MOT: rotten[!] egg .', '*SIS: rotten[!] egg [!] ?', '*MOT: &-uh huh .', "*SIS: I'm gonna be a +/.", '*CHI: almost done !', '*MOT: you got ta stop talkin(g) and eat !', "*CHI: I'm beatin(g) her (.) .", "*CHI: <you're not> [/] you're not beatin(g) me (.) .", '*CHI: zzz .', "*MOT: don't .", "*MOT: that's not nice (.) .", '*MOT: wow Nikka !', '*CHI: zzz .', '*MOT: wow !', '*MOT: you all done Nik ?', '*SIS: almost .', "*CHI: I'm done !", "*CHI: I'm a rotten egg .", "*CHI: I'm a rotten egg Nikki .", '*CHI: I bet you .', '*CHI: we both bet right ?', '*MOT: you all done Nik ?', '*MOT: Nikki are you all done ?', "*SIS: not yet I'm tryin(g) +/.", "*MOT: that's enough !", "*MOT: you're gettin(g) it in your hair !", '*MOT: good girl drink your milk .', '*MOT: good boy .', '*CHI: look Mommy .', '*CHI: now can I see it ?', '*MOT: no .', "*MOT: don't touch it .", '*MOT: drink your milk .', "*MOT: you're not gonna eat this ?", '*CHI: no .', '*MOT: drink your milk .', "*SIS: I will eat it [= Eric's sandwich] .", "*CHI: <I> [/] I'll put this up top of there .", '*MOT: xxx [>] .', "*SIS: <I'm goin(g) ta> [<] eat it .", '*CHI: oh !', "*MOT: you're gonna eat it Nik ?", '*SIS: yeah .', '*MOT: good .', '*CHI: huh (.) .', "*CHI: I couldn't eat my sandwich .", '*SIS: me .', '*MOT: drink your milk please .', '*CHI: I have xxx tea .', '*SIS: I been drinking your tea .', '*CHI: hm: ?', '*CHI: what ?', "*CHI: you're drinkin(g) my tea ?", '*SIS: mm .', '*SIS: yeah !', '*SIS: zzz .', "*SIS: you're drinkin(g) your tea .", '*SIS: zzz .', '*CHI: drinkin(g) it ?', '*SIS: uhhuh !', '*CHI: eatin(g) it ?', '*SIS: &-um drinkin(g) it .', '*CHI: no .', '*CHI: we drink milk !', '*SIS: we drink tea .', '*MOT: you all done Buddy ?', '*CHI: yeah .', '*MOT: put your cup in the sink .', '*CHI: and then can I see this ?', "*MOT: it's all done .", "*MOT: you're all done .", "*MOT: I'm gonna shut it off .", '*CHI: no .', '*MOT: yeah .', '*MOT: suppertime is all done .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//kurmt1.cha
HSLLD/HV1/MT//termt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: now you can talk .', '*MOT: and eat your food .', '*CHI: test test !', '*CHI: (.) I said test test .', '*CHI: xxx [>] .', '*FAT: xxx [<] key to get in .', '*MOT: huh ?', '*FAT: xxx key to <get in> [>] .', '*CHI: <test test> [<] !', "*MOT: where's your key ?", '*FAT: xxx .', "*MOT: how'd you get in ?", '*FAT: climbed through the window .', '*MOT: what window ?', '*FAT: the basement .', "*MOT: eat your food Chi don't play with it .", '*FAT: climbed through the window had to break into the shed .', '*FAT: with a knife and a screwdriver .', "*FAT: I didn't have no key .", "*FAT: I'm standin(g) out here bangin(g) .", '*FAT: honey let me in !', "*MOT: you didn't see my car was gone ?", '*FAT: no .', '*MOT: dumbo@wp .', "*MOT: Chi don't play with your food honey .", '*CHI: &=laughs .', "*FAT: what's goin(g) on ?", '*CHI: &=laughs .', '*MOT: oh Joanne was very bad today .', '*FAT: again ?', '*MOT: yes .', "*MOT: she xxx xxx nap and that's it .", "*MOT: she wouldn't go to sleep thanks to you saying no pacifier .", '*FAT: oh .', '*MOT: she was just a pain in the butt I have a big headache .', '*FAT: oh xxx .', '*CHI: daddy [>] ?', '*MOT: <Chi was good> [<] .', "*FAT: who's over to your mother's house ?", '*MOT: nobody .', '*FAT: they all left [>] ?', '*MOT: yeah [<][>] .', '*CHI: mommy [<] I want daddy to tie my shoe .', '*MOT: okay go tell daddy .', '*CHI: daddy would you <tie my shoe> [>] ?', "*FAT: <I'm not tyin(g) no> [<] shoes .", '*CHI: would you tie my shoes ?', '*FAT: alright come on over here .', '*FAT: you gonna do that thing tonight that lady call you ?', '*MOT: no .', "*FAT: she <didn't call> [>] you ?", '*CHI: xxx [<] .', '*MOT: no .', "*MOT: she's gonna call me sometime this week .", '*FAT: she called already she wants to know if she can come pick up her thing .', '*MOT: already ?', '*FAT: she called when I was here the first time .', "*MOT: oh I didn't know that what'd you say ?", '*FAT: when I came in the house to get xxx .', '*FAT: change my shirt .', '*MOT: yeah ?', '*CHI: &=gasp !', '*FAT: she called up .', "*FAT: where'd she get that hot dog ?", "*MOT: my mother's house .", '*MOT: she said she had a barbecue hamburgers and hot dogs .', "*FAT: oh she <thinks she's a xxx huh> [>] ?", "*CHI: <don't eat my> [<] hot dog .", '*FAT: whose are better ?', "*CHI: <it's my> [>] hot dog .", "*MOT: <I didn't have any> [<] .", '*FAT: come on help me up .', '*MOT: <I> [/] I was in a rush <to get> [>] home .', '*CHI: me [<] ?', '*FAT: oh .', '*MOT: (be)cause <I> [/] I know <when you> [>] go home you say where is she ?', '*CHI: xxx [<] .', '*FAT: I was like what the heck ?', '*MOT: did you see my note ?', '*FAT: yeah I found the note just +...', '*FAT: <I found the note I found> [>] twenty dollars xxx .', '*CHI: <test test> [<] .', '*MOT: xxx .', '*FAT: &=laughs .', '*MOT: this child oh !', '*FAT: oh Jesus .', '*FAT: oh I xxx one thing .', '*MOT: xxx talk to him .', '*CHI: xxx .', '*MOT: oh I forgot to get Karen White .', '*MOT: xxx [>] .', '*FAT: xxx [<][>] .', '*CHI: xxx [<] !', '*MOT: no I wanna make my own xxx .', '*FAT: xxx .', '*MOT: xxx .', '*CHI: &=humming .', '*MOT: Eric .', '*CHI: &=humming .', '*SIS: xxx !', '*SIS: Eric .', '*CHI: <&=humming > [>] .', '*SIS: <xxx go> [<] .', '*MOT: Chi did you finish honey ?', '*CHI: mhm .', '*MOT: chew your food .', '*CHI: (o)kay .', '*SIS: &=coughs .', '*MOT: are you eating ?', '*CHI: &=humming .', '*MOT: Sis you gonna be a good girl ?', '*CHI: &=humming .', '*SIS: xxx .', '*MOT: you be nice alright ?', '*CHI: &mo &m mommy you (al)ready said that .', "*MOT: yeah I know I said that <but I don't want> [>] +/.", '*SIS: mommy [<] !', '*MOT: what ?', '*SIS: nice .', '*MOT: yes nice be nice .', '*SIS: xxx [>] .', '*MOT: <and [/] and stop taking> [<] your shoes off .', '*MOT: (.) <leave your shoes on> [>] .', '*FAT: xxx [<] did you say this was any good ?', '*MOT: which one ?', '*SIS: <&=yells > [>] .', '*FAT: <that one> [<] ?', '*MOT: Donny ?', '*FAT: yeah .', '*CHI: xxx mommy look_it [>] !', '*MOT: <I guess so> [<] (be)cause he has it .', '*MOT: what are you doin(g) Chi ?', '*CHI: what ?', '*MOT: what <are you doin(g)> [>] ?', '*FAT: xxx [<] .', '*CHI: oh nothing .', '*MOT: xxx silly ?', "*MOT: xxx that lady's cute .", "*MOT: I don't know how old is she's about Tiffany's <and &-um Debbie Gibson's age> [>] .", '*CHI: <xxx help help> [<] .', '*FAT: xxx too ?', '*MOT: yeah .', '*CHI: my xxx is xxx .', '*MOT: her hair+cut is real short up to her ears .', '*FAT: xxx [>] .', '*CHI: <xxx I xxx> [<] .', '*MOT: hers .', '*CHI: xxx .', '*CHI: <0 [=! high-pitched murmuring as she pretends]> [>] .', '*MOT: <no cut shorter> [<] .', "*MOT: she was on channel five for &-um &-um something xxx against xxx that's it .", "*CHI: <&mm xxx <that's like> [/] that's like> [>] +...", '*MOT: but <xxx like the &-um> [<] this month and her <hair+cut is all the way up to her ears> [>] .', '*CHI: <I did momma> [<] .', '*FAT: xxx .', "*MOT: <it's straight xxx> [>] .", '*CHI: <mommy I did> [<][>] .', '*FAT: <when did you see xxx> [<] ?', '*MOT: huh ?', '*FAT: <when did you see xxx> [>] ?', '*CHI: <I did> [<] .', '*MOT: xxx recorded it .', '*CHI: I did momma [>] .', "*MOT: <okay let's> [<] [//] you gotta wait for Sis to finish (be)cause I don't want to give one to you and Sis sees it .", '*MOT: so you gotta wait for Sis to finish her dinner okay ?', '*CHI: xxx .', '*FAT: xxx [>] .', '*SIS: xxx [<][>] !', '*CHI: <momma I said> [<] test test .', '*FAT: xxx .', '*MOT: yeah you +...', '*FAT: xxx .', '*MOT: yeah .', "*MOT: you go ahead <I'll stay and watch the kids (be)cause> [>] +...", '*CHI: <I did like> [<] test test .', "*MOT: I don't feel like <racing around> [>] with them .", '*CHI: xxx [<] .', "*MOT: <you can &t> [//] you can't touch it though you can talk to it but <you can't> [/] (.) you can't touch it .", '*FAT: you okay ?', "*MOT: yeah I'm just tired [>] .", '*FAT: <you rather> [<] have me stay home ?', '*MOT: huh ?', '*FAT: you rather have me stay home ?', '*MOT: no you can go xxx you can stay home xxx you can go play (be)cause I said you could so go on .', "*MOT: I just don't want to chase around outside xxx that's all .", '*FAT: want me to xxx [>] .', '*CHI: xxx [<] .', '*MOT: huh ?', '*FAT: xxx .', "*MOT: she can't play here by herself .", '*CHI: &=yelling .', "*MOT: where's everybody else ?", '*FAT: xxx .', '*CHI: &-uh xxx daddy .', '*MOT: xxx the pork chops done ?', '*FAT: no did you did you check them when you came in ?', "*MOT: yeah but I don't +...", '*FAT: I turned the oven off .', '*MOT: yeah thank you .', '*MOT: the rice is done .', '*FAT: yep .', '*CHI: &=laughing .', '*FAT: you gonna eat ?', "*MOT: yeah Chi ate a lot over my mother's house .", '*FAT: yeah ?', '*MOT: yeah .', '*FAT: no more beef ?', '*CHI: <no more beef> [>] ?', '*MOT: no (.) <sorry I was looking> [<][>] for you .', '*FAT: <xxx gonna get any> [<] for me .', '*MOT: I was lookin(g) for it for you .', '*FAT: Chi honey come on honey hurry up an(d) eat .', '*FAT: no no stay still .', '*FAT: xxx .', '*MOT: every time she has a bad day she gives me such a bad headache .', '*MOT: xxx heat xxx .', '*CHI: xxx .', '*FAT: cheer up .', '*MOT: I am .', '*CHI: &=laughing .', '*MOT: how was work ?', '*FAT: everything xxx alright .', '*CHI: &=laughing .', '*MOT: who was working ?', '*FAT: me .', '*CHI: &=laughing .', "*MOT: where's everybody else ?", "*FAT: I don't know .", '*FAT: when I went in there there was &-um Dave .', "*FAT: Dave was supposed <to xxx> [>] then there was Jackie (.) Jackie came in I don't know why she came in .", '*CHI: <&=laughing > [<] .', "*FAT: but &-um her name <wasn't on the schedule> [>] (.) you know ?", '*CHI: <&=laughing > [<] .', '*MOT: uhhuh .', '*FAT: so I went downstairs and got xxx and then told her to leave after I came back upstairs .', "*FAT: xxx glad you're here I'm goin(g) to get some licorice .", '*CHI: <&=laughs > [>] .', '*MOT: <did you play> [<] the numbers ?', '*FAT: I played a couple .', '*FAT: you have_to wait until eight o@l clock .', '*SIS: &=coughs .', '*MOT: Sis honey pick up your food over there .', '*MOT: pick up your food .', '*MOT: right there .', '*MOT: <go on right there> [>] .', '*CHI: <0 [=! shrieking and laughing]> [<] [>] .', '*MOT: right there .', '*MOT: turn around .', '*MOT: behind you .', '*MOT: right there .', '*SIS: xxx ?', '*MOT: honey (.) right there !', '*MOT: you stepped on it .', '*MOT: here put it in the trash .', '*MOT: put it in the trash .', '*CHI: &=shrieking .', "*MOT: look at Chi's legs ?", '*FAT: xxx .', '*MOT: no look at how skinny they are .', '*FAT: hm: .', '*FAT: just like yours .', '*CHI: &=yells .', "*MOT: careful Sis don't hurt her .", '*CHI: &=laughs .', '*MOT: Sis go put that in the trash please .', '*SIS: (.) &=giggling .', '*FAT: <go put it in the trash honey> [>] .', '*CHI: <let me try it> [<] daddy .', '*FAT: go put that in the trash first .', '*FAT: what was she supposed to xxx ?', '*MOT: <xxx eat your hot dog> [>] fell on the floor .', '*CHI: <daddy hold my hand> [<] daddy hold [>] my hand .', "*FAT: <where's it> [<] ?", "*MOT: I don't know .", '*CHI: xxx [>] daddy !', '*FAT: xxx [<] .', '*MOT: is it done [>] ?', '*CHI: xxx [<] !', '*MOT: <come look is it done> [>] ?', '*CHI: < 0 [=! laughing and shrieking]> [<] .', '*FAT: let me see open up .', '*CHI: &=shrieking .', '*SIS: daddy xxx !', '*FAT: last one last one then I gotta go check some food .', '*MOT: Sis go finish your dinner honey !', '*SIS: &=laughs .', '*CHI: &=laughs .', '*MOT: oops .', '*MOT: come here finish your food !', '*SIS: xxx .', "*MOT: and you'll get dessert .", '*SIS: (des)sert xxx !', '*FAT: xxx come on come on .', "*MOT: finish it there you go good girl I'm gonna put this sink okay ?", '*FAT: you okay ?', '*CHI: I hurt my neck .', '*FAT: alright hold on .', "*MOT: Chi can you hand me a tissue I gotta clean Sis's nose off .", '*FAT: xxx [>] .', '*CHI: <xxx it is xxx> [<] .', '*MOT: hot Joanne .', '*SIS: hot !', '*CHI: xxx .', '*MOT: never mind Chi I have it !', '*CHI: huh ?', '*MOT: I got one .', '*CHI: oh .', '*MOT: alright .', "*CHI: that's okay .", '*CHI: let me put this in the trash [>] .', '*MOT: <you ready> [<] for &-um freeze pop ?', '*CHI: freeze pop !', '*SIS: freeze pop [>] !', '*FAT: <take a couple> [<] of those down to the park and sit with xxx .', '*CHI: I want red .', '*FAT: xxx .', '*CHI: I want red .', '*MOT: xxx have daddy to open it for you .', '*FAT: okay ?', '*CHI: daddy you open this ?', '*FAT: Mom ?', '*MOT: huh ?', '*FAT: you gonna take a couple down to park and sit ?', "*MOT: get me <a Friendly's ice cream> [>] .", '*CHI: <dad will you open this> [<] ?', '*FAT: which one ?', '*MOT: the [/] <the sandwich> [>] .', '*FAT: <some cake> [<] ?', '*FAT: you alright ?', '*FAT: you still alright ?', '*CHI: I fall down [>] .', '*FAT: okay [<] .', '*FAT: all you gotta do is eat .', '*FAT: www .', '*CHI: ah .', '*FAT: www .', '*CHI: xxx [>] .', '*SIS: xxx [<] .', '*FAT: www .', '*MOT: what happened ?', '*MOT: what <&ti> [//] give it to daddy Sis daddy open it .', "*FAT: <Joseph said> [/] Joseph said Charley couldn't .", "*MOT: give it to daddy he'll open it .", '*FAT: told me to bring a case <of beer> [>] .', '*SIS: xxx [<] !', '*MOT: say please .', '*FAT: <so he takes a beer> [>] .', '*SIS: <please xxx> [<] .', '*FAT: xxx I thought it was xxx jokin(g) .', '*MOT: uhhuh .', '*FAT: xxx I said alright he took it out in the backyard xxx .', '*MOT: <is he> [>] mad at everybody ?', '*FAT: xxx [<] .', '*MOT: he could xxx [>] .', '*CHI: <a xxx> [<] !', '*FAT: mhm .', '*MOT: sit down honey .', '*MOT: Sis go over there an sit down .', '*MOT: sit at your table .', '*SIS: &=coughs .', '*FAT: xxx gotta xxx car .', '*MOT: what was wrong with it ?', '*FAT: first that thing was cracked and when he ripped it +...', '*MOT: what ?', '*FAT: he ripped the lights out .', '*FAT: the lights that were inside ?', '*MOT: uhhuh .', '*FAT: he ripped those out .', '*CHI: ow !', '*FAT: playin(g) around .', '*CHI: hi daddy .', '*CHI: xxx .', "*FAT: no I wouldn't xxx thing came off xxx whole socket xxx wire xxx [>] .", '*MOT: <yeah like my xxx> [<] .', '*FAT: hm: ?', '*FAT: well xxx hangin(g) <so much> [>] that the wire ripped right off .', '*MOT: yeah [<] .', "*FAT: so now his lights ain't hooked up .", '*CHI: xxx .', "*MOT: you'll get a ticket for that .", '*FAT: well just that light .', "*MOT: yeah <he'll get a ticket> [>] +/.", '*FAT: just [<] [///] no just the light that was on the bumper .', "*FAT: the little night light that's on the bumper not the headlight .", '*MOT: oh okay .', "*FAT: and then &-um <the circle> [//] there's a circle piece there and <there's a> [//] like a xxx for the bumper there's a circle piece at the end with a hole in the bottom .", '*FAT: and he has the other piece that he has hooked the bumper up to .', '*CHI: xxx .', '*FAT: the other thing that he hooks the bumper up to <has a &-um> [//] (.) had a screw in it .', '*MOT: uhhuh .', '*FAT: I thought it was just a little piece of a [/] a [/] a stub that came up and goes through the hole and stayed there .', '*FAT: and then I tried to take the stub off and the whole thing came off ?', "*FAT: <there's a &-um> [//] there's a nut and bolt but the thing was all +/.", '*MOT: what happened here ?', '*FAT: oh you took a wrong pill ?', "*MOT: I didn't take a pill on <&Wedn> [/] Monday ?", '*FAT: yesterday was Monday .', "*FAT: today's Tuesday .", "*MOT: today's Wednesday .", "*FAT: today's Tuesday !", "*MOT: today's Wednesday !", "*FAT: today's Tuesday !", '*MOT: today is Wednesday !', '*FAT: how much you wanna bet ?', "*FAT: you'll come down to the park if today's Tuesday .", "*MOT: today's Wednesday <it's fourth> [>] of July .", '*FAT: okay [<] ?', '*FAT: you come down to the park if [/] if [/] if you come down to the park okay ?', "*MOT: alright and I stay home if it's Wednesday .", '*FAT: uhhuh .', "*FAT: it's July nineteen eighty nine huh ?", '*MOT: &=laughs .', '*FAT: take [/] take your Monday pill you fool .', '*CHI: xxx .', '*MOT: &=laughing .', '*FAT: &=smooching .', '*FAT: &=laughs .', "*MOT: oh &=laughs what happened why'd I take a Tuesday pill instead of Monday pill ?", "*FAT: hope you don't get cramps .", "*MOT: today's Wednesday ?", '*FAT: mess up your whole biochemistry .', "*MOT: tomorrow's Wednesday you mean ?", "*FAT: tomorrow's Wednesday .", '*MOT: what happened ?', '*FAT: you !', "*FAT: you're the one who's acting simple I don't know why you don't take it in order .", '*FAT: all you have_to do is keep pushin(g) .', "*MOT: xxx <I> [/] <I did> [//] I meant to push Monday right I pushed Tuesday I didn't look .", '*MOT: alright ?', '*MOT: it [//] is it okay if I take Wednesday tomorrow ?', "*FAT: tomorow's@d Wednesday of course &=laughs .", '*MOT: today &=laughs .', '*FAT: those are about the same pretty much anyway right ?', "*MOT: I don't know .", '*FAT: all yellow ?', '*MOT: yeah all yellow but +...', '*FAT: let me see xxx .', '*CHI: xxx .', '*FAT: can I see ?', '*MOT: (.) this must be done by now honey .', '*FAT: thank you .', "*CHI: you're welcome .", "*MOT: yeah they're done xxx .", '*MOT: you want corn or just rice ?', '*FAT: just rice honey .', '*MOT: okay .', '*SIS: (..) I want it .', '*SIS: &=whining .', '*FAT: here alright [x 4] [>] !', '*SIS: <&=crying > [<][>] .', '*MOT: <okay what did I say> [<] !', '*MOT: what did I say ?', '*SIS: give me &=whining .', '*MOT: stop it .', '*FAT: can daddy have some ?', '*SIS: nuhhuh .', '*CHI: xxx daddy some .', '*SIS: &=whining .', '*CHI: I give daddy some too .', '*CHI: give daddy some too .', '*FAT: xxx .', '*FAT: there you go .', '*FAT: can daddy have some ?', '*FAT: hey can I have some ?', '*FAT: (.) thank you .', '*FAT: here .', '*MOT: dear is this enough rice ?', "*MOT: that's not a lot ?", '*FAT: no .', '*SIS: <0 [=! whining escalates to screaming] > [>] .', "*MOT: <Sis Sis let's go take a nap> [<] .", '*MOT: come on .', '*FAT: here .', '*SIS: &=crying (.) .', "*CHI: it's just broken .", '*SIS: <&=screaming > [>] .', '*MOT: xxx [<][>] .', "*FAT: <it's broken> [<] .", '*FAT: <the thing was broken xxx every time you slid back down she got mad> [>] .', '*SIS: <&=screaming > [<][>] .', '*FAT: <look at that> [<] .', '*MOT: xxx [>] .', '*SIS: <&=screaming > [<] .', '*CHI: &=laughs .', '*MOT: www .', "*MOT: I don't know how to discipline that child .", "*MOT: you're a greedy xxx !", "*FAT: well she didn't want it .", "*FAT: I guess I could have gave her more time to say that she didn't want it .", "*MOT: she's throwing a tantrum like Chi used to .", '*MOT: get the telephone .', '*FAT: www .', '*MOT: let me guess Carl wants three hundred dollars by <&Tues> [//] Friday .', '*FAT: xxx .', '*MOT: alright .', '*CHI: xxx .', "*MOT: I'll get it tomorrow .", '*FAT: pain in the neck .', '*MOT: help me honey this is hot ow !', '*FAT: oh my god [>] !', '*MOT: xxx [<] .', '*FAT: plus a little two pound weakling@d like yourself .', '*FAT: obviously you gotta take twenty minutes <before xxx> [>] .', '*MOT: xxx [<] I need some rice please .', "*FAT: xxx we don't need all those .", '*FAT: look how big they are xxx [>] .', '*MOT: xxx [<] ?', "*MOT: I'm sure you want some sauce ?", '*FAT: lay down !', "*FAT: no I don't want any sauce just give me some pork chops .", '*FAT: couple of knives ?', '*MOT: a couple of knives .', '*FAT: listen .', '*MOT: yes ?', "*MOT: honey I can't go down to the park with Sis like that (be)cause I just don't xxx [>] .", '*FAT: xxx [<] .', '*MOT: no .', '*MOT: you go ahead I already told you to go so go .', "*FAT: you won't be mad ?", "*FAT: <&I> [/] I'll be back <I xxx go xxx> [>] .", '*MOT: <oh yeah your back> [<] is always weird .', "*FAT: xxx I'm just gonna play a few games then come back xxx [>] .", "*MOT: <it's so> [<] hot out it's gonna rain anyway .", "*FAT: well that's what I hope it does rain .", "*FAT: it's so dag hot out there .", '*MOT: so why you wanna go and play ?', "*FAT: (be)cause I haven't played in a while and I'm anxious .", '*MOT: you played Sunday .', "*FAT: today's three days afterwards .", '*MOT: usually you xxx play a week .', '*MOT: stay home with me .', '*FAT: xxx said I could go now I need xxx gonna be pissed off at me .', "*FAT: everytime I tell him <I'll go> [>] +...", '*MOT: xxx [<] .', "*FAT: he xxx he said he didn't go (be)cause I asked him xxx [>] .", '*MOT: xxx [<] .', '*FAT: huh ?', '*MOT: tell him xxx come to the park with us .', '*CHI: &=humming .', '*FAT: xxx too many people can I just drive by ?', '*FAT: xxx .', '*MOT: alright alright <alright xxx> [>] .', '*FAT: <no see> [<][>] ?', '*CHI: <&=singing > [<][>] .', '*FAT: <get my hopes up> [<] .', '*FAT: <xxx played all day> [>] .', '*CHI: <&=singing > [<] .', "*CHI: <mommy I'm thirsty> [>] .", '*FAT: <xxx gonna be workin(g)> [<] tomorrow .', '*MOT: xxx <all day tomorrow> [>] xxx !', "*CHI: <I'm thirsty> [<] .", '*MOT: xxx [>] !', "*FAT: <he doesn't work and I> [<] don't wanna play by myself .", "*CHI: daddy I'm thirsty .", "*CHI: daddy [>] I'm thirsty .", '*MOT: <xxx all day> [<] .', "*FAT: xxx you won't have_to work tomorrow xxx [>] .", "*CHI: <daddy I'm thirsty> [<][>] .", '*MOT: <I have_to work tomorrow> [<] .', "*FAT: <maybe I won't have_to work tomorrow xxx> [>] .", "*CHI: <daddy I'm thirsty> [<][>] .", '*MOT: <I xxx> [<] .', '*FAT: <find out> [>] +...', "*CHI: daddy [<] I'm thirst(y) +...", '*CHI: &=shrieks !', '*BRO: hey !', '*MOT: hi .', '*BRO: xxx doing ?', '*CHI: <I want> [//] I a(l)ready saw you !', '*BRO: what ?', '*MOT: &=laughs .', '*CHI: I a(l)ready saw you .', "*BRO: that's yours ?", '*CHI: yes .', '*BRO: yes .', "*MOT: where's mommy ?", '*MOT: can I have it please Chi ?', "*CHI: it's (.) it's yours ?", '*BRO: you bought a house ?', "*FAT: I ain't buyin(g) no house .", '*MOT: &=laughs .', '*BRO: do you know xxx [>] ?', '*MOT: xxx [<] .', "*CHI: it's mine and <Sis's> [>] it's mine ?", '*FAT: www [<] +...', "*MOT: no this is mommy's .", "*CHI: it's yours and mine and Sis's ?", "*MOT: no it's mommy's .", "*CHI: it's xxx mommy .", '*CHI: mommy I have this kind .', '*MOT: xxx .', "*CHI: I'm thirsty xxx [>] .", '*MOT: <xxx are you getting xxx> [<] ?', '*BRO: www .', '*CHI: mommy xxx .', "*MOT: Chi don't touch .", "*CHI: I won't .", '*CHI: I just <talk okay> [>] ?', '*MOT: xxx [<] to your house huh ?', '*CHI: test test test .', '*BRO: www .', '*MOT: www .', '*CHI: xxx to try harder .', '*CHI: test test test test test !', "*CHI: wait that's not xxx that's xxx .", '*CHI: test test test test !', '*CHI: xxx test (.) test !', '*BRO: www .', '*CHI: test !', "*FAT: don't play with that Chi .", "*CHI: I won't .", "*CHI: I'm not I'm just talkin(g) .", '*CHI: test test test (.) test test test (.) test test test (.) test test test (.) test test test (.) test test test (.) test test test test (.) and test test test .', '*BRO: www .', '*CHI: 0 [=! slurping sound] .', '*CHI: mommy mommy I +...', '*CHI: mommy you wanna put this away ?', "*MOT: yep don't touch it though .", "*CHI: I won't .", '*MOT: so if [/] if we buy the house we [/] we buy it for ninety thousand .', '*CHI: xxx .', '*BRO: www .', '*CHI: testing .', "*CHI: okay I xxx <Sis's> [/] Sis's bad that's right Sis can't get up .", '*FAT: what ?', '*CHI: I talking xxx [>] .', "*MOT: <she said Sis's bad> [<] that's why she can't get up .", '*MOT: www .', '*CHI: xxx test test test (.) test test test (.) test test test (.) test test test xxx .', '*FAT: www .', "*CHI: uhoh Sis's awake .", '*MOT: xxx .', '*MOT: alright go play xxx .', '*CHI: alright thanks .', '*BRO: www .', '*FAT: www .', '*MOT: www .', '*CHI: Sis get xxx .', '*MOT: www .', '*CHI: Sis get back xxx !', '*MOT: www .', '*BRO: www .', '*CHI: xxx .', '*BRO: www .', '*CHI: Sis .', '*MOT: www .', '*CHI: mommy <xxx have more (.) soda> [>] ?', '*BRO: www [<] .', '*MOT: www .', '*CHI: &=whining .', '*SIS: xxx .', '*BRO: www .', '*SIS: xxx !', '*MOT: what ?', "*CHI: Superman's in there Sis .", '*BRO: www .', '*SIS: xxx !', '*CHI: Superman .', "*CHI: it's Superman Sis you see Superman ?", '*MOT: xxx hurry up .', '*CHI: xxx .', '*FAT: www .', '*BRO: www .', '*MOT: www .', '*CHI: I see Big Bird !', '*CHI: xxx [>] .', '*BRO: www [<] .', '*MOT: www .', '*CHI: xxx .', '*MOT: www .', '*BRO: www .', '*CHI: mommy I xxx him .', '*CHI: I saw superman !', '*CHI: Sis I saw superman .', '*SIS: &=whines .', '*CHI: Sis get up xxx .', '*MOT: www .', '*BRO: www .', '*CHI: you see him ?', '*SIS: superman .', "*CHI: it's superman !", '*CHI: superman .', '*BRO: xxx you bad girl ?', '*CHI: yeah .', '*BRO: yeah &=laughs .', '*FAT: yeah .', '*CHI: xxx .', '*BRO: xxx ?', '*CHI: you wanna <see superman> [>] ?', '*SIS: xxx [<] .', '*BRO: where ?', '*SIS: xxx .', '*CHI: xxx see .', '*BRO: let me see .', '*BRO: xxx superman who look like &-uh Mickey mouse .', '*CHI: okay <let me> [/] <<let me> [/] let me> [>] +/.', '*SIS: <&=humming > [<] .', '*BRO: see .', '*CHI: +, ah let me find superman !', '*BRO: ah .', '*CHI: you see superman [>] ?', '*BRO: <oh Big Bird> [<] .', '*CHI: let me find superman .', '*BRO: wait wait .', '*SIS: xxx milk .', '*CHI: you <see superman> [>] ?', '*SIS: mommy [<] !', '*BRO: not yet xxx here [<] .', '*SIS: momma [<] !', '*CHI: xxx .', '*BRO: alright ?', '*CHI: yep xxx a xxx .', '*BRO: &=laughs .', "*BRO: okay xxx I'll be back .", '*MOT: okay [>] .', '*BRO: okay [<][>] .', '*CHI: <mommy I want more> [<] I want more soda .', '*MOT: what do you say ?', '*MOT: may I what ?', '*CHI: may I get some more soda please ?', '*MOT: okay .', '*SIS: &-um &-um mommy .', '*MOT: what do you say Sis ?', '*SIS: please ?', '*SIS: xxx .', '*MOT: xxx .', '*FAT: xxx what was you talkin(g) about ?', '*MOT: what ?', '*CHI: ow <ow (.) ow> [>] .', "*FAT: <he doesn't want> [<] to speak xxx .", '*MOT: xxx .', '*CHI: xxx .', '*SIS: &=singing .', '*MOT: xxx .', '*CHI: xxx say let me see something .', '*CHI: I got more pictures huh ?', "*CHI: my picture's broken .", '*CHI: xxx broken .', "*MOT: you can't xxx just like that .", '*CHI: <momma mommy the mother big bird is broken> [>] !', '*FAT: xxx [<][>] .', '*MOT: xxx [<] .', '*MOT: pick it up and put it in the trash .', '*CHI: me gosh .', '*MOT: my gosh .', '*MOT: who broke it ?', '*CHI: me .', '*FAT: broke it xxx you gotta put it in the trash compactor .', '*FAT: put that little piece in the trash .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//termt1.cha
HSLLD/HV1/MT//brnmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*SIS: I like that song .', "*MOT: you don't sing at the table .", '*SIS: (..) xxx &=sings .', '*CHI: (..) mommy xxx there .', '*MOT: mhm .', "*MOT: (..) Carmen's comin(g) over .", '*CHI: yay !', '*SIS: see I told you and you said word@q .', '*SIS: I told [!] you .', '*CHI: now ?', '*CHI: (..) mommy now say no more .', "*CHI: that's dirty song right ?", "*CHI: no don't say that that's dirty stuff .", '*MOT: what is ?', '*MOT: the one Shayla was singing ?', '*CHI: mhm .', "*MOT: <that isn't> [//] that's not a dirty song .", '*CHI: (.) momma I not singin(g) .', "*MOT: you're not supposed to .", '*CHI: momma on tv &-um it says you better get to see Amy back .', "*MOT: I'm not <thinkin(g) about Shayla> [>] .", '*CHI: <I said no> [<] !', '*MOT: mhm .', '*SIS: no .', "*SIS: I'm not gonna do that .", '*CHI: &=coughs .', '*SIS: (be)cause +...', "*MOT: ya'll [: you all] don't no where them ear+rings at anyways .", '*CHI: yeah I know .', '*CHI: mommy xxx supposed eat with your hands .', '*MOT: why do you have_to eat with your hand ?', '*CHI: <(be)cause> [/] (.) (be)cause xxx food .', "*SIS: it don't come on .", '*SIS: it sticks [!] together .', "*SIS: so I have_to put xxx and put it on my fork and eat it that's why .", '*CHI: (.) xxx .', '*SIS: momma did I eats almost half of it or some ?', '*MOT: some .', '*SIS: I eat a lot ?', '*MOT: some .', "*SIS: mommy &-um (.) you don't have_to eat all of it (be)cause you can just eat some ?", '*SIS: mommy ?', "*MOT: you're supposed to eat all your food (.) .", '*MOT: what are you [!] doing ?', '*CHI: I done .', '*SIS: (.) and you can talk xxx .', '*SIS: and you mommy ?', "*SIS: (.) &-um I'm takin(g) the salt off .", '*SIS: I hate salt [>] .', '*CHI: <mommy I drink my> [<] [/] my soda ?', '*CHI: could I ?', '*MOT: yeah .', '*SIS: you know why ?', '*SIS: you can (be)cause you drank some of it .', '*CHI: well Mom I drink all my soda .', '*CHI: xxx mo [//] mommy xxx ?', "*CHI: (.) mommy you do like this won't be hot .", '*SIS: you copying me .', '*CHI: (.) xxx did she copy you ?', '*CHI: well did she copy you ?', "*SIS: mhm (be)cause I did that I don't think .", '*SIS: plus xxx [>] .', "*CHI: <I didn't do> [<] .", "*SIS: plus yeah she did she didn't put on a tape .", '*SIS: (..) xxx ?', '*MOT: who do that ?', '*CHI: at the church .', "*SIS: we do that at the church <when it's a> [//] when [/] when God give us some food you supposed to do that .", '*MOT: mhm .', '*SIS: (.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .', '*MOT: on your heart ?', '*SIS: yeah .', '*CHI: (.) xxx .', '*SIS: what do they do with when [/] when [/] when you punch (th)em in the heart ?', '*MOT: alright Brenda stop playin(g) in it .', '*SIS: &=laughs .', "*MOT: so what ya'll [: you all] do at school today ?", '*CHI: I play with xxx by the xxx .', "*MOT: that's all ?", '*CHI: yep .', '*SIS: oh yeah mommy ?', '*SIS: I went to a fun park [!] it was so fun mommy you should of had went there .', '*SIS: &-um it had a big [!] big huge castle .', '*SIS: it was <big it [/] it was> [>] bigger than a chair or [!] a table .', '*CHI: I was <flying Shayla> [<] .', '*MOT: <did you> [//] Brenda go ?', '*SIS: it was big than [/] than [/] than a window and guess <what I went> [>] in it and guess what .', "*CHI: <I'm big now> [<] .", '*SIS: they had a door +/.', "*CHI: Ma I'm <bigger now> [>] .", '*SIS: +, and xxx you <when you go> [//] when you <step on it> [>] it [/] it goes around .', '*CHI: I <knocked down xxx> [<] .', "*MOT: what'd you say Bren ?", "*CHI: I'm bigger now .", "*MOT: what'd you say after that ?", '*CHI: <I> [/] (.) I play xxx a xxx .', '*MOT: hm: .', '*SIS: mommy &-um and [//] <and they have_to go> [//] when you step on it it goes around .', '*MOT: mhm .', '*SIS: someone has to push and it goes back .', '*MOT: mhm .', "*SIS: only two supposed to be on it (be)cause it's only a little one .", '*SIS: a little door .', '*SIS: it <was a> [>] green door .', '*CHI: xxx [<] .', '*CHI: &=laughs .', "*MOT: what's so funny ?", '*CHI: I do [=! smacking lips] .', "*SIS: mommy Lisette's so mean [!] and bad .", '*MOT: mhm .', '*CHI: (..) now ?', '*MOT: now what ?', '*CHI: &-um that xxx and xxx come over now ?', '*CHI: right now ?', '*MOT: in a little while .', '*MOT: alright clean up your mess .', '*MOT: 0 [=! clears throat] .', '*SIS: &=laughs .', "*MOT: something's xxx [>] +/.", '*SIS: <and it had a little> [<] slide and +/.', '*SIS: running too fast .', '*SIS: she [/] she [/] she crashed into it .', '*MOT: hm: .', '*SIS: (.) and it hurts .', '*MOT: oh .', '*CHI: mommy [>] +/.', '*SIS: <it was blood> [<] in it xxx way .', '*MOT: mhm .', '*CHI: mommy xxx my xxx ?', '*CHI: see my bubble ?', '*MOT: what bubble ?', '*CHI: xxx .', '*CHI: look all the bubble mommy .', '*MOT: hm: .', '*CHI: (..) mommy when my xxx gonna xxx .', '*MOT: xxx leave it alone .', '*SIS: xxx .', '*SIS: &=humming .', '*MOT: what are you doing singing or talkin(g) ?', '*CHI: look are you xxx ?', '*MOT: oh .', '*CHI: &-um xxx .', '*MOT: (..) count your numbers .', '*MOT: I thought you could only count up to five but you can count to eleven .', '*CHI: one two three four five six seven eight nine .', '*MOT: what .', '*MOT: go on !', '*SIS: I know how to count to [>] anything .', '*CHI: one [<] .', '*SIS: one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen twenty one , twenty two , twenty three xxx +...', '*MOT: nuhhuh .', '*SIS: then what ?', '*MOT: after fifteen (.) sixteen seventeen eighteen <nineteen twenty twenty one> [>] +...', '*SIS: <nineteen twenty twenty one> [<] twenty two , twenty three , twenty four , twenty five , twenty six , twenty seven , twenty eight , twenty nine .', '*MOT: thirty .', '*SIS: thirty one , thirty two , thirty three , thirty four , thirty five , thirty six , xxx thirty seven , thirty eight , thirty nine .', '*CHI: one two three [>] four five +/.', '*SIS: thirty [<] .', '*MOT: thirty nine , forty .', '*CHI: +, nine ten elev(en) one four five six seven .', '*SIS: four .', '*CHI: xxx eighteen .', '*MOT: eat .', '*CHI: eat eat eat .', '*MOT: (..) &=laughs .', '*SIS: xxx not eating her bottle .', '*CHI: (.) momma know what I can not eat a bottle .', '*CHI: I want my cup .', '*CHI: I xxx eat [/] eat it all mom .', '*MOT: you know how to eat that fat [//] &-um that meat Brenda xxx .', "*MOT: and you [>] don't eat fat .", '*MOT: you need fat Bren so you know how to eat that meat here .', '*CHI: <I xxx> [<] +/.', "*CHI: I don't fat .", "*MOT: you <don't> [/] don't worry about fat I ain't nothing to explain it to you (be)cause you don't eat it here .", "*CHI: I don't eat no fat .", '*MOT: yes you do .', '*CHI: xxx eat no fat .', '*CHI: I eat +...', '*SIS: &=coughs .', '*CHI: I think xxx teeth &-um and everything xxx eat .', '*MOT: mm .', '*CHI: mm .', '*CHI: xxx mom .', '*SIS: 0 [=! untelligible sound] .', "*CHI: I don't eat fat .", '*MOT: give me .', '*MOT: here .', "*MOT: it's not hot so you don't have_to blow it .", "*SIS: I don't want xxx [>] .", '*MOT: <no onions> [<] ?', '*MOT: okay .', '*MOT: corn .', "*SIS: I don't want +/.", '*MOT: here !', '*SIS: xxx &=crying .', '*MOT: here Shay !', '*SIS: I want xxx the book now [>] .', '*MOT: <then you eat> [<] .', '*MOT: then you eat by yourself then .', '*CHI: (.) xxx .', '*SIS: xxx for me .', '*MOT: good night .', '*CHI: xxx .', '*SIS: I go to bed without my drink ?', '*MOT: mhm .', "*SIS: xxx then you need to drink something I'm thirsty .", "*MOT: if you have no room for food you don't have no room &f for drink .", '*SIS: I do have room .', '*MOT: no .', '*MOT: well then eat !', '*CHI: xxx [>] .', "*SIS: <I xxx> [<] if I don't eat .", "*SIS: I don't have no [/] no room for my xxx .", "*MOT: see you don't need [//] have no room for food you xxx Shay .", '*MOT: (.) go (a)head .', '*SIS: I am .', '*CHI: xxx eat .', '*CHI: hm: I bit my xxx .', "*CHI: I'm gettin(g) a big one .", "*CHI: <I'm a> [//] I'm gettin(g) a big one ?", '*MOT: a big what ?', '*MOT: spoon full of food ?', "*MOT: oh I don't know .", '*CHI: xxx .', '*MOT: no .', '*CHI: yeah .', "*MOT: don't say yeah .", '*CHI: Ma mommy xxx [>] +/.', '*SIS: <xxx we went> [<] we [/] we [/] we had a lot of fun &-um at [/] at the trip .', '*SIS: we went on the sailboat and stuff .', "*MOT: yeah it's called George's island .", "*MOT: you went to George's island today .", '*SIS: this [//] that boat had a xxx a lot of food and a lot of chairs and tables .', '*MOT: mhm .', '*SIS: it has upstairs and downstairs +...', '*SIS: and [/] and what else +...', '*SIS: they had drinks there .', '*MOT: mhm .', "*SIS: <but I> [//] but <we didn't> [/] we didn't eat anything or drink anything .", "*MOT: you didn't ?", "*SIS: we didn't have anything [!] at all .", '*MOT: so you just rode on the boat ?', '*SIS: yeah .', '*SIS: just sit down doing nothing .', '*SIS: so me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .', '*MOT: hm: .', '*SIS: that water is deep [!] and it had lobsters in it .', '*MOT: you saw lobsters ?', '*SIS: (be)cause the water was green .', '*MOT: hm: .', "*SIS: green water you can't see .", '*SIS: I xxx +/.', '*MOT: not deep .', "*SIS: (.) I'm xxx .", "*MOT: that's okay .", '*MOT: eat two .', '*MOT: want me to treat you like a little bitty baby ?', '*SIS: yep &=laughs .', '*MOT: nuhhuh .', '*SIS: 0 [=! unintelligible sounds] .', '*SIS: and mommy xxx decide where did they bury God ?', '*MOT: no xxx .', '*SIS: <I> [/] I mean George Washington ?', '*MOT: you sure it was George Washington ?', '*SIS: huh ?', '*MOT: are you sure it was George Washington ?', '*SIS: maybe .', '*SIS: I mean <xxx think xxx> [>] .', "*MOT: <if you're not> [<] yeah think first .", '*SIS: xxx (..) .', '*SIS: &=humming .', '*SIS: George Washington .', '*MOT: xxx .', '*SIS: I got xxx <I got xxx> [>] .', '*CHI: <George Washington xxx> [<] .', "*SIS: I don't know why did they have_to bury people who die ?", '*SIS: why mommy ?', "*MOT: I'll tell you later .", "*SIS: (.) mommy God can give (.) you wings to fly up to [/] to heaven <(be)cause> [/] (be)cause you'll be buried .", '*SIS: how can God give you wings ?', "*SIS: and [/] and you're buried ?", '*MOT: does God know everything ?', '*SIS: yeah .', '*MOT: then I guess he can do anything .', '*CHI: xxx mommy your xxx .', '*MOT: what ?', '*CHI: and xxx .', '*SIS: and he knows what the [/] the food is ?', '*SIS: the food called ?', '*MOT: yes yes .', "*SIS: <&wo> [/] would people doesn't know what it is ?", '*SIS: ew .', "*SIS: (.) everything's xxx .", '*SIS: xxx .', "*SIS: mommy there's a man he knows me .", '*SIS: he knows my name .', '*SIS: and I know his name his name was (.) yeah Robinson .', '*MOT: his name is [!] Robinson .', '*SIS: huh ?', '*MOT: his name is Robinson I know Robinson too .', '*CHI: I know xxx too I know Robinson .', '*SIS: he like(s) me .', '*MOT: do you (.) know Robinson ?', '*SIS: Robinson like me xxx [>] .', '*MOT: <you was small> [<] when he got married .', '*SIS: me ?', '*MOT: mhm .', '*SIS: mm .', "*MOT: don't do that eat Shayla .", '*SIS: mommy <&e> [/] even if I be bad he still like(s) me .', "*SIS: he doesn't hit [/] whoop me with a belt but he mailed me and xxx a xxx .", '*CHI: and me ?', "*MOT: he's not supposed to <hurt you> [>] .", '*SIS: <and Natalie> [<] hurt me so so he take the belt and hit her with it .', '*MOT: mhm .', '*CHI: I finish .', '*SIS: I hate corn .', '*SIS: I eat all the rice .', "*MOT: no you didn't .", '*CHI: mommy (.) mommy [>] .', '*MOT: here [<] .', '*MOT: put it in your mouth !', '*CHI: xxx mama .', '*MOT: look at all that rice .', '*MOT: you say xxx you ate it .', '*MOT: come on Brenda you know to finish yours .', "*SIS: I didn't eat this .", '*MOT: nuhhuh .', '*MOT: let me cut it move .', "*SIS: it's too hot to eat .", "*MOT: <it's> [/] it's not too hot to eat it's just you and Brenda don't like to chew .", "*SIS: it's too hot for <my teeth> [>] .", '*MOT: <eat the little piece> [<] .', "*MOT: no it's not .", '*CHI: xxx mommy [>] .', '*SIS: xxx [<] .', '*MOT: put it over here and you eat that rice and corn .', '*MOT: move .', '*MOT: here .', '*SIS: I eat this xxx .', "*MOT: don't eat it .", '*MOT: eat your rice and corn then .', '*SIS: (..) xxx .', '*SIS: &=humming .', '*SIS: xxx come on .']
loading solution set
LINE NO ->  14
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  18
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472548c0>)
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('sing', 'NN'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  21
LINE NO ->  22
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  25
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  28
LINE NO ->  31
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  34
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  39
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  42
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  45
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  48
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  52
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  57
LINE NO ->  61
LINE NO ->  66
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  69
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0})
LINE NO ->  83
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  93
LINE NO ->  96
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  99
LINE NO ->  100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0})
LINE NO ->  108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  112
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  115
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  121
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  126
LINE NO ->  129
LINE NO ->  132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, -1: 1})
LINE NO ->  140
LINE NO ->  141
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  146
LINE NO ->  149
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  152
LINE NO ->  155
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  165
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  170
LINE NO ->  174
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  177
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  183
salt
salt salt 0
[('um', 'JJ'), ('i', 'NN'), ('m', 'VBP'), ('takin', 'NN'), ('g', 'NN'), ('the', 'DT'), ('salt', 'NN'), ('off', 'IN')]
['salt']
('food -> ', [['salt', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  186
salt
salt salt 0
[('i', 'JJ'), ('hate', 'VBP'), ('salt', 'NN')]
['salt']
('food -> ', [['salt', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  189
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  193
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  197
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  200
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  203
LINE NO ->  208
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  215
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  220
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  223
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  227
LINE NO ->  231
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  236
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  239
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  242
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  248
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  251
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  254
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, -1: 1})
LINE NO ->  261
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  264
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 0, 98: 0, 99: 0})
LINE NO ->  269
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  272
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  275
LINE NO ->  276
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0})
LINE NO ->  282
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  287
LINE NO ->  289
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  302
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  309
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, -1: 1})
LINE NO ->  316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  320
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471d0dd0>)
[('it', 'PRP'), ('was', 'VBD'), ('big', 'JJ'), ('it', 'PRP'), ('it', 'PRP'), ('was', 'VBD'), ('bigger', 'JJR'), ('than', 'IN'), ('a', 'DT'), ('chair', 'NN'), ('or', 'CC'), ('a', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, -1: 1})
LINE NO ->  325
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  328
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, -1: 1})
LINE NO ->  338
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  341
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  344
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  347
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0})
LINE NO ->  352
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  355
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  359
LINE NO ->  362
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  366
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  372
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0})
LINE NO ->  377
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  380
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  385
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  389
LINE NO ->  396
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  399
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947034a70>)
[('it', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('green', 'JJ'), ('door', 'NN')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  404
LINE NO ->  405
LINE NO ->  406
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  410
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  413
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  417
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  420
LINE NO ->  424
LINE NO ->  428
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  436
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  439
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  442
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  443
LINE NO ->  444
LINE NO ->  447
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  452
LINE NO ->  456
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  459
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  462
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  465
LINE NO ->  468
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  471
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  474
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  477
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  481
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  485
LINE NO ->  489
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  490
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  493
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  496
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  499
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  502
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  504
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  505
LINE NO ->  510
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  514
LINE NO ->  517
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  519
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  522
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, -1: 1})
LINE NO ->  529
LINE NO ->  534
LINE NO ->  537
LINE NO ->  540
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  544
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  547
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 1, 135: 1, 136: 1, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0})
LINE NO ->  557
LINE NO ->  560
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  563
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 1, 81: 1, 82: 1, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, -1: 1})
LINE NO ->  569
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, -1: 1})
LINE NO ->  580
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  583
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0})
LINE NO ->  594
LINE NO ->  597
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  600
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  603
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  608
LINE NO ->  611
LINE NO ->  614
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  617
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  621
LINE NO ->  622
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  625
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  630
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  636
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471d0ab8>)
[('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('fat', 'JJ'), ('um', 'NN'), ('that', 'IN'), ('meat', 'NN'), ('brenda', 'NN'), ('xxx', 'NN')]
['meat']
('food -> ', [])
fat
fat fat 900
[('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('fat', 'JJ'), ('um', 'NN'), ('that', 'IN'), ('meat', 'NN'), ('brenda', 'NN'), ('xxx', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  641
fat
fat fat 900
[('and', 'CC'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('fat', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  644
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94719f098>)
[('you', 'PRP'), ('need', 'VBP'), ('fat', 'JJ'), ('bren', 'NNS'), ('so', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('meat', 'NN'), ('here', 'RB')]
['meat']
('food -> ', [])
fat
fat fat 900
[('you', 'PRP'), ('need', 'VBP'), ('fat', 'JJ'), ('bren', 'NNS'), ('so', 'IN'), ('you', 'PRP'), ('know', 'VBP'), ('how', 'WRB'), ('to', 'TO'), ('eat', 'VB'), ('that', 'DT'), ('meat', 'NN'), ('here', 'RB')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  649
LINE NO ->  652
fat
fat fat 900
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('fat', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  657
fat
fat fat 900
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('don', 'NN'), ('t', 'NN'), ('worry', 'VBP'), ('about', 'IN'), ('fat', 'NN'), ('i', 'NN'), ('ain', 'VBP'), ('t', 'NN'), ('nothing', 'NN'), ('to', 'TO'), ('explain', 'VB'), ('it', 'PRP'), ('to', 'TO'), ('you', 'PRP'), ('be', 'VB'), ('cause', 'VBN'), ('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('it', 'PRP'), ('here', 'RB')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, -1: 1})
LINE NO ->  667
fat
fat fat 900
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('no', 'DT'), ('fat', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  670
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  673
fat
fat fat 900
[('xxx', 'JJ'), ('eat', 'NN'), ('no', 'DT'), ('fat', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  676
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  679
LINE NO ->  680
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  683
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  686
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  689
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  692
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  693
fat
fat fat 900
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('eat', 'NN'), ('fat', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  696
LINE NO ->  699
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  703
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  709
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  712
onions
onions onions 26
[('no', 'DT'), ('onions', 'NNS')]
['onions']
('food -> ', [['onions', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  715
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  718
corn
corn corn 419
[('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  721
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  724
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  727
LINE NO ->  728
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  731
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  734
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  737
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  741
LINE NO ->  742
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  745
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  749
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  752
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  760
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, -1: 1})
LINE NO ->  766
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  769
LINE NO ->  772
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  775
LINE NO ->  776
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  779
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  783
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  788
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  791
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  794
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  797
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  800
LINE NO ->  804
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  809
LINE NO ->  813
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  817
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  820
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  821
LINE NO ->  824
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  827
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  830
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  834
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0})
LINE NO ->  839
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  843
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  847
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  851
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  858
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  861
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  864
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  867
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  870
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  873
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, -1: 1})
LINE NO ->  878
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  881
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  885
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  888
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  891
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  894
fish
fish fish 305
[('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')]
['fish']
('food -> ', [['fish', 'Finfish and Shellfish Products']])
water
water water 18
[('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')]
['water']
('food -> ', [['fish', 'Finfish and Shellfish Products'], ['water', 'Beverages']])
duck
duck duck 84
[('so', 'IN'), ('me', 'PRP'), ('and', 'CC'), ('carmen', 'NNS'), ('just', 'RB'), ('look', 'VBP'), ('out', 'RP'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('fish', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('the', 'DT'), ('wat', 'NN'), ('er', 'NN'), ('and', 'CC'), ('guess', 'VB'), ('what', 'WP'), ('i', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('in', 'IN'), ('the', 'DT'), ('water', 'NN')]
['duck']
('food -> ', [['fish', 'Finfish and Shellfish Products'], ['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 1, 107: 1, 108: 1, 109: 1, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 1, 119: 1, 120: 1, 121: 1, 122: 1, 123: 0, 124: 0, 125: 0, -1: 1})
LINE NO ->  903
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  906
water
water water 18
[('that', 'DT'), ('water', 'NN'), ('is', 'VBZ'), ('deep', 'JJ'), ('and', 'CC'), ('it', 'PRP'), ('had', 'VBD'), ('lobsters', 'NNS'), ('in', 'IN'), ('it', 'PRP')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  911
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  914
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471e0200>)
[('be', 'VB'), ('cause', 'VBN'), ('the', 'DT'), ('water', 'NN'), ('was', 'VBD'), ('green', 'JJ')]
['green']
('food -> ', [])
water
water water 18
[('be', 'VB'), ('cause', 'VBN'), ('the', 'DT'), ('water', 'NN'), ('was', 'VBD'), ('green', 'JJ')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  917
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  920
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471090e0>)
[('green', 'JJ'), ('water', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('see', 'VB')]
['green']
('food -> ', [])
water
water water 18
[('green', 'JJ'), ('water', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('see', 'VB')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  923
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  926
LINE NO ->  930
LINE NO ->  933
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  936
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  939
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947034560>)
[('want', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('treat', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('a', 'DT'), ('little', 'JJ'), ('bitty', 'JJ'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  944
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  947
LINE NO ->  950
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  951
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  956
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  959
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  962
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  966
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  969
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  973
LINE NO ->  976
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  979
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  982
LINE NO ->  983
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  984
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  987
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  988
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  991
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  995
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  1000
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1003
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1006
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0})
LINE NO ->  1013
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1016
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1020
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1023
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1026
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1030
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1033
LINE NO ->  1037
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1040
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1044
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1047
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  1050
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  1055
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1058
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1061
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1063
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1068
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1071
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  1076
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  1079
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1082
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  1087
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1090
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1093
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1096
LINE NO ->  1099
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1103
LINE NO ->  1106
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1109
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1112
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1115
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0})
LINE NO ->  1120
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, -1: 1})
LINE NO ->  1126
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1129
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1133
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0})
LINE NO ->  1141
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1147
corn
corn corn 419
[('i', 'JJ'), ('hate', 'VBP'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1150
rice
rice rice 147
[('i', 'JJ'), ('eat', 'VBP'), ('all', 'PDT'), ('the', 'DT'), ('rice', 'NN')]
['rice']
('food -> ', [['rice', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1153
LINE NO ->  1156
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1159
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1165
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1168
rice
rice rice 147
[('look', 'NN'), ('at', 'IN'), ('all', 'PDT'), ('that', 'DT'), ('rice', 'NN')]
['rice']
('food -> ', [['rice', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1171
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1174
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0})
LINE NO ->  1179
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1182
LINE NO ->  1185
LINE NO ->  1189
LINE NO ->  1192
LINE NO ->  1200
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  1210
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1213
LINE NO ->  1214
rice
rice rice 147
[('put', 'VB'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('eat', 'VBP'), ('that', 'IN'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN')]
['rice']
('food -> ', [['rice', 'Cereal Grains and Pasta']])
corn
corn corn 419
[('put', 'VB'), ('it', 'PRP'), ('over', 'IN'), ('here', 'RB'), ('and', 'CC'), ('you', 'PRP'), ('eat', 'VBP'), ('that', 'IN'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN')]
['corn']
('food -> ', [['rice', 'Cereal Grains and Pasta'], ['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1222
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1225
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1229
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1232
rice
rice rice 147
[('eat', 'VB'), ('your', 'PRP$'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN'), ('then', 'RB')]
['rice']
('food -> ', [['rice', 'Cereal Grains and Pasta']])
corn
corn corn 419
[('eat', 'VB'), ('your', 'PRP$'), ('rice', 'NN'), ('and', 'CC'), ('corn', 'NN'), ('then', 'RB')]
['corn']
('food -> ', [['rice', 'Cereal Grains and Pasta'], ['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1235
LINE NO ->  1237
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1238
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
loading solution set
calculating
set([(1148, (13, 17)), (1151, (20, 24)), (1233, (24, 28)), (209, (30, 34)), (713, (10, 16)), (1215, (49, 53)), (637, (31, 34)), (719, (6, 10)), (1233, (15, 19)), (187, (13, 17)), (1169, (23, 27)), (184, (32, 36)), (190, (36, 40)), (1215, (40, 44))])
[((184, (32, 36)), "*SIS:\t(.) &-um I'm takin(g) the salt off .\n"), ((187, (13, 17)), '*SIS:\tI hate salt [>] .\n'), ((190, (36, 40)), '*CHI:\t<mommy I drink my> [<] [/] my soda ?\n'), ((209, (30, 34)), '*CHI:\twell Mom I drink all my soda .\n'), ((637, (31, 34)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((713, (10, 16)), '*MOT:\t<no onions> [<] ?\n'), ((719, (6, 10)), '*MOT:\tcorn .\n'), ((1148, (13, 17)), '*SIS:\tI hate corn .\n'), ((1151, (20, 24)), '*SIS:\tI eat all the rice .\n'), ((1169, (23, 27)), '*MOT:\tlook at all that rice .\n'), ((1215, (40, 44)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1215, (49, 53)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1233, (15, 19)), '*MOT:\teat your rice and corn then .\n'), ((1233, (24, 28)), '*MOT:\teat your rice and corn then .\n')]
set([(265, (64, 68)), (1094, (-1, 4)), (277, (74, 79)), (694, (-1, 4)), (1151, (20, 24)), (729, (-1, 4)), (1062, (6, 9)), (623, (25, 31)), (494, (6, 9)), (329, (-1, 4)), (150, (-1, 4)), (564, (-1, 4)), (1041, (36, 40)), (848, (27, 33)), (478, (12, 15)), (249, (-1, 4)), (907, (11, 16)), (921, (6, 11)), (915, (30, 35)), (865, (-1, 4)), (1100, (-1, 4)), (356, (6, 12)), (710, (19, 22)), (735, (21, 24)), (700, (-1, 4)), (407, (6, 12)), (642, (-1, 4)), (645, (52, 56)), (26, (6, 9)), (545, (10, 13)), (570, (-1, 4)), (1160, (-1, 4)), (735, (6, 11)), (317, (24, 27)), (1017, (18, 24)), (221, (-1, 4)), (237, (15, 18)), (252, (13, 19)), (411, (-1, 4)), (980, (10, 16)), (1048, (6, 9)), (980, (26, 30)), (166, (43, 46)), (895, (118, 123)), (835, (77, 81)), (681, (-1, 4)), (70, (37, 42)), (645, (-1, 6)), (1107, (6, 9)), (240, (16, 19)), (642, (28, 31)), (871, (6, 9)), (1017, (10, 13)), (1142, (6, 9)), (761, (65, 70)), (767, (16, 20)), (503, (6, 9)), (1201, (34, 37)), (1024, (6, 10)), (104, (6, 11)), (290, (38, 44)), (645, (15, 18)), (142, (30, 34)), (1027, (-1, 4)), (777, (29, 32)), (232, (6, 9)), (1088, (-1, 4)), (70, (24, 30)), (940, (47, 51)), (53, (31, 36)), (1041, (-1, 4)), (184, (32, 36)), (321, (66, 71)), (142, (6, 11)), (429, (28, 32)), (414, (6, 11)), (634, (12, 15)), (339, (-1, 4)), (156, (17, 20)), (1163, (-1, 4)), (1007, (10, 15)), (814, (6, 11)), (634, (-1, 4)), (35, (6, 9)), (694, (18, 21)), (844, (11, 15)), (73, (10, 15)), (828, (6, 11)), (848, (34, 39)), (564, (80, 83)), (825, (6, 10)), (500, (-1, 4)), (658, (-1, 4)), (710, (-1, 4)), (472, (6, 9)), (687, (6, 8)), (924, (-1, 4)), (681, (18, 23)), (674, (10, 13)), (166, (-1, 4)), (989, (-1, 4)), (296, (18, 21)), (690, (10, 13)), (290, (45, 50)), (448, (6, 10)), (472, (21, 24)), (912, (14, 22)), (178, (6, 9)), (265, (6, 9)), (1069, (-1, 4)), (852, (21, 25)), (1130, (-1, 4)), (381, (6, 13)), (101, (-1, 4)), (49, (6, 12)), (784, (47, 51)), (472, (35, 38)), (674, (17, 20)), (615, (6, 9)), (40, (-1, 4)), (637, (40, 44)), (1059, (23, 26)), (273, (6, 10)), (1110, (6, 8)), (996, (-1, 4)), (561, (-1, 4)), (440, (28, 32)), (381, (-1, 4)), (918, (6, 9)), (116, (39, 43)), (818, (6, 8)), (895, (106, 110)), (1226, (17, 20)), (1230, (-1, 4)), (1100, (6, 10)), (1072, (43, 47)), (511, (6, 10)), (491, (6, 10)), (437, (18, 23)), (15, (18, 22)), (88, (18, 21)), (1211, (10, 15)), (418, (6, 9)), (912, (-1, 4)), (750, (29, 34)), (761, (30, 34)), (342, (17, 21)), (270, (14, 19)), (780, (29, 33)), (977, (-1, 4)), (363, (-1, 4)), (491, (26, 31)), (1163, (21, 26)), (1116, (6, 11)), (255, (55, 58)), (433, (-1, 4)), (848, (-1, 4)), (668, (-1, 4)), (704, (-1, 4)), (1157, (22, 25)), (209, (30, 34)), (895, (56, 65)), (584, (6, 12)), (805, (11, 13)), (904, (6, 9)), (166, (38, 42)), (895, (-1, 4)), (1004, (11, 15)), (601, (6, 12)), (984, (-1, 4)), (1233, (15, 19)), (840, (-1, 4)), (1211, (16, 19)), (1223, (-1, 4)), (440, (-1, 4)), (332, (53, 58)), (255, (-1, 4)), (1077, (10, 14)), (1014, (27, 32)), (505, (-1, 4)), (49, (13, 18)), (310, (-1, 4)), (326, (-1, 4)), (915, (-1, 4)), (713, (10, 17)), (265, (56, 59)), (1001, (10, 15)), (844, (6, 10)), (1215, (-1, 4)), (1220, (6, 10)), (773, (16, 19)), (951, (27, 34)), (598, (6, 12)), (1121, (-1, 4)), (19, (28, 33)), (332, (-1, 4)), (895, (29, 33)), (113, (12, 15)), (604, (14, 17)), (443, (12, 18)), (710, (23, 26)), (109, (6, 10)), (348, (6, 8)), (321, (-1, 4)), (907, (25, 28)), (1233, (24, 28)), (681, (14, 17)), (212, (18, 23)), (792, (-1, 4)), (70, (43, 47)), (882, (-1, 4)), (156, (39, 42)), (53, (9, 14)), (716, (6, 10)), (980, (17, 21)), (457, (-1, 4)), (1100, (22, 25)), (1007, (6, 9)), (957, (9, 12)), (500, (6, 9)), (240, (20, 23)), (743, (-1, 4)), (637, (31, 34)), (310, (22, 26)), (23, (17, 20)), (693, (8, 11)), (761, (21, 25)), (921, (12, 17)), (523, (-1, 4)), (490, (6, 9)), (1201, (27, 33)), (671, (6, 9)), (952, (20, 26)), (303, (6, 9)), (879, (-1, 4)), (821, (6, 9)), (1038, (-1, 4)), (634, (31, 34)), (79, (15, 17)), (70, (-1, 4)), (1038, (10, 13)), (693, (25, 31)), (32, (6, 9)), (658, (40, 43)), (749, (6, 9)), (750, (-1, 4)), (329, (11, 15)), (448, (32, 37)), (684, (6, 8)), (865, (10, 13)), (91, (6, 9)), (1007, (96, 102)), (886, (-1, 4)), (15, (-1, 4)), (892, (-1, 4)), (840, (34, 39)), (76, (-1, 4)), (1080, (-1, 4)), (23, (11, 16)), (290, (-1, 4)), (548, (134, 137)), (960, (10, 13)), (342, (-1, 4)), (756, (-1, 4)), (1064, (22, 25)), (937, (6, 9)), (814, (20, 24)), (915, (20, 25)), (1145, (-1, 4)), (970, (-1, 4)), (255, (81, 85)), (934, (6, 12)), (356, (-1, 4)), (1113, (6, 11)), (1180, (-1, 4)), (1031, (6, 9)), (463, (6, 9)), (187, (-1, 4)), (780, (-1, 4)), (187, (13, 17)), (548, (51, 54)), (618, (6, 13)), (332, (42, 48)), (201, (-1, 4)), (631, (-1, 4)), (1069, (18, 22)), (414, (30, 33)), (852, (-1, 4)), (299, (6, 12)), (1091, (-1, 4)), (952, (-1, 4)), (795, (10, 13)), (570, (30, 34)), (767, (-1, 4)), (306, (14, 19)), (345, (26, 29)), (1238, (-1, 4)), (623, (-1, 4)), (637, (50, 54)), (497, (25, 28)), (478, (6, 11)), (844, (32, 38)), (637, (-1, 4)), (437, (-1, 4)), (113, (39, 44)), (321, (51, 56)), (581, (6, 12)), (386, (6, 9)), (400, (21, 31)), (750, (14, 17)), (564, (75, 79)), (722, (-1, 4)), (310, (45, 50)), (367, (25, 28)), (348, (62, 65)), (1226, (-1, 4)), (859, (6, 9)), (598, (13, 16)), (1157, (6, 11)), (373, (26, 30)), (963, (-1, 4)), (1121, (67, 70)), (601, (20, 25)), (1166, (10, 14)), (743, (6, 9)), (255, (24, 30)), (653, (-1, 4)), (520, (11, 16)), (166, (6, 12)), (265, (20, 24)), (681, (48, 51)), (1072, (21, 25)), (835, (27, 30)), (348, (58, 61)), (1208, (9, 13)), (104, (12, 14)), (789, (-1, 4)), (175, (-1, 4)), (163, (6, 11)), (1056, (6, 8)), (907, (40, 48)), (1113, (20, 23)), (1127, (-1, 4)), (317, (37, 43)), (789, (13, 20)), (852, (38, 41)), (798, (6, 9)), (996, (45, 51)), (339, (15, 19)), (1080, (6, 9)), (626, (42, 48)), (296, (-1, 4)), (725, (-1, 4)), (940, (-1, 4)), (761, (-1, 4)), (262, (6, 9)), (49, (19, 23)), (243, (44, 48)), (1130, (38, 41)), (181, (-1, 4)), (886, (30, 34)), (831, (9, 14)), (216, (10, 15)), (852, (63, 69)), (46, (11, 16)), (631, (16, 19)), (862, (-1, 4)), (1169, (23, 27)), (1205, (29, 32)), (996, (40, 44)), (874, (6, 10)), (482, (-1, 4)), (1017, (-1, 4)), (88, (-1, 4)), (719, (6, 10)), (53, (37, 42)), (907, (-1, 4)), (732, (-1, 4)), (1215, (40, 44)), (784, (38, 42)), (353, (-1, 4)), (1148, (-1, 4)), (921, (-1, 4)), (541, (-1, 4)), (290, (20, 22)), (658, (52, 59)), (1121, (41, 45)), (658, (11, 16)), (67, (6, 9)), (163, (-1, 4)), (79, (18, 22)), (1169, (6, 10)), (761, (58, 60)), (19, (-1, 4)), (868, (-1, 4)), (746, (11, 16)), (363, (6, 12)), (868, (15, 21)), (1045, (10, 14)), (212, (10, 12)), (951, (8, 11)), (397, (15, 19)), (1113, (-1, 4)), (469, (6, 11)), (677, (-1, 4)), (738, (-1, 4)), (518, (11, 14)), (934, (13, 17)), (653, (14, 17)), (668, (21, 24)), (895, (73, 80)), (756, (6, 9)), (497, (11, 16)), (133, (-1, 4)), (194, (-1, 4)), (784, (-1, 4)), (84, (-1, 4)), (475, (6, 9)), (852, (45, 49)), (892, (26, 33)), (945, (6, 9)), (283, (21, 25)), (198, (6, 10)), (874, (-1, 4)), (378, (6, 9)), (1041, (28, 31)), (248, (11, 14)), (713, (18, 21)), (1175, (40, 45)), (116, (-1, 4)), (1239, (10, 14)), (270, (-1, 4)), (1215, (49, 53)), (753, (6, 9)), (626, (10, 15)), (79, (6, 11)), (735, (-1, 4)), (977, (29, 32)), (113, (6, 11)), (150, (14, 17)), (265, (92, 97)), (985, (-1, 4)), (252, (-1, 4)), (835, (47, 50)), (1083, (10, 14)), (1064, (6, 11)), (1151, (-1, 4)), (967, (6, 9)), (460, (6, 9)), (97, (-1, 4)), (429, (16, 19)), (122, (40, 44)), (265, (35, 41)), (277, (32, 35)), (992, (-1, 4)), (1051, (22, 28)), (113, (25, 28)), (497, (29, 34)), (798, (19, 22)), (1134, (50, 54)), (1021, (-1, 4)), (133, (44, 48)), (370, (6, 9)), (448, (-1, 4)), (212, (6, 9)), (642, (24, 27)), (224, (10, 13)), (1072, (-1, 4)), (411, (24, 29)), (190, (6, 12)), (43, (-1, 4)), (989, (28, 31)), (429, (6, 10)), (889, (6, 10)), (1148, (13, 17)), (852, (74, 80)), (190, (36, 40)), (1172, (-1, 4)), (290, (14, 19)), (310, (18, 21)), (967, (-1, 4)), (988, (6, 9)), (339, (20, 23)), (732, (21, 25)), (348, (13, 16)), (780, (41, 44))])
[((15, (-1, 4)), '*SIS:\tI like that song .\n'), ((15, (18, 22)), '*SIS:\tI like that song .\n'), ((19, (-1, 4)), "*MOT:\tyou don't sing at the table .\n"), ((19, (28, 33)), "*MOT:\tyou don't sing at the table .\n"), ((23, (11, 16)), '*CHI:\t(..) mommy xxx there .\n'), ((23, (17, 20)), '*CHI:\t(..) mommy xxx there .\n'), ((26, (6, 9)), '*MOT:\tmhm .\n'), ((32, (6, 9)), '*CHI:\tyay !\n'), ((35, (6, 9)), '*SIS:\tsee I told you and you said word@q .\n'), ((40, (-1, 4)), '*SIS:\tI told [!] you .\n'), ((43, (-1, 4)), '*CHI:\tnow ?\n'), ((46, (11, 16)), '*CHI:\t(..) mommy now say no more .\n'), ((49, (6, 12)), "*CHI:\tthat's dirty song right ?\n"), ((49, (13, 18)), "*CHI:\tthat's dirty song right ?\n"), ((49, (19, 23)), "*CHI:\tthat's dirty song right ?\n"), ((53, (9, 14)), "*CHI:\tno don't say that that's dirty stuff .\n"), ((53, (31, 36)), "*CHI:\tno don't say that that's dirty stuff .\n"), ((53, (37, 42)), "*CHI:\tno don't say that that's dirty stuff .\n"), ((67, (6, 9)), '*CHI:\tmhm .\n'), ((70, (-1, 4)), "*MOT:\t<that isn't> [//] that's not a dirty song .\n"), ((70, (24, 30)), "*MOT:\t<that isn't> [//] that's not a dirty song .\n"), ((70, (37, 42)), "*MOT:\t<that isn't> [//] that's not a dirty song .\n"), ((70, (43, 47)), "*MOT:\t<that isn't> [//] that's not a dirty song .\n"), ((73, (10, 15)), '*CHI:\t(.) momma I not singin(g) .\n'), ((76, (-1, 4)), "*MOT:\tyou're not supposed to .\n"), ((79, (6, 11)), '*CHI:\tmomma on tv &-um it says you better get to see Amy back .\n'), ((79, (15, 17)), '*CHI:\tmomma on tv &-um it says you better get to see Amy back .\n'), ((79, (18, 22)), '*CHI:\tmomma on tv &-um it says you better get to see Amy back .\n'), ((84, (-1, 4)), "*MOT:\tI'm not <thinkin(g) about Shayla> [>] .\n"), ((88, (-1, 4)), '*CHI:\t<I said no> [<] !\n'), ((88, (18, 21)), '*CHI:\t<I said no> [<] !\n'), ((91, (6, 9)), '*MOT:\tmhm .\n'), ((97, (-1, 4)), "*SIS:\tI'm not gonna do that .\n"), ((101, (-1, 4)), '*SIS:\t(be)cause +...\n'), ((104, (6, 11)), "*MOT:\tya'll [: you all] don't no where them ear+rings at anyways .\n"), ((104, (12, 14)), "*MOT:\tya'll [: you all] don't no where them ear+rings at anyways .\n"), ((109, (6, 10)), '*CHI:\tyeah I know .\n'), ((113, (6, 11)), '*CHI:\tmommy xxx supposed eat with your hands .\n'), ((113, (12, 15)), '*CHI:\tmommy xxx supposed eat with your hands .\n'), ((113, (25, 28)), '*CHI:\tmommy xxx supposed eat with your hands .\n'), ((113, (39, 44)), '*CHI:\tmommy xxx supposed eat with your hands .\n'), ((116, (-1, 4)), '*MOT:\twhy do you have_to eat with your hand ?\n'), ((116, (39, 43)), '*MOT:\twhy do you have_to eat with your hand ?\n'), ((122, (40, 44)), '*CHI:\t<(be)cause> [/] (.) (be)cause xxx food .\n'), ((133, (-1, 4)), "*SIS:\tso I have_to put xxx and put it on my fork and eat it that's why .\n"), ((133, (44, 48)), "*SIS:\tso I have_to put xxx and put it on my fork and eat it that's why .\n"), ((142, (6, 11)), '*SIS:\tmomma did I eats almost half of it or some ?\n'), ((142, (30, 34)), '*SIS:\tmomma did I eats almost half of it or some ?\n'), ((150, (-1, 4)), '*SIS:\tI eat a lot ?\n'), ((150, (14, 17)), '*SIS:\tI eat a lot ?\n'), ((156, (17, 20)), "*SIS:\tmommy &-um (.) you don't have_to eat all of it (be)cause you can just eat some ?\n"), ((156, (39, 42)), "*SIS:\tmommy &-um (.) you don't have_to eat all of it (be)cause you can just eat some ?\n"), ((163, (-1, 4)), '*SIS:\tmommy ?\n'), ((163, (6, 11)), '*SIS:\tmommy ?\n'), ((166, (-1, 4)), "*MOT:\tyou're supposed to eat all your food (.) .\n"), ((166, (6, 12)), "*MOT:\tyou're supposed to eat all your food (.) .\n"), ((166, (38, 42)), "*MOT:\tyou're supposed to eat all your food (.) .\n"), ((166, (43, 46)), "*MOT:\tyou're supposed to eat all your food (.) .\n"), ((175, (-1, 4)), '*CHI:\tI done .\n'), ((178, (6, 9)), '*SIS:\t(.) and you can talk xxx .\n'), ((181, (-1, 4)), '*SIS:\tand you mommy ?\n'), ((184, (32, 36)), "*SIS:\t(.) &-um I'm takin(g) the salt off .\n"), ((187, (-1, 4)), '*SIS:\tI hate salt [>] .\n'), ((187, (13, 17)), '*SIS:\tI hate salt [>] .\n'), ((190, (6, 12)), '*CHI:\t<mommy I drink my> [<] [/] my soda ?\n'), ((190, (36, 40)), '*CHI:\t<mommy I drink my> [<] [/] my soda ?\n'), ((194, (-1, 4)), '*CHI:\tcould I ?\n'), ((198, (6, 10)), '*MOT:\tyeah .\n'), ((201, (-1, 4)), '*SIS:\tyou know why ?\n'), ((209, (30, 34)), '*CHI:\twell Mom I drink all my soda .\n'), ((212, (6, 9)), '*CHI:\txxx mo [//] mommy xxx ?\n'), ((212, (10, 12)), '*CHI:\txxx mo [//] mommy xxx ?\n'), ((212, (18, 23)), '*CHI:\txxx mo [//] mommy xxx ?\n'), ((216, (10, 15)), "*CHI:\t(.) mommy you do like this won't be hot .\n"), ((221, (-1, 4)), '*SIS:\tyou copying me .\n'), ((224, (10, 13)), '*CHI:\t(.) xxx did she copy you ?\n'), ((232, (6, 9)), "*SIS:\tmhm (be)cause I did that I don't think .\n"), ((237, (15, 18)), '*SIS:\tplus xxx [>] .\n'), ((240, (16, 19)), "*CHI:\t<I didn't do> [<] .\n"), ((240, (20, 23)), "*CHI:\t<I didn't do> [<] .\n"), ((243, (44, 48)), "*SIS:\tplus yeah she did she didn't put on a tape .\n"), ((248, (11, 14)), '*SIS:\t(..) xxx ?\n'), ((249, (-1, 4)), '*MOT:\twho do that ?\n'), ((252, (-1, 4)), '*CHI:\tat the church .\n'), ((252, (13, 19)), '*CHI:\tat the church .\n'), ((255, (-1, 4)), "*SIS:\twe do that at the church <when it's a> [//] when [/] when God give us some food you supposed to do that .\n"), ((255, (24, 30)), "*SIS:\twe do that at the church <when it's a> [//] when [/] when God give us some food you supposed to do that .\n"), ((255, (55, 58)), "*SIS:\twe do that at the church <when it's a> [//] when [/] when God give us some food you supposed to do that .\n"), ((255, (81, 85)), "*SIS:\twe do that at the church <when it's a> [//] when [/] when God give us some food you supposed to do that .\n"), ((262, (6, 9)), '*MOT:\tmhm .\n'), ((265, (6, 9)), '*SIS:\t(.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .\n'), ((265, (20, 24)), '*SIS:\t(.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .\n'), ((265, (35, 41)), '*SIS:\t(.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .\n'), ((265, (56, 59)), '*SIS:\t(.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .\n'), ((265, (64, 68)), '*SIS:\t(.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .\n'), ((265, (92, 97)), '*SIS:\t(.) and mommy &-um we xxx at school punched me on [/] <on the> [//] &-um on [/] on my heart .\n'), ((270, (-1, 4)), '*MOT:\ton your heart ?\n'), ((270, (14, 19)), '*MOT:\ton your heart ?\n'), ((273, (6, 10)), '*SIS:\tyeah .\n'), ((277, (32, 35)), '*SIS:\twhat do they do with when [/] when [/] when you punch (th)em in the heart ?\n'), ((277, (74, 79)), '*SIS:\twhat do they do with when [/] when [/] when you punch (th)em in the heart ?\n'), ((283, (21, 25)), '*MOT:\talright Brenda stop playin(g) in it .\n'), ((290, (-1, 4)), "*MOT:\tso what ya'll [: you all] do at school today ?\n"), ((290, (14, 19)), "*MOT:\tso what ya'll [: you all] do at school today ?\n"), ((290, (20, 22)), "*MOT:\tso what ya'll [: you all] do at school today ?\n"), ((290, (38, 44)), "*MOT:\tso what ya'll [: you all] do at school today ?\n"), ((290, (45, 50)), "*MOT:\tso what ya'll [: you all] do at school today ?\n"), ((296, (-1, 4)), '*CHI:\tI play with xxx by the xxx .\n'), ((296, (18, 21)), '*CHI:\tI play with xxx by the xxx .\n'), ((299, (6, 12)), "*MOT:\tthat's all ?\n"), ((303, (6, 9)), '*CHI:\tyep .\n'), ((306, (14, 19)), '*SIS:\toh yeah mommy ?\n'), ((310, (-1, 4)), '*SIS:\tI went to a fun park [!] it was so fun mommy you should of had went there .\n'), ((310, (18, 21)), '*SIS:\tI went to a fun park [!] it was so fun mommy you should of had went there .\n'), ((310, (22, 26)), '*SIS:\tI went to a fun park [!] it was so fun mommy you should of had went there .\n'), ((310, (45, 50)), '*SIS:\tI went to a fun park [!] it was so fun mommy you should of had went there .\n'), ((317, (24, 27)), '*SIS:\t&-um it had a big [!] big huge castle .\n'), ((317, (37, 43)), '*SIS:\t&-um it had a big [!] big huge castle .\n'), ((321, (-1, 4)), '*SIS:\tit was <big it [/] it was> [>] bigger than a chair or [!] a table .\n'), ((321, (51, 56)), '*SIS:\tit was <big it [/] it was> [>] bigger than a chair or [!] a table .\n'), ((321, (66, 71)), '*SIS:\tit was <big it [/] it was> [>] bigger than a chair or [!] a table .\n'), ((326, (-1, 4)), '*CHI:\tI was <flying Shayla> [<] .\n'), ((329, (-1, 4)), '*MOT:\t<did you> [//] Brenda go ?\n'), ((329, (11, 15)), '*MOT:\t<did you> [//] Brenda go ?\n'), ((332, (-1, 4)), '*SIS:\tit was big than [/] than [/] than a window and guess <what I went> [>] in it and guess what .\n'), ((332, (42, 48)), '*SIS:\tit was big than [/] than [/] than a window and guess <what I went> [>] in it and guess what .\n'), ((332, (53, 58)), '*SIS:\tit was big than [/] than [/] than a window and guess <what I went> [>] in it and guess what .\n'), ((339, (-1, 4)), "*CHI:\t<I'm big now> [<] .\n"), ((339, (15, 19)), "*CHI:\t<I'm big now> [<] .\n"), ((339, (20, 23)), "*CHI:\t<I'm big now> [<] .\n"), ((342, (-1, 4)), '*SIS:\tthey had a door +/.\n'), ((342, (17, 21)), '*SIS:\tthey had a door +/.\n'), ((345, (26, 29)), "*CHI:\tMa I'm <bigger now> [>] .\n"), ((348, (6, 8)), '*SIS:\t+, and xxx you <when you go> [//] when you <step on it> [>] it [/] it goes around .\n'), ((348, (13, 16)), '*SIS:\t+, and xxx you <when you go> [//] when you <step on it> [>] it [/] it goes around .\n'), ((348, (58, 61)), '*SIS:\t+, and xxx you <when you go> [//] when you <step on it> [>] it [/] it goes around .\n'), ((348, (62, 65)), '*SIS:\t+, and xxx you <when you go> [//] when you <step on it> [>] it [/] it goes around .\n'), ((353, (-1, 4)), '*CHI:\tI <knocked down xxx> [<] .\n'), ((356, (-1, 4)), "*MOT:\twhat'd you say Bren ?\n"), ((356, (6, 12)), "*MOT:\twhat'd you say Bren ?\n"), ((363, (-1, 4)), "*MOT:\twhat'd you say after that ?\n"), ((363, (6, 12)), "*MOT:\twhat'd you say after that ?\n"), ((367, (25, 28)), '*CHI:\t<I> [/] (.) I play xxx a xxx .\n'), ((370, (6, 9)), '*MOT:\thm: .\n'), ((373, (26, 30)), '*SIS:\tmommy &-um and [//] <and they have_to go> [//] when you step on it it goes around .\n'), ((378, (6, 9)), '*MOT:\tmhm .\n'), ((381, (-1, 4)), '*SIS:\tsomeone has to push and it goes back .\n'), ((381, (6, 13)), '*SIS:\tsomeone has to push and it goes back .\n'), ((386, (6, 9)), '*MOT:\tmhm .\n'), ((397, (15, 19)), '*SIS:\ta little door .\n'), ((400, (21, 31)), '*SIS:\tit <was a> [>] green door .\n'), ((407, (6, 12)), "*MOT:\twhat's so funny ?\n"), ((411, (-1, 4)), '*CHI:\tI do [=! smacking lips] .\n'), ((411, (24, 29)), '*CHI:\tI do [=! smacking lips] .\n'), ((414, (6, 11)), "*SIS:\tmommy Lisette's so mean [!] and bad .\n"), ((414, (30, 33)), "*SIS:\tmommy Lisette's so mean [!] and bad .\n"), ((418, (6, 9)), '*MOT:\tmhm .\n'), ((429, (6, 10)), '*CHI:\t&-um that xxx and xxx come over now ?\n'), ((429, (16, 19)), '*CHI:\t&-um that xxx and xxx come over now ?\n'), ((429, (28, 32)), '*CHI:\t&-um that xxx and xxx come over now ?\n'), ((433, (-1, 4)), '*CHI:\tright now ?\n'), ((437, (-1, 4)), '*MOT:\tin a little while .\n'), ((437, (18, 23)), '*MOT:\tin a little while .\n'), ((440, (-1, 4)), '*MOT:\talright clean up your mess .\n'), ((440, (28, 32)), '*MOT:\talright clean up your mess .\n'), ((443, (12, 18)), '*MOT:\t0 [=! clears throat] .\n'), ((448, (-1, 4)), '*SIS:\t<and it had a little> [<] slide and +/.\n'), ((448, (6, 10)), '*SIS:\t<and it had a little> [<] slide and +/.\n'), ((448, (32, 37)), '*SIS:\t<and it had a little> [<] slide and +/.\n'), ((457, (-1, 4)), '*SIS:\tshe [/] she [/] she crashed into it .\n'), ((460, (6, 9)), '*MOT:\thm: .\n'), ((463, (6, 9)), '*SIS:\t(.) and it hurts .\n'), ((469, (6, 11)), '*CHI:\tmommy [>] +/.\n'), ((472, (6, 9)), '*SIS:\t<it was blood> [<] in it xxx way .\n'), ((472, (21, 24)), '*SIS:\t<it was blood> [<] in it xxx way .\n'), ((472, (35, 38)), '*SIS:\t<it was blood> [<] in it xxx way .\n'), ((475, (6, 9)), '*MOT:\tmhm .\n'), ((478, (6, 11)), '*CHI:\tmommy xxx my xxx ?\n'), ((478, (12, 15)), '*CHI:\tmommy xxx my xxx ?\n'), ((482, (-1, 4)), '*CHI:\tsee my bubble ?\n'), ((490, (6, 9)), '*CHI:\txxx .\n'), ((491, (6, 10)), '*CHI:\tlook all the bubble mommy .\n'), ((491, (26, 31)), '*CHI:\tlook all the bubble mommy .\n'), ((494, (6, 9)), '*MOT:\thm: .\n'), ((497, (11, 16)), '*CHI:\t(..) mommy when my xxx gonna xxx .\n'), ((497, (25, 28)), '*CHI:\t(..) mommy when my xxx gonna xxx .\n'), ((497, (29, 34)), '*CHI:\t(..) mommy when my xxx gonna xxx .\n'), ((500, (-1, 4)), '*MOT:\txxx leave it alone .\n'), ((500, (6, 9)), '*MOT:\txxx leave it alone .\n'), ((503, (6, 9)), '*SIS:\txxx .\n'), ((505, (-1, 4)), '*SIS:\t&=humming .\n'), ((511, (6, 10)), '*CHI:\tlook are you xxx ?\n'), ((518, (11, 14)), '*CHI:\t&-um xxx .\n'), ((520, (11, 16)), '*MOT:\t(..) count your numbers .\n'), ((523, (-1, 4)), '*MOT:\tI thought you could only count up to five but you can count to eleven .\n'), ((541, (-1, 4)), '*SIS:\tI know how to count to [>] anything .\n'), ((545, (10, 13)), '*CHI:\tone [<] .\n'), ((548, (51, 54)), '*SIS:\tone two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen twenty one , twenty two , twenty three xxx +...\n'), ((548, (134, 137)), '*SIS:\tone two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen twenty one , twenty two , twenty three xxx +...\n'), ((561, (-1, 4)), '*SIS:\tthen what ?\n'), ((564, (-1, 4)), '*MOT:\tafter fifteen (.) sixteen seventeen eighteen <nineteen twenty twenty one> [>] +...\n'), ((564, (75, 79)), '*MOT:\tafter fifteen (.) sixteen seventeen eighteen <nineteen twenty twenty one> [>] +...\n'), ((564, (80, 83)), '*MOT:\tafter fifteen (.) sixteen seventeen eighteen <nineteen twenty twenty one> [>] +...\n'), ((570, (-1, 4)), '*SIS:\t<nineteen twenty twenty one> [<] twenty two , twenty three , twenty four , twenty five , twenty six , twenty seven , twenty eight , twenty nine .\n'), ((570, (30, 34)), '*SIS:\t<nineteen twenty twenty one> [<] twenty two , twenty three , twenty four , twenty five , twenty six , twenty seven , twenty eight , twenty nine .\n'), ((581, (6, 12)), '*MOT:\tthirty .\n'), ((584, (6, 12)), '*SIS:\tthirty one , thirty two , thirty three , thirty four , thirty five , thirty six , xxx thirty seven , thirty eight , thirty nine .\n'), ((598, (6, 12)), '*SIS:\tthirty [<] .\n'), ((598, (13, 16)), '*SIS:\tthirty [<] .\n'), ((601, (6, 12)), '*MOT:\tthirty nine , forty .\n'), ((601, (20, 25)), '*MOT:\tthirty nine , forty .\n'), ((604, (14, 17)), '*CHI:\t+, nine ten elev(en) one four five six seven .\n'), ((615, (6, 9)), '*MOT:\teat .\n'), ((618, (6, 13)), '*CHI:\teat eat eat .\n'), ((623, (-1, 4)), '*SIS:\txxx not eating her bottle .\n'), ((623, (25, 31)), '*SIS:\txxx not eating her bottle .\n'), ((626, (10, 15)), '*CHI:\t(.) momma know what I can not eat a bottle .\n'), ((626, (42, 48)), '*CHI:\t(.) momma know what I can not eat a bottle .\n'), ((631, (-1, 4)), '*CHI:\tI want my cup .\n'), ((631, (16, 19)), '*CHI:\tI want my cup .\n'), ((634, (-1, 4)), '*CHI:\tI xxx eat [/] eat it all mom .\n'), ((634, (12, 15)), '*CHI:\tI xxx eat [/] eat it all mom .\n'), ((634, (31, 34)), '*CHI:\tI xxx eat [/] eat it all mom .\n'), ((637, (-1, 4)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((637, (31, 34)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((637, (40, 44)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((637, (50, 54)), '*MOT:\tyou know how to eat that fat [//] &-um that meat Brenda xxx .\n'), ((642, (-1, 4)), "*MOT:\tand you [>] don't eat fat .\n"), ((642, (24, 27)), "*MOT:\tand you [>] don't eat fat .\n"), ((642, (28, 31)), "*MOT:\tand you [>] don't eat fat .\n"), ((645, (-1, 6)), '*MOT:\tyou need fat Bren so you know how to eat that meat here .\n'), ((645, (15, 18)), '*MOT:\tyou need fat Bren so you know how to eat that meat here .\n'), ((645, (52, 56)), '*MOT:\tyou need fat Bren so you know how to eat that meat here .\n'), ((653, (-1, 4)), "*CHI:\tI don't fat .\n"), ((653, (14, 17)), "*CHI:\tI don't fat .\n"), ((658, (-1, 4)), "*MOT:\tyou <don't> [/] don't worry about fat I ain't nothing to explain it to you (be)cause you don't eat it here .\n"), ((658, (11, 16)), "*MOT:\tyou <don't> [/] don't worry about fat I ain't nothing to explain it to you (be)cause you don't eat it here .\n"), ((658, (40, 43)), "*MOT:\tyou <don't> [/] don't worry about fat I ain't nothing to explain it to you (be)cause you don't eat it here .\n"), ((658, (52, 59)), "*MOT:\tyou <don't> [/] don't worry about fat I ain't nothing to explain it to you (be)cause you don't eat it here .\n"), ((668, (-1, 4)), "*CHI:\tI don't eat no fat .\n"), ((668, (21, 24)), "*CHI:\tI don't eat no fat .\n"), ((671, (6, 9)), '*MOT:\tyes you do .\n'), ((674, (10, 13)), '*CHI:\txxx eat no fat .\n'), ((674, (17, 20)), '*CHI:\txxx eat no fat .\n'), ((677, (-1, 4)), '*CHI:\tI eat +...\n'), ((681, (-1, 4)), '*CHI:\tI think xxx teeth &-um and everything xxx eat .\n'), ((681, (14, 17)), '*CHI:\tI think xxx teeth &-um and everything xxx eat .\n'), ((681, (18, 23)), '*CHI:\tI think xxx teeth &-um and everything xxx eat .\n'), ((681, (48, 51)), '*CHI:\tI think xxx teeth &-um and everything xxx eat .\n'), ((684, (6, 8)), '*MOT:\tmm .\n'), ((687, (6, 8)), '*CHI:\tmm .\n'), ((690, (10, 13)), '*CHI:\txxx mom .\n'), ((693, (8, 11)), '*SIS:\t0 [=! untelligible sound] .\n'), ((693, (25, 31)), '*SIS:\t0 [=! untelligible sound] .\n'), ((694, (-1, 4)), "*CHI:\tI don't eat fat .\n"), ((694, (18, 21)), "*CHI:\tI don't eat fat .\n"), ((700, (-1, 4)), '*MOT:\there .\n'), ((704, (-1, 4)), "*MOT:\tit's not hot so you don't have_to blow it .\n"), ((710, (-1, 4)), "*SIS:\tI don't want xxx [>] .\n"), ((710, (19, 22)), "*SIS:\tI don't want xxx [>] .\n"), ((710, (23, 26)), "*SIS:\tI don't want xxx [>] .\n"), ((713, (10, 17)), '*MOT:\t<no onions> [<] ?\n'), ((713, (18, 21)), '*MOT:\t<no onions> [<] ?\n'), ((716, (6, 10)), '*MOT:\tokay .\n'), ((719, (6, 10)), '*MOT:\tcorn .\n'), ((722, (-1, 4)), "*SIS:\tI don't want +/.\n"), ((725, (-1, 4)), '*MOT:\there !\n'), ((729, (-1, 4)), '*MOT:\there Shay !\n'), ((732, (-1, 4)), '*SIS:\tI want xxx the book now [>] .\n'), ((732, (21, 25)), '*SIS:\tI want xxx the book now [>] .\n'), ((735, (-1, 4)), '*MOT:\t<then you eat> [<] .\n'), ((735, (6, 11)), '*MOT:\t<then you eat> [<] .\n'), ((735, (21, 24)), '*MOT:\t<then you eat> [<] .\n'), ((738, (-1, 4)), '*MOT:\tthen you eat by yourself then .\n'), ((743, (-1, 4)), '*SIS:\txxx for me .\n'), ((743, (6, 9)), '*SIS:\txxx for me .\n'), ((746, (11, 16)), '*MOT:\tgood night .\n'), ((749, (6, 9)), '*CHI:\txxx .\n'), ((750, (-1, 4)), '*SIS:\tI go to bed without my drink ?\n'), ((750, (14, 17)), '*SIS:\tI go to bed without my drink ?\n'), ((750, (29, 34)), '*SIS:\tI go to bed without my drink ?\n'), ((753, (6, 9)), '*MOT:\tmhm .\n'), ((756, (-1, 4)), "*SIS:\txxx then you need to drink something I'm thirsty .\n"), ((756, (6, 9)), "*SIS:\txxx then you need to drink something I'm thirsty .\n"), ((761, (-1, 4)), "*MOT:\tif you have no room for food you don't have no room &f for drink .\n"), ((761, (21, 25)), "*MOT:\tif you have no room for food you don't have no room &f for drink .\n"), ((761, (30, 34)), "*MOT:\tif you have no room for food you don't have no room &f for drink .\n"), ((761, (58, 60)), "*MOT:\tif you have no room for food you don't have no room &f for drink .\n"), ((761, (65, 70)), "*MOT:\tif you have no room for food you don't have no room &f for drink .\n"), ((767, (-1, 4)), '*SIS:\tI do have room .\n'), ((767, (16, 20)), '*SIS:\tI do have room .\n'), ((773, (16, 19)), '*MOT:\twell then eat !\n'), ((777, (29, 32)), "*SIS:\t<I xxx> [<] if I don't eat .\n"), ((780, (-1, 4)), "*SIS:\tI don't have no [/] no room for my xxx .\n"), ((780, (29, 33)), "*SIS:\tI don't have no [/] no room for my xxx .\n"), ((780, (41, 44)), "*SIS:\tI don't have no [/] no room for my xxx .\n"), ((784, (-1, 4)), "*MOT:\tsee you don't need [//] have no room for food you xxx Shay .\n"), ((784, (38, 42)), "*MOT:\tsee you don't need [//] have no room for food you xxx Shay .\n"), ((784, (47, 51)), "*MOT:\tsee you don't need [//] have no room for food you xxx Shay .\n"), ((789, (-1, 4)), '*MOT:\t(.) go (a)head .\n'), ((789, (13, 20)), '*MOT:\t(.) go (a)head .\n'), ((792, (-1, 4)), '*SIS:\tI am .\n'), ((795, (10, 13)), '*CHI:\txxx eat .\n'), ((798, (6, 9)), '*CHI:\thm: I bit my xxx .\n'), ((798, (19, 22)), '*CHI:\thm: I bit my xxx .\n'), ((805, (11, 13)), "*CHI:\t<I'm a> [//] I'm gettin(g) a big one ?\n"), ((814, (6, 11)), '*MOT:\tspoon full of food ?\n'), ((814, (20, 24)), '*MOT:\tspoon full of food ?\n'), ((818, (6, 8)), "*MOT:\toh I don't know .\n"), ((821, (6, 9)), '*CHI:\txxx .\n'), ((825, (6, 10)), '*CHI:\tyeah .\n'), ((828, (6, 11)), "*MOT:\tdon't say yeah .\n"), ((831, (9, 14)), '*CHI:\tMa mommy xxx [>] +/.\n'), ((835, (27, 30)), '*SIS:\t<xxx we went> [<] we [/] we [/] we had a lot of fun &-um at [/] at the trip .\n'), ((835, (47, 50)), '*SIS:\t<xxx we went> [<] we [/] we [/] we had a lot of fun &-um at [/] at the trip .\n'), ((835, (77, 81)), '*SIS:\t<xxx we went> [<] we [/] we [/] we had a lot of fun &-um at [/] at the trip .\n'), ((840, (-1, 4)), '*SIS:\twe went on the sailboat and stuff .\n'), ((840, (34, 39)), '*SIS:\twe went on the sailboat and stuff .\n'), ((844, (6, 10)), "*MOT:\tyeah it's called George's island .\n"), ((844, (11, 15)), "*MOT:\tyeah it's called George's island .\n"), ((844, (32, 38)), "*MOT:\tyeah it's called George's island .\n"), ((848, (-1, 4)), "*MOT:\tyou went to George's island today .\n"), ((848, (27, 33)), "*MOT:\tyou went to George's island today .\n"), ((848, (34, 39)), "*MOT:\tyou went to George's island today .\n"), ((852, (-1, 4)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((852, (21, 25)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((852, (38, 41)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((852, (45, 49)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((852, (63, 69)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((852, (74, 80)), '*SIS:\tthis [//] that boat had a xxx a lot of food and a lot of chairs and tables .\n'), ((859, (6, 9)), '*MOT:\tmhm .\n'), ((862, (-1, 4)), '*SIS:\tit has upstairs and downstairs +...\n'), ((865, (-1, 4)), '*SIS:\tand [/] and what else +...\n'), ((865, (10, 13)), '*SIS:\tand [/] and what else +...\n'), ((868, (-1, 4)), '*SIS:\tthey had drinks there .\n'), ((868, (15, 21)), '*SIS:\tthey had drinks there .\n'), ((871, (6, 9)), '*MOT:\tmhm .\n'), ((874, (-1, 4)), "*SIS:\t<but I> [//] but <we didn't> [/] we didn't eat anything or drink anything .\n"), ((874, (6, 10)), "*SIS:\t<but I> [//] but <we didn't> [/] we didn't eat anything or drink anything .\n"), ((879, (-1, 4)), "*MOT:\tyou didn't ?\n"), ((882, (-1, 4)), "*SIS:\twe didn't have anything [!] at all .\n"), ((886, (-1, 4)), '*MOT:\tso you just rode on the boat ?\n'), ((886, (30, 34)), '*MOT:\tso you just rode on the boat ?\n'), ((889, (6, 10)), '*SIS:\tyeah .\n'), ((892, (-1, 4)), '*SIS:\tjust sit down doing nothing .\n'), ((892, (26, 33)), '*SIS:\tjust sit down doing nothing .\n'), ((895, (-1, 4)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (29, 33)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (56, 65)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (73, 80)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (106, 110)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((895, (118, 123)), '*SIS:\tso me and Carmen just <look out> [//] look at the fish look at the wat(er) and guess what I saw the duck in the water .\n'), ((904, (6, 9)), '*MOT:\thm: .\n'), ((907, (-1, 4)), '*SIS:\tthat water is deep [!] and it had lobsters in it .\n'), ((907, (11, 16)), '*SIS:\tthat water is deep [!] and it had lobsters in it .\n'), ((907, (25, 28)), '*SIS:\tthat water is deep [!] and it had lobsters in it .\n'), ((907, (40, 48)), '*SIS:\tthat water is deep [!] and it had lobsters in it .\n'), ((912, (-1, 4)), '*MOT:\tyou saw lobsters ?\n'), ((912, (14, 22)), '*MOT:\tyou saw lobsters ?\n'), ((915, (-1, 4)), '*SIS:\t(be)cause the water was green .\n'), ((915, (20, 25)), '*SIS:\t(be)cause the water was green .\n'), ((915, (30, 35)), '*SIS:\t(be)cause the water was green .\n'), ((918, (6, 9)), '*MOT:\thm: .\n'), ((921, (-1, 4)), "*SIS:\tgreen water you can't see .\n"), ((921, (6, 11)), "*SIS:\tgreen water you can't see .\n"), ((921, (12, 17)), "*SIS:\tgreen water you can't see .\n"), ((924, (-1, 4)), '*SIS:\tI xxx +/.\n'), ((934, (6, 12)), "*MOT:\tthat's okay .\n"), ((934, (13, 17)), "*MOT:\tthat's okay .\n"), ((937, (6, 9)), '*MOT:\teat two .\n'), ((940, (-1, 4)), '*MOT:\twant me to treat you like a little bitty baby ?\n'), ((940, (47, 51)), '*MOT:\twant me to treat you like a little bitty baby ?\n'), ((945, (6, 9)), '*SIS:\tyep &=laughs .\n'), ((951, (8, 11)), '*SIS:\t0 [=! unintelligible sounds] .\n'), ((951, (27, 34)), '*SIS:\t0 [=! unintelligible sounds] .\n'), ((952, (-1, 4)), '*SIS:\tand mommy xxx decide where did they bury God ?\n'), ((952, (20, 26)), '*SIS:\tand mommy xxx decide where did they bury God ?\n'), ((957, (9, 12)), '*MOT:\tno xxx .\n'), ((960, (10, 13)), '*SIS:\t<I> [/] I mean George Washington ?\n'), ((963, (-1, 4)), '*MOT:\tyou sure it was George Washington ?\n'), ((967, (-1, 4)), '*SIS:\thuh ?\n'), ((967, (6, 9)), '*SIS:\thuh ?\n'), ((970, (-1, 4)), '*MOT:\tare you sure it was George Washington ?\n'), ((977, (-1, 4)), '*SIS:\tI mean <xxx think xxx> [>] .\n'), ((977, (29, 32)), '*SIS:\tI mean <xxx think xxx> [>] .\n'), ((980, (10, 16)), "*MOT:\t<if you're not> [<] yeah think first .\n"), ((980, (17, 21)), "*MOT:\t<if you're not> [<] yeah think first .\n"), ((980, (26, 30)), "*MOT:\t<if you're not> [<] yeah think first .\n"), ((984, (-1, 4)), '*SIS:\t&=humming .\n'), ((985, (-1, 4)), '*SIS:\tGeorge Washington .\n'), ((988, (6, 9)), '*MOT:\txxx .\n'), ((989, (-1, 4)), '*SIS:\tI got xxx <I got xxx> [>] .\n'), ((989, (28, 31)), '*SIS:\tI got xxx <I got xxx> [>] .\n'), ((992, (-1, 4)), '*CHI:\t<George Washington xxx> [<] .\n'), ((996, (-1, 4)), "*SIS:\tI don't know why did they have_to bury people who die ?\n"), ((996, (40, 44)), "*SIS:\tI don't know why did they have_to bury people who die ?\n"), ((996, (45, 51)), "*SIS:\tI don't know why did they have_to bury people who die ?\n"), ((1001, (10, 15)), '*SIS:\twhy mommy ?\n'), ((1004, (11, 15)), "*MOT:\tI'll tell you later .\n"), ((1007, (6, 9)), "*SIS:\t(.) mommy God can give (.) you wings to fly up to [/] to heaven <(be)cause> [/] (be)cause you'll be buried .\n"), ((1007, (10, 15)), "*SIS:\t(.) mommy God can give (.) you wings to fly up to [/] to heaven <(be)cause> [/] (be)cause you'll be buried .\n"), ((1007, (96, 102)), "*SIS:\t(.) mommy God can give (.) you wings to fly up to [/] to heaven <(be)cause> [/] (be)cause you'll be buried .\n"), ((1014, (27, 32)), '*SIS:\thow can God give you wings ?\n'), ((1017, (-1, 4)), "*SIS:\tand [/] and you're buried ?\n"), ((1017, (10, 13)), "*SIS:\tand [/] and you're buried ?\n"), ((1017, (18, 24)), "*SIS:\tand [/] and you're buried ?\n"), ((1021, (-1, 4)), '*MOT:\tdoes God know everything ?\n'), ((1024, (6, 10)), '*SIS:\tyeah .\n'), ((1027, (-1, 4)), '*MOT:\tthen I guess he can do anything .\n'), ((1031, (6, 9)), '*CHI:\txxx mommy your xxx .\n'), ((1038, (-1, 4)), '*CHI:\tand xxx .\n'), ((1038, (10, 13)), '*CHI:\tand xxx .\n'), ((1041, (-1, 4)), '*SIS:\tand he knows what the [/] the food is ?\n'), ((1041, (28, 31)), '*SIS:\tand he knows what the [/] the food is ?\n'), ((1041, (36, 40)), '*SIS:\tand he knows what the [/] the food is ?\n'), ((1045, (10, 14)), '*SIS:\tthe food called ?\n'), ((1048, (6, 9)), '*MOT:\tyes yes .\n'), ((1051, (22, 28)), "*SIS:\t<&wo> [/] would people doesn't know what it is ?\n"), ((1056, (6, 8)), '*SIS:\tew .\n'), ((1059, (23, 26)), "*SIS:\t(.) everything's xxx .\n"), ((1062, (6, 9)), '*SIS:\txxx .\n'), ((1064, (6, 11)), "*SIS:\tmommy there's a man he knows me .\n"), ((1064, (22, 25)), "*SIS:\tmommy there's a man he knows me .\n"), ((1069, (-1, 4)), '*SIS:\the knows my name .\n'), ((1069, (18, 22)), '*SIS:\the knows my name .\n'), ((1072, (-1, 4)), '*SIS:\tand I know his name his name was (.) yeah Robinson .\n'), ((1072, (21, 25)), '*SIS:\tand I know his name his name was (.) yeah Robinson .\n'), ((1072, (43, 47)), '*SIS:\tand I know his name his name was (.) yeah Robinson .\n'), ((1077, (10, 14)), '*MOT:\this name is [!] Robinson .\n'), ((1080, (-1, 4)), '*SIS:\thuh ?\n'), ((1080, (6, 9)), '*SIS:\thuh ?\n'), ((1083, (10, 14)), '*MOT:\this name is Robinson I know Robinson too .\n'), ((1088, (-1, 4)), '*CHI:\tI know xxx too I know Robinson .\n'), ((1091, (-1, 4)), '*SIS:\the like(s) me .\n'), ((1094, (-1, 4)), '*MOT:\tdo you (.) know Robinson ?\n'), ((1100, (-1, 4)), '*MOT:\t<you was small> [<] when he got married .\n'), ((1100, (6, 10)), '*MOT:\t<you was small> [<] when he got married .\n'), ((1100, (22, 25)), '*MOT:\t<you was small> [<] when he got married .\n'), ((1107, (6, 9)), '*MOT:\tmhm .\n'), ((1110, (6, 8)), '*SIS:\tmm .\n'), ((1113, (-1, 4)), "*MOT:\tdon't do that eat Shayla .\n"), ((1113, (6, 11)), "*MOT:\tdon't do that eat Shayla .\n"), ((1113, (20, 23)), "*MOT:\tdon't do that eat Shayla .\n"), ((1116, (6, 11)), '*SIS:\tmommy <&e> [/] even if I be bad he still like(s) me .\n'), ((1121, (-1, 4)), "*SIS:\the doesn't hit [/] whoop me with a belt but he mailed me and xxx a xxx .\n"), ((1121, (41, 45)), "*SIS:\the doesn't hit [/] whoop me with a belt but he mailed me and xxx a xxx .\n"), ((1121, (67, 70)), "*SIS:\the doesn't hit [/] whoop me with a belt but he mailed me and xxx a xxx .\n"), ((1127, (-1, 4)), '*CHI:\tand me ?\n'), ((1130, (-1, 4)), "*MOT:\the's not supposed to <hurt you> [>] .\n"), ((1130, (38, 41)), "*MOT:\the's not supposed to <hurt you> [>] .\n"), ((1134, (50, 54)), '*SIS:\t<and Natalie> [<] hurt me so so he take the belt and hit her with it .\n'), ((1142, (6, 9)), '*MOT:\tmhm .\n'), ((1145, (-1, 4)), '*CHI:\tI finish .\n'), ((1148, (-1, 4)), '*SIS:\tI hate corn .\n'), ((1148, (13, 17)), '*SIS:\tI hate corn .\n'), ((1151, (-1, 4)), '*SIS:\tI eat all the rice .\n'), ((1151, (20, 24)), '*SIS:\tI eat all the rice .\n'), ((1157, (6, 11)), '*CHI:\tmommy (.) mommy [>] .\n'), ((1157, (22, 25)), '*CHI:\tmommy (.) mommy [>] .\n'), ((1160, (-1, 4)), '*MOT:\there [<] .\n'), ((1163, (-1, 4)), '*MOT:\tput it in your mouth !\n'), ((1163, (21, 26)), '*MOT:\tput it in your mouth !\n'), ((1166, (10, 14)), '*CHI:\txxx mama .\n'), ((1169, (6, 10)), '*MOT:\tlook at all that rice .\n'), ((1169, (23, 27)), '*MOT:\tlook at all that rice .\n'), ((1172, (-1, 4)), '*MOT:\tyou say xxx you ate it .\n'), ((1175, (40, 45)), '*MOT:\tcome on Brenda you know to finish yours .\n'), ((1180, (-1, 4)), "*SIS:\tI didn't eat this .\n"), ((1201, (27, 33)), "*SIS:\tit's too hot for <my teeth> [>] .\n"), ((1201, (34, 37)), "*SIS:\tit's too hot for <my teeth> [>] .\n"), ((1205, (29, 32)), '*MOT:\t<eat the little piece> [<] .\n'), ((1208, (9, 13)), "*MOT:\tno it's not .\n"), ((1211, (10, 15)), '*CHI:\txxx mommy [>] .\n'), ((1211, (16, 19)), '*CHI:\txxx mommy [>] .\n'), ((1215, (-1, 4)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1215, (40, 44)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1215, (49, 53)), '*MOT:\tput it over here and you eat that rice and corn .\n'), ((1220, (6, 10)), '*MOT:\tmove .\n'), ((1223, (-1, 4)), '*MOT:\there .\n'), ((1226, (-1, 4)), '*SIS:\tI eat this xxx .\n'), ((1226, (17, 20)), '*SIS:\tI eat this xxx .\n'), ((1230, (-1, 4)), "*MOT:\tdon't eat it .\n"), ((1233, (15, 19)), '*MOT:\teat your rice and corn then .\n'), ((1233, (24, 28)), '*MOT:\teat your rice and corn then .\n'), ((1238, (-1, 4)), '*SIS:\t&=humming .\n'), ((1239, (10, 14)), '*SIS:\txxx come on .\n')]
calculating accuracy and recall
correct labels:
set(['salt', 'corn', 'fat', 'soda', 'rice', 'onions'])
predicted labels:
set(['', 'lobsters', 'bury', 'decide', "don't", 'hands', '[!]', '&-um', 'yep', 'chair', 'one>', 'move', 'tables', 'cup', 'tv', '<you', 'eat', 'window', 'tape', 'wat(er)', 'rice', 'someone', 'song', 'food', 'stop', 'gonna', 'it>', 'spoon', '[>]', '<but', 'mom', 'half', 'wings', 'room', 'school', 'mhm', 'meat', 'the>', 'chairs', 'teeth>', 'slide', 'stuff', 'night', "ya'll", 'ten', '(a)head', 'duck', 'yeah', 'see', '&f', 'ew', 'yes', 'drinks', '<it', '(.)', 'sounds]', 'forty', 'eat eat', 'corn', 'green door', 'water', '<and', 'come', 'thirty', 'oh', 'island', 'fish look', '+,', 'soda', 'castle', '<then', 'hm:', 'mommy', 'momma', 'church', 'table', 'lips]', 'boat', 'belt', "you're", 'guess', 'yay', "it's", 'people', 'name', 'now>', 'sound]', 'way', 'mama', 'man', 'tell', 'today', 'fork', 'door', 'lot', "what's", 'xxx', 'park', 'you>', 'baby', "what'd", 'count', 'look', '[=!', 'mm', '[:', 'mo', 'bed', 'while', 'dirty', 'onions>', 'fun', 'heart', 'trip', '[/]', 'book', 'do>', 'okay', 'mess', 'huh', 'drink', 'hand', 'mouth', 'fat', 'nothing', '[<]', 'a>', 'not>', "you'll", 'green', '<mommy', 'bottle', 'teeth', 'clears', 'salt', 'yours', "that's"])
file:HSLLD/HV1/MT//brnmt1.cha
precision: 0.036496350365
recall: 0.833333333333
true positives:['corn', 'fat', 'rice', 'salt', 'soda']
false positives: ['', '&-um', '&f', '(.)', '(a)head', '+,', '<and', '<but', '<it', '<mommy', '<then', '<you', '[!]', '[/]', '[:', '[<]', '[=!', '[>]', 'a>', 'baby', 'bed', 'belt', 'boat', 'book', 'bottle', 'bury', 'castle', 'chair', 'chairs', 'church', 'clears', 'come', 'count', 'cup', 'decide', 'dirty', 'do>', "don't", 'door', 'drink', 'drinks', 'duck', 'eat', 'eat eat', 'ew', 'fish look', 'food', 'fork', 'forty', 'fun', 'gonna', 'green', 'green door', 'guess', 'half', 'hand', 'hands', 'heart', 'hm:', 'huh', 'island', "it's", 'it>', 'lips]', 'lobsters', 'look', 'lot', 'mama', 'man', 'meat', 'mess', 'mhm', 'mm', 'mo', 'mom', 'momma', 'mommy', 'mouth', 'move', 'name', 'night', 'not>', 'nothing', 'now>', 'oh', 'okay', 'one>', 'onions>', 'park', 'people', 'room', 'school', 'see', 'slide', 'someone', 'song', 'sound]', 'sounds]', 'spoon', 'stop', 'stuff', 'table', 'tables', 'tape', 'teeth', 'teeth>', 'tell', 'ten', "that's", 'the>', 'thirty', 'today', 'trip', 'tv', 'wat(er)', 'water', 'way', "what'd", "what's", 'while', 'window', 'wings', 'xxx', "ya'll", 'yay', 'yeah', 'yep', 'yes', "you'll", "you're", 'you>', 'yours']
false negatives: ['onions']
# true pos: 5
# false pos: 132
# false neg: 1
HSLLD/HV1/MT//guymt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: xxx sit down and eat your food .', '*MOT: mm .', "*MOT: okay you'd like your rice ?", '*MOT: eat it all up .', '*MOT: there you go .', "*MOT: what's that ?", '*CHI: oh gotta look for the meat .', '*MOT: you like your meat ?', '*MOT: hm: [x 2] ?', '*MOT: are you eating it all up like a big boy ?', '*CHI: am I gonna be strong ?', "*MOT: yeah you're gonna be strong (.) so eat up all your food .", '*CHI: Popeye eats spinach .', '*MOT: who ?', '*CHI: Popeye .', '*MOT: you like Popeye ?', '*CHI: yeah .', '*MOT: are you gonna be Popeye ?', '*CHI: uhhuh .', '*CHI: is Popeye xxx ?', '*MOT: huh ?', '*CHI: his clothes .', '*MOT: his [/] his spinach ?', '*CHI: yeah .', '*MOT: xxx ?', '*CHI: Fred Krueger loves me .', '*CHI: and he xxx little kids faster .', '*MOT: what did you do in school today ?', '*CHI: hm: (.) <I was eatin(g)> [/] I was eatin(g) my food up .', '*CHI: all of them .', '*CHI: xxx .', '*MOT: did you eat all your lunch ?', '*CHI: yeah .', '*MOT: what did you have for lunch ?', '*CHI: I had lunch (.) and I had 0an orange in my book bag .', '*CHI: Mom xxx my book bag you .', '*CHI: Mom you remember ?', '*CHI: lost my xxx .', '*CHI: can you buy me another one ?', '*CHI: can you buy me another one ?', "*CHI: Mom I'm sorry you have_to go to church .", "*CHI: you won't come back here .", "*CHI: I'm want you here .", '*CHI: I made a bubble !', '*MOT: hello ?', '*MOT: hi [>] !', "*CHI: <I'm> [<] gonna blow it !", '*MOT: okay .', '*CHI: blow it .', '*MOT: what ?', '*CHI: bubble !', '*MOT: xxx .', '*CHI: see ?', '*CHI: pop it !', '*CHI: I wanted to blow it .', '*MOT: xxx .', '*MOT: alright then .', '*CHI: Mommy I eat all my food .', '*MOT: eat it all up .', '*CHI: xxx .', "*MOT: don't play with your food and eat it up Chi .", '*CHI: okay .', '*CHI: mommy I found a ketchup in it .', '*MOT: just eat it that way .', "*CHI: Mommy I'm finished .", "*MOT: no you're not .", '*MOT: finished ?', '*CHI: yeah .', '*MOT: drink your juice .', '*CHI: huh ?', '*MOT: drink your juice .', '*MOT: okay .']
loading solution set
LINE NO ->  13
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  17
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  20
rice
rice rice 147
[('okay', 'IN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('your', 'PRP$'), ('rice', 'NN')]
['rice']
('food -> ', [['rice', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  24
LINE NO ->  27
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  30
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  34
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947291680>)
[('oh', 'UH'), ('got', 'VBD'), ('ta', 'JJ'), ('look', 'NN'), ('for', 'IN'), ('the', 'DT'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  37
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470f3bd8>)
[('you', 'PRP'), ('like', 'IN'), ('your', 'PRP$'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  41
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  45
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  52
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  56
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0})
LINE NO ->  62
spinach
spinach spinach 34
[('popeye', 'NN'), ('eats', 'NNS'), ('spinach', 'VBP')]
['spinach']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  65
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  69
LINE NO ->  72
LINE NO ->  76
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  79
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  83
LINE NO ->  87
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  91
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  95
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  98
spinach
spinach spinach 34
[('his', 'PRP$'), ('his', 'PRP$'), ('spinach', 'NN')]
['spinach']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  102
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  106
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  108
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  111
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  114
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  119
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  123
LINE NO ->  126
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  127
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  131
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  134
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  138
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947124c20>)
[('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('i', 'NN'), ('had', 'VBD'), ('0an', 'CD'), ('orange', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('book', 'NN'), ('bag', 'NN')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  144
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  147
LINE NO ->  151
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  158
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  167
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  171
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  175
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  178
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  181
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  184
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  190
LINE NO ->  193
LINE NO ->  197
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  200
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  205
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  208
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  213
LINE NO ->  217
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  220
LINE NO ->  223
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  225
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  230
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  234
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  238
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  241
LINE NO ->  244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  247
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  251
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  254
juice
juice juice 52
[('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  257
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  261
juice
juice juice 52
[('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  264
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
loading solution set
calculating
set([(21, (27, 31)), (63, (18, 25)), (38, (20, 24)), (35, (28, 32)), (262, (17, 22)), (139, (36, 42)), (99, (18, 25)), (255, (17, 22))])
[((21, (27, 31)), "*MOT:\tokay you'd like your rice ?\n"), ((35, (28, 32)), '*CHI:\toh gotta look for the meat .\n'), ((38, (20, 24)), '*MOT:\tyou like your meat ?\n'), ((63, (18, 25)), '*CHI:\tPopeye eats spinach .\n'), ((99, (18, 25)), '*MOT:\this [/] his spinach ?\n'), ((139, (36, 42)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((255, (17, 22)), '*MOT:\tdrink your juice .\n'), ((262, (17, 22)), '*MOT:\tdrink your juice .\n')]
set([(63, (18, 25)), (14, (10, 13)), (115, (25, 31)), (226, (36, 39)), (152, (-1, 4)), (128, (27, 32)), (139, (12, 17)), (185, (16, 21)), (103, (6, 10)), (239, (23, 26)), (46, (42, 45)), (35, (28, 32)), (262, (17, 22)), (139, (36, 42)), (120, (6, 9)), (120, (31, 34)), (206, (-1, 4)), (258, (6, 9)), (88, (-1, 4)), (152, (14, 17)), (159, (-1, 4)), (57, (11, 17)), (139, (54, 57)), (112, (-1, 4)), (182, (9, 12)), (168, (-1, 4)), (57, (6, 10)), (239, (-1, 4)), (145, (17, 21)), (21, (27, 31)), (163, (38, 44)), (201, (6, 9)), (182, (6, 8)), (248, (-1, 4)), (226, (-1, 4)), (132, (6, 10)), (145, (22, 25)), (96, (10, 17)), (31, (-1, 4)), (92, (-1, 4)), (179, (6, 11)), (46, (-1, 4)), (57, (18, 23)), (99, (18, 25)), (31, (6, 12)), (139, (49, 53)), (172, (-1, 4)), (255, (17, 22)), (28, (-1, 4)), (42, (6, 9)), (38, (20, 24)), (188, (6, 10)), (226, (6, 11)), (57, (57, 61)), (176, (-1, 4)), (245, (9, 15)), (18, (6, 8)), (66, (-1, 4)), (139, (-1, 4)), (252, (6, 10)), (92, (6, 9)), (209, (-1, 4)), (120, (53, 57)), (107, (-1, 4)), (107, (6, 9)), (258, (-1, 4)), (235, (6, 11)), (202, (-1, 4)), (198, (-1, 4)), (226, (27, 31)), (80, (-1, 4)), (231, (6, 10)), (77, (6, 10)), (35, (15, 19)), (212, (6, 9)), (198, (6, 12)), (63, (-1, 4)), (115, (32, 37)), (112, (24, 28)), (202, (6, 9)), (135, (28, 33)), (53, (-1, 4)), (99, (10, 13)), (155, (-1, 4)), (163, (14, 19)), (265, (6, 10)), (127, (6, 9)), (14, (32, 36)), (224, (6, 9)), (185, (22, 26)), (218, (25, 29)), (128, (-1, 4)), (179, (-1, 4)), (109, (-1, 4))])
[((14, (10, 13)), '*MOT:\txxx sit down and eat your food .\n'), ((14, (32, 36)), '*MOT:\txxx sit down and eat your food .\n'), ((18, (6, 8)), '*MOT:\tmm .\n'), ((21, (27, 31)), "*MOT:\tokay you'd like your rice ?\n"), ((28, (-1, 4)), '*MOT:\tthere you go .\n'), ((31, (-1, 4)), "*MOT:\twhat's that ?\n"), ((31, (6, 12)), "*MOT:\twhat's that ?\n"), ((35, (15, 19)), '*CHI:\toh gotta look for the meat .\n'), ((35, (28, 32)), '*CHI:\toh gotta look for the meat .\n'), ((38, (20, 24)), '*MOT:\tyou like your meat ?\n'), ((42, (6, 9)), '*MOT:\thm: [x 2] ?\n'), ((46, (-1, 4)), '*MOT:\tare you eating it all up like a big boy ?\n'), ((46, (42, 45)), '*MOT:\tare you eating it all up like a big boy ?\n'), ((53, (-1, 4)), '*CHI:\tam I gonna be strong ?\n'), ((57, (6, 10)), "*MOT:\tyeah you're gonna be strong (.) so eat up all your food .\n"), ((57, (11, 17)), "*MOT:\tyeah you're gonna be strong (.) so eat up all your food .\n"), ((57, (18, 23)), "*MOT:\tyeah you're gonna be strong (.) so eat up all your food .\n"), ((57, (57, 61)), "*MOT:\tyeah you're gonna be strong (.) so eat up all your food .\n"), ((63, (-1, 4)), '*CHI:\tPopeye eats spinach .\n'), ((63, (18, 25)), '*CHI:\tPopeye eats spinach .\n'), ((66, (-1, 4)), '*MOT:\twho ?\n'), ((77, (6, 10)), '*CHI:\tyeah .\n'), ((80, (-1, 4)), '*MOT:\tare you gonna be Popeye ?\n'), ((88, (-1, 4)), '*CHI:\tis Popeye xxx ?\n'), ((92, (-1, 4)), '*MOT:\thuh ?\n'), ((92, (6, 9)), '*MOT:\thuh ?\n'), ((96, (10, 17)), '*CHI:\this clothes .\n'), ((99, (10, 13)), '*MOT:\this [/] his spinach ?\n'), ((99, (18, 25)), '*MOT:\this [/] his spinach ?\n'), ((103, (6, 10)), '*CHI:\tyeah .\n'), ((107, (-1, 4)), '*MOT:\txxx ?\n'), ((107, (6, 9)), '*MOT:\txxx ?\n'), ((109, (-1, 4)), '*CHI:\tFred Krueger loves me .\n'), ((112, (-1, 4)), '*CHI:\tand he xxx little kids faster .\n'), ((112, (24, 28)), '*CHI:\tand he xxx little kids faster .\n'), ((115, (25, 31)), '*MOT:\twhat did you do in school today ?\n'), ((115, (32, 37)), '*MOT:\twhat did you do in school today ?\n'), ((120, (6, 9)), '*CHI:\thm: (.) <I was eatin(g)> [/] I was eatin(g) my food up .\n'), ((120, (31, 34)), '*CHI:\thm: (.) <I was eatin(g)> [/] I was eatin(g) my food up .\n'), ((120, (53, 57)), '*CHI:\thm: (.) <I was eatin(g)> [/] I was eatin(g) my food up .\n'), ((127, (6, 9)), '*CHI:\txxx .\n'), ((128, (-1, 4)), '*MOT:\tdid you eat all your lunch ?\n'), ((128, (27, 32)), '*MOT:\tdid you eat all your lunch ?\n'), ((132, (6, 10)), '*CHI:\tyeah .\n'), ((135, (28, 33)), '*MOT:\twhat did you have for lunch ?\n'), ((139, (-1, 4)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((139, (12, 17)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((139, (36, 42)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((139, (49, 53)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((139, (54, 57)), '*CHI:\tI had lunch (.) and I had 0an orange in my book bag .\n'), ((145, (17, 21)), '*CHI:\tMom xxx my book bag you .\n'), ((145, (22, 25)), '*CHI:\tMom xxx my book bag you .\n'), ((152, (-1, 4)), '*CHI:\tlost my xxx .\n'), ((152, (14, 17)), '*CHI:\tlost my xxx .\n'), ((155, (-1, 4)), '*CHI:\tcan you buy me another one ?\n'), ((159, (-1, 4)), '*CHI:\tcan you buy me another one ?\n'), ((163, (14, 19)), "*CHI:\tMom I'm sorry you have_to go to church .\n"), ((163, (38, 44)), "*CHI:\tMom I'm sorry you have_to go to church .\n"), ((168, (-1, 4)), "*CHI:\tyou won't come back here .\n"), ((172, (-1, 4)), "*CHI:\tI'm want you here .\n"), ((176, (-1, 4)), '*CHI:\tI made a bubble !\n'), ((179, (-1, 4)), '*MOT:\thello ?\n'), ((179, (6, 11)), '*MOT:\thello ?\n'), ((182, (6, 8)), '*MOT:\thi [>] !\n'), ((182, (9, 12)), '*MOT:\thi [>] !\n'), ((185, (16, 21)), "*CHI:\t<I'm> [<] gonna blow it !\n"), ((185, (22, 26)), "*CHI:\t<I'm> [<] gonna blow it !\n"), ((188, (6, 10)), '*MOT:\tokay .\n'), ((198, (-1, 4)), '*CHI:\tbubble !\n'), ((198, (6, 12)), '*CHI:\tbubble !\n'), ((201, (6, 9)), '*MOT:\txxx .\n'), ((202, (-1, 4)), '*CHI:\tsee ?\n'), ((202, (6, 9)), '*CHI:\tsee ?\n'), ((206, (-1, 4)), '*CHI:\tpop it !\n'), ((209, (-1, 4)), '*CHI:\tI wanted to blow it .\n'), ((212, (6, 9)), '*MOT:\txxx .\n'), ((218, (25, 29)), '*CHI:\tMommy I eat all my food .\n'), ((224, (6, 9)), '*CHI:\txxx .\n'), ((226, (-1, 4)), "*MOT:\tdon't play with your food and eat it up Chi .\n"), ((226, (6, 11)), "*MOT:\tdon't play with your food and eat it up Chi .\n"), ((226, (27, 31)), "*MOT:\tdon't play with your food and eat it up Chi .\n"), ((226, (36, 39)), "*MOT:\tdon't play with your food and eat it up Chi .\n"), ((231, (6, 10)), '*CHI:\tokay .\n'), ((235, (6, 11)), '*CHI:\tmommy I found a ketchup in it .\n'), ((239, (-1, 4)), '*MOT:\tjust eat it that way .\n'), ((239, (23, 26)), '*MOT:\tjust eat it that way .\n'), ((245, (9, 15)), "*MOT:\tno you're not .\n"), ((248, (-1, 4)), '*MOT:\tfinished ?\n'), ((252, (6, 10)), '*CHI:\tyeah .\n'), ((255, (17, 22)), '*MOT:\tdrink your juice .\n'), ((258, (-1, 4)), '*CHI:\thuh ?\n'), ((258, (6, 9)), '*CHI:\thuh ?\n'), ((262, (17, 22)), '*MOT:\tdrink your juice .\n'), ((265, (6, 10)), '*MOT:\tokay .\n')]
calculating accuracy and recall
correct labels:
set(['orange', 'juice', 'rice', 'meat', 'spinach'])
predicted labels:
set(['', 'hm:', "don't", 'mommy', 'yeah', 'juice', 'see', 'church', 'blow', "you're", '[/]', 'sit', 'book', 'way', 'orange', 'sorry', 'rice', 'bubble', 'today', 'okay', 'food', "what's", 'xxx', 'huh', 'gonna', 'lunch', 'hi', 'eat', 'meat', 'boy', 'school', 'kids', 'look', 'mm', 'spinach', 'bag', '[>]', 'hello', 'clothes'])
file:HSLLD/HV1/MT//guymt1.cha
precision: 0.128205128205
recall: 1.0
true positives:['juice', 'meat', 'orange', 'rice', 'spinach']
false positives: ['', '[/]', '[>]', 'bag', 'blow', 'book', 'boy', 'bubble', 'church', 'clothes', "don't", 'eat', 'food', 'gonna', 'hello', 'hi', 'hm:', 'huh', 'kids', 'look', 'lunch', 'mm', 'mommy', 'okay', 'school', 'see', 'sit', 'sorry', 'today', 'way', "what's", 'xxx', 'yeah', "you're"]
false negatives: []
# true pos: 5
# false pos: 34
# false neg: 0
HSLLD/HV1/MT//maymt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: sit down now .', '*SIS: xxx [>] .', '*CHI: xxx [<] this one too .', '*MOT: Chi may I have that please ?', "*CHI: what's that ?", '*MOT: you know what that is .', "*SIS: it's xxx [>] .", '*MOT: <Chi> [<] ?', '*MOT: Chi do you want chicken ?', '*SIS: hot dog .', '*CHI: no [>] .', '*SIS: xxx [<] .', "*SIS: that's not chicken .", '*MOT: yes it is !', '*MOT: it is chicken .', '*MOT: look_it [>] .', '*SIS: <&=babbling > [<] .', '*MOT: look_it .', "*MOT: it's a nice chicken .", "*MOT: that's (.) breaded chicken [>] .", '*SIS: xxx [<] .', '*SIS: breaded chicken ?', '*SIS: hey I like xxx [>] .', '*MOT: <Chi what are you gonna > [<] have for supper ?', '*SIS: mommy I like chicken [>] .', '*CHI: chicken [<] .', '*MOT: and what else ?', '*CHI: and coleslaw .', '*MOT: and what ?', '*CHI: and coleslaw .', '*MOT: no .', "*MOT: no you're gonna have (.) asparagus and you're gonna have <baked xxx> [<] .", "*SIS: xxx [<] no <we don't> [>] like asparagus .", '*MOT: ssh !', '*MOT: alright .', '*MOT: <wait a minute> [>] .', '*SIS: xxx [<] .', '*MOT: shh shh shh !', '*MOT: Chi what are you gonna have ?', '*CHI: xxx .', '*SIS: xxx gonna have macaroni ?', "*MOT: yeah but I'm asking Chi Sis .", '*MOT: Chi what are you gonna have ?', "*CHI: I'm mopping helping mop .", '*MOT: what are you gonna have ?', '*CHI: mop .', '*MOT: look what you did !', '*MOT: put that down please .', "*MOT: (be)cause you're getting all dirty .", '*CHI: me ?', '*MOT: yes .', '*CHI: me ?', '*MOT: now this is hot so you have_to be careful .', '*CHI: nothing can hurt me .', '*CHI: you know what I can do ?', '*MOT: what ?', '*CHI: watch this .', '*CHI: I do very carefully [?] .', "*MOT: alright get up on your knees if you're not gonna use your chair .", '*CHI: I want to get up up on my knees &=whining .', "*MOT: well you're in your little chair (be)cause you're littler than Sis .", '*MOT: here .', '*MOT: can I have that please ?', '*CHI: oh !', "*CHI: I'm caught .", '*MOT: give me that please .', '*CHI: oh oh oh .', "*CHI: <oh I> [//] I'm sorry mommy I'm sorry .", '*MOT: alright are you gonna eat like a nice girl ?', '*CHI: &-um .', '*MOT: huh ?', '*CHI: yes .', "*MOT: and don't spill it please [>] .", "*CHI: hey [<] that's chicken I don't like chicken .", '*MOT: you always liked chicken before .', "*CHI: I don't like chicken .", '*MOT: well you eat a little bit tonight if you want your dessert .', "*CHI: what's that ?", "*MOT: what\xe2\x86\x91 that's asparagus .", '*MOT: you want some ?', '*CHI: no .', '*SIS: mom [>] ?', '*MOT: <eat your> [<] macaroni .', '*SIS: Mommy will you xxx this last macaroni ?', '*MOT: yeah .', '*SIS: xxx ?', '*MOT: yeah .', '*MOT: Chi where did we go\xe2\x86\x91 (.) on vacation [>] ?', '*SIS: <we went> [<] xxx [>] .', '*CHI: beach [<] .', '*SIS: we went to the beach and we went to the motel <and we> [>] +...', '*MOT: <wait a minute> [<] Sis Sis let Chi answer please .', '*MOT: and where did we go to eat ?', '*SIS: we <went to the> [>] +...', '*CHI: xxx [<] no I say it !', '*MOT: alright .', '*MOT: let Chi say it .', '*CHI: I found some xxx !', '*MOT: nope to the restaurant .', '*CHI: to the restaurant .', '*MOT: and what did you have ?', '*CHI: we have xxx .', '*SIS: I can say it too .', '*MOT: well let Chi say it today Sis .', '*MOT: what did we have Chi ?', "*MOT: no don't touch the tape recorder .", '*CHI: <we had> [/] (.) <we had> [/] we had some pizza xxx .', '*MOT: pizza and what else ?', '*CHI: and cookies .', '*SIS: no +/.', '*MOT: yeah .', "*SIS: &n no we [/] we didn't have cookies .", '*MOT: alright wait a minute Sis shh !', '*MOT: Chi <what did you do> [//] what did you put up in the sky at the beach ?', '*SIS: kite [>] !', '*CHI: kite [<] .', '*CHI: kite .', '*CHI: kite .', '*MOT: mhm .', '*CHI: kite (.) kite .', '*MOT: and what kind of a kite did you have ?', '*CHI: &-um I had the pony one .', '*MOT: no Sis had the pony .', '*CHI: me too .', "*SIS: no you <didn't> [>] .", '*MOT: <you had> [<] a happy face .', '*CHI: <I> [/] I had a happy face .', '*SIS: xxx <happy face> [>] .', '*MOT: <Sis Sis> [<] !', '*MOT: shh shh .', '*MOT: and what did you see up in the sky ?', '*SIS: kites !', '*CHI: kite .', '*MOT: no what did we see at night ?', '*CHI: xxx was gone .', '*MOT: did you see the fireworks ?', '*SIS: yeah and we saw [>] the +/.', '*MOT: Chi ?', '*SIS: xxx .', '*MOT: what else did you see Chi ?', '*CHI: fireworks .', '*MOT: yeah what color ?', '*CHI: xxx[>] .', '*SIS: red [<] purple .', '*CHI: purple .', '*SIS: and blue +/.', '*CHI: no I say it &=yelling !', '*CHI: purple .', "*SIS: I don't want her to say it !", '*MOT: listen do you remember when you had your turn with the tape recorder ?', "*MOT: now it's Chi's turn .", '*MOT: what are you eating Chi ?', '*CHI: this .', '*MOT: what is it ?', '*CHI: hot dog .', '*MOT: no .', "*MOT: it's macaroni .", '*CHI: macaroni .', '*CHI: xxx [>] .', '*MOT: <and what else> [<] ?', '*CHI: and chicken .', '*MOT: mhm .', '*CHI: xxx cookie !', "*MOT: no you don't have cookies for supper .", '*CHI: oh yes we do .', '*MOT: what are you gonna have for dessert ?', '*CHI: pudding !', '*MOT: no .', '*CHI: ice cream !', '*MOT: what are we gonna have Saturday ?', '*CHI: cookie !', '*MOT: no .', '*CHI: tape recorder !', '*MOT: Chi be nice !', '*MOT: what are we gonna have Saturday ?', "*MOT: and everybody's gonna come ?", '*CHI: a xxx .', '*MOT: a happy what ?', '*CHI: kite (.) kite .', '*MOT: happy birthday .', '*CHI: mommy xxx .', '*MOT: how old are you gonna be Chi ?', '*CHI: &-uh four !', "*MOT: that's right .", '*MOT: and how old is Sis ?', "*SIS: I'm gonna be five this xxx [>] +/.", "*CHI: <I'm> [<] gonna be four .", "*MOT: yep you're gonna be four and Sis is gonna be five .", '*CHI: yep .', "*MOT: who's coming ?", '*SIS: Auntie Natalie .', '*CHI: <Auntie> [>] Natalie .', '*MOT: yeah [<] .', '*MOT: and who else ?', '*CHI: <Kathy> [>] +/.', '*SIS: xxx [<] .', '*MOT: mhm .', '*SIS: xxx and Kathy .', '*MOT: how about Uncle Joey and Anne Marie ?', '*SIS: hey they can come too xxx they want .', "*MOT: who's coming Chi ?", '*CHI: Kathy and Michelle .', '*MOT: and who else ?', '*CHI: xxx .', '*MOT: who ?', '*CHI: xxx .', '*MOT: (.) what about Uncle Joey ?', '*CHI: Uncle Joey .', '*SIS: no <I> [/] I say that already .', '*MOT: and Anne Marie .', '*CHI: <Anne Marie> [>] .', '*SIS: <look at my hand> [<] .', '*SIS: xxx .', '*MOT: what about Sarah ?', '*CHI: Sarah .', '*SIS: when is Sarah gonna come ?', '*MOT: and Jeff .', '*CHI: Jeff .', '*SIS: and Diane .', '*MOT: mhm .', '*MOT: and who else ?', '*MOT: (.) what are we gonna have at the birthday Chi ?', '*CHI: cake .', '*SIS: xxx .', '*MOT: what are we gonna have at the birthday party Chi ?', '*CHI: cake +/.', '*SIS: mommy\xe2\x86\x91 mom !', '*MOT: shh shh Sis .', '*SIS: where does the music xxx ?', "*MOT: oh I don't know .", '*MOT: and &wh <what are you> [//] &-um Chi .', "*MOT: who's gonna make your cake and Sis's cake ?", '*CHI: and my cake .', '*MOT: yeah .', "*CHI: Sis's cake .", "*MOT: yeah who's gonna make it ?", '*CHI: Chi !', '*CHI: and Sis and [/] and you .', '*MOT: &-um Auntie Valerie .', '*CHI: xxx .', '*SIS: no !', '*SIS: xxx Uncle Joey .', '*CHI: but mind your own business Sis .', "*MOT: that's not nice to say .", '*CHI: no .', "*MOT: you don't tell Sis to mind her own business .", '*CHI: no mind your own business I said .', "*MOT: that's not nice .", "*SIS: that's not .", '*SIS: (.) mom xxx .', "*MOT: no you're gonna eat your supper please .", '*SIS: but I already did !', '*MOT: you want more ?', '*SIS: yeah I want macaroni +/.', '*MOT: you want more macaroni ?', '*SIS: yeah .', '*MOT: alright here .', "*SIS: I don't want any more meat .", "*MOT: <you want> [//] you don't want any more meat ?", '*SIS: no .', "*MOT: Chi you're not eating .", '*MOT: (.) Chi ?', '*CHI: <mind your own business> [>] .', '*MOT: <please eat> [<] .', '*MOT: would you like to go to bed ?', '*CHI: no .', "*MOT: you don't tell Momma to mind her own business .", '*CHI: &=babbles .', '*CHI: bitch !', '*MOT: what ?', '*CHI: I xxx talking xxx give me that !', '*CHI: give it to me &=sings .', '*MOT: &-uh Chi ?', '*CHI: 0 [=! keeps singing] .', '*MOT: over the table please .', '*CHI: xxx .', '*MOT: Debbie !', '*SIS: &=screams .', '*MOT: well <you put your> [//] you bit your finger .', '*SIS: &=cries .', "*MOT: well <you don't> [//] if you use your fork you can't bite your finger can you ?", '*SIS: <I> [/] I xxx bite my finger hard xxx .', "*MOT: well you've gotta careful so you don't bite your finger .", "*MOT: if you use your fork you won't bite your finger .", "*CHI: I'm not biting my food .", "*SIS: I'm not biting my finger .", "*MOT: alright then use your fork then your finger can't get in the way .", '*SIS: oh !', '*MOT: see ?', '*SIS: bitch [?] .', '*MOT: huh ?', '*SIS: bitch [?] .', '*MOT: you saying naughty words ?', '*SIS: no (.) bitch [?] in the cupboard .', '*CHI: xxx .', "*SIS: happy birthday's coming .", '*MOT: mhm .', '*MOT: whose birthday is it ?', '*CHI: mine !', '*MOT: and who else ?', '*CHI: xxx Debbie .', '*MOT: yeah both of you .', '*CHI: and yours !', "*MOT: no my birthday's already gone .", '*SIS: who ?', '*CHI: why ?', '*CHI: why ?', '*MOT: because you only have one birthday a year .', '*MOT: thank god .', '*MOT: what are we gonna have at the party ?', "*CHI: cake and juice and all the things we're gonna have .", '*SIS: what about xxx ?', '*MOT: you want hats and horns ?', '*SIS: where are we gonna find (th)em ?', '*MOT: at the store .', '*MOT: the party store .', '*MOT: what would you like Chi ?', '*SIS: <I> [>] +/.', '*CHI: &-um [<] corn .', '*MOT: corn ?', '*CHI: no horns .', '*MOT: oh horn okay .', '*CHI: and &ea +/.', '*MOT: and hat ?', '*CHI: (.) 0 [=! makes strange noises] .', '*MOT: and what else Chi ?', '*SIS: and I want a balloon .', '*CHI: do we have any balloons there ?', '*MOT: yeah .', '*CHI: &=whispers .', '*SIS: can we fly our kite ?', '*CHI: why ?', '*SIS: why ?', "*MOT: because there's too many kids .", '*MOT: Chi what do want to +/.', '*MOT: Sis put the fork down please .', '*SIS: mommy I +/.', '*MOT: do you want more ?', '*MOT: alright wait until Chi finishes and then you can have your dessert .', '*SIS: no I want my dessert now .', '*MOT: no you have_to wait for Chi to finish and momma .', '*SIS: 0 [=! makes defiant noises] .', "*MOT: go watch cartoons until Chi's finished .", '*MOT: Chi ?', '*CHI: what ?', '*MOT: are you going to school pretty soon ?', '*CHI: yes .', '*MOT: where are you going ?', '*CHI: I goes to kindergarten .', '*SIS: no [>] .', "*MOT: no [<] Debbie's going to kindergarten where are you going ?", "*SIS: she's going to Head Start .", "*SIS: and I'm going +...", '*MOT: where are you going Chi ?', '*CHI: I (.) go (.) to Head Start .', "*MOT: that's right and who's gonna be your teacher ?", '*SIS: Miss <Susan> [>] !', '*CHI: <Miss> [<] Susan .', '*MOT: do you like Miss Susan ?', '*CHI: yep .', '*CHI: could I go with it [?] .', '*MOT: are you gonna be glad to go back with all the kids ?', '*CHI: yes .', "*MOT: who's gonna drive the bus ?", '*SIS: Miss Porter .', '*CHI: Miss Porter [?] .', "*MOT: and who's on the bus ?", '*CHI: kids all the kids !', "*MOT: what's their names ?", '*CHI: teachers .', '*MOT: no .', '*SIS: xxx xxx [>] .', '*CHI: <the kids> [<] .', '*MOT: you be quiet xxx .', "*MOT: what's the kids names ?", '*CHI: kids !', '*MOT: no Dika +...', '*CHI: ++ Dika .', '*MOT: and who else ?', '*CHI: Tinkerbell .', '*MOT: and Bill .', '*CHI: <Bill> [>] .', '*SIS: no [<] Chi not Tinkerbell Tinkerbell xxx Peter Pan .', '*CHI: no (.) I think she better come here .', '*MOT: Tinkerbell is with Peter Pan .', '*CHI: who ?', '*MOT: Tinkerbell .', '*CHI: here comes the xxx yippee !', '*SIS: I xxx .', '*MOT: Sis !', '*MOT: (..) come here .', '*MOT: <did you> [/] did you go to the movies with Auntie ?', '*CHI: yes .', '*MOT: and what did you see ?', '*CHI: &-uh Peter Pan .', '*MOT: Peter Pan ?', '*CHI: and Tinkerbell .', '*MOT: Tinkerbell ?', '*CHI: yep .', '*CHI: and the pirate .', '*MOT: mhm .', '*CHI: no not all the pirates .', '*MOT: what did Peter Pan do ?', '*CHI: xxx he fly high away like that !', '*MOT: he fly away ?', '*CHI: yep .', '*MOT: really ?', '*CHI: xxx .', '*MOT: and what did Tinkerbell do ?', '*CHI: mm fly high away too .', '*MOT: where did she fly ?', '*CHI: up there to the sky .', '*SIS: fly fly !', '*SIS: no .', "*MOT: I said to be quiet didn't I .", '*SIS: mommy I can talk .', '*MOT: no not until I after I shut the recorder off .', '*CHI: Chi what does <Auntie> [/] Auntie Donna have ?', '*CHI: food [>] .', '*SIS: <Tinkerbell> [<] .', '*MOT: how many kitties ?', '*SIS: <Tinkerbell> [>] .', '*CHI: <two kitties> [<] .', "*MOT: what's their names ?", "*SIS: there's Ting +/.", '*CHI: ++ Ting .', '*SIS: ++ and Chelsea .', '*CHI: and Chelsea .', '*SIS: and xxx .', '*MOT: stay in there until I finish .', '*CHI: &=babbling .', "*MOT: what's the kitties' names Chi ?", '*CHI: Chelsea and Kitty .', '*MOT: no Chelsea and [>] Ting .', '*CHI: <Chelsea> [<] .', '*CHI: and Ting .', "*MOT: and who's the other kitty .", '*CHI: Ting .', '*MOT: Quincy .', '*CHI: Quincy .', '*SIS: xxx I have_to get xxx .', '*SIS: can I get one thing ?', '*MOT: what color <is the> [//] are the kitties ?', '*SIS: I know what they are .', '*CHI: black (.) &=laughs .', '*MOT: come on now answer me nice .', '*MOT: what color are the kitties ?', "*CHI: &-uh there's xxx .", '*SIS: nah !', '*CHI: xxx .', '*CHI: &=babbles .', "*CHI: &-uh where's she talking ?", '*MOT: in here [% act=pats recorder] .', '*MOT: in the recorder .', '*CHI: can I hear it ?', "*MOT: after we're through hear it .", '*MOT: Chi !', '*CHI: what ?', "*MOT: what color are Auntie's kitties ?", '*CHI: you know what I <can do> [>] ?', '*SIS: brown [<] .', '*MOT: Chi answer me nice !', "*MOT: what color are Auntie's kitties ?", '*CHI: kitty .', '*MOT: what [/] <what are they> [//] are they black ?', '*CHI: yup .', "*MOT: no they're not .", '*CHI: <not black> [>] .', '*SIS: <I know> [<] what they are !', '*SIS: I know +/.', "*MOT: no I don't want you to answer honey .", '*MOT: now be quiet !', "*MOT: Chi what color are Auntie's kitties ?", '*SIS: &=whines .', '*CHI: &-uh xxx .', "*MOT: they're white .", "*CHI: they're white .", '*MOT: and orange .', '*CHI: and orange .', '*CHI: know what ?', '*CHI: one kitty is orange <and the> [//] and those other two [/] two kitties are [/] are [/] are white !', "*MOT: that's right .", '*CHI: <and orange kitty> [>] .', '*SIS: <xxx white> [<] .', '*CHI: an orange kitty .', '*MOT: Chi do you want dessert ?', '*CHI: yep .', '*MOT: you have_to eat your meat and macaroni .', "*CHI: I'm sorry .", '*SIS: xxx .', "*MOT: don't touch those those are dangerous .", '*CHI: xxx .', "*MOT: don't touch those please .", '*SIS: I was trying to reach .', '*MOT: you want a bite of this ?', '*SIS: what is it ?', '*MOT: onion .', "*SIS: I don't like onions .", '*CHI: I like onions .', '*MOT: do you have <a fork Chi> [>] ?', '*SIS: <hey what is that> [<] ?', '*SIS: what is that there ?', "*MOT: that's meat .", '*MOT: Chi &wh +/.', '*CHI: xxx .', "*MOT: you know what's gonna happen when we comb your hair ?", '*CHI: what ?', "*MOT: it's gonna hurt .", '*CHI: no !', "*MOT: because you're putting food in your hair .", "*CHI: xxx [>] I'm not .", '*SIS: where [<] ?', '*SIS: I want it !', '*MOT: xxx .', "*CHI: there's no macaroni in my hair .", '*SIS: xxx .', '*CHI: &=babbling .', '*CHI: &=sings .', '*MOT: (.) what are you doing ?', '*CHI: I had to xxx .', '*SIS: you know what mommy ?', '*SIS: I xxx .', '*CHI: 0 [=! singing loudly] .', '*MOT: Chi ?', '*CHI: no !', '*MOT: eat your supper please !', '*CHI: <I do xxx> [>] .', '*SIS: xxx [<] .', '*MOT: yes .', '*CHI: now ?', '*MOT: in a few minutes .', '*MOT: come on Chi if you want +/.', '*SIS: xxx .', "*MOT: well I'm sorry you're gonna have_to wait until Chi's finished .", "*CHI: no <you don't> [//] you don't have_to wait for Chi xxx .", '*MOT: Chi come on !', "*MOT: it's almost time for dessert .", '*CHI: xxx .', '*MOT: (..) Chi are you finished ?', '*CHI: yep .', '*MOT: oh !', "*MOT: no you're not .", '*CHI: my my xxx .', '*MOT: come on honey .', "*MOT: what's momma got ?", '*CHI: xxx .', "*MOT: no what's this ?", "*MOT: what's this Chi ?", '*CHI: coffee .', '*MOT: and who drinks coffee ?', '*CHI: you .', '*MOT: yeah but who am I ?', '*CHI: momma .', '*MOT: and only mommas and daddies drink coffee ?', '*SIS: yeah .', '*SIS: not children .', '*CHI: &=sings .', '*MOT: Chi .', "*MOT: you're playing with your food and you're not gonna get your dessert .", "*CHI: I don't want dessert .", "*MOT: you don't want any nice chocolate and strawberry and vanilla ice cream ?", '*CHI: no !', '*MOT: what kind of ice cream do I have ?', '*CHI: chocolate ice cream .', '*MOT: Chi look at momma .', '*MOT: what kind of ice cream do I have ?', '*CHI: strawberry .', '*MOT: yeah and what other kind ?', '*CHI: cookies .', '*CHI: &=laughs .', '*MOT: what other kind of ice cream do I have ?', '*CHI: cookie !', '*MOT: Chi .', '*CHI: &=babbling .', '*MOT: Chi give me the xxx .', '*MOT: does momma have chocolate ice cream ?', '*MOT: Chi ?', '*CHI: <&=babbling > [>] .', "*MOT: <what's the matter don't you feel like talking today> [<] ?", '*CHI: &=sings .', '*MOT: what are you singing ?', '*CHI: <&=sings > [>] .', '*SIS: <&=sings > [<] .', '*MOT: do you want your dessert ?', '*CHI: what ?', '*MOT: do you want your dessert ?', '*CHI: xxx .', '*MOT: huh ?', '*CHI: xxx .', '*MOT: I got some awful nice ice cream .', "*MOT: it's chocolate strawberry and vanilla .", '*SIS: what ?', '*MOT: can you say that ?', '*CHI: chocolate [>] strawberry and xxx .', '*SIS: xxx [<] .', '*MOT: and [///] no vanilla !', '*CHI: vanilla .', '*MOT: and what about the strawberry ?', '*CHI: xxx strawberries are bad !', '*MOT: nope strawberries are good .', "*CHI: no they're bad .", '*MOT: no [>] .', '*SIS: good [<] !', '*CHI: bad [>] .', "*MOT: what [<] did Auntie pick off the bushes over in Elaine's yard ?", '*CHI: xxx .', '*MOT: huh ?', '*CHI: xxx .', '*MOT: blueberries [>] .', '*SIS: strawberries [<] .', "*CHI: blueberries [>] they're blueberries .", '*SIS: blueberries [<] .', '*CHI: blueberries .', '*MOT: blueberries ?', "*CHI: they're blueberries blueberries .", '*MOT: uhhuh .', "*CHI: they're blueberries .", '*MOT: yeah ?', '*CHI: blueberries .', '*MOT: <what did we> [//] what did you eat on the beach ?', '*CHI: ice cream .', '*MOT: yeah and what else ?', '*SIS: no not ice cream !', '*MOT: where did we go ?', "*MOT: Mamma Leone's ?", '*CHI: yeah .', '*MOT: where ?', "*CHI: to <Mamma Leone's> [>] .", '*SIS: <I know xxx> [<] .', '*MOT: no [///] put your hand down and tell momma .', '*MOT: where did you go ?', '*CHI: to xxx .', "*MOT: Chi don't mumble look at me .", '*CHI: me ?', "*CHI: me xxx Mamma Leone's .", '*MOT: Mamma Leone .', '*CHI: Mamma Leone .', '*MOT: alright say it loud .', '*CHI: xxx .', "*MOT: Mamma Leone's .", "*CHI: Mamma Leone's !", '*MOT: okay .', '*MOT: and did you go in the water ?', '*CHI: no !', '*MOT: why ?', "*CHI: I (.) didn't go in the water !", "*MOT: stop that yelling why didn't you go in the water ?", "*CHI: be [//] because I don't like to xxx the waves .", "*MOT: you didn't like the waves ?", '*CHI: no .', '*MOT: those were nice waves .', "*CHI: they're bad waves .", '*MOT: no .', '*CHI: xxx bad waves .', '*MOT: did you play on the the sand ?', '*CHI: no .', '*MOT: where did you play ?', '*CHI: on the sand .', '*MOT: and what did you make ?', '*CHI: cake !', '*MOT: cakes ?', '*CHI: yep !', '*MOT: oh .', '*MOT: and <did we go out> [//] did we have pizza ?', '*CHI: yes .', '*MOT: and what else did we have ?', '*CHI: pizza and powder !', "*MOT: we didn't have powder .", '*CHI: xxx .', '*SIS: can I have dessert ?', '*MOT: you can have your dessert in one minute .', '*MOT: are you gonna have your dessert ?', '*CHI: xxx .', '*MOT: Chi ?', '*MOT: you have_to eat your meat .', '*MOT: eat your chicken .', "*CHI: I don't want it .", '*MOT: come on eat it like a good girl .', '*CHI: mind your own business .', '*MOT: what are you saying ?', '*CHI: mind your own +...', "*MOT: I told you that's not nice .", "*MOT: you don't tell momma to mind her own business .", '*CHI: xxx .', '*MOT: well then it looks like no dessert for you .', '*CHI: xxx for Sis ?', '*SIS: &=whispers .', '*SIS: you know what she said ?', '*MOT: are you finished ?', '*CHI: yep .', '*MOT: alright .', '*SIS: you know what she said ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//maymt1.cha
HSLLD/HV1/MT//mormt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: Chi eat your food quickly Chi here so you can watch tv (.) come on .', '*MOT: xxx [>] .', '*CHI: <I want some> [<] xxx juice .', '*MOT: some juice ?', '*CHI: yeah .', '*MOT: just leave this alone .', '*MOT: okay ?', '*CHI: yeah .', '*MOT: (.) alright .', '*MOT: eat I say eat !', '*MOT: come here Chi !', '*MOT: xxx .', '*ADU: www .', '*CHI: what goes into this ?', '*MOT: huh ?', '*CHI: this .', '*MOT: what xxx .', '*MOT: xxx I gotta go .', '*MOT: come on eat your food xxx !', '*CHI: gimme [: give me] juice !', "*MOT: yeah Gene's [= Angel] gonna give your juice he's gonna [: going to] give you soda .", "*MOT: mom what's this ?", '*MOT: Chi open your mouth !', '*CHI: what ?', "*CHI: Gene's [= Angel] gonna give me juice !", '*CHI: wait !', '*MOT: xxx .', '*MOT: here .', '*MOT: the baby already ate .', "*CHI: xxx Gene's [= Angel] gonna give me juice so stop bother(ing) me .", "*MOT: I'm not bothering you Chi .", '*MOT: just hurry up .', '*CHI: juice Gene [= Angel] !', '*ADU: shut up man just shut up .', '*CHI: gimme [: give me] juice .', "*MOT: there's no more juice come here come here eat come on Chi come on .", '*MOT: do you wanna watch tv watch xxx ?', '*MOT: Chi sit up and eat !', '*MOT: hurry up !', '*CHI: xxx .', '*MOT: see you got bigger .', "*MOT: here Chi xxx bigger you don't wanna get bigger ?", '*MOT: huh ?', "*MOT: don't you wanna get bigger ?", "*CHI: I xxx (.) it's not comin(g) on !", '*MOT: Chi just eat !', "*MOT: and don't pay no mind to that .", '*MOT: come here eat .', "*MOT: no you're not gonna eat chips .", '*MOT: come Chi eat your rice hurry up .', "*MOT: xxx you're a good boy hm: ?", '*MOT: Chi !', '*MOT: (.) xxx (.) .', '*MOT: what ?', "*CHI: I don't like soda .", "*MOT: you don't like soda okay .", '*MOT: open your <mouth eat> [>] your rice .', '*CHI: xxx [<] I like xxx .', '*MOT: come on Chi !', '*MOT: <eat your> [//] open your mouth !', '*MOT: (..) xxx .', "*MOT: you're a good boy oh wow you eat all of it .", '*MOT: (..) Chi (.) !', '*MOT: (..) open your mouth .', '*CHI: mm !', "*MOT: you're big !", '*CHI: mm !', "*MOT: wow you're getting bigger !", '*CHI: look !', "*CHI: I don't like that !", '*MOT: you [/] you like it okay !', "*MOT: you're gonna eat it !", '*MOT: then close your eyes .', '*CHI: no .', '*MOT: hurry up !', "*MOT: that's why you're so skinny .", "*MOT: don't you want to get bigger ?", '*MOT: muscles ?', "*MOT: oh wow look_it you're getting bigger &=gasp !", '*MOT: and tomorrow we going to the park to eat .', '*MOT: did you wanna go to the big park with the pool ?', '*CHI: no .', '*MOT: the big giant pool ?', '*MOT: open your mouth .', '*MOT: Chi turn around !', "*CHI: I don't xxx any !", '*MOT: xxx .', "*CHI: ew that's nasty .", "*MOT: that's not nasty hurry up and eat your food .", '*CHI: xxx .', '*MOT: you like rice come .', '*CHI: nuhhuh .', '*MOT: open your mouth .', '*MOT: <op(en)> [//] open your <your mouth> [>] .', '*CHI: <nuhhuh nuhhuh> [<] nuhhuh .', "*MOT: oh you're a good boy .", '*CHI: 0 [=! indignant grunt] !', '*CHI: 0 [=! another grunt] !', '*CHI: I xxx the nasty .', "*MOT: it's not nasty Chi okay .", '*CHI: xxx nasty .', '*MOT: now turn around close your eyes and open your mouth quickly xxx !', '*MOT: hurry up .', '*CHI: &=whining .', '*ADU: xxx shut up Hedy .', '*MOT: huh ?', '*CHI: see I told you .', '*MOT: told me what ?', '*CHI: Gene [= Angel] say shut up !', '*ADU: shut up xxx !', '*MOT: here Chi .', '*CHI: xxx coming on .', '*MOT: xxx .', '*MOT: Chi eat your food please ?', '*MOT: open your mouth .', '*MOT: you wanna xxx you wanna watch superman ?', '*MOT: the monster movie ?', '*MOT: I have a candy for you .', '*MOT: xxx ice cream you want any ice cream after this ?', '*MOT: wow you gettin(g) bigger !', '*MOT: you go back to school tomorrow (.) okay ?', '*CHI: see you xxx the xxx like this .', '*MOT: xxx .', '*CHI: 0 [=! unintelligible noise] .', '*MOT: open your mouth !', "*MOT: you're so skinny .", "*CHI: xxx I'm gonna tell your mother !", '*MOT: Chi !', '*CHI: &=grunts .', '*MOT: <get over here and eat your food> [>] .', '*CHI: <xxx leave me alone> [<] !', "*MOT: okay I'll leave you alone eat your food come here .", '*MOT: hurry up .', '*MOT: xxx (.) chew your food Chi !', "*MOT: don't you want to eat a candy afterwards ?", '*MOT: mommy brought you candy from the store .', '*CHI: where ?', '*MOT: you have_to eat first .', '*CHI: lemme [: let me] see .', '*MOT: no eat first after you finish eating .', '*CHI: xxx (.) <xxx eat it> [>] .', "*MOT: <I'll give you a candy bar> [<] I bought .", '*MOT: xxx you always say that .', '*CHI: &=grunting .', '*MOT: Chi here I wanna watch T V .', '*CHI: &=grunts .', '*CHI: xxx candy bar .', '*MOT: eat first hurry up !', '*CHI: &-uh I wanna see it .', '*MOT: <after you eat> [//] after you finish eating .', '*MOT: xxx !', '*MOT: Chi +/.', "*CHI: why don't you just xxx ?", '*CHI: xxx ?', '*MOT: Chi just eat your food okay .', "*CHI: xxx and don't tell me to eat .", "*MOT: you're so skinny xxx you can see your skin and bones here .", '*CHI: &=grunts .', "*MOT: wow you're a good [//] almost finished !", '*MOT: two more spoons !', '*MOT: three .', '*CHI: &=grunts !', '*CHI: I xxx !', '*MOT: what ?', "*CHI: I don't like that !", '*MOT: close your eyes and open your mouth .', '*MOT: you wanna be skinny ?', '*MOT: huh ?', '*CHI: no !', '*MOT: you need to have muscles .', '*MOT: you have_to eat (.) okay ?', '*MOT: Chi watch tv .', '*CHI: xxx have muscles .', '*MOT: wow come on Chi !', '*MOT: eat your food now !', '*CHI: &=grunts !', '*MOT: everyday the same thing .', '*CHI: &=grunts .', '*MOT: hurry up hurry up .', "*MOT: don't you wanna watch tv before you go to sleep (.) hm: ?", '*MOT: okay drink some of this .', "*MOT: okay I'm gonna eat the candy all by myself .", "*CHI: no I'm not .", '*MOT: xxx .', "*CHI: no I'm not .", "*MOT: well you know what we'll do with you then .", '*MOT: here Chi .', '*CHI: nuhhuh .', '*MOT: you have_to eat .', '*CHI: nuhhuh .', '*MOT: huh ?', "*MOT: you're a good boy mm .", '*CHI: xxx .', "*MOT: wow you're getting bigger look &=gasps !", '*MOT: open your mouth .', '*CHI: &=whining .', '*MOT: Chi why do you have_to fight with me ?', '*MOT: open your mouth (.) open your mouth .', '*CHI: 0 [=! whining and crying] .', '*MOT: good boy two more .', "*CHI: xxx don't like that !", '*MOT: xxx .', '*MOT: come on Chi .', '*MOT: xxx .', '*CHI: nuhhuh !', '*MOT: mm .', '*CHI: mommy look .', '*MOT: what ?', '*CHI: xxx .', '*MOT: huh ?', "*MOT: xxx put the baby to sleep (.) xxx I'm busy .", '*MOT: we are busy .', '*CHI: huh .', '*MOT: turn around .', '*MOT: turn around let me see .', '*CHI: that hurts .', '*MOT: let me see .', '*MOT: xxx come on .', "*MOT: xxx come here oh you're a good boy (.) .", '*MOT: good boy two more .', "*MOT: you're a good boy huh ?", '*MOT: xxx please .', '*MOT: wow !', "*MOT: you can't be that thirsty Chi .", '*MOT: three more .', '*MOT: xxx .', '*MOT: wow see ?', "*MOT: you're getting bigger !", '*MOT: see look at your muscle let me see your muscle .', '*MOT: wow !', "*CHI: it's skinny .", '*MOT: wow just like superman huh ?', "*CHI: it's comin(g) out !", '*MOT: xxx come here .', "*CHI: wait it's comin(g) out !", '*MOT: just hurry up and eat Chi open your mouth .', '*MOT: xxx !', '*CHI: &=whining .', '*CHI: my muscles comin(g) out !', '*MOT: your muscles are coming out ?', '*CHI: xxx see I told you !', '*CHI: my muscles comin(g) out !', '*MOT: just hurry up and eat .', '*MOT: xxx just skinny xxx look how skinny you are .', '*MOT: (.) lemme [: let me] see .', '*CHI: xxx .', '*MOT: xxx this ?', '*CHI: &=whining .', '*MOT: xxx hurry up come on eat Chi !', '*MOT: chew your food !', '*MOT: xxx be here all day .', '*CHI: &=grunting .', "*CHI: I can't do it (.) .", '*MOT: (..) two more .', '*CHI: &=grunts .', '*MOT: two more .', '*CHI: &=grunts .', '*MOT: okay one more !', "*MOT: you eat this one you're finished .", '*CHI: xxx on my white pants !', '*MOT: Chi listen to me .', '*CHI: 0 [=! whining and grunting] .', "*CHI: (..) I'm finished .", '*MOT: okay one more this is the last one .', '*CHI: &=grunts .', "*MOT: you're a good boy !", "*MOT: you're <finished Chi> [>] .", "*CHI: <I don't want it> [<] !", "*MOT: okay you're a good boy you're finished okay ?"]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//mormt1.cha
HSLLD/HV1/MT//geomt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: what's that ?", '*CHI: pumpkin .', '*MOT: pumpkin ?', '*CHI: yeah .', '*MOT: yeah ?', '*CHI: hm: yuck !', '*MOT: did you make it ?', '*CHI: mm yeah [=? yuck] !', '*MOT: you did a very good job .', '*CHI: so why did you stick the holes in ?', '*MOT: so you could see out of the eyes .', "*CHI: oh I don't wanna see out of the eyes .", '*CHI: &=sighs .', '*MOT: 0 [=! clears throat] .', "*MOT: I'll put it over here so you can play with it after we eat .", '*CHI: why ?', "*MOT: (be)cause you can't eat while you're playing with it .", '*MOT: 0 [=! clears throat] .', '*CHI: (..) www &=noises .', "*MOT: did you have fun over Aunt Julie's this weekend ?", '*CHI: yeah .', '*CHI: (.) is that sausage ?', "*MOT: no that's xxx [//] meatballs .", '*CHI: oh .', '*CHI: (.) mm .', '*CHI: is that meat ?', '*MOT: yup .', "*MOT: yes that's meat .", '*CHI: is this [!] &m meatballs ?', '*MOT: yes .', '*MOT: Grandma made (th)em for you .', '*MOT: (.) mhm .', '*CHI: know what ?', '*MOT: what ?', '*CHI: Grandma [?] can make hamburgers ?', '*CHI: was cooking <what with xxx> [>] .', "*MOT: <why don't you finish chewing your> [<] +/.", "*MOT: why don't you finish chewing your food so I can understand you .", '*CHI: okay .', '*CHI: (..) <when &kim> [/] when &kemid Kimberly was (.) cookin(g) +...', '*CHI: cookin(g) +...', '*CHI: &-um &-um I mean was bakin(g) (.) somebody splashed +...', '*CHI: something splashed [!] at her when she was cook [//] (.) cooking (.) herself .', '*CHI: with [/] with the &t toy [/] toy bakin(g) [=? bacon] .', '*CHI: and somethin(g) splash [!] at her !', '*CHI: and somethin(g) splut@n [!] (.) like this .', '*CHI: www [=! splurt noise] .', '*CHI: somethin(g) did that .', '*CHI: and [/] and it hurt and it all bleed down .', '*MOT: down her face ?', '*CHI: yup .', '*MOT: on the side of her cheek ?', '*CHI: yeah [/] yeah and it got [!] (.) down her throat .', '*MOT: ugh .', '*MOT: where did that happen ?', '*CHI: (.) and it got on her &-um (.) hand [?] .', '*MOT: oh .', "*MOT: that's gross .", '*CHI: an it got on her food .', '*MOT: was she alright ?', '*CHI: mhm .', '*CHI: but I saw that at her home ?', '*CHI: and [/] and I sneaked over her door ?', '*CHI: and [/] and her mother woke up and +...', "*CHI: and in her (.) and [//] and Kimberly's mother said get outta [: out of] here Chi .", "*CHI: <no I'm > [/] no I'm not gettin(g) out of here (be)cause I'm the good Batman .", "*MOT: <that's when> [//] that was during play time at school ?", '*CHI: yup .', '*MOT: mm .', '*CHI: &be because xxx [>] .', '*MOT: who [?] [<] ?', '*CHI: &be because [/] because xxx .', '*CHI: because I was a tiger .', '*CHI: <and and> [//] because I was &ti tiger .', '*MOT: mhm [>] .', '*CHI: with [?] [<] +//.', '*CHI: <yeah yeah yeah> [/] yeah yup .', '*CHI: &a &a (.) and me and &b &bwuh .', '*CHI: and me and Brian [?] .', '*CHI: and [/] and &m &m me [/] me and Brian (.) ate [?] xxx .', '*CHI: was a ti:ger .', '*CHI: and he did the &=imit:tiger .', '*CHI: www [=! tiger noises] .', '*CHI: and they got outta [: out of] the cage .', '*CHI: <and and> [/] <and we> [/] (.) and we chased all the people .', '*MOT: did you catch anyone ?', '*CHI: yup !', '*CHI: <and and &w and> [/] (.) and we ate [!] them .', '*CHI: and we ate all the people .', "*MOT: oh I don't like people .", "*MOT: I don't think they taste good .", '*CHI: because it makes us sick ?', '*MOT: it would make me [!] sick .', '*CHI: (.) does it make me sick ?', '*CHI: I [//] (.) &-um [>] .', '*MOT: ugh [<] .', '*MOT: xxx [>] my hands .', '*CHI: xxx [<] .', '*CHI: www &=noise .', "*MOT: I don't know .", '*MOT: +^ does it make you sick ?', "*CHI: +^ <I'm (.) I'm> [/] I'm gonna stick to your hands .", '*MOT: ew !', '*CHI: eee !', '*MOT: what like a tiger ?', "*MOT: what're you a tiger ?", '*MOT: ew !', "*MOT: <don't do that> [>] !", '*CHI: &=laughs [<] .', "*MOT: that's &=laughs yucky .", '*CHI: &=laughs .', '*MOT: eat your food .', '*MOT: sit down .', '*MOT: Chi sit (.) please .', "*MOT: I don't want you doin(g) that .", "*MOT: +^ that's gross [>] .", '*CHI: &=laughs [<] .', '*MOT: ew !', '*MOT: sit down .', '*MOT: come on .', '*MOT: careful .', "*MOT: you're not a tiger now .", '*CHI: (.) &=laughs .', '*MOT: take a bite .', "*MOT: you're so hungry .", '*MOT: take a bite .', '*CHI: &=laughs .', '*CHI: I asked for that ?', '*MOT: no .', '*MOT: &=giggles .', '*CHI: &=grunts .', '*CHI: (.) hm: .', '*CHI: I ask for that ?', '*MOT: for your supper ?', '*MOT: no .', '*CHI: hm: [>] .', '*MOT: <I just> [<] gave it to you .', '*CHI: 0 .', '*MOT: Chi .', "*MOT: you're not playing with that now .", '*MOT: play that after you finish supper .', '*MOT: okay ?', '*MOT: Chi I mean it .', '*MOT: sit down and eat first .', '*CHI: 0 .', '*CHI: &m &m &m Mama play miano [: piano] [?] .', '*CHI: (.) ah huh ?', '*MOT: the funny mask [?] ?', '*CHI: &i is [/] is it a sad (.) mask ?', '*MOT: &-uh (.) kind of yeah .', '*CHI: why [?] is a sad mask ?', "*MOT: I don't know it's just sad .", '*MOT: <she must> [>] be feeling pretty sad .', '*CHI: &=gulps [<] .', '*CHI: oh why is (.) she (.) sad ?', "*MOT: I dunno [: don't know] why do you think she's sad ?", '*CHI: because she misses (.) her baby ?', '*MOT: she does .', '*CHI: why ?', "*MOT: what's her baby's name ?", '*CHI: does (.) xxx baby needs his name [?] ?', '*CHI: he be .', "*MOT: her baby's name is Stevie ?", '*CHI: no tv [?] .', '*MOT: tv ?', '*MOT: oh .', '*MOT: sit down (.) in the chair please .', "*MOT: don't (.) tip in it .", "*MOT: it's gonna fall .", '*CHI: huh ?', "*MOT: don't tip it .", "*MOT: +^ it's gonna fall .", '*CHI: why ?', '*MOT: because it will .', '*CHI: because it will it [//] because it will it gets (.) boom !', '*MOT: right .', '*CHI: and I will (.) crack my head open ?', '*MOT: you could .', '*CHI: <and there will> [//] and I will bleed ?', '*MOT: it could happen .', '*CHI: <and and> [/] and I will bleed ?', '*CHI: and I will bleed all over the &fl place ?', '*MOT: possibly .', "*CHI: because [/] because to there's a blood in there ?", "*MOT: yeah there's blood inside you .", '*CHI: why ?', "*MOT: because (.) that's like your +...", '*MOT: your what +...', '*MOT: fuel [?] .', '*CHI: mm .', "*MOT: if you didn't have any blood inside you you wouldn't be alive .", '*CHI: but [/] but we do ?', '*MOT: mhm .', '*CHI: (.) do you wanna (.) see (.) these &-um do the xxx ?', '*MOT: Chi (.) sit down please .', '*MOT: do you like the music ?', '*CHI: here let me do this .', '*CHI: +^ &n &n xxx .', '*MOT: what was that ?', '*CHI: it was &n &n xxx .', '*MOT: oh .', '*CHI: www .', '*MOT: sit up please .', '*CHI: 0 [=! laughs wildly] .', '*MOT: Chi sit up .', '*CHI: &=grunts .', '*MOT: Chi .', '*MOT: sit up please your feet .', '*CHI: &=sigh .', '*MOT: one [>] +...', '*CHI: yuck [<] .', '*MOT: two +...', '*CHI: oh +...', '*MOT: okay .', '*MOT: take another bite .', '*CHI: num num xxx .', '*CHI: www .', '*CHI: mm !', '*MOT: no .', "*MOT: you're not a monster when you're eating .", '*MOT: sit down please .', '*CHI: &=laughs .', '*MOT: sit .', '*CHI: sit [?] .', '*CHI: &=giggles .', '*CHI: Mama hug !', "*MOT: okay I'll give you a hug but then you have_to sit down and eat .", '*CHI: 0 [=! choking cough] [>] .', '*MOT: careful [<] .', '*MOT: careful &=giggles .', '*CHI: &=coughs .', '*MOT: you alright ?', '*CHI: &=coughs .', "*MOT: you can't hug that hard Chi .", "*MOT: you'll choke .", '*MOT: okay now sit down .', '*CHI: can you help me ?', "*MOT: yes I can if you're sitting in your chair .", '*MOT: not if you keep getting up .', '*CHI: help me still .', '*MOT: I will !', "*MOT: turn around you gotta finish what [//] chewing what's in your mouth .", '*CHI: 0 [=! frustrated noise] .', "*MOT: (.) and don't say help me still you say help me please .", '*CHI: &n no [/] no help &m +//.', '*CHI: help me still .', '*MOT: okay .', "*CHI: xxx <I don't &wa> [//] I <wanna put> [>] .", '*MOT: <say please@q> [<] .', '*CHI: please can you help me still please ?', '*MOT: yes I can .', "*CHI: I'm gonna sit on +//.", "*CHI: I'm gonna sit on your [/] your lap and I'm bringing my food over here .", '*MOT: no .', '*CHI: why ?', "*MOT: you're getting too big to sit on my lap .", '*CHI: why ?', "*MOT: because you're a big boy now .", '*MOT: +^ you can sit in the chair .', '*CHI: (..) I want the meatball .', '*MOT: okay .', '*MOT: do you remember what the wolf ate ?', "*MOT: I'll get that later .", "*MOT: +^ don't worry .", '*CHI: what ?', '*MOT: do you remember what the wolf ate ?', '*CHI: what ?', '*MOT: what did the wolf eat ?', '*CHI: a duck .', '*CHI: why did the wolf <eat a &d> [>] +/.', '*MOT: <did he take> [<] a little [!] bite of the duck ?', "*CHI: (.) <why didn't he> [//] why did he ate [!] her ?", '*CHI: why ?', '*MOT: why did he eat her ?', '*MOT: well why are you eating your supper ?', '*CHI: &n no why +//.', '*MOT: <(be)cause> [<] he was hungry .', '*CHI: no why [!] did the wolf (.) &-um twist [?] her ?', '*CHI: and put pepper on her ?', '*CHI: <and (.) and> [/] and salt on her ?', '*MOT: &=giggles .', '*CHI: &a and [/] and he ate [!] her why ?', '*MOT: I think he must have been hungry .', '*CHI: but he +/.', '*MOT: what do you think ?', '*CHI: was he hungry ?', '*MOT: I think so .', '*MOT: what do you think ?', '*CHI: &w was he ?', '*MOT: probably .', '*MOT: do you think he was hungry ?', '*CHI: why ?', '*MOT: do you ?', '*CHI: yeah .', '*MOT: yeah me too .', '*CHI: mm .', '*MOT: <you had better be hungry to eat a whole> [>] duck huh ?', '*CHI: <I [/] (.) I> [<] +/.', '*CHI: &mo Mommy I have_to go to the bath+room .', '*MOT: you have_to go to the bath+room ?', '*MOT: okay .', '*MOT: finish your food .', '*CHI: xxx ?', '*MOT: what ?', "*CHI: I'm gonna do this .", '*MOT: 0 [=! clear throat] .', '*MOT: okay sit down finish eating .', "*CHI: I'm gonna do this .", '*CHI: whap !', "*CHI: and he's gonna fall [/] fall right (..) off his &-um airplane .", "*CHI: because [/] because Anthony's the bad because he shoots [!] people .", '*CHI: because he got (.) a gun .', '*MOT: he has a gun ?', '*CHI: yeah yeah .', '*CHI: Anthony gots@n a gun .', '*MOT: Anthony in kindergarten ?', '*CHI: yeah gots@n a gun .', '*MOT: you should tell his teacher .', "*MOT: hope it's not a real one .", '*CHI: it is [!] a real one .', '*MOT: uhoh !', '*CHI: because [/] <because he [!]> [/] because he came to my house and shoot me last week .', "*MOT: no he didn't &=laughs .", '*CHI: yes he did !', "*MOT: your house is right here and (.) Anthony didn't come here and shoot you (..) last week .", '*CHI: uhhuh .', "*MOT: no he didn't .", '*CHI: huh .', "*MOT: I don't believe you .", '*CHI: <he was> [>] sneaking like this .', '*MOT: hm: [<] .', '*MOT: oh xxx .', '*CHI: he [/] he was sneakin(g) .', '*CHI: <&a and he (.) and> [/] (.) and he knocked on a door .', '*CHI: <&an and I &o (.) and I &op> [/] and I opened it .', '*CHI: <and he all> [//] and he shoot [!] me .', '*MOT: are you sure ?', '*CHI: yeah yeah and bullets got in my nose .', '*MOT: ugh !', '*CHI: and I took (th)em out and put (th)em in his brother .', '*CHI: and he put (.) somethin(g) <in my> [/] in my nose .', '*CHI: a bullet .', '*CHI: again <and I> [/] and I sticked@n it &i in Anthony .', '*CHI: and I grabbed [!] his gun away from him .', '*CHI: <and I> [/] and I shoot [!] him (.) like this .', '*CHI: www [=! shooting noises] .', "*CHI: and the bullets didn't go in my nose .", '*CHI: &o or all .', '*CHI: and past [?] my body .', '*MOT: oh gee .', "*MOT: that's a nice story .", '*MOT: &=laughs .', "*MOT: well Anthony's not allowed to come in our building any more .", '*MOT: &=giggles .', '*CHI: no .', '*CHI: no [>] .', "*MOT: (be)cause [<] I don't like guns .", '*MOT: right ?', '*CHI: right .', '*MOT: yeah .', '*CHI: +^ xxx <because I just already shoot shoot> [//] <because (.) because> [/] because I telled@n Anthony feel my muscles .', '*MOT: and did he ?', '*CHI: yup [!] and he feeled@n my muscles .', '*CHI: <and they feel arm> [//] and [/] &a and they feel my muscles !', '*CHI: and I was stronger !', '*MOT: and [?] you scare him ?', '*MOT: did you [>] scare him with your big muscles ?', '*CHI: he [?] [<] +/.', '*CHI: yeah [/] yeah I did this .', '*CHI: yeah yeah .', '*CHI: +^ and I put (.) my &-um +//.', '*CHI: &-um &-um my Frankenstein on .', '*CHI: <and he> [//] (.) <and &a and I (.) and and> [/] (.) and I grow [//] grew up and grew up and grew up !', '*CHI: <&a &a and I (.) &a &a and I was> [//] (.) and [/] (.) and [!] I xxx .', '*CHI: and [/] and I was still grew up !', '*MOT: oh yeah .', '*CHI: &y yeah yeah .', '*CHI: yeah <and I &g> [/] and I got my Frankenstein +...', '*MOT: mhm [>] .', '*CHI: ++ egg [<] [?] .', '*CHI: yeah because (.) when I was bigger .', '*CHI: yeah [/] yeah <because because> [/] because Anthony shoot me !', '*MOT: he shot you ?', '*CHI: yeah !', '*MOT: in the nose !', '*CHI: no right in the head !', '*MOT: oh gosh .', '*CHI: with his knife and I +...', '*CHI: <and and and and and> [/] and I got my rope !', '*CHI: and [/] and know what I did ?', '*MOT: what did you do ?', '*CHI: and I did this www &=noise .', '*CHI: crack !', '*CHI: &a &a and I brought them !', '*CHI: and I drag [?] them out (.) around the tree .', '*MOT: oh thank goodness .', "*MOT: now he can't hurt anyone else .", '*CHI: <naw naw> [//] no because <they just (.) over> [//] they cut [!] all his teeth off .', "*MOT: oh Chi that's awful .", '*MOT: here take another bite .', '*CHI: and I cut his (.) eyes off and then <his lips off> [>] .', "*MOT: <oh don't do that> [<] .", "*MOT: no that's gross .", "*MOT: I don't like that .", '*MOT: ich [: ick] .', '*CHI: and I ate it !', '*MOT: oh Chi !', "*CHI: but I didn't eat it but the wolf ate it .", '*MOT: &=giggles .', "*MOT: that wolf will eat anything willn't he .", '*CHI: but the wolf eat paper .', '*MOT: (.) what happens in Peter and the Wolf ?', '*CHI: huh ?', '*MOT: what happened to Peter and the Wolf ?', '*MOT: what did the wolf eat in that ?', '*MOT: in that story ?', '*CHI: &-um Peter .', '*MOT: hm: ?', '*MOT: yeah he tried [!] to eat Peter huh ?', '*MOT: did he though ?', '*MOT: did he ever get Peter ?', '*CHI: did he eat him ?', '*MOT: yeah .', '*MOT: did he ?', '*CHI: what ?', '*MOT: (.) what did he eat ?', '*CHI: he ate the duck alive .', '*MOT: alive ?', '*MOT: sit down please .', '*CHI: mm .', '*MOT: sit down please .', '*CHI: www &=noises .', '*MOT: Chi !', "*MOT: you don't stand up in the chair .", '*MOT: +^ you can fall .', '*MOT: see you have_to sit the proper way .', '*MOT: put your feet down please .', '*MOT: okay ?', '*MOT: (be)cause otherwise you can fall and hurt yourself .', '*MOT: +^ Chi sit down .', '*CHI: www [=! noises and laughing] .', '*CHI: &=laughs [>] .', "*MOT: <we're not playing we're eating> [<] .", '*MOT: sit down please and finish eating okay ?', '*CHI: www [=! noises and giggling] .', '*MOT: are you gonna listen ?', '*CHI: www &=noises .', '*MOT: Chi .', "*MOT: I'm serious .", '*CHI: www &=noises .', '*CHI: (..) I put my xxx in there .', '*MOT: mhm .', '*MOT: (.) very good .', '*CHI: mm .', '*CHI: (.) I like you .', '*MOT: you like me ?', '*CHI: yeah [>] .', '*MOT: well [<] [?] I like you too .', '*CHI: I love [?] you .', '*MOT: I love you .', '*CHI: xxx .', '*CHI: num num num .', '*CHI: hey [?] !', '*MOT: (.) do you remember seeing all the instruments ?', '*CHI: yup .', '*MOT: mhm .', '*CHI: &y yep .', '*CHI: yeah .', '*CHI: yeah but (..) did the trombone do this ?', '*CHI: &=imit:trombone .', '*CHI: <did it> [/] did it do that ?', '*MOT: it sure did .', "*MOT: that's just what they did .", '*MOT: <they did> [>] it twice right ?', '*CHI: mhm [<] .', '*CHI: xxx [>] .', '*MOT: <they do> [<] that same thing twice (.) right ?', '*CHI: &a and they did this &=imit:trombone .', '*CHI: and [/] and that +//.', '*MOT: &=sings .', '*CHI: and they did this &=imit:brass .', '*CHI: and they did this &=sings .', '*CHI: &=sings .', "*MOT: yeah that's [/] that's what they did alright www &=giggles .", '*CHI: why ?', '*MOT: &=coughs .', '*CHI: why Mama ?', "*MOT: (be)cause that's the way the music went .", '*CHI: oh .', '*MOT: you like that part huh ?', '*CHI: yeah .', '*CHI: I like that part .', '*MOT: trombones [//] the trombones do a little part .', '*MOT: and the trumpets go &=imit:trumpet .', '*MOT: that part .', '*MOT: the high part .', '*MOT: the trombones go &=imit:trombone .', '*MOT: and the trumpets go &=imit:trumpet .', '*MOT: right ?', '*CHI: why ?', "*MOT: (be)cause that's [//] they each have their own parts to play .", "*MOT: and that's the part they do .", '*CHI: but why +/.', '*MOT: what part is that ?', "*MOT: what's happening in that part ?", '*MOT: what happened ?', '*MOT: with Peter and (.) the wolf at that point ?', '*MOT: xxx [>] in the +/.', '*CHI: &-um [<] .', '*MOT: what happened ?', '*CHI: &-um [/] &-um the wolf ate the duck .', '*MOT: were the hunters shootin(g) at that point ?', '*MOT: were they shooting at the +...', '*CHI: ++ wolf [>] ?', '*MOT: <and they> [<] went &=sings .', '*MOT: is that when the hunters were trying to shoot at the wolf ?', '*CHI: yeah .', '*MOT: you <remember that part> [>] ?', '*CHI: <yeah they was> [<] doin(g) this .', '*CHI: &y yeah [>] .', '*MOT: <stay in> [<] xxx .', '*CHI: yeah they was doin(g) this .', '*CHI: yeah they were [?] do this (.) www !', '*CHI: and [/] and they got +//.', '*CHI: and [/] and they runned@n and they got [!] the wolf !', '*CHI: <and they> [/] and they took [!] him <to to> [/] to the zoo right ?', '*MOT: did they ?', '*CHI: mhm .', '*MOT: they put him in the zoo ?', '*CHI: uhhuh .', '*MOT: and then what happened ?', '*CHI: (.) and then he stayed in there .', '*MOT: oh .', '*MOT: (.) <who did Peter> [/] who did Peter live with ?', '*CHI: he [/] he live in a cage .', '*MOT: Peter ?', '*MOT: the boy ?', '*CHI: &n &n (.) no because when the wolf come out of the forest (.) &a and you shoot [!] the wolf .', '*CHI: and [/] and you shoot the wolf .', '*CHI: <and you take> [//] &a (.) you put the wolf in a zoo !', '*MOT: oh .', '*MOT: but where does Peter live ?', '*CHI: <&-um &pe Peter &l Peter &P Peter> [//] (.) he [//] (.) <Peter Peter live live &-um (.) &-um &-um &i &i in &p> [/] Peter live &i &i in the xxx !', "*CHI: <he was> [//] he didn't said [/] said that but that was a mistake [?] .", '*CHI: &Pete &Pete Peter .', '*CHI: Peter .', '*CHI: <Peter live> [/] Peter l:ive in a xxx .', "*MOT: I don't think so .", '*CHI: he does .', '*MOT: did he live with his grandfather ?', "*CHI: where's [=! sing-song] the grandfather [: grandfather] ?", '*MOT: he was in the house .', '*MOT: remember and he told Peter to (.) watch [/] watch out for the wolf ?', '*CHI: why ?', '*MOT: because the wolf could get him !', '*MOT: and eat him up .', '*CHI: <and [/] and &h> [//] and [/] and eat him up ?', '*MOT: mhm .', '*CHI: and [/] and what <does it> [//] did his grandfather say to him ?', '*MOT: he told him (.) to stay away from the woods .', '*MOT: (be)cause the wolf [!] could come close and he could (.) bite him !', '*MOT: <and he> [/] and he told him +//.', '*MOT: 0 [=! clears throat] .', "*MOT: he told him to stay inside the gates didn't he ?", '*CHI: why [?] .', '*MOT: and not to leave the yard .', '*CHI: why ?', '*MOT: +^ and go down by the meadow .', '*MOT: (be)cause then the wolf could get him .', '*CHI: xxx .', '*MOT: remember the man who acted out all the parts ?', '*CHI: huh ?', '*MOT: remember the mime ?', '*CHI: yeah .', '*MOT: and he did all the parts .', '*CHI: huh .', '*MOT: <you did> [//] did you like him ?', "*CHI: yeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .", '*MOT: when you were in the audience ?', '*MOT: when he came down the audience right ?', '*CHI: right .', "*CHI: because he didn't shake my hand .", "*CHI: (be)cause he didn't come up the hill and shake my hand .", '*MOT: mhm that made you sad huh ?', '*MOT: but then what did you do ?', '*CHI: then I shake his hand .', '*MOT: when ?', '*CHI: when he was talking .', '*MOT: yeah afterwards huh ?', "*CHI: yeah [//] <why he's> [>] [//] why he didn't (.) do this www &=noise .", '*MOT: xxx [<] .', "*CHI: why he didn't do that (.) to me ?", '*MOT: did you think he was gonna do that to you &=laughs ?', '*CHI: no .', '*MOT: he was nice .', '*MOT: he was a nice man right ?', '*MOT: (be)cause you went up to him and you asked him if he would shake your hand ?', '*MOT: and he did .', '*CHI: yeah .', '*MOT: www [=! clears throat] there you go .', "*MOT: why don't you (.) get the food in there first ?", "*MOT: (..) can you remember everybody's name that you saw this weekend ?", "*MOT: do you remember all your cousins's name ?", '*MOT: names ?', '*CHI: mhm .', '*CHI: uhuh .', '*MOT: its xxx a lot of people huh ?', "*MOT: that you don't get to see that often .", '*CHI: huh ?', "*MOT: you saw a lot of people you don't (.) usually get to see .", '*MOT: huh ?', '*CHI: hm: [?] .', '*MOT: www [=! clears throat] who were you playin(g) with outside in the yard ?', '*CHI: &-um [/] &-um one of my friends .', '*MOT: or your cousins ?', '*MOT: who ?', '*MOT: 0 [=! clears throat] .', "*CHI: I [/] I don't <know (.) know> [/] know them yet .", "*MOT: what do you mean you don't know them ?", '*MOT: you know them .', "*MOT: there's Ste:ven .", '*CHI: xxx .', '*MOT: Ste:ven and who else ?', '*CHI: mm .', '*MOT: put your legs down please .', '*CHI: &=sighs .', '*MOT: who else ?', '*CHI: (.) www .', '*MOT: David .', '*CHI: David .', '*MOT: and Beth .', '*CHI: and Bethany .', '*MOT: and +...', '*CHI: (.) xxx .', '*MOT: Danny [=? Dean] .', '*CHI: and Danny .', '*MOT: and (..) little +...', '*CHI: what [?] .', '*MOT: little Paul .', '*CHI: and little Paul .', "*MOT: and what was the baby's name ?", '*CHI: &-um (.) Jason [?] .', '*MOT: nope (.) Mark .', '*CHI: Mark .', '*MOT: and little Jennifer and little +...', '*MOT: who ?', '*CHI: +^ Mark .', '*MOT: her [/] her little brother ?', '*CHI: Mark [=? what] .', '*MOT: Jennifer and little (.) Kenny ?', '*CHI: and Kenny .', '*MOT: yeah .', '*MOT: xxx .', '*CHI: but why did Kenny do the www [=! loud noise] .', '*MOT: oh because he was in a bad mood .', '*MOT: he was tired .', '*CHI: oh [?] .', "*CHI: well (.) why was [=? wasn't] he in a bad (.) mood ?", '*MOT: (be)cause he was cranky .', '*CHI: (be)cause he was cranky ?', '*MOT: he was tired .', '*CHI: yeah but why does he keep doing this .', '*CHI: www [=! series of yelps] .', '*CHI: xxx [//] why did he (.) keep doing that ?', '*MOT: mostly (be)cause he wanted more brownies .', '*MOT: that his sister had .', '*CHI: xxx .', '*MOT: 0 [=! clears throat] .', '*CHI: does that +//.', '*MOT: mhm .', '*CHI: why ?', '*CHI: why ?', '*MOT: (be)cause he likes junk food .', '*CHI: because Kenny saw the cupcakes (.) and he dropped a cookie ?', '*CHI: <he yeah &ha> [//] uhhuh .', '*CHI: he saw [?] the cupcake and he dropped a cookie .', "*MOT: why'd he drop the cookie ?", '*CHI: <when he> [/] when he saw the cupcakes ?', '*MOT: oh because he decided he wanted to have a cupcake instead ?', '*MOT: oh .', '*MOT: what did you do ?', '*MOT: did you play Indians ?', '*CHI: hm: .', "*MOT: you didn't play ?", '*MOT: but everybody else did .', "*CHI: but I didn't play .", '*MOT: how come ?', '*CHI: (be)cause they xxx .', '*MOT: did you [//] what did Aunt Julie make special (.) for you guys xxx ?', '*CHI: a hit [!] thing .', '*MOT: pinata .', '*CHI: yeah .', '*MOT: and what did you do ?', '*MOT: what [/] what was the pinata ?', '*MOT: what did you do to it ?', '*CHI: and I smacked [!] the birdie !', '*MOT: yeah .', '*CHI: yeah real hard like this .', '*CHI: smack !', '*CHI: and it goed@n way up to [/] to the sky .', '*MOT: mhm .', '*CHI: and [/] and the and they dropped all [/] all the candy .', '*CHI: and I got some gum .', '*CHI: and I got some more [!] gum .', '*CHI: <I [/] I get> [//] I got some too .', '*CHI: I got some (.) two gum .', '*MOT: you did ?', '*MOT: you got two gums and anything else ?', '*CHI: hm: .', '*MOT: did other kids play too ?', '*MOT: who else played ?', '*CHI: my cousin .', '*MOT: who ?', '*CHI: Richard and Nicholas .', '*MOT: Nicholas played too .', '*CHI: www [=! loud noise] .', "*CHI: don't laugh at me .", '*MOT: (.) ow .', "*CHI: then don't laugh at me .", '*MOT: &=laughs .', "*MOT: but you're funny .", '*MOT: you funny little kid !', '*MOT: (..) did you dry [//] run [?] your papers today ?', '*MOT: (.) what are you doin(g) ?', "*CHI: I'm twisting your arm .", '*MOT: why &=giggles .', '*CHI: yeah !', '*MOT: gee thanks that feels much better now .', '*CHI: www [=! loud noise] .', '*MOT: you almost done ?', '*MOT: finish eating Chi .', '*CHI: no .', '*MOT: (..) did you climb up the tree ?', "*MOT: that was a big tree wasn't it ?", "*CHI: &-um I couldn't climb up there xxx .", "*MOT: you couldn't ?", '*MOT: who did ?', '*CHI: but [/] but I could .', '*CHI: and beside that .', '*CHI: I [/] I left xxx .', '*CHI: and xxx climbed a way high .', '*MOT: you did ?', '*CHI: yep .', '*MOT: with who ?', '*CHI: <to the> [/] to the clouds .', '*MOT: to the clouds ?', '*MOT: oh_my_goodness .', "*MOT: and you didn't fall ?", '*CHI: hm: .', "*MOT: that's good .", '*CHI: I hold on .', '*CHI: <I I> [/] I stand up .', '*CHI: I stand up and I hold on like this .', "*CHI: <and [/] and &-uh> [//] and a pretend turtle couldn't get me .", '*MOT: you stood up ?', "*MOT: and you held on like that and the turtle couldn't get you ?", '*CHI: hm: .', '*MOT: oh .', '*MOT: where was the turtle ?', '*CHI: he [/] he was way down to the ground .', "*MOT: oh I was gonna say I didn't think turtles could (.) climb the trees .", '*CHI: but they could .', '*MOT: they can ?', '*MOT: pretend turtles ?', '*CHI: yup those are pretend turtles .', "*MOT: oh okay (be)cause real turtles can't climb trees .", '*CHI: why ?', "*MOT: (be)cause they don't have (.) the arms and the legs and the fingers they need to climb .", '*MOT: they can swim .', '*CHI: why ?', '*MOT: they can swim very well .', '*MOT: why ?', "*MOT: because that's the way they're made .", '*CHI: &on only fake turtles can climb up the tree ?', '*MOT: sure .', '*MOT: fake turtles can do whatever you want them to do .', '*MOT: right ?', "*MOT: they're pretend .", '*CHI: &ma &=loud .', '*CHI: Mama I wanna go get (.) some &l nice &tail turtles (.) &wh when we wake up .', '*MOT: where are we gonna put them ?', '*CHI: &n no I wanna get ?', '*CHI: <a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !', '*MOT: oh toys .', '*CHI: yeah nice turtle (.) things [//] toys .', '*MOT: okay .', '*CHI: can I ?', '*MOT: you know where there are any ?', '*CHI: huh ?', '*MOT: do you know where they are ?', '*CHI: where ?', "*MOT: I dunno [: don't know] .", '*CHI: think (.) they at (.) xxx World ?', '*MOT: xxx World ?', '*CHI: &y &ye yeah that because (.) &th they in the poo+poo .', "*MOT: well I don't want any turtles like that .", '*CHI: (.) and the turtle [/] turtle is a bum+bum .', "*MOT: (..) how's your baby Stacie ?", '*CHI: Mama I look at my sneaker .', '*MOT: what ?', '*MOT: uhoh .', '*MOT: you stepped on something already ?', '*MOT: in brand+new sneakers ?', '*CHI: my_goodness [?] .', '*MOT: alright .', "*MOT: I'll get it .", '*CHI: sneakers .', '*CHI: what is that ?', '*MOT: a meatball you dropped on the floor &=laughs .', '*MOT: you stepped on it .', '*CHI: ew .', '*MOT: so how was Stacie ?', '*CHI: good .', '*MOT: yeah ?', "*MOT: (.) she's not sick ?", '*CHI: hm: .', '*MOT: (.) we had to step on the rest of it [= meatball] .', '*CHI: yeah .', '*MOT: (.) is your birthday coming up ?', '*CHI: huh ?', '*MOT: is your birthday coming up ?', '*CHI: now ?', '*MOT: pretty soon .', '*CHI: pretty soon ?', '*MOT: +^ you gonna have a birthday soon ?', '*CHI: <I &w (.) are we> [//] am I gonna have my birthday ?', '*MOT: yeah .', '*CHI: I mean now ?', '*MOT: are you ?', '*CHI: am I gonna have a +//.', '*CHI: am [/] am I [!] gonna have <a &birt> [//] (.) the [?] birthday par:ty in here ?', '*MOT: mhm .', '*CHI: xxx [>] .', "*MOT: <do you> [<] know how old you're gonna be ?", '*CHI: what ?', '*MOT: how old ?', '*CHI: fours years old .', "*MOT: that's right .", '*CHI: but I thought I was (.) three years old .', '*MOT: you are [!] three years old .', "*MOT: that's why on your birthday you're gonna turn four years old .", '*CHI: why ?', "*MOT: (be)cause that's the next number .", '*CHI: &aw not again !', '*MOT: you know what else ?', '*MOT: you know where else that number is ?', '*CHI: what ?', '*MOT: sit up .', '*CHI: oh .', "*MOT: what's your telephone number ?", '*CHI: four five three three two two .', "*MOT: <what &n> [//] what's the first number of your telephone number ?", '*CHI: &-um (.) six six eight .', '*CHI: one oh oh .', "*MOT: the same (.) as how old you're gonna be .", '*MOT: four .', '*CHI: why ?', '*MOT: (be)cause it is .', '*MOT: just happens to work out that way .', '*MOT: (.) you remember your address ?', '*CHI: no .', "*MOT: you don't ?", "*CHI: where's my &ad address ?", '*MOT: you know what it is .', '*MOT: think about it for a minute .', '*CHI: what ?', '*MOT: you can tell me .', '*MOT: (.) do you remember ?', '*CHI: no .', '*CHI: no .', '*MOT: I bet you do .', "*CHI: I don't .", '*MOT: your address is where you live .', '*MOT: (..) where do you live ?', '*CHI: (..) www [=! frustrated noise] .', '*MOT: &mar .', '*CHI: xxx Lowell Massachusetts .', '*MOT: very good .', '*CHI: hm: &=pleased .', '*MOT: see I knew you remembered .', '*CHI: mm .', "*CHI: &-um what's my telephone number ?", '*MOT: let me think .', '*CHI: four [>] +/.', '*MOT: <do you> [<] know +//.', '*MOT: do you know it ?', '*CHI: four five three three two two .', '*MOT: very good .', '*CHI: hm: &=pleased .', '*MOT: hm: let me see .', "*MOT: and what's your name ?", '*CHI: Chi [= full name] is my name .', '*MOT: very good .', "*MOT: what's Mommy's name ?", '*CHI: Mom [= full name] xxx name .', "*MOT: what's Daddy's name ?", '*CHI: Jake Adams Fluellen xxx .', '*MOT: (.) you learning how to spell your name in school ?', '*CHI: four five three three <two two eight> [>] .', '*MOT: &=laughs [<] .', '*CHI: &=laughs .', '*MOT: machine .', '*CHI: xxx .', '*MOT: &=laughs .', "*MOT: that's your telephone number .", "*MOT: <you you> [/] you're learning how to spell your first name in school right ?", '*CHI: four five three three +/.', '*MOT: Chi &=laughs .', '*CHI: &=laughs .', '*MOT: stop that .', "*MOT: it's [=? just] like a broken record .", '*CHI: ah [=! sighs and giggles] .', '*CHI: four five three three two two eight .', '*MOT: &=laughs .', '*CHI: &=laughs .', '*MOT: how do you spell your last name ?', '*CHI: hm: .', '*CHI: four five three eight two two &=laughs .', '*MOT: &=laughs [<] .', '*MOT: c@l .', '*CHI: ay iy@o ay z@l z@l o@l .', '*MOT: very good .', '*CHI: c@l ay iy@o ay z@l z@l o@l !', '*MOT: <very good> [>] .', '*CHI: &=giggles [<] .', '*CHI: xxx .', '*CHI: &=laughs .', "*MOT: (.) you want to go over Julie's again ?", '*CHI: yeah .', "*MOT: go to Julie's again ?", '*MOT: +^ you had fun huh ?', '*CHI: yeah I want to go see her again .', '*MOT: yeah .', '*CHI: can I ?', "*MOT: yeah we'll go again sometime .", '*MOT: in a little while .', '*MOT: there was a lot of people there huh ?', '*CHI: yeah .', '*MOT: see all your relatives ?', "*CHI: (..) watch this I'm gonna snap .", '*CHI: +^ watch .', '*CHI: 0 .', '*CHI: watch .', '*MOT: pretty good .', '*CHI: want to hear me snap ?', '*CHI: 0 .', '*MOT: pretty good !', '*CHI: ah .', "*MOT: how'd you learn <how to do that> [>] ?", '*CHI: great [?] [<] .', '*CHI: at my school .', '*MOT: at your school ?', '*CHI: xxx wait .', '*MOT: did your teacher tell you how to do that ?', '*CHI: yes !', '*MOT: which teacher ?', '*CHI: &-um Monique ?', '*MOT: Monique ?', '*CHI: yeah and xxx .', '*MOT: mm .', '*MOT: come here .', '*MOT: sit down .', '*MOT: come over here .', '*CHI: 0 .', '*MOT: (..) just finish this .', '*CHI: (..) &=laughs .', '*MOT: 0 .']
loading solution set
LINE NO ->  16
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  21
pumpkin
pumpkin pumpkin 15
[('pumpkin', 'NN')]
['pumpkin']
('food -> ', [['pumpkin', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  24
pumpkin
pumpkin pumpkin 15
[('pumpkin', 'NN')]
['pumpkin']
('food -> ', [['pumpkin', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  28
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  35
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  38
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  42
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  45
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  49
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  55
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  61
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  66
LINE NO ->  67
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  69
LINE NO ->  76
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  80
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  86
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  88
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  94
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  97
sausage
sausage sausage 324
[('is', 'VBZ'), ('that', 'DT'), ('sausage', 'NN')]
['sausage']
('food -> ', [['sausage', 'Meals, Entrees, and Side Dishes']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  101
meatballs
meatballs meatballs 197
[('no', 'DT'), ('that', 'WDT'), ('s', 'VBZ'), ('xxx', 'NNP'), ('meatballs', 'NNS')]
['meatballs']
('food -> ', [['meatballs', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  104
LINE NO ->  107
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  110
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453c3368>)
[('is', 'VBZ'), ('that', 'IN'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  114
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  117
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470b0680>)
[('yes', 'NNS'), ('that', 'WDT'), ('s', 'VBP'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  120
meatballs
meatballs meatballs 197
[('is', 'VBZ'), ('this', 'DT'), ('m', 'NN'), ('meatballs', 'NNS')]
['meatballs']
('food -> ', [['meatballs', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  124
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  127
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  130
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  133
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  137
LINE NO ->  141
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  145
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  150
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  166
LINE NO ->  169
LINE NO ->  172
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0})
LINE NO ->  181
bacon
bacon bacon 309
[('with', 'IN'), ('with', 'IN'), ('the', 'DT'), ('t', 'NN'), ('toy', 'NN'), ('toy', 'NN'), ('bakin', 'NN'), ('g', 'NN'), ('bacon', 'NN')]
['bacon']
('food -> ', [['bacon', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  184
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  187
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  190
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  191
LINE NO ->  194
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  199
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  203
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  206
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  210
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0})
LINE NO ->  214
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  217
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  221
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  224
LINE NO ->  227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  230
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  233
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  237
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  243
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  248
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  252
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, -1: 1})
LINE NO ->  261
LINE NO ->  269
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  274
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  277
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  281
LINE NO ->  284
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  288
LINE NO ->  291
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  294
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  297
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  303
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  307
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  310
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  313
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  316
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  319
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  323
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0})
LINE NO ->  330
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  334
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  337
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  340
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  345
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  348
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  351
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  355
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  358
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  363
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  364
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  367
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  370
LINE NO ->  371
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  372
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  375
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  379
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  383
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  386
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  389
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  393
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  397
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  400
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  403
LINE NO ->  404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  407
LINE NO ->  408
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  412
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  415
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  418
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  422
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  426
LINE NO ->  427
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  430
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  433
LINE NO ->  436
LINE NO ->  439
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  442
LINE NO ->  443
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  446
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  449
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  452
LINE NO ->  453
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  457
LINE NO ->  460
LINE NO ->  461
LINE NO ->  462
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  465
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  469
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  473
LINE NO ->  476
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  479
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  482
LINE NO ->  484
LINE NO ->  487
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  491
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  494
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  498
LINE NO ->  501
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  504
LINE NO ->  506
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  510
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  514
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  518
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  522
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  526
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  530
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  535
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  538
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  539
LINE NO ->  543
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  549
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947167710>)
[('because', 'IN'), ('she', 'PRP'), ('misses', 'VBZ'), ('her', 'PRP'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  553
LINE NO ->  556
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  561
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471677a0>)
[('what', 'WP'), ('s', 'VBD'), ('her', 'PRP'), ('baby', 'NN'), ('s', 'NN'), ('name', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  565
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945396248>)
[('does', 'VBZ'), ('xxx', 'VB'), ('baby', 'NN'), ('needs', 'VBZ'), ('his', 'PRP$'), ('name', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  569
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  572
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947167b00>)
[('her', 'PRP$'), ('baby', 'NN'), ('s', 'NN'), ('name', 'NN'), ('is', 'VBZ'), ('stevie', 'JJ')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  576
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  579
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  583
LINE NO ->  588
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  591
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  597
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  601
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  605
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  609
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  613
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  616
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  621
LINE NO ->  624
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  628
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  631
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  635
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  638
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  642
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  648
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  652
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  658
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  661
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  665
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  668
LINE NO ->  671
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  674
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  677
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  683
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  687
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  691
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  697
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  700
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  707
LINE NO ->  708
LINE NO ->  712
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  715
LINE NO ->  718
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  720
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  723
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  724
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  727
LINE NO ->  728
LINE NO ->  731
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947180200>)
[('sit', 'NN'), ('up', 'RP'), ('please', 'VB'), ('your', 'PRP$'), ('feet', 'NNS')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  734
LINE NO ->  735
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  738
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  741
LINE NO ->  744
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0})
LINE NO ->  747
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  750
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  753
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  756
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  758
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  761
LINE NO ->  764
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  769
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  772
LINE NO ->  773
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  776
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  779
LINE NO ->  780
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  783
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0})
LINE NO ->  791
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  792
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  795
LINE NO ->  799
LINE NO ->  800
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  804
LINE NO ->  806
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470b0b48>)
[('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('hug', 'NN'), ('that', 'WDT'), ('hard', 'JJ'), ('chi', 'NN')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  810
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  814
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  817
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  821
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  826
LINE NO ->  829
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  833
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  836
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0})
LINE NO ->  842
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  843
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  848
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  851
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  855
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  858
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  861
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  864
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  868
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  872
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  876
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0})
LINE NO ->  883
LINE NO ->  887
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  891
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  896
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  900
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  905
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  908
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  911
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  914
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  919
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  922
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  925
LINE NO ->  930
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  935
LINE NO ->  939
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  943
duck
duck duck 84
[('a', 'DT'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  947
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  950
duck
duck duck 84
[('did', 'VBD'), ('he', 'PRP'), ('take', 'VB'), ('a', 'DT'), ('little', 'JJ'), ('bite', 'NN'), ('of', 'IN'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  956
LINE NO ->  959
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  963
LINE NO ->  967
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  973
LINE NO ->  976
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  979
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  983
pepper
pepper pepper 27
[('and', 'CC'), ('put', 'VB'), ('pepper', 'NN'), ('on', 'IN'), ('her', 'PRP$')]
['pepper']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  986
salt
salt salt 0
[('and', 'CC'), ('and', 'CC'), ('and', 'CC'), ('salt', 'NN'), ('on', 'IN'), ('her', 'PRP$')]
['salt']
('food -> ', [['salt', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  990
LINE NO ->  991
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  995
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  999
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1002
LINE NO ->  1006
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1010
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1013
LINE NO ->  1017
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1021
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1024
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1028
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1032
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1036
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1039
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1042
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1047
duck
duck duck 84
[('you', 'PRP'), ('had', 'VBD'), ('better', 'JJR'), ('be', 'VB'), ('hungry', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('a', 'DT'), ('whole', 'JJ'), ('duck', 'NN'), ('huh', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1053
LINE NO ->  1056
LINE NO ->  1060
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1065
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1068
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1072
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1075
LINE NO ->  1079
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1082
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1083
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1086
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1089
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1093
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  1098
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945396878>)
[('because', 'IN'), ('because', 'IN'), ('anthony', 'NN'), ('s', 'VBD'), ('the', 'DT'), ('bad', 'JJ'), ('because', 'IN'), ('he', 'PRP'), ('shoots', 'VBZ'), ('people', 'NNS')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  1103
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1107
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1111
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1114
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1117
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1121
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1124
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1128
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1135
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1139
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 1, 89: 0, 90: 0, 91: 0, -1: 1})
LINE NO ->  1144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1147
LINE NO ->  1151
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 1, 89: 1, 90: 1, 91: 1, 92: 0, 93: 0, 94: 0})
LINE NO ->  1158
LINE NO ->  1161
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1164
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1167
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1170
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1174
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1177
LINE NO ->  1180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1183
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0})
LINE NO ->  1186
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1189
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1192
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1196
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  1201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1204
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  1209
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  1213
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1216
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  1220
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1225
LINE NO ->  1228
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  1229
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1234
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1237
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1240
LINE NO ->  1243
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1246
LINE NO ->  1249
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  1254
LINE NO ->  1255
LINE NO ->  1258
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1261
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1264
LINE NO ->  1268
LINE NO ->  1271
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1276
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 1, 117: 1, 118: 1, 119: 1, 120: 1, 121: 1, 122: 1, 123: 0, 124: 0, 125: 0})
LINE NO ->  1280
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1287
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  1290
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1293
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1297
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1303
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1306
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  1309
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1312
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1315
LINE NO ->  1318
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0})
LINE NO ->  1323
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0})
LINE NO ->  1326
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1329
LINE NO ->  1332
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1335
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1339
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1342
egg
egg egg 357
[('egg', 'NN')]
['egg']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1345
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  1349
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  1352
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1356
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1359
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1362
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1365
LINE NO ->  1369
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1372
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  1377
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1381
LINE NO ->  1385
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1389
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  1392
LINE NO ->  1395
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1400
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1403
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  1407
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0})
LINE NO ->  1414
LINE NO ->  1417
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1421
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1426
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  1429
LINE NO ->  1432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1435
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1438
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1441
LINE NO ->  1445
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1450
LINE NO ->  1451
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1456
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1462
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1467
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1471
LINE NO ->  1476
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  1480
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1484
LINE NO ->  1487
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1491
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1495
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1499
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1503
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1507
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1510
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1514
LINE NO ->  1518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1522
duck
duck duck 84
[('he', 'PRP'), ('ate', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('alive', 'JJ')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1525
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1530
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1536
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1539
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1540
LINE NO ->  1544
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1549
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1552
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1556
feet
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471672d8>)
[('put', 'VB'), ('your', 'PRP$'), ('feet', 'NNS'), ('down', 'RP'), ('please', 'NN')]
['feet']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  1559
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1563
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  1568
LINE NO ->  1572
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1573
LINE NO ->  1574
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1578
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1583
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1584
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1588
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1589
LINE NO ->  1592
LINE NO ->  1595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1596
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  1599
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1602
LINE NO ->  1605
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1608
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1611
LINE NO ->  1615
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1618
LINE NO ->  1621
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1625
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1628
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1630
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  1634
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1639
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1644
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1647
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1650
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1653
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1656
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  1661
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1662
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1666
LINE NO ->  1669
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  1673
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1677
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1680
LINE NO ->  1681
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1685
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  1688
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1691
LINE NO ->  1692
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1695
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1698
LINE NO ->  1700
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0})
LINE NO ->  1704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1708
LINE NO ->  1709
LINE NO ->  1713
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1718
LINE NO ->  1722
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1726
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1729
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1732
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  1735
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1738
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1741
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1745
LINE NO ->  1748
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1751
LINE NO ->  1755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1759
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  1764
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1768
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1774
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1778
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1783
LINE NO ->  1786
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1792
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1795
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1796
LINE NO ->  1800
duck
duck duck 84
[('um', 'JJ'), ('um', 'IN'), ('the', 'DT'), ('wolf', 'NN'), ('ate', 'VBD'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1803
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1808
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1811
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1815
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1818
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  1825
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1828
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1832
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1835
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1838
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1841
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1844
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1848
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1851
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  1856
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  1862
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1866
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1869
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1873
LINE NO ->  1876
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1880
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1883
LINE NO ->  1886
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0})
LINE NO ->  1890
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1893
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1897
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1901
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0})
LINE NO ->  1908
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1911
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0})
LINE NO ->  1914
LINE NO ->  1917
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1921
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 1, 105: 1, 106: 0, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 1, 146: 1, 147: 1, 148: 0, 149: 0, 150: 0})
LINE NO ->  1924
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0})
LINE NO ->  1929
LINE NO ->  1932
LINE NO ->  1935
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  1938
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1941
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1944
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1949
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  1953
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1957
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0})
LINE NO ->  1963
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1967
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1970
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1973
LINE NO ->  1978
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1981
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  1987
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1992
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, -1: 1})
LINE NO ->  1997
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  2000
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  2001
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  2007
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2010
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2013
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2017
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  2020
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  2027
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2028
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  2034
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2038
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  2042
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2045
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2048
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2052
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  2056
shake
shake shake 148
[('yeah', 'NN'), ('but', 'CC'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN'), ('when', 'WRB'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('when', 'WRB'), ('i', 'NN'), ('was', 'VBD'), ('up', 'RB'), ('the', 'DT'), ('hill', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 1, 84: 1, 85: 1, 86: 1, 87: 0, 88: 0, 89: 0})
LINE NO ->  2062
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  2066
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  2072
LINE NO ->  2075
shake
shake shake 148
[('because', 'IN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'JJ'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  2079
shake
shake shake 148
[('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('didn', 'VBZ'), ('t', 'CC'), ('come', 'VB'), ('up', 'RP'), ('the', 'DT'), ('hill', 'NN'), ('and', 'CC'), ('shake', 'VB'), ('my', 'PRP$'), ('hand', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  2084
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2089
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2093
shake
shake shake 148
[('then', 'RB'), ('i', 'VB'), ('shake', 'VB'), ('his', 'PRP$'), ('hand', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2096
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  2100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  2108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0})
LINE NO ->  2111
LINE NO ->  2113
LINE NO ->  2121
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  2127
LINE NO ->  2132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2135
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2139
shake
shake shake 148
[('be', 'VB'), ('cause', 'NN'), ('you', 'PRP'), ('went', 'VBD'), ('up', 'RB'), ('to', 'TO'), ('him', 'PRP'), ('and', 'CC'), ('you', 'PRP'), ('asked', 'VBD'), ('him', 'PRP'), ('if', 'IN'), ('he', 'PRP'), ('would', 'MD'), ('shake', 'VB'), ('your', 'PRP$'), ('hand', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  2147
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2150
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2155
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  2159
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  2166
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0})
LINE NO ->  2172
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  2177
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2181
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2184
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  2191
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  2196
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2200
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  2205
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2212
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0})
LINE NO ->  2218
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  2221
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2225
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2229
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  2230
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  2233
LINE NO ->  2239
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2242
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  2245
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2246
LINE NO ->  2250
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  2253
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  2256
LINE NO ->  2257
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2261
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2263
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2266
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2269
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2275
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  2278
LINE NO ->  2279
LINE NO ->  2282
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2285
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2288
LINE NO ->  2291
LINE NO ->  2294
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2297
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471b5320>)
[('and', 'CC'), ('what', 'WP'), ('was', 'VBD'), ('the', 'DT'), ('baby', 'NN'), ('s', 'NN'), ('name', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2302
LINE NO ->  2305
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2308
LINE NO ->  2312
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  2315
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2319
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  2326
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  2329
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  2333
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2336
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2339
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2343
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  2347
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  2353
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2356
LINE NO ->  2359
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  2365
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2372
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2377
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  2382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  2383
LINE NO ->  2389
brownies
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94718e128>)
[('mostly', 'RB'), ('be', 'VB'), ('cause', 'NN'), ('he', 'PRP'), ('wanted', 'VBD'), ('more', 'JJR'), ('brownies', 'NNS')]
['brownies']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  2393
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2396
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2397
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  2398
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2401
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2405
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2409
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2413
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2418
cookie
cookie cookie 507
[('because', 'IN'), ('kenny', 'NN'), ('saw', 'VBD'), ('the', 'DT'), ('cupcakes', 'NNS'), ('and', 'CC'), ('he', 'PRP'), ('dropped', 'VBD'), ('a', 'DT'), ('cookie', 'NN')]
['cookie']
('food -> ', [['cookie', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  2424
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  2427
cookie
cookie cookie 507
[('he', 'PRP'), ('saw', 'VBD'), ('the', 'DT'), ('cupcake', 'NN'), ('and', 'CC'), ('he', 'PRP'), ('dropped', 'VBD'), ('a', 'DT'), ('cookie', 'NN')]
['cookie']
('food -> ', [['cookie', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  2432
cookie
cookie cookie 507
[('why', 'WRB'), ('d', 'NN'), ('he', 'PRP'), ('drop', 'VBZ'), ('the', 'DT'), ('cookie', 'NN')]
['cookie']
('food -> ', [['cookie', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2436
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  2440
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0})
LINE NO ->  2446
LINE NO ->  2452
LINE NO ->  2456
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2460
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2463
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2467
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2474
LINE NO ->  2478
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2482
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  2488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  2491
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  2494
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2497
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2502
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  2506
LINE NO ->  2510
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2513
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2516
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947251dd0>)
[('yeah', 'RB'), ('real', 'JJ'), ('hard', 'JJ'), ('like', 'IN'), ('this', 'DT')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2519
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  2524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  2529
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2532
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  2538
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2541
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  2544
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  2547
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2550
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2554
gums
gums gums 332
[('you', 'PRP'), ('got', 'VBD'), ('two', 'CD'), ('gums', 'NNS'), ('and', 'CC'), ('anything', 'NN'), ('else', 'RB')]
['gums']
('food -> ', [['gums', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2559
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2562
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2566
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2570
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  2573
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2577
LINE NO ->  2580
LINE NO ->  2584
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  2585
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2590
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2593
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2596
LINE NO ->  2597
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  2600
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2603
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  2608
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2612
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  2615
LINE NO ->  2618
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2621
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  2625
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  2626
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2630
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  2633
LINE NO ->  2637
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  2641
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  2647
LINE NO ->  2650
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2654
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2658
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2661
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2664
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  2667
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2670
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2674
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2677
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2681
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  2684
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2688
LINE NO ->  2691
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2695
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2698
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  2701
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2704
LINE NO ->  2707
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2712
turtle
turtle turtle 89
[('and', 'CC'), ('and', 'CC'), ('uh', 'JJ'), ('and', 'CC'), ('a', 'DT'), ('pretend', 'JJ'), ('turtle', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('get', 'VB'), ('me', 'PRP')]
['turtle']
('food -> ', [['turtle', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  2717
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2721
turtle
turtle turtle 89
[('and', 'CC'), ('you', 'PRP'), ('held', 'VBP'), ('on', 'IN'), ('like', 'IN'), ('that', 'DT'), ('and', 'CC'), ('the', 'DT'), ('turtle', 'NN'), ('couldn', 'NN'), ('t', 'NN'), ('get', 'NN'), ('you', 'PRP')]
['turtle']
('food -> ', [['turtle', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  2727
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2730
LINE NO ->  2733
turtle
turtle turtle 89
[('where', 'WRB'), ('was', 'VBD'), ('the', 'DT'), ('turtle', 'NN')]
['turtle']
('food -> ', [['turtle', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2737
ground
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94723cbd8>)
[('he', 'PRP'), ('he', 'PRP'), ('was', 'VBD'), ('way', 'NN'), ('down', 'IN'), ('to', 'TO'), ('the', 'DT'), ('ground', 'NN')]
['ground']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  2743
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0})
LINE NO ->  2749
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2752
LINE NO ->  2756
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  2760
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  2764
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0})
LINE NO ->  2770
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2774
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, -1: 1})
LINE NO ->  2781
LINE NO ->  2784
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2788
LINE NO ->  2791
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2795
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  2801
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  2807
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2810
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  2815
LINE NO ->  2819
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  2822
LINE NO ->  2823
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0})
LINE NO ->  2828
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  2833
LINE NO ->  2837
turtle
turtle turtle 89
[('a', 'DT'), ('nice', 'JJ'), ('turtle', 'NN'), ('turtle', 'JJ'), ('n', 'JJ'), ('nice', 'JJ'), ('turtle', 'NN'), ('toys', 'NNS')]
['turtle']
('food -> ', [['turtle', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0})
LINE NO ->  2840
LINE NO ->  2843
turtle
turtle turtle 89
[('yeah', 'NN'), ('nice', 'JJ'), ('turtle', 'JJ'), ('things', 'NNS'), ('toys', 'NNS')]
['turtle']
('food -> ', [['turtle', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  2846
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2849
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2853
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  2857
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2861
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2865
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2869
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2872
LINE NO ->  2876
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2880
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  2885
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  2890
turtle
turtle turtle 89
[('and', 'CC'), ('the', 'DT'), ('turtle', 'JJ'), ('turtle', 'NN'), ('is', 'VBZ'), ('a', 'DT'), ('bum', 'NN'), ('bum', 'NN')]
['turtle']
('food -> ', [['turtle', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  2894
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947242638>)
[('how', 'WRB'), ('s', 'JJ'), ('your', 'PRP$'), ('baby', 'NN'), ('stacie', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  2898
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  2902
LINE NO ->  2906
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2909
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  2913
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2917
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  2920
LINE NO ->  2923
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2926
LINE NO ->  2929
LINE NO ->  2933
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  2938
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2941
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  2944
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2948
LINE NO ->  2951
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  2955
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  2959
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2962
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  2967
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2970
LINE NO ->  2974
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2978
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2982
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2986
LINE NO ->  2990
LINE NO ->  2994
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  2999
LINE NO ->  3004
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3007
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  3011
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  3015
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  3018
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, -1: 1})
LINE NO ->  3024
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3027
LINE NO ->  3028
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  3034
LINE NO ->  3038
LINE NO ->  3042
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  3045
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  3048
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  3055
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  3058
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  3064
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  3068
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  3072
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  3075
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  3079
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  3084
LINE NO ->  3088
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  3091
LINE NO ->  3094
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  3098
LINE NO ->  3102
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  3108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  3111
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  3115
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  3120
LINE NO ->  3123
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  3127
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  3130
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  3134
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  3138
LINE NO ->  3141
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  3145
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  3149
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  3152
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  3155
LINE NO ->  3159
LINE NO ->  3162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  3166
LINE NO ->  3169
LINE NO ->  3172
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  3175
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  3178
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  3182
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  3186
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  3187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3188
LINE NO ->  3191
LINE NO ->  3194
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  3197
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  3200
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  3203
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  3207
LINE NO ->  3210
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  3213
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  3216
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  3220
LINE NO ->  3224
LINE NO ->  3227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  3230
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  3233
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  3237
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  3240
LINE NO ->  3243
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  3247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  3251
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  3255
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  3259
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  3265
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  3270
LINE NO ->  3271
LINE NO ->  3272
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  3275
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3276
LINE NO ->  3277
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  3280
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  3286
LINE NO ->  3289
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  3292
LINE NO ->  3293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  3296
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  3300
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  3303
LINE NO ->  3309
LINE NO ->  3310
LINE NO ->  3311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  3316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3319
LINE NO ->  3323
LINE NO ->  3324
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  3330
LINE NO ->  3333
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  3336
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  3339
LINE NO ->  3340
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3342
LINE NO ->  3344
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  3350
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3353
LINE NO ->  3357
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  3361
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  3365
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  3372
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  3375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  3378
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  3384
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3387
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  3392
snap
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471bf7a0>)
[('watch', 'NN'), ('this', 'DT'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('snap', 'VB')]
['snap']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  3395
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  3398
LINE NO ->  3400
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  3403
LINE NO ->  3406
snap
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947242ef0>)
[('want', 'NN'), ('to', 'TO'), ('hear', 'VB'), ('me', 'PRP'), ('snap', 'VB')]
['snap']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  3410
LINE NO ->  3412
LINE NO ->  3415
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  3419
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  3425
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  3428
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  3431
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  3435
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  3438
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  3444
LINE NO ->  3447
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  3451
LINE NO ->  3455
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  3459
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  3462
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  3465
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  3468
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  3471
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  3474
LINE NO ->  3476
LINE NO ->  3479
LINE NO ->  3480
loading solution set
calculating
set([(98, (18, 25)), (1048, (52, 56)), (1343, (9, 12)), (944, (8, 12)), (2963, (46, 54)), (121, (21, 30)), (2419, (58, 64)), (951, (49, 53)), (25, (6, 13)), (111, (14, 18)), (102, (25, 34)), (142, (27, 37)), (2433, (24, 30)), (987, (28, 32)), (2441, (48, 55)), (1801, (37, 41)), (22, (6, 13)), (118, (17, 21)), (1523, (17, 21)), (2437, (36, 44)), (909, (22, 30)), (2428, (46, 52)), (2555, (18, 22)), (2934, (8, 16)), (984, (14, 20)), (182, (52, 57))])
[((22, (6, 13)), '*CHI:\tpumpkin .\n'), ((25, (6, 13)), '*MOT:\tpumpkin ?\n'), ((98, (18, 25)), '*CHI:\t(.) is that sausage ?\n'), ((102, (25, 34)), "*MOT:\tno that's xxx [//] meatballs .\n"), ((111, (14, 18)), '*CHI:\tis that meat ?\n'), ((118, (17, 21)), "*MOT:\tyes that's meat .\n"), ((121, (21, 30)), '*CHI:\tis this [!] &m meatballs ?\n'), ((142, (27, 37)), '*CHI:\tGrandma [?] can make hamburgers ?\n'), ((182, (52, 57)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((909, (22, 30)), '*CHI:\t(..) I want the meatball .\n'), ((944, (8, 12)), '*CHI:\ta duck .\n'), ((951, (49, 53)), '*MOT:\t<did he take> [<] a little [!] bite of the duck ?\n'), ((984, (14, 20)), '*CHI:\tand put pepper on her ?\n'), ((987, (28, 32)), '*CHI:\t<and (.) and> [/] and salt on her ?\n'), ((1048, (52, 56)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1343, (9, 12)), '*CHI:\t++ egg [<] [?] .\n'), ((1523, (17, 21)), '*CHI:\the ate the duck alive .\n'), ((1801, (37, 41)), '*CHI:\t&-um [/] &-um the wolf ate the duck .\n'), ((2419, (58, 64)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2428, (46, 52)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2433, (24, 30)), "*MOT:\twhy'd he drop the cookie ?\n"), ((2437, (36, 44)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2441, (48, 55)), '*MOT:\toh because he decided he wanted to have a cupcake instead ?\n'), ((2555, (18, 22)), '*MOT:\tyou got two gums and anything else ?\n'), ((2934, (8, 16)), '*MOT:\ta meatball you dropped on the floor &=laughs .\n'), ((2963, (46, 54)), '*MOT:\t(.) we had to step on the rest of it [= meatball] .\n')]
set([(2414, (30, 34)), (470, (-1, 4)), (2910, (-1, 4)), (444, (13, 17)), (1099, (55, 61)), (2495, (6, 10)), (304, (17, 22)), (1363, (9, 14)), (527, (10, 13)), (314, (52, 55)), (724, (19, 26)), (1094, (-1, 4)), (511, (10, 12)), (992, (6, 8)), (2011, (27, 31)), (447, (6, 12)), (1205, (50, 57)), (2533, (10, 13)), (3334, (13, 17)), (2258, (-1, 4)), (2858, (6, 9)), (3266, (44, 47)), (843, (8, 11)), (2585, (14, 18)), (2802, (-1, 4)), (659, (19, 24)), (2188, (16, 19)), (2230, (12, 18)), (2188, (30, 33)), (3362, (6, 10)), (688, (6, 9)), (550, (-1, 4)), (3146, (17, 20)), (1988, (-1, 4)), (3345, (-1, 4)), (951, (37, 41)), (1682, (30, 35)), (2829, (-1, 4)), (3393, (26, 31)), (1998, (15, 18)), (3248, (18, 23)), (2197, (-1, 4)), (3278, (28, 34)), (2824, (43, 48)), (2002, (-1, 4)), (2899, (24, 31)), (372, (6, 9)), (1230, (-1, 4)), (539, (-1, 4)), (185, (-1, 4)), (463, (10, 13)), (3238, (18, 23)), (43, (18, 23)), (3376, (-1, 4)), (270, (41, 45)), (2185, (6, 10)), (2461, (6, 9)), (1084, (27, 33)), (314, (10, 13)), (2492, (6, 12)), (88, (11, 14)), (830, (-1, 4)), (161, (6, 10)), (869, (6, 9)), (1833, (-1, 4)), (1508, (6, 10)), (2591, (10, 12)), (2870, (17, 22)), (629, (-1, 4)), (2870, (23, 28)), (1902, (68, 70)), (314, (48, 51)), (3238, (-1, 4)), (515, (16, 20)), (2734, (-1, 4)), (211, (48, 54)), (1433, (-1, 4)), (1863, (-1, 4)), (62, (38, 42)), (2744, (68, 73)), (577, (9, 11)), (3460, (15, 18)), (3008, (-1, 4)), (2517, (16, 20)), (1730, (18, 22)), (2334, (-1, 4)), (3426, (16, 19)), (3416, (6, 8)), (2097, (-1, 4)), (2133, (-1, 4)), (751, (-1, 4)), (1936, (13, 18)), (3252, (21, 25)), (121, (-1, 4)), (1083, (18, 25)), (295, (11, 15)), (1560, (-1, 4)), (1488, (-1, 4)), (915, (36, 39)), (531, (-1, 4)), (234, (-1, 4)), (2151, (6, 10)), (2757, (14, 21)), (765, (-1, 4)), (2046, (-1, 4)), (892, (6, 12)), (1336, (6, 10)), (570, (-1, 4)), (1357, (6, 10)), (1579, (40, 44)), (931, (36, 39)), (3231, (6, 9)), (2877, (-1, 4)), (2067, (37, 42)), (2240, (-1, 4)), (1819, (59, 63)), (1804, (-1, 4)), (390, (18, 23)), (2080, (56, 60)), (1845, (37, 40)), (3228, (6, 9)), (2035, (-1, 4)), (1573, (10, 13)), (3379, (25, 31)), (1881, (6, 9)), (2270, (-1, 4)), (2433, (24, 30)), (346, (22, 28)), (173, (6, 10)), (1230, (38, 42)), (2344, (39, 43)), (2662, (10, 16)), (931, (31, 35)), (2049, (-1, 4)), (1696, (-1, 4)), (2140, (-1, 4)), (1277, (43, 49)), (1674, (-1, 4)), (765, (39, 45)), (3393, (32, 36)), (2057, (6, 10)), (292, (-1, 4)), (1162, (-1, 4)), (862, (21, 24)), (2808, (6, 10)), (2094, (13, 18)), (1922, (145, 148)), (295, (39, 44)), (3016, (-1, 4)), (675, (6, 8)), (1557, (15, 19)), (2728, (6, 9)), (2354, (-1, 4)), (2598, (17, 22)), (1812, (14, 17)), (376, (6, 8)), (1386, (-1, 4)), (2001, (12, 18)), (3025, (6, 9)), (906, (28, 33)), (2995, (-1, 4)), (1404, (24, 30)), (3056, (-1, 4)), (1463, (-1, 4)), (2560, (6, 9)), (625, (21, 26)), (2824, (49, 56)), (1898, (10, 13)), (1229, (6, 9)), (2685, (13, 19)), (1408, (32, 37)), (1190, (6, 10)), (2665, (-1, 4)), (2651, (-1, 4)), (2638, (32, 36)), (2483, (52, 55)), (331, (20, 26)), (2276, (-1, 4)), (191, (14, 20)), (2548, (-1, 4)), (2390, (38, 46)), (617, (-1, 4)), (450, (13, 17)), (3059, (57, 62)), (405, (6, 12)), (811, (6, 12)), (335, (6, 9)), (951, (49, 53)), (1852, (10, 13)), (2542, (-1, 4)), (182, (11, 14)), (980, (25, 29)), (2594, (17, 22)), (2201, (-1, 4)), (155, (10, 15)), (2085, (-1, 4)), (1787, (29, 33)), (1262, (33, 37)), (3089, (-1, 4)), (1118, (-1, 4)), (238, (6, 9)), (2844, (39, 43)), (177, (49, 53)), (1210, (51, 55)), (2039, (19, 23)), (573, (17, 21)), (328, (59, 65)), (2626, (19, 25)), (1048, (41, 47)), (544, (-1, 4)), (1801, (11, 14)), (118, (17, 21)), (1909, (32, 36)), (364, (-1, 4)), (2383, (24, 30)), (3439, (23, 27)), (1340, (6, 9)), (507, (25, 30)), (2619, (6, 10)), (308, (30, 35)), (2192, (-1, 4)), (784, (65, 68)), (1640, (6, 9)), (3112, (10, 15)), (89, (46, 53)), (2870, (-1, 4)), (1804, (15, 22)), (2598, (-1, 4)), (2866, (-1, 4)), (701, (22, 27)), (2246, (6, 9)), (892, (42, 45)), (2765, (24, 36)), (515, (21, 24)), (1427, (10, 15)), (32, (6, 10)), (384, (6, 8)), (1902, (36, 40)), (1887, (10, 14)), (3260, (41, 45)), (507, (34, 40)), (1468, (-1, 4)), (1033, (-1, 4)), (577, (12, 15)), (2520, (6, 11)), (2213, (21, 28)), (2306, (-1, 4)), (151, (42, 45)), (1519, (-1, 4)), (1504, (-1, 4)), (1087, (10, 15)), (2668, (24, 27)), (3188, (6, 10)), (748, (6, 10)), (1099, (-1, 4)), (2838, (54, 60)), (1635, (6, 9)), (2802, (20, 27)), (102, (9, 15)), (2844, (6, 10)), (1094, (59, 67)), (960, (-1, 4)), (2437, (12, 15)), (195, (10, 13)), (877, (16, 19)), (1894, (-1, 4)), (2844, (27, 33)), (1925, (10, 14)), (1635, (10, 13)), (1733, (47, 51)), (1909, (10, 13)), (1210, (37, 40)), (2298, (23, 29)), (3076, (-1, 4)), (2080, (47, 52)), (3385, (6, 10)), (270, (14, 19)), (2201, (23, 29)), (3019, (-1, 4)), (3069, (32, 38)), (1635, (-1, 4)), (2844, (16, 22)), (1801, (37, 41)), (2243, (6, 13)), (298, (10, 13)), (416, (-1, 4)), (2668, (-1, 4)), (1140, (61, 66)), (3124, (-1, 4)), (1849, (-1, 4)), (394, (-1, 4)), (401, (22, 25)), (275, (6, 9)), (852, (6, 10)), (2264, (-1, 4)), (1922, (12, 15)), (1040, (-1, 4)), (1765, (21, 25)), (2718, (-1, 4)), (519, (28, 31)), (3432, (14, 20)), (2283, (-1, 4)), (1526, (-1, 4)), (759, (6, 8)), (50, (-1, 4)), (1812, (9, 13)), (2571, (9, 15)), (2952, (6, 10)), (25, (-1, 4)), (1370, (15, 20)), (698, (23, 29)), (1307, (6, 10)), (470, (15, 21)), (1819, (23, 30)), (523, (15, 19)), (2414, (-1, 4)), (3214, (15, 18)), (774, (6, 9)), (1373, (45, 49)), (1396, (-1, 4)), (705, (-1, 4)), (352, (-1, 4)), (1589, (6, 9)), (2574, (-1, 4)), (1964, (-1, 4)), (2960, (6, 9)), (2983, (-1, 4)), (2604, (48, 53)), (996, (-1, 4)), (2043, (6, 10)), (98, (6, 9)), (2567, (-1, 4)), (3163, (6, 9)), (1205, (-1, 4)), (3472, (6, 10)), (852, (-1, 4)), (191, (21, 27)), (36, (10, 14)), (1244, (-1, 4)), (2286, (-1, 4)), (3183, (-1, 4)), (3244, (6, 12)), (1190, (-1, 4)), (2104, (22, 25)), (3429, (12, 18)), (830, (6, 10)), (1313, (6, 8)), (115, (6, 9)), (3153, (27, 33)), (102, (25, 34)), (507, (41, 44)), (1446, (39, 42)), (2503, (28, 34)), (2696, (6, 9)), (3463, (6, 8)), (659, (6, 10)), (1606, (6, 8)), (2886, (28, 35)), (488, (-1, 4)), (662, (-1, 4)), (3163, (-1, 4)), (1857, (47, 50)), (2057, (25, 30)), (466, (-1, 4)), (204, (6, 9)), (1090, (6, 10)), (1094, (21, 25)), (423, (9, 15)), (589, (26, 31)), (185, (22, 28)), (1446, (34, 38)), (2891, (29, 35)), (2414, (25, 29)), (1346, (19, 22)), (1373, (28, 31)), (3131, (36, 39)), (3432, (-1, 4)), (2914, (-1, 4)), (1408, (79, 84)), (1756, (-1, 4)), (2802, (45, 49)), (1998, (11, 14)), (1360, (13, 17)), (2094, (23, 27)), (1350, (6, 10)), (142, (27, 37)), (2140, (76, 80)), (2811, (-1, 4)), (1945, (-1, 4)), (1993, (-1, 4)), (1723, (20, 24)), (3334, (6, 12)), (2563, (16, 20)), (3131, (-1, 4)), (3334, (29, 32)), (643, (40, 45)), (3379, (18, 21)), (257, (61, 66)), (1801, (24, 28)), (1849, (10, 13)), (595, (17, 21)), (244, (-1, 4)), (1584, (10, 13)), (3439, (15, 22)), (751, (19, 23)), (3073, (-1, 4)), (2838, (61, 65)), (837, (53, 59)), (253, (10, 13)), (3297, (28, 34)), (3358, (21, 24)), (1663, (11, 14)), (2182, (6, 9)), (477, (6, 9)), (1779, (31, 35)), (1584, (14, 20)), (1829, (25, 30)), (2775, (66, 73)), (2419, (37, 40)), (1689, (10, 13)), (56, (-1, 4)), (643, (-1, 4)), (2963, (46, 55)), (2642, (-1, 4)), (807, (25, 29)), (2761, (6, 9)), (1573, (6, 9)), (3260, (49, 55)), (222, (6, 9)), (2316, (-1, 4)), (89, (-1, 4)), (3029, (39, 44)), (1390, (6, 11)), (1760, (16, 22)), (2464, (-1, 4)), (2035, (6, 9)), (2136, (24, 29)), (2046, (25, 30)), (792, (27, 30)), (1560, (6, 10)), (341, (25, 31)), (2428, (-1, 4)), (1288, (59, 66)), (2586, (-1, 4)), (1909, (-1, 4)), (2542, (30, 33)), (1836, (14, 17)), (2675, (6, 9)), (2738, (20, 23)), (1277, (116, 123)), (2201, (16, 19)), (1867, (6, 9)), (2609, (-1, 4)), (231, (23, 27)), (984, (-1, 4)), (2366, (23, 29)), (2419, (58, 64)), (285, (14, 17)), (1492, (6, 10)), (1723, (25, 28)), (416, (18, 24)), (2942, (6, 8)), (3059, (6, 12)), (1193, (-1, 4)), (2298, (-1, 4)), (3029, (10, 14)), (1686, (6, 8)), (672, (11, 14)), (2627, (-1, 4)), (2273, (-1, 4)), (818, (-1, 4)), (380, (51, 56)), (3456, (-1, 4)), (46, (-1, 4)), (1954, (20, 25)), (477, (10, 13)), (1648, (6, 9)), (2313, (-1, 4)), (440, (-1, 4)), (2525, (41, 44)), (121, (18, 30)), (151, (11, 16)), (416, (10, 13)), (2722, (-1, 4)), (1912, (55, 58)), (3466, (6, 10)), (1285, (6, 9)), (649, (-1, 4)), (3204, (11, 17)), (1531, (15, 21)), (2517, (-1, 4)), (2811, (11, 18)), (1140, (-1, 4)), (2498, (-1, 4)), (111, (-1, 4)), (1401, (15, 23)), (1294, (-1, 4)), (1115, (-1, 4)), (2626, (14, 18)), (739, (6, 10)), (2109, (6, 10)), (3103, (38, 44)), (3179, (11, 18)), (915, (-1, 4)), (2489, (16, 21)), (2975, (6, 9)), (2173, (-1, 4)), (1739, (11, 15)), (1564, (-1, 4)), (1129, (-1, 4)), (2511, (28, 34)), (1845, (33, 36)), (1663, (-1, 4)), (3407, (-1, 4)), (1609, (6, 9)), (1340, (10, 13)), (2713, (36, 50)), (1422, (57, 60)), (2854, (-1, 4)), (523, (11, 14)), (2080, (-1, 4)), (111, (14, 18)), (3407, (22, 26)), (1553, (-1, 4)), (610, (-1, 4)), (573, (10, 16)), (3043, (12, 17)), (980, (13, 16)), (2820, (6, 13)), (3312, (33, 37)), (222, (37, 41)), (1244, (20, 25)), (2433, (-1, 4)), (398, (6, 8)), (3019, (69, 75)), (1140, (14, 17)), (1819, (-1, 4)), (2796, (25, 28)), (822, (42, 47)), (1452, (11, 15)), (1073, (6, 9)), (2053, (-1, 4)), (598, (6, 9)), (1597, (20, 23)), (3146, (-1, 4)), (2210, (6, 9)), (304, (7, 11)), (2963, (32, 36)), (2018, (6, 8)), (909, (22, 30)), (1037, (6, 10)), (1736, (-1, 4)), (95, (6, 10)), (2699, (13, 17)), (2472, (-1, 4)), (1936, (40, 43)), (1714, (-1, 4)), (2765, (49, 54)), (2622, (10, 16)), (1202, (6, 9)), (757, (6, 9)), (1689, (-1, 4)), (2008, (10, 13)), (1616, (11, 14)), (2140, (65, 70)), (356, (27, 31)), (721, (-1, 4)), (2122, (-1, 4)), (1221, (-1, 4)), (285, (-1, 4)), (365, (10, 13)), (1545, (-1, 4)), (2394, (-1, 4)), (951, (-1, 4)), (200, (15, 19)), (1214, (8, 14)), (2340, (6, 9)), (2369, (-1, 4)), (2945, (-1, 4)), (3276, (6, 9)), (2167, (63, 70)), (3328, (17, 20)), (1080, (10, 15)), (3234, (22, 26)), (2160, (32, 36)), (1575, (-1, 4)), (56, (34, 38)), (770, (-1, 4)), (920, (11, 14)), (592, (-1, 4)), (3393, (11, 16)), (1902, (12, 15)), (1436, (-1, 4)), (1184, (6, 9)), (3103, (-1, 4)), (2049, (6, 9)), (606, (9, 13)), (3128, (-1, 4)), (1545, (32, 37)), (1084, (6, 10)), (207, (-1, 4)), (724, (12, 18)), (3135, (28, 35)), (3281, (60, 64)), (639, (16, 19)), (1769, (-1, 4)), (495, (6, 10)), (678, (-1, 4)), (3297, (35, 41)), (2734, (20, 26)), (249, (37, 41)), (2085, (6, 9)), (721, (13, 19)), (940, (24, 27)), (2847, (6, 10)), (2262, (10, 13)), (3328, (9, 13)), (3176, (-1, 4)), (987, (28, 32)), (822, (6, 9)), (692, (-1, 4)), (1281, (-1, 4)), (2109, (21, 26)), (77, (-1, 4)), (2323, (25, 32)), (906, (-1, 4)), (2881, (13, 17)), (1310, (6, 10)), (977, (18, 21)), (968, (35, 41)), (2655, (-1, 4)), (592, (16, 19)), (1701, (51, 54)), (3201, (6, 8)), (142, (14, 17)), (2979, (-1, 4)), (519, (32, 36)), (3204, (31, 37)), (3337, (6, 11)), (3301, (6, 8)), (562, (-1, 4)), (2053, (11, 15)), (777, (6, 9)), (3142, (-1, 4)), (2862, (-1, 4)), (3095, (28, 34)), (2665, (19, 22)), (1184, (54, 58)), (614, (-1, 4)), (1210, (41, 44)), (3328, (6, 8)), (1891, (26, 30)), (2483, (-1, 4)), (1181, (-1, 4)), (856, (6, 10)), (3290, (-1, 4)), (249, (10, 13)), (244, (28, 32)), (98, (18, 25)), (1217, (-1, 4)), (1749, (-1, 4)), (2428, (21, 28)), (2895, (22, 26)), (2622, (6, 9)), (940, (19, 23)), (249, (-1, 4)), (877, (10, 15)), (380, (31, 36)), (1787, (42, 47)), (1922, (104, 106)), (732, (25, 29)), (1073, (-1, 4)), (792, (20, 26)), (1477, (24, 27)), (550, (33, 37)), (2514, (6, 10)), (698, (-1, 4)), (1288, (-1, 4)), (1950, (45, 47)), (912, (6, 10)), (754, (14, 17)), (320, (-1, 4)), (257, (17, 20)), (3448, (-1, 4)), (1298, (-1, 4)), (1262, (16, 19)), (3012, (-1, 4)), (2360, (11, 14)), (1378, (-1, 4)), (1968, (-1, 4)), (349, (-1, 4)), (2699, (6, 12)), (1353, (-1, 4)), (3217, (-1, 4)), (1000, (-1, 4)), (2642, (21, 25)), (2539, (21, 24)), (22, (6, 13)), (2197, (6, 9)), (765, (19, 26)), (3150, (-1, 4)), (1596, (6, 9)), (3260, (6, 9)), (2468, (-1, 4)), (834, (-1, 4)), (595, (11, 16)), (3281, (68, 74)), (2029, (45, 50)), (877, (61, 65)), (195, (-1, 4)), (3337, (12, 17)), (2399, (-1, 4)), (2063, (-1, 4)), (314, (18, 20)), (1857, (17, 20)), (2457, (-1, 4)), (323, (14, 19)), (1714, (35, 40)), (2398, (12, 18)), (2692, (-1, 4)), (314, (56, 59)), (793, (14, 17)), (1852, (53, 57)), (3358, (-1, 4)), (1988, (44, 49)), (2057, (83, 87)), (844, (14, 19)), (1857, (62, 65)), (1531, (-1, 4)), (1760, (-1, 4)), (692, (6, 9)), (980, (39, 44)), (1145, (-1, 4)), (1115, (23, 26)), (1235, (6, 8)), (536, (-1, 4)), (1657, (6, 10)), (356, (-1, 4)), (2530, (6, 9)), (1360, (-1, 4)), (1022, (-1, 4)), (331, (-1, 4)), (338, (6, 10)), (423, (22, 25)), (1324, (7, 12)), (364, (22, 25)), (566, (-1, 4)), (2525, (20, 23)), (1645, (6, 9)), (87, (12, 18)), (2668, (10, 13)), (1069, (18, 22)), (2744, (6, 8)), (2002, (37, 42)), (2057, (44, 47)), (1446, (-1, 4)), (1011, (-1, 4)), (3325, (6, 9)), (1210, (-1, 4)), (2254, (25, 31)), (1993, (25, 28)), (1048, (6, 10)), (2222, (14, 21)), (892, (-1, 4)), (2775, (40, 44)), (2682, (15, 18)), (1197, (6, 10)), (1836, (9, 13)), (1025, (-1, 4)), (2479, (-1, 4)), (431, (-1, 4)), (672, (-1, 4)), (270, (54, 60)), (3252, (6, 12)), (2231, (30, 35)), (3019, (22, 27)), (1816, (11, 16)), (1511, (-1, 4)), (1496, (-1, 4)), (1468, (6, 9)), (3297, (15, 20)), (1779, (6, 12)), (2437, (16, 19)), (1730, (-1, 4)), (480, (9, 14)), (2320, (-1, 4)), (701, (-1, 4)), (2750, (-1, 4)), (1291, (-1, 4)), (25, (6, 13)), (1363, (22, 26)), (1993, (20, 24)), (328, (11, 15)), (324, (40, 44)), (3376, (18, 23)), (2785, (-1, 4)), (1285, (33, 40)), (544, (17, 22)), (301, (-1, 4)), (592, (6, 11)), (215, (6, 9)), (3429, (-1, 4)), (1971, (-1, 4)), (849, (19, 23)), (1534, (6, 8)), (1122, (20, 23)), (1793, (10, 13)), (745, (6, 8)), (987, (20, 23)), (595, (6, 10)), (1238, (-1, 4)), (118, (6, 9)), (859, (13, 18)), (2642, (26, 32)), (948, (34, 37)), (1122, (6, 10)), (1481, (14, 19)), (3080, (31, 37)), (1622, (-1, 4)), (2604, (41, 47)), (1573, (14, 20)), (2213, (6, 9)), (931, (-1, 4)), (2109, (62, 65)), (2545, (9, 12)), (2188, (23, 29)), (1804, (42, 47)), (1654, (6, 10)), (2563, (-1, 4)), (1918, (-1, 4)), (1775, (11, 15)), (2167, (40, 44)), (2327, (15, 20)), (2586, (12, 17)), (3080, (-1, 4)), (888, (-1, 4)), (1108, (-1, 4)), (2173, (41, 45)), (580, (6, 8)), (1184, (17, 20)), (1007, (-1, 4)), (2090, (-1, 4)), (1705, (-1, 4)), (678, (29, 34)), (125, (6, 9)), (17, (-1, 4)), (1165, (-1, 4)), (1701, (11, 17)), (2085, (28, 31)), (1809, (-1, 4)), (2792, (-1, 4)), (1942, (-1, 4)), (865, (6, 12)), (1327, (-1, 4)), (1048, (52, 60)), (1043, (6, 8)), (1363, (-1, 4)), (3420, (6, 11)), (3046, (13, 18)), (1760, (53, 58)), (1168, (-1, 4)), (3029, (32, 38)), (632, (6, 10)), (617, (58, 62)), (2219, (30, 37)), (2601, (-1, 4)), (3248, (24, 27)), (373, (-1, 4)), (2678, (-1, 4)), (1839, (12, 15)), (2226, (-1, 4)), (3281, (-1, 4)), (3214, (10, 14)), (2425, (10, 14)), (3317, (6, 9)), (692, (53, 56)), (1922, (107, 112)), (923, (9, 14)), (3173, (-1, 4)), (2765, (43, 48)), (639, (11, 15)), (3420, (-1, 4)), (3195, (6, 9)), (2295, (-1, 4)), (444, (-1, 4)), (1324, (19, 22)), (1651, (9, 12)), (1197, (38, 42)), (270, (46, 50)), (1877, (-1, 4)), (323, (6, 9)), (419, (-1, 4)), (3049, (36, 41)), (1682, (-1, 4)), (495, (-1, 4)), (1714, (27, 30)), (653, (-1, 4)), (2702, (-1, 4)), (1099, (66, 72)), (770, (15, 21)), (606, (14, 19)), (39, (-1, 4)), (1304, (-1, 4)), (1584, (6, 9)), (2838, (33, 40)), (2148, (-1, 4)), (2410, (-1, 4)), (3146, (21, 28)), (3328, (25, 28)), (1104, (-1, 4)), (1958, (68, 72)), (1857, (11, 16)), (3334, (21, 24)), (1575, (7, 12)), (314, (-1, 4)), (2952, (-1, 4)), (3337, (18, 21)), (2428, (46, 52)), (1133, (-1, 4)), (1742, (15, 19)), (2406, (-1, 4)), (3049, (-1, 4)), (873, (10, 15)), (3116, (37, 42)), (811, (13, 18)), (736, (10, 13)), (62, (6, 8)), (3351, (6, 10)), (2348, (29, 37)), (2014, (-1, 4)), (1579, (-1, 4)), (636, (-1, 4)), (3460, (6, 10)), (1640, (-1, 4)), (2744, (40, 47)), (2659, (-1, 4)), (3234, (-1, 4)), (589, (-1, 4)), (1870, (-1, 4)), (440, (19, 24)), (2136, (15, 23)), (2548, (25, 28)), (1418, (-1, 4)), (1488, (6, 9)), (562, (24, 28)), (2437, (-1, 4)), (915, (31, 35)), (625, (-1, 4)), (450, (-1, 4)), (207, (25, 30)), (1925, (72, 75)), (2437, (36, 44)), (1250, (48, 56)), (2206, (-1, 4)), (1108, (15, 18)), (151, (36, 41)), (844, (6, 9)), (502, (-1, 4)), (2918, (18, 21)), (2708, (-1, 4)), (2231, (8, 11)), (1891, (-1, 4)), (43, (6, 8)), (1418, (24, 28)), (2796, (29, 36)), (131, (10, 13)), (2939, (-1, 4)), (3046, (6, 12)), (2360, (51, 55)), (1125, (-1, 4)), (43, (9, 13)), (81, (-1, 4)), (1954, (-1, 4)), (1396, (30, 33)), (1693, (-1, 4)), (2156, (6, 9)), (2539, (-1, 4)), (3388, (-1, 4)), (311, (-1, 4)), (2344, (-1, 4)), (725, (-1, 4)), (2057, (48, 53)), (3439, (-1, 4)), (2551, (-1, 4)), (1550, (-1, 4)), (1346, (6, 10)), (1457, (23, 28)), (777, (10, 13)), (155, (40, 44)), (1294, (10, 13)), (1629, (6, 9)), (1585, (-1, 4)), (2178, (-1, 4)), (2533, (-1, 4)), (1197, (20, 27)), (2076, (33, 37)), (1662, (-1, 4)), (2210, (10, 13)), (2963, (6, 9)), (859, (43, 46)), (298, (6, 9)), (317, (12, 18)), (182, (-1, 4)), (2076, (24, 29)), (754, (6, 9)), (606, (20, 24)), (1262, (-1, 4)), (1958, (40, 45)), (1826, (6, 10)), (1663, (15, 18)), (2858, (-1, 4)), (3369, (-1, 4)), (1829, (-1, 4)), (2433, (6, 11)), (1982, (10, 13)), (2373, (-1, 4)), (2419, (28, 36)), (1492, (20, 23)), (2101, (-1, 4)), (862, (-1, 4)), (2775, (-1, 4)), (666, (-1, 4)), (401, (-1, 4)), (562, (17, 23)), (1136, (6, 10)), (3396, (9, 14)), (2441, (48, 55)), (2383, (6, 9)), (1259, (9, 12)), (2383, (14, 20)), (2021, (25, 29)), (2891, (18, 24)), (177, (25, 28)), (409, (15, 19)), (278, (6, 8)), (3065, (-1, 4)), (2136, (-1, 4)), (1298, (42, 49)), (17, (6, 12)), (317, (-1, 4)), (2366, (-1, 4)), (732, (-1, 4)), (2555, (18, 22)), (2533, (55, 60)), (566, (34, 38)), (2378, (6, 10)), (1171, (10, 14)), (1678, (10, 13)), (1579, (33, 39)), (2222, (-1, 4)), (1787, (-1, 4)), (2934, (8, 16)), (1452, (-1, 4)), (1925, (64, 71)), (3046, (-1, 4)), (3116, (30, 36)), (2330, (-1, 4)), (2850, (-1, 4)), (2775, (53, 57)), (923, (15, 20)), (2394, (15, 21)), (182, (52, 58)), (2761, (28, 35)), (188, (-1, 4)), (211, (6, 10)), (602, (-1, 4)), (2671, (-1, 4)), (2489, (8, 11)), (2213, (72, 76)), (3401, (6, 11)), (3244, (21, 25)), (3469, (-1, 4)), (1422, (-1, 4)), (2402, (6, 9)), (807, (-1, 4)), (1048, (-1, 4)), (1104, (27, 30)), (454, (-1, 4)), (531, (19, 23)), (1457, (-1, 4)), (492, (6, 10)), (2685, (-1, 4)), (1238, (22, 26)), (253, (-1, 4)), (3366, (6, 10)), (394, (6, 13)), (2104, (6, 10)), (944, (8, 12)), (1579, (15, 21)), (566, (19, 23)), (1386, (21, 24)), (2021, (-1, 4)), (2076, (-1, 4)), (2601, (23, 26)), (1492, (37, 40)), (1175, (6, 9)), (29, (6, 10)), (3029, (15, 18)), (1523, (-1, 4)), (324, (-1, 4)), (1631, (6, 9)), (1343, (-1, 4)), (2344, (44, 50)), (1537, (15, 21)), (713, (-1, 4)), (2738, (36, 42)), (2956, (10, 15)), (387, (6, 9)), (1152, (11, 16)), (653, (14, 17)), (1537, (-1, 4)), (739, (11, 14)), (1968, (18, 22)), (1523, (17, 21)), (1140, (85, 89)), (1187, (6, 10)), (1152, (88, 92)), (3341, (6, 9)), (134, (-1, 4)), (2094, (-1, 4)), (2722, (40, 46)), (653, (39, 44)), (901, (27, 30)), (1285, (10, 13)), (1272, (6, 10)), (523, (23, 27)), (1765, (-1, 4)), (3260, (-1, 4)), (2160, (10, 15)), (1436, (13, 17)), (948, (18, 22)), (1842, (-1, 4)), (901, (-1, 4)), (1408, (11, 15)), (1221, (28, 31)), (511, (13, 16)), (987, (15, 19)), (2907, (6, 10)), (1378, (10, 13)), (984, (14, 20)), (2585, (6, 9)), (672, (6, 10)), (519, (6, 8)), (2613, (24, 27)), (1626, (-1, 4)), (2626, (6, 9)), (413, (-1, 4)), (1112, (6, 10)), (2231, (-1, 4)), (1396, (45, 49)), (359, (6, 9)), (2586, (6, 11)), (781, (11, 14)), (1727, (6, 10)), (2838, (22, 28)), (380, (37, 42)), (1066, (6, 10)), (2631, (13, 19)), (1175, (10, 13)), (2028, (6, 9)), (1553, (37, 40)), (2757, (6, 13)), (3388, (19, 28)), (684, (-1, 4)), (920, (-1, 4)), (1939, (-1, 4)), (2397, (6, 9)), (1796, (11, 14)), (191, (6, 9)), (368, (17, 22)), (1829, (31, 34)), (684, (10, 13)), (1343, (9, 12)), (1739, (-1, 4)), (1701, (6, 10)), (3373, (11, 16)), (873, (16, 19)), (2337, (6, 10)), (3005, (6, 10)), (1061, (-1, 4)), (2975, (-1, 4)), (659, (11, 18)), (3056, (24, 29)), (1422, (24, 28)), (2511, (-1, 4)), (507, (20, 24)), (2080, (38, 42)), (2419, (-1, 4)), (2298, (30, 34)), (3301, (13, 18)), (2682, (10, 14)), (1600, (6, 9)), (2820, (14, 21)), (3358, (6, 8)), (480, (15, 18)), (2682, (26, 32)), (2267, (-1, 4)), (394, (20, 25)), (32, (-1, 4)), (2344, (31, 34)), (3109, (11, 14)), (428, (6, 8)), (1029, (-1, 4)), (346, (6, 8)), (185, (29, 32)), (1439, (-1, 4)), (50, (31, 36)), (1500, (-1, 4)), (2968, (6, 10)), (3211, (11, 14)), (589, (15, 18)), (3294, (6, 10)), (837, (68, 73)), (1870, (26, 29)), (2738, (-1, 4)), (527, (23, 27)), (2891, (6, 9)), (1333, (9, 13)), (2555, (-1, 4)), (3436, (10, 14)), (1336, (11, 15)), (108, (10, 12)), (2178, (6, 11)), (2067, (-1, 4)), (2594, (-1, 4)), (1277, (77, 80)), (765, (6, 12)), (1319, (11, 14)), (1557, (25, 31)), (257, (57, 60)), (1370, (-1, 4)), (1457, (14, 18)), (341, (-1, 4)), (598, (-1, 4)), (46, (26, 29)), (146, (-1, 4)), (257, (45, 51)), (992, (13, 16)), (2011, (-1, 4)), (1958, (6, 14)), (666, (18, 24)), (849, (12, 15)), (1477, (19, 23)), (3198, (6, 9)), (1122, (11, 17)), (3135, (6, 9)), (3187, (11, 14)), (3069, (-1, 4)), (1971, (10, 13)), (207, (13, 17)), (1845, (-1, 4)), (3297, (6, 10)), (1492, (-1, 4)), (801, (-1, 4)), (719, (6, 9)), (589, (32, 38)), (1125, (26, 33)), (2254, (15, 19)), (2251, (6, 8)), (3273, (6, 13)), (2662, (-1, 4)), (1327, (10, 13)), (2995, (6, 8)), (1018, (6, 8)), (2585, (19, 25)), (1165, (6, 9)), (304, (32, 35)), (3135, (-1, 4)), (877, (37, 40)), (2525, (-1, 4)), (1979, (6, 9)), (3379, (-1, 4)), (1481, (-1, 4)), (2018, (28, 34)), (1094, (10, 14)), (2057, (34, 38)), (257, (-1, 4)), (897, (-1, 4)), (292, (22, 27)), (2924, (-1, 4)), (1099, (14, 17)), (625, (30, 34)), (2796, (-1, 4)), (1912, (45, 49)), (2219, (11, 14)), (3373, (6, 10)), (784, (27, 30)), (2206, (6, 9)), (2771, (-1, 4)), (1887, (44, 48)), (1936, (29, 34)), (253, (22, 28)), (1982, (-1, 4)), (1678, (6, 9)), (2029, (19, 22)), (1616, (6, 10)), (2492, (-1, 4)), (1540, (6, 9)), (2934, (36, 41)), (128, (-1, 4)), (557, (-1, 4)), (182, (27, 30)), (68, (12, 18)), (1373, (6, 10)), (3256, (-1, 4)), (815, (6, 10)), (1670, (6, 12)), (228, (6, 12)), (1350, (11, 14)), (1852, (-1, 4)), (3281, (75, 80)), (218, (-1, 4)), (1230, (14, 21))])
[((17, (-1, 4)), "*MOT:\twhat's that ?\n"), ((17, (6, 12)), "*MOT:\twhat's that ?\n"), ((22, (6, 13)), '*CHI:\tpumpkin .\n'), ((25, (-1, 4)), '*MOT:\tpumpkin ?\n'), ((25, (6, 13)), '*MOT:\tpumpkin ?\n'), ((29, (6, 10)), '*CHI:\tyeah .\n'), ((32, (-1, 4)), '*MOT:\tyeah ?\n'), ((32, (6, 10)), '*MOT:\tyeah ?\n'), ((36, (10, 14)), '*CHI:\thm: yuck !\n'), ((39, (-1, 4)), '*MOT:\tdid you make it ?\n'), ((43, (6, 8)), '*CHI:\tmm yeah [=? yuck] !\n'), ((43, (9, 13)), '*CHI:\tmm yeah [=? yuck] !\n'), ((43, (18, 23)), '*CHI:\tmm yeah [=? yuck] !\n'), ((46, (-1, 4)), '*MOT:\tyou did a very good job .\n'), ((46, (26, 29)), '*MOT:\tyou did a very good job .\n'), ((50, (-1, 4)), '*CHI:\tso why did you stick the holes in ?\n'), ((50, (31, 36)), '*CHI:\tso why did you stick the holes in ?\n'), ((56, (-1, 4)), '*MOT:\tso you could see out of the eyes .\n'), ((56, (34, 38)), '*MOT:\tso you could see out of the eyes .\n'), ((62, (6, 8)), "*CHI:\toh I don't wanna see out of the eyes .\n"), ((62, (38, 42)), "*CHI:\toh I don't wanna see out of the eyes .\n"), ((68, (12, 18)), '*MOT:\t0 [=! clears throat] .\n'), ((77, (-1, 4)), '*CHI:\twhy ?\n'), ((81, (-1, 4)), "*MOT:\t(be)cause you can't eat while you're playing with it .\n"), ((87, (12, 18)), '*MOT:\t0 [=! clears throat] .\n'), ((88, (11, 14)), '*CHI:\t(..) www &=noises .\n'), ((89, (-1, 4)), "*MOT:\tdid you have fun over Aunt Julie's this weekend ?\n"), ((89, (46, 53)), "*MOT:\tdid you have fun over Aunt Julie's this weekend ?\n"), ((95, (6, 10)), '*CHI:\tyeah .\n'), ((98, (6, 9)), '*CHI:\t(.) is that sausage ?\n'), ((98, (18, 25)), '*CHI:\t(.) is that sausage ?\n'), ((102, (9, 15)), "*MOT:\tno that's xxx [//] meatballs .\n"), ((102, (25, 34)), "*MOT:\tno that's xxx [//] meatballs .\n"), ((108, (10, 12)), '*CHI:\t(.) mm .\n'), ((111, (-1, 4)), '*CHI:\tis that meat ?\n'), ((111, (14, 18)), '*CHI:\tis that meat ?\n'), ((115, (6, 9)), '*MOT:\tyup .\n'), ((118, (6, 9)), "*MOT:\tyes that's meat .\n"), ((118, (17, 21)), "*MOT:\tyes that's meat .\n"), ((121, (-1, 4)), '*CHI:\tis this [!] &m meatballs ?\n'), ((121, (18, 30)), '*CHI:\tis this [!] &m meatballs ?\n'), ((125, (6, 9)), '*MOT:\tyes .\n'), ((128, (-1, 4)), '*MOT:\tGrandma made (th)em for you .\n'), ((131, (10, 13)), '*MOT:\t(.) mhm .\n'), ((134, (-1, 4)), '*CHI:\tknow what ?\n'), ((142, (14, 17)), '*CHI:\tGrandma [?] can make hamburgers ?\n'), ((142, (27, 37)), '*CHI:\tGrandma [?] can make hamburgers ?\n'), ((146, (-1, 4)), '*CHI:\twas cooking <what with xxx> [>] .\n'), ((151, (11, 16)), "*MOT:\t<why don't you finish chewing your> [<] +/.\n"), ((151, (36, 41)), "*MOT:\t<why don't you finish chewing your> [<] +/.\n"), ((151, (42, 45)), "*MOT:\t<why don't you finish chewing your> [<] +/.\n"), ((155, (10, 15)), "*MOT:\twhy don't you finish chewing your food so I can understand you .\n"), ((155, (40, 44)), "*MOT:\twhy don't you finish chewing your food so I can understand you .\n"), ((161, (6, 10)), '*CHI:\tokay .\n'), ((173, (6, 10)), '*CHI:\t&-um &-um I mean was bakin(g) (.) somebody splashed +...\n'), ((177, (25, 28)), '*CHI:\tsomething splashed [!] at her when she was cook [//] (.) cooking (.) herself .\n'), ((177, (49, 53)), '*CHI:\tsomething splashed [!] at her when she was cook [//] (.) cooking (.) herself .\n'), ((182, (-1, 4)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((182, (11, 14)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((182, (27, 30)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((182, (52, 58)), '*CHI:\twith [/] with the &t toy [/] toy bakin(g) [=? bacon] .\n'), ((185, (-1, 4)), '*CHI:\tand somethin(g) splash [!] at her !\n'), ((185, (22, 28)), '*CHI:\tand somethin(g) splash [!] at her !\n'), ((185, (29, 32)), '*CHI:\tand somethin(g) splash [!] at her !\n'), ((188, (-1, 4)), '*CHI:\tand somethin(g) splut@n [!] (.) like this .\n'), ((191, (6, 9)), '*CHI:\twww [=! splurt noise] .\n'), ((191, (14, 20)), '*CHI:\twww [=! splurt noise] .\n'), ((191, (21, 27)), '*CHI:\twww [=! splurt noise] .\n'), ((195, (-1, 4)), '*CHI:\tand [/] and it hurt and it all bleed down .\n'), ((195, (10, 13)), '*CHI:\tand [/] and it hurt and it all bleed down .\n'), ((200, (15, 19)), '*MOT:\tdown her face ?\n'), ((204, (6, 9)), '*CHI:\tyup .\n'), ((207, (-1, 4)), '*MOT:\ton the side of her cheek ?\n'), ((207, (13, 17)), '*MOT:\ton the side of her cheek ?\n'), ((207, (25, 30)), '*MOT:\ton the side of her cheek ?\n'), ((211, (6, 10)), '*CHI:\tyeah [/] yeah and it got [!] (.) down her throat .\n'), ((211, (48, 54)), '*CHI:\tyeah [/] yeah and it got [!] (.) down her throat .\n'), ((215, (6, 9)), '*MOT:\tugh .\n'), ((218, (-1, 4)), '*MOT:\twhere did that happen ?\n'), ((222, (6, 9)), '*CHI:\t(.) and it got on her &-um (.) hand [?] .\n'), ((222, (37, 41)), '*CHI:\t(.) and it got on her &-um (.) hand [?] .\n'), ((228, (6, 12)), "*MOT:\tthat's gross .\n"), ((231, (23, 27)), '*CHI:\tan it got on her food .\n'), ((234, (-1, 4)), '*MOT:\twas she alright ?\n'), ((238, (6, 9)), '*CHI:\tmhm .\n'), ((244, (-1, 4)), '*CHI:\tbut I saw that at her home ?\n'), ((244, (28, 32)), '*CHI:\tbut I saw that at her home ?\n'), ((249, (-1, 4)), '*CHI:\tand [/] and I sneaked over her door ?\n'), ((249, (10, 13)), '*CHI:\tand [/] and I sneaked over her door ?\n'), ((249, (37, 41)), '*CHI:\tand [/] and I sneaked over her door ?\n'), ((253, (-1, 4)), '*CHI:\tand [/] and her mother woke up and +...\n'), ((253, (10, 13)), '*CHI:\tand [/] and her mother woke up and +...\n'), ((253, (22, 28)), '*CHI:\tand [/] and her mother woke up and +...\n'), ((257, (-1, 4)), "*CHI:\tand in her (.) and [//] and Kimberly's mother said get outta [: out of] here Chi .\n"), ((257, (17, 20)), "*CHI:\tand in her (.) and [//] and Kimberly's mother said get outta [: out of] here Chi .\n"), ((257, (45, 51)), "*CHI:\tand in her (.) and [//] and Kimberly's mother said get outta [: out of] here Chi .\n"), ((257, (57, 60)), "*CHI:\tand in her (.) and [//] and Kimberly's mother said get outta [: out of] here Chi .\n"), ((257, (61, 66)), "*CHI:\tand in her (.) and [//] and Kimberly's mother said get outta [: out of] here Chi .\n"), ((270, (14, 19)), "*MOT:\t<that's when> [//] that was during play time at school ?\n"), ((270, (41, 45)), "*MOT:\t<that's when> [//] that was during play time at school ?\n"), ((270, (46, 50)), "*MOT:\t<that's when> [//] that was during play time at school ?\n"), ((270, (54, 60)), "*MOT:\t<that's when> [//] that was during play time at school ?\n"), ((275, (6, 9)), '*CHI:\tyup .\n'), ((278, (6, 8)), '*MOT:\tmm .\n'), ((285, (-1, 4)), '*MOT:\twho [?] [<] ?\n'), ((285, (14, 17)), '*MOT:\twho [?] [<] ?\n'), ((292, (-1, 4)), '*CHI:\tbecause I was a tiger .\n'), ((292, (22, 27)), '*CHI:\tbecause I was a tiger .\n'), ((295, (11, 15)), '*CHI:\t<and and> [//] because I was &ti tiger .\n'), ((295, (39, 44)), '*CHI:\t<and and> [//] because I was &ti tiger .\n'), ((298, (6, 9)), '*MOT:\tmhm [>] .\n'), ((298, (10, 13)), '*MOT:\tmhm [>] .\n'), ((301, (-1, 4)), '*CHI:\twith [?] [<] +//.\n'), ((304, (7, 11)), '*CHI:\t<yeah yeah yeah> [/] yeah yup .\n'), ((304, (17, 22)), '*CHI:\t<yeah yeah yeah> [/] yeah yup .\n'), ((304, (32, 35)), '*CHI:\t<yeah yeah yeah> [/] yeah yup .\n'), ((308, (30, 35)), '*CHI:\t&a &a (.) and me and &b &bwuh .\n'), ((311, (-1, 4)), '*CHI:\tand me and Brian [?] .\n'), ((314, (-1, 4)), '*CHI:\tand [/] and &m &m me [/] me and Brian (.) ate [?] xxx .\n'), ((314, (10, 13)), '*CHI:\tand [/] and &m &m me [/] me and Brian (.) ate [?] xxx .\n'), ((314, (18, 20)), '*CHI:\tand [/] and &m &m me [/] me and Brian (.) ate [?] xxx .\n'), ((314, (48, 51)), '*CHI:\tand [/] and &m &m me [/] me and Brian (.) ate [?] xxx .\n'), ((314, (52, 55)), '*CHI:\tand [/] and &m &m me [/] me and Brian (.) ate [?] xxx .\n'), ((314, (56, 59)), '*CHI:\tand [/] and &m &m me [/] me and Brian (.) ate [?] xxx .\n'), ((317, (-1, 4)), '*CHI:\twas a ti:ger .\n'), ((317, (12, 18)), '*CHI:\twas a ti:ger .\n'), ((320, (-1, 4)), '*CHI:\tand he did the &=imit:tiger .\n'), ((323, (6, 9)), '*CHI:\twww [=! tiger noises] .\n'), ((323, (14, 19)), '*CHI:\twww [=! tiger noises] .\n'), ((324, (-1, 4)), '*CHI:\tand they got outta [: out of] the cage .\n'), ((324, (40, 44)), '*CHI:\tand they got outta [: out of] the cage .\n'), ((328, (11, 15)), '*CHI:\t<and and> [/] <and we> [/] (.) and we chased all the people .\n'), ((328, (59, 65)), '*CHI:\t<and and> [/] <and we> [/] (.) and we chased all the people .\n'), ((331, (-1, 4)), '*MOT:\tdid you catch anyone ?\n'), ((331, (20, 26)), '*MOT:\tdid you catch anyone ?\n'), ((335, (6, 9)), '*CHI:\tyup !\n'), ((338, (6, 10)), '*CHI:\t<and and &w and> [/] (.) and we ate [!] them .\n'), ((341, (-1, 4)), '*CHI:\tand we ate all the people .\n'), ((341, (25, 31)), '*CHI:\tand we ate all the people .\n'), ((346, (6, 8)), "*MOT:\toh I don't like people .\n"), ((346, (22, 28)), "*MOT:\toh I don't like people .\n"), ((349, (-1, 4)), "*MOT:\tI don't think they taste good .\n"), ((352, (-1, 4)), '*CHI:\tbecause it makes us sick ?\n'), ((356, (-1, 4)), '*MOT:\tit would make me [!] sick .\n'), ((356, (27, 31)), '*MOT:\tit would make me [!] sick .\n'), ((359, (6, 9)), '*CHI:\t(.) does it make me sick ?\n'), ((364, (-1, 4)), '*CHI:\tI [//] (.) &-um [>] .\n'), ((364, (22, 25)), '*CHI:\tI [//] (.) &-um [>] .\n'), ((365, (10, 13)), '*MOT:\tugh [<] .\n'), ((368, (17, 22)), '*MOT:\txxx [>] my hands .\n'), ((372, (6, 9)), '*CHI:\twww &=noise .\n'), ((373, (-1, 4)), "*MOT:\tI don't know .\n"), ((376, (6, 8)), '*MOT:\t+^ does it make you sick ?\n'), ((380, (31, 36)), "*CHI:\t+^ <I'm (.) I'm> [/] I'm gonna stick to your hands .\n"), ((380, (37, 42)), "*CHI:\t+^ <I'm (.) I'm> [/] I'm gonna stick to your hands .\n"), ((380, (51, 56)), "*CHI:\t+^ <I'm (.) I'm> [/] I'm gonna stick to your hands .\n"), ((384, (6, 8)), '*MOT:\tew !\n'), ((387, (6, 9)), '*CHI:\teee !\n'), ((390, (18, 23)), '*MOT:\twhat like a tiger ?\n'), ((394, (-1, 4)), "*MOT:\twhat're you a tiger ?\n"), ((394, (6, 13)), "*MOT:\twhat're you a tiger ?\n"), ((394, (20, 25)), "*MOT:\twhat're you a tiger ?\n"), ((398, (6, 8)), '*MOT:\tew !\n'), ((401, (-1, 4)), "*MOT:\t<don't do that> [>] !\n"), ((401, (22, 25)), "*MOT:\t<don't do that> [>] !\n"), ((405, (6, 12)), "*MOT:\tthat's &=laughs yucky .\n"), ((409, (15, 19)), '*MOT:\teat your food .\n'), ((413, (-1, 4)), '*MOT:\tsit down .\n'), ((416, (-1, 4)), '*MOT:\tChi sit (.) please .\n'), ((416, (10, 13)), '*MOT:\tChi sit (.) please .\n'), ((416, (18, 24)), '*MOT:\tChi sit (.) please .\n'), ((419, (-1, 4)), "*MOT:\tI don't want you doin(g) that .\n"), ((423, (9, 15)), "*MOT:\t+^ that's gross [>] .\n"), ((423, (22, 25)), "*MOT:\t+^ that's gross [>] .\n"), ((428, (6, 8)), '*MOT:\tew !\n'), ((431, (-1, 4)), '*MOT:\tsit down .\n'), ((440, (-1, 4)), "*MOT:\tyou're not a tiger now .\n"), ((440, (19, 24)), "*MOT:\tyou're not a tiger now .\n"), ((444, (-1, 4)), '*MOT:\ttake a bite .\n'), ((444, (13, 17)), '*MOT:\ttake a bite .\n'), ((447, (6, 12)), "*MOT:\tyou're so hungry .\n"), ((450, (-1, 4)), '*MOT:\ttake a bite .\n'), ((450, (13, 17)), '*MOT:\ttake a bite .\n'), ((454, (-1, 4)), '*CHI:\tI asked for that ?\n'), ((463, (10, 13)), '*CHI:\t(.) hm: .\n'), ((466, (-1, 4)), '*CHI:\tI ask for that ?\n'), ((470, (-1, 4)), '*MOT:\tfor your supper ?\n'), ((470, (15, 21)), '*MOT:\tfor your supper ?\n'), ((477, (6, 9)), '*CHI:\thm: [>] .\n'), ((477, (10, 13)), '*CHI:\thm: [>] .\n'), ((480, (9, 14)), '*MOT:\t<I just> [<] gave it to you .\n'), ((480, (15, 18)), '*MOT:\t<I just> [<] gave it to you .\n'), ((488, (-1, 4)), "*MOT:\tyou're not playing with that now .\n"), ((492, (6, 10)), '*MOT:\tplay that after you finish supper .\n'), ((495, (-1, 4)), '*MOT:\tokay ?\n'), ((495, (6, 10)), '*MOT:\tokay ?\n'), ((502, (-1, 4)), '*MOT:\tsit down and eat first .\n'), ((507, (20, 24)), '*CHI:\t&m &m &m Mama play miano [: piano] [?] .\n'), ((507, (25, 30)), '*CHI:\t&m &m &m Mama play miano [: piano] [?] .\n'), ((507, (34, 40)), '*CHI:\t&m &m &m Mama play miano [: piano] [?] .\n'), ((507, (41, 44)), '*CHI:\t&m &m &m Mama play miano [: piano] [?] .\n'), ((511, (10, 12)), '*CHI:\t(.) ah huh ?\n'), ((511, (13, 16)), '*CHI:\t(.) ah huh ?\n'), ((515, (16, 20)), '*MOT:\tthe funny mask [?] ?\n'), ((515, (21, 24)), '*MOT:\tthe funny mask [?] ?\n'), ((519, (6, 8)), '*CHI:\t&i is [/] is it a sad (.) mask ?\n'), ((519, (28, 31)), '*CHI:\t&i is [/] is it a sad (.) mask ?\n'), ((519, (32, 36)), '*CHI:\t&i is [/] is it a sad (.) mask ?\n'), ((523, (11, 14)), '*MOT:\t&-uh (.) kind of yeah .\n'), ((523, (15, 19)), '*MOT:\t&-uh (.) kind of yeah .\n'), ((523, (23, 27)), '*MOT:\t&-uh (.) kind of yeah .\n'), ((527, (10, 13)), '*CHI:\twhy [?] is a sad mask ?\n'), ((527, (23, 27)), '*CHI:\twhy [?] is a sad mask ?\n'), ((531, (-1, 4)), "*MOT:\tI don't know it's just sad .\n"), ((531, (19, 23)), "*MOT:\tI don't know it's just sad .\n"), ((536, (-1, 4)), '*MOT:\t<she must> [>] be feeling pretty sad .\n'), ((539, (-1, 4)), '*CHI:\t&=gulps [<] .\n'), ((544, (-1, 4)), "*MOT:\tI dunno [: don't know] why do you think she's sad ?\n"), ((544, (17, 22)), "*MOT:\tI dunno [: don't know] why do you think she's sad ?\n"), ((550, (-1, 4)), '*CHI:\tbecause she misses (.) her baby ?\n'), ((550, (33, 37)), '*CHI:\tbecause she misses (.) her baby ?\n'), ((557, (-1, 4)), '*CHI:\twhy ?\n'), ((562, (-1, 4)), "*MOT:\twhat's her baby's name ?\n"), ((562, (17, 23)), "*MOT:\twhat's her baby's name ?\n"), ((562, (24, 28)), "*MOT:\twhat's her baby's name ?\n"), ((566, (-1, 4)), '*CHI:\tdoes (.) xxx baby needs his name [?] ?\n'), ((566, (19, 23)), '*CHI:\tdoes (.) xxx baby needs his name [?] ?\n'), ((566, (34, 38)), '*CHI:\tdoes (.) xxx baby needs his name [?] ?\n'), ((570, (-1, 4)), '*CHI:\the be .\n'), ((573, (10, 16)), "*MOT:\ther baby's name is Stevie ?\n"), ((573, (17, 21)), "*MOT:\ther baby's name is Stevie ?\n"), ((577, (9, 11)), '*CHI:\tno tv [?] .\n'), ((577, (12, 15)), '*CHI:\tno tv [?] .\n'), ((580, (6, 8)), '*MOT:\ttv ?\n'), ((589, (-1, 4)), '*MOT:\tsit down (.) in the chair please .\n'), ((589, (15, 18)), '*MOT:\tsit down (.) in the chair please .\n'), ((589, (26, 31)), '*MOT:\tsit down (.) in the chair please .\n'), ((589, (32, 38)), '*MOT:\tsit down (.) in the chair please .\n'), ((592, (-1, 4)), "*MOT:\tdon't (.) tip in it .\n"), ((592, (6, 11)), "*MOT:\tdon't (.) tip in it .\n"), ((592, (16, 19)), "*MOT:\tdon't (.) tip in it .\n"), ((595, (6, 10)), "*MOT:\tit's gonna fall .\n"), ((595, (11, 16)), "*MOT:\tit's gonna fall .\n"), ((595, (17, 21)), "*MOT:\tit's gonna fall .\n"), ((598, (-1, 4)), '*CHI:\thuh ?\n'), ((598, (6, 9)), '*CHI:\thuh ?\n'), ((602, (-1, 4)), "*MOT:\tdon't tip it .\n"), ((606, (9, 13)), "*MOT:\t+^ it's gonna fall .\n"), ((606, (14, 19)), "*MOT:\t+^ it's gonna fall .\n"), ((606, (20, 24)), "*MOT:\t+^ it's gonna fall .\n"), ((610, (-1, 4)), '*CHI:\twhy ?\n'), ((614, (-1, 4)), '*MOT:\tbecause it will .\n'), ((617, (-1, 4)), '*CHI:\tbecause it will it [//] because it will it gets (.) boom !\n'), ((617, (58, 62)), '*CHI:\tbecause it will it [//] because it will it gets (.) boom !\n'), ((625, (-1, 4)), '*CHI:\tand I will (.) crack my head open ?\n'), ((625, (21, 26)), '*CHI:\tand I will (.) crack my head open ?\n'), ((625, (30, 34)), '*CHI:\tand I will (.) crack my head open ?\n'), ((629, (-1, 4)), '*MOT:\tyou could .\n'), ((632, (6, 10)), '*CHI:\t<and there will> [//] and I will bleed ?\n'), ((636, (-1, 4)), '*MOT:\tit could happen .\n'), ((639, (11, 15)), '*CHI:\t<and and> [/] and I will bleed ?\n'), ((639, (16, 19)), '*CHI:\t<and and> [/] and I will bleed ?\n'), ((643, (-1, 4)), '*CHI:\tand I will bleed all over the &fl place ?\n'), ((643, (40, 45)), '*CHI:\tand I will bleed all over the &fl place ?\n'), ((649, (-1, 4)), '*MOT:\tpossibly .\n'), ((653, (-1, 4)), "*CHI:\tbecause [/] because to there's a blood in there ?\n"), ((653, (14, 17)), "*CHI:\tbecause [/] because to there's a blood in there ?\n"), ((653, (39, 44)), "*CHI:\tbecause [/] because to there's a blood in there ?\n"), ((659, (6, 10)), "*MOT:\tyeah there's blood inside you .\n"), ((659, (11, 18)), "*MOT:\tyeah there's blood inside you .\n"), ((659, (19, 24)), "*MOT:\tyeah there's blood inside you .\n"), ((662, (-1, 4)), '*CHI:\twhy ?\n'), ((666, (-1, 4)), "*MOT:\tbecause (.) that's like your +...\n"), ((666, (18, 24)), "*MOT:\tbecause (.) that's like your +...\n"), ((672, (-1, 4)), '*MOT:\tfuel [?] .\n'), ((672, (6, 10)), '*MOT:\tfuel [?] .\n'), ((672, (11, 14)), '*MOT:\tfuel [?] .\n'), ((675, (6, 8)), '*CHI:\tmm .\n'), ((678, (-1, 4)), "*MOT:\tif you didn't have any blood inside you you wouldn't be alive .\n"), ((678, (29, 34)), "*MOT:\tif you didn't have any blood inside you you wouldn't be alive .\n"), ((684, (-1, 4)), '*CHI:\tbut [/] but we do ?\n'), ((684, (10, 13)), '*CHI:\tbut [/] but we do ?\n'), ((688, (6, 9)), '*MOT:\tmhm .\n'), ((692, (-1, 4)), '*CHI:\t(.) do you wanna (.) see (.) these &-um do the xxx ?\n'), ((692, (6, 9)), '*CHI:\t(.) do you wanna (.) see (.) these &-um do the xxx ?\n'), ((692, (53, 56)), '*CHI:\t(.) do you wanna (.) see (.) these &-um do the xxx ?\n'), ((698, (-1, 4)), '*MOT:\tChi (.) sit down please .\n'), ((698, (23, 29)), '*MOT:\tChi (.) sit down please .\n'), ((701, (-1, 4)), '*MOT:\tdo you like the music ?\n'), ((701, (22, 27)), '*MOT:\tdo you like the music ?\n'), ((705, (-1, 4)), '*CHI:\there let me do this .\n'), ((713, (-1, 4)), '*CHI:\tit was &n &n xxx .\n'), ((719, (6, 9)), '*CHI:\twww .\n'), ((721, (-1, 4)), '*MOT:\tsit up please .\n'), ((721, (13, 19)), '*MOT:\tsit up please .\n'), ((724, (12, 18)), '*CHI:\t0 [=! laughs wildly] .\n'), ((724, (19, 26)), '*CHI:\t0 [=! laughs wildly] .\n'), ((725, (-1, 4)), '*MOT:\tChi sit up .\n'), ((732, (-1, 4)), '*MOT:\tsit up please your feet .\n'), ((732, (25, 29)), '*MOT:\tsit up please your feet .\n'), ((736, (10, 13)), '*MOT:\tone [>] +...\n'), ((739, (6, 10)), '*CHI:\tyuck [<] .\n'), ((739, (11, 14)), '*CHI:\tyuck [<] .\n'), ((745, (6, 8)), '*CHI:\toh +...\n'), ((748, (6, 10)), '*MOT:\tokay .\n'), ((751, (-1, 4)), '*MOT:\ttake another bite .\n'), ((751, (19, 23)), '*MOT:\ttake another bite .\n'), ((754, (6, 9)), '*CHI:\tnum num xxx .\n'), ((754, (14, 17)), '*CHI:\tnum num xxx .\n'), ((757, (6, 9)), '*CHI:\twww .\n'), ((759, (6, 8)), '*CHI:\tmm !\n'), ((765, (-1, 4)), "*MOT:\tyou're not a monster when you're eating .\n"), ((765, (6, 12)), "*MOT:\tyou're not a monster when you're eating .\n"), ((765, (19, 26)), "*MOT:\tyou're not a monster when you're eating .\n"), ((765, (39, 45)), "*MOT:\tyou're not a monster when you're eating .\n"), ((770, (-1, 4)), '*MOT:\tsit down please .\n'), ((770, (15, 21)), '*MOT:\tsit down please .\n'), ((774, (6, 9)), '*MOT:\tsit .\n'), ((777, (6, 9)), '*CHI:\tsit [?] .\n'), ((777, (10, 13)), '*CHI:\tsit [?] .\n'), ((781, (11, 14)), '*CHI:\tMama hug !\n'), ((784, (27, 30)), "*MOT:\tokay I'll give you a hug but then you have_to sit down and eat .\n"), ((784, (65, 68)), "*MOT:\tokay I'll give you a hug but then you have_to sit down and eat .\n"), ((792, (20, 26)), '*CHI:\t0 [=! choking cough] [>] .\n'), ((792, (27, 30)), '*CHI:\t0 [=! choking cough] [>] .\n'), ((793, (14, 17)), '*MOT:\tcareful [<] .\n'), ((801, (-1, 4)), '*MOT:\tyou alright ?\n'), ((807, (-1, 4)), "*MOT:\tyou can't hug that hard Chi .\n"), ((807, (25, 29)), "*MOT:\tyou can't hug that hard Chi .\n"), ((811, (6, 12)), "*MOT:\tyou'll choke .\n"), ((811, (13, 18)), "*MOT:\tyou'll choke .\n"), ((815, (6, 10)), '*MOT:\tokay now sit down .\n'), ((818, (-1, 4)), '*CHI:\tcan you help me ?\n'), ((822, (6, 9)), "*MOT:\tyes I can if you're sitting in your chair .\n"), ((822, (42, 47)), "*MOT:\tyes I can if you're sitting in your chair .\n"), ((830, (-1, 4)), '*CHI:\thelp me still .\n'), ((830, (6, 10)), '*CHI:\thelp me still .\n'), ((834, (-1, 4)), '*MOT:\tI will !\n'), ((837, (53, 59)), "*MOT:\tturn around you gotta finish what [//] chewing what's in your mouth .\n"), ((837, (68, 73)), "*MOT:\tturn around you gotta finish what [//] chewing what's in your mouth .\n"), ((843, (8, 11)), '*CHI:\t0 [=! frustrated noise] .\n'), ((844, (6, 9)), "*MOT:\t(.) and don't say help me still you say help me please .\n"), ((844, (14, 19)), "*MOT:\t(.) and don't say help me still you say help me please .\n"), ((849, (12, 15)), '*CHI:\t&n no [/] no help &m +//.\n'), ((849, (19, 23)), '*CHI:\t&n no [/] no help &m +//.\n'), ((852, (-1, 4)), '*CHI:\thelp me still .\n'), ((852, (6, 10)), '*CHI:\thelp me still .\n'), ((856, (6, 10)), '*MOT:\tokay .\n'), ((859, (13, 18)), "*CHI:\txxx <I don't &wa> [//] I <wanna put> [>] .\n"), ((859, (43, 46)), "*CHI:\txxx <I don't &wa> [//] I <wanna put> [>] .\n"), ((862, (-1, 4)), '*MOT:\t<say please@q> [<] .\n'), ((862, (21, 24)), '*MOT:\t<say please@q> [<] .\n'), ((865, (6, 12)), '*CHI:\tplease can you help me still please ?\n'), ((869, (6, 9)), '*MOT:\tyes I can .\n'), ((873, (10, 15)), "*CHI:\tI'm gonna sit on +//.\n"), ((873, (16, 19)), "*CHI:\tI'm gonna sit on +//.\n"), ((877, (10, 15)), "*CHI:\tI'm gonna sit on your [/] your lap and I'm bringing my food over here .\n"), ((877, (16, 19)), "*CHI:\tI'm gonna sit on your [/] your lap and I'm bringing my food over here .\n"), ((877, (37, 40)), "*CHI:\tI'm gonna sit on your [/] your lap and I'm bringing my food over here .\n"), ((877, (61, 65)), "*CHI:\tI'm gonna sit on your [/] your lap and I'm bringing my food over here .\n"), ((888, (-1, 4)), '*CHI:\twhy ?\n'), ((892, (-1, 4)), "*MOT:\tyou're getting too big to sit on my lap .\n"), ((892, (6, 12)), "*MOT:\tyou're getting too big to sit on my lap .\n"), ((892, (42, 45)), "*MOT:\tyou're getting too big to sit on my lap .\n"), ((897, (-1, 4)), '*CHI:\twhy ?\n'), ((901, (-1, 4)), "*MOT:\tbecause you're a big boy now .\n"), ((901, (27, 30)), "*MOT:\tbecause you're a big boy now .\n"), ((906, (-1, 4)), '*MOT:\t+^ you can sit in the chair .\n'), ((906, (28, 33)), '*MOT:\t+^ you can sit in the chair .\n'), ((909, (22, 30)), '*CHI:\t(..) I want the meatball .\n'), ((912, (6, 10)), '*MOT:\tokay .\n'), ((915, (-1, 4)), '*MOT:\tdo you remember what the wolf ate ?\n'), ((915, (31, 35)), '*MOT:\tdo you remember what the wolf ate ?\n'), ((915, (36, 39)), '*MOT:\tdo you remember what the wolf ate ?\n'), ((920, (-1, 4)), "*MOT:\tI'll get that later .\n"), ((920, (11, 14)), "*MOT:\tI'll get that later .\n"), ((923, (9, 14)), "*MOT:\t+^ don't worry .\n"), ((923, (15, 20)), "*MOT:\t+^ don't worry .\n"), ((931, (-1, 4)), '*MOT:\tdo you remember what the wolf ate ?\n'), ((931, (31, 35)), '*MOT:\tdo you remember what the wolf ate ?\n'), ((931, (36, 39)), '*MOT:\tdo you remember what the wolf ate ?\n'), ((940, (19, 23)), '*MOT:\twhat did the wolf eat ?\n'), ((940, (24, 27)), '*MOT:\twhat did the wolf eat ?\n'), ((944, (8, 12)), '*CHI:\ta duck .\n'), ((948, (18, 22)), '*CHI:\twhy did the wolf <eat a &d> [>] +/.\n'), ((948, (34, 37)), '*CHI:\twhy did the wolf <eat a &d> [>] +/.\n'), ((951, (-1, 4)), '*MOT:\t<did he take> [<] a little [!] bite of the duck ?\n'), ((951, (37, 41)), '*MOT:\t<did he take> [<] a little [!] bite of the duck ?\n'), ((951, (49, 53)), '*MOT:\t<did he take> [<] a little [!] bite of the duck ?\n'), ((960, (-1, 4)), '*CHI:\twhy ?\n'), ((968, (35, 41)), '*MOT:\twell why are you eating your supper ?\n'), ((977, (18, 21)), '*MOT:\t<(be)cause> [<] he was hungry .\n'), ((980, (13, 16)), '*CHI:\tno why [!] did the wolf (.) &-um twist [?] her ?\n'), ((980, (25, 29)), '*CHI:\tno why [!] did the wolf (.) &-um twist [?] her ?\n'), ((980, (39, 44)), '*CHI:\tno why [!] did the wolf (.) &-um twist [?] her ?\n'), ((984, (-1, 4)), '*CHI:\tand put pepper on her ?\n'), ((984, (14, 20)), '*CHI:\tand put pepper on her ?\n'), ((987, (15, 19)), '*CHI:\t<and (.) and> [/] and salt on her ?\n'), ((987, (20, 23)), '*CHI:\t<and (.) and> [/] and salt on her ?\n'), ((987, (28, 32)), '*CHI:\t<and (.) and> [/] and salt on her ?\n'), ((992, (6, 8)), '*CHI:\t&a and [/] and he ate [!] her why ?\n'), ((992, (13, 16)), '*CHI:\t&a and [/] and he ate [!] her why ?\n'), ((996, (-1, 4)), '*MOT:\tI think he must have been hungry .\n'), ((1000, (-1, 4)), '*CHI:\tbut he +/.\n'), ((1007, (-1, 4)), '*CHI:\twas he hungry ?\n'), ((1011, (-1, 4)), '*MOT:\tI think so .\n'), ((1018, (6, 8)), '*CHI:\t&w was he ?\n'), ((1022, (-1, 4)), '*MOT:\tprobably .\n'), ((1025, (-1, 4)), '*MOT:\tdo you think he was hungry ?\n'), ((1029, (-1, 4)), '*CHI:\twhy ?\n'), ((1033, (-1, 4)), '*MOT:\tdo you ?\n'), ((1037, (6, 10)), '*CHI:\tyeah .\n'), ((1040, (-1, 4)), '*MOT:\tyeah me too .\n'), ((1043, (6, 8)), '*CHI:\tmm .\n'), ((1048, (-1, 4)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1048, (6, 10)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1048, (41, 47)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1048, (52, 60)), '*MOT:\t<you had better be hungry to eat a whole> [>] duck huh ?\n'), ((1061, (-1, 4)), '*MOT:\tyou have_to go to the bath+room ?\n'), ((1066, (6, 10)), '*MOT:\tokay .\n'), ((1069, (18, 22)), '*MOT:\tfinish your food .\n'), ((1073, (-1, 4)), '*CHI:\txxx ?\n'), ((1073, (6, 9)), '*CHI:\txxx ?\n'), ((1080, (10, 15)), "*CHI:\tI'm gonna do this .\n"), ((1083, (18, 25)), '*MOT:\t0 [=! clear throat] .\n'), ((1084, (6, 10)), '*MOT:\tokay sit down finish eating .\n'), ((1084, (27, 33)), '*MOT:\tokay sit down finish eating .\n'), ((1087, (10, 15)), "*CHI:\tI'm gonna do this .\n"), ((1090, (6, 10)), '*CHI:\twhap !\n'), ((1094, (-1, 4)), "*CHI:\tand he's gonna fall [/] fall right (..) off his &-um airplane .\n"), ((1094, (10, 14)), "*CHI:\tand he's gonna fall [/] fall right (..) off his &-um airplane .\n"), ((1094, (21, 25)), "*CHI:\tand he's gonna fall [/] fall right (..) off his &-um airplane .\n"), ((1094, (59, 67)), "*CHI:\tand he's gonna fall [/] fall right (..) off his &-um airplane .\n"), ((1099, (-1, 4)), "*CHI:\tbecause [/] because Anthony's the bad because he shoots [!] people .\n"), ((1099, (14, 17)), "*CHI:\tbecause [/] because Anthony's the bad because he shoots [!] people .\n"), ((1099, (55, 61)), "*CHI:\tbecause [/] because Anthony's the bad because he shoots [!] people .\n"), ((1099, (66, 72)), "*CHI:\tbecause [/] because Anthony's the bad because he shoots [!] people .\n"), ((1104, (-1, 4)), '*CHI:\tbecause he got (.) a gun .\n'), ((1104, (27, 30)), '*CHI:\tbecause he got (.) a gun .\n'), ((1108, (-1, 4)), '*MOT:\the has a gun ?\n'), ((1108, (15, 18)), '*MOT:\the has a gun ?\n'), ((1112, (6, 10)), '*CHI:\tyeah yeah .\n'), ((1115, (-1, 4)), '*CHI:\tAnthony gots@n a gun .\n'), ((1115, (23, 26)), '*CHI:\tAnthony gots@n a gun .\n'), ((1118, (-1, 4)), '*MOT:\tAnthony in kindergarten ?\n'), ((1122, (6, 10)), '*CHI:\tyeah gots@n a gun .\n'), ((1122, (11, 17)), '*CHI:\tyeah gots@n a gun .\n'), ((1122, (20, 23)), '*CHI:\tyeah gots@n a gun .\n'), ((1125, (-1, 4)), '*MOT:\tyou should tell his teacher .\n'), ((1125, (26, 33)), '*MOT:\tyou should tell his teacher .\n'), ((1129, (-1, 4)), "*MOT:\thope it's not a real one .\n"), ((1133, (-1, 4)), '*CHI:\tit is [!] a real one .\n'), ((1136, (6, 10)), '*MOT:\tuhoh !\n'), ((1140, (-1, 4)), '*CHI:\tbecause [/] <because he [!]> [/] because he came to my house and shoot me last week .\n'), ((1140, (14, 17)), '*CHI:\tbecause [/] <because he [!]> [/] because he came to my house and shoot me last week .\n'), ((1140, (61, 66)), '*CHI:\tbecause [/] <because he [!]> [/] because he came to my house and shoot me last week .\n'), ((1140, (85, 89)), '*CHI:\tbecause [/] <because he [!]> [/] because he came to my house and shoot me last week .\n'), ((1145, (-1, 4)), "*MOT:\tno he didn't &=laughs .\n"), ((1152, (11, 16)), "*MOT:\tyour house is right here and (.) Anthony didn't come here and shoot you (..) last week .\n"), ((1152, (88, 92)), "*MOT:\tyour house is right here and (.) Anthony didn't come here and shoot you (..) last week .\n"), ((1162, (-1, 4)), "*MOT:\tno he didn't .\n"), ((1165, (-1, 4)), '*CHI:\thuh .\n'), ((1165, (6, 9)), '*CHI:\thuh .\n'), ((1168, (-1, 4)), "*MOT:\tI don't believe you .\n"), ((1171, (10, 14)), '*CHI:\t<he was> [>] sneaking like this .\n'), ((1175, (6, 9)), '*MOT:\thm: [<] .\n'), ((1175, (10, 13)), '*MOT:\thm: [<] .\n'), ((1181, (-1, 4)), '*CHI:\the [/] he was sneakin(g) .\n'), ((1184, (6, 9)), '*CHI:\t<&a and he (.) and> [/] (.) and he knocked on a door .\n'), ((1184, (17, 20)), '*CHI:\t<&a and he (.) and> [/] (.) and he knocked on a door .\n'), ((1184, (54, 58)), '*CHI:\t<&a and he (.) and> [/] (.) and he knocked on a door .\n'), ((1187, (6, 10)), '*CHI:\t<&an and I &o (.) and I &op> [/] and I opened it .\n'), ((1190, (-1, 4)), '*CHI:\t<and he all> [//] and he shoot [!] me .\n'), ((1190, (6, 10)), '*CHI:\t<and he all> [//] and he shoot [!] me .\n'), ((1193, (-1, 4)), '*MOT:\tare you sure ?\n'), ((1197, (6, 10)), '*CHI:\tyeah yeah and bullets got in my nose .\n'), ((1197, (20, 27)), '*CHI:\tyeah yeah and bullets got in my nose .\n'), ((1197, (38, 42)), '*CHI:\tyeah yeah and bullets got in my nose .\n'), ((1202, (6, 9)), '*MOT:\tugh !\n'), ((1205, (-1, 4)), '*CHI:\tand I took (th)em out and put (th)em in his brother .\n'), ((1205, (50, 57)), '*CHI:\tand I took (th)em out and put (th)em in his brother .\n'), ((1210, (-1, 4)), '*CHI:\tand he put (.) somethin(g) <in my> [/] in my nose .\n'), ((1210, (37, 40)), '*CHI:\tand he put (.) somethin(g) <in my> [/] in my nose .\n'), ((1210, (41, 44)), '*CHI:\tand he put (.) somethin(g) <in my> [/] in my nose .\n'), ((1210, (51, 55)), '*CHI:\tand he put (.) somethin(g) <in my> [/] in my nose .\n'), ((1214, (8, 14)), '*CHI:\ta bullet .\n'), ((1217, (-1, 4)), '*CHI:\tagain <and I> [/] and I sticked@n it &i in Anthony .\n'), ((1221, (-1, 4)), '*CHI:\tand I grabbed [!] his gun away from him .\n'), ((1221, (28, 31)), '*CHI:\tand I grabbed [!] his gun away from him .\n'), ((1229, (6, 9)), '*CHI:\twww [=! shooting noises] .\n'), ((1230, (-1, 4)), "*CHI:\tand the bullets didn't go in my nose .\n"), ((1230, (14, 21)), "*CHI:\tand the bullets didn't go in my nose .\n"), ((1230, (38, 42)), "*CHI:\tand the bullets didn't go in my nose .\n"), ((1235, (6, 8)), '*CHI:\t&o or all .\n'), ((1238, (-1, 4)), '*CHI:\tand past [?] my body .\n'), ((1238, (22, 26)), '*CHI:\tand past [?] my body .\n'), ((1244, (-1, 4)), "*MOT:\tthat's a nice story .\n"), ((1244, (20, 25)), "*MOT:\tthat's a nice story .\n"), ((1250, (48, 56)), "*MOT:\twell Anthony's not allowed to come in our building any more .\n"), ((1259, (9, 12)), '*CHI:\tno [>] .\n'), ((1262, (-1, 4)), "*MOT:\t(be)cause [<] I don't like guns .\n"), ((1262, (16, 19)), "*MOT:\t(be)cause [<] I don't like guns .\n"), ((1262, (33, 37)), "*MOT:\t(be)cause [<] I don't like guns .\n"), ((1272, (6, 10)), '*MOT:\tyeah .\n'), ((1277, (43, 49)), '*CHI:\t+^ xxx <because I just already shoot shoot> [//] <because (.) because> [/] because I telled@n Anthony feel my muscles .\n'), ((1277, (77, 80)), '*CHI:\t+^ xxx <because I just already shoot shoot> [//] <because (.) because> [/] because I telled@n Anthony feel my muscles .\n'), ((1277, (116, 123)), '*CHI:\t+^ xxx <because I just already shoot shoot> [//] <because (.) because> [/] because I telled@n Anthony feel my muscles .\n'), ((1281, (-1, 4)), '*MOT:\tand did he ?\n'), ((1285, (6, 9)), '*CHI:\tyup [!] and he feeled@n my muscles .\n'), ((1285, (10, 13)), '*CHI:\tyup [!] and he feeled@n my muscles .\n'), ((1285, (33, 40)), '*CHI:\tyup [!] and he feeled@n my muscles .\n'), ((1288, (-1, 4)), '*CHI:\t<and they feel arm> [//] and [/] &a and they feel my muscles !\n'), ((1288, (59, 66)), '*CHI:\t<and they feel arm> [//] and [/] &a and they feel my muscles !\n'), ((1291, (-1, 4)), '*CHI:\tand I was stronger !\n'), ((1294, (-1, 4)), '*MOT:\tand [?] you scare him ?\n'), ((1294, (10, 13)), '*MOT:\tand [?] you scare him ?\n'), ((1298, (-1, 4)), '*MOT:\tdid you [>] scare him with your big muscles ?\n'), ((1298, (42, 49)), '*MOT:\tdid you [>] scare him with your big muscles ?\n'), ((1304, (-1, 4)), '*CHI:\the [?] [<] +/.\n'), ((1307, (6, 10)), '*CHI:\tyeah [/] yeah I did this .\n'), ((1310, (6, 10)), '*CHI:\tyeah yeah .\n'), ((1313, (6, 8)), '*CHI:\t+^ and I put (.) my &-um +//.\n'), ((1319, (11, 14)), '*CHI:\t<and he> [//] (.) <and &a and I (.) and and> [/] (.) and I grow [//] grew up and grew up and grew up !\n'), ((1324, (7, 12)), '*CHI:\t<&a &a and I (.) &a &a and I was> [//] (.) and [/] (.) and [!] I xxx .\n'), ((1324, (19, 22)), '*CHI:\t<&a &a and I (.) &a &a and I was> [//] (.) and [/] (.) and [!] I xxx .\n'), ((1327, (-1, 4)), '*CHI:\tand [/] and I was still grew up !\n'), ((1327, (10, 13)), '*CHI:\tand [/] and I was still grew up !\n'), ((1333, (9, 13)), '*CHI:\t&y yeah yeah .\n'), ((1336, (6, 10)), '*CHI:\tyeah <and I &g> [/] and I got my Frankenstein +...\n'), ((1336, (11, 15)), '*CHI:\tyeah <and I &g> [/] and I got my Frankenstein +...\n'), ((1340, (6, 9)), '*MOT:\tmhm [>] .\n'), ((1340, (10, 13)), '*MOT:\tmhm [>] .\n'), ((1343, (-1, 4)), '*CHI:\t++ egg [<] [?] .\n'), ((1343, (9, 12)), '*CHI:\t++ egg [<] [?] .\n'), ((1346, (6, 10)), '*CHI:\tyeah because (.) when I was bigger .\n'), ((1346, (19, 22)), '*CHI:\tyeah because (.) when I was bigger .\n'), ((1350, (6, 10)), '*CHI:\tyeah [/] yeah <because because> [/] because Anthony shoot me !\n'), ((1350, (11, 14)), '*CHI:\tyeah [/] yeah <because because> [/] because Anthony shoot me !\n'), ((1353, (-1, 4)), '*MOT:\the shot you ?\n'), ((1357, (6, 10)), '*CHI:\tyeah !\n'), ((1360, (-1, 4)), '*MOT:\tin the nose !\n'), ((1360, (13, 17)), '*MOT:\tin the nose !\n'), ((1363, (-1, 4)), '*CHI:\tno right in the head !\n'), ((1363, (9, 14)), '*CHI:\tno right in the head !\n'), ((1363, (22, 26)), '*CHI:\tno right in the head !\n'), ((1370, (-1, 4)), '*CHI:\twith his knife and I +...\n'), ((1370, (15, 20)), '*CHI:\twith his knife and I +...\n'), ((1373, (6, 10)), '*CHI:\t<and and and and and> [/] and I got my rope !\n'), ((1373, (28, 31)), '*CHI:\t<and and and and and> [/] and I got my rope !\n'), ((1373, (45, 49)), '*CHI:\t<and and and and and> [/] and I got my rope !\n'), ((1378, (-1, 4)), '*CHI:\tand [/] and know what I did ?\n'), ((1378, (10, 13)), '*CHI:\tand [/] and know what I did ?\n'), ((1386, (-1, 4)), '*CHI:\tand I did this www &=noise .\n'), ((1386, (21, 24)), '*CHI:\tand I did this www &=noise .\n'), ((1390, (6, 11)), '*CHI:\tcrack !\n'), ((1396, (-1, 4)), '*CHI:\tand I drag [?] them out (.) around the tree .\n'), ((1396, (30, 33)), '*CHI:\tand I drag [?] them out (.) around the tree .\n'), ((1396, (45, 49)), '*CHI:\tand I drag [?] them out (.) around the tree .\n'), ((1401, (15, 23)), '*MOT:\toh thank goodness .\n'), ((1404, (24, 30)), "*MOT:\tnow he can't hurt anyone else .\n"), ((1408, (11, 15)), '*CHI:\t<naw naw> [//] no because <they just (.) over> [//] they cut [!] all his teeth off .\n'), ((1408, (32, 37)), '*CHI:\t<naw naw> [//] no because <they just (.) over> [//] they cut [!] all his teeth off .\n'), ((1408, (79, 84)), '*CHI:\t<naw naw> [//] no because <they just (.) over> [//] they cut [!] all his teeth off .\n'), ((1418, (-1, 4)), '*MOT:\there take another bite .\n'), ((1418, (24, 28)), '*MOT:\there take another bite .\n'), ((1422, (-1, 4)), '*CHI:\tand I cut his (.) eyes off and then <his lips off> [>] .\n'), ((1422, (24, 28)), '*CHI:\tand I cut his (.) eyes off and then <his lips off> [>] .\n'), ((1422, (57, 60)), '*CHI:\tand I cut his (.) eyes off and then <his lips off> [>] .\n'), ((1427, (10, 15)), "*MOT:\t<oh don't do that> [<] .\n"), ((1433, (-1, 4)), "*MOT:\tI don't like that .\n"), ((1436, (-1, 4)), '*MOT:\tich [: ick] .\n'), ((1436, (13, 17)), '*MOT:\tich [: ick] .\n'), ((1439, (-1, 4)), '*CHI:\tand I ate it !\n'), ((1446, (-1, 4)), "*CHI:\tbut I didn't eat it but the wolf ate it .\n"), ((1446, (34, 38)), "*CHI:\tbut I didn't eat it but the wolf ate it .\n"), ((1446, (39, 42)), "*CHI:\tbut I didn't eat it but the wolf ate it .\n"), ((1452, (-1, 4)), "*MOT:\tthat wolf will eat anything willn't he .\n"), ((1452, (11, 15)), "*MOT:\tthat wolf will eat anything willn't he .\n"), ((1457, (-1, 4)), '*CHI:\tbut the wolf eat paper .\n'), ((1457, (14, 18)), '*CHI:\tbut the wolf eat paper .\n'), ((1457, (23, 28)), '*CHI:\tbut the wolf eat paper .\n'), ((1463, (-1, 4)), '*MOT:\t(.) what happens in Peter and the Wolf ?\n'), ((1468, (-1, 4)), '*CHI:\thuh ?\n'), ((1468, (6, 9)), '*CHI:\thuh ?\n'), ((1477, (19, 23)), '*MOT:\twhat did the wolf eat in that ?\n'), ((1477, (24, 27)), '*MOT:\twhat did the wolf eat in that ?\n'), ((1481, (-1, 4)), '*MOT:\tin that story ?\n'), ((1481, (14, 19)), '*MOT:\tin that story ?\n'), ((1488, (-1, 4)), '*MOT:\thm: ?\n'), ((1488, (6, 9)), '*MOT:\thm: ?\n'), ((1492, (-1, 4)), '*MOT:\tyeah he tried [!] to eat Peter huh ?\n'), ((1492, (6, 10)), '*MOT:\tyeah he tried [!] to eat Peter huh ?\n'), ((1492, (20, 23)), '*MOT:\tyeah he tried [!] to eat Peter huh ?\n'), ((1492, (37, 40)), '*MOT:\tyeah he tried [!] to eat Peter huh ?\n'), ((1496, (-1, 4)), '*MOT:\tdid he though ?\n'), ((1500, (-1, 4)), '*MOT:\tdid he ever get Peter ?\n'), ((1504, (-1, 4)), '*CHI:\tdid he eat him ?\n'), ((1508, (6, 10)), '*MOT:\tyeah .\n'), ((1511, (-1, 4)), '*MOT:\tdid he ?\n'), ((1519, (-1, 4)), '*MOT:\t(.) what did he eat ?\n'), ((1523, (-1, 4)), '*CHI:\the ate the duck alive .\n'), ((1523, (17, 21)), '*CHI:\the ate the duck alive .\n'), ((1526, (-1, 4)), '*MOT:\talive ?\n'), ((1531, (-1, 4)), '*MOT:\tsit down please .\n'), ((1531, (15, 21)), '*MOT:\tsit down please .\n'), ((1534, (6, 8)), '*CHI:\tmm .\n'), ((1537, (-1, 4)), '*MOT:\tsit down please .\n'), ((1537, (15, 21)), '*MOT:\tsit down please .\n'), ((1540, (6, 9)), '*CHI:\twww &=noises .\n'), ((1545, (-1, 4)), "*MOT:\tyou don't stand up in the chair .\n"), ((1545, (32, 37)), "*MOT:\tyou don't stand up in the chair .\n"), ((1550, (-1, 4)), '*MOT:\t+^ you can fall .\n'), ((1553, (-1, 4)), '*MOT:\tsee you have_to sit the proper way .\n'), ((1553, (37, 40)), '*MOT:\tsee you have_to sit the proper way .\n'), ((1557, (15, 19)), '*MOT:\tput your feet down please .\n'), ((1557, (25, 31)), '*MOT:\tput your feet down please .\n'), ((1560, (-1, 4)), '*MOT:\tokay ?\n'), ((1560, (6, 10)), '*MOT:\tokay ?\n'), ((1564, (-1, 4)), '*MOT:\t(be)cause otherwise you can fall and hurt yourself .\n'), ((1573, (6, 9)), '*CHI:\twww [=! noises and laughing] .\n'), ((1573, (10, 13)), '*CHI:\twww [=! noises and laughing] .\n'), ((1573, (14, 20)), '*CHI:\twww [=! noises and laughing] .\n'), ((1575, (-1, 4)), "*MOT:\t<we're not playing we're eating> [<] .\n"), ((1575, (7, 12)), "*MOT:\t<we're not playing we're eating> [<] .\n"), ((1579, (-1, 4)), '*MOT:\tsit down please and finish eating okay ?\n'), ((1579, (15, 21)), '*MOT:\tsit down please and finish eating okay ?\n'), ((1579, (33, 39)), '*MOT:\tsit down please and finish eating okay ?\n'), ((1579, (40, 44)), '*MOT:\tsit down please and finish eating okay ?\n'), ((1584, (6, 9)), '*CHI:\twww [=! noises and giggling] .\n'), ((1584, (10, 13)), '*CHI:\twww [=! noises and giggling] .\n'), ((1584, (14, 20)), '*CHI:\twww [=! noises and giggling] .\n'), ((1585, (-1, 4)), '*MOT:\tare you gonna listen ?\n'), ((1589, (6, 9)), '*CHI:\twww &=noises .\n'), ((1596, (6, 9)), '*CHI:\twww &=noises .\n'), ((1597, (20, 23)), '*CHI:\t(..) I put my xxx in there .\n'), ((1600, (6, 9)), '*MOT:\tmhm .\n'), ((1606, (6, 8)), '*CHI:\tmm .\n'), ((1609, (6, 9)), '*CHI:\t(.) I like you .\n'), ((1616, (6, 10)), '*CHI:\tyeah [>] .\n'), ((1616, (11, 14)), '*CHI:\tyeah [>] .\n'), ((1622, (-1, 4)), '*CHI:\tI love [?] you .\n'), ((1626, (-1, 4)), '*MOT:\tI love you .\n'), ((1629, (6, 9)), '*CHI:\txxx .\n'), ((1631, (6, 9)), '*CHI:\tnum num num .\n'), ((1635, (-1, 4)), '*CHI:\they [?] !\n'), ((1635, (6, 9)), '*CHI:\they [?] !\n'), ((1635, (10, 13)), '*CHI:\they [?] !\n'), ((1640, (-1, 4)), '*MOT:\t(.) do you remember seeing all the instruments ?\n'), ((1640, (6, 9)), '*MOT:\t(.) do you remember seeing all the instruments ?\n'), ((1645, (6, 9)), '*CHI:\tyup .\n'), ((1648, (6, 9)), '*MOT:\tmhm .\n'), ((1651, (9, 12)), '*CHI:\t&y yep .\n'), ((1654, (6, 10)), '*CHI:\tyeah .\n'), ((1657, (6, 10)), '*CHI:\tyeah but (..) did the trombone do this ?\n'), ((1662, (-1, 4)), '*CHI:\t&=imit:trombone .\n'), ((1663, (-1, 4)), '*CHI:\t<did it> [/] did it do that ?\n'), ((1663, (11, 14)), '*CHI:\t<did it> [/] did it do that ?\n'), ((1663, (15, 18)), '*CHI:\t<did it> [/] did it do that ?\n'), ((1670, (6, 12)), "*MOT:\tthat's just what they did .\n"), ((1674, (-1, 4)), '*MOT:\t<they did> [>] it twice right ?\n'), ((1678, (6, 9)), '*CHI:\tmhm [<] .\n'), ((1678, (10, 13)), '*CHI:\tmhm [<] .\n'), ((1682, (-1, 4)), '*MOT:\t<they do> [<] that same thing twice (.) right ?\n'), ((1682, (30, 35)), '*MOT:\t<they do> [<] that same thing twice (.) right ?\n'), ((1686, (6, 8)), '*CHI:\t&a and they did this &=imit:trombone .\n'), ((1689, (-1, 4)), '*CHI:\tand [/] and that +//.\n'), ((1689, (10, 13)), '*CHI:\tand [/] and that +//.\n'), ((1693, (-1, 4)), '*CHI:\tand they did this &=imit:brass .\n'), ((1696, (-1, 4)), '*CHI:\tand they did this &=sings .\n'), ((1701, (6, 10)), "*MOT:\tyeah that's [/] that's what they did alright www &=giggles .\n"), ((1701, (11, 17)), "*MOT:\tyeah that's [/] that's what they did alright www &=giggles .\n"), ((1701, (51, 54)), "*MOT:\tyeah that's [/] that's what they did alright www &=giggles .\n"), ((1705, (-1, 4)), '*CHI:\twhy ?\n'), ((1714, (-1, 4)), "*MOT:\t(be)cause that's the way the music went .\n"), ((1714, (27, 30)), "*MOT:\t(be)cause that's the way the music went .\n"), ((1714, (35, 40)), "*MOT:\t(be)cause that's the way the music went .\n"), ((1723, (20, 24)), '*MOT:\tyou like that part huh ?\n'), ((1723, (25, 28)), '*MOT:\tyou like that part huh ?\n'), ((1727, (6, 10)), '*CHI:\tyeah .\n'), ((1730, (-1, 4)), '*CHI:\tI like that part .\n'), ((1730, (18, 22)), '*CHI:\tI like that part .\n'), ((1733, (47, 51)), '*MOT:\ttrombones [//] the trombones do a little part .\n'), ((1736, (-1, 4)), '*MOT:\tand the trumpets go &=imit:trumpet .\n'), ((1739, (-1, 4)), '*MOT:\tthat part .\n'), ((1739, (11, 15)), '*MOT:\tthat part .\n'), ((1742, (15, 19)), '*MOT:\tthe high part .\n'), ((1749, (-1, 4)), '*MOT:\tand the trumpets go &=imit:trumpet .\n'), ((1756, (-1, 4)), '*CHI:\twhy ?\n'), ((1760, (-1, 4)), "*MOT:\t(be)cause that's [//] they each have their own parts to play .\n"), ((1760, (16, 22)), "*MOT:\t(be)cause that's [//] they each have their own parts to play .\n"), ((1760, (53, 58)), "*MOT:\t(be)cause that's [//] they each have their own parts to play .\n"), ((1765, (-1, 4)), "*MOT:\tand that's the part they do .\n"), ((1765, (21, 25)), "*MOT:\tand that's the part they do .\n"), ((1769, (-1, 4)), '*CHI:\tbut why +/.\n'), ((1775, (11, 15)), '*MOT:\twhat part is that ?\n'), ((1779, (6, 12)), "*MOT:\twhat's happening in that part ?\n"), ((1779, (31, 35)), "*MOT:\twhat's happening in that part ?\n"), ((1787, (-1, 4)), '*MOT:\twith Peter and (.) the wolf at that point ?\n'), ((1787, (29, 33)), '*MOT:\twith Peter and (.) the wolf at that point ?\n'), ((1787, (42, 47)), '*MOT:\twith Peter and (.) the wolf at that point ?\n'), ((1793, (10, 13)), '*MOT:\txxx [>] in the +/.\n'), ((1796, (11, 14)), '*CHI:\t&-um [<] .\n'), ((1801, (11, 14)), '*CHI:\t&-um [/] &-um the wolf ate the duck .\n'), ((1801, (24, 28)), '*CHI:\t&-um [/] &-um the wolf ate the duck .\n'), ((1801, (37, 41)), '*CHI:\t&-um [/] &-um the wolf ate the duck .\n'), ((1804, (-1, 4)), '*MOT:\twere the hunters shootin(g) at that point ?\n'), ((1804, (15, 22)), '*MOT:\twere the hunters shootin(g) at that point ?\n'), ((1804, (42, 47)), '*MOT:\twere the hunters shootin(g) at that point ?\n'), ((1809, (-1, 4)), '*MOT:\twere they shooting at the +...\n'), ((1812, (9, 13)), '*CHI:\t++ wolf [>] ?\n'), ((1812, (14, 17)), '*CHI:\t++ wolf [>] ?\n'), ((1816, (11, 16)), '*MOT:\t<and they> [<] went &=sings .\n'), ((1819, (-1, 4)), '*MOT:\tis that when the hunters were trying to shoot at the wolf ?\n'), ((1819, (23, 30)), '*MOT:\tis that when the hunters were trying to shoot at the wolf ?\n'), ((1819, (59, 63)), '*MOT:\tis that when the hunters were trying to shoot at the wolf ?\n'), ((1826, (6, 10)), '*CHI:\tyeah .\n'), ((1829, (-1, 4)), '*MOT:\tyou <remember that part> [>] ?\n'), ((1829, (25, 30)), '*MOT:\tyou <remember that part> [>] ?\n'), ((1829, (31, 34)), '*MOT:\tyou <remember that part> [>] ?\n'), ((1833, (-1, 4)), '*CHI:\t<yeah they was> [<] doin(g) this .\n'), ((1836, (9, 13)), '*CHI:\t&y yeah [>] .\n'), ((1836, (14, 17)), '*CHI:\t&y yeah [>] .\n'), ((1839, (12, 15)), '*MOT:\t<stay in> [<] xxx .\n'), ((1842, (-1, 4)), '*CHI:\tyeah they was doin(g) this .\n'), ((1845, (-1, 4)), '*CHI:\tyeah they were [?] do this (.) www !\n'), ((1845, (33, 36)), '*CHI:\tyeah they were [?] do this (.) www !\n'), ((1845, (37, 40)), '*CHI:\tyeah they were [?] do this (.) www !\n'), ((1849, (-1, 4)), '*CHI:\tand [/] and they got +//.\n'), ((1849, (10, 13)), '*CHI:\tand [/] and they got +//.\n'), ((1852, (-1, 4)), '*CHI:\tand [/] and they runned@n and they got [!] the wolf !\n'), ((1852, (10, 13)), '*CHI:\tand [/] and they runned@n and they got [!] the wolf !\n'), ((1852, (53, 57)), '*CHI:\tand [/] and they runned@n and they got [!] the wolf !\n'), ((1857, (11, 16)), '*CHI:\t<and they> [/] and they took [!] him <to to> [/] to the zoo right ?\n'), ((1857, (17, 20)), '*CHI:\t<and they> [/] and they took [!] him <to to> [/] to the zoo right ?\n'), ((1857, (47, 50)), '*CHI:\t<and they> [/] and they took [!] him <to to> [/] to the zoo right ?\n'), ((1857, (62, 65)), '*CHI:\t<and they> [/] and they took [!] him <to to> [/] to the zoo right ?\n'), ((1863, (-1, 4)), '*MOT:\tdid they ?\n'), ((1867, (6, 9)), '*CHI:\tmhm .\n'), ((1870, (-1, 4)), '*MOT:\tthey put him in the zoo ?\n'), ((1870, (26, 29)), '*MOT:\tthey put him in the zoo ?\n'), ((1877, (-1, 4)), '*MOT:\tand then what happened ?\n'), ((1881, (6, 9)), '*CHI:\t(.) and then he stayed in there .\n'), ((1887, (10, 14)), '*MOT:\t(.) <who did Peter> [/] who did Peter live with ?\n'), ((1887, (44, 48)), '*MOT:\t(.) <who did Peter> [/] who did Peter live with ?\n'), ((1891, (-1, 4)), '*CHI:\the [/] he live in a cage .\n'), ((1891, (26, 30)), '*CHI:\the [/] he live in a cage .\n'), ((1894, (-1, 4)), '*MOT:\tPeter ?\n'), ((1898, (10, 13)), '*MOT:\tthe boy ?\n'), ((1902, (12, 15)), '*CHI:\t&n &n (.) no because when the wolf come out of the forest (.) &a and you shoot [!] the wolf .\n'), ((1902, (36, 40)), '*CHI:\t&n &n (.) no because when the wolf come out of the forest (.) &a and you shoot [!] the wolf .\n'), ((1902, (68, 70)), '*CHI:\t&n &n (.) no because when the wolf come out of the forest (.) &a and you shoot [!] the wolf .\n'), ((1909, (-1, 4)), '*CHI:\tand [/] and you shoot the wolf .\n'), ((1909, (10, 13)), '*CHI:\tand [/] and you shoot the wolf .\n'), ((1909, (32, 36)), '*CHI:\tand [/] and you shoot the wolf .\n'), ((1912, (45, 49)), '*CHI:\t<and you take> [//] &a (.) you put the wolf in a zoo !\n'), ((1912, (55, 58)), '*CHI:\t<and you take> [//] &a (.) you put the wolf in a zoo !\n'), ((1918, (-1, 4)), '*MOT:\tbut where does Peter live ?\n'), ((1922, (12, 15)), '*CHI:\t<&-um &pe Peter &l Peter &P Peter> [//] (.) he [//] (.) <Peter Peter live live &-um (.) &-um &-um &i &i in &p> [/] Peter live &i &i in the xxx !\n'), ((1922, (104, 106)), '*CHI:\t<&-um &pe Peter &l Peter &P Peter> [//] (.) he [//] (.) <Peter Peter live live &-um (.) &-um &-um &i &i in &p> [/] Peter live &i &i in the xxx !\n'), ((1922, (107, 112)), '*CHI:\t<&-um &pe Peter &l Peter &P Peter> [//] (.) he [//] (.) <Peter Peter live live &-um (.) &-um &-um &i &i in &p> [/] Peter live &i &i in the xxx !\n'), ((1922, (145, 148)), '*CHI:\t<&-um &pe Peter &l Peter &P Peter> [//] (.) he [//] (.) <Peter Peter live live &-um (.) &-um &-um &i &i in &p> [/] Peter live &i &i in the xxx !\n'), ((1925, (10, 14)), "*CHI:\t<he was> [//] he didn't said [/] said that but that was a mistake [?] .\n"), ((1925, (64, 71)), "*CHI:\t<he was> [//] he didn't said [/] said that but that was a mistake [?] .\n"), ((1925, (72, 75)), "*CHI:\t<he was> [//] he didn't said [/] said that but that was a mistake [?] .\n"), ((1936, (13, 18)), '*CHI:\t<Peter live> [/] Peter l:ive in a xxx .\n'), ((1936, (29, 34)), '*CHI:\t<Peter live> [/] Peter l:ive in a xxx .\n'), ((1936, (40, 43)), '*CHI:\t<Peter live> [/] Peter l:ive in a xxx .\n'), ((1939, (-1, 4)), "*MOT:\tI don't think so .\n"), ((1942, (-1, 4)), '*CHI:\the does .\n'), ((1945, (-1, 4)), '*MOT:\tdid he live with his grandfather ?\n'), ((1950, (45, 47)), "*CHI:\twhere's [=! sing-song] the grandfather [: grandfather] ?\n"), ((1954, (-1, 4)), '*MOT:\the was in the house .\n'), ((1954, (20, 25)), '*MOT:\the was in the house .\n'), ((1958, (6, 14)), '*MOT:\tremember and he told Peter to (.) watch [/] watch out for the wolf ?\n'), ((1958, (40, 45)), '*MOT:\tremember and he told Peter to (.) watch [/] watch out for the wolf ?\n'), ((1958, (68, 72)), '*MOT:\tremember and he told Peter to (.) watch [/] watch out for the wolf ?\n'), ((1964, (-1, 4)), '*CHI:\twhy ?\n'), ((1968, (-1, 4)), '*MOT:\tbecause the wolf could get him !\n'), ((1968, (18, 22)), '*MOT:\tbecause the wolf could get him !\n'), ((1971, (-1, 4)), '*MOT:\tand eat him up .\n'), ((1971, (10, 13)), '*MOT:\tand eat him up .\n'), ((1979, (6, 9)), '*MOT:\tmhm .\n'), ((1982, (-1, 4)), '*CHI:\tand [/] and what <does it> [//] did his grandfather say to him ?\n'), ((1982, (10, 13)), '*CHI:\tand [/] and what <does it> [//] did his grandfather say to him ?\n'), ((1988, (-1, 4)), '*MOT:\the told him (.) to stay away from the woods .\n'), ((1988, (44, 49)), '*MOT:\the told him (.) to stay away from the woods .\n'), ((1993, (-1, 4)), '*MOT:\t(be)cause the wolf [!] could come close and he could (.) bite him !\n'), ((1993, (20, 24)), '*MOT:\t(be)cause the wolf [!] could come close and he could (.) bite him !\n'), ((1993, (25, 28)), '*MOT:\t(be)cause the wolf [!] could come close and he could (.) bite him !\n'), ((1998, (11, 14)), '*MOT:\t<and he> [/] and he told him +//.\n'), ((1998, (15, 18)), '*MOT:\t<and he> [/] and he told him +//.\n'), ((2001, (12, 18)), '*MOT:\t0 [=! clears throat] .\n'), ((2002, (-1, 4)), "*MOT:\the told him to stay inside the gates didn't he ?\n"), ((2002, (37, 42)), "*MOT:\the told him to stay inside the gates didn't he ?\n"), ((2008, (10, 13)), '*CHI:\twhy [?] .\n'), ((2011, (-1, 4)), '*MOT:\tand not to leave the yard .\n'), ((2011, (27, 31)), '*MOT:\tand not to leave the yard .\n'), ((2014, (-1, 4)), '*CHI:\twhy ?\n'), ((2018, (6, 8)), '*MOT:\t+^ and go down by the meadow .\n'), ((2018, (28, 34)), '*MOT:\t+^ and go down by the meadow .\n'), ((2021, (-1, 4)), '*MOT:\t(be)cause then the wolf could get him .\n'), ((2021, (25, 29)), '*MOT:\t(be)cause then the wolf could get him .\n'), ((2028, (6, 9)), '*CHI:\txxx .\n'), ((2029, (19, 22)), '*MOT:\tremember the man who acted out all the parts ?\n'), ((2029, (45, 50)), '*MOT:\tremember the man who acted out all the parts ?\n'), ((2035, (-1, 4)), '*CHI:\thuh ?\n'), ((2035, (6, 9)), '*CHI:\thuh ?\n'), ((2039, (19, 23)), '*MOT:\tremember the mime ?\n'), ((2043, (6, 10)), '*CHI:\tyeah .\n'), ((2046, (-1, 4)), '*MOT:\tand he did all the parts .\n'), ((2046, (25, 30)), '*MOT:\tand he did all the parts .\n'), ((2049, (-1, 4)), '*CHI:\thuh .\n'), ((2049, (6, 9)), '*CHI:\thuh .\n'), ((2053, (-1, 4)), '*MOT:\t<you did> [//] did you like him ?\n'), ((2053, (11, 15)), '*MOT:\t<you did> [//] did you like him ?\n'), ((2057, (6, 10)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2057, (25, 30)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2057, (34, 38)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2057, (44, 47)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2057, (48, 53)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2057, (83, 87)), "*CHI:\tyeah but he didn't shake my hand when [/] <when I was> [/] when I was up the hill .\n"), ((2063, (-1, 4)), '*MOT:\twhen you were in the audience ?\n'), ((2067, (-1, 4)), '*MOT:\twhen he came down the audience right ?\n'), ((2067, (37, 42)), '*MOT:\twhen he came down the audience right ?\n'), ((2076, (-1, 4)), "*CHI:\tbecause he didn't shake my hand .\n"), ((2076, (24, 29)), "*CHI:\tbecause he didn't shake my hand .\n"), ((2076, (33, 37)), "*CHI:\tbecause he didn't shake my hand .\n"), ((2080, (-1, 4)), "*CHI:\t(be)cause he didn't come up the hill and shake my hand .\n"), ((2080, (38, 42)), "*CHI:\t(be)cause he didn't come up the hill and shake my hand .\n"), ((2080, (47, 52)), "*CHI:\t(be)cause he didn't come up the hill and shake my hand .\n"), ((2080, (56, 60)), "*CHI:\t(be)cause he didn't come up the hill and shake my hand .\n"), ((2085, (-1, 4)), '*MOT:\tmhm that made you sad huh ?\n'), ((2085, (6, 9)), '*MOT:\tmhm that made you sad huh ?\n'), ((2085, (28, 31)), '*MOT:\tmhm that made you sad huh ?\n'), ((2090, (-1, 4)), '*MOT:\tbut then what did you do ?\n'), ((2094, (-1, 4)), '*CHI:\tthen I shake his hand .\n'), ((2094, (13, 18)), '*CHI:\tthen I shake his hand .\n'), ((2094, (23, 27)), '*CHI:\tthen I shake his hand .\n'), ((2097, (-1, 4)), '*MOT:\twhen ?\n'), ((2101, (-1, 4)), '*CHI:\twhen he was talking .\n'), ((2104, (6, 10)), '*MOT:\tyeah afterwards huh ?\n'), ((2104, (22, 25)), '*MOT:\tyeah afterwards huh ?\n'), ((2109, (6, 10)), "*CHI:\tyeah [//] <why he's> [>] [//] why he didn't (.) do this www &=noise .\n"), ((2109, (21, 26)), "*CHI:\tyeah [//] <why he's> [>] [//] why he didn't (.) do this www &=noise .\n"), ((2109, (62, 65)), "*CHI:\tyeah [//] <why he's> [>] [//] why he didn't (.) do this www &=noise .\n"), ((2122, (-1, 4)), '*MOT:\tdid you think he was gonna do that to you &=laughs ?\n'), ((2133, (-1, 4)), '*MOT:\the was nice .\n'), ((2136, (-1, 4)), '*MOT:\the was a nice man right ?\n'), ((2136, (15, 23)), '*MOT:\the was a nice man right ?\n'), ((2136, (24, 29)), '*MOT:\the was a nice man right ?\n'), ((2140, (-1, 4)), '*MOT:\t(be)cause you went up to him and you asked him if he would shake your hand ?\n'), ((2140, (65, 70)), '*MOT:\t(be)cause you went up to him and you asked him if he would shake your hand ?\n'), ((2140, (76, 80)), '*MOT:\t(be)cause you went up to him and you asked him if he would shake your hand ?\n'), ((2148, (-1, 4)), '*MOT:\tand he did .\n'), ((2151, (6, 10)), '*CHI:\tyeah .\n'), ((2156, (6, 9)), '*MOT:\twww [=! clears throat] there you go .\n'), ((2160, (10, 15)), "*MOT:\twhy don't you (.) get the food in there first ?\n"), ((2160, (32, 36)), "*MOT:\twhy don't you (.) get the food in there first ?\n"), ((2167, (40, 44)), "*MOT:\t(..) can you remember everybody's name that you saw this weekend ?\n"), ((2167, (63, 70)), "*MOT:\t(..) can you remember everybody's name that you saw this weekend ?\n"), ((2173, (-1, 4)), "*MOT:\tdo you remember all your cousins's name ?\n"), ((2173, (41, 45)), "*MOT:\tdo you remember all your cousins's name ?\n"), ((2178, (-1, 4)), '*MOT:\tnames ?\n'), ((2178, (6, 11)), '*MOT:\tnames ?\n'), ((2182, (6, 9)), '*CHI:\tmhm .\n'), ((2185, (6, 10)), '*CHI:\tuhuh .\n'), ((2188, (16, 19)), '*MOT:\tits xxx a lot of people huh ?\n'), ((2188, (23, 29)), '*MOT:\tits xxx a lot of people huh ?\n'), ((2188, (30, 33)), '*MOT:\tits xxx a lot of people huh ?\n'), ((2192, (-1, 4)), "*MOT:\tthat you don't get to see that often .\n"), ((2197, (-1, 4)), '*CHI:\thuh ?\n'), ((2197, (6, 9)), '*CHI:\thuh ?\n'), ((2201, (-1, 4)), "*MOT:\tyou saw a lot of people you don't (.) usually get to see .\n"), ((2201, (16, 19)), "*MOT:\tyou saw a lot of people you don't (.) usually get to see .\n"), ((2201, (23, 29)), "*MOT:\tyou saw a lot of people you don't (.) usually get to see .\n"), ((2206, (-1, 4)), '*MOT:\thuh ?\n'), ((2206, (6, 9)), '*MOT:\thuh ?\n'), ((2210, (6, 9)), '*CHI:\thm: [?] .\n'), ((2210, (10, 13)), '*CHI:\thm: [?] .\n'), ((2213, (6, 9)), '*MOT:\twww [=! clears throat] who were you playin(g) with outside in the yard ?\n'), ((2213, (21, 28)), '*MOT:\twww [=! clears throat] who were you playin(g) with outside in the yard ?\n'), ((2213, (72, 76)), '*MOT:\twww [=! clears throat] who were you playin(g) with outside in the yard ?\n'), ((2219, (11, 14)), '*CHI:\t&-um [/] &-um one of my friends .\n'), ((2219, (30, 37)), '*CHI:\t&-um [/] &-um one of my friends .\n'), ((2222, (-1, 4)), '*MOT:\tor your cousins ?\n'), ((2222, (14, 21)), '*MOT:\tor your cousins ?\n'), ((2226, (-1, 4)), '*MOT:\twho ?\n'), ((2230, (12, 18)), '*MOT:\t0 [=! clears throat] .\n'), ((2231, (-1, 4)), "*CHI:\tI [/] I don't <know (.) know> [/] know them yet .\n"), ((2231, (8, 11)), "*CHI:\tI [/] I don't <know (.) know> [/] know them yet .\n"), ((2231, (30, 35)), "*CHI:\tI [/] I don't <know (.) know> [/] know them yet .\n"), ((2240, (-1, 4)), '*MOT:\tyou know them .\n'), ((2243, (6, 13)), "*MOT:\tthere's Ste:ven .\n"), ((2246, (6, 9)), '*CHI:\txxx .\n'), ((2251, (6, 8)), '*CHI:\tmm .\n'), ((2254, (15, 19)), '*MOT:\tput your legs down please .\n'), ((2254, (25, 31)), '*MOT:\tput your legs down please .\n'), ((2258, (-1, 4)), '*MOT:\twho else ?\n'), ((2262, (10, 13)), '*CHI:\t(.) www .\n'), ((2264, (-1, 4)), '*MOT:\tDavid .\n'), ((2267, (-1, 4)), '*CHI:\tDavid .\n'), ((2270, (-1, 4)), '*MOT:\tand Beth .\n'), ((2273, (-1, 4)), '*CHI:\tand Bethany .\n'), ((2276, (-1, 4)), '*MOT:\tand +...\n'), ((2283, (-1, 4)), '*CHI:\tand Danny .\n'), ((2286, (-1, 4)), '*MOT:\tand (..) little +...\n'), ((2295, (-1, 4)), '*CHI:\tand little Paul .\n'), ((2298, (-1, 4)), "*MOT:\tand what was the baby's name ?\n"), ((2298, (23, 29)), "*MOT:\tand what was the baby's name ?\n"), ((2298, (30, 34)), "*MOT:\tand what was the baby's name ?\n"), ((2306, (-1, 4)), '*MOT:\tnope (.) Mark .\n'), ((2313, (-1, 4)), '*MOT:\tand little Jennifer and little +...\n'), ((2316, (-1, 4)), '*MOT:\twho ?\n'), ((2320, (-1, 4)), '*CHI:\t+^ Mark .\n'), ((2323, (25, 32)), '*MOT:\ther [/] her little brother ?\n'), ((2327, (15, 20)), '*CHI:\tMark [=? what] .\n'), ((2330, (-1, 4)), '*MOT:\tJennifer and little (.) Kenny ?\n'), ((2334, (-1, 4)), '*CHI:\tand Kenny .\n'), ((2337, (6, 10)), '*MOT:\tyeah .\n'), ((2340, (6, 9)), '*MOT:\txxx .\n'), ((2344, (-1, 4)), '*CHI:\tbut why did Kenny do the www [=! loud noise] .\n'), ((2344, (31, 34)), '*CHI:\tbut why did Kenny do the www [=! loud noise] .\n'), ((2344, (39, 43)), '*CHI:\tbut why did Kenny do the www [=! loud noise] .\n'), ((2344, (44, 50)), '*CHI:\tbut why did Kenny do the www [=! loud noise] .\n'), ((2348, (29, 37)), '*MOT:\toh because he was in a bad mood .\n'), ((2354, (-1, 4)), '*MOT:\the was tired .\n'), ((2360, (11, 14)), "*CHI:\twell (.) why was [=? wasn't] he in a bad (.) mood ?\n"), ((2360, (51, 55)), "*CHI:\twell (.) why was [=? wasn't] he in a bad (.) mood ?\n"), ((2366, (-1, 4)), '*MOT:\t(be)cause he was cranky .\n'), ((2366, (23, 29)), '*MOT:\t(be)cause he was cranky .\n'), ((2369, (-1, 4)), '*CHI:\t(be)cause he was cranky ?\n'), ((2373, (-1, 4)), '*MOT:\the was tired .\n'), ((2378, (6, 10)), '*CHI:\tyeah but why does he keep doing this .\n'), ((2383, (6, 9)), '*CHI:\twww [=! series of yelps] .\n'), ((2383, (14, 20)), '*CHI:\twww [=! series of yelps] .\n'), ((2383, (24, 30)), '*CHI:\twww [=! series of yelps] .\n'), ((2390, (38, 46)), '*MOT:\tmostly (be)cause he wanted more brownies .\n'), ((2394, (-1, 4)), '*MOT:\tthat his sister had .\n'), ((2394, (15, 21)), '*MOT:\tthat his sister had .\n'), ((2397, (6, 9)), '*CHI:\txxx .\n'), ((2398, (12, 18)), '*MOT:\t0 [=! clears throat] .\n'), ((2399, (-1, 4)), '*CHI:\tdoes that +//.\n'), ((2402, (6, 9)), '*MOT:\tmhm .\n'), ((2406, (-1, 4)), '*CHI:\twhy ?\n'), ((2410, (-1, 4)), '*CHI:\twhy ?\n'), ((2414, (-1, 4)), '*MOT:\t(be)cause he likes junk food .\n'), ((2414, (25, 29)), '*MOT:\t(be)cause he likes junk food .\n'), ((2414, (30, 34)), '*MOT:\t(be)cause he likes junk food .\n'), ((2419, (-1, 4)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2419, (28, 36)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2419, (37, 40)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2419, (58, 64)), '*CHI:\tbecause Kenny saw the cupcakes (.) and he dropped a cookie ?\n'), ((2425, (10, 14)), '*CHI:\t<he yeah &ha> [//] uhhuh .\n'), ((2428, (-1, 4)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2428, (21, 28)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2428, (46, 52)), '*CHI:\the saw [?] the cupcake and he dropped a cookie .\n'), ((2433, (-1, 4)), "*MOT:\twhy'd he drop the cookie ?\n"), ((2433, (6, 11)), "*MOT:\twhy'd he drop the cookie ?\n"), ((2433, (24, 30)), "*MOT:\twhy'd he drop the cookie ?\n"), ((2437, (-1, 4)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2437, (12, 15)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2437, (16, 19)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2437, (36, 44)), '*CHI:\t<when he> [/] when he saw the cupcakes ?\n'), ((2441, (48, 55)), '*MOT:\toh because he decided he wanted to have a cupcake instead ?\n'), ((2457, (-1, 4)), '*MOT:\tdid you play Indians ?\n'), ((2461, (6, 9)), '*CHI:\thm: .\n'), ((2464, (-1, 4)), "*MOT:\tyou didn't play ?\n"), ((2468, (-1, 4)), '*MOT:\tbut everybody else did .\n'), ((2472, (-1, 4)), "*CHI:\tbut I didn't play .\n"), ((2479, (-1, 4)), '*CHI:\t(be)cause they xxx .\n'), ((2483, (-1, 4)), '*MOT:\tdid you [//] what did Aunt Julie make special (.) for you guys xxx ?\n'), ((2483, (52, 55)), '*MOT:\tdid you [//] what did Aunt Julie make special (.) for you guys xxx ?\n'), ((2489, (8, 11)), '*CHI:\ta hit [!] thing .\n'), ((2489, (16, 21)), '*CHI:\ta hit [!] thing .\n'), ((2492, (-1, 4)), '*MOT:\tpinata .\n'), ((2492, (6, 12)), '*MOT:\tpinata .\n'), ((2495, (6, 10)), '*CHI:\tyeah .\n'), ((2498, (-1, 4)), '*MOT:\tand what did you do ?\n'), ((2503, (28, 34)), '*MOT:\twhat [/] what was the pinata ?\n'), ((2511, (-1, 4)), '*CHI:\tand I smacked [!] the birdie !\n'), ((2511, (28, 34)), '*CHI:\tand I smacked [!] the birdie !\n'), ((2514, (6, 10)), '*MOT:\tyeah .\n'), ((2517, (-1, 4)), '*CHI:\tyeah real hard like this .\n'), ((2517, (16, 20)), '*CHI:\tyeah real hard like this .\n'), ((2520, (6, 11)), '*CHI:\tsmack !\n'), ((2525, (-1, 4)), '*CHI:\tand it goed@n way up to [/] to the sky .\n'), ((2525, (20, 23)), '*CHI:\tand it goed@n way up to [/] to the sky .\n'), ((2525, (41, 44)), '*CHI:\tand it goed@n way up to [/] to the sky .\n'), ((2530, (6, 9)), '*MOT:\tmhm .\n'), ((2533, (-1, 4)), '*CHI:\tand [/] and the and they dropped all [/] all the candy .\n'), ((2533, (10, 13)), '*CHI:\tand [/] and the and they dropped all [/] all the candy .\n'), ((2533, (55, 60)), '*CHI:\tand [/] and the and they dropped all [/] all the candy .\n'), ((2539, (-1, 4)), '*CHI:\tand I got some gum .\n'), ((2539, (21, 24)), '*CHI:\tand I got some gum .\n'), ((2542, (-1, 4)), '*CHI:\tand I got some more [!] gum .\n'), ((2542, (30, 33)), '*CHI:\tand I got some more [!] gum .\n'), ((2545, (9, 12)), '*CHI:\t<I [/] I get> [//] I got some too .\n'), ((2548, (-1, 4)), '*CHI:\tI got some (.) two gum .\n'), ((2548, (25, 28)), '*CHI:\tI got some (.) two gum .\n'), ((2551, (-1, 4)), '*MOT:\tyou did ?\n'), ((2555, (-1, 4)), '*MOT:\tyou got two gums and anything else ?\n'), ((2555, (18, 22)), '*MOT:\tyou got two gums and anything else ?\n'), ((2560, (6, 9)), '*CHI:\thm: .\n'), ((2563, (-1, 4)), '*MOT:\tdid other kids play too ?\n'), ((2563, (16, 20)), '*MOT:\tdid other kids play too ?\n'), ((2567, (-1, 4)), '*MOT:\twho else played ?\n'), ((2571, (9, 15)), '*CHI:\tmy cousin .\n'), ((2574, (-1, 4)), '*MOT:\twho ?\n'), ((2585, (6, 9)), '*CHI:\twww [=! loud noise] .\n'), ((2585, (14, 18)), '*CHI:\twww [=! loud noise] .\n'), ((2585, (19, 25)), '*CHI:\twww [=! loud noise] .\n'), ((2586, (-1, 4)), "*CHI:\tdon't laugh at me .\n"), ((2586, (6, 11)), "*CHI:\tdon't laugh at me .\n"), ((2586, (12, 17)), "*CHI:\tdon't laugh at me .\n"), ((2591, (10, 12)), '*MOT:\t(.) ow .\n'), ((2594, (-1, 4)), "*CHI:\tthen don't laugh at me .\n"), ((2594, (17, 22)), "*CHI:\tthen don't laugh at me .\n"), ((2598, (-1, 4)), "*MOT:\tbut you're funny .\n"), ((2598, (17, 22)), "*MOT:\tbut you're funny .\n"), ((2601, (-1, 4)), '*MOT:\tyou funny little kid !\n'), ((2601, (23, 26)), '*MOT:\tyou funny little kid !\n'), ((2604, (41, 47)), '*MOT:\t(..) did you dry [//] run [?] your papers today ?\n'), ((2604, (48, 53)), '*MOT:\t(..) did you dry [//] run [?] your papers today ?\n'), ((2609, (-1, 4)), '*MOT:\t(.) what are you doin(g) ?\n'), ((2613, (24, 27)), "*CHI:\tI'm twisting your arm .\n"), ((2619, (6, 10)), '*CHI:\tyeah !\n'), ((2622, (6, 9)), '*MOT:\tgee thanks that feels much better now .\n'), ((2622, (10, 16)), '*MOT:\tgee thanks that feels much better now .\n'), ((2626, (6, 9)), '*CHI:\twww [=! loud noise] .\n'), ((2626, (14, 18)), '*CHI:\twww [=! loud noise] .\n'), ((2626, (19, 25)), '*CHI:\twww [=! loud noise] .\n'), ((2627, (-1, 4)), '*MOT:\tyou almost done ?\n'), ((2631, (13, 19)), '*MOT:\tfinish eating Chi .\n'), ((2638, (32, 36)), '*MOT:\t(..) did you climb up the tree ?\n'), ((2642, (-1, 4)), "*MOT:\tthat was a big tree wasn't it ?\n"), ((2642, (21, 25)), "*MOT:\tthat was a big tree wasn't it ?\n"), ((2642, (26, 32)), "*MOT:\tthat was a big tree wasn't it ?\n"), ((2651, (-1, 4)), "*MOT:\tyou couldn't ?\n"), ((2655, (-1, 4)), '*MOT:\twho did ?\n'), ((2659, (-1, 4)), '*CHI:\tbut [/] but I could .\n'), ((2662, (-1, 4)), '*CHI:\tand beside that .\n'), ((2662, (10, 16)), '*CHI:\tand beside that .\n'), ((2665, (-1, 4)), '*CHI:\tI [/] I left xxx .\n'), ((2665, (19, 22)), '*CHI:\tI [/] I left xxx .\n'), ((2668, (-1, 4)), '*CHI:\tand xxx climbed a way high .\n'), ((2668, (10, 13)), '*CHI:\tand xxx climbed a way high .\n'), ((2668, (24, 27)), '*CHI:\tand xxx climbed a way high .\n'), ((2671, (-1, 4)), '*MOT:\tyou did ?\n'), ((2675, (6, 9)), '*CHI:\tyep .\n'), ((2678, (-1, 4)), '*MOT:\twith who ?\n'), ((2682, (10, 14)), '*CHI:\t<to the> [/] to the clouds .\n'), ((2682, (15, 18)), '*CHI:\t<to the> [/] to the clouds .\n'), ((2682, (26, 32)), '*CHI:\t<to the> [/] to the clouds .\n'), ((2685, (-1, 4)), '*MOT:\tto the clouds ?\n'), ((2685, (13, 19)), '*MOT:\tto the clouds ?\n'), ((2692, (-1, 4)), "*MOT:\tand you didn't fall ?\n"), ((2696, (6, 9)), '*CHI:\thm: .\n'), ((2699, (6, 12)), "*MOT:\tthat's good .\n"), ((2699, (13, 17)), "*MOT:\tthat's good .\n"), ((2702, (-1, 4)), '*CHI:\tI hold on .\n'), ((2708, (-1, 4)), '*CHI:\tI stand up and I hold on like this .\n'), ((2713, (36, 50)), "*CHI:\t<and [/] and &-uh> [//] and a pretend turtle couldn't get me .\n"), ((2718, (-1, 4)), '*MOT:\tyou stood up ?\n'), ((2722, (-1, 4)), "*MOT:\tand you held on like that and the turtle couldn't get you ?\n"), ((2722, (40, 46)), "*MOT:\tand you held on like that and the turtle couldn't get you ?\n"), ((2728, (6, 9)), '*CHI:\thm: .\n'), ((2734, (-1, 4)), '*MOT:\twhere was the turtle ?\n'), ((2734, (20, 26)), '*MOT:\twhere was the turtle ?\n'), ((2738, (-1, 4)), '*CHI:\the [/] he was way down to the ground .\n'), ((2738, (20, 23)), '*CHI:\the [/] he was way down to the ground .\n'), ((2738, (36, 42)), '*CHI:\the [/] he was way down to the ground .\n'), ((2744, (6, 8)), "*MOT:\toh I was gonna say I didn't think turtles could (.) climb the trees .\n"), ((2744, (40, 47)), "*MOT:\toh I was gonna say I didn't think turtles could (.) climb the trees .\n"), ((2744, (68, 73)), "*MOT:\toh I was gonna say I didn't think turtles could (.) climb the trees .\n"), ((2750, (-1, 4)), '*CHI:\tbut they could .\n'), ((2757, (6, 13)), '*MOT:\tpretend turtles ?\n'), ((2757, (14, 21)), '*MOT:\tpretend turtles ?\n'), ((2761, (6, 9)), '*CHI:\tyup those are pretend turtles .\n'), ((2761, (28, 35)), '*CHI:\tyup those are pretend turtles .\n'), ((2765, (24, 36)), "*MOT:\toh okay (be)cause real turtles can't climb trees .\n"), ((2765, (43, 48)), "*MOT:\toh okay (be)cause real turtles can't climb trees .\n"), ((2765, (49, 54)), "*MOT:\toh okay (be)cause real turtles can't climb trees .\n"), ((2771, (-1, 4)), '*CHI:\twhy ?\n'), ((2775, (-1, 4)), "*MOT:\t(be)cause they don't have (.) the arms and the legs and the fingers they need to climb .\n"), ((2775, (40, 44)), "*MOT:\t(be)cause they don't have (.) the arms and the legs and the fingers they need to climb .\n"), ((2775, (53, 57)), "*MOT:\t(be)cause they don't have (.) the arms and the legs and the fingers they need to climb .\n"), ((2775, (66, 73)), "*MOT:\t(be)cause they don't have (.) the arms and the legs and the fingers they need to climb .\n"), ((2785, (-1, 4)), '*CHI:\twhy ?\n'), ((2792, (-1, 4)), '*MOT:\twhy ?\n'), ((2796, (-1, 4)), "*MOT:\tbecause that's the way they're made .\n"), ((2796, (25, 28)), "*MOT:\tbecause that's the way they're made .\n"), ((2796, (29, 36)), "*MOT:\tbecause that's the way they're made .\n"), ((2802, (-1, 4)), '*CHI:\t&on only fake turtles can climb up the tree ?\n'), ((2802, (20, 27)), '*CHI:\t&on only fake turtles can climb up the tree ?\n'), ((2802, (45, 49)), '*CHI:\t&on only fake turtles can climb up the tree ?\n'), ((2808, (6, 10)), '*MOT:\tsure .\n'), ((2811, (-1, 4)), '*MOT:\tfake turtles can do whatever you want them to do .\n'), ((2811, (11, 18)), '*MOT:\tfake turtles can do whatever you want them to do .\n'), ((2820, (6, 13)), "*MOT:\tthey're pretend .\n"), ((2820, (14, 21)), "*MOT:\tthey're pretend .\n"), ((2824, (43, 48)), '*CHI:\tMama I wanna go get (.) some &l nice &tail turtles (.) &wh when we wake up .\n'), ((2824, (49, 56)), '*CHI:\tMama I wanna go get (.) some &l nice &tail turtles (.) &wh when we wake up .\n'), ((2829, (-1, 4)), '*MOT:\twhere are we gonna put them ?\n'), ((2838, (22, 28)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2838, (33, 40)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2838, (54, 60)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2838, (61, 65)), '*CHI:\t<a nice [?] [!] turtle [/] turtle> [//] &n nice turtle toys !\n'), ((2844, (6, 10)), '*CHI:\tyeah nice turtle (.) things [//] toys .\n'), ((2844, (16, 22)), '*CHI:\tyeah nice turtle (.) things [//] toys .\n'), ((2844, (27, 33)), '*CHI:\tyeah nice turtle (.) things [//] toys .\n'), ((2844, (39, 43)), '*CHI:\tyeah nice turtle (.) things [//] toys .\n'), ((2847, (6, 10)), '*MOT:\tokay .\n'), ((2850, (-1, 4)), '*CHI:\tcan I ?\n'), ((2854, (-1, 4)), '*MOT:\tyou know where there are any ?\n'), ((2858, (-1, 4)), '*CHI:\thuh ?\n'), ((2858, (6, 9)), '*CHI:\thuh ?\n'), ((2862, (-1, 4)), '*MOT:\tdo you know where they are ?\n'), ((2866, (-1, 4)), '*CHI:\twhere ?\n'), ((2870, (-1, 4)), "*MOT:\tI dunno [: don't know] .\n"), ((2870, (17, 22)), "*MOT:\tI dunno [: don't know] .\n"), ((2870, (23, 28)), "*MOT:\tI dunno [: don't know] .\n"), ((2877, (-1, 4)), '*MOT:\txxx World ?\n'), ((2881, (13, 17)), '*CHI:\t&y &ye yeah that because (.) &th they in the poo+poo .\n'), ((2886, (28, 35)), "*MOT:\twell I don't want any turtles like that .\n"), ((2891, (6, 9)), '*CHI:\t(.) and the turtle [/] turtle is a bum+bum .\n'), ((2891, (18, 24)), '*CHI:\t(.) and the turtle [/] turtle is a bum+bum .\n'), ((2891, (29, 35)), '*CHI:\t(.) and the turtle [/] turtle is a bum+bum .\n'), ((2895, (22, 26)), "*MOT:\t(..) how's your baby Stacie ?\n"), ((2899, (24, 31)), '*CHI:\tMama I look at my sneaker .\n'), ((2907, (6, 10)), '*MOT:\tuhoh .\n'), ((2910, (-1, 4)), '*MOT:\tyou stepped on something already ?\n'), ((2914, (-1, 4)), '*MOT:\tin brand+new sneakers ?\n'), ((2918, (18, 21)), '*CHI:\tmy_goodness [?] .\n'), ((2924, (-1, 4)), "*MOT:\tI'll get it .\n"), ((2934, (8, 16)), '*MOT:\ta meatball you dropped on the floor &=laughs .\n'), ((2934, (36, 41)), '*MOT:\ta meatball you dropped on the floor &=laughs .\n'), ((2939, (-1, 4)), '*MOT:\tyou stepped on it .\n'), ((2942, (6, 8)), '*CHI:\tew .\n'), ((2945, (-1, 4)), '*MOT:\tso how was Stacie ?\n'), ((2952, (-1, 4)), '*MOT:\tyeah ?\n'), ((2952, (6, 10)), '*MOT:\tyeah ?\n'), ((2956, (10, 15)), "*MOT:\t(.) she's not sick ?\n"), ((2960, (6, 9)), '*CHI:\thm: .\n'), ((2963, (6, 9)), '*MOT:\t(.) we had to step on the rest of it [= meatball] .\n'), ((2963, (32, 36)), '*MOT:\t(.) we had to step on the rest of it [= meatball] .\n'), ((2963, (46, 55)), '*MOT:\t(.) we had to step on the rest of it [= meatball] .\n'), ((2968, (6, 10)), '*CHI:\tyeah .\n'), ((2975, (-1, 4)), '*CHI:\thuh ?\n'), ((2975, (6, 9)), '*CHI:\thuh ?\n'), ((2979, (-1, 4)), '*MOT:\tis your birthday coming up ?\n'), ((2983, (-1, 4)), '*CHI:\tnow ?\n'), ((2995, (-1, 4)), '*MOT:\t+^ you gonna have a birthday soon ?\n'), ((2995, (6, 8)), '*MOT:\t+^ you gonna have a birthday soon ?\n'), ((3005, (6, 10)), '*MOT:\tyeah .\n'), ((3008, (-1, 4)), '*CHI:\tI mean now ?\n'), ((3012, (-1, 4)), '*MOT:\tare you ?\n'), ((3016, (-1, 4)), '*CHI:\tam I gonna have a +//.\n'), ((3019, (-1, 4)), '*CHI:\tam [/] am I [!] gonna have <a &birt> [//] (.) the [?] birthday par:ty in here ?\n'), ((3019, (22, 27)), '*CHI:\tam [/] am I [!] gonna have <a &birt> [//] (.) the [?] birthday par:ty in here ?\n'), ((3019, (69, 75)), '*CHI:\tam [/] am I [!] gonna have <a &birt> [//] (.) the [?] birthday par:ty in here ?\n'), ((3025, (6, 9)), '*MOT:\tmhm .\n'), ((3029, (10, 14)), "*MOT:\t<do you> [<] know how old you're gonna be ?\n"), ((3029, (15, 18)), "*MOT:\t<do you> [<] know how old you're gonna be ?\n"), ((3029, (32, 38)), "*MOT:\t<do you> [<] know how old you're gonna be ?\n"), ((3029, (39, 44)), "*MOT:\t<do you> [<] know how old you're gonna be ?\n"), ((3043, (12, 17)), '*CHI:\tfours years old .\n'), ((3046, (-1, 4)), "*MOT:\tthat's right .\n"), ((3046, (6, 12)), "*MOT:\tthat's right .\n"), ((3046, (13, 18)), "*MOT:\tthat's right .\n"), ((3049, (-1, 4)), '*CHI:\tbut I thought I was (.) three years old .\n'), ((3049, (36, 41)), '*CHI:\tbut I thought I was (.) three years old .\n'), ((3056, (-1, 4)), '*MOT:\tyou are [!] three years old .\n'), ((3056, (24, 29)), '*MOT:\tyou are [!] three years old .\n'), ((3059, (6, 12)), "*MOT:\tthat's why on your birthday you're gonna turn four years old .\n"), ((3059, (57, 62)), "*MOT:\tthat's why on your birthday you're gonna turn four years old .\n"), ((3065, (-1, 4)), '*CHI:\twhy ?\n'), ((3069, (-1, 4)), "*MOT:\t(be)cause that's the next number .\n"), ((3069, (32, 38)), "*MOT:\t(be)cause that's the next number .\n"), ((3073, (-1, 4)), '*CHI:\t&aw not again !\n'), ((3076, (-1, 4)), '*MOT:\tyou know what else ?\n'), ((3080, (-1, 4)), '*MOT:\tyou know where else that number is ?\n'), ((3080, (31, 37)), '*MOT:\tyou know where else that number is ?\n'), ((3089, (-1, 4)), '*MOT:\tsit up .\n'), ((3095, (28, 34)), "*MOT:\twhat's your telephone number ?\n"), ((3103, (-1, 4)), "*MOT:\t<what &n> [//] what's the first number of your telephone number ?\n"), ((3103, (38, 44)), "*MOT:\t<what &n> [//] what's the first number of your telephone number ?\n"), ((3109, (11, 14)), '*CHI:\t&-um (.) six six eight .\n'), ((3112, (10, 15)), '*CHI:\tone oh oh .\n'), ((3116, (30, 36)), "*MOT:\tthe same (.) as how old you're gonna be .\n"), ((3116, (37, 42)), "*MOT:\tthe same (.) as how old you're gonna be .\n"), ((3124, (-1, 4)), '*CHI:\twhy ?\n'), ((3128, (-1, 4)), '*MOT:\t(be)cause it is .\n'), ((3131, (-1, 4)), '*MOT:\tjust happens to work out that way .\n'), ((3131, (36, 39)), '*MOT:\tjust happens to work out that way .\n'), ((3135, (-1, 4)), '*MOT:\t(.) you remember your address ?\n'), ((3135, (6, 9)), '*MOT:\t(.) you remember your address ?\n'), ((3135, (28, 35)), '*MOT:\t(.) you remember your address ?\n'), ((3142, (-1, 4)), "*MOT:\tyou don't ?\n"), ((3146, (-1, 4)), "*CHI:\twhere's my &ad address ?\n"), ((3146, (17, 20)), "*CHI:\twhere's my &ad address ?\n"), ((3146, (21, 28)), "*CHI:\twhere's my &ad address ?\n"), ((3150, (-1, 4)), '*MOT:\tyou know what it is .\n'), ((3153, (27, 33)), '*MOT:\tthink about it for a minute .\n'), ((3163, (-1, 4)), '*MOT:\t(.) do you remember ?\n'), ((3163, (6, 9)), '*MOT:\t(.) do you remember ?\n'), ((3173, (-1, 4)), '*MOT:\tI bet you do .\n'), ((3176, (-1, 4)), "*CHI:\tI don't .\n"), ((3179, (11, 18)), '*MOT:\tyour address is where you live .\n'), ((3183, (-1, 4)), '*MOT:\t(..) where do you live ?\n'), ((3187, (11, 14)), '*CHI:\t(..) www [=! frustrated noise] .\n'), ((3188, (6, 10)), '*MOT:\t&mar .\n'), ((3195, (6, 9)), '*CHI:\thm: &=pleased .\n'), ((3198, (6, 9)), '*MOT:\tsee I knew you remembered .\n'), ((3201, (6, 8)), '*CHI:\tmm .\n'), ((3204, (11, 17)), "*CHI:\t&-um what's my telephone number ?\n"), ((3204, (31, 37)), "*CHI:\t&-um what's my telephone number ?\n"), ((3211, (11, 14)), '*CHI:\tfour [>] +/.\n'), ((3214, (10, 14)), '*MOT:\t<do you> [<] know +//.\n'), ((3214, (15, 18)), '*MOT:\t<do you> [<] know +//.\n'), ((3217, (-1, 4)), '*MOT:\tdo you know it ?\n'), ((3228, (6, 9)), '*CHI:\thm: &=pleased .\n'), ((3231, (6, 9)), '*MOT:\thm: let me see .\n'), ((3234, (-1, 4)), "*MOT:\tand what's your name ?\n"), ((3234, (22, 26)), "*MOT:\tand what's your name ?\n"), ((3238, (-1, 4)), '*CHI:\tChi [= full name] is my name .\n'), ((3238, (18, 23)), '*CHI:\tChi [= full name] is my name .\n'), ((3244, (6, 12)), "*MOT:\twhat's Mommy's name ?\n"), ((3244, (21, 25)), "*MOT:\twhat's Mommy's name ?\n"), ((3248, (18, 23)), '*CHI:\tMom [= full name] xxx name .\n'), ((3248, (24, 27)), '*CHI:\tMom [= full name] xxx name .\n'), ((3252, (6, 12)), "*MOT:\twhat's Daddy's name ?\n"), ((3252, (21, 25)), "*MOT:\twhat's Daddy's name ?\n"), ((3256, (-1, 4)), '*CHI:\tJake Adams Fluellen xxx .\n'), ((3260, (-1, 4)), '*MOT:\t(.) you learning how to spell your name in school ?\n'), ((3260, (6, 9)), '*MOT:\t(.) you learning how to spell your name in school ?\n'), ((3260, (41, 45)), '*MOT:\t(.) you learning how to spell your name in school ?\n'), ((3260, (49, 55)), '*MOT:\t(.) you learning how to spell your name in school ?\n'), ((3266, (44, 47)), '*CHI:\tfour five three three <two two eight> [>] .\n'), ((3273, (6, 13)), '*MOT:\tmachine .\n'), ((3276, (6, 9)), '*CHI:\txxx .\n'), ((3278, (28, 34)), "*MOT:\tthat's your telephone number .\n"), ((3281, (-1, 4)), "*MOT:\t<you you> [/] you're learning how to spell your first name in school right ?\n"), ((3281, (60, 64)), "*MOT:\t<you you> [/] you're learning how to spell your first name in school right ?\n"), ((3281, (68, 74)), "*MOT:\t<you you> [/] you're learning how to spell your first name in school right ?\n"), ((3281, (75, 80)), "*MOT:\t<you you> [/] you're learning how to spell your first name in school right ?\n"), ((3290, (-1, 4)), '*MOT:\tChi &=laughs .\n'), ((3294, (6, 10)), '*MOT:\tstop that .\n'), ((3297, (6, 10)), "*MOT:\tit's [=? just] like a broken record .\n"), ((3297, (15, 20)), "*MOT:\tit's [=? just] like a broken record .\n"), ((3297, (28, 34)), "*MOT:\tit's [=? just] like a broken record .\n"), ((3297, (35, 41)), "*MOT:\tit's [=? just] like a broken record .\n"), ((3301, (6, 8)), '*CHI:\tah [=! sighs and giggles] .\n'), ((3301, (13, 18)), '*CHI:\tah [=! sighs and giggles] .\n'), ((3312, (33, 37)), '*MOT:\thow do you spell your last name ?\n'), ((3317, (6, 9)), '*CHI:\thm: .\n'), ((3325, (6, 9)), '*MOT:\tc@l .\n'), ((3328, (6, 8)), '*CHI:\tay iy@o ay z@l z@l o@l .\n'), ((3328, (9, 13)), '*CHI:\tay iy@o ay z@l z@l o@l .\n'), ((3328, (17, 20)), '*CHI:\tay iy@o ay z@l z@l o@l .\n'), ((3328, (25, 28)), '*CHI:\tay iy@o ay z@l z@l o@l .\n'), ((3334, (6, 12)), '*CHI:\tc@l ay iy@o ay z@l z@l o@l !\n'), ((3334, (13, 17)), '*CHI:\tc@l ay iy@o ay z@l z@l o@l !\n'), ((3334, (21, 24)), '*CHI:\tc@l ay iy@o ay z@l z@l o@l !\n'), ((3334, (29, 32)), '*CHI:\tc@l ay iy@o ay z@l z@l o@l !\n'), ((3337, (6, 11)), '*MOT:\t<very good> [>] .\n'), ((3337, (12, 17)), '*MOT:\t<very good> [>] .\n'), ((3337, (18, 21)), '*MOT:\t<very good> [>] .\n'), ((3341, (6, 9)), '*CHI:\txxx .\n'), ((3345, (-1, 4)), "*MOT:\t(.) you want to go over Julie's again ?\n"), ((3351, (6, 10)), '*CHI:\tyeah .\n'), ((3358, (-1, 4)), '*MOT:\t+^ you had fun huh ?\n'), ((3358, (6, 8)), '*MOT:\t+^ you had fun huh ?\n'), ((3358, (21, 24)), '*MOT:\t+^ you had fun huh ?\n'), ((3362, (6, 10)), '*CHI:\tyeah I want to go see her again .\n'), ((3366, (6, 10)), '*MOT:\tyeah .\n'), ((3369, (-1, 4)), '*CHI:\tcan I ?\n'), ((3373, (6, 10)), "*MOT:\tyeah we'll go again sometime .\n"), ((3373, (11, 16)), "*MOT:\tyeah we'll go again sometime .\n"), ((3376, (-1, 4)), '*MOT:\tin a little while .\n'), ((3376, (18, 23)), '*MOT:\tin a little while .\n'), ((3379, (-1, 4)), '*MOT:\tthere was a lot of people there huh ?\n'), ((3379, (18, 21)), '*MOT:\tthere was a lot of people there huh ?\n'), ((3379, (25, 31)), '*MOT:\tthere was a lot of people there huh ?\n'), ((3385, (6, 10)), '*CHI:\tyeah .\n'), ((3388, (-1, 4)), '*MOT:\tsee all your relatives ?\n'), ((3388, (19, 28)), '*MOT:\tsee all your relatives ?\n'), ((3393, (11, 16)), "*CHI:\t(..) watch this I'm gonna snap .\n"), ((3393, (26, 31)), "*CHI:\t(..) watch this I'm gonna snap .\n"), ((3393, (32, 36)), "*CHI:\t(..) watch this I'm gonna snap .\n"), ((3396, (9, 14)), '*CHI:\t+^ watch .\n'), ((3401, (6, 11)), '*CHI:\twatch .\n'), ((3407, (-1, 4)), '*CHI:\twant to hear me snap ?\n'), ((3407, (22, 26)), '*CHI:\twant to hear me snap ?\n'), ((3416, (6, 8)), '*CHI:\tah .\n'), ((3420, (-1, 4)), "*MOT:\thow'd you learn <how to do that> [>] ?\n"), ((3420, (6, 11)), "*MOT:\thow'd you learn <how to do that> [>] ?\n"), ((3426, (16, 19)), '*CHI:\tgreat [?] [<] .\n'), ((3429, (-1, 4)), '*CHI:\tat my school .\n'), ((3429, (12, 18)), '*CHI:\tat my school .\n'), ((3432, (-1, 4)), '*MOT:\tat your school ?\n'), ((3432, (14, 20)), '*MOT:\tat your school ?\n'), ((3436, (10, 14)), '*CHI:\txxx wait .\n'), ((3439, (-1, 4)), '*MOT:\tdid your teacher tell you how to do that ?\n'), ((3439, (15, 22)), '*MOT:\tdid your teacher tell you how to do that ?\n'), ((3439, (23, 27)), '*MOT:\tdid your teacher tell you how to do that ?\n'), ((3448, (-1, 4)), '*MOT:\twhich teacher ?\n'), ((3456, (-1, 4)), '*MOT:\tMonique ?\n'), ((3460, (6, 10)), '*CHI:\tyeah and xxx .\n'), ((3460, (15, 18)), '*CHI:\tyeah and xxx .\n'), ((3463, (6, 8)), '*MOT:\tmm .\n'), ((3466, (6, 10)), '*MOT:\tcome here .\n'), ((3469, (-1, 4)), '*MOT:\tsit down .\n'), ((3472, (6, 10)), '*MOT:\tcome over here .\n')]
calculating accuracy and recall
correct labels:
set(['sausage', 'cupcakes', 'meat', 'meatballs', 'bacon', 'pepper', 'cupcake', 'gums', 'cookie', 'duck', 'meatball', 'salt', 'egg', 'hamburgers', 'pumpkin'])
predicted labels:
set(['', 'throat]', 'nice man', 'ugh', 'help', "don't", 'meatballs', 'fall', '&m meatballs', 'fingers', 'arm', '&-um', 'paper', 'splurt', 'thanks', 'shake', 'yep', 'yes', '<&an', 'pinata', '&ad', 'ground', 'beside', "we'll", 'number', 'piano]', "he's", 'tv', '<you', 'oh oh', "baby's", 'mask', 'c@l', 'know>', 'duck huh', 'crack', 'fuel', '&tail', 'did>', 'pumpkin', 'junk', 'cough]', 'good', 'hit', 'get', 'food', 'watch', '&bwuh', 'gonna', 'cupcake', 'it>', 'smack', '[>]', '[!]', 'kid', 'hands', 'cook', 'clouds', 'years', 'cage', 'minute', 'name', '&pe', 'school', 'mhm', 'yelps]', 'meat', 'the>', 'z@l', 'gun', 'candy', 'guns', "wasn't", 'woods', 'cookie', 'nose', 'eee', 'muscles', 'funny', 'gee', 'side', 'turtle', 'www', 'right', 'meadow', 'people', 'in>', 'house', 'hard', 'yeah', 'bad mood', 'brother', '&a', 'toys', 'num', 'gates', 'gum', "why'd", 'naw>', 'home', 'ew', 'uhuh', '&m', '&o', 'sausage', 'cupcakes', 'mood', 'whap', 'miano', '(.)', 'what]', 'please', 'noises', 'good>', 'o@l', "there's", 'hill', '&mar', 'just>', 'knife', 'body', 'pepper', 'when>', 'eating', 'monster', 'trees', 'wildly]', 'broken', 'job', '<and', 'mime', 'c@l ay', 'address', 'cousin', '<when', 'lap', 'teacher', 'just]', 'wait', 'boy', 'sister', 'ate', 'yard', 'teeth', 'oh', 'yup', '<they', 'choke', 'ick]', 'thing', 'place', 'cousins', 'ow', 'bullets', 'climb', 'loud', 'hunters', 'come', 'live', 'turtle>', 'hm:', 'point', '<who', 'sky', 'sneaker', 'arms', 'feet', "he's>", 'whole>', 'names', 'laugh', 'duck', 'live>', 'shoots', "you're", 'story', 'toy', 'brownies', 'meatball]', "it's", 'bite', '&w', 'hey', 'anyone', 'uhoh', 'splash', 'music', "we're", 'way', 'ah', 'iy@o', 'legs', 'tell', 'today', 'building', 'eyes', 'ti:ger', 'door', "what're", 'rest', 'was>', "what's", 'xxx', 'huh', 'they>', 'l:ive', 'tiger', 'you>', 'chair', 'part', '<&a', 'stick', 'shoot>', 'baby', 'eat', 'birdie', 'par:ty', "they're", 'kind', 'name]', 'to>', '[=!', 'sighs', 'mm', '[:', 'he>', 'pretend', 'tree', 'see', 'rope', 'record', 'while', 'and>', 'meatball', 'zoo', "how'd", 'mistake', 'bacon]', 'real turtles', 'stop', 'know]', 'outta', 'noise]', 'floor', 'laughs', 'head', 'gots@n', 'twist', 'throat', 'hug', '[?]', 'goodness', '&i', 'yuck]', 'yuck', 'airplane', 'hamburgers', '&i in', 'machine', 'gums', '[/]', 'sit', 'things', 'kids', 'tip', '+^', 'your>', 'relatives', 'parts', 'boom', 'sick', 'papers', 'wolf', '<very', 'pretend turtle', 'ay', 'week', 'play', 'sure', 'okay', 'my>', 'series', 'cranky', 'mother', 'friends', 'hand', 'lot', 'mouth', 'blood', 'supper', '[<]', 'snap', 'weekend', 'man', 'yeah>', '&a &a', 'remember', 'bullet', 'egg', 'cheek', 'holes', 'turtles', 'face', "you'll", 'worry', 'time', 'clears', "she's", 'salt', 'part>', "that's"])
file:HSLLD/HV1/MT//geomt1.cha
precision: 0.0450160771704
recall: 0.933333333333
true positives:['cookie', 'cupcake', 'cupcakes', 'duck', 'egg', 'gums', 'hamburgers', 'meat', 'meatball', 'meatballs', 'pepper', 'pumpkin', 'salt', 'sausage']
false positives: ['', '&-um', '&a', '&a &a', '&ad', '&bwuh', '&i', '&i in', '&m', '&m meatballs', '&mar', '&o', '&pe', '&tail', '&w', '(.)', '+^', '<&a', '<&an', '<and', '<they', '<very', '<when', '<who', '<you', '[!]', '[/]', '[:', '[<]', '[=!', '[>]', '[?]', 'address', 'ah', 'airplane', 'and>', 'anyone', 'arm', 'arms', 'ate', 'ay', 'baby', "baby's", 'bacon]', 'bad mood', 'beside', 'birdie', 'bite', 'blood', 'body', 'boom', 'boy', 'broken', 'brother', 'brownies', 'building', 'bullet', 'bullets', 'c@l', 'c@l ay', 'cage', 'candy', 'chair', 'cheek', 'choke', 'clears', 'climb', 'clouds', 'come', 'cook', 'cough]', 'cousin', 'cousins', 'crack', 'cranky', 'did>', "don't", 'door', 'duck huh', 'eat', 'eating', 'eee', 'ew', 'eyes', 'face', 'fall', 'feet', 'fingers', 'floor', 'food', 'friends', 'fuel', 'funny', 'gates', 'gee', 'get', 'gonna', 'good', 'good>', 'goodness', 'gots@n', 'ground', 'gum', 'gun', 'guns', 'hand', 'hands', 'hard', "he's", "he's>", 'he>', 'head', 'help', 'hey', 'hill', 'hit', 'hm:', 'holes', 'home', 'house', "how'd", 'hug', 'huh', 'hunters', 'ick]', 'in>', "it's", 'it>', 'iy@o', 'job', 'junk', 'just>', 'just]', 'kid', 'kids', 'kind', 'knife', 'know>', 'know]', 'l:ive', 'lap', 'laugh', 'laughs', 'legs', 'live', 'live>', 'lot', 'loud', 'machine', 'man', 'mask', 'meadow', 'meatball]', 'mhm', 'miano', 'mime', 'minute', 'mistake', 'mm', 'monster', 'mood', 'mother', 'mouth', 'muscles', 'music', 'my>', 'name', 'name]', 'names', 'naw>', 'nice man', 'noise]', 'noises', 'nose', 'num', 'number', 'o@l', 'oh', 'oh oh', 'okay', 'outta', 'ow', 'paper', 'papers', 'par:ty', 'part', 'part>', 'parts', 'people', 'piano]', 'pinata', 'place', 'play', 'please', 'point', 'pretend', 'pretend turtle', 'real turtles', 'record', 'relatives', 'remember', 'rest', 'right', 'rope', 'school', 'see', 'series', 'shake', "she's", 'shoot>', 'shoots', 'sick', 'side', 'sighs', 'sister', 'sit', 'sky', 'smack', 'snap', 'sneaker', 'splash', 'splurt', 'stick', 'stop', 'story', 'supper', 'sure', 'teacher', 'teeth', 'tell', 'thanks', "that's", 'the>', "there's", "they're", 'they>', 'thing', 'things', 'throat', 'throat]', 'ti:ger', 'tiger', 'time', 'tip', 'to>', 'today', 'toy', 'toys', 'tree', 'trees', 'turtle', 'turtle>', 'turtles', 'tv', 'twist', 'ugh', 'uhoh', 'uhuh', 'wait', 'was>', "wasn't", 'watch', 'way', "we'll", "we're", 'week', 'weekend', 'whap', "what're", "what's", 'what]', 'when>', 'while', 'whole>', "why'd", 'wildly]', 'wolf', 'woods', 'worry', 'www', 'xxx', 'yard', 'yeah', 'yeah>', 'years', 'yelps]', 'yep', 'yes', "you'll", "you're", 'you>', 'your>', 'yuck', 'yuck]', 'yup', 'z@l', 'zoo']
false negatives: ['bacon']
# true pos: 14
# false pos: 297
# false neg: 1
HSLLD/HV1/MT//anamt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: look_it [?] (.) .', "*MOT: okay you're xxx .", '*CHI: yeah (.) .', "*CHI: that's [?] other ?", "*MOT: xxx that's right (.) .", '*MOT: here Mikey .', '*CHI: xxx .', '*MOT: so you want juice like that (.) ?', '*MOT: okay .', '*MOT: okay .', '*BRO: I like it with cheese .', '*MOT: hm: .', "*MOT: I don't have (.) xxx cheese .", '*CHI: xxx (.) xxx .', '*BRO: okay then put it (.) there .', '*CHI: xxx .', '*BRO: oh xxx [>] !', '*MOT: <Mariana> [<] ?', "*MOT: I don't have any good cheese look .", '*CHI: xxx .', '*MOT: okay .', '*BRO: xxx .', '*MOT: xxx (.) .', '*MOT: oh the lord is good to me +...', '*MOT: sing good .', '*MOT: and so I <thank the lord> [>] +...', '*BRO: thank the lord +...', '*MOT: for giving me (.) the things I need (.) the sun and the rain and the apple seed .', '*BRO: for giving me (.) the things I need (.) the sun and the rain and the apple seed .', '*MOT: <the lord is good to me > [>] .', '*BRO: the lord is good to me [<] .', '*MOT: <xxx Mikey> [>] ?', '*BRO: <the lord> [<] is good to me .', "*BRO: that's long .", '*MOT: do you like it Mariana ?', '*MOT: do you like that juice ?', '*CHI: xxx juice .', '*MOT: xxx .', '*BRO: zzz .', "*MOT: do you know how it's called (.) ?", '*MOT: to die dreaming .', '*MOT: because it tastes so good .', '*BRO: what tastes so good ?', '*MOT: this (.) juice .', '*MOT: with milk and <&-uh strawberries> [>] .', "*BRO: <what's it called> [<] ?", "*CHI: I don't wan(t) (t)a die [!] dreaming .", "*CHI: I don't .", '*MOT: zzz .', "*MOT: that's just the name of <it xxx xxx> [>] .", "*CHI: <I don't xxx> [<] xxx .", "*MOT: that doesn't mean you're gonna die right now it's only the <name of it xxx> [>] .", '*CHI: zzz [<] is out !', '*MOT: okay .', '*MOT: <Mariana> [>] ?', '*CHI: no [<] .', "*BRO: it's only the dream to me .", "*CHI: I don't want this !", '*MOT: try to eat a little bit then .', '*MOT: you wan(t) (t)a be strong and big (.) like Jackie ?', '*MOT: remember Jackie ?', "*MOT: she's big you know why ?", '*CHI: big [?] .', '*MOT: because she ate her food .', "*BRO: I'm eating it .", '*MOT: just like Mikey xxx .', '*CHI: Mommy ?', '*CHI: see I make a xxx I like .', '*MOT: pretty soon you will Mariana .', '*MOT: xxx [>] .', "*CHI: <well I'm a eat> [<] faster .", '*MOT: not necessarily .', '*CHI: why ?', '*MOT: you have_to do is eat your food .', '*MOT: <and maybe half of that> [>] .', '*CHI: zzz [<][>] .', '*MOT: <little bit> [<] .', "*CHI: I don't want that on my plate .", '*MOT: eat that next .', '*CHI: take it off !', "*CHI: I don't want to see it !", '*MOT: wan(t) (t)a see it ?', '*CHI: take it off of my plate !', '*MOT: you want your spoon ?', '*CHI: xxx [>] .', "*BRO: <I don't want> [<] this .", "*BRO: I don't want this .", '*CHI: zzz .', '*CHI: zzz [>] .', "*MOT: <that's not too funny Mariana> [<] .", '*CHI: zzz [>] .', '*MOT: <you know better> [<] .', '*CHI: zzz .', '*MOT: Mikey please .', '*BRO: xxx [>] .', '*CHI: <take it off of my> [<] plate take it off of my plate !', '*MOT: no .', "*CHI: I'm not gonna do that [>] .", '*CHI: zzz [<] take it off +...', '*MOT: Mariana ?', "*MOT: if you don't want it don't eat it .", '*MOT: <xxx [/] > [>] .', "*CHI: <I> [<] don't want it on my plate zzz zzz .", '*CHI: zzz get it out zzz .', '*MOT: eat the muffin then .', '*CHI: nuhhuh .', '*MOT: oh !', '*MOT: look at this water .', "*MOT: it's melting !", "*MOT: oh wow it's so hot out !", '*MOT: xxx .', "*MOT: it's melting just from being on the table .", "*MOT: I can't believe it .", "*BRO: all the food's melting [!] I can't believe it .", "*MOT: I'm glad (.) .", '*MOT: <xxx [/] > [>] .', "*BRO: <I got> [<] a xxx who's this ?", "*MOT: if you don't want it I'll put it back and eat it (.) .", '*MOT: eat the muffin okay .', "*MOT: hurry up and I'll get you a vitamin (.) after you finish your dinner ?", '*BRO: I want popsicles .', "*MOT: that's right the popsicle too .", '*BRO: want a popsicle (.) ?', '*BRO: yes (.) ?', '*BRO: then (.) eat your food !', "*CHI: but I don't want a vitamin .", "*MOT: then you won't eat your vitamin that's no problem Mariana .", "*BRO: and we won't get you (.) xxx .", '*MOT: zzz (.) .', '*MOT: oh .', '*MOT: this is so good .', '*MOT: right Mikey ?', '*MOT: you like it ?', '*BRO: no .', '*MOT: zzz .', "*BRO: I'll put it there .", '*MOT: maybe yours is better .', '*BRO: &-uh huh (.) .', "*BRO: I don't like onions I don't I hate onions .", '*BRO: I hate [!] onions .', '*MOT: I love it .', '*MOT: I love it .', '*BRO: zzz .', '*MOT: you ate enough .', '*MOT: you want a popsicle you know what to do .', "*BRO: I'm finished .", '*MOT: eat your food .', "*BRO: I'm finished .", '*MOT: look at that .', "*BRO: I don't want that !", "*BRO: I don't wan(t) (t)a eat that (.) !", '*BRO: I want a popsicle .', '*MOT: you have_to eat that .', '*BRO: no !', "*BRO: I don't want to [!] zzz [>] .", '*MOT: hey [<] .', '*MOT: Mikey stop acting like a baby .', "*BRO: zzz I don't want to !", "*MOT: do you remember how Eliza hits her [/] her daughters with a belt (.) when they don't listen ?", '*MOT: you want me to do that ?', '*BRO: uhuh .', '*MOT: okay you know better .', '*BRO: xxx .', "*MOT: I'll help you okay ?", '*BRO: no .', '*MOT: here (.) .', '*MOT: eat a bit .', '*MOT: try xxx .', "*BRO: I don't like those onions .", '*MOT: okay I took them out (.) .', "*MOT: it's good isn't it ?", "*BRO: I don't want onions .", "*MOT: it doesn't have any onions Mikey .", '*MOT: I took them out (.) .', '*MOT: hm: .', '*BRO: xxx .', '*BRO: hm: .', '*MOT: alright Mariana .', '*MOT: did you finish ?', '*CHI: uhhuh .', "*MOT: &-uh Mikey's having a popsicle .", "*MOT: maybe Mariana doesn't want any popsicle (.) .", "*MOT: I don't see her eating .", '*CHI: xxx .', '*MOT: come on honey [?] (.) .', '*MOT: drink the juice too (.) .', '*MOT: zzz she looks so funny .', '*BRO: zzz .', '*MOT: xxx .', '*BRO: xxx .', '*MOT: xxx (.) .', "*MOT: you're not hungry huh Mikey ?", '*BRO: zzz (.) .', "*MOT: I can't believe how hot it is .", "*BRO: bet it'll melt the popsicle .", '*MOT: probably .', '*MOT: do you want to (.) play with Teresa ?', '*BRO: there ?', '*BRO: up there ?', '*BRO: under there or up there ?', '*MOT: up there .', "*BRO: I'll feed him .", '*MOT: tell [/] tell Mariana to come in now and drink the juice .', '*MOT: xxx .', '*BRO: Mariana !', '*BRO: Mariana [!] Mariana [!] come on [?] and drink your juice .', '*BRO: xxx .', '*CHI: 0 .', '*MOT: okay Mariana drink the juice .', '*CHI: no .', '*MOT: and eat your <muffin [?] > [>] .', '*CHI: no [<] .', '*CHI: a muffin ?', '*MOT: yes .', '*CHI: okay .', '*MOT: either one as long as you eat it (.) and drink your juice (.) .', '*MOT: hey Mikey ?', '*MOT: would you like some more juice ?', '*BRO: zzz .', "*MOT: finish that xxx and then I'll get you the popsicle .", "*MOT: oh it's so hot !", "*MOT: oh I'm sweating (.) .", '*MOT: right here <please Mikey> [>] .', "*BRO: no I can't drink this (.) because my throat get hurt !", '*MOT: how can you eat a popsicle then (.) ?', "*MOT: your tummy's gonna hurt .", '*BRO: nuhhuh (.) !', "*BRO: when you [//] I eat a popsicle <I don't> [/] I don't +...", "*BRO: I was eating in the store and I ate a popsicle and I didn't hurt my throat .", "*MOT: it didn't hurt ?", '*BRO: nuhhuh .', '*MOT: okay just a little bit left Mikey .', "*MOT: two more sips and that's it .", '*BRO: zzz ow [!] zzz .', "*MOT: good lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .", '*MOT: your throat is really hurt ?', '*BRO: no [!] .', "*MOT: if it doesn't hurt with the juice then it won't hurt with a popsicle (.) .", '*MOT: let me see .', '*BRO: zzz .', "*MOT: then you can't have a popsicle if it's only going to <hurt your> [/] hurt your throat .", '*BRO: xxx .', "*MOT: oh boy I guess he's sick .", '*MOT: better take him to the doctor .', '*CHI: and take him to the doctor <xxx right now> [>] .', '*MOT: <Mikey> [<] +...', "*BRO: I don't want to xxx !", "*BRO: zzz I don't want to .", '*MOT: finish it .', '*BRO: zzz it hurts .', '*MOT: see ?', "*MOT: it doesn't hurt .", '*BRO: ow !', '*MOT: okay .', "*MOT: you're not able to eat a popsicle <so xxx> [>] .", '*BRO: zzz zzz .', '*CHI: zzz .', '*MOT: okay .', '*MOT: see ?', '*MOT: how much is there ?', '*MOT: Mikey ?', '*MOT: just a little bit .', '*MOT: one (.) two !', "*MOT: and that's it .", '*MOT: xxx .', '*MOT: oh you guys .', "*MOT: you've lost your appetite huh Mikey and Mariana ?", '*CHI: nuhhuh .', '*CHI: I have a cold and he has a cough .', "*MOT: why you don't wan(t) (t)a eat ?", '*CHI: &-uh .', '*MOT: save your cups .', '*MOT: <xxx xxx [/] > [>] .', '*BRO: uhuh [<][>] .', '*MOT: okay .', '*MOT: are you (.) finished Mariana ?', '*BRO: I can get one now I want Mickey Mouse .', "*BRO: I know which one's Mickey Mouse .", '*MOT: we have only three Mikey .', '*MOT: I wan(t) (t)a see which xxx [>] .', '*CHI: xxx [<] .', '*CHI: me want the yellow one .', '*MOT: okay .', "*MOT: we don't have any yellow .", '*MOT: do we Mikey ?', '*BRO: no (.) .', '*BRO: orange and pink (.) and rose .', '*CHI: xxx .', '*BRO: and xxx xxx [>] .', '*CHI: xxx [<] .', '*CHI: <he says> [/] <he says> [//] <Mikey says> [>] [/] Mikey says only this juice .', '*MOT: <right Mariana xxx xxx [/] > [<] .', '*MOT: okay <xxx [/] > [>] .', "*BRO: <you're [?] keeping it> [<] off [?] of the box ?", '*MOT: we have a cherry a grape and an orange one .', '*MOT: which [>] one do you want ?', '*CHI: <xxx [/] > [<] .', '*CHI: I want the <orange one> [>] .', '*BRO: <the grape> [<] .', '*BRO: the grape .', '*MOT: okay .', '*CHI: xxx I want this [/] .', '*BRO: I xxx like this [>] one .', '*CHI: <this [/] > [<] .', "*MOT: that's a grape .", '*CHI: I want this one .', "*BRO: I like the red one I don't [?] like this .", '*MOT: cherry .', '*BRO: cherry .', '*CHI: what [>] ones do you ?', '*MOT: okay [<] .', '*MOT: you know you <have_to finish that Mariana before xxx> [>] .', '*BRO: <xxx out the box> [<] ?', '*BRO: why ?', '*MOT: what ?', '*BRO: why you took them <out from the> [//] out of the box ?', '*MOT: what do you want the box for ?', '*MOT: are you going to eat the box ?', '*BRO: no but there were popsicles in the box .', '*MOT: there were only three left Mikey .', "*MOT: we don't need the whole box in the freezer .", '*BRO: but those [/] those <in &m> [//] in boxes was in [/] in a box xxx (un)til tomorrow ?', "*MOT: there're no more popsicles .", '*BRO: no more ?', '*MOT: no .', '*MOT: remember you gave one to Pedro one to (.) Joey (.) and you had three yesterday ?', '*MOT: and Mariana had two ?', '*MOT: how can you expect to be more popsicles ?', '*MOT: zzz .', '*BRO: tomorrow buy more of these ?', '*MOT: yes .', '*MOT: if you behave .', '*BRO: I wan(t) (t)a get one for [?] this .', "*CHI: no more for them (be)cause (.) &-uh &d we're not gonna have no more .", "*MOT: that's right .", "*CHI: we're not gonna have no more [>] .", '*MOT: no [<] more for today .', '*BRO: nuhhuh when we get those popsicles (.) those are for the picnic .', '*BRO: those are for the summer .', '*MOT: xxx .', '*BRO: xxx you cook .', "*BRO: I didn't know you cook .", '*CHI: and I can open the popsicles .', '*MOT: okay .', "*MOT: let's finish <xxx [/]> [>] .", '*CHI: <and I> [<] can open the popsicle .', '*MOT: oh I see you can .', '*MOT: great Mariana .', "*BRO: that's (.) Donald Duck .", "*BRO: no that's Goofy .", "*BRO: that's Goofy .", '*MOT: know who wrote me a letter Mikey ?', '*BRO: who ?', '*MOT: Carmen .', '*MOT: remember Carmen ?', '*BRO: why ?', '*MOT: well she wanted to come back to Puerto Rico .', '*MOT: and she sent me this letter yesterday .', '*BRO: you told xxx he went away ?', '*MOT: yeah .', '*MOT: I need her .', '*BRO: <why you need> [//] why you want xxx ?', '*MOT: oh because I enjoyed her coming here [?] xxx .', "*MOT: she was a nice lady wasn't she ?", '*CHI: xxx .', '*MOT: she told me to say hi@q to you and Mariana .', '*MOT: in the letter .', "*CHI: but I don't want her to come back here again .", '*MOT: why honey ?', '*CHI: <(be)cause> [/] (be)cause (.) she always (.) says that .', '*MOT: what does she say [>] ?', '*CHI: she [<] always say Mariana Mariana every day !', '*MOT: every day ?', '*CHI: yeah .', '*MOT: is that true Mikey ?', '*BRO: no .', "*BRO: she doesn't say that .", '*CHI: <but I told her [/] > [>] .', '*BRO: xxx .', "*BRO: when [/] when [/] when [/] <when you bring> [/] when you bring <&m> [//] me xxx the xxx won't like it .", "*BRO: that's why he wants his cubby (.) to be there .", '*MOT: oh really ?', '*BRO: yes .', '*CHI: nuhhuh (.) <I heard her> [>] .', '*BRO: <uhhuh uhhuh> [<] .', '*CHI: nuhhuh .', '*CHI: I heard (.) her .', '*CHI: I heard her (.) say that every day .', '*MOT: Mariana Mariana ?', '*MOT: when was I [?] ?', '*MOT: when I went to the doctor ?', '*MOT: and she stayed with you (.) ?', '*MOT: oh (.) what did you do ?', '*CHI: &-um we played (.) .', '*CHI: we played ghosts .', '*CHI: Mikey was the ghost (.) and I was the baby (.) and Carmen was the mommy .', '*MOT: xxx [>] .', '*BRO: <and I was> [<] [/] I was scaring you .', '*MOT: okay .', '*CHI: zzz [>] .', '*MOT: must [<] have been fun huh ?', '*CHI: wan(t) (t)a play with us ?', '*CHI: ghosts ?', '*CHI: and Mikey be the ghost and I be the baby and you be the mom .', "*MOT: I'm the mommy .", "*MOT: zzz I'm the real mommy (.) .", "*MOT: I don't have_to pretend Mariana I'm the mommy !", '*CHI: but (.) you have_to play !', '*MOT: okay .', '*CHI: now !', "*MOT: maybe when we're finished okay ?", '*CHI: now !', '*MOT: <not right now when you finish the popsicle> [>] .', '*BRO: <bite your popsicle> [<] .', '*BRO: bite your <popsicle Mariana> [>] .', '*CHI: zzz [<] .', '*BRO: <I got> [/] I got mine .', '*CHI: xxx .', '*BRO: see look_it .', '*BRO: I bite it .', "*CHI: oh (.) that's cold .", '*MOT: xxx [>] .', '*BRO: <xxx bite> [<] it (.) .', '*BRO: you have_to do this .', '*BRO: zzz .', "*BRO: that's hot .", '*CHI: zzz .', "*CHI: they're cold .", '*CHI: zzz zzz zzz zzz .', '*MOT: supposed to be cold Mariana .', '*MOT: has to be cold .', "*CHI: but it's cold for me .", '*BRO: Mom xxx supposed to go to the store .', '*BRO: my popsicle melting .', '*MOT: yeah it was so hot out yesterday ?', '*BRO: uhhuh .', "*CHI: Mommy but mine wasn't .", '*BRO: do something [?] rock and roll .', '*MOT: oh I have so many things to do Mikey .', '*MOT: I got_to make (.) phone calls +...', '*BRO: no look_it .', '*BRO: this is rock and roll .', '*MOT: xxx hungry .', '*BRO: see I bet you it do rock and roll .', '*MOT: how do you know about rock and roll Mikey ?', "*BRO: that's how they got their hair .", '*CHI: Mommy (.) me wanted to buy clothes for me .', '*MOT: we will .', '*BRO: we did .', '*MOT: we <go(ing)> [>] .', '*CHI: but [<] me want to go again with you .', "*MOT: we're going again don't worry .", '*BRO: xxx [>] .', "*CHI: xxx [<] then let's go .", '*MOT: Mikey (.) .', '*MOT: Mikey xxx .', "*BRO: don't we get xxx ?", "*MOT: no we're talking about clothes .", '*MOT: not toys .', '*BRO: xxx (.) a school bag ?', '*MOT: what for ?', "*MOT: you don't need a school bag .", '*CHI: you told me when we get back we get a school bag .', '*MOT: that school bag is very big and very expensive .', '*MOT: and you got two school bags from Mikey .', "*MOT: besides you don't need a school bag .", '*MOT: what do you have_to take in yours ?', "*BRO: <I don't> [/] I don't like the red one .", "*BRO: I don't like red .", '*MOT: you like the G_I_Joe ?', '*MOT: G_I_Joe (.) the american hero .', '*BRO: I like <&g> [//] G_I_Joe .', '*BRO: I like the G_I_Joe .', '*BRO: matches my [>] clothes .', "*MOT: <Mikey> [<] (.) two more years Mikey when you go to first grade (.) I'm gonna get you a very nice school bag .", '*BRO: in the +...', '*MOT: two more years .', "*MOT: <<you don't> [/] you don't xxx [/] > [>] .", "*BRO: <and [/] and [/] and [/] and> [<] <G_I_Joe isn't> [//] G_I Joe (.) is +...", "*CHI: Mommy then let's go buy clothes !", '*MOT: not right now (.) Mariana .', "*CHI: let's meet in the steps .", '*MOT: when Mikey comes back from school we can go .', '*CHI: are you finished the pocketbook (.) ?', "*BRO: I'm going to school ?", '*MOT: not yet .', '*CHI: are we going to go cruising [?] over now ?', '*MOT: not yet .', '*BRO: I wan(t) (t)a go cruising [?] over .', '*MOT: <xxx to school Mikey xxx [/] > [>] .', '*CHI: <no me [!] me [!] are> [<] .', '*CHI: me are .', '*CHI: <me [/]> [>] .', '*BRO: xxx ?', '*CHI: mommy ?', '*MOT: yes ?', "*CHI: I'm gonna <go [/] > [>] .", "*BRO: <I'll [!]> [<] go to kindergarten .", "*CHI: mommy (.) I'm gonna go kindergarten ?", '*MOT: yes you are .', '*BRO: me too with me .', "*BRO: you're gonna go with me .", '*CHI: nuhhuh (.) xxx not yours .', '*CHI: this [///] Mom mine kindergarten (.) is yellow .', '*CHI: not black .', '*MOT: zzz .', "*MOT: <who told> [/] who told you that Mikey's school is black hey Mariana ?", '*CHI: no Mom !', '*CHI: in the kindergarten is black !', '*BRO: my [/] my [/] my <xxx [/] > [>] .', '*CHI: nuhhuh [<] !', '*CHI: oh <xxx black [?] > [>] .', "*MOT: <it's green> [<] .", '*CHI: black ?', '*MOT: green .', '*CHI: green ?', '*MOT: yes .', '*MOT: xxx [>] green .', '*BRO: xxx [<] .', "*CHI: I didn't know .", '*MOT: zzz now you know .', "*BRO: my [/] my [/] (.) my school's (.) red .", "*MOT: that's right (.) .", "*MOT: Mikey's school is red .", '*CHI: and my kindergarten is yellow .', "*MOT: now you're making up things Mariana .", '*BRO: our kindergarten (.) black .', '*MOT: oh Mikey check and see what time it is ?', '*MOT: we have a lot of things to do .', '*MOT: I do .', '*BRO: I do too .', '*MOT: xxx school Mikey .', '*BRO: xxx I need to put our (.) clothes away .', "*MOT: I'm going to school .", '*BRO: but I need to put my clothes away first .', '*MOT: okay good boy .', '*MOT: xxx helping Mommy .', '*MOT: <xxx [/] > [>] .', "*CHI: <I'm gonna put my clothes> [<] away .", '*CHI: Mommy ?', '*CHI: can I put my clothes <on by> [>] myself ?', '*BRO: xxx [<] ?', '*CHI: Mommy can I put <my [/] > [>] .', '*MOT: <there you go> [<] (.) .', '*CHI: Mommy can I put my clothes on by myself ?', '*MOT: you sure can .', '*CHI: thanks .', '*MOT: you finish that first honey .', '*CHI: okay .', '*MOT: then you can go anywhere .', '*CHI: anywhere ?', '*BRO: xxx coat .', "*MOT: oh no don't do that Mikey please .", '*BRO: <xxx [/] > [>] .', '*CHI: xxx [<] xxx .', "*MOT: don't [/] .", '*CHI: here .', '*CHI: <this one over here> [>] !', "*MOT: <that's not xxx> [<] .", '*CHI: Mikey put it over here .', '*MOT: no +...', '*CHI: xxx .', '*MOT: you know better Mariana .', '*CHI: (be)cause I like that .', '*CHI: zzz [>] .', "*MOT: <I'm> [<] gonna get the bills .", '*MOT: bye [?] Mikey .', '*MOT: you [>] like that ?', '*CHI: xxx [<] .', '*BRO: leave the paper off !', "*CHI: xxx (be)cause it's gonna xxx .", '*BRO: nuhhuh (.) !', '*BRO: if you leave the paper off (.) they will fill [?] .', '*CHI: nuhhuh .', '*BRO: might fill [?] .', '*BRO: xxx .', "*BRO: that's Donald_Duck .", "*BRO: that's Donald_Duck <Mom> [>] .", '*MOT: you [<] like it ?', '*BRO: let me taste it .', '*CHI: it tastes good Mommy !', '*CHI: tastes good Mama .', '*CHI: &a:h .', '*BRO: <can we change> [>] the places ?', '*MOT: <too sweet> [<] .', '*MOT: too sweet for me .', '*BRO: change ?', '*MOT: switch ?', '*MOT: switch xxx [>] ?', '*BRO: yes [<] .', '*MOT: okay (.) .', '*MOT: xxx .', "*BRO: you're gonna beat my [//] me up .", "*MOT: I'm beating you up huh ?", '*MOT: xxx let me see xxx [>] .', '*BRO: <Mariana too> [<] whoa .', "*BRO: they're eating so fast .", "*BRO: Mommy's eating a whole bunch (.) .", "*BRO: that's not too sweet ?", "*MOT: it's fine .", '*BRO: not sweet [>] ?', '*MOT: fine [<] .', '*MOT: no .', '*BRO: I wan(t) (t)a get one of these (.) .', '*BRO: <you like> [/] you like eating those ?', '*MOT: yes I do .', '*CHI: no Mommy <xxx [/] > [>] .', '*BRO: <you like> [<] that all dark and goopy@o ?', '*CHI: Mommy we saw this on T_V .', '*MOT: yeah .', '*MOT: which program is that Mikey ?', '*MOT: love tales ?', '*BRO: uhhuh .', '*MOT: Duck_Tales .', '*BRO: this xxx was the Duck_Tales .', '*BRO: not Mickey_Mouse .', '*BRO: xxx xxx Mickey_Mouse .', "*BRO: that's Mickey_Mouse dog .", '*MOT: oh .', '*CHI: yeah .', '*CHI: and that Pluto is [//] was [//] that xxx was +...', '*MOT: like [?] the duck tales .', '*CHI: nuhhuh !', '*MOT: no ?', '*CHI: nuhhuh .', "*BRO: the duck tales don't got a dog .", '*MOT: oh .', '*MOT: it belongs to the song [?] .', '*MOT: it goes xxx bingo remember ?', '*MOT: there was a +...', '*CHI: nuhhuh .', '*BRO: a dog named Bingo was his name oh .', '*BRO: <there was xxx who had a dog and Bingo was his name oh> [>] .', '*MOT: <there was xxx who had a dog and Bingo was his name oh> [<] .', '*BRO: <b@l i@l n@l g@l o@l b@l i@l n@l> [>] .', '*MOT: <b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .', '*BRO: <g@l o@l> [>] .', '*CHI: <xxx xxx> [<][>] !', '*MOT: go@k [<] bingo@k and Bingo was his name oh .', '*BRO: ngo@k and Bingo was his name oh .', '*CHI: Mommy I xxx up !', '*MOT: why Mariana xxx .', '*BRO: hurry up Mommy !', "*MOT: she's [?] xxx .", '*BRO: hurry up .', '*MOT: okay .', "*MOT: I'm coming .", '*BRO: hurry up <Mama> [>] .', '*MOT: xxx [<] .', "*BRO: I'm waiting for you .", '*BRO: &a:h he xxx .', "*BRO: maybe you're xxx to beat me up Mommy .", '*MOT: maybe .', '*CHI: cold [?] zzz .', '*MOT: xxx .', '*MOT: zzz .', '*MOT: now you can wash your teeth xxx Mariana .', '*MOT: no !', '*MOT: what are you doing ?', "*CHI: I'm cold !", "*CHI: I'm xxx xxx xxx .", '*BRO: oh mommy beat me up .', "*BRO: I'm the xxx .", '*BRO: xxx .', "*MOT: that's right .", "*MOT: I'm the second winner .", '*MOT: right Mariana ?', '*CHI: yeah .', '*CHI: still eating !', "*MOT: what's the matter honey [>] ?", "*CHI: there's a stomach ache .", '*MOT: zzz .', '*CHI: zzz .', '*MOT: you got a stomach ache ?', '*CHI: yeah !', '*CHI: xxx .', '*MOT: xxx .', '*CHI: why ?', '*MOT: because Mommy says so .', '*MOT: xxx .', '*BRO: xxx says no .', '*BRO: xxx that word xxx .', '*CHI: mommy .', '*CHI: I got hiccups .', '*MOT: okay wait a second .', "*MOT: now that you're finished Mariana go and wash your hands and teeth and face .", '*MOT: okay ?', '*BRO: xxx and you too .']
loading solution set
LINE NO ->  14
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  19
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  22
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  25
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  29
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  32
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  35
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  36
juice
juice juice 52
[('so', 'RB'), ('you', 'PRP'), ('want', 'VBP'), ('juice', 'NNS'), ('like', 'IN'), ('that', 'DT')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  40
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  43
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  46
cheese
cheese cheese 280
[('i', 'NN'), ('like', 'IN'), ('it', 'PRP'), ('with', 'IN'), ('cheese', 'NN')]
['cheese']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  49
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  52
cheese
cheese cheese 280
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('xxx', 'VBN'), ('cheese', 'NNS')]
['cheese']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  55
LINE NO ->  56
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  59
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  60
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  64
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  68
cheese
cheese cheese 280
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('good', 'JJ'), ('cheese', 'NN'), ('look', 'NN')]
['cheese']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  73
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  76
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  77
LINE NO ->  78
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  82
LINE NO ->  85
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  89
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  92
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  109
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  113
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  118
LINE NO ->  121
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  125
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  128
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  132
juice
juice juice 52
[('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('that', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  136
juice
juice juice 52
[('xxx', 'NN'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  139
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  140
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  145
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  150
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  153
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  156
LINE NO ->  159
juice
juice juice 52
[('this', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  162
strawberries
strawberries strawberries 96
[('with', 'IN'), ('milk', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('strawberries', 'NNS')]
['strawberries']
('food -> ', [['strawberries', 'Fruits and Fruit Juices']])
milk
milk milk 46
[('with', 'IN'), ('milk', 'NN'), ('and', 'CC'), ('uh', 'JJ'), ('strawberries', 'NNS')]
['milk']
('food -> ', [['strawberries', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  166
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  172
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  175
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  179
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  183
LINE NO ->  187
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  195
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  199
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  202
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  206
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  209
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  213
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  217
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  221
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  228
LINE NO ->  233
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  237
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  240
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  243
LINE NO ->  246
LINE NO ->  250
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  254
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  257
LINE NO ->  260
LINE NO ->  261
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  264
LINE NO ->  268
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  277
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  287
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  308
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  312
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  316
LINE NO ->  317
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  323
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  335
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  339
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  342
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  346
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  349
LINE NO ->  351
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  358
LINE NO ->  361
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  364
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  372
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  377
LINE NO ->  378
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  385
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  389
muffin
muffin muffin 255
[('eat', 'VB'), ('the', 'DT'), ('muffin', 'NN'), ('then', 'RB')]
['muffin']
('food -> ', [['muffin', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  392
LINE NO ->  396
LINE NO ->  400
water
water water 18
[('look', 'NN'), ('at', 'IN'), ('this', 'DT'), ('water', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  403
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  406
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  409
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  410
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94721bb48>)
[('it', 'PRP'), ('s', 'VBZ'), ('melting', 'VBG'), ('just', 'RB'), ('from', 'IN'), ('being', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  415
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  418
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  424
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  427
LINE NO ->  428
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  431
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  437
muffin
muffin muffin 255
[('eat', 'VB'), ('the', 'DT'), ('muffin', 'NN'), ('okay', 'NN')]
['muffin']
('food -> ', [['muffin', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  440
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  446
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  449
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  452
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  455
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  458
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  461
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  464
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  469
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  472
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  476
LINE NO ->  479
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  482
LINE NO ->  485
LINE NO ->  488
LINE NO ->  491
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  495
LINE NO ->  498
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  501
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  504
onions
onions onions 26
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('onions', 'NNS'), ('i', 'VBP'), ('don', 'VBP'), ('t', 'NN'), ('i', 'NN'), ('hate', 'VBP'), ('onions', 'NNS')]
['onions']
('food -> ', [['onions', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  509
onions
onions onions 26
[('i', 'JJ'), ('hate', 'VBP'), ('onions', 'NNS')]
['onions']
('food -> ', [['onions', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  512
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  515
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  518
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  522
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  525
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  530
LINE NO ->  533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  536
LINE NO ->  539
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  542
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  546
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  550
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  556
LINE NO ->  560
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  564
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  567
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a5bd8>)
[('mikey', 'JJ'), ('stop', 'VB'), ('acting', 'VBG'), ('like', 'IN'), ('a', 'DT'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  570
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  575
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, -1: 1})
LINE NO ->  582
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  585
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  588
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  591
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  592
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  595
LINE NO ->  598
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  601
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  604
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  607
onions
onions onions 26
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('those', 'DT'), ('onions', 'NNS')]
['onions']
('food -> ', [['onions', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  611
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  614
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  617
onions
onions onions 26
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('onions', 'NNS')]
['onions']
('food -> ', [['onions', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  622
onions
onions onions 26
[('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('onions', 'NNS'), ('mikey', 'NN')]
['onions']
('food -> ', [['onions', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  626
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  629
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  632
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  636
LINE NO ->  639
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  643
LINE NO ->  646
LINE NO ->  649
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  653
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  656
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  657
honey
honey honey 304
[('come', 'VBN'), ('on', 'IN'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  660
juice
juice juice 52
[('drink', 'VB'), ('the', 'DT'), ('juice', 'NN'), ('too', 'RB')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  663
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  667
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  671
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  672
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  673
LINE NO ->  674
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  677
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  682
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  688
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  691
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  695
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  701
LINE NO ->  704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  707
LINE NO ->  710
LINE NO ->  713
juice
juice juice 52
[('tell', 'NN'), ('tell', 'VB'), ('mariana', 'NN'), ('to', 'TO'), ('come', 'VB'), ('in', 'IN'), ('now', 'RB'), ('and', 'CC'), ('drink', 'VB'), ('the', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  718
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  719
LINE NO ->  722
juice
juice juice 52
[('mariana', 'NN'), ('mariana', 'VBZ'), ('come', 'VBN'), ('on', 'IN'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0})
LINE NO ->  728
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  730
LINE NO ->  732
juice
juice juice 52
[('okay', 'NN'), ('mariana', 'NN'), ('drink', 'VBP'), ('the', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  735
LINE NO ->  738
muffin
muffin muffin 255
[('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('muffin', 'NN')]
['muffin']
('food -> ', [['muffin', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  741
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  744
muffin
muffin muffin 255
[('a', 'DT'), ('muffin', 'NN')]
['muffin']
('food -> ', [['muffin', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  751
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  754
juice
juice juice 52
[('either', 'RB'), ('one', 'CD'), ('as', 'RB'), ('long', 'RB'), ('as', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('it', 'PRP'), ('and', 'CC'), ('drink', 'VB'), ('your', 'PRP$'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  759
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  762
juice
juice juice 52
[('would', 'MD'), ('you', 'PRP'), ('like', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('juice', 'NNS')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  765
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  769
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  774
LINE NO ->  777
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  780
LINE NO ->  784
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  791
LINE NO ->  795
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  799
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  803
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  808
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  816
LINE NO ->  819
LINE NO ->  822
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  825
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  830
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  836
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 1, 89: 1, 90: 1, 91: 1, 92: 0, 93: 0, 94: 0})
LINE NO ->  843
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  846
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  849
juice
juice juice 52
[('if', 'IN'), ('it', 'PRP'), ('doesn', 'VBZ'), ('t', 'JJ'), ('hurt', 'NN'), ('with', 'IN'), ('the', 'DT'), ('juice', 'NN'), ('then', 'RB'), ('it', 'PRP'), ('won', 'VBD'), ('t', 'JJ'), ('hurt', 'NN'), ('with', 'IN'), ('a', 'DT'), ('popsicle', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, -1: 1})
LINE NO ->  856
LINE NO ->  859
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  864
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 0, 92: 0, 93: 0, -1: 1})
LINE NO ->  872
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  873
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  876
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  879
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  884
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  887
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  891
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  895
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  898
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  902
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  905
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  908
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  911
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  914
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  919
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  923
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  927
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  930
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  933
LINE NO ->  936
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  939
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  942
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  945
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  948
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  949
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  953
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  958
LINE NO ->  961
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  966
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  970
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  972
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  975
LINE NO ->  976
LINE NO ->  979
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  982
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  986
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  991
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  995
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  998
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1001
LINE NO ->  1002
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a5290>)
[('me', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('yellow', 'JJ'), ('one', 'NN')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1005
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1008
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94721b830>)
[('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('yellow', 'JJ')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1011
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1014
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1017
pink
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a57a0>)
[('orange', 'NN'), ('and', 'CC'), ('pink', 'NN'), ('and', 'CC'), ('rose', 'VBD')]
['pink']
('food -> ', [])
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a5680>)
[('orange', 'NN'), ('and', 'CC'), ('pink', 'NN'), ('and', 'CC'), ('rose', 'VBD')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1020
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1021
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1024
LINE NO ->  1025
juice
juice juice 52
[('he', 'PRP'), ('says', 'VBZ'), ('he', 'PRP'), ('says', 'VBZ'), ('mikey', 'NN'), ('says', 'VBZ'), ('mikey', 'NN'), ('says', 'VBZ'), ('only', 'RB'), ('this', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0})
LINE NO ->  1028
LINE NO ->  1032
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1035
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0})
LINE NO ->  1040
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471ab908>)
[('we', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('cherry', 'NN'), ('a', 'DT'), ('grape', 'NN'), ('and', 'CC'), ('an', 'DT'), ('orange', 'NN'), ('one', 'CD')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  1045
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1049
LINE NO ->  1050
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94721b7a0>)
[('i', 'NN'), ('want', 'VBP'), ('the', 'DT'), ('orange', 'NN'), ('one', 'CD')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1053
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1056
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1059
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1062
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1065
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1069
LINE NO ->  1070
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1073
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1076
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1082
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1085
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1088
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1092
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1095
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  1101
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1104
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1107
LINE NO ->  1110
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0})
LINE NO ->  1116
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1119
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1123
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1129
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  1137
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, -1: 1})
LINE NO ->  1142
LINE NO ->  1147
LINE NO ->  1151
LINE NO ->  1154
LINE NO ->  1160
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1163
LINE NO ->  1168
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1173
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1179
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1182
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1185
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0})
LINE NO ->  1191
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1194
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1198
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1201
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  1206
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1210
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1213
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1216
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1222
LINE NO ->  1225
LINE NO ->  1228
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1231
LINE NO ->  1234
duck
duck duck 84
[('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1237
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1240
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1246
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1250
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1253
LINE NO ->  1256
LINE NO ->  1259
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1263
LINE NO ->  1269
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1274
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1277
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1281
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1285
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  1288
LINE NO ->  1292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1299
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  1304
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1309
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1314
honey
honey honey 304
[('why', 'WRB'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1318
LINE NO ->  1321
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1325
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1329
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1333
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1336
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1339
LINE NO ->  1342
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1346
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1349
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1350
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 1, 95: 1, 96: 1, 97: 1, 98: 1, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, -1: 1})
LINE NO ->  1355
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  1360
LINE NO ->  1363
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1366
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  1369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1372
LINE NO ->  1375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1378
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1383
LINE NO ->  1388
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1392
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1396
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1400
LINE NO ->  1404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1407
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1410
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a59e0>)
[('mikey', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('ghost', 'NN'), ('and', 'CC'), ('i', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('baby', 'NN'), ('and', 'CC'), ('carmen', 'NNS'), ('was', 'VBD'), ('the', 'DT'), ('mommy', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  1416
LINE NO ->  1417
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  1420
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1423
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1427
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1432
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  1435
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1439
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94720a128>)
[('and', 'CC'), ('mikey', 'NN'), ('be', 'VB'), ('the', 'DT'), ('ghost', 'NN'), ('and', 'CC'), ('i', 'NN'), ('be', 'VB'), ('the', 'DT'), ('baby', 'NN'), ('and', 'CC'), ('you', 'PRP'), ('be', 'VB'), ('the', 'DT'), ('mom', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  1447
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1450
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1454
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1460
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1464
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1467
LINE NO ->  1471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1476
LINE NO ->  1480
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  1488
LINE NO ->  1491
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1496
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1499
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1500
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1503
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1507
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1511
LINE NO ->  1512
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1515
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1518
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1522
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1525
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1530
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1537
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1540
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1543
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1546
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1549
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1552
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1556
LINE NO ->  1559
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1562
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1565
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  1570
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  1573
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1576
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1579
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1582
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1589
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  1595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1599
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  1605
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1608
LINE NO ->  1611
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1614
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1619
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1623
LINE NO ->  1624
LINE NO ->  1627
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1630
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1633
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1636
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1640
LINE NO ->  1644
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1647
LINE NO ->  1650
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1653
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1658
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1663
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1668
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1673
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1677
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1680
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1684
LINE NO ->  1687
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1691
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1694
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1697
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1700
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 0, 84: 1, 85: 1, 86: 1, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 0, 111: 1, 112: 1, 113: 1, 114: 0, 115: 0, 116: 0})
LINE NO ->  1708
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1711
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1714
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1717
LINE NO ->  1721
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1726
LINE NO ->  1729
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1732
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1738
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1743
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1746
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1749
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1758
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1761
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  1764
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1767
LINE NO ->  1770
LINE NO ->  1771
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1772
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1776
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1780
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  1783
LINE NO ->  1786
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  1790
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  1793
LINE NO ->  1796
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  1799
LINE NO ->  1802
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94544fb90>)
[('this', 'DT'), ('mom', 'NN'), ('mine', 'NN'), ('kindergarten', 'NN'), ('is', 'VBZ'), ('yellow', 'JJ')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1805
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1808
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1812
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  1819
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1822
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1825
LINE NO ->  1828
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1831
LINE NO ->  1834
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94718e908>)
[('it', 'PRP'), ('s', 'VBD'), ('green', 'JJ')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1837
LINE NO ->  1841
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722dcf8>)
[('green', 'JJ')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1844
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d950>)
[('green', 'JJ')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1848
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1851
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d680>)
[('xxx', 'NN'), ('green', 'NN')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1854
LINE NO ->  1855
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1859
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1863
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  1866
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1869
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1872
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d950>)
[('and', 'CC'), ('my', 'PRP$'), ('kindergarten', 'NN'), ('is', 'VBZ'), ('yellow', 'JJ')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1875
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  1879
LINE NO ->  1882
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  1887
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1891
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1894
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1897
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1901
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  1905
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1908
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1913
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1916
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1919
LINE NO ->  1920
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  1925
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1929
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1935
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1936
LINE NO ->  1939
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1942
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  1948
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1951
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1954
honey
honey honey 304
[('you', 'PRP'), ('finish', 'VBP'), ('that', 'IN'), ('first', 'JJ'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1957
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1960
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1963
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1968
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1971
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  1976
LINE NO ->  1977
LINE NO ->  1978
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1979
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1982
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  1985
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1988
LINE NO ->  1991
LINE NO ->  1994
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1995
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1998
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2001
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2005
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  2008
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  2011
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2015
LINE NO ->  2017
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2020
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  2023
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  2026
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  2031
LINE NO ->  2034
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2038
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2039
duck
duck duck 84
[('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  2042
duck
duck duck 84
[('that', 'DT'), ('s', 'VBD'), ('donald', 'JJ'), ('duck', 'NN'), ('mom', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  2045
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2048
LINE NO ->  2051
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2054
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  2057
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2058
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  2061
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2064
LINE NO ->  2067
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  2070
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  2073
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  2076
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2079
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2082
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2083
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  2087
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  2090
LINE NO ->  2093
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  2096
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  2099
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  2102
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2105
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  2108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2111
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2114
LINE NO ->  2118
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2121
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  2124
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  2127
LINE NO ->  2130
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  2133
LINE NO ->  2137
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2140
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  2143
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2146
LINE NO ->  2149
duck
duck duck 84
[('duck', 'NN'), ('tales', 'NNS')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  2152
duck
duck duck 84
[('this', 'DT'), ('xxx', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('duck', 'NN'), ('tales', 'NNS')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  2155
LINE NO ->  2158
LINE NO ->  2161
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  2164
LINE NO ->  2167
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2170
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  2174
duck
duck duck 84
[('like', 'IN'), ('the', 'DT'), ('duck', 'NN'), ('tales', 'NNS')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2177
LINE NO ->  2180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  2184
LINE NO ->  2187
duck
duck duck 84
[('the', 'DT'), ('duck', 'NN'), ('tales', 'VBZ'), ('don', 'JJ'), ('t', 'NN'), ('got', 'VBD'), ('a', 'DT'), ('dog', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  2192
LINE NO ->  2195
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2198
LINE NO ->  2202
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2206
LINE NO ->  2209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  2215
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  2222
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  2229
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  2234
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  2239
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2243
LINE NO ->  2244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  2250
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  2256
LINE NO ->  2259
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  2262
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2265
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  2268
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2271
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2274
LINE NO ->  2277
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2280
LINE NO ->  2281
LINE NO ->  2284
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2287
LINE NO ->  2292
LINE NO ->  2295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2299
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2300
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  2308
LINE NO ->  2311
LINE NO ->  2316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2319
LINE NO ->  2322
LINE NO ->  2325
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2328
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2329
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2332
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2335
LINE NO ->  2339
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2342
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2345
honey
honey honey 304
[('what', 'WP'), ('s', 'VBD'), ('the', 'DT'), ('matter', 'NN'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  2349
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2352
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2356
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2360
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2364
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2368
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2370
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2371
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2379
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2380
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2383
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2386
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  2389
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2392
LINE NO ->  2395
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0})
LINE NO ->  2402
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  2406
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
loading solution set
calculating
set([(1481, (41, 49)), (163, (11, 15)), (723, (57, 62)), (850, (66, 74)), (69, (28, 34)), (650, (37, 45)), (1124, (24, 33)), (618, (19, 25)), (1217, (25, 34)), (1026, (77, 82)), (551, (15, 23)), (465, (30, 37)), (47, (21, 27)), (733, (29, 34)), (837, (45, 53)), (401, (19, 24)), (745, (8, 14)), (647, (28, 36)), (661, (16, 21)), (755, (58, 63)), (505, (19, 25)), (510, (17, 23)), (1202, (31, 40)), (915, (31, 39)), (1143, (23, 32)), (1489, (17, 25)), (1486, (17, 25)), (1164, (36, 45)), (163, (26, 38)), (133, (23, 28)), (438, (14, 20)), (865, (28, 36)), (37, (18, 23)), (850, (34, 39)), (792, (24, 32)), (809, (44, 52)), (505, (41, 47)), (137, (10, 15)), (739, (20, 26)), (1550, (9, 17)), (450, (23, 31)), (447, (13, 22)), (1226, (31, 39)), (714, (57, 62)), (462, (25, 32)), (441, (34, 41)), (804, (28, 36)), (608, (25, 31)), (53, (27, 33)), (689, (25, 33)), (390, (14, 20)), (526, (17, 25)), (623, (26, 32)), (763, (31, 36)), (160, (15, 20)), (770, (48, 56)), (453, (13, 21))])
[((37, (18, 23)), '*MOT:\tso you want juice like that (.) ?\n'), ((47, (21, 27)), '*BRO:\tI like it with cheese .\n'), ((53, (27, 33)), "*MOT:\tI don't have (.) xxx cheese .\n"), ((69, (28, 34)), "*MOT:\tI don't have any good cheese look .\n"), ((133, (23, 28)), '*MOT:\tdo you like that juice ?\n'), ((137, (10, 15)), '*CHI:\txxx juice .\n'), ((160, (15, 20)), '*MOT:\tthis (.) juice .\n'), ((163, (11, 15)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((163, (26, 38)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((390, (14, 20)), '*MOT:\teat the muffin then .\n'), ((401, (19, 24)), '*MOT:\tlook at this water .\n'), ((438, (14, 20)), '*MOT:\teat the muffin okay .\n'), ((441, (34, 41)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((447, (13, 22)), '*BRO:\tI want popsicles .\n'), ((450, (23, 31)), "*MOT:\tthat's right the popsicle too .\n"), ((453, (13, 21)), '*BRO:\twant a popsicle (.) ?\n'), ((462, (25, 32)), "*CHI:\tbut I don't want a vitamin .\n"), ((465, (30, 37)), "*MOT:\tthen you won't eat your vitamin that's no problem Mariana .\n"), ((505, (19, 25)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((505, (41, 47)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((510, (17, 23)), '*BRO:\tI hate [!] onions .\n'), ((526, (17, 25)), '*MOT:\tyou want a popsicle you know what to do .\n'), ((551, (15, 23)), '*BRO:\tI want a popsicle .\n'), ((608, (25, 31)), "*BRO:\tI don't like those onions .\n"), ((618, (19, 25)), "*BRO:\tI don't want onions .\n"), ((623, (26, 32)), "*MOT:\tit doesn't have any onions Mikey .\n"), ((647, (28, 36)), "*MOT:\t&-uh Mikey's having a popsicle .\n"), ((650, (37, 45)), "*MOT:\tmaybe Mariana doesn't want any popsicle (.) .\n"), ((661, (16, 21)), '*MOT:\tdrink the juice too (.) .\n'), ((689, (25, 33)), "*BRO:\tbet it'll melt the popsicle .\n"), ((714, (57, 62)), '*MOT:\ttell [/] tell Mariana to come in now and drink the juice .\n'), ((723, (57, 62)), '*BRO:\tMariana [!] Mariana [!] come on [?] and drink your juice .\n'), ((733, (29, 34)), '*MOT:\tokay Mariana drink the juice .\n'), ((739, (20, 26)), '*MOT:\tand eat your <muffin [?] > [>] .\n'), ((745, (8, 14)), '*CHI:\ta muffin ?\n'), ((755, (58, 63)), '*MOT:\teither one as long as you eat it (.) and drink your juice (.) .\n'), ((763, (31, 36)), '*MOT:\twould you like some more juice ?\n'), ((770, (48, 56)), "*MOT:\tfinish that xxx and then I'll get you the popsicle .\n"), ((792, (24, 32)), '*MOT:\thow can you eat a popsicle then (.) ?\n'), ((804, (28, 36)), "*BRO:\twhen you [//] I eat a popsicle <I don't> [/] I don't +...\n"), ((809, (44, 52)), "*BRO:\tI was eating in the store and I ate a popsicle and I didn't hurt my throat .\n"), ((837, (45, 53)), "*MOT:\tgood lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .\n"), ((850, (34, 39)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((850, (66, 74)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((865, (28, 36)), "*MOT:\tthen you can't have a popsicle if it's only going to <hurt your> [/] hurt your throat .\n"), ((915, (31, 39)), "*MOT:\tyou're not able to eat a popsicle <so xxx> [>] .\n"), ((1026, (77, 82)), '*CHI:\t<he says> [/] <he says> [//] <Mikey says> [>] [/] Mikey says only this juice .\n'), ((1124, (24, 33)), '*BRO:\tno but there were popsicles in the box .\n'), ((1143, (23, 32)), "*MOT:\tthere're no more popsicles .\n"), ((1164, (36, 45)), '*MOT:\thow can you expect to be more popsicles ?\n'), ((1202, (31, 40)), '*BRO:\tnuhhuh when we get those popsicles (.) those are for the picnic .\n'), ((1217, (25, 34)), '*CHI:\tand I can open the popsicles .\n'), ((1226, (31, 39)), '*CHI:\t<and I> [<] can open the popsicle .\n'), ((1481, (41, 49)), '*MOT:\t<not right now when you finish the popsicle> [>] .\n'), ((1486, (17, 25)), '*BRO:\t<bite your popsicle> [<] .\n'), ((1489, (17, 25)), '*BRO:\tbite your <popsicle Mariana> [>] .\n'), ((1550, (9, 17)), '*BRO:\tmy popsicle melting .\n')]
set([(615, (16, 21)), (470, (-1, 4)), (2305, (28, 33)), (1958, (6, 10)), (1888, (-1, 4)), (207, (9, 12)), (86, (32, 35)), (2122, (-1, 4)), (664, (-1, 4)), (309, (24, 29)), (218, (26, 29)), (1733, (33, 39)), (126, (-1, 4)), (459, (-1, 4)), (499, (12, 17)), (1722, (-1, 4)), (661, (16, 21)), (1883, (34, 38)), (340, (-1, 4)), (79, (-1, 4)), (949, (6, 9)), (2361, (24, 28)), (1645, (23, 26)), (69, (28, 39)), (1701, (31, 36)), (122, (11, 16)), (1207, (24, 30)), (1497, (14, 17)), (2138, (6, 10)), (2062, (-1, 4)), (1969, (10, 14)), (2024, (13, 16)), (973, (-1, 4)), (30, (10, 16)), (2317, (10, 14)), (2083, (6, 9)), (188, (31, 36)), (1009, (-1, 4)), (1183, (-1, 4)), (1701, (104, 110)), (340, (16, 23)), (2263, (-1, 4)), (2068, (-1, 4)), (865, (-1, 4)), (1393, (25, 31)), (251, (-1, 4)), (343, (6, 9)), (1192, (13, 18)), (465, (-1, 4)), (281, (6, 9)), (36, (6, 9)), (675, (-1, 4)), (1867, (-1, 4)), (999, (34, 37)), (561, (26, 29)), (1229, (6, 8)), (180, (22, 26)), (1733, (-1, 4)), (1379, (-1, 4)), (234, (-1, 4)), (1538, (-1, 4)), (1620, (6, 11)), (379, (14, 19)), (1972, (12, 17)), (2230, (7, 10)), (336, (10, 13)), (1678, (41, 44)), (1235, (24, 28)), (1211, (-1, 4)), (1009, (24, 30)), (170, (-1, 4)), (1235, (6, 12)), (2301, (6, 9)), (2269, (6, 11)), (2269, (-1, 4)), (222, (-1, 4)), (101, (75, 85)), (1057, (10, 15)), (650, (46, 49)), (899, (6, 9)), (850, (-1, 4)), (502, (11, 14)), (2216, (31, 34)), (2175, (19, 23)), (1516, (-1, 4)), (1455, (22, 29)), (2055, (6, 12)), (137, (10, 15)), (1448, (14, 19)), (2097, (6, 13)), (999, (-1, 4)), (770, (18, 21)), (110, (6, 10)), (940, (20, 23)), (15, (6, 13)), (238, (10, 13)), (1940, (-1, 4)), (1864, (20, 23)), (1093, (6, 10)), (1583, (35, 39)), (999, (15, 19)), (390, (14, 20)), (516, (-1, 4)), (2027, (33, 36)), (1177, (6, 9)), (1842, (6, 11)), (137, (-1, 4)), (1220, (6, 10)), (2387, (6, 11)), (214, (-1, 4)), (1571, (-1, 4)), (1888, (16, 19)), (441, (68, 74)), (1367, (31, 34)), (823, (25, 28)), (742, (9, 12)), (809, (26, 31)), (465, (30, 37)), (1247, (-1, 4)), (196, (6, 9)), (352, (30, 35)), (2131, (30, 34)), (2071, (-1, 4)), (1356, (36, 39)), (2223, (31, 34)), (2084, (13, 18)), (1566, (6, 8)), (2230, (11, 14)), (318, (15, 20)), (943, (10, 13)), (2210, (8, 11)), (170, (34, 42)), (37, (-1, 4)), (1367, (13, 16)), (110, (32, 35)), (1041, (-1, 4)), (1620, (30, 35)), (729, (6, 9)), (1787, (20, 25)), (571, (6, 9)), (163, (40, 43)), (1762, (14, 20)), (658, (14, 23)), (739, (-1, 4)), (745, (8, 14)), (1563, (23, 27)), (2188, (10, 14)), (93, (62, 66)), (1541, (-1, 4)), (627, (22, 25)), (2062, (18, 21)), (920, (6, 9)), (568, (12, 16)), (1590, (37, 41)), (2012, (-1, 4)), (1577, (-1, 4)), (983, (-1, 4)), (1397, (-1, 4)), (1654, (-1, 4)), (2333, (21, 27)), (1202, (-1, 4)), (892, (6, 9)), (90, (16, 20)), (173, (-1, 4)), (837, (88, 92)), (608, (25, 31)), (1606, (-1, 4)), (154, (-1, 4)), (1813, (47, 53)), (2094, (15, 19)), (77, (6, 9)), (2162, (6, 12)), (1504, (-1, 4)), (23, (11, 14)), (453, (-1, 4)), (1481, (6, 10)), (1930, (35, 38)), (672, (6, 9)), (1192, (6, 12)), (309, (-1, 4)), (899, (-1, 4)), (1547, (36, 41)), (739, (27, 30)), (1054, (11, 17)), (278, (17, 21)), (1979, (-1, 4)), (411, (42, 47)), (2266, (6, 11)), (678, (6, 9)), (1021, (6, 9)), (760, (6, 9)), (770, (6, 12)), (1436, (6, 12)), (352, (22, 25)), (1063, (6, 9)), (1873, (-1, 4)), (1544, (15, 19)), (1813, (-1, 4)), (2384, (6, 9)), (416, (-1, 4)), (1051, (17, 24)), (766, (6, 9)), (1260, (-1, 4)), (210, (20, 25)), (1497, (24, 28)), (1574, (9, 16)), (44, (6, 10)), (453, (22, 25)), (2040, (20, 24)), (640, (-1, 4)), (2350, (-1, 4)), (1247, (26, 32)), (874, (26, 30)), (1130, (-1, 4)), (634, (6, 9)), (101, (-1, 4)), (928, (6, 10)), (1105, (-1, 4)), (450, (6, 12)), (623, (26, 32)), (2285, (6, 10)), (2235, (11, 14)), (1813, (17, 20)), (1051, (25, 29)), (705, (-1, 4)), (796, (19, 24)), (352, (-1, 4)), (526, (-1, 4)), (837, (73, 79)), (1300, (25, 29)), (1117, (27, 30)), (255, (19, 22)), (2074, (17, 20)), (605, (6, 9)), (561, (-1, 4)), (1787, (6, 11)), (615, (6, 10)), (2153, (23, 27)), (2235, (7, 10)), (1083, (6, 12)), (1169, (6, 9)), (1856, (-1, 4)), (823, (6, 10)), (888, (-1, 4)), (627, (-1, 4)), (1917, (6, 9)), (1428, (29, 32)), (661, (-1, 4)), (2018, (-1, 4)), (47, (-1, 4)), (1051, (-1, 4)), (340, (6, 10)), (167, (25, 28)), (2131, (-1, 4)), (114, (10, 14)), (664, (6, 9)), (1695, (-1, 4)), (1433, (18, 22)), (1756, (-1, 4)), (297, (-1, 4)), (1654, (51, 54)), (1424, (10, 13)), (568, (31, 35)), (2300, (6, 9)), (971, (6, 10)), (2027, (23, 28)), (763, (-1, 4)), (441, (34, 41)), (733, (6, 10)), (2384, (15, 19)), (2006, (16, 21)), (2216, (-1, 4)), (2112, (11, 14)), (163, (11, 15)), (1036, (49, 52)), (1472, (17, 22)), (1902, (28, 31)), (1845, (6, 11)), (1930, (-1, 4)), (1238, (9, 15)), (1835, (12, 18)), (696, (25, 29)), (1860, (6, 9)), (510, (-1, 4)), (1698, (21, 28)), (519, (6, 9)), (53, (-1, 4)), (1797, (6, 12)), (755, (58, 63)), (101, (28, 34)), (110, (11, 15)), (2021, (20, 24)), (2357, (6, 9)), (809, (74, 80)), (2403, (6, 10)), (1577, (14, 18)), (262, (23, 26)), (1902, (6, 9)), (1041, (25, 30)), (1566, (24, 30)), (2203, (-1, 4)), (141, (6, 9)), (513, (-1, 4)), (160, (-1, 4)), (2381, (-1, 4)), (654, (22, 28)), (1534, (6, 9)), (1481, (51, 54)), (86, (26, 31)), (592, (6, 9)), (2210, (12, 16)), (2329, (6, 9)), (804, (-1, 4)), (369, (-1, 4)), (2046, (-1, 4)), (543, (-1, 4)), (633, (6, 9)), (2162, (26, 29)), (1270, (-1, 4)), (2074, (13, 16)), (180, (6, 12)), (1876, (27, 33)), (1645, (16, 22)), (1408, (-1, 4)), (1659, (-1, 4)), (2196, (24, 28)), (1278, (6, 10)), (188, (65, 70)), (305, (6, 12)), (2171, (43, 46)), (1744, (19, 25)), (1921, (24, 32)), (2235, (23, 26)), (2071, (6, 12)), (1465, (6, 10)), (456, (6, 9)), (1583, (6, 9)), (2144, (-1, 4)), (1293, (-1, 4)), (505, (-1, 4)), (410, (6, 9)), (1777, (6, 9)), (915, (-1, 4)), (47, (21, 27)), (1759, (-1, 4)), (1744, (-1, 4)), (1972, (32, 38)), (954, (-1, 4)), (1809, (6, 9)), (2106, (6, 10)), (1664, (22, 28)), (1773, (-1, 4)), (200, (6, 10)), (723, (57, 62)), (2080, (6, 10)), (294, (6, 9)), (188, (24, 30)), (1553, (-1, 4)), (962, (15, 19)), (2396, (66, 71)), (2002, (10, 13)), (733, (29, 34)), (1813, (57, 66)), (196, (10, 13)), (1251, (-1, 4)), (210, (-1, 4)), (873, (6, 9)), (23, (6, 10)), (462, (-1, 4)), (1186, (45, 50)), (1433, (6, 12)), (203, (16, 19)), (222, (40, 43)), (1759, (32, 35)), (1451, (29, 32)), (1086, (-1, 4)), (2240, (11, 15)), (1351, (94, 99)), (1305, (13, 19)), (379, (34, 39)), (1909, (-1, 4)), (534, (15, 19)), (1300, (-1, 4)), (1074, (-1, 4)), (1322, (24, 27)), (2396, (76, 80)), (332, (-1, 4)), (1370, (20, 23)), (1765, (-1, 4)), (1651, (23, 29)), (1051, (30, 33)), (160, (15, 20)), (365, (10, 13)), (1772, (6, 9)), (1513, (11, 16)), (1526, (6, 9)), (1012, (-1, 4)), (321, (-1, 4)), (65, (16, 19)), (987, (-1, 4)), (2384, (-1, 4)), (2235, (44, 47)), (1849, (6, 9)), (1436, (-1, 4)), (1351, (11, 14)), (1326, (47, 50)), (561, (30, 33)), (1411, (-1, 4)), (502, (15, 18)), (1472, (-1, 4)), (93, (50, 53)), (340, (24, 27)), (1501, (-1, 4)), (425, (10, 14)), (1659, (11, 17)), (441, (42, 45)), (752, (6, 10)), (692, (-1, 4)), (1036, (14, 17)), (2150, (6, 10)), (1411, (44, 48)), (1873, (29, 35)), (1772, (-1, 4)), (313, (-1, 4)), (1926, (-1, 4)), (1747, (-1, 4)), (1986, (-1, 4)), (1286, (39, 42)), (1334, (6, 10)), (1921, (11, 16)), (523, (-1, 4)), (1961, (-1, 4)), (2380, (6, 9)), (1347, (-1, 4)), (2196, (-1, 4)), (1999, (-1, 4)), (1888, (23, 29)), (1379, (37, 40)), (1550, (18, 25)), (785, (28, 31)), (1952, (6, 12)), (1275, (-1, 4)), (593, (11, 15)), (1634, (6, 11)), (2027, (-1, 4)), (2235, (19, 22)), (1486, (27, 30)), (1270, (27, 33)), (973, (16, 20)), (1217, (-1, 4)), (2002, (6, 9)), (1508, (20, 24)), (1712, (15, 20)), (425, (15, 18)), (1424, (6, 9)), (837, (11, 15)), (2296, (15, 18)), (273, (33, 37)), (2235, (15, 18)), (79, (13, 17)), (2296, (-1, 4)), (912, (6, 10)), (1440, (23, 28)), (749, (6, 9)), (2350, (24, 28)), (1955, (28, 33)), (1347, (6, 10)), (2346, (-1, 4)), (903, (-1, 4)), (1376, (-1, 4)), (2035, (-1, 4)), (2376, (-1, 4)), (273, (-1, 4)), (2009, (6, 9)), (2361, (16, 23)), (826, (15, 19)), (1701, (84, 87)), (1174, (-1, 4)), (850, (75, 78)), (2068, (6, 12)), (129, (-1, 4)), (2396, (15, 21)), (2080, (11, 14)), (510, (13, 23)), (1964, (-1, 4)), (1111, (55, 58)), (1563, (-1, 4)), (1405, (6, 10)), (1350, (6, 9)), (2181, (-1, 4)), (2059, (30, 36)), (1580, (10, 16)), (809, (-1, 4)), (473, (10, 13)), (459, (24, 28)), (1089, (15, 19)), (20, (11, 17)), (2245, (6, 10)), (1440, (42, 46)), (618, (14, 25)), (1026, (77, 82)), (860, (6, 9)), (2365, (6, 10)), (996, (-1, 4)), (1310, (-1, 4)), (1955, (-1, 4)), (547, (26, 29)), (90, (-1, 4)), (1531, (14, 18)), (492, (6, 9)), (2390, (-1, 4)), (57, (6, 10)), (739, (19, 26)), (53, (23, 33)), (1046, (-1, 4)), (2343, (-1, 4)), (1797, (13, 18)), (1041, (38, 44)), (831, (6, 9)), (324, (6, 9)), (1022, (-1, 4)), (1852, (14, 19)), (1180, (-1, 4)), (151, (-1, 4)), (565, (-1, 4)), (1659, (18, 21)), (1451, (23, 28)), (1389, (-1, 4)), (505, (19, 25)), (2018, (16, 21)), (1930, (19, 26)), (1829, (13, 16)), (785, (43, 49)), (1455, (46, 51)), (1773, (6, 11)), (2125, (6, 9)), (1026, (10, 15)), (1909, (27, 34)), (2330, (13, 18)), (1560, (21, 27)), (2260, (18, 21)), (2119, (-1, 4)), (2175, (-1, 4)), (2006, (30, 35)), (57, (-1, 4)), (962, (33, 38)), (689, (6, 9)), (1492, (10, 13)), (723, (38, 41)), (1033, (6, 10)), (1637, (29, 36)), (2245, (41, 45)), (2346, (17, 23)), (401, (19, 24)), (26, (6, 12)), (1418, (22, 25)), (2369, (6, 9)), (241, (26, 30)), (1669, (-1, 4)), (1722, (30, 37)), (301, (-1, 4)), (1870, (14, 20)), (2171, (-1, 4)), (885, (14, 17)), (1305, (-1, 4)), (362, (-1, 4)), (2346, (24, 33)), (1986, (23, 26)), (101, (50, 53)), (318, (21, 24)), (1093, (11, 14)), (796, (11, 18)), (2350, (16, 23)), (1161, (-1, 4)), (547, (-1, 4)), (2403, (-1, 4)), (896, (6, 12)), (1806, (-1, 4)), (1553, (6, 10)), (20, (6, 10)), (1408, (16, 22)), (2285, (-1, 4)), (347, (12, 18)), (755, (39, 42)), (2230, (40, 43)), (1202, (63, 69)), (903, (6, 9)), (1949, (-1, 4)), (2058, (6, 10)), (278, (31, 34)), (73, (6, 9)), (1980, (-1, 4)), (1083, (-1, 4)), (1210, (6, 9)), (285, (19, 22)), (2188, (21, 26)), (2074, (6, 12)), (386, (6, 9)), (93, (-1, 4)), (683, (-1, 4)), (2196, (29, 32)), (133, (23, 28)), (404, (11, 18)), (438, (14, 20)), (2100, (29, 34)), (540, (6, 10)), (1211, (6, 9)), (1241, (6, 12)), (1835, (19, 22)), (473, (6, 9)), (831, (10, 12)), (465, (38, 44)), (1979, (6, 11)), (1455, (-1, 4)), (2240, (16, 19)), (1006, (6, 10)), (373, (-1, 4)), (1637, (9, 14)), (586, (6, 10)), (967, (32, 35)), (470, (31, 34)), (583, (-1, 4)), (2278, (-1, 4)), (37, (34, 37)), (411, (6, 10)), (37, (18, 23)), (880, (-1, 4)), (1379, (18, 21)), (1739, (38, 41)), (1448, (-1, 4)), (86, (-1, 4)), (2251, (30, 34)), (2216, (17, 20)), (480, (-1, 4)), (1996, (-1, 4)), (654, (-1, 4)), (401, (6, 10)), (714, (-1, 4)), (1077, (21, 24)), (1698, (6, 13)), (1523, (13, 16)), (1282, (-1, 4)), (576, (66, 70)), (1015, (9, 12)), (365, (6, 9)), (954, (32, 35)), (1133, (-1, 4)), (1669, (31, 37)), (565, (6, 9)), (328, (10, 13)), (1914, (16, 19)), (924, (6, 9)), (1983, (27, 30)), (755, (-1, 4)), (2084, (6, 12)), (1195, (35, 38)), (1995, (6, 9)), (1018, (6, 12)), (1519, (6, 9)), (2223, (-1, 4)), (1440, (-1, 4)), (589, (-1, 4)), (909, (6, 8)), (1183, (32, 35)), (146, (34, 37)), (1111, (34, 38)), (1299, (6, 9)), (2144, (11, 16)), (796, (25, 29)), (450, (-1, 4)), (1823, (-1, 4)), (1674, (34, 39)), (1730, (24, 29)), (844, (11, 17)), (1421, (6, 10)), (1096, (-1, 4)), (20, (18, 21)), (931, (6, 9)), (1102, (24, 27)), (1133, (24, 33)), (906, (17, 21)), (1664, (-1, 4)), (1326, (-1, 4)), (1138, (68, 71)), (262, (-1, 4)), (1481, (-1, 4)), (696, (-1, 4)), (1715, (-1, 4)), (1003, (18, 28)), (2340, (6, 10)), (441, (6, 11)), (880, (26, 32)), (347, (-1, 4)), (940, (-1, 4)), (2223, (53, 57)), (804, (47, 50)), (1063, (22, 25)), (140, (6, 9)), (1615, (-1, 4)), (1596, (32, 36)), (176, (6, 9)), (2371, (6, 9)), (608, (-1, 4)), (1651, (-1, 4)), (1917, (-1, 4)), (1500, (6, 9)), (447, (-1, 4)), (432, (-1, 4)), (1124, (41, 44)), (658, (24, 27)), (673, (6, 9)), (1293, (21, 25)), (2175, (24, 29)), (877, (29, 35)), (1071, (-1, 4)), (288, (-1, 4)), (429, (24, 29)), (1356, (6, 12)), (218, (6, 9)), (2353, (6, 9)), (60, (6, 9)), (2278, (22, 25)), (1315, (10, 15)), (167, (-1, 4)), (1577, (23, 27)), (1936, (10, 13)), (1563, (32, 36)), (122, (17, 20)), (1590, (28, 32)), (714, (57, 62)), (946, (-1, 4)), (50, (6, 9)), (2216, (53, 57)), (101, (62, 66)), (602, (12, 15)), (1186, (42, 44)), (93, (75, 85)), (2330, (-1, 4)), (1583, (26, 30)), (1803, (46, 52)), (188, (-1, 4)), (1943, (25, 32)), (1207, (-1, 4)), (1192, (-1, 4)), (1612, (-1, 4)), (163, (-1, 4)), (386, (-1, 4)), (2230, (23, 26)), (605, (10, 13)), (2326, (-1, 4)), (2372, (-1, 4)), (1664, (29, 33)), (1351, (-1, 4)), (1692, (-1, 4)), (419, (29, 32)), (1077, (-1, 4)), (33, (-1, 4)), (1138, (-1, 4)), (1983, (21, 26)), (699, (-1, 4)), (760, (-1, 4)), (668, (6, 9)), (41, (6, 10)), (1071, (15, 20)), (1681, (-1, 4)), (1343, (-1, 4)), (438, (21, 25)), (1895, (-1, 4)), (234, (6, 11)), (2021, (25, 30)), (1054, (18, 21)), (2188, (33, 36)), (1461, (-1, 4)), (800, (13, 16)), (1102, (19, 23)), (336, (6, 9)), (2333, (-1, 4)), (1688, (31, 35)), (133, (-1, 4)), (2396, (56, 61)), (1199, (22, 27)), (1393, (-1, 4)), (1906, (19, 25)), (1214, (-1, 4)), (1803, (-1, 4)), (1628, (-1, 4)), (847, (9, 12)), (599, (-1, 4)), (1867, (6, 12)), (1428, (-1, 4)), (1842, (-1, 4)), (1600, (33, 40)), (1730, (12, 16)), (2119, (37, 40)), (2052, (-1, 4)), (1497, (9, 13)), (1698, (-1, 4)), (1820, (-1, 2)), (2223, (17, 20)), (2407, (6, 9)), (2103, (-1, 4)), (93, (28, 34)), (1750, (-1, 4)), (630, (6, 9)), (1120, (-1, 4)), (269, (-1, 4)), (2039, (6, 9)), (69, (-1, 4)), (1803, (21, 25)), (2230, (15, 18)), (1066, (-1, 4)), (1739, (-1, 4)), (2109, (16, 19)), (2153, (-1, 4)), (1356, (30, 35)), (1544, (-1, 4)), (950, (-1, 4)), (1620, (-1, 4)), (2043, (20, 24)), (576, (-1, 4)), (1364, (6, 9)), (1451, (6, 9)), (554, (-1, 4)), (1765, (29, 32)), (2272, (6, 10)), (2088, (25, 28)), (2330, (6, 12)), (1086, (6, 12)), (1195, (-1, 4)), (1669, (38, 41)), (1330, (12, 15)), (2094, (24, 28)), (441, (-1, 4)), (1018, (22, 25)), (1701, (111, 114)), (379, (40, 43)), (1678, (16, 19)), (241, (-1, 4)), (1791, (6, 9)), (2141, (-1, 4)), (2168, (6, 10)), (288, (30, 35)), (1041, (16, 22)), (778, (22, 25)), (576, (71, 74)), (419, (14, 20)), (74, (6, 10)), (170, (26, 29)), (2251, (6, 11)), (1709, (-1, 4)), (675, (24, 27)), (2106, (11, 15)), (1781, (10, 15)), (1906, (-1, 4)), (763, (31, 36)), (1892, (-1, 4)), (1411, (72, 77)), (1701, (78, 83)), (931, (-1, 4)), (328, (6, 9)), (146, (-1, 4)), (2230, (19, 22)), (992, (-1, 4)), (1411, (26, 29)), (404, (6, 10)), (551, (-1, 4)), (1138, (42, 47)), (1651, (30, 33)), (1631, (-1, 4)), (1612, (19, 22)), (1060, (6, 10)), (362, (28, 31)), (1492, (6, 9)), (1845, (-1, 4)), (874, (9, 12)), (1418, (6, 10)), (313, (20, 25)), (719, (6, 9)), (407, (13, 17)), (2361, (-1, 4)), (2077, (10, 13)), (285, (14, 18)), (657, (6, 9)), (1531, (6, 13)), (61, (13, 16)), (850, (34, 39)), (1440, (62, 65)), (1898, (10, 16)), (163, (26, 39)), (429, (9, 13)), (151, (13, 21)), (1337, (-1, 4)), (980, (6, 10)), (505, (41, 47)), (1523, (6, 12)), (612, (27, 30)), (962, (-1, 4)), (2088, (10, 17)), (937, (-1, 4)), (612, (6, 10)), (678, (10, 13)), (1120, (31, 34)), (1571, (24, 29)), (1654, (44, 50)), (462, (25, 32)), (2153, (11, 14)), (1940, (25, 28)), (618, (-1, 4)), (1571, (30, 35)), (593, (-1, 4)), (1018, (17, 21)), (865, (85, 91)), (1411, (20, 25)), (954, (6, 12))])
[((15, (6, 13)), '*CHI:\tlook_it [?] (.) .\n'), ((20, (6, 10)), "*MOT:\tokay you're xxx .\n"), ((20, (11, 17)), "*MOT:\tokay you're xxx .\n"), ((20, (18, 21)), "*MOT:\tokay you're xxx .\n"), ((23, (6, 10)), '*CHI:\tyeah (.) .\n'), ((23, (11, 14)), '*CHI:\tyeah (.) .\n'), ((26, (6, 12)), "*CHI:\tthat's [?] other ?\n"), ((30, (10, 16)), "*MOT:\txxx that's right (.) .\n"), ((33, (-1, 4)), '*MOT:\there Mikey .\n'), ((36, (6, 9)), '*CHI:\txxx .\n'), ((37, (-1, 4)), '*MOT:\tso you want juice like that (.) ?\n'), ((37, (18, 23)), '*MOT:\tso you want juice like that (.) ?\n'), ((37, (34, 37)), '*MOT:\tso you want juice like that (.) ?\n'), ((41, (6, 10)), '*MOT:\tokay .\n'), ((44, (6, 10)), '*MOT:\tokay .\n'), ((47, (-1, 4)), '*BRO:\tI like it with cheese .\n'), ((47, (21, 27)), '*BRO:\tI like it with cheese .\n'), ((50, (6, 9)), '*MOT:\thm: .\n'), ((53, (-1, 4)), "*MOT:\tI don't have (.) xxx cheese .\n"), ((53, (23, 33)), "*MOT:\tI don't have (.) xxx cheese .\n"), ((57, (-1, 4)), '*BRO:\tokay then put it (.) there .\n'), ((57, (6, 10)), '*BRO:\tokay then put it (.) there .\n'), ((60, (6, 9)), '*CHI:\txxx .\n'), ((61, (13, 16)), '*BRO:\toh xxx [>] !\n'), ((65, (16, 19)), '*MOT:\t<Mariana> [<] ?\n'), ((69, (-1, 4)), "*MOT:\tI don't have any good cheese look .\n"), ((69, (28, 39)), "*MOT:\tI don't have any good cheese look .\n"), ((73, (6, 9)), '*CHI:\txxx .\n'), ((74, (6, 10)), '*MOT:\tokay .\n'), ((77, (6, 9)), '*BRO:\txxx .\n'), ((79, (-1, 4)), '*MOT:\toh the lord is good to me +...\n'), ((79, (13, 17)), '*MOT:\toh the lord is good to me +...\n'), ((86, (-1, 4)), '*MOT:\tand so I <thank the lord> [>] +...\n'), ((86, (26, 31)), '*MOT:\tand so I <thank the lord> [>] +...\n'), ((86, (32, 35)), '*MOT:\tand so I <thank the lord> [>] +...\n'), ((90, (-1, 4)), '*BRO:\tthank the lord +...\n'), ((90, (16, 20)), '*BRO:\tthank the lord +...\n'), ((93, (-1, 4)), '*MOT:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((93, (28, 34)), '*MOT:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((93, (50, 53)), '*MOT:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((93, (62, 66)), '*MOT:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((93, (75, 85)), '*MOT:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((101, (-1, 4)), '*BRO:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((101, (28, 34)), '*BRO:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((101, (50, 53)), '*BRO:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((101, (62, 66)), '*BRO:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((101, (75, 85)), '*BRO:\tfor giving me (.) the things I need (.) the sun and the rain and the apple seed .\n'), ((110, (6, 10)), '*MOT:\t<the lord is good to me > [>] .\n'), ((110, (11, 15)), '*MOT:\t<the lord is good to me > [>] .\n'), ((110, (32, 35)), '*MOT:\t<the lord is good to me > [>] .\n'), ((114, (10, 14)), '*BRO:\tthe lord is good to me [<] .\n'), ((122, (11, 16)), '*BRO:\t<the lord> [<] is good to me .\n'), ((122, (17, 20)), '*BRO:\t<the lord> [<] is good to me .\n'), ((126, (-1, 4)), "*BRO:\tthat's long .\n"), ((129, (-1, 4)), '*MOT:\tdo you like it Mariana ?\n'), ((133, (-1, 4)), '*MOT:\tdo you like that juice ?\n'), ((133, (23, 28)), '*MOT:\tdo you like that juice ?\n'), ((137, (-1, 4)), '*CHI:\txxx juice .\n'), ((137, (10, 15)), '*CHI:\txxx juice .\n'), ((140, (6, 9)), '*MOT:\txxx .\n'), ((141, (6, 9)), '*BRO:\tzzz .\n'), ((146, (-1, 4)), "*MOT:\tdo you know how it's called (.) ?\n"), ((146, (34, 37)), "*MOT:\tdo you know how it's called (.) ?\n"), ((151, (-1, 4)), '*MOT:\tto die dreaming .\n'), ((151, (13, 21)), '*MOT:\tto die dreaming .\n'), ((154, (-1, 4)), '*MOT:\tbecause it tastes so good .\n'), ((160, (-1, 4)), '*MOT:\tthis (.) juice .\n'), ((160, (15, 20)), '*MOT:\tthis (.) juice .\n'), ((163, (-1, 4)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((163, (11, 15)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((163, (26, 39)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((163, (40, 43)), '*MOT:\twith milk and <&-uh strawberries> [>] .\n'), ((167, (-1, 4)), "*BRO:\t<what's it called> [<] ?\n"), ((167, (25, 28)), "*BRO:\t<what's it called> [<] ?\n"), ((170, (-1, 4)), "*CHI:\tI don't wan(t) (t)a die [!] dreaming .\n"), ((170, (26, 29)), "*CHI:\tI don't wan(t) (t)a die [!] dreaming .\n"), ((170, (34, 42)), "*CHI:\tI don't wan(t) (t)a die [!] dreaming .\n"), ((173, (-1, 4)), "*CHI:\tI don't .\n"), ((176, (6, 9)), '*MOT:\tzzz .\n'), ((180, (6, 12)), "*MOT:\tthat's just the name of <it xxx xxx> [>] .\n"), ((180, (22, 26)), "*MOT:\tthat's just the name of <it xxx xxx> [>] .\n"), ((188, (-1, 4)), "*MOT:\tthat doesn't mean you're gonna die right now it's only the <name of it xxx> [>] .\n"), ((188, (24, 30)), "*MOT:\tthat doesn't mean you're gonna die right now it's only the <name of it xxx> [>] .\n"), ((188, (31, 36)), "*MOT:\tthat doesn't mean you're gonna die right now it's only the <name of it xxx> [>] .\n"), ((188, (65, 70)), "*MOT:\tthat doesn't mean you're gonna die right now it's only the <name of it xxx> [>] .\n"), ((196, (6, 9)), '*CHI:\tzzz [<] is out !\n'), ((196, (10, 13)), '*CHI:\tzzz [<] is out !\n'), ((200, (6, 10)), '*MOT:\tokay .\n'), ((203, (16, 19)), '*MOT:\t<Mariana> [>] ?\n'), ((207, (9, 12)), '*CHI:\tno [<] .\n'), ((210, (-1, 4)), "*BRO:\tit's only the dream to me .\n"), ((210, (20, 25)), "*BRO:\tit's only the dream to me .\n"), ((214, (-1, 4)), "*CHI:\tI don't want this !\n"), ((218, (6, 9)), '*MOT:\ttry to eat a little bit then .\n'), ((218, (26, 29)), '*MOT:\ttry to eat a little bit then .\n'), ((222, (-1, 4)), '*MOT:\tyou wan(t) (t)a be strong and big (.) like Jackie ?\n'), ((222, (40, 43)), '*MOT:\tyou wan(t) (t)a be strong and big (.) like Jackie ?\n'), ((234, (-1, 4)), "*MOT:\tshe's big you know why ?\n"), ((234, (6, 11)), "*MOT:\tshe's big you know why ?\n"), ((238, (10, 13)), '*CHI:\tbig [?] .\n'), ((241, (-1, 4)), '*MOT:\tbecause she ate her food .\n'), ((241, (26, 30)), '*MOT:\tbecause she ate her food .\n'), ((251, (-1, 4)), '*CHI:\tMommy ?\n'), ((255, (19, 22)), '*CHI:\tsee I make a xxx I like .\n'), ((262, (-1, 4)), "*CHI:\t<well I'm a eat> [<] faster .\n"), ((262, (23, 26)), "*CHI:\t<well I'm a eat> [<] faster .\n"), ((269, (-1, 4)), '*CHI:\twhy ?\n'), ((273, (-1, 4)), '*MOT:\tyou have_to do is eat your food .\n'), ((273, (33, 37)), '*MOT:\tyou have_to do is eat your food .\n'), ((278, (17, 21)), '*MOT:\t<and maybe half of that> [>] .\n'), ((278, (31, 34)), '*MOT:\t<and maybe half of that> [>] .\n'), ((281, (6, 9)), '*CHI:\tzzz [<][>] .\n'), ((285, (14, 18)), '*MOT:\t<little bit> [<] .\n'), ((285, (19, 22)), '*MOT:\t<little bit> [<] .\n'), ((288, (-1, 4)), "*CHI:\tI don't want that on my plate .\n"), ((288, (30, 35)), "*CHI:\tI don't want that on my plate .\n"), ((294, (6, 9)), '*MOT:\teat that next .\n'), ((297, (-1, 4)), '*CHI:\ttake it off !\n'), ((301, (-1, 4)), "*CHI:\tI don't want to see it !\n"), ((305, (6, 12)), '*MOT:\twan(t) (t)a see it ?\n'), ((309, (-1, 4)), '*CHI:\ttake it off of my plate !\n'), ((309, (24, 29)), '*CHI:\ttake it off of my plate !\n'), ((313, (-1, 4)), '*MOT:\tyou want your spoon ?\n'), ((313, (20, 25)), '*MOT:\tyou want your spoon ?\n'), ((318, (15, 20)), "*BRO:\t<I don't want> [<] this .\n"), ((318, (21, 24)), "*BRO:\t<I don't want> [<] this .\n"), ((321, (-1, 4)), "*BRO:\tI don't want this .\n"), ((324, (6, 9)), '*CHI:\tzzz .\n'), ((328, (6, 9)), '*CHI:\tzzz [>] .\n'), ((328, (10, 13)), '*CHI:\tzzz [>] .\n'), ((332, (-1, 4)), "*MOT:\t<that's not too funny Mariana> [<] .\n"), ((336, (6, 9)), '*CHI:\tzzz [>] .\n'), ((336, (10, 13)), '*CHI:\tzzz [>] .\n'), ((340, (-1, 4)), '*MOT:\t<you know better> [<] .\n'), ((340, (6, 10)), '*MOT:\t<you know better> [<] .\n'), ((340, (16, 23)), '*MOT:\t<you know better> [<] .\n'), ((340, (24, 27)), '*MOT:\t<you know better> [<] .\n'), ((343, (6, 9)), '*CHI:\tzzz .\n'), ((347, (-1, 4)), '*MOT:\tMikey please .\n'), ((347, (12, 18)), '*MOT:\tMikey please .\n'), ((352, (-1, 4)), '*CHI:\t<take it off of my> [<] plate take it off of my plate !\n'), ((352, (22, 25)), '*CHI:\t<take it off of my> [<] plate take it off of my plate !\n'), ((352, (30, 35)), '*CHI:\t<take it off of my> [<] plate take it off of my plate !\n'), ((362, (-1, 4)), "*CHI:\tI'm not gonna do that [>] .\n"), ((362, (28, 31)), "*CHI:\tI'm not gonna do that [>] .\n"), ((365, (6, 9)), '*CHI:\tzzz [<] take it off +...\n'), ((365, (10, 13)), '*CHI:\tzzz [<] take it off +...\n'), ((369, (-1, 4)), '*MOT:\tMariana ?\n'), ((373, (-1, 4)), "*MOT:\tif you don't want it don't eat it .\n"), ((379, (14, 19)), "*CHI:\t<I> [<] don't want it on my plate zzz zzz .\n"), ((379, (34, 39)), "*CHI:\t<I> [<] don't want it on my plate zzz zzz .\n"), ((379, (40, 43)), "*CHI:\t<I> [<] don't want it on my plate zzz zzz .\n"), ((386, (-1, 4)), '*CHI:\tzzz get it out zzz .\n'), ((386, (6, 9)), '*CHI:\tzzz get it out zzz .\n'), ((390, (14, 20)), '*MOT:\teat the muffin then .\n'), ((401, (6, 10)), '*MOT:\tlook at this water .\n'), ((401, (19, 24)), '*MOT:\tlook at this water .\n'), ((404, (6, 10)), "*MOT:\tit's melting !\n"), ((404, (11, 18)), "*MOT:\tit's melting !\n"), ((407, (13, 17)), "*MOT:\toh wow it's so hot out !\n"), ((410, (6, 9)), '*MOT:\txxx .\n'), ((411, (6, 10)), "*MOT:\tit's melting just from being on the table .\n"), ((411, (42, 47)), "*MOT:\tit's melting just from being on the table .\n"), ((416, (-1, 4)), "*MOT:\tI can't believe it .\n"), ((419, (14, 20)), "*BRO:\tall the food's melting [!] I can't believe it .\n"), ((419, (29, 32)), "*BRO:\tall the food's melting [!] I can't believe it .\n"), ((425, (10, 14)), "*MOT:\tI'm glad (.) .\n"), ((425, (15, 18)), "*MOT:\tI'm glad (.) .\n"), ((429, (9, 13)), "*BRO:\t<I got> [<] a xxx who's this ?\n"), ((429, (24, 29)), "*BRO:\t<I got> [<] a xxx who's this ?\n"), ((432, (-1, 4)), "*MOT:\tif you don't want it I'll put it back and eat it (.) .\n"), ((438, (14, 20)), '*MOT:\teat the muffin okay .\n'), ((438, (21, 25)), '*MOT:\teat the muffin okay .\n'), ((441, (-1, 4)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((441, (6, 11)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((441, (34, 41)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((441, (42, 45)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((441, (68, 74)), "*MOT:\thurry up and I'll get you a vitamin (.) after you finish your dinner ?\n"), ((447, (-1, 4)), '*BRO:\tI want popsicles .\n'), ((450, (-1, 4)), "*MOT:\tthat's right the popsicle too .\n"), ((450, (6, 12)), "*MOT:\tthat's right the popsicle too .\n"), ((453, (-1, 4)), '*BRO:\twant a popsicle (.) ?\n'), ((453, (22, 25)), '*BRO:\twant a popsicle (.) ?\n'), ((456, (6, 9)), '*BRO:\tyes (.) ?\n'), ((459, (-1, 4)), '*BRO:\tthen (.) eat your food !\n'), ((459, (24, 28)), '*BRO:\tthen (.) eat your food !\n'), ((462, (-1, 4)), "*CHI:\tbut I don't want a vitamin .\n"), ((462, (25, 32)), "*CHI:\tbut I don't want a vitamin .\n"), ((465, (-1, 4)), "*MOT:\tthen you won't eat your vitamin that's no problem Mariana .\n"), ((465, (30, 37)), "*MOT:\tthen you won't eat your vitamin that's no problem Mariana .\n"), ((465, (38, 44)), "*MOT:\tthen you won't eat your vitamin that's no problem Mariana .\n"), ((470, (-1, 4)), "*BRO:\tand we won't get you (.) xxx .\n"), ((470, (31, 34)), "*BRO:\tand we won't get you (.) xxx .\n"), ((473, (6, 9)), '*MOT:\tzzz (.) .\n'), ((473, (10, 13)), '*MOT:\tzzz (.) .\n'), ((480, (-1, 4)), '*MOT:\tthis is so good .\n'), ((492, (6, 9)), '*MOT:\tzzz .\n'), ((499, (12, 17)), '*MOT:\tmaybe yours is better .\n'), ((502, (11, 14)), '*BRO:\t&-uh huh (.) .\n'), ((502, (15, 18)), '*BRO:\t&-uh huh (.) .\n'), ((505, (-1, 4)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((505, (19, 25)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((505, (41, 47)), "*BRO:\tI don't like onions I don't I hate onions .\n"), ((510, (-1, 4)), '*BRO:\tI hate [!] onions .\n'), ((510, (13, 23)), '*BRO:\tI hate [!] onions .\n'), ((513, (-1, 4)), '*MOT:\tI love it .\n'), ((516, (-1, 4)), '*MOT:\tI love it .\n'), ((519, (6, 9)), '*BRO:\tzzz .\n'), ((523, (-1, 4)), '*MOT:\tyou ate enough .\n'), ((526, (-1, 4)), '*MOT:\tyou want a popsicle you know what to do .\n'), ((534, (15, 19)), '*MOT:\teat your food .\n'), ((540, (6, 10)), '*MOT:\tlook at that .\n'), ((543, (-1, 4)), "*BRO:\tI don't want that !\n"), ((547, (-1, 4)), "*BRO:\tI don't wan(t) (t)a eat that (.) !\n"), ((547, (26, 29)), "*BRO:\tI don't wan(t) (t)a eat that (.) !\n"), ((551, (-1, 4)), '*BRO:\tI want a popsicle .\n'), ((554, (-1, 4)), '*MOT:\tyou have_to eat that .\n'), ((561, (-1, 4)), "*BRO:\tI don't want to [!] zzz [>] .\n"), ((561, (26, 29)), "*BRO:\tI don't want to [!] zzz [>] .\n"), ((561, (30, 33)), "*BRO:\tI don't want to [!] zzz [>] .\n"), ((565, (-1, 4)), '*MOT:\they [<] .\n'), ((565, (6, 9)), '*MOT:\they [<] .\n'), ((568, (12, 16)), '*MOT:\tMikey stop acting like a baby .\n'), ((568, (31, 35)), '*MOT:\tMikey stop acting like a baby .\n'), ((571, (6, 9)), "*BRO:\tzzz I don't want to !\n"), ((576, (-1, 4)), "*MOT:\tdo you remember how Eliza hits her [/] her daughters with a belt (.) when they don't listen ?\n"), ((576, (66, 70)), "*MOT:\tdo you remember how Eliza hits her [/] her daughters with a belt (.) when they don't listen ?\n"), ((576, (71, 74)), "*MOT:\tdo you remember how Eliza hits her [/] her daughters with a belt (.) when they don't listen ?\n"), ((583, (-1, 4)), '*MOT:\tyou want me to do that ?\n'), ((586, (6, 10)), '*BRO:\tuhuh .\n'), ((589, (-1, 4)), '*MOT:\tokay you know better .\n'), ((592, (6, 9)), '*BRO:\txxx .\n'), ((593, (-1, 4)), "*MOT:\tI'll help you okay ?\n"), ((593, (11, 15)), "*MOT:\tI'll help you okay ?\n"), ((599, (-1, 4)), '*MOT:\there (.) .\n'), ((602, (12, 15)), '*MOT:\teat a bit .\n'), ((605, (6, 9)), '*MOT:\ttry xxx .\n'), ((605, (10, 13)), '*MOT:\ttry xxx .\n'), ((608, (-1, 4)), "*BRO:\tI don't like those onions .\n"), ((608, (25, 31)), "*BRO:\tI don't like those onions .\n"), ((612, (6, 10)), '*MOT:\tokay I took them out (.) .\n'), ((612, (27, 30)), '*MOT:\tokay I took them out (.) .\n'), ((615, (6, 10)), "*MOT:\tit's good isn't it ?\n"), ((615, (16, 21)), "*MOT:\tit's good isn't it ?\n"), ((618, (-1, 4)), "*BRO:\tI don't want onions .\n"), ((618, (14, 25)), "*BRO:\tI don't want onions .\n"), ((623, (26, 32)), "*MOT:\tit doesn't have any onions Mikey .\n"), ((627, (-1, 4)), '*MOT:\tI took them out (.) .\n'), ((627, (22, 25)), '*MOT:\tI took them out (.) .\n'), ((630, (6, 9)), '*MOT:\thm: .\n'), ((633, (6, 9)), '*BRO:\txxx .\n'), ((634, (6, 9)), '*BRO:\thm: .\n'), ((640, (-1, 4)), '*MOT:\tdid you finish ?\n'), ((650, (46, 49)), "*MOT:\tmaybe Mariana doesn't want any popsicle (.) .\n"), ((654, (-1, 4)), "*MOT:\tI don't see her eating .\n"), ((654, (22, 28)), "*MOT:\tI don't see her eating .\n"), ((657, (6, 9)), '*CHI:\txxx .\n'), ((658, (14, 23)), '*MOT:\tcome on honey [?] (.) .\n'), ((658, (24, 27)), '*MOT:\tcome on honey [?] (.) .\n'), ((661, (-1, 4)), '*MOT:\tdrink the juice too (.) .\n'), ((661, (16, 21)), '*MOT:\tdrink the juice too (.) .\n'), ((664, (-1, 4)), '*MOT:\tzzz she looks so funny .\n'), ((664, (6, 9)), '*MOT:\tzzz she looks so funny .\n'), ((668, (6, 9)), '*BRO:\tzzz .\n'), ((672, (6, 9)), '*MOT:\txxx .\n'), ((673, (6, 9)), '*BRO:\txxx .\n'), ((675, (-1, 4)), "*MOT:\tyou're not hungry huh Mikey ?\n"), ((675, (24, 27)), "*MOT:\tyou're not hungry huh Mikey ?\n"), ((678, (6, 9)), '*BRO:\tzzz (.) .\n'), ((678, (10, 13)), '*BRO:\tzzz (.) .\n'), ((683, (-1, 4)), "*MOT:\tI can't believe how hot it is .\n"), ((689, (6, 9)), "*BRO:\tbet it'll melt the popsicle .\n"), ((692, (-1, 4)), '*MOT:\tprobably .\n'), ((696, (-1, 4)), '*MOT:\tdo you want to (.) play with Teresa ?\n'), ((696, (25, 29)), '*MOT:\tdo you want to (.) play with Teresa ?\n'), ((699, (-1, 4)), '*BRO:\tthere ?\n'), ((705, (-1, 4)), '*BRO:\tunder there or up there ?\n'), ((714, (-1, 4)), '*MOT:\ttell [/] tell Mariana to come in now and drink the juice .\n'), ((714, (57, 62)), '*MOT:\ttell [/] tell Mariana to come in now and drink the juice .\n'), ((719, (6, 9)), '*MOT:\txxx .\n'), ((723, (38, 41)), '*BRO:\tMariana [!] Mariana [!] come on [?] and drink your juice .\n'), ((723, (57, 62)), '*BRO:\tMariana [!] Mariana [!] come on [?] and drink your juice .\n'), ((729, (6, 9)), '*BRO:\txxx .\n'), ((733, (6, 10)), '*MOT:\tokay Mariana drink the juice .\n'), ((733, (29, 34)), '*MOT:\tokay Mariana drink the juice .\n'), ((739, (-1, 4)), '*MOT:\tand eat your <muffin [?] > [>] .\n'), ((739, (19, 26)), '*MOT:\tand eat your <muffin [?] > [>] .\n'), ((739, (27, 30)), '*MOT:\tand eat your <muffin [?] > [>] .\n'), ((742, (9, 12)), '*CHI:\tno [<] .\n'), ((745, (8, 14)), '*CHI:\ta muffin ?\n'), ((749, (6, 9)), '*MOT:\tyes .\n'), ((752, (6, 10)), '*CHI:\tokay .\n'), ((755, (-1, 4)), '*MOT:\teither one as long as you eat it (.) and drink your juice (.) .\n'), ((755, (39, 42)), '*MOT:\teither one as long as you eat it (.) and drink your juice (.) .\n'), ((755, (58, 63)), '*MOT:\teither one as long as you eat it (.) and drink your juice (.) .\n'), ((760, (-1, 4)), '*MOT:\they Mikey ?\n'), ((760, (6, 9)), '*MOT:\they Mikey ?\n'), ((763, (-1, 4)), '*MOT:\twould you like some more juice ?\n'), ((763, (31, 36)), '*MOT:\twould you like some more juice ?\n'), ((766, (6, 9)), '*BRO:\tzzz .\n'), ((770, (6, 12)), "*MOT:\tfinish that xxx and then I'll get you the popsicle .\n"), ((770, (18, 21)), "*MOT:\tfinish that xxx and then I'll get you the popsicle .\n"), ((778, (22, 25)), "*MOT:\toh I'm sweating (.) .\n"), ((785, (28, 31)), "*BRO:\tno I can't drink this (.) because my throat get hurt !\n"), ((785, (43, 49)), "*BRO:\tno I can't drink this (.) because my throat get hurt !\n"), ((796, (11, 18)), "*MOT:\tyour tummy's gonna hurt .\n"), ((796, (19, 24)), "*MOT:\tyour tummy's gonna hurt .\n"), ((796, (25, 29)), "*MOT:\tyour tummy's gonna hurt .\n"), ((800, (13, 16)), '*BRO:\tnuhhuh (.) !\n'), ((804, (-1, 4)), "*BRO:\twhen you [//] I eat a popsicle <I don't> [/] I don't +...\n"), ((804, (47, 50)), "*BRO:\twhen you [//] I eat a popsicle <I don't> [/] I don't +...\n"), ((809, (-1, 4)), "*BRO:\tI was eating in the store and I ate a popsicle and I didn't hurt my throat .\n"), ((809, (26, 31)), "*BRO:\tI was eating in the store and I ate a popsicle and I didn't hurt my throat .\n"), ((809, (74, 80)), "*BRO:\tI was eating in the store and I ate a popsicle and I didn't hurt my throat .\n"), ((823, (6, 10)), '*MOT:\tokay just a little bit left Mikey .\n'), ((823, (25, 28)), '*MOT:\tokay just a little bit left Mikey .\n'), ((826, (15, 19)), "*MOT:\ttwo more sips and that's it .\n"), ((831, (6, 9)), '*BRO:\tzzz ow [!] zzz .\n'), ((831, (10, 12)), '*BRO:\tzzz ow [!] zzz .\n'), ((837, (11, 15)), "*MOT:\tgood lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .\n"), ((837, (73, 79)), "*MOT:\tgood lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .\n"), ((837, (88, 92)), "*MOT:\tgood lord if you drink you can't eat a popsicle if it is gonna (.) create so much pain .\n"), ((844, (11, 17)), '*MOT:\tyour throat is really hurt ?\n'), ((847, (9, 12)), '*BRO:\tno [!] .\n'), ((850, (-1, 4)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((850, (34, 39)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((850, (75, 78)), "*MOT:\tif it doesn't hurt with the juice then it won't hurt with a popsicle (.) .\n"), ((860, (6, 9)), '*BRO:\tzzz .\n'), ((865, (-1, 4)), "*MOT:\tthen you can't have a popsicle if it's only going to <hurt your> [/] hurt your throat .\n"), ((865, (85, 91)), "*MOT:\tthen you can't have a popsicle if it's only going to <hurt your> [/] hurt your throat .\n"), ((873, (6, 9)), '*BRO:\txxx .\n'), ((874, (9, 12)), "*MOT:\toh boy I guess he's sick .\n"), ((874, (26, 30)), "*MOT:\toh boy I guess he's sick .\n"), ((877, (29, 35)), '*MOT:\tbetter take him to the doctor .\n'), ((880, (-1, 4)), '*CHI:\tand take him to the doctor <xxx right now> [>] .\n'), ((880, (26, 32)), '*CHI:\tand take him to the doctor <xxx right now> [>] .\n'), ((885, (14, 17)), '*MOT:\t<Mikey> [<] +...\n'), ((888, (-1, 4)), "*BRO:\tI don't want to xxx !\n"), ((892, (6, 9)), "*BRO:\tzzz I don't want to .\n"), ((896, (6, 12)), '*MOT:\tfinish it .\n'), ((899, (-1, 4)), '*BRO:\tzzz it hurts .\n'), ((899, (6, 9)), '*BRO:\tzzz it hurts .\n'), ((903, (-1, 4)), '*MOT:\tsee ?\n'), ((903, (6, 9)), '*MOT:\tsee ?\n'), ((906, (17, 21)), "*MOT:\tit doesn't hurt .\n"), ((909, (6, 8)), '*BRO:\tow !\n'), ((912, (6, 10)), '*MOT:\tokay .\n'), ((915, (-1, 4)), "*MOT:\tyou're not able to eat a popsicle <so xxx> [>] .\n"), ((920, (6, 9)), '*BRO:\tzzz zzz .\n'), ((924, (6, 9)), '*CHI:\tzzz .\n'), ((928, (6, 10)), '*MOT:\tokay .\n'), ((931, (-1, 4)), '*MOT:\tsee ?\n'), ((931, (6, 9)), '*MOT:\tsee ?\n'), ((937, (-1, 4)), '*MOT:\tMikey ?\n'), ((940, (-1, 4)), '*MOT:\tjust a little bit .\n'), ((940, (20, 23)), '*MOT:\tjust a little bit .\n'), ((943, (10, 13)), '*MOT:\tone (.) two !\n'), ((946, (-1, 4)), "*MOT:\tand that's it .\n"), ((949, (6, 9)), '*MOT:\txxx .\n'), ((950, (-1, 4)), '*MOT:\toh you guys .\n'), ((954, (-1, 4)), "*MOT:\tyou've lost your appetite huh Mikey and Mariana ?\n"), ((954, (6, 12)), "*MOT:\tyou've lost your appetite huh Mikey and Mariana ?\n"), ((954, (32, 35)), "*MOT:\tyou've lost your appetite huh Mikey and Mariana ?\n"), ((962, (-1, 4)), '*CHI:\tI have a cold and he has a cough .\n'), ((962, (15, 19)), '*CHI:\tI have a cold and he has a cough .\n'), ((962, (33, 38)), '*CHI:\tI have a cold and he has a cough .\n'), ((967, (32, 35)), "*MOT:\twhy you don't wan(t) (t)a eat ?\n"), ((971, (6, 10)), '*CHI:\t&-uh .\n'), ((973, (-1, 4)), '*MOT:\tsave your cups .\n'), ((973, (16, 20)), '*MOT:\tsave your cups .\n'), ((980, (6, 10)), '*MOT:\tokay .\n'), ((983, (-1, 4)), '*MOT:\tare you (.) finished Mariana ?\n'), ((987, (-1, 4)), '*BRO:\tI can get one now I want Mickey Mouse .\n'), ((992, (-1, 4)), "*BRO:\tI know which one's Mickey Mouse .\n"), ((996, (-1, 4)), '*MOT:\twe have only three Mikey .\n'), ((999, (-1, 4)), '*MOT:\tI wan(t) (t)a see which xxx [>] .\n'), ((999, (15, 19)), '*MOT:\tI wan(t) (t)a see which xxx [>] .\n'), ((999, (34, 37)), '*MOT:\tI wan(t) (t)a see which xxx [>] .\n'), ((1003, (18, 28)), '*CHI:\tme want the yellow one .\n'), ((1006, (6, 10)), '*MOT:\tokay .\n'), ((1009, (-1, 4)), "*MOT:\twe don't have any yellow .\n"), ((1009, (24, 30)), "*MOT:\twe don't have any yellow .\n"), ((1012, (-1, 4)), '*MOT:\tdo we Mikey ?\n'), ((1015, (9, 12)), '*BRO:\tno (.) .\n'), ((1018, (6, 12)), '*BRO:\torange and pink (.) and rose .\n'), ((1018, (17, 21)), '*BRO:\torange and pink (.) and rose .\n'), ((1018, (22, 25)), '*BRO:\torange and pink (.) and rose .\n'), ((1021, (6, 9)), '*CHI:\txxx .\n'), ((1022, (-1, 4)), '*BRO:\tand xxx xxx [>] .\n'), ((1026, (10, 15)), '*CHI:\t<he says> [/] <he says> [//] <Mikey says> [>] [/] Mikey says only this juice .\n'), ((1026, (77, 82)), '*CHI:\t<he says> [/] <he says> [//] <Mikey says> [>] [/] Mikey says only this juice .\n'), ((1033, (6, 10)), '*MOT:\tokay <xxx [/] > [>] .\n'), ((1036, (14, 17)), "*BRO:\t<you're [?] keeping it> [<] off [?] of the box ?\n"), ((1036, (49, 52)), "*BRO:\t<you're [?] keeping it> [<] off [?] of the box ?\n"), ((1041, (-1, 4)), '*MOT:\twe have a cherry a grape and an orange one .\n'), ((1041, (16, 22)), '*MOT:\twe have a cherry a grape and an orange one .\n'), ((1041, (25, 30)), '*MOT:\twe have a cherry a grape and an orange one .\n'), ((1041, (38, 44)), '*MOT:\twe have a cherry a grape and an orange one .\n'), ((1046, (-1, 4)), '*MOT:\twhich [>] one do you want ?\n'), ((1051, (-1, 4)), '*CHI:\tI want the <orange one> [>] .\n'), ((1051, (17, 24)), '*CHI:\tI want the <orange one> [>] .\n'), ((1051, (25, 29)), '*CHI:\tI want the <orange one> [>] .\n'), ((1051, (30, 33)), '*CHI:\tI want the <orange one> [>] .\n'), ((1054, (11, 17)), '*BRO:\t<the grape> [<] .\n'), ((1054, (18, 21)), '*BRO:\t<the grape> [<] .\n'), ((1057, (10, 15)), '*BRO:\tthe grape .\n'), ((1060, (6, 10)), '*MOT:\tokay .\n'), ((1063, (6, 9)), '*CHI:\txxx I want this [/] .\n'), ((1063, (22, 25)), '*CHI:\txxx I want this [/] .\n'), ((1066, (-1, 4)), '*BRO:\tI xxx like this [>] one .\n'), ((1071, (-1, 4)), "*MOT:\tthat's a grape .\n"), ((1071, (15, 20)), "*MOT:\tthat's a grape .\n"), ((1074, (-1, 4)), '*CHI:\tI want this one .\n'), ((1077, (-1, 4)), "*BRO:\tI like the red one I don't [?] like this .\n"), ((1077, (21, 24)), "*BRO:\tI like the red one I don't [?] like this .\n"), ((1083, (-1, 4)), '*MOT:\tcherry .\n'), ((1083, (6, 12)), '*MOT:\tcherry .\n'), ((1086, (-1, 4)), '*BRO:\tcherry .\n'), ((1086, (6, 12)), '*BRO:\tcherry .\n'), ((1089, (15, 19)), '*CHI:\twhat [>] ones do you ?\n'), ((1093, (6, 10)), '*MOT:\tokay [<] .\n'), ((1093, (11, 14)), '*MOT:\tokay [<] .\n'), ((1096, (-1, 4)), '*MOT:\tyou know you <have_to finish that Mariana before xxx> [>] .\n'), ((1102, (19, 23)), '*BRO:\t<xxx out the box> [<] ?\n'), ((1102, (24, 27)), '*BRO:\t<xxx out the box> [<] ?\n'), ((1105, (-1, 4)), '*BRO:\twhy ?\n'), ((1111, (34, 38)), '*BRO:\twhy you took them <out from the> [//] out of the box ?\n'), ((1111, (55, 58)), '*BRO:\twhy you took them <out from the> [//] out of the box ?\n'), ((1117, (27, 30)), '*MOT:\twhat do you want the box for ?\n'), ((1120, (-1, 4)), '*MOT:\tare you going to eat the box ?\n'), ((1120, (31, 34)), '*MOT:\tare you going to eat the box ?\n'), ((1124, (41, 44)), '*BRO:\tno but there were popsicles in the box .\n'), ((1130, (-1, 4)), '*MOT:\tthere were only three left Mikey .\n'), ((1133, (-1, 4)), "*MOT:\twe don't need the whole box in the freezer .\n"), ((1133, (24, 33)), "*MOT:\twe don't need the whole box in the freezer .\n"), ((1138, (-1, 4)), '*BRO:\tbut those [/] those <in &m> [//] in boxes was in [/] in a box xxx (un)til tomorrow ?\n'), ((1138, (42, 47)), '*BRO:\tbut those [/] those <in &m> [//] in boxes was in [/] in a box xxx (un)til tomorrow ?\n'), ((1138, (68, 71)), '*BRO:\tbut those [/] those <in &m> [//] in boxes was in [/] in a box xxx (un)til tomorrow ?\n'), ((1161, (-1, 4)), '*MOT:\tand Mariana had two ?\n'), ((1169, (6, 9)), '*MOT:\tzzz .\n'), ((1174, (-1, 4)), '*BRO:\ttomorrow buy more of these ?\n'), ((1177, (6, 9)), '*MOT:\tyes .\n'), ((1180, (-1, 4)), '*MOT:\tif you behave .\n'), ((1183, (-1, 4)), '*BRO:\tI wan(t) (t)a get one for [?] this .\n'), ((1183, (32, 35)), '*BRO:\tI wan(t) (t)a get one for [?] this .\n'), ((1186, (42, 44)), "*CHI:\tno more for them (be)cause (.) &-uh &d we're not gonna have no more .\n"), ((1186, (45, 50)), "*CHI:\tno more for them (be)cause (.) &-uh &d we're not gonna have no more .\n"), ((1192, (-1, 4)), "*MOT:\tthat's right .\n"), ((1192, (6, 12)), "*MOT:\tthat's right .\n"), ((1192, (13, 18)), "*MOT:\tthat's right .\n"), ((1195, (-1, 4)), "*CHI:\twe're not gonna have no more [>] .\n"), ((1195, (35, 38)), "*CHI:\twe're not gonna have no more [>] .\n"), ((1199, (22, 27)), '*MOT:\tno [<] more for today .\n'), ((1202, (-1, 4)), '*BRO:\tnuhhuh when we get those popsicles (.) those are for the picnic .\n'), ((1202, (63, 69)), '*BRO:\tnuhhuh when we get those popsicles (.) those are for the picnic .\n'), ((1207, (-1, 4)), '*BRO:\tthose are for the summer .\n'), ((1207, (24, 30)), '*BRO:\tthose are for the summer .\n'), ((1210, (6, 9)), '*MOT:\txxx .\n'), ((1211, (-1, 4)), '*BRO:\txxx you cook .\n'), ((1211, (6, 9)), '*BRO:\txxx you cook .\n'), ((1214, (-1, 4)), "*BRO:\tI didn't know you cook .\n"), ((1217, (-1, 4)), '*CHI:\tand I can open the popsicles .\n'), ((1220, (6, 10)), '*MOT:\tokay .\n'), ((1229, (6, 8)), '*MOT:\toh I see you can .\n'), ((1235, (6, 12)), "*BRO:\tthat's (.) Donald Duck .\n"), ((1235, (24, 28)), "*BRO:\tthat's (.) Donald Duck .\n"), ((1238, (9, 15)), "*BRO:\tno that's Goofy .\n"), ((1241, (6, 12)), "*BRO:\tthat's Goofy .\n"), ((1247, (-1, 4)), '*MOT:\tknow who wrote me a letter Mikey ?\n'), ((1247, (26, 32)), '*MOT:\tknow who wrote me a letter Mikey ?\n'), ((1251, (-1, 4)), '*BRO:\twho ?\n'), ((1260, (-1, 4)), '*BRO:\twhy ?\n'), ((1270, (-1, 4)), '*MOT:\tand she sent me this letter yesterday .\n'), ((1270, (27, 33)), '*MOT:\tand she sent me this letter yesterday .\n'), ((1275, (-1, 4)), '*BRO:\tyou told xxx he went away ?\n'), ((1278, (6, 10)), '*MOT:\tyeah .\n'), ((1282, (-1, 4)), '*MOT:\tI need her .\n'), ((1286, (39, 42)), '*BRO:\t<why you need> [//] why you want xxx ?\n'), ((1293, (-1, 4)), "*MOT:\tshe was a nice lady wasn't she ?\n"), ((1293, (21, 25)), "*MOT:\tshe was a nice lady wasn't she ?\n"), ((1299, (6, 9)), '*CHI:\txxx .\n'), ((1300, (-1, 4)), '*MOT:\tshe told me to say hi@q to you and Mariana .\n'), ((1300, (25, 29)), '*MOT:\tshe told me to say hi@q to you and Mariana .\n'), ((1305, (-1, 4)), '*MOT:\tin the letter .\n'), ((1305, (13, 19)), '*MOT:\tin the letter .\n'), ((1310, (-1, 4)), "*CHI:\tbut I don't want her to come back here again .\n"), ((1315, (10, 15)), '*MOT:\twhy honey ?\n'), ((1322, (24, 27)), '*MOT:\twhat does she say [>] ?\n'), ((1326, (-1, 4)), '*CHI:\tshe [<] always say Mariana Mariana every day !\n'), ((1326, (47, 50)), '*CHI:\tshe [<] always say Mariana Mariana every day !\n'), ((1330, (12, 15)), '*MOT:\tevery day ?\n'), ((1334, (6, 10)), '*CHI:\tyeah .\n'), ((1337, (-1, 4)), '*MOT:\tis that true Mikey ?\n'), ((1343, (-1, 4)), "*BRO:\tshe doesn't say that .\n"), ((1347, (-1, 4)), '*CHI:\t<but I told her [/] > [>] .\n'), ((1347, (6, 10)), '*CHI:\t<but I told her [/] > [>] .\n'), ((1350, (6, 9)), '*BRO:\txxx .\n'), ((1351, (-1, 4)), "*BRO:\twhen [/] when [/] when [/] <when you bring> [/] when you bring <&m> [//] me xxx the xxx won't like it .\n"), ((1351, (11, 14)), "*BRO:\twhen [/] when [/] when [/] <when you bring> [/] when you bring <&m> [//] me xxx the xxx won't like it .\n"), ((1351, (94, 99)), "*BRO:\twhen [/] when [/] when [/] <when you bring> [/] when you bring <&m> [//] me xxx the xxx won't like it .\n"), ((1356, (6, 12)), "*BRO:\tthat's why he wants his cubby (.) to be there .\n"), ((1356, (30, 35)), "*BRO:\tthat's why he wants his cubby (.) to be there .\n"), ((1356, (36, 39)), "*BRO:\tthat's why he wants his cubby (.) to be there .\n"), ((1364, (6, 9)), '*BRO:\tyes .\n'), ((1367, (13, 16)), '*CHI:\tnuhhuh (.) <I heard her> [>] .\n'), ((1367, (31, 34)), '*CHI:\tnuhhuh (.) <I heard her> [>] .\n'), ((1370, (20, 23)), '*BRO:\t<uhhuh uhhuh> [<] .\n'), ((1376, (-1, 4)), '*CHI:\tI heard (.) her .\n'), ((1379, (-1, 4)), '*CHI:\tI heard her (.) say that every day .\n'), ((1379, (18, 21)), '*CHI:\tI heard her (.) say that every day .\n'), ((1379, (37, 40)), '*CHI:\tI heard her (.) say that every day .\n'), ((1389, (-1, 4)), '*MOT:\twhen was I [?] ?\n'), ((1393, (-1, 4)), '*MOT:\twhen I went to the doctor ?\n'), ((1393, (25, 31)), '*MOT:\twhen I went to the doctor ?\n'), ((1397, (-1, 4)), '*MOT:\tand she stayed with you (.) ?\n'), ((1405, (6, 10)), '*CHI:\t&-um we played (.) .\n'), ((1408, (-1, 4)), '*CHI:\twe played ghosts .\n'), ((1408, (16, 22)), '*CHI:\twe played ghosts .\n'), ((1411, (-1, 4)), '*CHI:\tMikey was the ghost (.) and I was the baby (.) and Carmen was the mommy .\n'), ((1411, (20, 25)), '*CHI:\tMikey was the ghost (.) and I was the baby (.) and Carmen was the mommy .\n'), ((1411, (26, 29)), '*CHI:\tMikey was the ghost (.) and I was the baby (.) and Carmen was the mommy .\n'), ((1411, (44, 48)), '*CHI:\tMikey was the ghost (.) and I was the baby (.) and Carmen was the mommy .\n'), ((1411, (72, 77)), '*CHI:\tMikey was the ghost (.) and I was the baby (.) and Carmen was the mommy .\n'), ((1418, (6, 10)), '*BRO:\t<and I was> [<] [/] I was scaring you .\n'), ((1418, (22, 25)), '*BRO:\t<and I was> [<] [/] I was scaring you .\n'), ((1421, (6, 10)), '*MOT:\tokay .\n'), ((1424, (6, 9)), '*CHI:\tzzz [>] .\n'), ((1424, (10, 13)), '*CHI:\tzzz [>] .\n'), ((1428, (-1, 4)), '*MOT:\tmust [<] have been fun huh ?\n'), ((1428, (29, 32)), '*MOT:\tmust [<] have been fun huh ?\n'), ((1433, (6, 12)), '*CHI:\twan(t) (t)a play with us ?\n'), ((1433, (18, 22)), '*CHI:\twan(t) (t)a play with us ?\n'), ((1436, (-1, 4)), '*CHI:\tghosts ?\n'), ((1436, (6, 12)), '*CHI:\tghosts ?\n'), ((1440, (-1, 4)), '*CHI:\tand Mikey be the ghost and I be the baby and you be the mom .\n'), ((1440, (23, 28)), '*CHI:\tand Mikey be the ghost and I be the baby and you be the mom .\n'), ((1440, (42, 46)), '*CHI:\tand Mikey be the ghost and I be the baby and you be the mom .\n'), ((1440, (62, 65)), '*CHI:\tand Mikey be the ghost and I be the baby and you be the mom .\n'), ((1448, (-1, 4)), "*MOT:\tI'm the mommy .\n"), ((1448, (14, 19)), "*MOT:\tI'm the mommy .\n"), ((1451, (6, 9)), "*MOT:\tzzz I'm the real mommy (.) .\n"), ((1451, (23, 28)), "*MOT:\tzzz I'm the real mommy (.) .\n"), ((1451, (29, 32)), "*MOT:\tzzz I'm the real mommy (.) .\n"), ((1455, (-1, 4)), "*MOT:\tI don't have_to pretend Mariana I'm the mommy !\n"), ((1455, (22, 29)), "*MOT:\tI don't have_to pretend Mariana I'm the mommy !\n"), ((1455, (46, 51)), "*MOT:\tI don't have_to pretend Mariana I'm the mommy !\n"), ((1461, (-1, 4)), '*CHI:\tbut (.) you have_to play !\n'), ((1465, (6, 10)), '*MOT:\tokay .\n'), ((1472, (-1, 4)), "*MOT:\tmaybe when we're finished okay ?\n"), ((1472, (17, 22)), "*MOT:\tmaybe when we're finished okay ?\n"), ((1481, (-1, 4)), '*MOT:\t<not right now when you finish the popsicle> [>] .\n'), ((1481, (6, 10)), '*MOT:\t<not right now when you finish the popsicle> [>] .\n'), ((1481, (51, 54)), '*MOT:\t<not right now when you finish the popsicle> [>] .\n'), ((1486, (27, 30)), '*BRO:\t<bite your popsicle> [<] .\n'), ((1492, (6, 9)), '*CHI:\tzzz [<] .\n'), ((1492, (10, 13)), '*CHI:\tzzz [<] .\n'), ((1497, (9, 13)), '*BRO:\t<I got> [/] I got mine .\n'), ((1497, (14, 17)), '*BRO:\t<I got> [/] I got mine .\n'), ((1497, (24, 28)), '*BRO:\t<I got> [/] I got mine .\n'), ((1500, (6, 9)), '*CHI:\txxx .\n'), ((1501, (-1, 4)), '*BRO:\tsee look_it .\n'), ((1504, (-1, 4)), '*BRO:\tI bite it .\n'), ((1508, (20, 24)), "*CHI:\toh (.) that's cold .\n"), ((1513, (11, 16)), '*BRO:\t<xxx bite> [<] it (.) .\n'), ((1516, (-1, 4)), '*BRO:\tyou have_to do this .\n'), ((1519, (6, 9)), '*BRO:\tzzz .\n'), ((1523, (6, 12)), "*BRO:\tthat's hot .\n"), ((1523, (13, 16)), "*BRO:\tthat's hot .\n"), ((1526, (6, 9)), '*CHI:\tzzz .\n'), ((1531, (6, 13)), "*CHI:\tthey're cold .\n"), ((1531, (14, 18)), "*CHI:\tthey're cold .\n"), ((1534, (6, 9)), '*CHI:\tzzz zzz zzz zzz .\n'), ((1538, (-1, 4)), '*MOT:\tsupposed to be cold Mariana .\n'), ((1541, (-1, 4)), '*MOT:\thas to be cold .\n'), ((1544, (-1, 4)), "*CHI:\tbut it's cold for me .\n"), ((1544, (15, 19)), "*CHI:\tbut it's cold for me .\n"), ((1547, (36, 41)), '*BRO:\tMom xxx supposed to go to the store .\n'), ((1550, (18, 25)), '*BRO:\tmy popsicle melting .\n'), ((1553, (-1, 4)), '*MOT:\tyeah it was so hot out yesterday ?\n'), ((1553, (6, 10)), '*MOT:\tyeah it was so hot out yesterday ?\n'), ((1560, (21, 27)), "*CHI:\tMommy but mine wasn't .\n"), ((1563, (-1, 4)), '*BRO:\tdo something [?] rock and roll .\n'), ((1563, (23, 27)), '*BRO:\tdo something [?] rock and roll .\n'), ((1563, (32, 36)), '*BRO:\tdo something [?] rock and roll .\n'), ((1566, (6, 8)), '*MOT:\toh I have so many things to do Mikey .\n'), ((1566, (24, 30)), '*MOT:\toh I have so many things to do Mikey .\n'), ((1571, (-1, 4)), '*MOT:\tI got_to make (.) phone calls +...\n'), ((1571, (24, 29)), '*MOT:\tI got_to make (.) phone calls +...\n'), ((1571, (30, 35)), '*MOT:\tI got_to make (.) phone calls +...\n'), ((1574, (9, 16)), '*BRO:\tno look_it .\n'), ((1577, (-1, 4)), '*BRO:\tthis is rock and roll .\n'), ((1577, (14, 18)), '*BRO:\tthis is rock and roll .\n'), ((1577, (23, 27)), '*BRO:\tthis is rock and roll .\n'), ((1580, (10, 16)), '*MOT:\txxx hungry .\n'), ((1583, (6, 9)), '*BRO:\tsee I bet you it do rock and roll .\n'), ((1583, (26, 30)), '*BRO:\tsee I bet you it do rock and roll .\n'), ((1583, (35, 39)), '*BRO:\tsee I bet you it do rock and roll .\n'), ((1590, (28, 32)), '*MOT:\thow do you know about rock and roll Mikey ?\n'), ((1590, (37, 41)), '*MOT:\thow do you know about rock and roll Mikey ?\n'), ((1596, (32, 36)), "*BRO:\tthat's how they got their hair .\n"), ((1600, (33, 40)), '*CHI:\tMommy (.) me wanted to buy clothes for me .\n'), ((1606, (-1, 4)), '*MOT:\twe will .\n'), ((1612, (-1, 4)), '*MOT:\twe <go(ing)> [>] .\n'), ((1612, (19, 22)), '*MOT:\twe <go(ing)> [>] .\n'), ((1615, (-1, 4)), '*CHI:\tbut [<] me want to go again with you .\n'), ((1620, (-1, 4)), "*MOT:\twe're going again don't worry .\n"), ((1620, (6, 11)), "*MOT:\twe're going again don't worry .\n"), ((1620, (30, 35)), "*MOT:\twe're going again don't worry .\n"), ((1628, (-1, 4)), '*MOT:\tMikey (.) .\n'), ((1631, (-1, 4)), '*MOT:\tMikey xxx .\n'), ((1634, (6, 11)), "*BRO:\tdon't we get xxx ?\n"), ((1637, (9, 14)), "*MOT:\tno we're talking about clothes .\n"), ((1637, (29, 36)), "*MOT:\tno we're talking about clothes .\n"), ((1645, (16, 22)), '*BRO:\txxx (.) a school bag ?\n'), ((1645, (23, 26)), '*BRO:\txxx (.) a school bag ?\n'), ((1651, (-1, 4)), "*MOT:\tyou don't need a school bag .\n"), ((1651, (23, 29)), "*MOT:\tyou don't need a school bag .\n"), ((1651, (30, 33)), "*MOT:\tyou don't need a school bag .\n"), ((1654, (-1, 4)), '*CHI:\tyou told me when we get back we get a school bag .\n'), ((1654, (44, 50)), '*CHI:\tyou told me when we get back we get a school bag .\n'), ((1654, (51, 54)), '*CHI:\tyou told me when we get back we get a school bag .\n'), ((1659, (-1, 4)), '*MOT:\tthat school bag is very big and very expensive .\n'), ((1659, (11, 17)), '*MOT:\tthat school bag is very big and very expensive .\n'), ((1659, (18, 21)), '*MOT:\tthat school bag is very big and very expensive .\n'), ((1664, (-1, 4)), '*MOT:\tand you got two school bags from Mikey .\n'), ((1664, (22, 28)), '*MOT:\tand you got two school bags from Mikey .\n'), ((1664, (29, 33)), '*MOT:\tand you got two school bags from Mikey .\n'), ((1669, (-1, 4)), "*MOT:\tbesides you don't need a school bag .\n"), ((1669, (31, 37)), "*MOT:\tbesides you don't need a school bag .\n"), ((1669, (38, 41)), "*MOT:\tbesides you don't need a school bag .\n"), ((1674, (34, 39)), '*MOT:\twhat do you have_to take in yours ?\n'), ((1678, (16, 19)), "*BRO:\t<I don't> [/] I don't like the red one .\n"), ((1678, (41, 44)), "*BRO:\t<I don't> [/] I don't like the red one .\n"), ((1681, (-1, 4)), "*BRO:\tI don't like red .\n"), ((1688, (31, 35)), '*MOT:\tG_I_Joe (.) the american hero .\n'), ((1692, (-1, 4)), '*BRO:\tI like <&g> [//] G_I_Joe .\n'), ((1695, (-1, 4)), '*BRO:\tI like the G_I_Joe .\n'), ((1698, (-1, 4)), '*BRO:\tmatches my [>] clothes .\n'), ((1698, (6, 13)), '*BRO:\tmatches my [>] clothes .\n'), ((1698, (21, 28)), '*BRO:\tmatches my [>] clothes .\n'), ((1701, (31, 36)), "*MOT:\t<Mikey> [<] (.) two more years Mikey when you go to first grade (.) I'm gonna get you a very nice school bag .\n"), ((1701, (78, 83)), "*MOT:\t<Mikey> [<] (.) two more years Mikey when you go to first grade (.) I'm gonna get you a very nice school bag .\n"), ((1701, (84, 87)), "*MOT:\t<Mikey> [<] (.) two more years Mikey when you go to first grade (.) I'm gonna get you a very nice school bag .\n"), ((1701, (104, 110)), "*MOT:\t<Mikey> [<] (.) two more years Mikey when you go to first grade (.) I'm gonna get you a very nice school bag .\n"), ((1701, (111, 114)), "*MOT:\t<Mikey> [<] (.) two more years Mikey when you go to first grade (.) I'm gonna get you a very nice school bag .\n"), ((1709, (-1, 4)), '*BRO:\tin the +...\n'), ((1712, (15, 20)), '*MOT:\ttwo more years .\n'), ((1715, (-1, 4)), "*MOT:\t<<you don't> [/] you don't xxx [/] > [>] .\n"), ((1722, (-1, 4)), "*CHI:\tMommy then let's go buy clothes !\n"), ((1722, (30, 37)), "*CHI:\tMommy then let's go buy clothes !\n"), ((1730, (12, 16)), "*CHI:\tlet's meet in the steps .\n"), ((1730, (24, 29)), "*CHI:\tlet's meet in the steps .\n"), ((1733, (-1, 4)), '*MOT:\twhen Mikey comes back from school we can go .\n'), ((1733, (33, 39)), '*MOT:\twhen Mikey comes back from school we can go .\n'), ((1739, (-1, 4)), '*CHI:\tare you finished the pocketbook (.) ?\n'), ((1739, (38, 41)), '*CHI:\tare you finished the pocketbook (.) ?\n'), ((1744, (-1, 4)), "*BRO:\tI'm going to school ?\n"), ((1744, (19, 25)), "*BRO:\tI'm going to school ?\n"), ((1747, (-1, 4)), '*MOT:\tnot yet .\n'), ((1750, (-1, 4)), '*CHI:\tare we going to go cruising [?] over now ?\n'), ((1756, (-1, 4)), '*MOT:\tnot yet .\n'), ((1759, (-1, 4)), '*BRO:\tI wan(t) (t)a go cruising [?] over .\n'), ((1759, (32, 35)), '*BRO:\tI wan(t) (t)a go cruising [?] over .\n'), ((1762, (14, 20)), '*MOT:\t<xxx to school Mikey xxx [/] > [>] .\n'), ((1765, (-1, 4)), '*CHI:\t<no me [!] me [!] are> [<] .\n'), ((1765, (29, 32)), '*CHI:\t<no me [!] me [!] are> [<] .\n'), ((1772, (-1, 4)), '*BRO:\txxx ?\n'), ((1772, (6, 9)), '*BRO:\txxx ?\n'), ((1773, (-1, 4)), '*CHI:\tmommy ?\n'), ((1773, (6, 11)), '*CHI:\tmommy ?\n'), ((1777, (6, 9)), '*MOT:\tyes ?\n'), ((1781, (10, 15)), "*CHI:\tI'm gonna <go [/] > [>] .\n"), ((1787, (6, 11)), "*CHI:\tmommy (.) I'm gonna go kindergarten ?\n"), ((1787, (20, 25)), "*CHI:\tmommy (.) I'm gonna go kindergarten ?\n"), ((1791, (6, 9)), '*MOT:\tyes you are .\n'), ((1797, (6, 12)), "*BRO:\tyou're gonna go with me .\n"), ((1797, (13, 18)), "*BRO:\tyou're gonna go with me .\n"), ((1803, (-1, 4)), '*CHI:\tthis [///] Mom mine kindergarten (.) is yellow .\n'), ((1803, (21, 25)), '*CHI:\tthis [///] Mom mine kindergarten (.) is yellow .\n'), ((1803, (46, 52)), '*CHI:\tthis [///] Mom mine kindergarten (.) is yellow .\n'), ((1806, (-1, 4)), '*CHI:\tnot black .\n'), ((1809, (6, 9)), '*MOT:\tzzz .\n'), ((1813, (-1, 4)), "*MOT:\t<who told> [/] who told you that Mikey's school is black hey Mariana ?\n"), ((1813, (17, 20)), "*MOT:\t<who told> [/] who told you that Mikey's school is black hey Mariana ?\n"), ((1813, (47, 53)), "*MOT:\t<who told> [/] who told you that Mikey's school is black hey Mariana ?\n"), ((1813, (57, 66)), "*MOT:\t<who told> [/] who told you that Mikey's school is black hey Mariana ?\n"), ((1820, (-1, 2)), '*CHI:\tno Mom !\n'), ((1823, (-1, 4)), '*CHI:\tin the kindergarten is black !\n'), ((1829, (13, 16)), '*CHI:\tnuhhuh [<] !\n'), ((1835, (12, 18)), "*MOT:\t<it's green> [<] .\n"), ((1835, (19, 22)), "*MOT:\t<it's green> [<] .\n"), ((1842, (-1, 4)), '*MOT:\tgreen .\n'), ((1842, (6, 11)), '*MOT:\tgreen .\n'), ((1845, (-1, 4)), '*CHI:\tgreen ?\n'), ((1845, (6, 11)), '*CHI:\tgreen ?\n'), ((1849, (6, 9)), '*MOT:\tyes .\n'), ((1852, (14, 19)), '*MOT:\txxx [>] green .\n'), ((1856, (-1, 4)), "*CHI:\tI didn't know .\n"), ((1860, (6, 9)), '*MOT:\tzzz now you know .\n'), ((1864, (20, 23)), "*BRO:\tmy [/] my [/] (.) my school's (.) red .\n"), ((1867, (-1, 4)), "*MOT:\tthat's right (.) .\n"), ((1867, (6, 12)), "*MOT:\tthat's right (.) .\n"), ((1870, (14, 20)), "*MOT:\tMikey's school is red .\n"), ((1873, (-1, 4)), '*CHI:\tand my kindergarten is yellow .\n'), ((1873, (29, 35)), '*CHI:\tand my kindergarten is yellow .\n'), ((1876, (27, 33)), "*MOT:\tnow you're making up things Mariana .\n"), ((1883, (34, 38)), '*MOT:\toh Mikey check and see what time it is ?\n'), ((1888, (-1, 4)), '*MOT:\twe have a lot of things to do .\n'), ((1888, (16, 19)), '*MOT:\twe have a lot of things to do .\n'), ((1888, (23, 29)), '*MOT:\twe have a lot of things to do .\n'), ((1892, (-1, 4)), '*MOT:\tI do .\n'), ((1895, (-1, 4)), '*BRO:\tI do too .\n'), ((1898, (10, 16)), '*MOT:\txxx school Mikey .\n'), ((1902, (6, 9)), '*BRO:\txxx I need to put our (.) clothes away .\n'), ((1902, (28, 31)), '*BRO:\txxx I need to put our (.) clothes away .\n'), ((1906, (-1, 4)), "*MOT:\tI'm going to school .\n"), ((1906, (19, 25)), "*MOT:\tI'm going to school .\n"), ((1909, (-1, 4)), '*BRO:\tbut I need to put my clothes away first .\n'), ((1909, (27, 34)), '*BRO:\tbut I need to put my clothes away first .\n'), ((1914, (16, 19)), '*MOT:\tokay good boy .\n'), ((1917, (-1, 4)), '*MOT:\txxx helping Mommy .\n'), ((1917, (6, 9)), '*MOT:\txxx helping Mommy .\n'), ((1921, (11, 16)), "*CHI:\t<I'm gonna put my clothes> [<] away .\n"), ((1921, (24, 32)), "*CHI:\t<I'm gonna put my clothes> [<] away .\n"), ((1926, (-1, 4)), '*CHI:\tMommy ?\n'), ((1930, (-1, 4)), '*CHI:\tcan I put my clothes <on by> [>] myself ?\n'), ((1930, (19, 26)), '*CHI:\tcan I put my clothes <on by> [>] myself ?\n'), ((1930, (35, 38)), '*CHI:\tcan I put my clothes <on by> [>] myself ?\n'), ((1936, (10, 13)), '*BRO:\txxx [<] ?\n'), ((1940, (-1, 4)), '*MOT:\t<there you go> [<] (.) .\n'), ((1940, (25, 28)), '*MOT:\t<there you go> [<] (.) .\n'), ((1943, (25, 32)), '*CHI:\tMommy can I put my clothes on by myself ?\n'), ((1949, (-1, 4)), '*MOT:\tyou sure can .\n'), ((1952, (6, 12)), '*CHI:\tthanks .\n'), ((1955, (-1, 4)), '*MOT:\tyou finish that first honey .\n'), ((1955, (28, 33)), '*MOT:\tyou finish that first honey .\n'), ((1958, (6, 10)), '*CHI:\tokay .\n'), ((1961, (-1, 4)), '*MOT:\tthen you can go anywhere .\n'), ((1964, (-1, 4)), '*CHI:\tanywhere ?\n'), ((1969, (10, 14)), '*BRO:\txxx coat .\n'), ((1972, (12, 17)), "*MOT:\toh no don't do that Mikey please .\n"), ((1972, (32, 38)), "*MOT:\toh no don't do that Mikey please .\n"), ((1979, (-1, 4)), "*MOT:\tdon't [/] .\n"), ((1979, (6, 11)), "*MOT:\tdon't [/] .\n"), ((1980, (-1, 4)), '*CHI:\there .\n'), ((1983, (21, 26)), '*CHI:\t<this one over here> [>] !\n'), ((1983, (27, 30)), '*CHI:\t<this one over here> [>] !\n'), ((1986, (-1, 4)), "*MOT:\t<that's not xxx> [<] .\n"), ((1986, (23, 26)), "*MOT:\t<that's not xxx> [<] .\n"), ((1995, (6, 9)), '*CHI:\txxx .\n'), ((1996, (-1, 4)), '*MOT:\tyou know better Mariana .\n'), ((1999, (-1, 4)), '*CHI:\t(be)cause I like that .\n'), ((2002, (6, 9)), '*CHI:\tzzz [>] .\n'), ((2002, (10, 13)), '*CHI:\tzzz [>] .\n'), ((2006, (16, 21)), "*MOT:\t<I'm> [<] gonna get the bills .\n"), ((2006, (30, 35)), "*MOT:\t<I'm> [<] gonna get the bills .\n"), ((2009, (6, 9)), '*MOT:\tbye [?] Mikey .\n'), ((2012, (-1, 4)), '*MOT:\tyou [>] like that ?\n'), ((2018, (-1, 4)), '*BRO:\tleave the paper off !\n'), ((2018, (16, 21)), '*BRO:\tleave the paper off !\n'), ((2021, (20, 24)), "*CHI:\txxx (be)cause it's gonna xxx .\n"), ((2021, (25, 30)), "*CHI:\txxx (be)cause it's gonna xxx .\n"), ((2024, (13, 16)), '*BRO:\tnuhhuh (.) !\n'), ((2027, (-1, 4)), '*BRO:\tif you leave the paper off (.) they will fill [?] .\n'), ((2027, (23, 28)), '*BRO:\tif you leave the paper off (.) they will fill [?] .\n'), ((2027, (33, 36)), '*BRO:\tif you leave the paper off (.) they will fill [?] .\n'), ((2035, (-1, 4)), '*BRO:\tmight fill [?] .\n'), ((2039, (6, 9)), '*BRO:\txxx .\n'), ((2040, (20, 24)), "*BRO:\tthat's Donald_Duck .\n"), ((2043, (20, 24)), "*BRO:\tthat's Donald_Duck <Mom> [>] .\n"), ((2046, (-1, 4)), '*MOT:\tyou [<] like it ?\n'), ((2052, (-1, 4)), '*CHI:\tit tastes good Mommy !\n'), ((2055, (6, 12)), '*CHI:\ttastes good Mama .\n'), ((2058, (6, 10)), '*CHI:\t&a:h .\n'), ((2059, (30, 36)), '*BRO:\t<can we change> [>] the places ?\n'), ((2062, (-1, 4)), '*MOT:\t<too sweet> [<] .\n'), ((2062, (18, 21)), '*MOT:\t<too sweet> [<] .\n'), ((2068, (-1, 4)), '*BRO:\tchange ?\n'), ((2068, (6, 12)), '*BRO:\tchange ?\n'), ((2071, (-1, 4)), '*MOT:\tswitch ?\n'), ((2071, (6, 12)), '*MOT:\tswitch ?\n'), ((2074, (6, 12)), '*MOT:\tswitch xxx [>] ?\n'), ((2074, (13, 16)), '*MOT:\tswitch xxx [>] ?\n'), ((2074, (17, 20)), '*MOT:\tswitch xxx [>] ?\n'), ((2077, (10, 13)), '*BRO:\tyes [<] .\n'), ((2080, (6, 10)), '*MOT:\tokay (.) .\n'), ((2080, (11, 14)), '*MOT:\tokay (.) .\n'), ((2083, (6, 9)), '*MOT:\txxx .\n'), ((2084, (6, 12)), "*BRO:\tyou're gonna beat my [//] me up .\n"), ((2084, (13, 18)), "*BRO:\tyou're gonna beat my [//] me up .\n"), ((2088, (10, 17)), "*MOT:\tI'm beating you up huh ?\n"), ((2088, (25, 28)), "*MOT:\tI'm beating you up huh ?\n"), ((2094, (15, 19)), '*BRO:\t<Mariana too> [<] whoa .\n'), ((2094, (24, 28)), '*BRO:\t<Mariana too> [<] whoa .\n'), ((2097, (6, 13)), "*BRO:\tthey're eating so fast .\n"), ((2100, (29, 34)), "*BRO:\tMommy's eating a whole bunch (.) .\n"), ((2103, (-1, 4)), "*BRO:\tthat's not too sweet ?\n"), ((2106, (6, 10)), "*MOT:\tit's fine .\n"), ((2106, (11, 15)), "*MOT:\tit's fine .\n"), ((2109, (16, 19)), '*BRO:\tnot sweet [>] ?\n'), ((2112, (11, 14)), '*MOT:\tfine [<] .\n'), ((2119, (-1, 4)), '*BRO:\tI wan(t) (t)a get one of these (.) .\n'), ((2119, (37, 40)), '*BRO:\tI wan(t) (t)a get one of these (.) .\n'), ((2122, (-1, 4)), '*BRO:\t<you like> [/] you like eating those ?\n'), ((2125, (6, 9)), '*MOT:\tyes I do .\n'), ((2131, (-1, 4)), '*BRO:\t<you like> [<] that all dark and goopy@o ?\n'), ((2131, (30, 34)), '*BRO:\t<you like> [<] that all dark and goopy@o ?\n'), ((2138, (6, 10)), '*MOT:\tyeah .\n'), ((2141, (-1, 4)), '*MOT:\twhich program is that Mikey ?\n'), ((2144, (-1, 4)), '*MOT:\tlove tales ?\n'), ((2144, (11, 16)), '*MOT:\tlove tales ?\n'), ((2150, (6, 10)), '*MOT:\tDuck_Tales .\n'), ((2153, (-1, 4)), '*BRO:\tthis xxx was the Duck_Tales .\n'), ((2153, (11, 14)), '*BRO:\tthis xxx was the Duck_Tales .\n'), ((2153, (23, 27)), '*BRO:\tthis xxx was the Duck_Tales .\n'), ((2162, (6, 12)), "*BRO:\tthat's Mickey_Mouse dog .\n"), ((2162, (26, 29)), "*BRO:\tthat's Mickey_Mouse dog .\n"), ((2168, (6, 10)), '*CHI:\tyeah .\n'), ((2171, (-1, 4)), '*CHI:\tand that Pluto is [//] was [//] that xxx was +...\n'), ((2171, (43, 46)), '*CHI:\tand that Pluto is [//] was [//] that xxx was +...\n'), ((2175, (-1, 4)), '*MOT:\tlike [?] the duck tales .\n'), ((2175, (19, 23)), '*MOT:\tlike [?] the duck tales .\n'), ((2175, (24, 29)), '*MOT:\tlike [?] the duck tales .\n'), ((2181, (-1, 4)), '*MOT:\tno ?\n'), ((2188, (10, 14)), "*BRO:\tthe duck tales don't got a dog .\n"), ((2188, (21, 26)), "*BRO:\tthe duck tales don't got a dog .\n"), ((2188, (33, 36)), "*BRO:\tthe duck tales don't got a dog .\n"), ((2196, (-1, 4)), '*MOT:\tit belongs to the song [?] .\n'), ((2196, (24, 28)), '*MOT:\tit belongs to the song [?] .\n'), ((2196, (29, 32)), '*MOT:\tit belongs to the song [?] .\n'), ((2203, (-1, 4)), '*MOT:\tthere was a +...\n'), ((2210, (8, 11)), '*BRO:\ta dog named Bingo was his name oh .\n'), ((2210, (12, 16)), '*BRO:\ta dog named Bingo was his name oh .\n'), ((2216, (-1, 4)), '*BRO:\t<there was xxx who had a dog and Bingo was his name oh> [>] .\n'), ((2216, (17, 20)), '*BRO:\t<there was xxx who had a dog and Bingo was his name oh> [>] .\n'), ((2216, (31, 34)), '*BRO:\t<there was xxx who had a dog and Bingo was his name oh> [>] .\n'), ((2216, (53, 57)), '*BRO:\t<there was xxx who had a dog and Bingo was his name oh> [>] .\n'), ((2223, (-1, 4)), '*MOT:\t<there was xxx who had a dog and Bingo was his name oh> [<] .\n'), ((2223, (17, 20)), '*MOT:\t<there was xxx who had a dog and Bingo was his name oh> [<] .\n'), ((2223, (31, 34)), '*MOT:\t<there was xxx who had a dog and Bingo was his name oh> [<] .\n'), ((2223, (53, 57)), '*MOT:\t<there was xxx who had a dog and Bingo was his name oh> [<] .\n'), ((2230, (7, 10)), '*BRO:\t<b@l i@l n@l g@l o@l b@l i@l n@l> [>] .\n'), ((2230, (11, 14)), '*BRO:\t<b@l i@l n@l g@l o@l b@l i@l n@l> [>] .\n'), ((2230, (15, 18)), '*BRO:\t<b@l i@l n@l g@l o@l b@l i@l n@l> [>] .\n'), ((2230, (19, 22)), '*BRO:\t<b@l i@l n@l g@l o@l b@l i@l n@l> [>] .\n'), ((2230, (23, 26)), '*BRO:\t<b@l i@l n@l g@l o@l b@l i@l n@l> [>] .\n'), ((2230, (40, 43)), '*BRO:\t<b@l i@l n@l g@l o@l b@l i@l n@l> [>] .\n'), ((2235, (7, 10)), '*MOT:\t<b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .\n'), ((2235, (11, 14)), '*MOT:\t<b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .\n'), ((2235, (15, 18)), '*MOT:\t<b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .\n'), ((2235, (19, 22)), '*MOT:\t<b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .\n'), ((2235, (23, 26)), '*MOT:\t<b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .\n'), ((2235, (44, 47)), '*MOT:\t<b@l i@l n@l g@l o@l (.) b@l i@l n@l> [<] .\n'), ((2240, (11, 15)), '*BRO:\t<g@l o@l> [>] .\n'), ((2240, (16, 19)), '*BRO:\t<g@l o@l> [>] .\n'), ((2245, (6, 10)), '*MOT:\tgo@k [<] bingo@k and Bingo was his name oh .\n'), ((2245, (41, 45)), '*MOT:\tgo@k [<] bingo@k and Bingo was his name oh .\n'), ((2251, (6, 11)), '*BRO:\tngo@k and Bingo was his name oh .\n'), ((2251, (30, 34)), '*BRO:\tngo@k and Bingo was his name oh .\n'), ((2260, (18, 21)), '*MOT:\twhy Mariana xxx .\n'), ((2263, (-1, 4)), '*BRO:\thurry up Mommy !\n'), ((2266, (6, 11)), "*MOT:\tshe's [?] xxx .\n"), ((2269, (-1, 4)), '*BRO:\thurry up .\n'), ((2269, (6, 11)), '*BRO:\thurry up .\n'), ((2272, (6, 10)), '*MOT:\tokay .\n'), ((2278, (-1, 4)), '*BRO:\thurry up <Mama> [>] .\n'), ((2278, (22, 25)), '*BRO:\thurry up <Mama> [>] .\n'), ((2285, (-1, 4)), '*BRO:\t&a:h he xxx .\n'), ((2285, (6, 10)), '*BRO:\t&a:h he xxx .\n'), ((2296, (-1, 4)), '*CHI:\tcold [?] zzz .\n'), ((2296, (15, 18)), '*CHI:\tcold [?] zzz .\n'), ((2300, (6, 9)), '*MOT:\txxx .\n'), ((2301, (6, 9)), '*MOT:\tzzz .\n'), ((2305, (28, 33)), '*MOT:\tnow you can wash your teeth xxx Mariana .\n'), ((2317, (10, 14)), "*CHI:\tI'm cold !\n"), ((2326, (-1, 4)), "*BRO:\tI'm the xxx .\n"), ((2329, (6, 9)), '*BRO:\txxx .\n'), ((2330, (-1, 4)), "*MOT:\tthat's right .\n"), ((2330, (6, 12)), "*MOT:\tthat's right .\n"), ((2330, (13, 18)), "*MOT:\tthat's right .\n"), ((2333, (-1, 4)), "*MOT:\tI'm the second winner .\n"), ((2333, (21, 27)), "*MOT:\tI'm the second winner .\n"), ((2340, (6, 10)), '*CHI:\tyeah .\n'), ((2343, (-1, 4)), '*CHI:\tstill eating !\n'), ((2346, (-1, 4)), "*MOT:\twhat's the matter honey [>] ?\n"), ((2346, (17, 23)), "*MOT:\twhat's the matter honey [>] ?\n"), ((2346, (24, 33)), "*MOT:\twhat's the matter honey [>] ?\n"), ((2350, (-1, 4)), "*CHI:\tthere's a stomach ache .\n"), ((2350, (16, 23)), "*CHI:\tthere's a stomach ache .\n"), ((2350, (24, 28)), "*CHI:\tthere's a stomach ache .\n"), ((2353, (6, 9)), '*MOT:\tzzz .\n'), ((2357, (6, 9)), '*CHI:\tzzz .\n'), ((2361, (-1, 4)), '*MOT:\tyou got a stomach ache ?\n'), ((2361, (16, 23)), '*MOT:\tyou got a stomach ache ?\n'), ((2361, (24, 28)), '*MOT:\tyou got a stomach ache ?\n'), ((2365, (6, 10)), '*CHI:\tyeah !\n'), ((2369, (6, 9)), '*CHI:\txxx .\n'), ((2371, (6, 9)), '*MOT:\txxx .\n'), ((2372, (-1, 4)), '*CHI:\twhy ?\n'), ((2376, (-1, 4)), '*MOT:\tbecause Mommy says so .\n'), ((2380, (6, 9)), '*MOT:\txxx .\n'), ((2381, (-1, 4)), '*BRO:\txxx says no .\n'), ((2384, (-1, 4)), '*BRO:\txxx that word xxx .\n'), ((2384, (6, 9)), '*BRO:\txxx that word xxx .\n'), ((2384, (15, 19)), '*BRO:\txxx that word xxx .\n'), ((2387, (6, 11)), '*CHI:\tmommy .\n'), ((2390, (-1, 4)), '*CHI:\tI got hiccups .\n'), ((2396, (15, 21)), "*MOT:\tnow that you're finished Mariana go and wash your hands and teeth and face .\n"), ((2396, (56, 61)), "*MOT:\tnow that you're finished Mariana go and wash your hands and teeth and face .\n"), ((2396, (66, 71)), "*MOT:\tnow that you're finished Mariana go and wash your hands and teeth and face .\n"), ((2396, (76, 80)), "*MOT:\tnow that you're finished Mariana go and wash your hands and teeth and face .\n"), ((2403, (-1, 4)), '*MOT:\tokay ?\n'), ((2403, (6, 10)), '*MOT:\tokay ?\n'), ((2407, (6, 9)), '*BRO:\txxx and you too .\n')]
calculating accuracy and recall
correct labels:
set(['cheese', 'popsicle', 'muffin', 'vitamin', 'popsicles', 'water', 'juice', 'strawberries', 'onions', 'milk'])
predicted labels:
set(['', 'summer', '(t)a', 'help', "don't", 'muffin', 'hands', '[!]', 'years', 'the>', 'paper', '<muffin', 'thanks', 'yes', 'better>', 'fine', 'milk', 'one>', 'bunch', 'grape', '<you', 'green>', "won't", 'b@l', 'clothes>', 'orange', 'lord', 'bye', '<name', 'plate', 'get', 'food', "who's", 'stop', 'gonna', 'dark', 'spoon', '[>]', "you've", 'mom', 'half', 'bit', 'one', 'lady', 'day', 'yellow one', 'melting', 'school', 'name', '&-um', 'die', 'hi@q', 'try', 'bag', '<not', 'steps', 'rock', '&-uh', 'bills', "food's", "isn't", 'clothes', 'duck', 'whole box', 'picnic', 'cheese look', 'dreaming', 'yeah', 'hair', 'see', 'today', 'got>', 'table', 'pain', 'ghosts', 'grape>', 'uhuh', 'cold', 'o@l>', 'look_it', 'ngo@k', 'n@l', '(.)', 'sun', 'tales', 'please', 'beating', 'cubby', 'eating', 'zzz', 'right', 'vitamin', 'water', '<and', 'boxes', 'meet', 'ache', 'cough', 'change', 'box', 'boy', 'xxx cheese', 'oh', 'dinner', 'cherry', 'ow', 'cheese', 'winner', 'hero', 'hm:', 'mommy', 'matter', 'want>', '[!] onions', 'honey [?]', 'want onions', 'too>', '<the', 'cups', 'belt', "you're", "it's", 'create', 'hey', 'bite>', "we're", 'lot', 'apple seed', 'store', 'stomach', "tummy's", 'xxx', 'huh', 'hurt', 'honey [>]', 'phone', 'box>', 'baby', 'hurry', 'eat', 'glad', 'here>', "they're", 'word', 'look', 'places', "wasn't", 'pretend', 'black hey', 'whoa', 'bit>', 'wan(t)', '&d', 'bet', 'sips', 'mine', 'hungry', 'honey', 'juice', 'tastes', '[?]', 'throat', 'onions', 'worry', 'go@k', 'pink', 'bags', '[/]', 'doctor', 'things', 'yellow', 'song', '<but', 'g@l', 'matches', 'hot', 'i@l', 'sick', 'says>', 'roll', 'play', 'finish', 'okay', 'my>', 'o@l', 'teeth', 'lord>', 'rain', 'letter', '[<]', 'ghost', '&a:h', 'calls', 'coat', 'dog', '<orange', 'strawberries>', 'face', 'switch', 'ones', 'green', 'time', "she's", 'dream', 'yours', "that's"])
file:HSLLD/HV1/MT//anamt1.cha
precision: 0.0339805825243
recall: 0.7
true positives:['cheese', 'juice', 'milk', 'muffin', 'onions', 'vitamin', 'water']
false positives: ['', '&-uh', '&-um', '&a:h', '&d', '(.)', '(t)a', '<and', '<but', '<muffin', '<name', '<not', '<orange', '<the', '<you', '[!]', '[!] onions', '[/]', '[<]', '[>]', '[?]', 'ache', 'apple seed', 'b@l', 'baby', 'bag', 'bags', 'beating', 'belt', 'bet', 'better>', 'bills', 'bit', 'bit>', 'bite>', 'black hey', 'box', 'box>', 'boxes', 'boy', 'bunch', 'bye', 'calls', 'change', 'cheese look', 'cherry', 'clothes', 'clothes>', 'coat', 'cold', 'cough', 'create', 'cubby', 'cups', 'dark', 'day', 'die', 'dinner', 'doctor', 'dog', "don't", 'dream', 'dreaming', 'duck', 'eat', 'eating', 'face', 'fine', 'finish', 'food', "food's", 'g@l', 'get', 'ghost', 'ghosts', 'glad', 'go@k', 'gonna', 'got>', 'grape', 'grape>', 'green', 'green>', 'hair', 'half', 'hands', 'help', 'here>', 'hero', 'hey', 'hi@q', 'hm:', 'honey', 'honey [>]', 'honey [?]', 'hot', 'huh', 'hungry', 'hurry', 'hurt', 'i@l', "isn't", "it's", 'lady', 'letter', 'look', 'look_it', 'lord', 'lord>', 'lot', 'matches', 'matter', 'meet', 'melting', 'mine', 'mom', 'mommy', 'my>', 'n@l', 'name', 'ngo@k', 'o@l', 'o@l>', 'oh', 'okay', 'one', 'one>', 'ones', 'orange', 'ow', 'pain', 'paper', 'phone', 'picnic', 'pink', 'places', 'plate', 'play', 'please', 'pretend', 'rain', 'right', 'rock', 'roll', 'says>', 'school', 'see', "she's", 'sick', 'sips', 'song', 'spoon', 'steps', 'stomach', 'stop', 'store', 'strawberries>', 'summer', 'sun', 'switch', 'table', 'tales', 'tastes', 'teeth', 'thanks', "that's", 'the>', "they're", 'things', 'throat', 'time', 'today', 'too>', 'try', "tummy's", 'uhuh', 'wan(t)', 'want onions', 'want>', "wasn't", "we're", "who's", 'whoa', 'whole box', 'winner', "won't", 'word', 'worry', 'xxx', 'xxx cheese', 'yeah', 'years', 'yellow', 'yellow one', 'yes', "you're", "you've", 'yours', 'zzz']
false negatives: ['popsicle', 'popsicles', 'strawberries']
# true pos: 7
# false pos: 199
# false neg: 3
HSLLD/HV1/MT//conmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*JAK: hot (12.) .', '*MOT: what do you want to drink ?', '*CHI: milk [!] .', '*JAK: <&m> [//] juice .', '*MOT: okay .', '*FAT: milk .', '*MOT: milk juice milk .', '*CHI: milk juice milk zzz .', '*FAT: milk juice milk .', '*JAK: milk (.) juice (.) milk juice milk juice milk juice milk juice milk .', '*MOT: oops .', '*MOT: xxx Jake wants xxx <xxx supper> [>] .', '*JAK: <no juice> [<] .', "*MOT: I shouldn't have asked you .", "*MOT: I shouldn't have offered .", '*JAK: all done .', '*MOT: oh_my_goodness !', '*MOT: well you eat some supper now before I give you more okay (11.) ?', "*JAK: Mama I can't see the T_V .", '*MOT: oh God xxx terrible huh ?', "*JAK: Conner's by the T_V that's not fair .", '*MOT: I know [?] .', "*MOT: I'll go turn it off because Jake's missing it anyway .", '*CHI: no .', "*FAT: we'll watch it after <you eat> [>] .", "*MOT: <you won't miss it> [<] !", '*FAT: and then you can turn it right back on .', "*FAT: it doesn't go over it's a tape .", '*CHI: we gonna miss it on xxx or it stay on all day .', "*FAT: no you'll see it right where she shut it off it'll go right <back on> [>] .", "*MOT: <that's the> [<] good thing about [!] it .", "*JAK: yeah (.) Conner because <Mama's> [>] [/] .", "*MOT: <you don't> [<] miss any .", '*MOT: if you have_to go out you just turn it off and when you come back you pick up from where it was on before .', '*JAK: yeah .', "*FAT: I'll tell you this xxx .", '*MOT: xxx alright (.) .', "*MOT: I don't believe May's not home .", '*FAT: <&w> [/] &w [/] .', '*MOT: should go chasing after her .', '*JAK: I put the medicine there because I have_to xxx .', '*FAT: is Jessie coming back <there with her> [>] ?', '*MOT: <xxx> [<] .', "*MOT: well Jessie's mother was gonna either pick her up here or at the park .", '*MOT: and &-uh she was gonna pick her up at five thirty .', "*MOT: so I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .", '*MOT: xxx have_to have a talk with her about not coming home .', "*MOT: she doesn't have a watch on but still an hour's a big difference from a half an hour .", '*FAT: what ?', '*MOT: I told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .', "*FAT: yeah well she don't know a half hour .", '*FAT: she ought_to carry a watch around with her .', '*MOT: she has a watch .', '*MOT: Conner !', '*MOT: you like it (.) ?', '*MOT: is it your favorite ?', '*MOT: huh ?', '*CHI: more milk (.) .', '*MOT: hm: .', '*MOT: say can I have more milk please .', '*CHI: can I have more milk please .', '*MOT: xxx .', '*CHI: whoop .', '*CHI: xxx .', '*MOT: boy I think I gave you guys too much .', '*MOT: I hope you can eat that all .', "*MOT: that's good for you you know .", '*MOT: you gonna try to eat it all up ?', '*CHI: zzz .', '*JAK: yeah .', "*CHI: I don't like the xxx ones .", '*CHI: the xxx .', '*MOT: the what ?', '*MOT: the <shells [!]> [>] .', '*CHI: <xxx> [<] <&th> [/] these ones right here .', '*JAK: <just like the shells> [>] .', '*MOT: <xxx> [<] .', "*SIS: xxx just a quick glass of water and we're gonna go back .", '*SIS: xxx .', "*MOT: yeah &-um <what> [//] what's this business of an hour ?", '*MOT: I said an half an hour .', '*SIS: <well we> [//] <I had to> [//] <we> [//] <ready to> [/] ready to pick her up and what the heck is xxx stuff .', "*MOT: that's that coffee I made by mistake .", '*SIS: shoot !', '*SIS: this dumb [?] coffee mix .', '*SIS: hold on .', "*MOT: there's &-um fruit punch in the yellow jug (10.) .", '*CHI: little milk ?', '*CHI: milk Mama ?', "*MOT: May <go> [/] go wash up and I'll get your plate ready .", '*SIS: okay let me drink this .', '*MOT: here (.) .', '*CHI: Jake not eating .', '*JES: bye !', '*JAK: <bye> [>] !', '*MOT: <bye Jessie> [<] .', '*MOT: you want <that> [>] ?', "*MOT: I'll get it for you .", "*FAT: <what's that> [<] ?", "*FAT: what's that ?", '*MOT: spaghetti on his shirt .', '*JAK: zzz .', '*JAK: try to eat my belly button .', '*JAK: zzz .', "*MOT: come on you guys don't fool at the table !", '*CHI: zzz .', '*FAT: hey !', '*CHI: zzz .', '*FAT: stop it !', '*FAT: zzz .', "*SIS: you didn't buy xxx diet soda ?", '*MOT: yes I did !', '*MOT: behind the peaches .', '*JAK: look at Conner I did on your arm .', '*JAK: right there .', '*CHI: Mama !', '*CHI: &-uh my belly hurts .', '*MOT: well then go slower .', "*CHI: no I don't wan(t) (t)a .", '*MOT: well take a little rest (.) and then eat more .', "*CHI: I don't want it !", '*JAK: <xxx> [>] .', "*MOT: <xxx> [<] because you drank all of that milk so fast that's probably why .", '*JAK: you drank all that <milk> [>] up .', '*CHI: <no> [<] .', '*SIS: thank you .', "*MOT: you're welcome .", '*CHI: zzz .', '*MOT: is it hot ?', '*MOT: is it good ?', '*SIS: mhm .', "*MOT: that's on May's diet .", '*JAK: yep .', "*SIS: I'm being good .", '*SIS: xxx favorite thing was shells [!] (9.) .', '*CHI: whoa !', '*JAK: those shells are [/] .', '*MOT: here have a tomato Jake .', '*JAK: <Mama> [>] !', '*MOT: <no no no> [<] no no .', '*CHI: <&wh> [/] where you found these ?', '*MOT: at the grocery store .', '*MOT: zzz .', '*CHI: no what .', '*MOT: they fit on your thumb huh ?', '*JAK: yeah .', '*CHI: like on me too but +...', '*MOT: fit on your tongue .', "*MOT: oh good well it's a good thing they fit on your tongue .", '*CHI: zzz .', '*JAK: look I want xxx .', '*MOT: you what ?', '*JAK: I want a bowl .', '*MOT: oh .', "*MOT: don't talk with food in your mouth .", '*JAK: zzz .', '*CHI: give me some xxx .', '*MOT: you want more right ?', '*MOT: another tomato ?', '*MOT: cucumber ?', '*CHI: no .', '*CHI: more cucum(ber) .', '*MOT: some lettuce .', '*MOT: lettuce ?', '*JAK: I like lettuce !', '*MOT: alright hold on .', '*CHI: <the doctor come [?]> [>] .', "*SIS: <there's a whole bowl> [<] with two tomatoes and a piece of lettuce .", '*JAK: ah yum yum .', "*MOT: don't use your hands .", '*MOT: you gonna &-um +...', '*MOT: hold on .', '*MOT: Conner do you want lettuce ?', '*JAK: I [!] do it .', '*MOT: and do you want tomatoes too ?', '*CHI: no just lettuce .', '*CHI: no (to)matoes !', '*MOT: alright !', "*CHI: that's all .", "*CHI: that's all that's all that all .", "*CHI: that's all (.) .", '*CHI: I love you .', "*MOT: I don't have any diet dressing for you May .", '*JAK: why ?', '*MOT: what is that ?', "*MOT: oh you can't have dressing <on your> [>] salad ?", '*SIS: <uhuh> [<] .', '*SIS: put your finger [?] dressing .', '*MOT: yeah but it defeats the purpose to +...', '*SIS: there was one page in here .', '*MOT: huh ?', '*SIS: there was one piece of paper in here with the diet .', "*MOT: it's right there .", '*SIS: there .', '*JAK: zzz .', '*CHI: like that .', "*JAK: I don't like that one Mom .", "*CHI: you didn't you put <&th> [/] &th xxx .", "*JAK: I don't want it .", "*MOT: oh you didn't want the dressing ?", "*CHI: no I didn't <wanted it> [>] .", '*MOT: <you just> [<] want the lettuce ?', '*CHI: yeah .', '*JAK: <&w> [/] <&w> [/] <with salad> [>] .', '*MOT: <oh come on> [<] !', '*JAK: with salad .', '*MOT: sit !', '*JAK: with salad with some more (to)matoes .', '*MOT: <okay> [>] !', '*CHI: <no> [<] !', '*CHI: no no no no .', '*JAK: no !', '*JAK: one more .', '*JAK: two mores@c .', '*JAK: xxx .', '*CHI: xxx lettuce lettuce .', '*MOT: you hurt me .', "*CHI: I'm sorry .", '*JAK: I want two more the lettuce .', '*MOT: okay Jake ?', '*MOT: okay Conner ?', '*MOT: you like the lettuce ?', '*MOT: you like a little bunny rabbit ?', '*JAK: no zzz .', '*MOT: you have plenty of dressing there Jake .', '*JAK: I know that but I want more (.) .', "*JAK: <I>[/] <I> [/] I don't like that on +...", '*MOT: oh you got it all over you (.) !', "*CHI: I'm a fat cow !", "*MOT: that's sweet and spicy .", '*JAK: and spicy yes .', '*JAK: spicy for your tongue ?', '*MOT: little bit .', '*JAK: and this is spicy .', '*SIS: do you know where the other part of the &-um paper of my diet is ?', '*MOT: xxx .', '*SIS: xxx .', '*MOT: xxx full ?', '*SIS: yeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .', '*MOT: your stomach is shrinking .', '*SIS: I know .', "*MOT: shrinking on the inside and then after it shrinks on the inside it'll shrink on the outside .", '*SIS: good !', "*JAK: I'm all done !", "*CHI: I don't want this .", "*JAK: I don't want this .", '*MOT: yes you can eat some more .', '*CHI: hm: .', "*JAK: I don't wan(t) (t)a .", "*MOT: you did alright but couldn't you eat a little more ?", '*JAK: no .', '*MOT: a couple more bites (.) ?', "*CHI: I don't want more .", '*CHI: could I <have a> [>] [/] .', '*MOT: <alright> [<] Conner go wash up then .', "*JAK: I don't want mine Ma I don't want it .", "*CHI: Jake you <didn't eat salad> [>] .", '*MOT: <this is a big tomato> [<] .', '*JAK: I did a <I eat the> [/] <I eat the> [//] I eat that right here .', '*JAK: xxx .', '*JAK: <I eat that right there> [>] .', '*MOT: <xxx you have_to eat some more> [<] .', '*JAK: xxx no !', '*CHI: <yeah> [>] !', '*JAK: <no but I have> [<] a belly ache !', "*MOT: why don't you go blow your nose .", "*JAK: I'm all done !", "*CHI: no you're not .", '*JAK: yes am !', '*MOT: Conner you stay out of this .', "*MOT: Jake go blow your nose and we'll see maybe your belly will have more room after that .", '*JAK: no !', '*JAK: no !', "*SIS: you haven't eat anything .", '*MOT: did you wash your face <Conner> [>] ?', '*JAK: <yeah I did [!]> [<] I eat one right here and one right there and <one right here> [>] .', '*SIS: <xxx> [<] I got xxx eat on your face Jake .', '*SIS: one right here one right here and one right here .', '*JAK: no .', '*JAK: one right here and one right here and one right here !', '*MOT: how many does that make ?', '*JAK: three .', "*JAK: that's <all> [>] .", '*MOT: <how about> [<] three more then ?', "*JAK: don't wan(t) (t)a !", '*JAK: one more !', '*JAK: one more !', '*MOT: <three more> [>] .', '*JAK: <one more> [<] !', '*MOT: one more then go blow your nose and come back and have three more .', '*JAK: no .', '*JAK: zzz .', '*JAK: pretend crying .', '*MOT: Jake !', '*MOT: alright eat one more and go blow your nose .', "*JAK: xxx I don't want to eat no more .", "*MOT: well then I'm gonna save it for lunch tomorrow .", '*JAK: okay .', '*MOT: wash your hands and face too .']
loading solution set
LINE NO ->  17
LINE NO ->  20
LINE NO ->  25
milk
milk milk 46
[('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  29
juice
juice juice 52
[('m', 'NN'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  32
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  35
milk
milk milk 46
[('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  38
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['milk']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  43
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('zzz', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('zzz', 'NN')]
['milk']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  47
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['milk']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  50
juice
juice juice 52
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
milk
milk milk 46
[('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN'), ('juice', 'NN'), ('milk', 'NN')]
['milk']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0})
LINE NO ->  55
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  61
juice
juice juice 52
[('no', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  65
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  68
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  71
LINE NO ->  76
LINE NO ->  79
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  84
LINE NO ->  88
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  92
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  97
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  105
LINE NO ->  108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  112
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  115
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  120
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  125
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  130
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 1, 73: 1, 74: 1, 75: 0, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0})
LINE NO ->  137
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  141
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  147
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, -1: 1})
LINE NO ->  156
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  164
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  168
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  174
LINE NO ->  175
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  179
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  184
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  189
LINE NO ->  190
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0})
LINE NO ->  197
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  202
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 1, 138: 1, 139: 1, 140: 0, 141: 0, 142: 0, -1: 1})
LINE NO ->  213
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  220
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, -1: 1})
LINE NO ->  229
LINE NO ->  233
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 1, 96: 1, 97: 1, 98: 1, 99: 0, 100: 0, 101: 0, 102: 0, 103: 1, 104: 1, 105: 1, 106: 1, 107: 0, 108: 0, 109: 0, -1: 1})
LINE NO ->  244
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  251
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  257
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  261
LINE NO ->  265
LINE NO ->  270
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  275
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  280
milk
milk milk 46
[('more', 'RBR'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  287
milk
milk milk 46
[('say', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('milk', 'NN'), ('please', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  290
milk
milk milk 46
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('milk', 'NN'), ('please', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  294
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  297
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  303
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  306
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  310
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  320
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  324
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  330
LINE NO ->  334
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  337
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  340
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  343
LINE NO ->  345
water
water water 18
[('xxx', 'NN'), ('just', 'RB'), ('a', 'DT'), ('quick', 'JJ'), ('glass', 'NN'), ('of', 'IN'), ('water', 'NN'), ('and', 'CC'), ('we', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('na', 'TO'), ('go', 'VB'), ('back', 'RB')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0})
LINE NO ->  350
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  352
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0})
LINE NO ->  357
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  361
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 1, 97: 1, 98: 1, 99: 1, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 113: 0, 114: 0, 115: 0, -1: 1})
LINE NO ->  367
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  373
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  376
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  379
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  383
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471607a0>)
[('there', 'RB'), ('s', 'JJ'), ('um', 'JJ'), ('fruit', 'NN'), ('punch', 'NN'), ('in', 'IN'), ('the', 'DT'), ('yellow', 'JJ'), ('jug', 'NN'), ('10', 'CD')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  389
milk
milk milk 46
[('little', 'JJ'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  393
milk
milk milk 46
[('milk', 'NN'), ('mama', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  398
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  407
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  411
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  415
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  419
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  423
LINE NO ->  427
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  431
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  434
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  440
spaghetti
spaghetti spaghetti 100
[('spaghetti', 'NNS'), ('on', 'IN'), ('his', 'PRP$'), ('shirt', 'NN')]
['spaghetti']
('food -> ', [['spaghetti', 'Meals, Entrees, and Side Dishes']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  443
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  447
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  450
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  454
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947160dd0>)
[('come', 'VB'), ('on', 'IN'), ('you', 'PRP'), ('guys', 'VBP'), ('don', 'JJ'), ('t', 'JJ'), ('fool', 'NN'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  459
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  463
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  467
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  471
LINE NO ->  474
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  478
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  482
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  485
peaches
peaches peaches 72
[('behind', 'IN'), ('the', 'DT'), ('peaches', 'NNS')]
['peaches']
('food -> ', [['peaches', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  489
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  494
LINE NO ->  498
LINE NO ->  501
LINE NO ->  505
LINE NO ->  508
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  511
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  516
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  519
LINE NO ->  520
milk
milk milk 46
[('xxx', 'NN'), ('because', 'IN'), ('you', 'PRP'), ('drank', 'VBP'), ('all', 'DT'), ('of', 'IN'), ('that', 'DT'), ('milk', 'NN'), ('so', 'RB'), ('fast', 'RB'), ('that', 'IN'), ('s', 'NN'), ('probably', 'RB'), ('why', 'WRB')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0})
LINE NO ->  526
milk
milk milk 46
[('you', 'PRP'), ('drank', 'VBP'), ('all', 'PDT'), ('that', 'DT'), ('milk', 'NN'), ('up', 'RP')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  529
LINE NO ->  533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  537
LINE NO ->  541
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  545
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  549
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  557
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  561
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  564
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  567
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  571
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  574
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  577
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  580
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  583
LINE NO ->  586
LINE NO ->  591
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  598
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  601
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  605
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  608
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  611
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  614
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  619
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  623
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  626
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  630
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  633
LINE NO ->  636
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  641
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  645
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  649
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  653
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  657
cucumber
cucumber cucumber 12
[('cucumber', 'NN')]
['cucumber']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  661
LINE NO ->  664
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  667
lettuce
lettuce lettuce 16
[('some', 'DT'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  670
lettuce
lettuce lettuce 16
[('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  674
lettuce
lettuce lettuce 16
[('i', 'NNS'), ('like', 'VBP'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  679
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  682
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  685
lettuce
lettuce lettuce 16
[('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('whole', 'JJ'), ('bowl', 'NN'), ('with', 'IN'), ('two', 'CD'), ('tomatoes', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
tomatoes
tomatoes tomatoes 213
[('there', 'RB'), ('s', 'VBZ'), ('a', 'DT'), ('whole', 'JJ'), ('bowl', 'NN'), ('with', 'IN'), ('two', 'CD'), ('tomatoes', 'NNS'), ('and', 'CC'), ('a', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('lettuce', 'NN')]
['tomatoes']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products'], ['tomatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  692
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  696
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  700
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  707
lettuce
lettuce lettuce 16
[('conner', 'NN'), ('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  711
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  714
tomatoes
tomatoes tomatoes 213
[('and', 'CC'), ('do', 'VB'), ('you', 'PRP'), ('want', 'VB'), ('tomatoes', 'NNS'), ('too', 'RB')]
['tomatoes']
('food -> ', [['tomatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  718
lettuce
lettuce lettuce 16
[('no', 'DT'), ('just', 'RB'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  721
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  725
LINE NO ->  728
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  731
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  736
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  740
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  744
dressing
dressing dressing 169
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('any', 'DT'), ('diet', 'JJ'), ('dressing', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('may', 'MD')]
['dressing']
('food -> ', [['dressing', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  750
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  755
LINE NO ->  759
dressing
dressing dressing 169
[('oh', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('t', 'VB'), ('have', 'VB'), ('dressing', 'VBG'), ('on', 'IN'), ('your', 'PRP$'), ('salad', 'NN')]
['dressing']
('food -> ', [['dressing', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  765
LINE NO ->  768
dressing
dressing dressing 169
[('put', 'VB'), ('your', 'PRP$'), ('finger', 'NN'), ('dressing', 'VBG')]
['dressing']
('food -> ', [['dressing', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  772
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  776
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  781
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  785
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  791
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  795
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  798
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  802
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  806
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  811
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  814
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  818
dressing
dressing dressing 169
[('oh', 'IN'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('the', 'DT'), ('dressing', 'NN')]
['dressing']
('food -> ', [['dressing', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  824
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  827
lettuce
lettuce lettuce 16
[('you', 'PRP'), ('just', 'RB'), ('want', 'VBP'), ('the', 'DT'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  831
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  834
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  837
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  840
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  843
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  846
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  849
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  852
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  855
LINE NO ->  858
LINE NO ->  861
LINE NO ->  864
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  867
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  868
lettuce
lettuce lettuce 16
[('xxx', 'NN'), ('lettuce', 'NN'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  871
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  874
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  877
lettuce
lettuce lettuce 16
[('i', 'NN'), ('want', 'VBP'), ('two', 'CD'), ('more', 'JJR'), ('the', 'DT'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  880
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  884
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  888
lettuce
lettuce lettuce 16
[('you', 'PRP'), ('like', 'IN'), ('the', 'DT'), ('lettuce', 'NN')]
['lettuce']
('food -> ', [['lettuce', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  892
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947160320>)
[('you', 'PRP'), ('like', 'VBP'), ('a', 'DT'), ('little', 'JJ'), ('bunny', 'JJ'), ('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  896
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  900
dressing
dressing dressing 169
[('you', 'PRP'), ('have', 'VBP'), ('plenty', 'NN'), ('of', 'IN'), ('dressing', 'VBG'), ('there', 'EX'), ('jake', 'NN')]
['dressing']
('food -> ', [['dressing', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  904
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  907
LINE NO ->  910
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  914
fat
fat fat 900
[('i', 'NN'), ('m', 'VBP'), ('a', 'DT'), ('fat', 'JJ'), ('cow', 'NN')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  917
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  920
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  923
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  927
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  930
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  933
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, -1: 1})
LINE NO ->  940
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  941
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  942
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  945
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 1, 98: 1, 99: 1, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0})
LINE NO ->  955
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  958
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  961
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0})
LINE NO ->  969
LINE NO ->  973
LINE NO ->  977
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  981
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  984
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  987
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  990
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  993
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  999
LINE NO ->  1002
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  1006
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1009
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1013
LINE NO ->  1016
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1022
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1027
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1030
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  1035
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1036
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1040
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1043
LINE NO ->  1047
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1051
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  1055
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1060
LINE NO ->  1064
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1068
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0})
LINE NO ->  1073
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1077
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, -1: 1})
LINE NO ->  1085
LINE NO ->  1089
LINE NO ->  1093
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1097
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1101
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0})
LINE NO ->  1109
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  1113
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1119
LINE NO ->  1122
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  1128
LINE NO ->  1133
LINE NO ->  1136
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1140
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1147
LINE NO ->  1151
LINE NO ->  1154
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1157
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  1165
LINE NO ->  1170
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1173
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1176
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1179
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  1184
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1188
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  1193
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1196
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
loading solution set
calculating
set([(51, (63, 68)), (889, (19, 26)), (819, (29, 37)), (48, (6, 16)), (722, (9, 19)), (686, (66, 73)), (51, (47, 51)), (686, (42, 50)), (44, (6, 16)), (390, (13, 17)), (51, (69, 73)), (51, (6, 10)), (36, (6, 10)), (48, (17, 21)), (719, (14, 21)), (39, (6, 16)), (394, (6, 10)), (51, (58, 62)), (578, (18, 24)), (368, (18, 24)), (654, (14, 20)), (51, (52, 57)), (291, (22, 26)), (769, (26, 34)), (80, (24, 30)), (441, (6, 15)), (51, (36, 40)), (658, (6, 14)), (44, (17, 21)), (828, (30, 37)), (901, (25, 33)), (51, (30, 35)), (51, (15, 20)), (486, (17, 24)), (869, (18, 25)), (30, (16, 21)), (288, (26, 30)), (671, (6, 13)), (760, (47, 52)), (479, (25, 34)), (527, (26, 30)), (51, (25, 29)), (675, (13, 20)), (665, (11, 21)), (745, (23, 36)), (346, (32, 37)), (869, (10, 17)), (760, (24, 32)), (847, (32, 42)), (51, (41, 46)), (281, (11, 15)), (878, (26, 33)), (521, (46, 50)), (26, (6, 10)), (62, (10, 15)), (715, (22, 30)), (39, (17, 21)), (668, (11, 18)), (708, (25, 32))])
[((26, (6, 10)), '*CHI:\tmilk [!] .\n'), ((30, (16, 21)), '*JAK:\t<&m> [//] juice .\n'), ((36, (6, 10)), '*FAT:\tmilk .\n'), ((39, (6, 16)), '*MOT:\tmilk juice milk .\n'), ((39, (17, 21)), '*MOT:\tmilk juice milk .\n'), ((44, (6, 16)), '*CHI:\tmilk juice milk zzz .\n'), ((44, (17, 21)), '*CHI:\tmilk juice milk zzz .\n'), ((48, (6, 16)), '*FAT:\tmilk juice milk .\n'), ((48, (17, 21)), '*FAT:\tmilk juice milk .\n'), ((51, (6, 10)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (15, 20)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (25, 29)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (30, 35)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (36, 40)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (41, 46)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (47, 51)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (52, 57)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (58, 62)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (63, 68)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (69, 73)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((62, (10, 15)), '*JAK:\t<no juice> [<] .\n'), ((80, (24, 30)), '*MOT:\twell you eat some supper now before I give you more okay (11.) ?\n'), ((281, (11, 15)), '*CHI:\tmore milk (.) .\n'), ((288, (26, 30)), '*MOT:\tsay can I have more milk please .\n'), ((291, (22, 26)), '*CHI:\tcan I have more milk please .\n'), ((346, (32, 37)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((368, (18, 24)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((390, (13, 17)), '*CHI:\tlittle milk ?\n'), ((394, (6, 10)), '*CHI:\tmilk Mama ?\n'), ((441, (6, 15)), '*MOT:\tspaghetti on his shirt .\n'), ((479, (25, 34)), "*SIS:\tyou didn't buy xxx diet soda ?\n"), ((486, (17, 24)), '*MOT:\tbehind the peaches .\n'), ((521, (46, 50)), "*MOT:\t<xxx> [<] because you drank all of that milk so fast that's probably why .\n"), ((527, (26, 30)), '*JAK:\tyou drank all that <milk> [>] up .\n'), ((578, (18, 24)), '*MOT:\there have a tomato Jake .\n'), ((654, (14, 20)), '*MOT:\tanother tomato ?\n'), ((658, (6, 14)), '*MOT:\tcucumber ?\n'), ((665, (11, 21)), '*CHI:\tmore cucum(ber) .\n'), ((668, (11, 18)), '*MOT:\tsome lettuce .\n'), ((671, (6, 13)), '*MOT:\tlettuce ?\n'), ((675, (13, 20)), '*JAK:\tI like lettuce !\n'), ((686, (42, 50)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (66, 73)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((708, (25, 32)), '*MOT:\tConner do you want lettuce ?\n'), ((715, (22, 30)), '*MOT:\tand do you want tomatoes too ?\n'), ((719, (14, 21)), '*CHI:\tno just lettuce .\n'), ((722, (9, 19)), '*CHI:\tno (to)matoes !\n'), ((745, (23, 36)), "*MOT:\tI don't have any diet dressing for you May .\n"), ((760, (24, 32)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (47, 52)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((769, (26, 34)), '*SIS:\tput your finger [?] dressing .\n'), ((819, (29, 37)), "*MOT:\toh you didn't want the dressing ?\n"), ((828, (30, 37)), '*MOT:\t<you just> [<] want the lettuce ?\n'), ((847, (32, 42)), '*JAK:\twith salad with some more (to)matoes .\n'), ((869, (10, 17)), '*CHI:\txxx lettuce lettuce .\n'), ((869, (18, 25)), '*CHI:\txxx lettuce lettuce .\n'), ((878, (26, 33)), '*JAK:\tI want two more the lettuce .\n'), ((889, (19, 26)), '*MOT:\tyou like the lettuce ?\n'), ((901, (25, 33)), '*MOT:\tyou have plenty of dressing there Jake .\n')]
set([(697, (21, 26)), (946, (97, 100)), (722, (9, 19)), (686, (66, 73)), (602, (23, 28)), (1094, (-1, 4)), (245, (6, 10)), (126, (-1, 4)), (769, (26, 34)), (1158, (17, 20)), (131, (66, 71)), (291, (22, 26)), (550, (-1, 4)), (109, (6, 11)), (642, (6, 9)), (985, (6, 9)), (1145, (6, 11)), (490, (35, 38)), (889, (19, 26)), (1028, (21, 28)), (1197, (26, 30)), (185, (-1, 4)), (934, (34, 38)), (832, (6, 10)), (346, (42, 47)), (1069, (6, 9)), (562, (6, 9)), (686, (-1, 4)), (847, (11, 16)), (865, (10, 17)), (934, (-1, 4)), (946, (108, 113)), (89, (26, 29)), (675, (-1, 4)), (751, (-1, 4)), (1177, (-1, 4)), (51, (47, 51)), (782, (6, 9)), (683, (11, 17)), (819, (-1, 4)), (341, (21, 28)), (145, (-1, 4)), (221, (-1, 4)), (872, (-1, 4)), (737, (6, 12)), (869, (18, 25)), (258, (16, 21)), (444, (6, 9)), (527, (26, 30)), (33, (6, 10)), (934, (51, 56)), (841, (11, 16)), (941, (6, 9)), (291, (27, 33)), (380, (6, 10)), (911, (-1, 4)), (276, (6, 9)), (307, (13, 17)), (358, (-1, 4)), (176, (16, 23)), (697, (6, 11)), (451, (6, 9)), (782, (-1, 4)), (850, (13, 16)), (606, (6, 10)), (1078, (24, 28)), (1161, (33, 37)), (1114, (10, 15)), (44, (6, 16)), (203, (-1, 4)), (554, (6, 9)), (847, (-1, 4)), (368, (18, 24)), (80, (24, 30)), (198, (49, 55)), (1041, (-1, 4)), (98, (-1, 4)), (1031, (17, 20)), (384, (38, 44)), (959, (-1, 4)), (705, (6, 10)), (609, (-1, 4)), (51, (25, 35)), (234, (-1, 4)), (934, (63, 67)), (307, (6, 12)), (760, (43, 46)), (946, (29, 34)), (991, (21, 25)), (338, (32, 36)), (1185, (6, 9)), (962, (23, 29)), (786, (52, 56)), (521, (46, 50)), (258, (-1, 4)), (675, (13, 20)), (924, (-1, 4)), (786, (29, 34)), (341, (29, 32)), (1028, (6, 11)), (51, (52, 57)), (1028, (-1, 4)), (321, (6, 10)), (924, (21, 27)), (180, (-1, 4)), (946, (42, 47)), (203, (46, 50)), (245, (-1, 4)), (847, (32, 42)), (1028, (29, 32)), (1141, (11, 17)), (101, (-1, 4)), (317, (6, 9)), (905, (-1, 4)), (982, (-1, 4)), (291, (-1, 4)), (705, (-1, 4)), (234, (103, 107)), (441, (23, 28)), (441, (6, 15)), (512, (25, 29)), (93, (26, 32)), (157, (6, 10)), (627, (-1, 4)), (686, (29, 32)), (825, (30, 33)), (841, (-1, 4)), (48, (-1, 9)), (708, (25, 32)), (697, (-1, 4)), (835, (37, 40)), (924, (6, 11)), (1171, (6, 9)), (245, (38, 42)), (512, (30, 33)), (126, (48, 51)), (203, (137, 140)), (760, (24, 32)), (568, (-1, 4)), (915, (-1, 4)), (131, (9, 15)), (812, (-1, 4)), (581, (13, 16)), (384, (25, 30)), (51, (6, 10)), (138, (14, 18)), (881, (6, 10)), (1023, (34, 37)), (915, (12, 15)), (362, (108, 113)), (304, (-1, 4)), (362, (80, 82)), (380, (-1, 4)), (358, (24, 28)), (671, (6, 13)), (384, (19, 24)), (918, (23, 28)), (362, (96, 100)), (295, (6, 11)), (36, (-1, 9)), (346, (32, 37)), (26, (11, 14)), (51, (41, 46)), (455, (41, 46)), (48, (11, 16)), (214, (56, 60)), (1110, (38, 42)), (918, (13, 18)), (1017, (19, 23)), (234, (32, 39)), (252, (27, 32)), (715, (-1, 4)), (142, (11, 14)), (918, (6, 12)), (294, (6, 9)), (221, (25, 30)), (438, (6, 12)), (815, (-1, 4)), (288, (26, 30)), (729, (6, 12)), (1145, (-1, 4)), (288, (31, 37)), (66, (-1, 4)), (121, (32, 36)), (602, (29, 32)), (368, (35, 42)), (901, (15, 21)), (384, (45, 48)), (1003, (8, 14)), (44, (17, 21)), (592, (13, 20)), (368, (-1, 4)), (377, (27, 30)), (51, (36, 40)), (792, (-1, 4)), (592, (-1, 4)), (198, (29, 33)), (777, (20, 24)), (48, (17, 21)), (394, (6, 10)), (1048, (13, 16)), (234, (95, 99)), (1056, (10, 15)), (1137, (6, 12)), (868, (6, 9)), (769, (15, 21)), (448, (6, 9)), (1065, (9, 15)), (931, (18, 23)), (558, (6, 12)), (113, (-1, 4)), (875, (10, 15)), (1180, (44, 48)), (148, (-1, 4)), (1031, (21, 25)), (869, (10, 17)), (686, (23, 28)), (399, (54, 59)), (624, (18, 21)), (1023, (-1, 4)), (109, (12, 17)), (1098, (38, 41)), (828, (-1, 4)), (620, (6, 9)), (803, (-1, 4)), (428, (-1, 4)), (1098, (-1, 4)), (686, (42, 50)), (479, (-1, 4)), (464, (-1, 4)), (719, (14, 21)), (760, (47, 52)), (1098, (24, 28)), (1102, (37, 42)), (534, (6, 11)), (646, (19, 22)), (191, (20, 26)), (946, (6, 10)), (693, (6, 12)), (1110, (12, 15)), (978, (-1, 4)), (428, (22, 25)), (715, (22, 30)), (126, (26, 29)), (637, (35, 40)), (835, (30, 36)), (271, (-1, 4)), (221, (47, 53)), (486, (-1, 4)), (26, (6, 10)), (668, (11, 18)), (732, (6, 12)), (680, (-1, 4)), (335, (23, 26)), (946, (69, 74)), (358, (16, 20)), (1141, (6, 10)), (448, (26, 32)), (745, (-1, 4)), (565, (-1, 4)), (1003, (20, 25)), (796, (-1, 4)), (169, (32, 36)), (335, (10, 17)), (658, (6, 14)), (612, (6, 9)), (631, (-1, 4)), (546, (-1, 4)), (637, (6, 11)), (592, (21, 26)), (113, (26, 29)), (745, (28, 36)), (1174, (14, 20)), (650, (-1, 4)), (285, (6, 9)), (921, (10, 19)), (701, (-1, 4)), (161, (25, 28)), (1102, (23, 26)), (44, (22, 25)), (281, (11, 15)), (362, (-1, 4)), (203, (35, 39)), (51, (63, 68)), (786, (-1, 4)), (786, (20, 25)), (408, (-1, 4)), (346, (23, 28)), (185, (45, 48)), (234, (64, 68)), (637, (-1, 4)), (56, (6, 10)), (637, (22, 26)), (438, (-1, 4)), (346, (48, 53)), (1007, (-1, 4)), (828, (30, 37)), (1056, (33, 37)), (1052, (6, 9)), (708, (-1, 4)), (93, (-1, 4)), (1189, (38, 43)), (486, (17, 24)), (612, (18, 24)), (30, (16, 21)), (915, (16, 19)), (568, (19, 24)), (185, (40, 44)), (517, (-1, 4)), (138, (28, 33)), (578, (-1, 4)), (368, (6, 12)), (1197, (16, 21)), (665, (11, 21)), (1155, (19, 22)), (62, (17, 20)), (683, (28, 31)), (521, (59, 65)), (878, (26, 33)), (1041, (38, 41)), (637, (12, 16)), (39, (17, 21)), (214, (25, 29)), (1078, (33, 38)), (654, (-1, 4)), (1041, (32, 37)), (435, (20, 23)), (885, (6, 10)), (203, (51, 55)), (390, (13, 17)), (51, (15, 20)), (1078, (75, 79)), (51, (58, 62)), (572, (6, 10)), (328, (10, 13)), (521, (12, 15)), (994, (-1, 4)), (575, (-1, 4)), (792, (6, 10)), (142, (6, 10)), (399, (48, 53)), (1155, (13, 18)), (464, (6, 9)), (844, (6, 9)), (1102, (83, 88)), (1074, (-1, 4)), (113, (22, 25)), (455, (29, 33)), (878, (-1, 4)), (311, (-1, 4)), (191, (71, 75)), (325, (-1, 4)), (991, (-1, 4)), (897, (9, 12)), (298, (6, 9)), (483, (6, 9)), (161, (11, 15)), (138, (40, 43)), (853, (11, 14)), (62, (10, 16)), (432, (-1, 4)), (905, (34, 37)), (288, (-1, 4)), (1017, (-1, 4)), (671, (-1, 4)), (420, (12, 15)), (131, (76, 79)), (527, (-1, 4)), (921, (-1, 4)), (901, (25, 33)), (615, (31, 36)), (777, (-1, 4)), (558, (22, 26)), (1194, (6, 10)), (686, (57, 62)), (1145, (19, 23)), (615, (54, 60)), (377, (20, 26)), (893, (30, 36)), (416, (6, 9)), (631, (15, 19)), (1036, (6, 9)), (1078, (-1, 4)), (39, (6, 16)), (468, (6, 9)), (654, (14, 20)), (575, (12, 18)), (760, (-1, 4)), (943, (-1, 4)), (1052, (34, 38)), (1037, (24, 30)), (956, (11, 18)), (475, (6, 9)), (169, (-1, 4)), (599, (-1, 4)), (509, (24, 28)), (399, (-1, 4)), (131, (72, 75)), (542, (6, 9)), (1102, (6, 11)), (405, (6, 10)), (116, (-1, 4)), (760, (37, 42)), (69, (-1, 4)), (595, (6, 9)), (374, (6, 11)), (1110, (26, 29)), (1010, (-1, 4)), (325, (27, 31)), (176, (-1, 4)), (252, (-1, 4)), (568, (29, 35)), (1031, (-1, 5)), (807, (-1, 4)), (712, (-1, 4)), (460, (6, 9)), (1189, (20, 25)), (276, (-1, 4)), (741, (-1, 4)), (799, (6, 9)), (931, (-1, 4)), (819, (29, 37)), (377, (-1, 4)), (198, (-1, 4)), (828, (11, 16)), (1123, (10, 15)), (51, (69, 73)), (412, (-1, 4)), (773, (6, 10)), (299, (6, 9)), (351, (6, 9)), (928, (13, 16)), (1031, (58, 63)), (479, (30, 34)), (490, (6, 10)), (1174, (6, 13)), (901, (-1, 4)), (435, (14, 19)), (353, (55, 59)), (221, (78, 82)), (281, (16, 19)), (988, (6, 9)), (165, (18, 21)), (838, (19, 22)), (1037, (9, 12)), (59, (38, 41)), (942, (6, 9)), (59, (30, 37))])
[((26, (6, 10)), '*CHI:\tmilk [!] .\n'), ((26, (11, 14)), '*CHI:\tmilk [!] .\n'), ((30, (16, 21)), '*JAK:\t<&m> [//] juice .\n'), ((33, (6, 10)), '*MOT:\tokay .\n'), ((36, (-1, 9)), '*FAT:\tmilk .\n'), ((39, (6, 16)), '*MOT:\tmilk juice milk .\n'), ((39, (17, 21)), '*MOT:\tmilk juice milk .\n'), ((44, (6, 16)), '*CHI:\tmilk juice milk zzz .\n'), ((44, (17, 21)), '*CHI:\tmilk juice milk zzz .\n'), ((44, (22, 25)), '*CHI:\tmilk juice milk zzz .\n'), ((48, (-1, 9)), '*FAT:\tmilk juice milk .\n'), ((48, (11, 16)), '*FAT:\tmilk juice milk .\n'), ((48, (17, 21)), '*FAT:\tmilk juice milk .\n'), ((51, (6, 10)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (15, 20)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (25, 35)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (36, 40)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (41, 46)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (47, 51)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (52, 57)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (58, 62)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (63, 68)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((51, (69, 73)), '*JAK:\tmilk (.) juice (.) milk juice milk juice milk juice milk juice milk .\n'), ((56, (6, 10)), '*MOT:\toops .\n'), ((59, (30, 37)), '*MOT:\txxx Jake wants xxx <xxx supper> [>] .\n'), ((59, (38, 41)), '*MOT:\txxx Jake wants xxx <xxx supper> [>] .\n'), ((62, (10, 16)), '*JAK:\t<no juice> [<] .\n'), ((62, (17, 20)), '*JAK:\t<no juice> [<] .\n'), ((66, (-1, 4)), "*MOT:\tI shouldn't have asked you .\n"), ((69, (-1, 4)), "*MOT:\tI shouldn't have offered .\n"), ((80, (24, 30)), '*MOT:\twell you eat some supper now before I give you more okay (11.) ?\n'), ((89, (26, 29)), '*MOT:\toh God xxx terrible huh ?\n'), ((93, (-1, 4)), "*JAK:\tConner's by the T_V that's not fair .\n"), ((93, (26, 32)), "*JAK:\tConner's by the T_V that's not fair .\n"), ((98, (-1, 4)), '*MOT:\tI know [?] .\n'), ((101, (-1, 4)), "*MOT:\tI'll go turn it off because Jake's missing it anyway .\n"), ((109, (6, 11)), "*FAT:\twe'll watch it after <you eat> [>] .\n"), ((109, (12, 17)), "*FAT:\twe'll watch it after <you eat> [>] .\n"), ((113, (-1, 4)), "*MOT:\t<you won't miss it> [<] !\n"), ((113, (22, 25)), "*MOT:\t<you won't miss it> [<] !\n"), ((113, (26, 29)), "*MOT:\t<you won't miss it> [<] !\n"), ((116, (-1, 4)), '*FAT:\tand then you can turn it right back on .\n'), ((121, (32, 36)), "*FAT:\tit doesn't go over it's a tape .\n"), ((126, (-1, 4)), '*CHI:\twe gonna miss it on xxx or it stay on all day .\n'), ((126, (26, 29)), '*CHI:\twe gonna miss it on xxx or it stay on all day .\n'), ((126, (48, 51)), '*CHI:\twe gonna miss it on xxx or it stay on all day .\n'), ((131, (9, 15)), "*FAT:\tno you'll see it right where she shut it off it'll go right <back on> [>] .\n"), ((131, (66, 71)), "*FAT:\tno you'll see it right where she shut it off it'll go right <back on> [>] .\n"), ((131, (72, 75)), "*FAT:\tno you'll see it right where she shut it off it'll go right <back on> [>] .\n"), ((131, (76, 79)), "*FAT:\tno you'll see it right where she shut it off it'll go right <back on> [>] .\n"), ((138, (14, 18)), "*MOT:\t<that's the> [<] good thing about [!] it .\n"), ((138, (28, 33)), "*MOT:\t<that's the> [<] good thing about [!] it .\n"), ((138, (40, 43)), "*MOT:\t<that's the> [<] good thing about [!] it .\n"), ((142, (6, 10)), "*JAK:\tyeah (.) Conner because <Mama's> [>] [/] .\n"), ((142, (11, 14)), "*JAK:\tyeah (.) Conner because <Mama's> [>] [/] .\n"), ((145, (-1, 4)), "*MOT:\t<you don't> [<] miss any .\n"), ((148, (-1, 4)), '*MOT:\tif you have_to go out you just turn it off and when you come back you pick up from where it was on before .\n'), ((157, (6, 10)), '*JAK:\tyeah .\n'), ((161, (11, 15)), "*FAT:\tI'll tell you this xxx .\n"), ((161, (25, 28)), "*FAT:\tI'll tell you this xxx .\n"), ((165, (18, 21)), '*MOT:\txxx alright (.) .\n'), ((169, (-1, 4)), "*MOT:\tI don't believe May's not home .\n"), ((169, (32, 36)), "*MOT:\tI don't believe May's not home .\n"), ((176, (-1, 4)), '*MOT:\tshould go chasing after her .\n'), ((176, (16, 23)), '*MOT:\tshould go chasing after her .\n'), ((180, (-1, 4)), '*JAK:\tI put the medicine there because I have_to xxx .\n'), ((185, (-1, 4)), '*FAT:\tis Jessie coming back <there with her> [>] ?\n'), ((185, (40, 44)), '*FAT:\tis Jessie coming back <there with her> [>] ?\n'), ((185, (45, 48)), '*FAT:\tis Jessie coming back <there with her> [>] ?\n'), ((191, (20, 26)), "*MOT:\twell Jessie's mother was gonna either pick her up here or at the park .\n"), ((191, (71, 75)), "*MOT:\twell Jessie's mother was gonna either pick her up here or at the park .\n"), ((198, (-1, 4)), '*MOT:\tand &-uh she was gonna pick her up at five thirty .\n'), ((198, (29, 33)), '*MOT:\tand &-uh she was gonna pick her up at five thirty .\n'), ((198, (49, 55)), '*MOT:\tand &-uh she was gonna pick her up at five thirty .\n'), ((203, (-1, 4)), "*MOT:\tso I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .\n"), ((203, (35, 39)), "*MOT:\tso I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .\n"), ((203, (46, 50)), "*MOT:\tso I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .\n"), ((203, (51, 55)), "*MOT:\tso I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .\n"), ((203, (137, 140)), "*MOT:\tso I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .\n"), ((214, (25, 29)), '*MOT:\txxx have_to have a talk with her about not coming home .\n'), ((214, (56, 60)), '*MOT:\txxx have_to have a talk with her about not coming home .\n'), ((221, (-1, 4)), "*MOT:\tshe doesn't have a watch on but still an hour's a big difference from a half an hour .\n"), ((221, (25, 30)), "*MOT:\tshe doesn't have a watch on but still an hour's a big difference from a half an hour .\n"), ((221, (47, 53)), "*MOT:\tshe doesn't have a watch on but still an hour's a big difference from a half an hour .\n"), ((221, (78, 82)), "*MOT:\tshe doesn't have a watch on but still an hour's a big difference from a half an hour .\n"), ((234, (-1, 4)), '*MOT:\tI told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .\n'), ((234, (32, 39)), '*MOT:\tI told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .\n'), ((234, (64, 68)), '*MOT:\tI told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .\n'), ((234, (95, 99)), '*MOT:\tI told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .\n'), ((234, (103, 107)), '*MOT:\tI told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .\n'), ((245, (-1, 4)), "*FAT:\tyeah well she don't know a half hour .\n"), ((245, (6, 10)), "*FAT:\tyeah well she don't know a half hour .\n"), ((245, (38, 42)), "*FAT:\tyeah well she don't know a half hour .\n"), ((252, (-1, 4)), '*FAT:\tshe ought_to carry a watch around with her .\n'), ((252, (27, 32)), '*FAT:\tshe ought_to carry a watch around with her .\n'), ((258, (-1, 4)), '*MOT:\tshe has a watch .\n'), ((258, (16, 21)), '*MOT:\tshe has a watch .\n'), ((271, (-1, 4)), '*MOT:\tis it your favorite ?\n'), ((276, (-1, 4)), '*MOT:\thuh ?\n'), ((276, (6, 9)), '*MOT:\thuh ?\n'), ((281, (11, 15)), '*CHI:\tmore milk (.) .\n'), ((281, (16, 19)), '*CHI:\tmore milk (.) .\n'), ((285, (6, 9)), '*MOT:\thm: .\n'), ((288, (-1, 4)), '*MOT:\tsay can I have more milk please .\n'), ((288, (26, 30)), '*MOT:\tsay can I have more milk please .\n'), ((288, (31, 37)), '*MOT:\tsay can I have more milk please .\n'), ((291, (-1, 4)), '*CHI:\tcan I have more milk please .\n'), ((291, (22, 26)), '*CHI:\tcan I have more milk please .\n'), ((291, (27, 33)), '*CHI:\tcan I have more milk please .\n'), ((294, (6, 9)), '*MOT:\txxx .\n'), ((295, (6, 11)), '*CHI:\twhoop .\n'), ((298, (6, 9)), '*CHI:\txxx .\n'), ((299, (6, 9)), '*MOT:\tboy I think I gave you guys too much .\n'), ((304, (-1, 4)), '*MOT:\tI hope you can eat that all .\n'), ((307, (6, 12)), "*MOT:\tthat's good for you you know .\n"), ((307, (13, 17)), "*MOT:\tthat's good for you you know .\n"), ((311, (-1, 4)), '*MOT:\tyou gonna try to eat it all up ?\n'), ((317, (6, 9)), '*CHI:\tzzz .\n'), ((321, (6, 10)), '*JAK:\tyeah .\n'), ((325, (-1, 4)), "*CHI:\tI don't like the xxx ones .\n"), ((325, (27, 31)), "*CHI:\tI don't like the xxx ones .\n"), ((328, (10, 13)), '*CHI:\tthe xxx .\n'), ((335, (10, 17)), '*MOT:\tthe <shells [!]> [>] .\n'), ((335, (23, 26)), '*MOT:\tthe <shells [!]> [>] .\n'), ((338, (32, 36)), '*CHI:\t<xxx> [<] <&th> [/] these ones right here .\n'), ((341, (21, 28)), '*JAK:\t<just like the shells> [>] .\n'), ((341, (29, 32)), '*JAK:\t<just like the shells> [>] .\n'), ((346, (23, 28)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((346, (32, 37)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((346, (42, 47)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((346, (48, 53)), "*SIS:\txxx just a quick glass of water and we're gonna go back .\n"), ((351, (6, 9)), '*SIS:\txxx .\n'), ((353, (55, 59)), "*MOT:\tyeah &-um <what> [//] what's this business of an hour ?\n"), ((358, (-1, 4)), '*MOT:\tI said an half an hour .\n'), ((358, (16, 20)), '*MOT:\tI said an half an hour .\n'), ((358, (24, 28)), '*MOT:\tI said an half an hour .\n'), ((362, (-1, 4)), '*SIS:\t<well we> [//] <I had to> [//] <we> [//] <ready to> [/] ready to pick her up and what the heck is xxx stuff .\n'), ((362, (80, 82)), '*SIS:\t<well we> [//] <I had to> [//] <we> [//] <ready to> [/] ready to pick her up and what the heck is xxx stuff .\n'), ((362, (96, 100)), '*SIS:\t<well we> [//] <I had to> [//] <we> [//] <ready to> [/] ready to pick her up and what the heck is xxx stuff .\n'), ((362, (108, 113)), '*SIS:\t<well we> [//] <I had to> [//] <we> [//] <ready to> [/] ready to pick her up and what the heck is xxx stuff .\n'), ((368, (-1, 4)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((368, (6, 12)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((368, (18, 24)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((368, (35, 42)), "*MOT:\tthat's that coffee I made by mistake .\n"), ((374, (6, 11)), '*SIS:\tshoot !\n'), ((377, (-1, 4)), '*SIS:\tthis dumb [?] coffee mix .\n'), ((377, (20, 26)), '*SIS:\tthis dumb [?] coffee mix .\n'), ((377, (27, 30)), '*SIS:\tthis dumb [?] coffee mix .\n'), ((380, (-1, 4)), '*SIS:\thold on .\n'), ((380, (6, 10)), '*SIS:\thold on .\n'), ((384, (19, 24)), "*MOT:\tthere's &-um fruit punch in the yellow jug (10.) .\n"), ((384, (25, 30)), "*MOT:\tthere's &-um fruit punch in the yellow jug (10.) .\n"), ((384, (38, 44)), "*MOT:\tthere's &-um fruit punch in the yellow jug (10.) .\n"), ((384, (45, 48)), "*MOT:\tthere's &-um fruit punch in the yellow jug (10.) .\n"), ((390, (13, 17)), '*CHI:\tlittle milk ?\n'), ((394, (6, 10)), '*CHI:\tmilk Mama ?\n'), ((399, (-1, 4)), "*MOT:\tMay <go> [/] go wash up and I'll get your plate ready .\n"), ((399, (48, 53)), "*MOT:\tMay <go> [/] go wash up and I'll get your plate ready .\n"), ((399, (54, 59)), "*MOT:\tMay <go> [/] go wash up and I'll get your plate ready .\n"), ((405, (6, 10)), '*SIS:\tokay let me drink this .\n'), ((408, (-1, 4)), '*MOT:\there (.) .\n'), ((412, (-1, 4)), '*CHI:\tJake not eating .\n'), ((416, (6, 9)), '*JES:\tbye !\n'), ((420, (12, 15)), '*JAK:\t<bye> [>] !\n'), ((428, (-1, 4)), '*MOT:\tyou want <that> [>] ?\n'), ((428, (22, 25)), '*MOT:\tyou want <that> [>] ?\n'), ((432, (-1, 4)), "*MOT:\tI'll get it for you .\n"), ((435, (14, 19)), "*FAT:\t<what's that> [<] ?\n"), ((435, (20, 23)), "*FAT:\t<what's that> [<] ?\n"), ((438, (-1, 4)), "*FAT:\twhat's that ?\n"), ((438, (6, 12)), "*FAT:\twhat's that ?\n"), ((441, (6, 15)), '*MOT:\tspaghetti on his shirt .\n'), ((441, (23, 28)), '*MOT:\tspaghetti on his shirt .\n'), ((444, (6, 9)), '*JAK:\tzzz .\n'), ((448, (6, 9)), '*JAK:\ttry to eat my belly button .\n'), ((448, (26, 32)), '*JAK:\ttry to eat my belly button .\n'), ((451, (6, 9)), '*JAK:\tzzz .\n'), ((455, (29, 33)), "*MOT:\tcome on you guys don't fool at the table !\n"), ((455, (41, 46)), "*MOT:\tcome on you guys don't fool at the table !\n"), ((460, (6, 9)), '*CHI:\tzzz .\n'), ((464, (-1, 4)), '*FAT:\they !\n'), ((464, (6, 9)), '*FAT:\they !\n'), ((468, (6, 9)), '*CHI:\tzzz .\n'), ((475, (6, 9)), '*FAT:\tzzz .\n'), ((479, (-1, 4)), "*SIS:\tyou didn't buy xxx diet soda ?\n"), ((479, (30, 34)), "*SIS:\tyou didn't buy xxx diet soda ?\n"), ((483, (6, 9)), '*MOT:\tyes I did !\n'), ((486, (-1, 4)), '*MOT:\tbehind the peaches .\n'), ((486, (17, 24)), '*MOT:\tbehind the peaches .\n'), ((490, (6, 10)), '*JAK:\tlook at Conner I did on your arm .\n'), ((490, (35, 38)), '*JAK:\tlook at Conner I did on your arm .\n'), ((509, (24, 28)), "*CHI:\tno I don't wan(t) (t)a .\n"), ((512, (25, 29)), '*MOT:\twell take a little rest (.) and then eat more .\n'), ((512, (30, 33)), '*MOT:\twell take a little rest (.) and then eat more .\n'), ((517, (-1, 4)), "*CHI:\tI don't want it !\n"), ((521, (12, 15)), "*MOT:\t<xxx> [<] because you drank all of that milk so fast that's probably why .\n"), ((521, (46, 50)), "*MOT:\t<xxx> [<] because you drank all of that milk so fast that's probably why .\n"), ((521, (59, 65)), "*MOT:\t<xxx> [<] because you drank all of that milk so fast that's probably why .\n"), ((527, (-1, 4)), '*JAK:\tyou drank all that <milk> [>] up .\n'), ((527, (26, 30)), '*JAK:\tyou drank all that <milk> [>] up .\n'), ((534, (6, 11)), '*SIS:\tthank you .\n'), ((542, (6, 9)), '*CHI:\tzzz .\n'), ((546, (-1, 4)), '*MOT:\tis it hot ?\n'), ((550, (-1, 4)), '*MOT:\tis it good ?\n'), ((554, (6, 9)), '*SIS:\tmhm .\n'), ((558, (6, 12)), "*MOT:\tthat's on May's diet .\n"), ((558, (22, 26)), "*MOT:\tthat's on May's diet .\n"), ((562, (6, 9)), '*JAK:\tyep .\n'), ((565, (-1, 4)), "*SIS:\tI'm being good .\n"), ((568, (-1, 4)), '*SIS:\txxx favorite thing was shells [!] (9.) .\n'), ((568, (19, 24)), '*SIS:\txxx favorite thing was shells [!] (9.) .\n'), ((568, (29, 35)), '*SIS:\txxx favorite thing was shells [!] (9.) .\n'), ((572, (6, 10)), '*CHI:\twhoa !\n'), ((575, (-1, 4)), '*JAK:\tthose shells are [/] .\n'), ((575, (12, 18)), '*JAK:\tthose shells are [/] .\n'), ((578, (-1, 4)), '*MOT:\there have a tomato Jake .\n'), ((581, (13, 16)), '*JAK:\t<Mama> [>] !\n'), ((592, (-1, 4)), '*MOT:\tat the grocery store .\n'), ((592, (13, 20)), '*MOT:\tat the grocery store .\n'), ((592, (21, 26)), '*MOT:\tat the grocery store .\n'), ((595, (6, 9)), '*MOT:\tzzz .\n'), ((599, (-1, 4)), '*CHI:\tno what .\n'), ((602, (23, 28)), '*MOT:\tthey fit on your thumb huh ?\n'), ((602, (29, 32)), '*MOT:\tthey fit on your thumb huh ?\n'), ((606, (6, 10)), '*JAK:\tyeah .\n'), ((609, (-1, 4)), '*CHI:\tlike on me too but +...\n'), ((612, (6, 9)), '*MOT:\tfit on your tongue .\n'), ((612, (18, 24)), '*MOT:\tfit on your tongue .\n'), ((615, (31, 36)), "*MOT:\toh good well it's a good thing they fit on your tongue .\n"), ((615, (54, 60)), "*MOT:\toh good well it's a good thing they fit on your tongue .\n"), ((620, (6, 9)), '*CHI:\tzzz .\n'), ((624, (18, 21)), '*JAK:\tlook I want xxx .\n'), ((627, (-1, 4)), '*MOT:\tyou what ?\n'), ((631, (-1, 4)), '*JAK:\tI want a bowl .\n'), ((631, (15, 19)), '*JAK:\tI want a bowl .\n'), ((637, (-1, 4)), "*MOT:\tdon't talk with food in your mouth .\n"), ((637, (6, 11)), "*MOT:\tdon't talk with food in your mouth .\n"), ((637, (12, 16)), "*MOT:\tdon't talk with food in your mouth .\n"), ((637, (22, 26)), "*MOT:\tdon't talk with food in your mouth .\n"), ((637, (35, 40)), "*MOT:\tdon't talk with food in your mouth .\n"), ((642, (6, 9)), '*JAK:\tzzz .\n'), ((646, (19, 22)), '*CHI:\tgive me some xxx .\n'), ((650, (-1, 4)), '*MOT:\tyou want more right ?\n'), ((654, (-1, 4)), '*MOT:\tanother tomato ?\n'), ((654, (14, 20)), '*MOT:\tanother tomato ?\n'), ((658, (6, 14)), '*MOT:\tcucumber ?\n'), ((665, (11, 21)), '*CHI:\tmore cucum(ber) .\n'), ((668, (11, 18)), '*MOT:\tsome lettuce .\n'), ((671, (-1, 4)), '*MOT:\tlettuce ?\n'), ((671, (6, 13)), '*MOT:\tlettuce ?\n'), ((675, (-1, 4)), '*JAK:\tI like lettuce !\n'), ((675, (13, 20)), '*JAK:\tI like lettuce !\n'), ((680, (-1, 4)), '*MOT:\talright hold on .\n'), ((683, (11, 17)), '*CHI:\t<the doctor come [?]> [>] .\n'), ((683, (28, 31)), '*CHI:\t<the doctor come [?]> [>] .\n'), ((686, (-1, 4)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (23, 28)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (29, 32)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (42, 50)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (57, 62)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((686, (66, 73)), "*SIS:\t<there's a whole bowl> [<] with two tomatoes and a piece of lettuce .\n"), ((693, (6, 12)), '*JAK:\tah yum yum .\n'), ((697, (-1, 4)), "*MOT:\tdon't use your hands .\n"), ((697, (6, 11)), "*MOT:\tdon't use your hands .\n"), ((697, (21, 26)), "*MOT:\tdon't use your hands .\n"), ((701, (-1, 4)), '*MOT:\tyou gonna &-um +...\n'), ((705, (-1, 4)), '*MOT:\thold on .\n'), ((705, (6, 10)), '*MOT:\thold on .\n'), ((708, (-1, 4)), '*MOT:\tConner do you want lettuce ?\n'), ((708, (25, 32)), '*MOT:\tConner do you want lettuce ?\n'), ((712, (-1, 4)), '*JAK:\tI [!] do it .\n'), ((715, (-1, 4)), '*MOT:\tand do you want tomatoes too ?\n'), ((715, (22, 30)), '*MOT:\tand do you want tomatoes too ?\n'), ((719, (14, 21)), '*CHI:\tno just lettuce .\n'), ((722, (9, 19)), '*CHI:\tno (to)matoes !\n'), ((729, (6, 12)), "*CHI:\tthat's all .\n"), ((732, (6, 12)), "*CHI:\tthat's all that's all that all .\n"), ((737, (6, 12)), "*CHI:\tthat's all (.) .\n"), ((741, (-1, 4)), '*CHI:\tI love you .\n'), ((745, (-1, 4)), "*MOT:\tI don't have any diet dressing for you May .\n"), ((745, (28, 36)), "*MOT:\tI don't have any diet dressing for you May .\n"), ((751, (-1, 4)), '*JAK:\twhy ?\n'), ((760, (-1, 4)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (24, 32)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (37, 42)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (43, 46)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((760, (47, 52)), "*MOT:\toh you can't have dressing <on your> [>] salad ?\n"), ((769, (15, 21)), '*SIS:\tput your finger [?] dressing .\n'), ((769, (26, 34)), '*SIS:\tput your finger [?] dressing .\n'), ((773, (6, 10)), '*MOT:\tyeah but it defeats the purpose to +...\n'), ((777, (-1, 4)), '*SIS:\tthere was one page in here .\n'), ((777, (20, 24)), '*SIS:\tthere was one page in here .\n'), ((782, (-1, 4)), '*MOT:\thuh ?\n'), ((782, (6, 9)), '*MOT:\thuh ?\n'), ((786, (-1, 4)), '*SIS:\tthere was one piece of paper in here with the diet .\n'), ((786, (20, 25)), '*SIS:\tthere was one piece of paper in here with the diet .\n'), ((786, (29, 34)), '*SIS:\tthere was one piece of paper in here with the diet .\n'), ((786, (52, 56)), '*SIS:\tthere was one piece of paper in here with the diet .\n'), ((792, (-1, 4)), "*MOT:\tit's right there .\n"), ((792, (6, 10)), "*MOT:\tit's right there .\n"), ((796, (-1, 4)), '*SIS:\tthere .\n'), ((799, (6, 9)), '*JAK:\tzzz .\n'), ((803, (-1, 4)), '*CHI:\tlike that .\n'), ((807, (-1, 4)), "*JAK:\tI don't like that one Mom .\n"), ((812, (-1, 4)), "*CHI:\tyou didn't you put <&th> [/] &th xxx .\n"), ((815, (-1, 4)), "*JAK:\tI don't want it .\n"), ((819, (-1, 4)), "*MOT:\toh you didn't want the dressing ?\n"), ((819, (29, 37)), "*MOT:\toh you didn't want the dressing ?\n"), ((825, (30, 33)), "*CHI:\tno I didn't <wanted it> [>] .\n"), ((828, (-1, 4)), '*MOT:\t<you just> [<] want the lettuce ?\n'), ((828, (11, 16)), '*MOT:\t<you just> [<] want the lettuce ?\n'), ((828, (30, 37)), '*MOT:\t<you just> [<] want the lettuce ?\n'), ((832, (6, 10)), '*CHI:\tyeah .\n'), ((835, (30, 36)), '*JAK:\t<&w> [/] <&w> [/] <with salad> [>] .\n'), ((835, (37, 40)), '*JAK:\t<&w> [/] <&w> [/] <with salad> [>] .\n'), ((838, (19, 22)), '*MOT:\t<oh come on> [<] !\n'), ((841, (-1, 4)), '*JAK:\twith salad .\n'), ((841, (11, 16)), '*JAK:\twith salad .\n'), ((844, (6, 9)), '*MOT:\tsit !\n'), ((847, (-1, 4)), '*JAK:\twith salad with some more (to)matoes .\n'), ((847, (11, 16)), '*JAK:\twith salad with some more (to)matoes .\n'), ((847, (32, 42)), '*JAK:\twith salad with some more (to)matoes .\n'), ((850, (13, 16)), '*MOT:\t<okay> [>] !\n'), ((853, (11, 14)), '*CHI:\t<no> [<] !\n'), ((865, (10, 17)), '*JAK:\ttwo mores@c .\n'), ((868, (6, 9)), '*JAK:\txxx .\n'), ((869, (10, 17)), '*CHI:\txxx lettuce lettuce .\n'), ((869, (18, 25)), '*CHI:\txxx lettuce lettuce .\n'), ((872, (-1, 4)), '*MOT:\tyou hurt me .\n'), ((875, (10, 15)), "*CHI:\tI'm sorry .\n"), ((878, (-1, 4)), '*JAK:\tI want two more the lettuce .\n'), ((878, (26, 33)), '*JAK:\tI want two more the lettuce .\n'), ((881, (6, 10)), '*MOT:\tokay Jake ?\n'), ((885, (6, 10)), '*MOT:\tokay Conner ?\n'), ((889, (19, 26)), '*MOT:\tyou like the lettuce ?\n'), ((893, (30, 36)), '*MOT:\tyou like a little bunny rabbit ?\n'), ((897, (9, 12)), '*JAK:\tno zzz .\n'), ((901, (-1, 4)), '*MOT:\tyou have plenty of dressing there Jake .\n'), ((901, (15, 21)), '*MOT:\tyou have plenty of dressing there Jake .\n'), ((901, (25, 33)), '*MOT:\tyou have plenty of dressing there Jake .\n'), ((905, (-1, 4)), '*JAK:\tI know that but I want more (.) .\n'), ((905, (34, 37)), '*JAK:\tI know that but I want more (.) .\n'), ((911, (-1, 4)), '*MOT:\toh you got it all over you (.) !\n'), ((915, (-1, 4)), "*CHI:\tI'm a fat cow !\n"), ((915, (12, 15)), "*CHI:\tI'm a fat cow !\n"), ((915, (16, 19)), "*CHI:\tI'm a fat cow !\n"), ((918, (6, 12)), "*MOT:\tthat's sweet and spicy .\n"), ((918, (13, 18)), "*MOT:\tthat's sweet and spicy .\n"), ((918, (23, 28)), "*MOT:\tthat's sweet and spicy .\n"), ((921, (-1, 4)), '*JAK:\tand spicy yes .\n'), ((921, (10, 19)), '*JAK:\tand spicy yes .\n'), ((924, (-1, 4)), '*JAK:\tspicy for your tongue ?\n'), ((924, (6, 11)), '*JAK:\tspicy for your tongue ?\n'), ((924, (21, 27)), '*JAK:\tspicy for your tongue ?\n'), ((928, (13, 16)), '*MOT:\tlittle bit .\n'), ((931, (-1, 4)), '*JAK:\tand this is spicy .\n'), ((931, (18, 23)), '*JAK:\tand this is spicy .\n'), ((934, (-1, 4)), '*SIS:\tdo you know where the other part of the &-um paper of my diet is ?\n'), ((934, (34, 38)), '*SIS:\tdo you know where the other part of the &-um paper of my diet is ?\n'), ((934, (51, 56)), '*SIS:\tdo you know where the other part of the &-um paper of my diet is ?\n'), ((934, (63, 67)), '*SIS:\tdo you know where the other part of the &-um paper of my diet is ?\n'), ((941, (6, 9)), '*MOT:\txxx .\n'), ((942, (6, 9)), '*SIS:\txxx .\n'), ((943, (-1, 4)), '*MOT:\txxx full ?\n'), ((946, (6, 10)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((946, (29, 34)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((946, (42, 47)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((946, (69, 74)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((946, (97, 100)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((946, (108, 113)), '*SIS:\tyeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .\n'), ((956, (11, 18)), '*MOT:\tyour stomach is shrinking .\n'), ((959, (-1, 4)), '*SIS:\tI know .\n'), ((962, (23, 29)), "*MOT:\tshrinking on the inside and then after it shrinks on the inside it'll shrink on the outside .\n"), ((978, (-1, 4)), "*CHI:\tI don't want this .\n"), ((982, (-1, 4)), "*JAK:\tI don't want this .\n"), ((985, (6, 9)), '*MOT:\tyes you can eat some more .\n'), ((988, (6, 9)), '*CHI:\thm: .\n'), ((991, (-1, 4)), "*JAK:\tI don't wan(t) (t)a .\n"), ((991, (21, 25)), "*JAK:\tI don't wan(t) (t)a .\n"), ((994, (-1, 4)), "*MOT:\tyou did alright but couldn't you eat a little more ?\n"), ((1003, (8, 14)), '*MOT:\ta couple more bites (.) ?\n'), ((1003, (20, 25)), '*MOT:\ta couple more bites (.) ?\n'), ((1007, (-1, 4)), "*CHI:\tI don't want more .\n"), ((1010, (-1, 4)), '*CHI:\tcould I <have a> [>] [/] .\n'), ((1017, (-1, 4)), "*JAK:\tI don't want mine Ma I don't want it .\n"), ((1017, (19, 23)), "*JAK:\tI don't want mine Ma I don't want it .\n"), ((1023, (-1, 4)), "*CHI:\tJake you <didn't eat salad> [>] .\n"), ((1023, (34, 37)), "*CHI:\tJake you <didn't eat salad> [>] .\n"), ((1028, (-1, 4)), '*MOT:\t<this is a big tomato> [<] .\n'), ((1028, (6, 11)), '*MOT:\t<this is a big tomato> [<] .\n'), ((1028, (21, 28)), '*MOT:\t<this is a big tomato> [<] .\n'), ((1028, (29, 32)), '*MOT:\t<this is a big tomato> [<] .\n'), ((1031, (-1, 5)), '*JAK:\tI did a <I eat the> [/] <I eat the> [//] I eat that right here .\n'), ((1031, (17, 20)), '*JAK:\tI did a <I eat the> [/] <I eat the> [//] I eat that right here .\n'), ((1031, (21, 25)), '*JAK:\tI did a <I eat the> [/] <I eat the> [//] I eat that right here .\n'), ((1031, (58, 63)), '*JAK:\tI did a <I eat the> [/] <I eat the> [//] I eat that right here .\n'), ((1036, (6, 9)), '*JAK:\txxx .\n'), ((1037, (9, 12)), '*JAK:\t<I eat that right there> [>] .\n'), ((1037, (24, 30)), '*JAK:\t<I eat that right there> [>] .\n'), ((1041, (-1, 4)), '*MOT:\t<xxx you have_to eat some more> [<] .\n'), ((1041, (32, 37)), '*MOT:\t<xxx you have_to eat some more> [<] .\n'), ((1041, (38, 41)), '*MOT:\t<xxx you have_to eat some more> [<] .\n'), ((1048, (13, 16)), '*CHI:\t<yeah> [>] !\n'), ((1052, (6, 9)), '*JAK:\t<no but I have> [<] a belly ache !\n'), ((1052, (34, 38)), '*JAK:\t<no but I have> [<] a belly ache !\n'), ((1056, (10, 15)), "*MOT:\twhy don't you go blow your nose .\n"), ((1056, (33, 37)), "*MOT:\twhy don't you go blow your nose .\n"), ((1065, (9, 15)), "*CHI:\tno you're not .\n"), ((1069, (6, 9)), '*JAK:\tyes am !\n'), ((1074, (-1, 4)), '*MOT:\tConner you stay out of this .\n'), ((1078, (-1, 4)), "*MOT:\tJake go blow your nose and we'll see maybe your belly will have more room after that .\n"), ((1078, (24, 28)), "*MOT:\tJake go blow your nose and we'll see maybe your belly will have more room after that .\n"), ((1078, (33, 38)), "*MOT:\tJake go blow your nose and we'll see maybe your belly will have more room after that .\n"), ((1078, (75, 79)), "*MOT:\tJake go blow your nose and we'll see maybe your belly will have more room after that .\n"), ((1094, (-1, 4)), "*SIS:\tyou haven't eat anything .\n"), ((1098, (-1, 4)), '*MOT:\tdid you wash your face <Conner> [>] ?\n'), ((1098, (24, 28)), '*MOT:\tdid you wash your face <Conner> [>] ?\n'), ((1098, (38, 41)), '*MOT:\tdid you wash your face <Conner> [>] ?\n'), ((1102, (6, 11)), '*JAK:\t<yeah I did [!]> [<] I eat one right here and one right there and <one right here> [>] .\n'), ((1102, (23, 26)), '*JAK:\t<yeah I did [!]> [<] I eat one right here and one right there and <one right here> [>] .\n'), ((1102, (37, 42)), '*JAK:\t<yeah I did [!]> [<] I eat one right here and one right there and <one right here> [>] .\n'), ((1102, (83, 88)), '*JAK:\t<yeah I did [!]> [<] I eat one right here and one right there and <one right here> [>] .\n'), ((1110, (12, 15)), '*SIS:\t<xxx> [<] I got xxx eat on your face Jake .\n'), ((1110, (26, 29)), '*SIS:\t<xxx> [<] I got xxx eat on your face Jake .\n'), ((1110, (38, 42)), '*SIS:\t<xxx> [<] I got xxx eat on your face Jake .\n'), ((1114, (10, 15)), '*SIS:\tone right here one right here and one right here .\n'), ((1123, (10, 15)), '*JAK:\tone right here and one right here and one right here !\n'), ((1137, (6, 12)), "*JAK:\tthat's <all> [>] .\n"), ((1141, (6, 10)), '*MOT:\t<how about> [<] three more then ?\n'), ((1141, (11, 17)), '*MOT:\t<how about> [<] three more then ?\n'), ((1145, (-1, 4)), "*JAK:\tdon't wan(t) (t)a !\n"), ((1145, (6, 11)), "*JAK:\tdon't wan(t) (t)a !\n"), ((1145, (19, 23)), "*JAK:\tdon't wan(t) (t)a !\n"), ((1155, (13, 18)), '*MOT:\t<three more> [>] .\n'), ((1155, (19, 22)), '*MOT:\t<three more> [>] .\n'), ((1158, (17, 20)), '*JAK:\t<one more> [<] !\n'), ((1161, (33, 37)), '*MOT:\tone more then go blow your nose and come back and have three more .\n'), ((1171, (6, 9)), '*JAK:\tzzz .\n'), ((1174, (6, 13)), '*JAK:\tpretend crying .\n'), ((1174, (14, 20)), '*JAK:\tpretend crying .\n'), ((1177, (-1, 4)), '*MOT:\tJake !\n'), ((1180, (44, 48)), '*MOT:\talright eat one more and go blow your nose .\n'), ((1185, (6, 9)), "*JAK:\txxx I don't want to eat no more .\n"), ((1189, (20, 25)), "*MOT:\twell then I'm gonna save it for lunch tomorrow .\n"), ((1189, (38, 43)), "*MOT:\twell then I'm gonna save it for lunch tomorrow .\n"), ((1194, (6, 10)), '*JAK:\tokay .\n'), ((1197, (16, 21)), '*MOT:\twash your hands and face too .\n'), ((1197, (26, 30)), '*MOT:\twash your hands and face too .\n')]
calculating accuracy and recall
correct labels:
set(['diet soda', 'peaches', 'coffee', 'salad', 'lettuce', 'diet dressing', '(to)matoes', 'cucum(ber)', 'water', 'juice', 'cucumber', 'tomato', 'supper', 'dressing', 'milk juice', 'spaghetti', 'milk', 'tomatoes'])
predicted labels:
set(['', '(t)a', "don't", 'hands', '[!]', 'peaches', 'the>', 'paper', 'yep', 'yes', 'milk', 'cow', 'thank', 'fit', 'tape', 'crying', 'dressing', 'sorry', 'bye', 'fool', 'plate', 'coffee', 'good', 'mores@c', 'food', 'couple', 'watch', '<no', 'gonna', 'it>', 'lunch', '[>]', 'rest', 'half', 'bit', 'day', 'room', "we'll", 'mhm', 'salad', 'button', 'try', 'stuff', 'nose', 'quarter', 'page', 'spicy yes', 'right', 'yeah', 'her>', 'home', 'milk juice', 'spaghetti', 'arm', '<back', '(.)', 'please', 'cucum(ber)', 'that>', 'finger', 'just>', 'drink', 'bowl>', 'zzz', 'punch', 'water', 'salad>', 'ache', 'thumb', 'boy', 'here>', 'thirty', 'thing', 'heck', 'soda', 'cucumber', 'tongue', '<this', 'hm:', 'sweet', 'tomato>', 'whoop', 'lettuce', 'table', "you're", 'shells', "it's", 'hey', 'there>', "we're", 'tell', 'store', 'spicy', 'stomach', 'jug', "what's", 'xxx', 'park', 'glass', 'part', 'on>', 'rabbit', 'hold', 'eat', 'shoot', 'grocery', 'look', 'hour', 'ride', 'pretend', 'up', 'whoa', 'piece', 'bites', 'mistake', 'juice>', 'give', 'supper>', 'mine', 'juice', '<shells', 'ready', 'shells>', 'inside', 'end', 'shirt', 'doctor', 'yellow', 'bowl', 'your>', 'mix', "hour's", 'more>', 'tomatoes', '<how', 'okay', '(to)matoes', 'huh', 'pick', 'diet', 'about>', 'fruit', 'mouth', 'fat', 'plenty', 'supper', '<yeah', '[<]', 'tomato', 'chasing', 'sit', 'face', "you'll", 'ones', 'oops', 'mother', 'ah yum', 'talk', "that's"])
file:HSLLD/HV1/MT//conmt1.cha
precision: 0.100628930818
recall: 0.888888888889
true positives:['(to)matoes', 'coffee', 'cucum(ber)', 'cucumber', 'dressing', 'juice', 'lettuce', 'milk', 'milk juice', 'peaches', 'salad', 'spaghetti', 'supper', 'tomato', 'tomatoes', 'water']
false positives: ['', '(.)', '(t)a', '<back', '<how', '<no', '<shells', '<this', '<yeah', '[!]', '[<]', '[>]', 'about>', 'ache', 'ah yum', 'arm', 'bit', 'bites', 'bowl', 'bowl>', 'boy', 'button', 'bye', 'chasing', 'couple', 'cow', 'crying', 'day', 'diet', 'doctor', "don't", 'drink', 'eat', 'end', 'face', 'fat', 'finger', 'fit', 'food', 'fool', 'fruit', 'give', 'glass', 'gonna', 'good', 'grocery', 'half', 'hands', 'heck', 'her>', 'here>', 'hey', 'hm:', 'hold', 'home', 'hour', "hour's", 'huh', 'inside', "it's", 'it>', 'jug', 'juice>', 'just>', 'look', 'lunch', 'mhm', 'mine', 'mistake', 'mix', 'more>', 'mores@c', 'mother', 'mouth', 'nose', 'okay', 'on>', 'ones', 'oops', 'page', 'paper', 'park', 'part', 'pick', 'piece', 'plate', 'please', 'plenty', 'pretend', 'punch', 'quarter', 'rabbit', 'ready', 'rest', 'ride', 'right', 'room', 'salad>', 'shells', 'shells>', 'shirt', 'shoot', 'sit', 'soda', 'sorry', 'spicy', 'spicy yes', 'stomach', 'store', 'stuff', 'supper>', 'sweet', 'table', 'talk', 'tape', 'tell', 'thank', "that's", 'that>', 'the>', 'there>', 'thing', 'thirty', 'thumb', 'tomato>', 'tongue', 'try', 'up', 'watch', "we'll", "we're", "what's", 'whoa', 'whoop', 'xxx', 'yeah', 'yellow', 'yep', 'yes', "you'll", "you're", 'your>', 'zzz']
false negatives: ['diet dressing', 'diet soda']
# true pos: 16
# false pos: 143
# false neg: 2
HSLLD/HV1/MT//sopmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: xxx .', '*CHI: (..) can xxx come ?', '*MOT: mm ?', '*CHI: did Chi xxx come ?', '*MOT: yeah ?', "*MOT: (..) why aren't you at the movie ?", '*SIS: (.) xxx .', "*CHI: (..) I know you're supposed to talk to me .", '*SIS: (.) so ?', '*CHI: (.) xxx .', "*SIS: (.) when I do it don't do it okay ?", "*SIS: (.) when you're finished eat Chit .", '*CHI: mommy when I finish eat xxx can I have another one ?', '*MOT: hm: xxx ?', '*SIS: (.) not yet Chi .', '*CHI: I know .', "*CHI: (.) I [/] I [/] dunno [: don't know] how to .", '*SIS: oh !', "*SIS: if you must of drop Chit then it's my turn .", "*SIS: (.) I'm still doing it .", '*CHI: so ?', "*CHI: (.) mommy I'm finished .", '*MOT: mm ?', '*SIS: xxx mommy xxx ?', '*SIS: yo mommy ?', '*CHI: alright stop &=yelling !', '*SIS: yyy &=whines !', '*CHI: no &=cries .', '*MOT: hey !', '*CHI: (.) eat it !', '*CHI: you have_to eat it .', '*SIS: gimme [: give me] Chit xxx .', '*CHI: you have_to eat it .', "*SIS: <I'm not> [//] <I won't> [/] I won't gi(ve) you none .", "*SIS: I'm not gonna let you talk to me .", '*CHI: please can I have it ?', '*CHI: please can I have it back [>] ?', '*SIS: xxx [<] holdin(g) it .', '*CHI: xxx there [>] !', '*MOT: <you want> [<] somethin(g) to drink ?', '*CHI: yes .', '*CHI: please .', '*SIS: what [/] what [/] what you want ?', '*SIS: this ?', '*CHI: no ?', '*CHI: put it here ?', "*CHI: I know you're goin(g) to get it .", '*SIS: hm: ?', '*MOT: xxx .', "*MOT: I'm not gonna accept this from you .", '*CHI: stop &=cries !', "*SIS: then I'm gonna move .", '*SIS: me too mommy &=whining .', '*CHI: me too mommy .', '*SIS: mommy xxx .', '*CHI: me to .', "*CHI: you're not finished xxx .", '*CHI: can you .', '*SIS: xxx .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//sopmt1.cha
HSLLD/HV1/MT//ethmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: xxx yellow and bl(ue) [//] blue and green and red .', "*MOT: alright please [?] color something while you're waiting for your food ?", '*CHI: yes .', '*MOT: alright .', '*MOT: you may <wh(ile)> [//] just while I <&s> [//] cut up the meat .', '*MOT: pull it out .', '*CHI: xxx .', '*MOT: did he only sing this in the encore last night ?', "*FAT: I'm sorry ?", '*MOT: did he only sing this in the encore ?', "*FAT: I don't know .", "*MOT: I'm just wondering where it is in the concert .", '*MOT: xxx .', "*MOT: I'd have a tape (.) .", '*MOT: for the audio tape .', '*FAT: I think the tops of this is six .', '*MOT: stand by .', '*FAT: and the tension just xxx might be out .', '*MOT: xxx this .', '*CHI: okay .', '*MOT: so I have_to put the rest of it on the &-uh +...', '*CHI: zzz .', '*FAT: you have_to start on the second side of the tape too .', '*FAT: lose more o(f) [//] of Philip Flack [?] than anything else .', '*FAT: xxx [>] .', '*MOT: right [<] .', '*MOT: the second side is the side that I had <the encores on> [//] the encore [>] on .', '*FAT: &-uh [<] .', '*MOT: so I have_to get that to be able to use my little cassette .', "*MOT: I'll do that right now .", '*FAT: &-uh [<] .', '*FAT: okay .', "*MOT: Suzanne's sister did the New York bit ?", '*MOT: xxx and &-um biscuits .', '*FAT: thanks .', '*MOT: sorry Harve [?] .', "*FAT: that's okay .", '*FAT: &-uh (.) do you want some Quick ?', '*CHI: <m(e)> [//] me ?', '*FAT: yeah .', '*CHI: Quick .', '*FAT: do you want strawberry or chocolate ?', '*CHI: chocolate .', "*MOT: so how's the chicken look ?", '*CHI: oh good (.) .', '*CHI: it looks good (.) .', '*CHI: ring around the rosy pocket full of (.) ashes , ashes , we all fall down (.) .', "*CHI: Mommy's using my old placemat today .", '*FAT: yeah .', "*FAT: and you're using your new placemat .", '*MOT: yeah I thought he might want to try his new placemat .', '*MOT: there xxx .', '*CHI: xxx so good !', '*MOT: okay .', '*CHI: clean this plate .', '*MOT: pardon [>] ?', '*CHI: <cl(ean)> [//] clean this cup out [<] .', "*MOT: so you'd like something over it .", "*MOT: Daddy's going to put it in <your dinosaur> [!] .", '*CHI: not my xxx ?', '*MOT: no [>] .', '*FAT: <well I figured since you have your dinosaur placement might as well have your dinosaur cup> [<] .', "*MOT: so I'll wash this for another [>] time .", '*CHI: <xxx match> [<] ?', "*FAT: I don't know .", '*CHI: mat(ch) [?] is a drink .', '*FAT: yeah .', '*CHI: 0 .', '*CHI: zzz .', '*MOT: okay .', "*MOT: I think it's +/.", "*CHI: where's those little stuff points [?] ?", '*MOT: these little points .', "*MOT: oh they're supposed to be like grass and plants and things like that (.) in <the &-uh> [//] the landscape (.) all around the dinosaurs .", "*MOT: but right here they look sharp don't they ?", '*CHI: yeah .', '*MOT: there you go (.) .', '*MOT: warm .', '*CHI: the chicken is too ?', '*MOT: what ?', '*MOT: the chicken is [//] should be pretty cool .', "*MOT: I'll cut that one and the next one you have (.) I won't cut you can just eat it (be)cause it will be (.) cooled off (.) .", '*CHI: xxx [>] ?', "*MOT: I knew Bro wouldn't make it home I hope he made it to the library +...", "*FAT: oh I wouldn't +/.", "*MOT: on time (.) to get to xxx work done (be)cause it's so early he's first .", '*FAT: zzz .', '*MOT: his twenty dollars that he got for his birthday yesterday .', '*FAT: zzz .', '*MOT: is burning in his pocket already .', '*FAT: yeah .', "*FAT: (it')s been +/.", "*MOT: that's why he didn't need money to come home from the library yesterday he said I'll have enough to [/] .", '*CHI: 0 .', '*MOT: yeah .', "*FAT: I'm afraid the (.) chicken is &-uh (.) not as well cooked as [/] as usual .", "*MOT: well <it's> [/] it's probably better cooked than the biscuits though .", "*FAT: I don't know .", "*MOT: well they'll both be nice and tender on the inside .", '*FAT: zzz .', '*FAT: well I told Nathaniel that going out to barbecue saves more of a symbolic cash than after it was started barbecuing season .', '*MOT: just to celebrate the first day of spring .', "*FAT: how's the chicken Munchkin ?", '*CHI: nice .', '*CHI: barbecuing (.) a long thing .', "*CHI: barbecuing it's a long thing to do .", '*MOT: yeah .', '*FAT: it takes awhile (.) .', "*FAT: (be)cause you just can't turn the coals on .", '*FAT: like you do an oven .', "*FAT: but when you cook it in the oven it doesn't taste this good .", '*CHI: uhuh (.) .', "*MOT: excuse me I'm going to check the +...", '*CHI: zzz .', '*CHI: oh .', '*FAT: here a napkin .', '*CHI: my napkin ?', '*FAT: yeah [>] .', '*CHI: <this one> [<] ?', '*FAT: mhm .', "*CHI: I'll leave it on in the show then it's all finished .", '*MOT: it all fit on the tape ?', '*FAT: you got lucky .', '*MOT: yes .', '*CHI: it was a lot of stuff .', '*MOT: do you have_to use the bath+room , Honey ?', '*CHI: no just [>] .', '*MOT: okay [<] .', '*CHI: just just how &-uh [//] how many people in the sand yard sit this way ?', '*MOT: oh .', '*CHI: they sit like this .', '*MOT: they wriggle in their seats in Nathaniel land ?', '*CHI: yeah .', '*MOT: does it have rickety chairs ?', '*CHI: yeah .', "*FAT: why don't we turn the sound and xxx it off .", '*MOT: okay thank you .', "*FAT: you're welcome .", '*CHI: it was just a spill .', '*MOT: oh you spilled a little bit ?', '*CHI: yes .', "*MOT: okay well it's just a little .", '*MOT: you [/] you got the napkin there fast .', "*FAT: <the bi(s)cuits> [//] the biscuits aren't burned .", "*FAT: they're (.) just about the way they [//] they're supposed to be .", '*MOT: oh really ?', '*FAT: yeah .', '*MOT: I guess the reason I was going to take them out before is (be)cause <I> [/] I like them better (.) xxx [>] .', '*FAT: under done [<] ?', '*MOT: not under done but done just right .', "*MOT: well it's just that light golden brown across the top (.) .", "*MOT: that's not light golden brown (.) .", "*MOT: it's medium golden brown .", "*FAT: but it's not burnt .", '*MOT: well +...', '*FAT: the other way the mushy part is supposed to be flaky .', "*MOT: yeah that's true .", '*MOT: I liked it .', "*MOT: true when mushy then I can't separate these little &-uh layers .", '*FAT: mhm (.) .', '*CHI: those calendars are so good to eat .', '*FAT: what ?', '*CHI: those calendars are so good to eat !', '*FAT: those calendars ?', '*MOT: what this ?', '*MOT: these barbecued calendars ?', '*CHI: no I mean that real calendar is good to eat .', '*FAT: you want to eat the calendar ?', '*MOT: when did you eat a calendar ?', '*FAT: <in what> [//] [>] in what month would you start eating ?', '*CHI: well [<] +...', '*CHI: well every time we eat .', '*CHI: every time people eat .', '*CHI: else when people eat .', "*MOT: Nathaniel are you sure you don't have_to go to the bath+room ?", '*CHI: yeah !', '*CHI: how +...', '*MOT: if you have_to go to the bath+room come back and have food to eat after that .', '*CHI: oh .', '*CHI: xxx eat .', '*CHI: zzz .', '*FAT: alright .', '*FAT: go pee+pee .', '*CHI: zzz .', "*MOT: that's how they sit Nathaniel down .", '*MOT: just to avoid confrontation (.) .', "*MOT: oh the chicken's xxx .", "*MOT: it is overdone but <it's still> [//] it's barbecued .", '*FAT: yeah .', '*MOT: and it would be very unhealthy to have that like that all the time .', '*CHI: zzz .', "*MOT: what the hell it's the first day of spring .", "*FAT: usually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .", '*FAT: in the warm weather you can still cook it and just stay out there with the barbecue .', '*MOT: yeah .', "*FAT: in the cold weather you say let's cook this sucker fast .", '*CHI: 0 .', '*CHI: hi Ma .', '*MOT: the sky is all overcast and today is the night that I was telling &-uh Melanie about <the sky [/]> [>] .', "*FAT: <it's not overcast> [<] .", '*MOT: no ?', '*FAT: no .', '*MOT: oh .', '*MOT: (bec)ause when I looked out the window up front the sky was all gray [!] .', '*FAT: we just watched the sun set .', '*MOT: yeah ?', '*MOT: xxx [>] .', '*CHI: oh good [<] .', '*MOT: maybe we can go out tonight and see if we can &-uh notice where (.) Mars and Venus (.) and the <Pleiades moon are> [>] .', "*CHI: <&-um come to school and Ma tell them I'm not coming (.) today> [<] .", "*MOT: there's no school today .", "*CHI: but tell them I'm not coming .", "*FAT: there's no one there to answer the phone .", "*FAT: it's Sunday .", "*FAT: they're all home eating .", '*CHI: even the teachers ?', '*FAT: even the teachers .', "*FAT: they're not going to go to school when they don't have_to .", '*MOT: they have families too you know that .', '*MOT: you know Gail has a son and Karen has a son .', '*MOT: blow your nose please .', '*CHI: I know his son Christopher .', "*CHI: he's his son .", '*MOT: blow .', "*MOT: that's what I heard it alright .", '*CHI: heehee yes .', "*CHI: that's how you make blow your nose in Nathaniel land .", '*MOT: well I think Karen is probably home with Christopher right now .', '*CHI: why ?', '*CHI: Christopher +...', "*MOT: well <shouldn't> [/] shouldn't he have his Mummy home with him on one day a week ?", '*MOT: <or two> [>] ?', "*FAT: aren't you sad when your Mummy goes to work [<] ?", '*CHI: what ?', "*FAT: aren't you sad when your Mummy goes to work ?", '*CHI: no .', '*MOT: oh !', "*CHI: I get the toy (.) that doesn't talk .", '*FAT: yeah [>] .', '*CHI: if [<] you wind th(is) [//] this thing in back of your toy it will talk .', "*MOT: I'll wait (un)til after dinner then .", '*MOT: <I> [/] I wanted to talk too much instead of eating .', '*CHI: hi [<] .', "*CHI: it's Judy [?] .", '*CHI: zzz .', '*FAT: <okay eat up> [>] .', '*CHI: zzz [<] .', '*FAT: no toys at our table .', '*CHI: what ?', '*FAT: no toys at our table .', '*CHI: oh .', "*CHI: I didn't play any toy at our table .", '*CHI: not me .', "*MOT: Dylan's in his last minute thing again .", "*MOT: &-um (.) he said he couldn't use the emotional side because he [//] his part of the xxx was &-um (.) very specific .", '*FAT: wh(at) +/.', '*MOT: it was on the economics of it .', '*MOT: Brendan [?] you really should have done (.) this before .', '*CHI: see ?', '*CHI: <what do they> [//] what are those things called when +/.', "*FAT: don't put that near your ear .", "*FAT: that's very sharp .", '*CHI: oh .', '*MOT: oh yuck .', '*CHI: now this is there goes up here .', "*FAT: I don't want +...", '*MOT: Nathaniel no .', "*MOT: don't swing your head around while you're eating .", '*FAT: (a)re you drinking your Quick ?', "*CHI: but [/] but I'm eating .", '*FAT: I mean between [!] bites .', '*MOT: no swinging the head .', '*MOT: <Daddy [/]> [>] .', '*FAT: <and so what did you think of the presents that Mac and Melanie gave you> [<] .', "*CHI: they're good .", "*CHI: well at least I didn't know they gave presents to people .", '*MOT: zzz .', "*FAT: well we didn't see them at Christmas time .", '*CHI: why ?', '*FAT: because every time they were going to come down here they had snow (.) and every time we were going to go up there the weather was bad (.) so we had to wait (un)til yesterday to see them and so <we gave> [/] we gave Michael his birthday present (be)cause we gave them their Christmas present before Christmas <xxx [/]> [>] .', "*CHI: and we're their friends .", '*FAT: yeah .', "*CHI: but at least I didn't give Melanie a present .", '*FAT: we (.) well [/] .', '*MOT: we gave her her birthday present Honey in August when she had her birthday .', '*FAT: and we gave her her Christmas present before Christmas and what they gave you was your Christmas present yesterday .', "*MOT: but Michael's birthday was in January .", '*FAT: yeah .', "*MOT: and we never saw him in January so that's why he got his present yesterday .", '*MOT: Melanie remembers that we gave her present before .', "*CHI: but they didn't give me a <pr(esent)> [/] present on my [!] birthday .", '*MOT: zzz .', '*FAT: (be)cause your birthday is coming up next month .', '*MOT: last year they did .', '*FAT: mhm .', '*MOT: you know your [/] your video tapes with &-uh cartoons on them ?', '*MOT: &-um (.) which cartoons were they ?', "*MOT: I don't know Bugs Bunny and things like that [>] .", '*FAT: mhm [<] .', "*MOT: those were from Michael and Melanie and they give you <the sweatshirt that> [//] a sweatshirt that you wore yesterday (.) and &-uh they've given you other presents too .", '*MOT: but those <are the ones I remember> [>] .', '*CHI: <did they Ma> [<] give me the pin cushion &-um tapes ?', '*MOT: yes yes .', "*MOT: that's right they gave you that [//] the tape .", '*FAT: mhm [<] .', '*CHI: but (.) you mean the &-uh the xxx [///] whose that guy who &-uh gets all those pins out +...', '*CHI: cush@c quash@c +...', '*MOT: the pin cushion man who (.) pops the balloons ?', '*CHI: yes .', '*FAT: what about him ?', '*CHI: well he cuts balloons .', '*FAT: yeah .', "*CHI: and that's not very nice .", "*FAT: no it's not .", '*CHI: next time when we see the pin cushion guy tell him to not &-um &-uh cut the balloons .', '*CHI: tell him not to [>] .', '*FAT: you mean tell him not to pop the balloons ?', '*CHI: yeah .', '*FAT: okay .', '*FAT: you can tell him too you know .', '*CHI: yeah .', "*CHI: (be)cause he doesn't listen to people .", '*MOT: zzz .', '*FAT: yeah .', "*MOT: except it's a cartoon Than .", "*MOT: <I> [/] I don't think he'll stop popping balloons because on the video he's always &-uh on the video .", '*CHI: popping .', '*MOT: popping balloons !', '*CHI: popping [>] .', "*FAT: <and> [/] and don't the balloons win in the end ?", '*CHI: what ?', "*FAT: don't the balloons win in the end (.) ?", "*FAT: don't they find their way to get rid of the pin cushion man ?", '*CHI: oh yes .', '*MOT: do they ?', '*CHI: how ?', '*MOT: I forget .', "*FAT: maybe we'll have_to watch the cartoon again soon to see how .", '*CHI: I know how they put (.) stuff in it .', '*CHI: <they put mm stu(ff)> [//] they put Playdough in everything and then they swim on the pin cush@c guy .', '*CHI: pin cushion guy .', '*FAT: yeah .', "*CHI: and that's how the ending goes .", "*FAT: no he can't pop their balloons any more like that .", '*CHI: n(o) yeah [!] .', '*FAT: mm .', '*MOT: oh .', "*MOT: good memory Nathaniel I didn't remember that part .", "*CHI: you'll have_to see it .", '*MOT: yeah .', '*FAT: do you want another piece of .', "*CHI: it's on my T_V .", '*MOT: want another piece of chicken ?', '*CHI: &-uh (.) yeah .', '*CHI: a couple of pieces .', '*MOT: it has a lot of bone .', '*FAT: mhm .', '*FAT: let us see if I +...', '*FAT: xxx .', '*MOT: I know .', '*MOT: here [/] here you go .', '*CHI: zzz .', '*FAT: sorry .', "*MOT: oh that's alright .", '*MOT: I like to wrap the biscuits and have chicken and biscuits .', '*CHI: want to watch television with me on the [/] my television that I got right here (.) ?', '*CHI: who wants to watch it with me ?', '*CHI: raise your hands .', '*FAT: not me .', '*FAT: I want to eat dinner .', '*CHI: raise your hand .', '*CHI: do you want to ?', "*MOT: I think we should eat instead of playing television don't you think ?", '*CHI: this is my [!] television .', '*FAT: can you turn your television off for a couple of minutes ?', "*CHI: it's off .", '*FAT: oh good .', '*FAT: can you put it away ?', '*CHI: okay .', '*CHI: but down there .', '*FAT: alright .', '*CHI: okay .', '*CHI: until I eat .', "*FAT: it's about seven minutes <to six> [>] .", '*CHI: that noise bugs me .', '*FAT: <what noise> [>] ?', '*CHI: but that [/] that noise from the (re)frigerator (.) it bugs me .', "*MOT: I think it's the fan &-uh that you must hear +/.", '*FAT: no the refrigerator just kicked on .', '*MOT: oh (.) .', '*MOT: never mind .', '*CHI: and that bugs me .', '*FAT: well tough .', "*CHI: I'll tell that to stop .", '*CHI: stop that refrigerator .', "*FAT: oh don't say that because if the refrigerator stops everything that's in the freezer will thaw and it will not be any good and everything that's in the refrigerator will get warm and it willn't be cold anymore .", '*FAT: we have_to keep everything cold in the (re)frige(rator) .', "*FAT: that's why we have a refrigerator .", "*FAT: and it makes that noise (be)cause it's working right (.) .", "*FAT: and it's a quiet [!] noise .", "*MOT: Dylan is probably at the library until they're closed .", '*FAT: you think so ?', '*MOT: yeah (.) .', '*MOT: when he left here it was after two .', '*FAT: yeah .', "*MOT: and he's going to Earling's [?] house today .", '*FAT: yeah .', "*MOT: and you know he probably didn't get to the library before three thirty .", '*FAT: probably not .', '*FAT: the library closes at +...', '*MOT: five thirty .', '*FAT: five [/] five thirty .', '*MOT: five or five thirty .', "*MOT: I'm sorry I didn't get it .", "*MOT: he was saying if the library wasn't open that's alright .", '*MOT: other kids will be done with the books they took out of the library and [/] and I can look at them and mine .', "*MOT: so social studies isn't the first thing they had in mind .", '*CHI: zzz .', "*MOT: Nathaniel you're crazy ?", '*MOT: when would you have time ?', '*CHI: zzz .', '*CHI: now xxx eat [?] this .', '*MOT: is this [= song he was singing] something you learned in school ?', '*CHI: yes .', '*CHI: Henry knows it .', '*MOT: Henry ?', '*CHI: yeah .', '*CHI: make a cabin .', '*CHI: make your cabin for the song please .', '*MOT: okay .', '*CHI: in your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .', '*CHI: help me !', '*CHI: help me !', '*CHI: the rabbit [///] .', '*CHI: hey !', "*CHI: you're talking quiet .", '*MOT: I know .', "*MOT: I'm trying to learn it .", "*MOT: that's why .", '*MOT: go ahead .', '*CHI: before the hunter shoot me dead (.) little rabbit come inside (.) safely you will hide .', '*CHI: now this cabin .', '*CHI: in the cabin in the woods a little man by the window stood .', '*CHI: rabbit +...', '*MOT: in the cabin in the woods a little man by the window stood .', '*MOT: rabbit +...', '*MOT: go ahead .', '*CHI: saw a rabbit hopping by +...', '*MOT: saw a rabbit hopping by +...', '*CHI: <(rab)bit hopping by> [<] .', '*CHI: quiet as can be (.) help me !', '*CHI: help me !', '*CHI: the rabbit said before the hunter shoots me dead .', '*CHI: little rabbit come inside +...', '*MOT: hunter shoots me dead .', '*MOT: little rabbit come inside +...', '*CHI: safely you will hide .', '*MOT: safely you will hide .', "*CHI: now a big cabin and this time it's gonna be loud .", "*MOT: how's that ?", '*MOT: okay .', '*CHI: in the cabin in the woods +...', '*MOT: in the cabin in the woods +...', '*CHI: a little man by a window stood .', '*CHI: <and while> [>] .', '*MOT: zzz [<] .', "*CHI: the rabbit's hopping by safely you will hide !", "*MOT: you skipped a whole bunch of it more didn't you ?", "*CHI: no I didn't skip any [>] .", "*MOT: <that's a> [/] that's a fun song [<] .", '*CHI: I learned it from Honey [?] .', '*MOT: that was a nice one of Honey .', '*MOT: did you hear that one Daddy ?', '*FAT: I heard it all the way from the other room .', '*MOT: I thought you would .', '*CHI: Daddy want to hear it again ?', '*FAT: no .', "*FAT: I [//] one that I'd like to hear is &-uh love is something if you give it away .", '*FAT: <I like that one> [>] .', '*CHI: zzz [<] .', '*CHI: little ra(bbit) what ?', '*FAT: &-uh I would like to hear love is something if you give it away .', '*FAT: I like that one .', '*CHI: oh .', '*CHI: okay .', '*CHI: do you want hear it too ?', '*MOT: yes .', '*CHI: love is something if you give it away (.) give it away .', '*CHI: love is something if you give it away you end up having more .', "*CHI: it's just like a magic penny (.) hold it tight and you don't have any friends that are near .", '*CHI: have so many and (o)ver (o)ver over the floor .', '*CHI: love is something if you give it away (.) give it away .', '*CHI: love is something if you give it away you end up having more .', '*MOT: oh xxx .', '*CHI: want to hear the other love song ?', '*FAT: no .', '*CHI: if there whirling swirling .', '*FAT: sure .', '*MOT: okay .', '*CHI: love +...', '*CHI: what is love ?', "*CHI: I don't know what is .", '*MOT: only you know this song here .', "*CHI: no I don't .", "*MOT: then you can't sing that one right ?", "*CHI: (be)cause I don't know it .", '*MOT: okay .', '*MOT: when you do learn it better will you sing it to us ?', '*CHI: at Open Center I learn it .', "*MOT: that's the first time I ever heard that second part of love is something that [//] about the penny part (.) ?", '*MOT: I never heard that part before .', "*MOT: that's very pretty .", "*CHI: it's just like a magic penny .", '*MOT: love is like a magic penny .', "*FAT: I'm gonna turn the overhead light off .", "*CHI: sun it's just like a <ma(gic)> [///] why are you turning off the light ?", '*FAT: just [/] just one of them .', '*FAT: you still have the two other lights on in the room .', '*CHI: why did you turn that light off ?', "*FAT: and now it's Daddy's turn to have the lights the way he likes it .", "*FAT: I'll turn the fan back on .", "*MOT: but we don't need the fan .", "*FAT: it's just nice to [/] to have the fan on low .", '*MOT: okay .', "*FAT: I was going to have a [/] a cigarette if that wouldn't be objectionable .", '*MOT: yes .', '*MOT: does that mean you want (t)a be excused ?', '*FAT: no !', "*FAT: I'm gonna come <back to the table> [>] .", '*MOT: <oh bring it> [//] have it here .', "*MOT: oh that's why you wanted the fan on .", '*FAT: yeah .', '*MOT: okay .', '*FAT: I mean if I have_to sit and smoke in the kitchen might as well turn the overhead fan on .', '*MOT: good idea .', '*FAT: yeah (.) .', '*FAT: oh my tummy .', '*MOT: I know .', "*MOT: we're just sitting here eating while +...", "*CHI: <I'm your toy Mom> [<] .", "*FAT: I didn't realize I had eaten that much .", '*MOT: yeah .', "*CHI: here's your toy Mom .", '*CHI: wind &-uh that thing in back (.) of your toy [>] .', "*FAT: I don't want any toys at the table Munchkin .", '*MOT: get away xxx [>] .', "*CHI: it's just on the seat .", "*FAT: I don't want any toys at the table Munchkin .", '*CHI: why ?', '*FAT: if you can be Nathaniel the boy you can sit at the table .', '*FAT: if you want to be a toy you have_to go in your toybox .', '*CHI: &a:h .', "*MOT: it's dinner time not play time .", "*CHI: I'm the teacher .", "*CHI: and I'm doing +/.", '*FAT: &-uh &-uh .', '*CHI: something .', '*FAT: &-uh &-uh .', "*FAT: well you're sitting in the wrong seat then that seat is for Nathaniel the boy .", "*CHI: well I'm pretending it's for &-um the teacher .", "*CHI: I'm pretending it's for the teacher .", "*CHI: I'm just pretending that .", '*FAT: oh .', "*CHI: and I'm pretending that I'm writing a letter to the other teacher who's away .", '*FAT: where is the other teacher away at ?', '*CHI: at home .', '*FAT: oh .', '*CHI: the other teachers is sick .', '*FAT: well teacher I want you to make sure you drink your Quick and I want you to make sure you finish your dinner .', "*CHI: here's a letter .", '*MOT: well what does it say ?', "*CHI: I can't read it until the other teacher comes back +...", '*MOT: okay [>] .', '*CHI: tomorrow [<] .', '*FAT: hey teach make sure you &-uh finish drinking your Quick .', '*MOT: whoa .', '*CHI: zzz .', "*CHI: now today [/] today there [//] the other teacher's back .", '*FAT: do you know if we have a [/] a newer Information Please Almanac ?', "*MOT: I don't think we do that's the only one as far as I know .", '*CHI: no hot(el) (.) the hotel &-um book ?', '*MOT: would that have been something for Dylan to look in ?', '*FAT: yeah .', '*MOT: is that why you <pulled it out> [>] ?', '*CHI: <the hotel > [<] +...', "*MOT: I didn't even think of that .", '*CHI: the hotel &-uh book ?', "*MOT: no that's not a book about hotels .", '*CHI: zzz .', "*MOT: it's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .", "*CHI: okay <I'll do it> [>] .", '*MOT: please wipe your hand with it because you [/] you keep touching your eyes and your hands are greasy .', "*MOT: <th(at)> [/] that's right .", "*MOT: take Dylan's napkin .", "*MOT: I'll do [?] another one .", '*CHI: I steal it from him .', '*MOT: okay and I will replace it .', '*MOT: when he comes for dinner .', '*CHI: zzz .', "*CHI: he'll have no napkins for get clean .", '*CHI: zzz .', '*MOT: oh greedy brother you .', "*CHI: <I'm> [/] I'm Ernie .", "*CHI: Bert <foll(ow)> [//] it's a game called follow the arrow .", '*CHI: play it .', '*MOT: Follow_The_Arrows ?', '*CHI: yeah .', '*CHI: this bird .', '*CHI: zzz (.) .', "*CHI: he doesn't do that .", '*CHI: he says zzz@q .', '*MOT: &-um .', '*CHI: try that .', "*MOT: I think maybe we should celebrate Brook's birthday today even though we don't have a cake .", '*FAT: alright .', '*CHI: <we could make one> [>] .', '*FAT: <I was> [/] [<] .', '*FAT: I was just looking at the suicide rates around <the world> [>] .', '*CHI: <we could> [<] .', '*CHI: make a cake with eggs [>] .', '*MOT: for nineteen seventy three ?', "*CHI: <we'll> [<] .", '*CHI: need <eggs to make a cake> [>] .', "*FAT: <no that's from nineteen seventy one> [<] .", '*MOT: oh .', '*MOT: up (un)til nineteen seventy one ?', '*FAT: yeah .', '*FAT: and Mexico has the lowest suicide rate at one point six per thousand and Hungary has the highest at twenty nine point six per one hundred thousand .', '*CHI: zzz [<] .', '*MOT: mhm .', '*MOT: I wonder what [/] what [/] what it is xxx about those countries .', "*FAT: I don't know .", '*FAT: Ireland has a very low +/.', '*CHI: Mommy ?', '*FAT: rate .', '*CHI: you know what ?', "*FAT: West Berlin has an astronomical rate but the rest <of West Germany doesn't have a> [/] a huge rate .", "*CHI: <I'm trying to talk to Mom> [<] .", '*MOT: what is it Honey ?', '*CHI: well (.) do we have any eggs ?', '*MOT: yes (.) .', "*MOT: Honey we don't have time to make a cake tonight .", '*MOT: Daddy and I both have a lot of things to do .', "*MOT: so Brook doesn't eat cake .", '*MOT: and we have other sweets .', '*MOT: I think (.) I have a can of cat food I bought for Brook and I have that present that I got him ?', "*MOT: the rabbit's foot .", '*CHI: yeah did you get a purple one for him ?', '*MOT: no .', '*MOT: I just got him that orange one .', '*MOT: so we can sing happy birthday to him and we can eat our own sweets .', '*MOT: we can give him the can of cat+food .', "*MOT: it's a new flavor that they make .", '*CHI: oh well what ?', "*CHI: <McDonald's> [>] ?", "*MOT: and he'll have_to share his with Liz .", "*CHI: McDonald's ?", "*MOT: no it's cat food .", "*MOT: it's a new flavor I got him [>] .", '*CHI: zzz [<] .', '*MOT: White fish ocean white fish flavor .', '*CHI: zzz .', '*MOT: xxx [>] .', '*CHI: does cats like to eat ocean white flavor [<] ?', "*MOT: well we'll find out .", '*MOT: <I> [/] I imagine they do (.) .', "*MOT: so we should do that today (be)cause it's going to be a very busy week .", '*CHI: yup .', '*CHI: for me too .', '*MOT: yeah .', '*CHI: very [!] busy week for me (.) .', "*CHI: it's a very busy wake [//] week for us [/] us three .", '*MOT: I had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .', '*FAT: tonight ?', "*MOT: it was &-um one of these &-uh the math class schedule we'll be having .", '*MOT: but <I knew> [//] I just took it tentatively and I &-uh told Kathy +/.', '*CHI: zzz .', '*MOT: I might have_to cancel so <she just> [>] xxx and I called her Friday .', '*CHI: zzz [<] .', '*FAT: yeah .', "*MOT: so she would have time before she goes away &-uh it's vacation time you know .", '*MOT: the &-uh colleges have their &-uh spring vacation this coming week [>] .', '*CHI: xxx [<] .', '*FAT: mhm .', '*CHI: Mom what [/] what does they call its name ?', '*FAT: it says information please almanac atlas and yearbook .', '*MOT: &-uh except not Mass Eye I guess .', "*MOT: (be)cause I'm working at Mass Eye this week .", '*FAT: yeah .', '*FAT: I guess so .', "*CHI: <I guess m(om)> [/] (.) I guess that's my show .", '*MOT: what Honey ?', "*CHI: I guess that's my show .", '*MOT: what is ?', '*CHI: that show xxx .', "*MOT: I don't know what it is that's on television .", '*MOT: well thanks Hon .', "*FAT: you're welcome Love (.) .", "*FAT: we can put Bro's dinner away and he can have it when he gets back .", '*MOT: okay (.) .', "*MOT: think that's enough chicken for him ?", '*FAT: mm .', '*MOT: www .', '*FAT: www .', '*CHI: zzz .', '*FAT: Chi !', '*MOT: should we +...', "*FAT: what's that ?", '*MOT: should we &-uh turn that [= the tape recorder] off ?', '*FAT: no .', '*FAT: Chi !', '*FAT: Chi !', '*CHI: what ?', '*FAT: get back in here !', '*CHI: what ?', '*FAT: where did you go ?', '*CHI: in the living room .', '*FAT: I want you to finish up .', '*CHI: finish up what ?', '*FAT: eating .', '*MOT: zzz .', '*CHI: oh .', "*CHI: I'm a busy bee .", '*CHI: the big +...', '*FAT: and could you sit [///] put your fishing rod down Honey .', '*CHI: okay .', '*CHI: xxx .', '*FAT: seven seventeen federal prisoners .', '*CHI: gum drop gum drop .', '*CHI: not by the hair of my gum gum drop .', '*MOT: maybe we should have told him to look up <something like> [//] do something like that and then update it in the library .', '*FAT: yeah .', "*FAT: I thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .", "*MOT: I don't remember it at all .", '*FAT: xxx .', '*MOT: good boy .', '*CHI: zzz .', '*MOT: oh yucky boy !', '*MOT: put it on the plate .', '*MOT: did you put too much in your mouth ?', "*MOT: there's a napkin use a napkin (.) .", '*MOT: okay .', '*MOT: whatever you have_to do Than .', '*MOT: you need to spit it out spit it out .', '*MOT: this dinner was something [!] .', '*CHI: zzz .', '*MOT: kind of yucky you know (.) ?', '*MOT: are you all done ?', '*CHI: yeah .', '*CHI: yes .', '*MOT: is your milk finished ?', '*CHI: want me to show ?', '*MOT: good yes (.) .', '*MOT: oh good thank you very much .', '*MOT: let me roll up your sleeves so you can wash them .', '*CHI: I did .', '*MOT: okay .', '*MOT: both of them ?', '*CHI: yes .']
loading solution set
LINE NO ->  14
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d0e0>)
[('xxx', 'RB'), ('yellow', 'JJ'), ('and', 'CC'), ('bl', 'JJ'), ('ue', 'JJ'), ('blue', 'NN'), ('and', 'CC'), ('green', 'JJ'), ('and', 'CC'), ('red', 'JJ')]
['yellow']
('food -> ', [])
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d5a8>)
[('xxx', 'RB'), ('yellow', 'JJ'), ('and', 'CC'), ('bl', 'JJ'), ('ue', 'JJ'), ('blue', 'NN'), ('and', 'CC'), ('green', 'JJ'), ('and', 'CC'), ('red', 'JJ')]
['green']
('food -> ', [])
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453fe638>)
[('xxx', 'RB'), ('yellow', 'JJ'), ('and', 'CC'), ('bl', 'JJ'), ('ue', 'JJ'), ('blue', 'NN'), ('and', 'CC'), ('green', 'JJ'), ('and', 'CC'), ('red', 'JJ')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  19
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0})
LINE NO ->  26
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  29
LINE NO ->  32
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947104998>)
[('you', 'PRP'), ('may', 'MD'), ('wh', 'VB'), ('ile', 'NN'), ('just', 'RB'), ('while', 'IN'), ('i', 'NNS'), ('s', 'VBP'), ('cut', 'VBN'), ('up', 'RP'), ('the', 'DT'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0})
LINE NO ->  37
LINE NO ->  40
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  43
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  50
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  53
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  61
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  66
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  67
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  70
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  73
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  81
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  84
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  95
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  99
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  104
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  109
LINE NO ->  110
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  113
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0})
LINE NO ->  118
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  119
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  124
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  127
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  128
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  131
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  136
biscuits
biscuits biscuits 263
[('xxx', 'NN'), ('and', 'CC'), ('um', 'JJ'), ('biscuits', 'NNS')]
['biscuits']
('food -> ', [['biscuits', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  139
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  142
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  146
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  149
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  153
LINE NO ->  157
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  160
LINE NO ->  163
strawberry
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c2c68>)
[('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('strawberry', 'NN'), ('or', 'CC'), ('chocolate', 'NN')]
['strawberry']
('food -> ', [])
chocolate
chocolate chocolate 598
[('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('strawberry', 'NN'), ('or', 'CC'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  167
chocolate
chocolate chocolate 598
[('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  170
chicken
chicken chicken 234
[('so', 'RB'), ('how', 'WRB'), ('s', 'JJ'), ('the', 'DT'), ('chicken', 'NN'), ('look', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  174
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  177
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0})
LINE NO ->  187
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  191
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  194
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  198
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  203
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  206
LINE NO ->  209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  212
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  215
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  222
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  226
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  231
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  235
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  238
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 1, 95: 1, 96: 1, 97: 1, 98: 0, 99: 1, 100: 1, 101: 1, 102: 0, 103: 0, 104: 0, -1: 1})
LINE NO ->  245
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  250
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  254
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  257
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  260
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  263
LINE NO ->  265
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  269
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  275
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0})
LINE NO ->  292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  301
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  308
chicken
chicken chicken 234
[('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('too', 'RB')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  312
LINE NO ->  316
chicken
chicken chicken 234
[('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('should', 'MD'), ('be', 'VB'), ('pretty', 'JJ'), ('cool', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  319
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, -1: 1})
LINE NO ->  329
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  338
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  341
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, -1: 1})
LINE NO ->  348
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  352
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0})
LINE NO ->  358
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  362
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  366
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  369
LINE NO ->  372
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0})
LINE NO ->  380
LINE NO ->  382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  386
chicken
chicken chicken 234
[('i', 'JJ'), ('m', 'NN'), ('afraid', 'VBD'), ('the', 'DT'), ('chicken', 'NN'), ('is', 'VBZ'), ('uh', 'JJ'), ('not', 'RB'), ('as', 'RB'), ('well', 'RB'), ('cooked', 'VBN'), ('as', 'IN'), ('as', 'RB'), ('usual', 'JJ')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0})
LINE NO ->  392
biscuits
biscuits biscuits 263
[('well', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('it', 'PRP'), ('s', 'VBZ'), ('probably', 'RB'), ('better', 'RBR'), ('cooked', 'VBN'), ('than', 'IN'), ('the', 'DT'), ('biscuits', 'NNS'), ('though', 'IN')]
['biscuits']
('food -> ', [['biscuits', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0})
LINE NO ->  398
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  401
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  406
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  409
barbecue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472abb00>)
[('well', 'RB'), ('i', 'RB'), ('told', 'VBD'), ('nathaniel', 'CC'), ('that', 'IN'), ('going', 'VBG'), ('out', 'IN'), ('to', 'TO'), ('barbecue', 'VB'), ('saves', 'NNS'), ('more', 'JJR'), ('of', 'IN'), ('a', 'DT'), ('symbolic', 'JJ'), ('cash', 'NN'), ('than', 'IN'), ('after', 'IN'), ('it', 'PRP'), ('was', 'VBD'), ('started', 'VBN'), ('barbecuing', 'VBG'), ('season', 'NN')]
['barbecue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 1, 81: 1, 82: 1, 83: 1, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 1, 123: 1, 124: 1, 125: 1, 126: 1, 127: 1, 128: 0, 129: 0, 130: 0})
LINE NO ->  419
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  424
chicken
chicken chicken 234
[('how', 'WRB'), ('s', 'VBZ'), ('the', 'DT'), ('chicken', 'NN'), ('munchkin', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  429
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  435
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  440
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  443
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  446
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  451
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  454
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  460
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  463
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  469
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  473
LINE NO ->  477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  480
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  484
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  487
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  491
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  494
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  500
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  503
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  506
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  509
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  512
honey
honey honey 304
[('do', 'VBP'), ('you', 'PRP'), ('have', 'VB'), ('to', 'TO'), ('use', 'VB'), ('the', 'DT'), ('bath', 'NN'), ('room', 'NN'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  518
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  521
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, -1: 1})
LINE NO ->  531
LINE NO ->  534
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  537
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  543
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  546
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  550
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  558
LINE NO ->  561
LINE NO ->  565
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  569
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  573
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  576
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  580
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  583
biscuits
biscuits biscuits 263
[('the', 'DT'), ('bi', 'NN'), ('s', 'NN'), ('cuits', 'VBZ'), ('the', 'DT'), ('biscuits', 'NNS'), ('aren', 'VBP'), ('t', 'NN'), ('burned', 'VBD')]
['biscuits']
('food -> ', [['biscuits', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  586
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0})
LINE NO ->  591
LINE NO ->  594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  597
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 1, 102: 1, 103: 1, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, -1: 1})
LINE NO ->  604
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  607
LINE NO ->  611
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c27a0>)
[('well', 'RB'), ('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('that', 'DT'), ('light', 'JJ'), ('golden', 'JJ'), ('brown', 'NN'), ('across', 'IN'), ('the', 'DT'), ('top', 'NN')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0})
LINE NO ->  616
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722e368>)
[('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('light', 'JJ'), ('golden', 'JJ'), ('brown', 'NN')]
['brown']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  619
brown
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472523b0>)
[('it', 'PRP'), ('s', 'VBZ'), ('medium', 'JJ'), ('golden', 'JJ'), ('brown', 'NN')]
['brown']
('food -> ', [])
medium
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722e1b8>)
[('it', 'PRP'), ('s', 'VBZ'), ('medium', 'JJ'), ('golden', 'JJ'), ('brown', 'NN')]
['medium']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  622
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  625
LINE NO ->  628
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  636
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  639
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  644
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  647
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  651
LINE NO ->  655
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  659
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  663
LINE NO ->  667
LINE NO ->  671
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0})
LINE NO ->  676
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  680
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  684
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0})
LINE NO ->  689
LINE NO ->  692
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  695
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  701
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  708
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  711
LINE NO ->  714
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, -1: 1})
LINE NO ->  721
LINE NO ->  724
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  727
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  731
LINE NO ->  734
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  737
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  742
LINE NO ->  746
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  749
chicken
chicken chicken 234
[('oh', 'IN'), ('the', 'DT'), ('chicken', 'NN'), ('s', 'NN'), ('xxx', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  752
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  756
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  759
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  765
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  769
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  774
barbecue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c2b90>)
[('usually', 'RB'), ('the', 'DT'), ('first', 'JJ'), ('barbecue', 'NN'), ('of', 'IN'), ('the', 'DT'), ('year', 'NN'), ('the', 'DT'), ('chicken', 'NN'), ('isn', 'NN'), ('t', 'NN'), ('cooked', 'VBD'), ('right', 'JJ'), ('it', 'PRP'), ('takes', 'VBZ'), ('a', 'DT'), ('couple', 'NN'), ('times', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('warm', 'NN'), ('weather', 'NN')]
['barbecue']
('food -> ', [])
chicken
chicken chicken 234
[('usually', 'RB'), ('the', 'DT'), ('first', 'JJ'), ('barbecue', 'NN'), ('of', 'IN'), ('the', 'DT'), ('year', 'NN'), ('the', 'DT'), ('chicken', 'NN'), ('isn', 'NN'), ('t', 'NN'), ('cooked', 'VBD'), ('right', 'JJ'), ('it', 'PRP'), ('takes', 'VBZ'), ('a', 'DT'), ('couple', 'NN'), ('times', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('warm', 'NN'), ('weather', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 0, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 1, 121: 1, 122: 1, 123: 1, 124: 1, 125: 1, 126: 1, 127: 0, 128: 0, 129: 0, -1: 1})
LINE NO ->  783
barbecue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947252248>)
[('in', 'IN'), ('the', 'DT'), ('warm', 'JJ'), ('weather', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('still', 'RB'), ('cook', 'VB'), ('it', 'PRP'), ('and', 'CC'), ('just', 'RB'), ('stay', 'VB'), ('out', 'RB'), ('there', 'RB'), ('with', 'IN'), ('the', 'DT'), ('barbecue', 'NN')]
['barbecue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 0, 90: 0, 91: 0, -1: 1})
LINE NO ->  790
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  793
sucker
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b61b8>)
[('in', 'IN'), ('the', 'DT'), ('cold', 'JJ'), ('weather', 'NN'), ('you', 'PRP'), ('say', 'VBP'), ('let', 'VB'), ('s', 'JJ'), ('cook', 'VB'), ('this', 'DT'), ('sucker', 'NN'), ('fast', 'NN')]
['sucker']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  798
LINE NO ->  800
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0})
LINE NO ->  803
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0})
LINE NO ->  811
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  814
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  817
LINE NO ->  820
LINE NO ->  823
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, -1: 1})
LINE NO ->  829
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  832
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  835
LINE NO ->  836
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  839
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 1, 122: 1, 123: 1, 124: 0, 125: 0, 126: 0})
LINE NO ->  848
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0})
LINE NO ->  853
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  856
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  860
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  865
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  868
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  871
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  875
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  878
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  883
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  888
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  893
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  896
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  899
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  902
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  906
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  910
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  913
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0})
LINE NO ->  918
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  924
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  928
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  931
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 1, 86: 0, 87: 0, 88: 0})
LINE NO ->  938
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  942
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  948
LINE NO ->  952
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  958
LINE NO ->  961
LINE NO ->  964
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  969
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  972
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  977
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  981
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0})
LINE NO ->  986
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  989
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  992
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  996
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  999
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1003
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d0e0>)
[('no', 'DT'), ('toys', 'NN'), ('at', 'IN'), ('our', 'PRP$'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1006
LINE NO ->  1010
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b6d88>)
[('no', 'DT'), ('toys', 'NN'), ('at', 'IN'), ('our', 'PRP$'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1014
LINE NO ->  1017
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b6fc8>)
[('i', 'NN'), ('didn', 'NN'), ('t', 'VBP'), ('play', 'VB'), ('any', 'DT'), ('toy', 'NN'), ('at', 'IN'), ('our', 'PRP$'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1022
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1027
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  1033
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 1, 91: 1, 92: 1, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0})
LINE NO ->  1040
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  1043
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1047
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0})
LINE NO ->  1053
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1057
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  1061
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1065
LINE NO ->  1069
LINE NO ->  1072
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1076
LINE NO ->  1079
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1083
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1086
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1091
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1096
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1099
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1102
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1105
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1107
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 1, 81: 1, 82: 1, 83: 0, 84: 0, 85: 0})
LINE NO ->  1114
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1117
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0})
LINE NO ->  1122
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1127
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  1132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1136
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 1, 205: 1, 206: 1, 207: 1, 208: 1, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 223: 0, 224: 0, 225: 0, 226: 0, 227: 0, 228: 0, 229: 0, 230: 0, 231: 0, 232: 0, 233: 0, 234: 0, 235: 0, 236: 0, 237: 0, 238: 0, 239: 0, 240: 0, 241: 0, 242: 0, 243: 1, 244: 1, 245: 1, 246: 1, 247: 1, 248: 1, 249: 1, 250: 0, 251: 0, 252: 0, 253: 0, 254: 0, 255: 0, 256: 0, 257: 0, 258: 0, 259: 0, 260: 0, 261: 0, 262: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0, 268: 0, 269: 0, 270: 0, 271: 0, 272: 0, 273: 0, 274: 0, 275: 0, 276: 0, 277: 0, 278: 0, 279: 0, 280: 0, 281: 0, 282: 0, 283: 0, 284: 0, 285: 0, 286: 0, 287: 0, 288: 0, 289: 0, 290: 0, 291: 0, 292: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 298: 0, 299: 0, 300: 0, 301: 0, 302: 0, 303: 0, 304: 0, 305: 0, 306: 0, 307: 0, 308: 0, 309: 0, 310: 0, 311: 0, 312: 0, 313: 0, 314: 0, 315: 0, 316: 0, 317: 0, 318: 0, 319: 0, 320: 0, 321: 0, 322: 0, 323: 0, 324: 0, 325: 0, 326: 0, 327: 0, 328: 0, 329: 0, 330: 0, -1: 1})
LINE NO ->  1155
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1158
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1167
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1170
honey
honey honey 304
[('we', 'PRP'), ('gave', 'VBD'), ('her', 'PRP'), ('her', 'PRP$'), ('birthday', 'JJ'), ('present', 'JJ'), ('honey', 'NN'), ('in', 'IN'), ('august', 'NN'), ('when', 'WRB'), ('she', 'PRP'), ('had', 'VBD'), ('her', 'PRP'), ('birthday', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  1176
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, -1: 1})
LINE NO ->  1184
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1188
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1191
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  1198
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  1203
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  1208
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1212
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  1217
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1220
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1223
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  1229
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  1234
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1239
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1242
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 1, 138: 1, 139: 1, 140: 1, 141: 1, 142: 1, 143: 1, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, -1: 1})
LINE NO ->  1252
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1257
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  1263
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  1266
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1271
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1274
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 1, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, -1: 1})
LINE NO ->  1280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  1290
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1293
LINE NO ->  1297
LINE NO ->  1300
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1303
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1306
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  1309
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0})
LINE NO ->  1316
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1326
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1329
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1332
LINE NO ->  1335
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1338
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1342
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1346
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1349
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1352
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0})
LINE NO ->  1360
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1363
LINE NO ->  1366
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  1375
LINE NO ->  1379
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1385
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0})
LINE NO ->  1391
LINE NO ->  1394
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1398
LINE NO ->  1402
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1405
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  1410
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1415
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 1, 93: 1, 94: 1, 95: 0, 96: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 0, 103: 1, 104: 1, 105: 1, 106: 0, 107: 0, 108: 0, -1: 1})
LINE NO ->  1421
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1424
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1427
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1431
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  1436
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1439
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1442
LINE NO ->  1445
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  1450
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1453
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1456
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1459
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1463
chicken
chicken chicken 234
[('want', 'VB'), ('another', 'DT'), ('piece', 'NN'), ('of', 'IN'), ('chicken', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1467
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1470
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1473
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1477
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1480
LINE NO ->  1483
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1485
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1489
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1493
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1497
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1500
LINE NO ->  1503
biscuits
biscuits biscuits 263
[('i', 'NNS'), ('like', 'VBP'), ('to', 'TO'), ('wrap', 'VB'), ('the', 'DT'), ('biscuits', 'NNS'), ('and', 'CC'), ('have', 'VBP'), ('chicken', 'VBN'), ('and', 'CC'), ('biscuits', 'NNS')]
['biscuits']
('food -> ', [['biscuits', 'Baked Products']])
chicken
chicken chicken 234
[('i', 'NNS'), ('like', 'VBP'), ('to', 'TO'), ('wrap', 'VB'), ('the', 'DT'), ('biscuits', 'NNS'), ('and', 'CC'), ('have', 'VBP'), ('chicken', 'VBN'), ('and', 'CC'), ('biscuits', 'NNS')]
['chicken']
('food -> ', [['biscuits', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  1508
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, -1: 1})
LINE NO ->  1515
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1520
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1523
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1526
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1529
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1532
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1537
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  1544
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1547
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  1553
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1556
LINE NO ->  1559
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1563
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1566
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1569
LINE NO ->  1572
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1575
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1578
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  1583
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1586
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1590
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  1595
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945399638>)
[('i', 'NN'), ('think', 'VBP'), ('it', 'PRP'), ('s', 'VBZ'), ('the', 'DT'), ('fan', 'NN'), ('uh', 'NN'), ('that', 'IN'), ('you', 'PRP'), ('must', 'MD'), ('hear', 'VB')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1600
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1603
LINE NO ->  1606
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1610
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1613
LINE NO ->  1616
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  1619
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  1622
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0})
LINE NO ->  1637
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  1642
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  1646
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  1651
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1654
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  1659
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1662
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1665
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1670
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1673
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1678
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1681
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, -1: 1})
LINE NO ->  1687
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1690
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  1693
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1696
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1699
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1702
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  1708
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  1714
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 1, 110: 1, 111: 1, 112: 1, 113: 0, 114: 0, 115: 0, -1: 1})
LINE NO ->  1723
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  1728
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1732
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1736
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1740
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1744
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1747
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  1752
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1755
LINE NO ->  1758
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1762
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1765
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1768
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1772
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1775
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945399bd8>)
[('in', 'IN'), ('your', 'PRP$'), ('cabin', 'NN'), ('in', 'IN'), ('the', 'DT'), ('wood', 'NN'), ('a', 'DT'), ('little', 'JJ'), ('man', 'NN'), ('by', 'IN'), ('a', 'DT'), ('window', 'NN'), ('stood', 'VBD'), ('saw', 'VBD'), ('a', 'DT'), ('rabbit', 'NN'), ('hopping', 'NN'), ('by', 'IN'), ('quiet', 'JJ'), ('as', 'IN'), ('can', 'MD'), ('be', 'VB')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 0, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, -1: 1})
LINE NO ->  1785
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1788
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1791
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472cb098>)
[('the', 'DT'), ('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1795
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1798
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1801
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1804
LINE NO ->  1807
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1810
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1813
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472cbc68>)
[('before', 'IN'), ('the', 'DT'), ('hunter', 'NN'), ('shoot', 'NN'), ('me', 'PRP'), ('dead', 'JJ'), ('little', 'JJ'), ('rabbit', 'NN'), ('come', 'VB'), ('inside', 'IN'), ('safely', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('hide', 'VB')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, -1: 1})
LINE NO ->  1820
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1823
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1828
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c2128>)
[('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1832
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1837
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d878>)
[('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1841
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1844
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947252050>)
[('saw', 'VBD'), ('a', 'DT'), ('rabbit', 'NN'), ('hopping', 'NN'), ('by', 'IN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1848
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472529e0>)
[('saw', 'VBD'), ('a', 'DT'), ('rabbit', 'NN'), ('hopping', 'NN'), ('by', 'IN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1851
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  1855
LINE NO ->  1859
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1863
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722e7a0>)
[('the', 'DT'), ('rabbit', 'NN'), ('said', 'VBD'), ('before', 'IN'), ('the', 'DT'), ('hunter', 'NN'), ('shoots', 'VB'), ('me', 'PRP'), ('dead', 'JJ')]
['rabbit']
('food -> ', [])
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472527e8>)
[('the', 'DT'), ('rabbit', 'NN'), ('said', 'VBD'), ('before', 'IN'), ('the', 'DT'), ('hunter', 'NN'), ('shoots', 'VB'), ('me', 'PRP'), ('dead', 'JJ')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1868
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722e5a8>)
[('little', 'JJ'), ('rabbit', 'NN'), ('come', 'VB'), ('inside', 'IN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1872
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b6d40>)
[('hunter', 'NN'), ('shoots', 'NNS'), ('me', 'PRP'), ('dead', 'JJ')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1875
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b6998>)
[('little', 'JJ'), ('rabbit', 'NN'), ('come', 'VB'), ('inside', 'IN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1879
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1883
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1887
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1892
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1896
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1899
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1903
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1907
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1912
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1915
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1919
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945399dd0>)
[('the', 'DT'), ('rabbit', 'NN'), ('s', 'JJ'), ('hopping', 'NN'), ('by', 'IN'), ('safely', 'RB'), ('you', 'PRP'), ('will', 'MD'), ('hide', 'VB')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  1925
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1933
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  1936
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  1939
honey
honey honey 304
[('i', 'NN'), ('learned', 'VBD'), ('it', 'PRP'), ('from', 'IN'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1942
honey
honey honey 304
[('that', 'DT'), ('was', 'VBD'), ('a', 'DT'), ('nice', 'JJ'), ('one', 'CD'), ('of', 'IN'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1946
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1950
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  1955
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1958
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1962
LINE NO ->  1965
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, -1: 1})
LINE NO ->  1972
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1975
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1979
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1983
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0})
LINE NO ->  1988
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1991
LINE NO ->  1994
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1997
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2002
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2005
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  2011
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  2018
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0})
LINE NO ->  2026
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  2032
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  2038
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  2045
LINE NO ->  2049
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  2053
LINE NO ->  2056
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  2060
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2063
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2066
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2070
LINE NO ->  2074
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2078
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  2081
LINE NO ->  2084
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2090
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2093
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2096
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  2102
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2105
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 1, 111: 1, 112: 1, 113: 0, 114: 0, 115: 0, -1: 1})
LINE NO ->  2114
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2117
LINE NO ->  2120
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  2124
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  2127
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  2132
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0})
LINE NO ->  2140
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2143
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  2148
LINE NO ->  2153
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, -1: 1})
LINE NO ->  2160
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94704d9e0>)
[('i', 'NN'), ('ll', 'VBP'), ('turn', 'VBP'), ('the', 'DT'), ('fan', 'NN'), ('back', 'RB'), ('on', 'IN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  2163
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945399950>)
[('but', 'CC'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('need', 'VBP'), ('the', 'DT'), ('fan', 'NN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2166
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c53b0>)
[('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('nice', 'JJ'), ('to', 'TO'), ('to', 'TO'), ('have', 'VB'), ('the', 'DT'), ('fan', 'NN'), ('on', 'IN'), ('low', 'JJ')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  2171
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2174
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  2180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2183
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  2188
LINE NO ->  2191
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94704d3b0>)
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('come', 'VB'), ('back', 'RB'), ('to', 'TO'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  2196
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  2199
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945399b90>)
[('oh', 'UH'), ('that', 'DT'), ('s', 'VBP'), ('why', 'WRB'), ('you', 'PRP'), ('wanted', 'VBD'), ('the', 'DT'), ('fan', 'NN'), ('on', 'IN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  2204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2210
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947104c20>)
[('i', 'JJ'), ('mean', 'VBP'), ('if', 'IN'), ('i', 'NNS'), ('have', 'VBP'), ('to', 'TO'), ('sit', 'VB'), ('and', 'CC'), ('smoke', 'VB'), ('in', 'IN'), ('the', 'DT'), ('kitchen', 'NN'), ('might', 'MD'), ('as', 'RB'), ('well', 'RB'), ('turn', 'IN'), ('the', 'DT'), ('overhead', 'JJ'), ('fan', 'NN'), ('on', 'IN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 1, 88: 1, 89: 1, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, -1: 1})
LINE NO ->  2217
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  2220
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2223
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2227
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  2230
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  2235
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  2239
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  2244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  2250
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0})
LINE NO ->  2255
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472a4518>)
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('toys', 'NNS'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('munchkin', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  2260
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  2265
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  2268
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945399638>)
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('toys', 'NNS'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('munchkin', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  2273
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2277
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947104cf8>)
[('if', 'IN'), ('you', 'PRP'), ('can', 'MD'), ('be', 'VB'), ('nathaniel', 'VBN'), ('the', 'DT'), ('boy', 'NN'), ('you', 'PRP'), ('can', 'MD'), ('sit', 'VB'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  2282
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  2288
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2289
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  2293
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2299
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  2300
LINE NO ->  2303
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  2304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 1, 81: 1, 82: 1, 83: 0, 84: 0, 85: 0})
LINE NO ->  2311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  2316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  2321
LINE NO ->  2324
LINE NO ->  2327
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, -1: 1})
LINE NO ->  2334
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2339
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2342
LINE NO ->  2345
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  2348
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 113: 1, 114: 0, 115: 0, 116: 0})
LINE NO ->  2357
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2360
LINE NO ->  2364
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  2369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2372
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  2380
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2383
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2387
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  2392
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  2398
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  2406
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  2410
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  2415
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2418
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  2422
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  2425
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  2428
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  2432
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  2437
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2441
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 1, 91: 1, 92: 1, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 1, 116: 1, 117: 1, 118: 1, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, -1: 1})
LINE NO ->  2451
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  2454
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0})
LINE NO ->  2462
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  2465
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2468
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2474
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  2477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2480
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2484
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  2489
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2493
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  2496
LINE NO ->  2499
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  2506
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  2511
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  2515
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2521
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2525
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2528
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2532
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  2536
cake
cake cake 412
[('i', 'NN'), ('think', 'VBP'), ('maybe', 'RB'), ('we', 'PRP'), ('should', 'MD'), ('celebrate', 'VB'), ('brook', 'NN'), ('s', 'NN'), ('birthday', 'NN'), ('today', 'NN'), ('even', 'RB'), ('though', 'IN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('cake', 'NN')]
['cake']
('food -> ', [['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 1, 92: 1, 93: 1, 94: 1, 95: 0, 96: 0, 97: 0, -1: 1})
LINE NO ->  2543
LINE NO ->  2546
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2549
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  2550
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  2555
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  2558
eggs
eggs eggs 131
[('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('with', 'IN'), ('eggs', 'NNS')]
['eggs']
('food -> ', [['eggs', 'Dairy and Egg Products']])
cake
cake cake 412
[('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('with', 'IN'), ('eggs', 'NNS')]
['cake']
('food -> ', [['eggs', 'Dairy and Egg Products'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2561
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2564
LINE NO ->  2567
eggs
eggs eggs 131
[('need', 'NN'), ('eggs', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN')]
['eggs']
('food -> ', [['eggs', 'Dairy and Egg Products']])
cake
cake cake 412
[('need', 'NN'), ('eggs', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN')]
['cake']
('food -> ', [['eggs', 'Dairy and Egg Products'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2570
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  2575
LINE NO ->  2578
LINE NO ->  2581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2584
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, -1: 1})
LINE NO ->  2594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2598
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2601
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  2606
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2609
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2612
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2616
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2619
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2623
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0})
LINE NO ->  2628
LINE NO ->  2632
honey
honey honey 304
[('what', 'WP'), ('is', 'VBZ'), ('it', 'PRP'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  2636
eggs
eggs eggs 131
[('well', 'RB'), ('do', 'VBP'), ('we', 'PRP'), ('have', 'VB'), ('any', 'DT'), ('eggs', 'NNS')]
['eggs']
('food -> ', [['eggs', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  2640
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2643
honey
honey honey 304
[('honey', 'NN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('have', 'VBP'), ('time', 'NN'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('tonight', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
cake
cake cake 412
[('honey', 'NN'), ('we', 'PRP'), ('don', 'VBP'), ('t', 'RB'), ('have', 'VBP'), ('time', 'NN'), ('to', 'TO'), ('make', 'VB'), ('a', 'DT'), ('cake', 'NN'), ('tonight', 'NN')]
['cake']
('food -> ', [['honey', 'Sweets'], ['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0})
LINE NO ->  2648
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  2653
cake
cake cake 412
[('so', 'RB'), ('brook', 'JJ'), ('doesn', 'NN'), ('t', 'NN'), ('eat', 'NN'), ('cake', 'NN')]
['cake']
('food -> ', [['cake', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2656
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2659
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, -1: 1})
LINE NO ->  2669
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947276f80>)
[('the', 'DT'), ('rabbit', 'NN'), ('s', 'JJ'), ('foot', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  2672
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  2678
LINE NO ->  2681
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472cb710>)
[('i', 'NN'), ('just', 'RB'), ('got', 'VBD'), ('him', 'PRP'), ('that', 'IN'), ('orange', 'NN'), ('one', 'CD')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2685
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  2692
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  2697
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  2702
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2706
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  2710
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  2715
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2719
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  2722
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  2727
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2731
white fish
white fish white fish 119
[('white', 'JJ'), ('fish', 'JJ'), ('ocean', 'NN'), ('white', 'JJ'), ('fish', 'JJ'), ('flavor', 'NN')]
['white', 'fish']
('food -> ', [['white fish', 'Finfish and Shellfish Products']])
fish
fish fish 305
[('white', 'JJ'), ('fish', 'JJ'), ('ocean', 'NN'), ('white', 'JJ'), ('fish', 'JJ'), ('flavor', 'NN')]
['fish']
('food -> ', [['white fish', 'Finfish and Shellfish Products'], ['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  2734
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2738
LINE NO ->  2739
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  2745
LINE NO ->  2748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  2751
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, -1: 1})
LINE NO ->  2758
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2761
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2764
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2767
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  2770
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  2775
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 0, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, -1: 1})
LINE NO ->  2785
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2788
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, -1: 1})
LINE NO ->  2794
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  2800
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2804
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  2809
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2813
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2816
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, -1: 1})
LINE NO ->  2823
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0})
LINE NO ->  2828
LINE NO ->  2830
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2833
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  2838
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  2843
LINE NO ->  2846
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  2851
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2854
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  2857
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  2860
honey
honey honey 304
[('what', 'WP'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  2864
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  2867
LINE NO ->  2871
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2874
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  2879
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  2883
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  2886
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  2893
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2896
chicken
chicken chicken 234
[('think', 'NN'), ('that', 'IN'), ('s', 'VBZ'), ('enough', 'JJ'), ('chicken', 'NN'), ('for', 'IN'), ('him', 'PRP')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  2901
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  2904
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2905
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2906
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2910
LINE NO ->  2914
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  2917
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  2920
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  2923
LINE NO ->  2926
LINE NO ->  2929
LINE NO ->  2932
LINE NO ->  2936
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  2939
LINE NO ->  2944
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  2948
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2951
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  2954
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2958
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2961
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2965
LINE NO ->  2968
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2971
LINE NO ->  2974
honey
honey honey 304
[('and', 'CC'), ('could', 'MD'), ('you', 'PRP'), ('sit', 'VB'), ('put', 'VB'), ('your', 'PRP$'), ('fishing', 'NN'), ('rod', 'VB'), ('down', 'RP'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  2979
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2982
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2983
LINE NO ->  2987
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  2990
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  2995
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0})
LINE NO ->  3003
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3006
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 1, 99: 1, 100: 1, 101: 1, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 1, 116: 1, 117: 1, 118: 1, 119: 1, 120: 1, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, -1: 1})
LINE NO ->  3016
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  3020
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3022
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  3026
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3030
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  3034
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  3037
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  3044
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  3048
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3051
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  3054
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  3059
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  3063
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3067
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  3071
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  3075
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3078
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  3081
milk
milk milk 46
[('is', 'VBZ'), ('your', 'PRP$'), ('milk', 'NN'), ('finished', 'VBN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  3085
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  3089
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  3092
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  3095
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  3100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  3103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  3106
LINE NO ->  3110
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
loading solution set
calculating
set([(317, (10, 17)), (2568, (27, 31)), (2568, (12, 16)), (2716, (6, 14)), (2707, (7, 15)), (2988, (15, 23)), (750, (13, 20)), (168, (6, 15)), (2732, (6, 16)), (150, (32, 37)), (425, (16, 23)), (2349, (58, 63)), (2559, (13, 17)), (2988, (6, 14)), (1504, (55, 63)), (775, (53, 60)), (309, (10, 17)), (584, (32, 40)), (2376, (56, 61)), (2537, (91, 95)), (2637, (30, 34)), (137, (19, 27)), (171, (19, 26)), (2991, (32, 40)), (2559, (23, 27)), (393, (59, 67)), (161, (6, 11)), (3082, (14, 18)), (164, (18, 28)), (2897, (26, 33)), (2654, (27, 31)), (2732, (23, 33)), (1504, (43, 50)), (1504, (25, 33)), (33, (63, 67)), (1092, (30, 35)), (2644, (41, 45)), (1464, (28, 35)), (387, (25, 32)), (164, (32, 41))])
[((33, (63, 67)), '*MOT:\tyou may <wh(ile)> [//] just while I <&s> [//] cut up the meat .\n'), ((137, (19, 27)), '*MOT:\txxx and &-um biscuits .\n'), ((150, (32, 37)), '*FAT:\t&-uh (.) do you want some Quick ?\n'), ((161, (6, 11)), '*CHI:\tQuick .\n'), ((164, (18, 28)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((164, (32, 41)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((168, (6, 15)), '*CHI:\tchocolate .\n'), ((171, (19, 26)), "*MOT:\tso how's the chicken look ?\n"), ((309, (10, 17)), '*CHI:\tthe chicken is too ?\n'), ((317, (10, 17)), '*MOT:\tthe chicken is [//] should be pretty cool .\n'), ((387, (25, 32)), "*FAT:\tI'm afraid the (.) chicken is &-uh (.) not as well cooked as [/] as usual .\n"), ((393, (59, 67)), "*MOT:\twell <it's> [/] it's probably better cooked than the biscuits though .\n"), ((425, (16, 23)), "*FAT:\thow's the chicken Munchkin ?\n"), ((584, (32, 40)), "*FAT:\t<the bi(s)cuits> [//] the biscuits aren't burned .\n"), ((750, (13, 20)), "*MOT:\toh the chicken's xxx .\n"), ((775, (53, 60)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((1092, (30, 35)), '*FAT:\t(a)re you drinking your Quick ?\n'), ((1464, (28, 35)), '*MOT:\twant another piece of chicken ?\n'), ((1504, (25, 33)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (43, 50)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (55, 63)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((2349, (58, 63)), '*FAT:\twell teacher I want you to make sure you drink your Quick and I want you to make sure you finish your dinner .\n'), ((2376, (56, 61)), '*FAT:\they teach make sure you &-uh finish drinking your Quick .\n'), ((2537, (91, 95)), "*MOT:\tI think maybe we should celebrate Brook's birthday today even though we don't have a cake .\n"), ((2559, (13, 17)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2559, (23, 27)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2568, (12, 16)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2568, (27, 31)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2637, (30, 34)), '*CHI:\twell (.) do we have any eggs ?\n'), ((2644, (41, 45)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2654, (27, 31)), "*MOT:\tso Brook doesn't eat cake .\n"), ((2707, (7, 15)), "*CHI:\t<McDonald's> [>] ?\n"), ((2716, (6, 14)), "*CHI:\tMcDonald's ?\n"), ((2732, (6, 16)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2732, (23, 33)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2897, (26, 33)), "*MOT:\tthink that's enough chicken for him ?\n"), ((2988, (6, 14)), '*CHI:\tgum drop gum drop .\n'), ((2988, (15, 23)), '*CHI:\tgum drop gum drop .\n'), ((2991, (32, 40)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((3082, (14, 18)), '*MOT:\tis your milk finished ?\n')]
set([(2571, (10, 16)), (884, (-1, 4)), (1824, (13, 18)), (41, (6, 9)), (1674, (10, 14)), (2975, (-1, 4)), (1973, (-1, 1)), (1579, (40, 43)), (74, (-1, 4)), (339, (6, 8)), (1937, (30, 33)), (1168, (-1, 4)), (2097, (-1, 4)), (1171, (-1, 7)), (2723, (-1, 4)), (1940, (24, 29)), (2921, (-1, 4)), (2475, (6, 10)), (581, (26, 32)), (1451, (6, 12)), (2388, (-1, 4)), (2494, (16, 23)), (1092, (6, 11)), (2988, (10, 14)), (2490, (6, 9)), (285, (75, 78)), (293, (-1, 4)), (3007, (-1, 4)), (2537, (-1, 4)), (693, (17, 21)), (1054, (-1, 4)), (973, (48, 52)), (538, (28, 33)), (978, (11, 15)), (791, (6, 10)), (1213, (48, 53)), (1000, (10, 13)), (2144, (52, 56)), (1464, (28, 35)), (410, (55, 60)), (2720, (14, 22)), (1100, (25, 30)), (1440, (6, 8)), (433, (28, 33)), (2251, (6, 10)), (1796, (6, 9)), (2654, (27, 31)), (1833, (-1, 4)), (2759, (6, 9)), (2079, (25, 29)), (232, (13, 16)), (522, (11, 14)), (869, (23, 29)), (3072, (-1, 4)), (285, (58, 64)), (2154, (27, 31)), (866, (6, 10)), (181, (27, 33)), (2312, (44, 51)), (1509, (-1, 4)), (3101, (-1, 4)), (1310, (11, 15)), (1204, (48, 55)), (15, (33, 37)), (373, (6, 12)), (2411, (-1, 4)), (3055, (-1, 4)), (3060, (11, 17)), (2164, (28, 31)), (2349, (108, 114)), (2805, (22, 28)), (1137, (204, 209)), (2167, (6, 10)), (824, (38, 44)), (1733, (-1, 4)), (1380, (-1, 4)), (1647, (40, 44)), (1538, (-1, 4)), (2399, (-1, 4)), (220, (32, 35)), (1048, (55, 61)), (525, (72, 75)), (1336, (6, 10)), (570, (-1, 4)), (2872, (-1, 4)), (1724, (40, 45)), (2019, (35, 38)), (943, (6, 12)), (1137, (243, 250)), (1137, (20, 24)), (3104, (6, 10)), (3079, (6, 9)), (775, (-1, 4)), (914, (36, 40)), (1498, (6, 11)), (3049, (6, 10)), (246, (40, 44)), (2980, (6, 10)), (2269, (-1, 4)), (584, (32, 40)), (982, (10, 13)), (1655, (-1, 4)), (1304, (10, 16)), (2568, (27, 32)), (436, (-1, 4)), (178, (20, 23)), (3052, (-1, 4)), (2144, (35, 41)), (85, (6, 9)), (1674, (-1, 4)), (2289, (6, 10)), (876, (15, 23)), (420, (34, 37)), (2251, (47, 50)), (2340, (-1, 4)), (373, (46, 50)), (2485, (32, 35)), (1395, (-1, 4)), (681, (-1, 4)), (1786, (-1, 4)), (2585, (52, 57)), (2376, (-1, 4)), (1235, (34, 40)), (1940, (-1, 4)), (2728, (6, 9)), (2106, (53, 57)), (444, (-1, 4)), (119, (11, 14)), (1054, (6, 9)), (2388, (10, 15)), (2442, (102, 108)), (1607, (12, 16)), (3007, (49, 55)), (410, (80, 84)), (2208, (6, 10)), (1267, (47, 51)), (2269, (35, 40)), (2433, (9, 15)), (2522, (10, 13)), (869, (6, 13)), (925, (-1, 4)), (2880, (11, 17)), (747, (-1, 4)), (1596, (-1, 4)), (266, (6, 9)), (2776, (74, 80)), (1339, (-1, 4)), (1275, (57, 60)), (1647, (-1, 4)), (753, (31, 37)), (2641, (10, 13)), (2485, (-1, 4)), (1432, (-1, 4)), (581, (-1, 4)), (2805, (37, 42)), (1004, (21, 26)), (1951, (44, 48)), (2559, (28, 31)), (2649, (30, 33)), (1524, (-1, 4)), (1913, (11, 17)), (210, (6, 10)), (617, (-1, 4)), (100, (38, 42)), (1908, (15, 18)), (1454, (6, 10)), (342, (32, 36)), (1821, (15, 20)), (367, (6, 10)), (59, (-1, 4)), (2019, (29, 34)), (1468, (11, 14)), (120, (-1, 4)), (1864, (40, 46)), (2921, (38, 42)), (239, (6, 11)), (1034, (53, 57)), (1137, (125, 132)), (68, (22, 25)), (2568, (-1, 4)), (2991, (17, 21)), (837, (14, 17)), (1893, (6, 11)), (1527, (-1, 4)), (270, (6, 10)), (1386, (6, 11)), (770, (42, 48)), (2824, (40, 46)), (1776, (84, 91)), (1998, (-1, 4)), (953, (-1, 4)), (2937, (-1, 4)), (2969, (17, 20)), (753, (-1, 4)), (2644, (26, 30)), (1951, (-1, 4)), (914, (54, 58)), (1163, (-1, 4)), (2682, (-1, 4)), (804, (34, 39)), (1224, (-1, 4)), (3076, (6, 10)), (1842, (-1, 4)), (2300, (6, 10)), (1916, (6, 9)), (2231, (6, 11)), (1177, (-1, 4)), (1460, (6, 10)), (1607, (-1, 4)), (824, (-1, 4)), (1253, (-1, 4)), (2438, (6, 9)), (1058, (-1, 4)), (1647, (24, 29)), (2550, (9, 13)), (894, (21, 27)), (2991, (-1, 4)), (2197, (16, 19)), (2472, (-1, 4)), (584, (11, 22)), (973, (39, 44)), (1504, (-1, 4)), (1425, (6, 10)), (44, (-1, 4)), (889, (-1, 4)), (2847, (-1, 4)), (2328, (-1, 4)), (3027, (6, 9)), (1824, (26, 31)), (1674, (44, 49)), (932, (82, 86)), (1533, (-1, 4)), (2358, (15, 21)), (1018, (35, 40)), (2776, (24, 28)), (2478, (-1, 4)), (1943, (-1, 4)), (2358, (-1, 4)), (2858, (9, 14)), (261, (6, 10)), (897, (17, 20)), (2294, (-1, 4)), (407, (6, 9)), (285, (47, 53)), (1446, (11, 17)), (147, (6, 12)), (554, (28, 33)), (2500, (34, 38)), (973, (-1, 4)), (1584, (-1, 4)), (990, (-1, 4)), (2571, (39, 43)), (1221, (6, 9)), (794, (-1, 4)), (2455, (89, 94)), (1814, (-1, 4)), (2128, (10, 15)), (2228, (-1, 4)), (2817, (-1, 4)), (2962, (6, 9)), (2305, (80, 83)), (587, (14, 17)), (766, (6, 9)), (1849, (-1, 4)), (2442, (-1, 4)), (2027, (-1, 4)), (2481, (6, 9)), (216, (13, 16)), (2478, (24, 30)), (1235, (-1, 4)), (1802, (-1, 4)), (1474, (-1, 4)), (1638, (-1, 4)), (794, (40, 44)), (2670, (10, 16)), (1652, (27, 32)), (1937, (14, 16)), (1281, (6, 12)), (2172, (6, 10)), (2703, (-1, 4)), (640, (-1, 4)), (1916, (10, 13)), (302, (-1, 4)), (634, (11, 17)), (2091, (-1, 4)), (1230, (21, 29)), (2500, (-1, 4)), (849, (70, 73)), (2370, (11, 14)), (725, (10, 13)), (1353, (77, 81)), (2559, (-1, 4)), (3021, (6, 9)), (1437, (16, 19)), (2599, (6, 9)), (1275, (85, 89)), (20, (71, 75)), (1554, (-1, 4)), (973, (61, 64)), (525, (-1, 4)), (436, (29, 34)), (2370, (6, 10)), (2019, (6, 10)), (2393, (-1, 4)), (861, (6, 13)), (2256, (35, 40)), (2251, (35, 38)), (620, (6, 10)), (987, (6, 8)), (965, (37, 41)), (27, (6, 9)), (1976, (10, 13)), (2771, (23, 27)), (1000, (6, 9)), (1682, (70, 76)), (1980, (13, 21)), (2875, (-1, 4)), (1521, (17, 22)), (2205, (6, 10)), (410, (46, 54)), (775, (120, 127)), (452, (-1, 4)), (309, (10, 17)), (2340, (9, 13)), (1240, (10, 13)), (1115, (6, 13)), (1386, (62, 65)), (2317, (21, 25)), (1647, (59, 62)), (2711, (10, 15)), (760, (68, 72)), (62, (44, 51)), (1416, (103, 106)), (2789, (40, 44)), (1763, (6, 10)), (393, (59, 67)), (195, (-1, 4)), (1956, (-1, 4)), (1041, (6, 12)), (1235, (51, 54)), (1285, (14, 21)), (1350, (13, 17)), (2839, (26, 32)), (3038, (-1, 4)), (2507, (6, 10)), (2283, (26, 29)), (470, (6, 9)), (3068, (6, 10)), (150, (11, 14)), (1660, (-1, 4)), (2294, (14, 21)), (2407, (9, 16)), (854, (24, 29)), (1587, (-1, 4)), (1976, (6, 9)), (681, (25, 33)), (79, (6, 11)), (2547, (26, 29)), (363, (-1, 4)), (1097, (22, 28)), (1888, (41, 46)), (1671, (6, 10)), (1900, (13, 18)), (276, (33, 39)), (2617, (6, 10)), (1601, (-1, 4)), (2442, (13, 17)), (1189, (6, 10)), (1100, (-1, 4)), (2686, (66, 72)), (1759, (-1, 4)), (812, (-1, 4)), (3007, (70, 75)), (114, (17, 21)), (2955, (-1, 4)), (715, (60, 64)), (1663, (11, 14)), (2752, (27, 32)), (965, (16, 19)), (433, (-1, 4)), (2050, (-1, 4)), (485, (11, 14)), (1243, (76, 81)), (510, (-1, 4)), (452, (21, 25)), (2050, (29, 33)), (1058, (41, 47)), (2983, (6, 9)), (54, (-1, 4)), (1028, (33, 38)), (1748, (-1, 4)), (2154, (44, 50)), (2752, (-1, 4)), (2670, (19, 23)), (709, (6, 10)), (2407, (36, 40)), (410, (122, 128)), (1926, (26, 31)), (2317, (34, 41)), (2789, (60, 65)), (2547, (-1, 4)), (2991, (36, 40)), (2433, (33, 39)), (911, (13, 16)), (794, (18, 25)), (1737, (-1, 4)), (538, (-1, 4)), (1709, (47, 53)), (383, (6, 10)), (1011, (9, 13)), (513, (-1, 4)), (2027, (46, 51)), (587, (6, 13)), (1267, (6, 12)), (2516, (6, 10)), (1218, (-1, 4)), (3082, (14, 18)), (1267, (13, 18)), (3035, (20, 25)), (1087, (41, 47)), (889, (26, 29)), (2266, (23, 27)), (2278, (34, 37)), (1504, (25, 33)), (1317, (-1, 4)), (2290, (11, 17)), (2824, (15, 23)), (2918, (6, 12)), (1103, (22, 26)), (2918, (-1, 4)), (2949, (13, 19)), (2810, (10, 13)), (255, (-1, 4)), (1745, (18, 21)), (2423, (11, 16)), (88, (6, 10)), (598, (101, 104)), (2175, (28, 31)), (1498, (-1, 4)), (2693, (33, 41)), (2278, (57, 62)), (3023, (11, 14)), (2192, (10, 15)), (1741, (6, 9)), (2740, (47, 50)), (1370, (50, 53)), (2144, (-1, 4)), (2595, (10, 13)), (2500, (57, 62)), (3111, (6, 9)), (2485, (6, 11)), (1548, (45, 51)), (1062, (22, 25)), (919, (37, 41)), (125, (-1, 4)), (1457, (26, 31)), (715, (-1, 4)), (535, (-1, 4)), (1128, (43, 47)), (1108, (80, 83)), (2133, (6, 9)), (522, (6, 10)), (929, (-1, 4)), (258, (23, 28)), (1272, (10, 13)), (195, (10, 16)), (1115, (14, 18)), (1587, (19, 22)), (1904, (13, 18)), (199, (6, 10)), (171, (-1, 4)), (2537, (91, 95)), (227, (49, 52)), (1934, (27, 30)), (232, (-1, 4)), (455, (50, 55)), (815, (-1, 4)), (2455, (75, 79)), (1073, (9, 13)), (3082, (-1, 4)), (1880, (-1, 4)), (2154, (55, 58)), (2312, (26, 30)), (840, (57, 63)), (2200, (35, 38)), (656, (-1, 4)), (1386, (54, 61)), (965, (20, 23)), (2519, (11, 15)), (1484, (6, 9)), (1824, (41, 44)), (598, (78, 81)), (1814, (49, 55)), (1258, (53, 58)), (1966, (-1, 4)), (332, (-1, 4)), (2251, (51, 54)), (71, (-1, 4)), (2407, (25, 30)), (1766, (-1, 4)), (900, (-1, 4)), (2624, (56, 59)), (164, (32, 41)), (1737, (26, 30)), (2181, (6, 9)), (1545, (-1, 4)), (750, (23, 26)), (488, (17, 20)), (2115, (25, 29)), (1697, (11, 14)), (2562, (-1, 4)), (1833, (13, 18)), (51, (10, 15)), (554, (10, 15)), (1900, (26, 31)), (510, (22, 27)), (965, (-1, 4)), (1811, (-1, 4)), (1789, (-1, 4)), (3045, (23, 26)), (861, (41, 46)), (1611, (-1, 4)), (2106, (23, 27)), (1386, (28, 31)), (804, (10, 13)), (2064, (6, 10)), (1411, (-1, 4)), (645, (10, 13)), (2624, (51, 55)), (2749, (32, 35)), (1908, (24, 30)), (857, (-1, 4)), (1769, (-1, 4)), (504, (-1, 4)), (2469, (-1, 4)), (1474, (15, 18)), (1092, (-1, 4)), (15, (21, 27)), (2512, (-1, 4)), (1845, (19, 26)), (812, (26, 29)), (1548, (-1, 4)), (1486, (-1, 4)), (1724, (58, 62)), (128, (11, 14)), (2429, (21, 25)), (2006, (6, 10)), (2740, (-1, 4)), (1530, (17, 21)), (1106, (-1, 4)), (2613, (-1, 4)), (1386, (50, 53)), (68, (17, 21)), (2906, (6, 9)), (1353, (10, 13)), (1808, (6, 12)), (1926, (-1, 4)), (317, (43, 47)), (1951, (25, 28)), (3004, (6, 10)), (1018, (-1, 4)), (1904, (-1, 4)), (1307, (9, 13)), (1852, (28, 31)), (547, (27, 33)), (2610, (-1, 4)), (1281, (13, 20)), (71, (20, 24)), (2585, (40, 44)), (2240, (-1, 4)), (1796, (-1, 4)), (629, (30, 34)), (507, (6, 9)), (129, (6, 10)), (1697, (20, 26)), (1849, (19, 26)), (293, (37, 42)), (1833, (52, 58)), (879, (-1, 4)), (2776, (29, 35)), (2657, (24, 30)), (574, (6, 9)), (140, (6, 12)), (2297, (-1, 4)), (2765, (6, 10)), (1688, (-1, 4)), (1679, (6, 10)), (2304, (6, 10)), (2585, (32, 39)), (1666, (-1, 4)), (2865, (24, 28)), (464, (-1, 4)), (775, (95, 101)), (342, (9, 13)), (2085, (-1, 4)), (1623, (69, 75)), (2839, (33, 40)), (2776, (88, 94)), (2012, (6, 10)), (672, (26, 34)), (2328, (64, 71)), (320, (-1, 4)), (750, (-1, 4)), (854, (6, 13)), (1347, (6, 10)), (1709, (35, 41)), (801, (6, 8)), (1446, (51, 55)), (273, (-1, 4)), (775, (53, 60)), (1833, (41, 44)), (2061, (6, 10)), (997, (12, 15)), (2429, (10, 15)), (3064, (6, 9)), (342, (66, 70)), (2988, (6, 9)), (2251, (21, 26)), (2607, (-1, 4)), (1824, (-1, 4)), (2660, (34, 42)), (147, (13, 17)), (2595, (6, 9)), (685, (10, 15)), (570, (30, 33)), (158, (6, 10)), (1258, (40, 47)), (420, (-1, 4)), (2858, (48, 52)), (629, (16, 19)), (320, (20, 23)), (2571, (44, 47)), (1864, (10, 16)), (82, (14, 21)), (1044, (-1, 4)), (1504, (43, 50)), (1864, (33, 39)), (2245, (6, 10)), (1275, (-1, 4)), (2644, (41, 45)), (1264, (6, 9)), (1080, (-1, 4)), (566, (20, 25)), (2551, (65, 68)), (2455, (6, 12)), (1937, (39, 42)), (481, (9, 15)), (1748, (14, 16)), (1380, (36, 39)), (2221, (6, 10)), (1724, (-1, 4)), (2768, (20, 24)), (492, (6, 9)), (342, (-1, 4)), (1829, (6, 12)), (299, (6, 10)), (2442, (90, 93)), (1527, (20, 26)), (2728, (10, 13)), (1411, (30, 35)), (2256, (23, 27)), (2915, (-1, 4)), (728, (6, 9)), (2537, (57, 62)), (168, (6, 15)), (246, (14, 18)), (1715, (12, 16)), (1350, (20, 27)), (2686, (-1, 4)), (519, (14, 17)), (2381, (6, 10)), (2184, (-1, 4)), (784, (18, 25)), (566, (-1, 4)), (425, (16, 23)), (879, (33, 39)), (2121, (29, 34)), (2261, (19, 22)), (2620, (-1, 4)), (2649, (-1, 4)), (2218, (11, 15)), (1715, (-1, 4)), (2547, (6, 9)), (1860, (-1, 4)), (2274, (-1, 4)), (2905, (6, 9)), (1034, (11, 14)), (1984, (32, 36)), (869, (18, 22)), (461, (11, 14)), (1904, (26, 31)), (2211, (34, 39)), (1516, (-1, 4)), (1838, (6, 12)), (1301, (6, 10)), (2749, (10, 13)), (2698, (-1, 4)), (1709, (-1, 4)), (1422, (18, 21)), (987, (9, 12)), (2442, (59, 64)), (2529, (-1, 4)), (932, (76, 79)), (702, (-1, 4)), (1422, (6, 9)), (2125, (27, 32)), (2027, (23, 29)), (1097, (10, 13)), (2211, (47, 54)), (342, (14, 17)), (1769, (16, 21)), (804, (47, 52)), (1733, (16, 22)), (353, (17, 24)), (2752, (43, 47)), (1715, (78, 81)), (2975, (39, 46)), (1018, (24, 27)), (2582, (6, 10)), (3007, (56, 63)), (2305, (39, 43)), (15, (42, 47)), (595, (6, 10)), (1591, (-1, 4)), (1576, (-1, 4)), (373, (32, 37)), (547, (-1, 4)), (1004, (9, 13)), (2824, (68, 72)), (623, (-1, 4)), (1776, (14, 19)), (2455, (23, 27)), (2902, (6, 8)), (1224, (29, 34)), (1339, (37, 43)), (1833, (26, 31)), (223, (-1, 4)), (2256, (-1, 4)), (637, (-1, 4)), (3060, (-1, 4)), (1691, (18, 24)), (3045, (36, 39)), (884, (16, 24)), (2376, (6, 9)), (430, (6, 10)), (1674, (38, 43)), (1285, (10, 13)), (114, (78, 81)), (91, (27, 31)), (2649, (37, 43)), (54, (35, 41)), (444, (22, 25)), (2789, (45, 50)), (620, (25, 30)), (2224, (12, 17)), (1753, (6, 9)), (1504, (55, 63)), (1792, (10, 16)), (2894, (11, 14)), (824, (58, 61)), (2551, (-1, 4)), (2839, (41, 46)), (2711, (24, 29)), (1118, (56, 62)), (3035, (-1, 4)), (897, (-1, 4)), (1888, (31, 35)), (2735, (6, 9)), (1966, (47, 51)), (1873, (13, 19)), (2740, (40, 46)), (1620, (6, 10)), (1422, (10, 17)), (2335, (25, 32)), (1663, (6, 10)), (2115, (-1, 4)), (164, (-1, 4)), (587, (33, 36)), (1908, (31, 36)), (164, (18, 28)), (2121, (6, 10)), (2907, (6, 9)), (872, (15, 23)), (1471, (8, 14)), (2831, (6, 9)), (2167, (40, 43)), (330, (10, 13)), (2776, (95, 101)), (2197, (10, 15)), (1258, (-1, 4)), (2810, (6, 9)), (2161, (20, 23)), (2278, (-1, 4)), (2033, (6, 10)), (1973, (24, 27)), (750, (13, 22)), (2698, (17, 23)), (285, (37, 42)), (645, (6, 9)), (1243, (137, 144)), (332, (34, 38)), (317, (10, 17)), (1310, (44, 47)), (833, (-1, 4)), (1682, (-1, 4)), (495, (-1, 4)), (2568, (11, 16)), (2762, (-1, 4)), (1304, (-1, 4)), (840, (121, 124)), (2003, (6, 9)), (2771, (33, 37)), (100, (-1, 4)), (2752, (72, 76)), (100, (50, 54)), (15, (10, 16)), (685, (33, 38)), (2141, (-1, 4)), (1321, (-1, 4)), (2125, (6, 10)), (1584, (17, 21)), (2814, (6, 10)), (3060, (32, 35)), (1643, (6, 12)), (2991, (28, 31)), (735, (9, 16)), (1380, (40, 43)), (2975, (56, 61)), (1133, (-1, 4)), (775, (40, 44)), (939, (15, 18)), (1897, (6, 10)), (1814, (24, 29)), (1584, (11, 16)), (1361, (6, 13)), (1724, (16, 23)), (1748, (17, 21)), (861, (17, 20)), (2269, (23, 27)), (2393, (31, 34)), (3017, (-1, 4)), (2637, (30, 34)), (455, (34, 38)), (2075, (-1, 4)), (1204, (-1, 4)), (2568, (33, 36)), (2559, (23, 27)), (181, (46, 51)), (2654, (23, 26)), (1913, (18, 21)), (1416, (96, 102)), (143, (6, 11)), (2682, (26, 32)), (696, (12, 16)), (1159, (6, 10)), (1224, (51, 59)), (1638, (33, 37)), (2847, (45, 49)), (1884, (-1, 4)), (425, (-1, 4)), (2019, (76, 83)), (44, (47, 52)), (2551, (40, 45)), (1876, (13, 19)), (2795, (-1, 4)), (660, (-1, 4)), (488, (12, 16)), (495, (30, 34)), (2192, (41, 44)), (2211, (26, 29)), (1715, (109, 113)), (2154, (-1, 4)), (455, (-1, 4)), (216, (6, 12)), (1327, (6, 10)), (699, (16, 22)), (3038, (35, 40)), (696, (17, 23)), (1310, (36, 43)), (1776, (-1, 4)), (903, (6, 10)), (1773, (6, 10)), (2921, (21, 25)), (2959, (6, 12)), (1087, (6, 11)), (840, (70, 73)), (1920, (10, 18)), (640, (16, 21)), (2949, (20, 24)), (2463, (26, 31)), (2996, (58, 63)), (1959, (-1, 4)), (2373, (-1, 4)), (2624, (38, 42)), (363, (24, 30)), (784, (81, 89)), (1748, (63, 69)), (757, (6, 10)), (1209, (6, 9)), (1652, (-1, 4)), (3068, (14, 19)), (1468, (15, 19)), (1824, (52, 58)), (1538, (58, 63)), (213, (17, 22)), (907, (-1, 4)), (1185, (-1, 4)), (2952, (-1, 4)), (1703, (10, 15)), (1353, (39, 46)), (1573, (6, 10)), (478, (13, 19)), (953, (6, 12)), (2858, (-1, 4)), (939, (10, 14)), (1199, (14, 23)), (2266, (6, 10)), (447, (-1, 4)), (3090, (6, 14)), (1611, (15, 19)), (997, (20, 23)), (251, (11, 17)), (1272, (6, 9)), (1310, (32, 35)), (20, (14, 20)), (1490, (-1, 4)), (2328, (44, 50)), (1087, (-1, 4)), (2657, (-1, 4)), (2442, (115, 119)), (1087, (48, 54)), (239, (94, 98)), (1776, (77, 83)), (1655, (45, 52)), (1253, (25, 29)), (2365, (-1, 4)), (20, (25, 30)), (2644, (6, 11)), (96, (6, 9)), (2426, (-1, 4)), (2133, (10, 14)), (1494, (6, 9)), (1995, (6, 10)), (137, (6, 9)), (2463, (19, 25)), (1560, (-1, 4)), (305, (6, 10)), (2969, (-1, 4)), (1367, (14, 17)), (2050, (34, 38)), (3045, (-1, 4)), (1937, (34, 38)), (1156, (-1, 4)), (900, (15, 18)), (2419, (-1, 4)), (1852, (6, 15)), (188, (-1, 4)), (1888, (16, 21)), (1464, (19, 24)), (2865, (-1, 4)), (775, (61, 66)), (2732, (34, 40)), (67, (6, 9)), (188, (36, 41)), (577, (-1, 4)), (175, (14, 17)), (239, (-1, 4)), (1291, (6, 9)), (1243, (-1, 4)), (2365, (38, 45)), (44, (35, 41)), (510, (15, 18)), (1310, (74, 77)), (1240, (6, 9)), (1343, (6, 9)), (1694, (11, 17)), (2732, (6, 16)), (2887, (23, 29)), (1285, (22, 25)), (402, (36, 42)), (2711, (-1, 4)), (648, (-1, 4)), (2283, (53, 59)), (2388, (47, 56)), (2897, (26, 33)), (2085, (35, 40)), (699, (-1, 4)), (1474, (22, 26)), (2559, (13, 17)), (760, (-1, 4)), (677, (-1, 4)), (2128, (34, 39)), (1920, (19, 26)), (2861, (11, 16)), (2786, (-1, 4)), (1087, (23, 27)), (605, (17, 20)), (2290, (6, 10)), (2221, (11, 14)), (1330, (6, 10)), (830, (26, 33)), (1171, (39, 44)), (1733, (23, 28)), (2057, (24, 32)), (2633, (17, 22)), (978, (30, 36)), (943, (-1, 4)), (1947, (-1, 4)), (132, (16, 22)), (2384, (6, 9)), (2526, (-1, 4)), (1564, (6, 10)), (192, (6, 10)), (114, (50, 57)), (1156, (22, 29)), (1218, (11, 15)), (1567, (-1, 4)), (784, (-1, 4)), (1814, (17, 23)), (2248, (18, 21)), (538, (47, 51)), (2106, (61, 65)), (2776, (-1, 4)), (246, (-1, 4)), (753, (26, 30)), (1428, (-1, 4)), (2707, (19, 22)), (1700, (19, 25)), (399, (-1, 4)), (447, (40, 45)), (2556, (17, 20)), (2852, (6, 10)), (393, (12, 16)), (1464, (-1, 4)), (1893, (-1, 4)), (2551, (32, 39)), (171, (19, 31)), (236, (9, 12)), (1437, (11, 15)), (137, (19, 27)), (2283, (-1, 4)), (1084, (-1, 4)), (359, (6, 9)), (2103, (-1, 4)), (1192, (-1, 4)), (441, (6, 10)), (2164, (-1, 4)), (2376, (42, 50)), (1034, (90, 93)), (617, (36, 39)), (3096, (26, 33)), (617, (30, 35)), (91, (-1, 4)), (239, (99, 102)), (513, (41, 46)), (2801, (6, 9)), (2373, (15, 18)), (1350, (-1, 4)), (2211, (-1, 4)), (349, (6, 9)), (1873, (6, 12)), (735, (-1, 4)), (1224, (35, 40)), (105, (-1, 4)), (1416, (92, 95)), (251, (18, 21)), (2211, (87, 90)), (1766, (13, 18)), (2192, (21, 26)), (2602, (-1, 4)), (2824, (73, 76)), (770, (35, 38)), (402, (50, 56)), (2817, (24, 28)), (2224, (-1, 4)), (605, (-1, 4)), (2654, (-1, 4)), (1769, (30, 34)), (794, (50, 61)), (1591, (24, 29)), (1548, (55, 62)), (227, (-1, 4)), (1062, (6, 11)), (2805, (-1, 4)), (2192, (34, 40)), (1353, (71, 76)), (1900, (-1, 4)), (1776, (54, 60)), (677, (26, 34)), (342, (52, 56)), (3093, (14, 19)), (1406, (36, 43)), (2855, (-1, 4)), (2732, (23, 33)), (2399, (42, 45)), (525, (39, 45)), (1729, (6, 9)), (2884, (26, 29)), (854, (17, 23)), (2894, (6, 10)), (775, (24, 32)), (3031, (15, 18)), (1471, (18, 24)), (2556, (10, 16)), (1097, (-1, 4)), (982, (51, 57)), (2789, (-1, 4)), (544, (6, 10)), (2067, (-1, 4)), (770, (15, 19)), (2175, (-1, 4)), (2236, (16, 19)), (970, (11, 14)), (1457, (-1, 4)), (993, (6, 9)), (132, (40, 43)), (598, (-1, 4)), (1579, (6, 10)), (2834, (43, 47)), (2442, (31, 36)), (1943, (29, 34)), (1579, (23, 30)), (281, (19, 25)), (2416, (6, 10)), (2452, (6, 10)), (2585, (-1, 4)), (990, (6, 10)), (1989, (-1, 4)), (598, (18, 24)), (2660, (-1, 4)), (1769, (35, 41)), (738, (6, 9)), (2723, (17, 23)), (1776, (45, 48)), (1845, (12, 18)), (501, (24, 28)), (1715, (39, 44)), (2945, (-1, 4)), (1416, (-1, 4)), (1845, (-1, 4)), (1123, (6, 9)), (1177, (36, 43)), (1034, (78, 82)), (320, (50, 53)), (111, (12, 15)), (612, (39, 44)), (2716, (-1, 4)), (2673, (6, 10)), (1011, (21, 26)), (1596, (23, 26)), (213, (6, 11)), (1267, (-1, 4)), (68, (-1, 4)), (2106, (-1, 4)), (258, (14, 17)), (2534, (6, 9)), (612, (60, 63)), (478, (-1, 4)), (833, (6, 10)), (3007, (98, 102)), (620, (11, 17)), (525, (53, 57)), (420, (41, 47)), (2740, (11, 15)), (1849, (12, 18)), (82, (-1, 4)), (485, (6, 10)), (220, (40, 43)), (1023, (-1, 4)), (2290, (18, 22)), (1799, (6, 12)), (2485, (20, 27)), (2949, (-1, 4)), (3086, (-1, 4)), (1478, (6, 9)), (932, (55, 59)), (1137, (-1, 4)), (2335, (-1, 4)), (1776, (27, 31)), (551, (6, 10)), (2433, (22, 26)), (2522, (6, 9)), (74, (18, 22)), (2771, (-1, 4)), (2519, (-1, 4)), (1869, (13, 19)), (970, (6, 10)), (33, (63, 67)), (143, (-1, 4)), (640, (62, 68)), (2039, (6, 10)), (2094, (6, 10)), (1403, (-1, 4)), (204, (-1, 4)), (849, (20, 26)), (2133, (71, 76)), (2106, (110, 113)), (1745, (14, 17)), (387, (25, 32)), (1617, (11, 15)), (2466, (-1, 4)), (849, (12, 16)), (2346, (16, 24)), (2533, (6, 10)), (775, (102, 107)), (3007, (115, 121))])
[((15, (10, 16)), '*CHI:\txxx yellow and bl(ue) [//] blue and green and red .\n'), ((15, (21, 27)), '*CHI:\txxx yellow and bl(ue) [//] blue and green and red .\n'), ((15, (33, 37)), '*CHI:\txxx yellow and bl(ue) [//] blue and green and red .\n'), ((15, (42, 47)), '*CHI:\txxx yellow and bl(ue) [//] blue and green and red .\n'), ((20, (14, 20)), "*MOT:\talright please [?] color something while you're waiting for your food ?\n"), ((20, (25, 30)), "*MOT:\talright please [?] color something while you're waiting for your food ?\n"), ((20, (71, 75)), "*MOT:\talright please [?] color something while you're waiting for your food ?\n"), ((27, (6, 9)), '*CHI:\tyes .\n'), ((33, (63, 67)), '*MOT:\tyou may <wh(ile)> [//] just while I <&s> [//] cut up the meat .\n'), ((41, (6, 9)), '*CHI:\txxx .\n'), ((44, (-1, 4)), '*MOT:\tdid he only sing this in the encore last night ?\n'), ((44, (35, 41)), '*MOT:\tdid he only sing this in the encore last night ?\n'), ((44, (47, 52)), '*MOT:\tdid he only sing this in the encore last night ?\n'), ((51, (10, 15)), "*FAT:\tI'm sorry ?\n"), ((54, (-1, 4)), '*MOT:\tdid he only sing this in the encore ?\n'), ((54, (35, 41)), '*MOT:\tdid he only sing this in the encore ?\n'), ((59, (-1, 4)), "*FAT:\tI don't know .\n"), ((62, (44, 51)), "*MOT:\tI'm just wondering where it is in the concert .\n"), ((67, (6, 9)), '*MOT:\txxx .\n'), ((68, (-1, 4)), "*MOT:\tI'd have a tape (.) .\n"), ((68, (17, 21)), "*MOT:\tI'd have a tape (.) .\n"), ((68, (22, 25)), "*MOT:\tI'd have a tape (.) .\n"), ((71, (-1, 4)), '*MOT:\tfor the audio tape .\n'), ((71, (20, 24)), '*MOT:\tfor the audio tape .\n'), ((74, (-1, 4)), '*FAT:\tI think the tops of this is six .\n'), ((74, (18, 22)), '*FAT:\tI think the tops of this is six .\n'), ((79, (6, 11)), '*MOT:\tstand by .\n'), ((82, (-1, 4)), '*FAT:\tand the tension just xxx might be out .\n'), ((82, (14, 21)), '*FAT:\tand the tension just xxx might be out .\n'), ((85, (6, 9)), '*MOT:\txxx this .\n'), ((88, (6, 10)), '*CHI:\tokay .\n'), ((91, (-1, 4)), '*MOT:\tso I have_to put the rest of it on the &-uh +...\n'), ((91, (27, 31)), '*MOT:\tso I have_to put the rest of it on the &-uh +...\n'), ((96, (6, 9)), '*CHI:\tzzz .\n'), ((100, (-1, 4)), '*FAT:\tyou have_to start on the second side of the tape too .\n'), ((100, (38, 42)), '*FAT:\tyou have_to start on the second side of the tape too .\n'), ((100, (50, 54)), '*FAT:\tyou have_to start on the second side of the tape too .\n'), ((105, (-1, 4)), '*FAT:\tlose more o(f) [//] of Philip Flack [?] than anything else .\n'), ((111, (12, 15)), '*MOT:\tright [<] .\n'), ((114, (17, 21)), '*MOT:\tthe second side is the side that I had <the encores on> [//] the encore [>] on .\n'), ((114, (50, 57)), '*MOT:\tthe second side is the side that I had <the encores on> [//] the encore [>] on .\n'), ((114, (78, 81)), '*MOT:\tthe second side is the side that I had <the encores on> [//] the encore [>] on .\n'), ((119, (11, 14)), '*FAT:\t&-uh [<] .\n'), ((120, (-1, 4)), '*MOT:\tso I have_to get that to be able to use my little cassette .\n'), ((125, (-1, 4)), "*MOT:\tI'll do that right now .\n"), ((128, (11, 14)), '*FAT:\t&-uh [<] .\n'), ((129, (6, 10)), '*FAT:\tokay .\n'), ((132, (16, 22)), "*MOT:\tSuzanne's sister did the New York bit ?\n"), ((132, (40, 43)), "*MOT:\tSuzanne's sister did the New York bit ?\n"), ((137, (6, 9)), '*MOT:\txxx and &-um biscuits .\n'), ((137, (19, 27)), '*MOT:\txxx and &-um biscuits .\n'), ((140, (6, 12)), '*FAT:\tthanks .\n'), ((143, (-1, 4)), '*MOT:\tsorry Harve [?] .\n'), ((143, (6, 11)), '*MOT:\tsorry Harve [?] .\n'), ((147, (6, 12)), "*FAT:\tthat's okay .\n"), ((147, (13, 17)), "*FAT:\tthat's okay .\n"), ((150, (11, 14)), '*FAT:\t&-uh (.) do you want some Quick ?\n'), ((158, (6, 10)), '*FAT:\tyeah .\n'), ((164, (-1, 4)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((164, (18, 28)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((164, (32, 41)), '*FAT:\tdo you want strawberry or chocolate ?\n'), ((168, (6, 15)), '*CHI:\tchocolate .\n'), ((171, (-1, 4)), "*MOT:\tso how's the chicken look ?\n"), ((171, (19, 31)), "*MOT:\tso how's the chicken look ?\n"), ((175, (14, 17)), '*CHI:\toh good (.) .\n'), ((178, (20, 23)), '*CHI:\tit looks good (.) .\n'), ((181, (27, 33)), '*CHI:\tring around the rosy pocket full of (.) ashes , ashes , we all fall down (.) .\n'), ((181, (46, 51)), '*CHI:\tring around the rosy pocket full of (.) ashes , ashes , we all fall down (.) .\n'), ((188, (-1, 4)), "*CHI:\tMommy's using my old placemat today .\n"), ((188, (36, 41)), "*CHI:\tMommy's using my old placemat today .\n"), ((192, (6, 10)), '*FAT:\tyeah .\n'), ((195, (-1, 4)), "*FAT:\tand you're using your new placemat .\n"), ((195, (10, 16)), "*FAT:\tand you're using your new placemat .\n"), ((199, (6, 10)), '*MOT:\tyeah I thought he might want to try his new placemat .\n'), ((204, (-1, 4)), '*MOT:\tthere xxx .\n'), ((210, (6, 10)), '*MOT:\tokay .\n'), ((213, (6, 11)), '*CHI:\tclean this plate .\n'), ((213, (17, 22)), '*CHI:\tclean this plate .\n'), ((216, (6, 12)), '*MOT:\tpardon [>] ?\n'), ((216, (13, 16)), '*MOT:\tpardon [>] ?\n'), ((220, (32, 35)), '*CHI:\t<cl(ean)> [//] clean this cup out [<] .\n'), ((220, (40, 43)), '*CHI:\t<cl(ean)> [//] clean this cup out [<] .\n'), ((223, (-1, 4)), "*MOT:\tso you'd like something over it .\n"), ((227, (-1, 4)), "*MOT:\tDaddy's going to put it in <your dinosaur> [!] .\n"), ((227, (49, 52)), "*MOT:\tDaddy's going to put it in <your dinosaur> [!] .\n"), ((232, (-1, 4)), '*CHI:\tnot my xxx ?\n'), ((232, (13, 16)), '*CHI:\tnot my xxx ?\n'), ((236, (9, 12)), '*MOT:\tno [>] .\n'), ((239, (-1, 4)), '*FAT:\t<well I figured since you have your dinosaur placement might as well have your dinosaur cup> [<] .\n'), ((239, (6, 11)), '*FAT:\t<well I figured since you have your dinosaur placement might as well have your dinosaur cup> [<] .\n'), ((239, (94, 98)), '*FAT:\t<well I figured since you have your dinosaur placement might as well have your dinosaur cup> [<] .\n'), ((239, (99, 102)), '*FAT:\t<well I figured since you have your dinosaur placement might as well have your dinosaur cup> [<] .\n'), ((246, (-1, 4)), "*MOT:\tso I'll wash this for another [>] time .\n"), ((246, (14, 18)), "*MOT:\tso I'll wash this for another [>] time .\n"), ((246, (40, 44)), "*MOT:\tso I'll wash this for another [>] time .\n"), ((251, (11, 17)), '*CHI:\t<xxx match> [<] ?\n'), ((251, (18, 21)), '*CHI:\t<xxx match> [<] ?\n'), ((255, (-1, 4)), "*FAT:\tI don't know .\n"), ((258, (14, 17)), '*CHI:\tmat(ch) [?] is a drink .\n'), ((258, (23, 28)), '*CHI:\tmat(ch) [?] is a drink .\n'), ((261, (6, 10)), '*FAT:\tyeah .\n'), ((266, (6, 9)), '*CHI:\tzzz .\n'), ((270, (6, 10)), '*MOT:\tokay .\n'), ((273, (-1, 4)), "*MOT:\tI think it's +/.\n"), ((276, (33, 39)), "*CHI:\twhere's those little stuff points [?] ?\n"), ((281, (19, 25)), '*MOT:\tthese little points .\n'), ((285, (37, 42)), "*MOT:\toh they're supposed to be like grass and plants and things like that (.) in <the &-uh> [//] the landscape (.) all around the dinosaurs .\n"), ((285, (47, 53)), "*MOT:\toh they're supposed to be like grass and plants and things like that (.) in <the &-uh> [//] the landscape (.) all around the dinosaurs .\n"), ((285, (58, 64)), "*MOT:\toh they're supposed to be like grass and plants and things like that (.) in <the &-uh> [//] the landscape (.) all around the dinosaurs .\n"), ((285, (75, 78)), "*MOT:\toh they're supposed to be like grass and plants and things like that (.) in <the &-uh> [//] the landscape (.) all around the dinosaurs .\n"), ((293, (-1, 4)), "*MOT:\tbut right here they look sharp don't they ?\n"), ((293, (37, 42)), "*MOT:\tbut right here they look sharp don't they ?\n"), ((299, (6, 10)), '*CHI:\tyeah .\n'), ((302, (-1, 4)), '*MOT:\tthere you go (.) .\n'), ((305, (6, 10)), '*MOT:\twarm .\n'), ((309, (10, 17)), '*CHI:\tthe chicken is too ?\n'), ((317, (10, 17)), '*MOT:\tthe chicken is [//] should be pretty cool .\n'), ((317, (43, 47)), '*MOT:\tthe chicken is [//] should be pretty cool .\n'), ((320, (-1, 4)), "*MOT:\tI'll cut that one and the next one you have (.) I won't cut you can just eat it (be)cause it will be (.) cooled off (.) .\n"), ((320, (20, 23)), "*MOT:\tI'll cut that one and the next one you have (.) I won't cut you can just eat it (be)cause it will be (.) cooled off (.) .\n"), ((320, (50, 53)), "*MOT:\tI'll cut that one and the next one you have (.) I won't cut you can just eat it (be)cause it will be (.) cooled off (.) .\n"), ((330, (10, 13)), '*CHI:\txxx [>] ?\n'), ((332, (-1, 4)), "*MOT:\tI knew Bro wouldn't make it home I hope he made it to the library +...\n"), ((332, (34, 38)), "*MOT:\tI knew Bro wouldn't make it home I hope he made it to the library +...\n"), ((339, (6, 8)), "*FAT:\toh I wouldn't +/.\n"), ((342, (-1, 4)), "*MOT:\ton time (.) to get to xxx work done (be)cause it's so early he's first .\n"), ((342, (9, 13)), "*MOT:\ton time (.) to get to xxx work done (be)cause it's so early he's first .\n"), ((342, (14, 17)), "*MOT:\ton time (.) to get to xxx work done (be)cause it's so early he's first .\n"), ((342, (32, 36)), "*MOT:\ton time (.) to get to xxx work done (be)cause it's so early he's first .\n"), ((342, (52, 56)), "*MOT:\ton time (.) to get to xxx work done (be)cause it's so early he's first .\n"), ((342, (66, 70)), "*MOT:\ton time (.) to get to xxx work done (be)cause it's so early he's first .\n"), ((349, (6, 9)), '*FAT:\tzzz .\n'), ((353, (17, 24)), '*MOT:\this twenty dollars that he got for his birthday yesterday .\n'), ((359, (6, 9)), '*FAT:\tzzz .\n'), ((363, (-1, 4)), '*MOT:\tis burning in his pocket already .\n'), ((363, (24, 30)), '*MOT:\tis burning in his pocket already .\n'), ((367, (6, 10)), '*FAT:\tyeah .\n'), ((373, (6, 12)), "*MOT:\tthat's why he didn't need money to come home from the library yesterday he said I'll have enough to [/] .\n"), ((373, (32, 37)), "*MOT:\tthat's why he didn't need money to come home from the library yesterday he said I'll have enough to [/] .\n"), ((373, (46, 50)), "*MOT:\tthat's why he didn't need money to come home from the library yesterday he said I'll have enough to [/] .\n"), ((383, (6, 10)), '*MOT:\tyeah .\n'), ((387, (25, 32)), "*FAT:\tI'm afraid the (.) chicken is &-uh (.) not as well cooked as [/] as usual .\n"), ((393, (12, 16)), "*MOT:\twell <it's> [/] it's probably better cooked than the biscuits though .\n"), ((393, (59, 67)), "*MOT:\twell <it's> [/] it's probably better cooked than the biscuits though .\n"), ((399, (-1, 4)), "*FAT:\tI don't know .\n"), ((402, (36, 42)), "*MOT:\twell they'll both be nice and tender on the inside .\n"), ((402, (50, 56)), "*MOT:\twell they'll both be nice and tender on the inside .\n"), ((407, (6, 9)), '*FAT:\tzzz .\n'), ((410, (46, 54)), '*FAT:\twell I told Nathaniel that going out to barbecue saves more of a symbolic cash than after it was started barbecuing season .\n'), ((410, (55, 60)), '*FAT:\twell I told Nathaniel that going out to barbecue saves more of a symbolic cash than after it was started barbecuing season .\n'), ((410, (80, 84)), '*FAT:\twell I told Nathaniel that going out to barbecue saves more of a symbolic cash than after it was started barbecuing season .\n'), ((410, (122, 128)), '*FAT:\twell I told Nathaniel that going out to barbecue saves more of a symbolic cash than after it was started barbecuing season .\n'), ((420, (-1, 4)), '*MOT:\tjust to celebrate the first day of spring .\n'), ((420, (34, 37)), '*MOT:\tjust to celebrate the first day of spring .\n'), ((420, (41, 47)), '*MOT:\tjust to celebrate the first day of spring .\n'), ((425, (-1, 4)), "*FAT:\thow's the chicken Munchkin ?\n"), ((425, (16, 23)), "*FAT:\thow's the chicken Munchkin ?\n"), ((430, (6, 10)), '*CHI:\tnice .\n'), ((433, (-1, 4)), '*CHI:\tbarbecuing (.) a long thing .\n'), ((433, (28, 33)), '*CHI:\tbarbecuing (.) a long thing .\n'), ((436, (-1, 4)), "*CHI:\tbarbecuing it's a long thing to do .\n"), ((436, (29, 34)), "*CHI:\tbarbecuing it's a long thing to do .\n"), ((441, (6, 10)), '*MOT:\tyeah .\n'), ((444, (-1, 4)), '*FAT:\tit takes awhile (.) .\n'), ((444, (22, 25)), '*FAT:\tit takes awhile (.) .\n'), ((447, (-1, 4)), "*FAT:\t(be)cause you just can't turn the coals on .\n"), ((447, (40, 45)), "*FAT:\t(be)cause you just can't turn the coals on .\n"), ((452, (-1, 4)), '*FAT:\tlike you do an oven .\n'), ((452, (21, 25)), '*FAT:\tlike you do an oven .\n'), ((455, (-1, 4)), "*FAT:\tbut when you cook it in the oven it doesn't taste this good .\n"), ((455, (34, 38)), "*FAT:\tbut when you cook it in the oven it doesn't taste this good .\n"), ((455, (50, 55)), "*FAT:\tbut when you cook it in the oven it doesn't taste this good .\n"), ((461, (11, 14)), '*CHI:\tuhuh (.) .\n'), ((464, (-1, 4)), "*MOT:\texcuse me I'm going to check the +...\n"), ((470, (6, 9)), '*CHI:\tzzz .\n'), ((478, (-1, 4)), '*FAT:\there a napkin .\n'), ((478, (13, 19)), '*FAT:\there a napkin .\n'), ((481, (9, 15)), '*CHI:\tmy napkin ?\n'), ((485, (6, 10)), '*FAT:\tyeah [>] .\n'), ((485, (11, 14)), '*FAT:\tyeah [>] .\n'), ((488, (12, 16)), '*CHI:\t<this one> [<] ?\n'), ((488, (17, 20)), '*CHI:\t<this one> [<] ?\n'), ((492, (6, 9)), '*FAT:\tmhm .\n'), ((495, (-1, 4)), "*CHI:\tI'll leave it on in the show then it's all finished .\n"), ((495, (30, 34)), "*CHI:\tI'll leave it on in the show then it's all finished .\n"), ((501, (24, 28)), '*MOT:\tit all fit on the tape ?\n'), ((504, (-1, 4)), '*FAT:\tyou got lucky .\n'), ((507, (6, 9)), '*MOT:\tyes .\n'), ((510, (-1, 4)), '*CHI:\tit was a lot of stuff .\n'), ((510, (15, 18)), '*CHI:\tit was a lot of stuff .\n'), ((510, (22, 27)), '*CHI:\tit was a lot of stuff .\n'), ((513, (-1, 4)), '*MOT:\tdo you have_to use the bath+room , Honey ?\n'), ((513, (41, 46)), '*MOT:\tdo you have_to use the bath+room , Honey ?\n'), ((519, (14, 17)), '*CHI:\tno just [>] .\n'), ((522, (6, 10)), '*MOT:\tokay [<] .\n'), ((522, (11, 14)), '*MOT:\tokay [<] .\n'), ((525, (-1, 4)), '*CHI:\tjust just how &-uh [//] how many people in the sand yard sit this way ?\n'), ((525, (39, 45)), '*CHI:\tjust just how &-uh [//] how many people in the sand yard sit this way ?\n'), ((525, (53, 57)), '*CHI:\tjust just how &-uh [//] how many people in the sand yard sit this way ?\n'), ((525, (72, 75)), '*CHI:\tjust just how &-uh [//] how many people in the sand yard sit this way ?\n'), ((535, (-1, 4)), '*CHI:\tthey sit like this .\n'), ((538, (-1, 4)), '*MOT:\tthey wriggle in their seats in Nathaniel land ?\n'), ((538, (28, 33)), '*MOT:\tthey wriggle in their seats in Nathaniel land ?\n'), ((538, (47, 51)), '*MOT:\tthey wriggle in their seats in Nathaniel land ?\n'), ((544, (6, 10)), '*CHI:\tyeah .\n'), ((547, (-1, 4)), '*MOT:\tdoes it have rickety chairs ?\n'), ((547, (27, 33)), '*MOT:\tdoes it have rickety chairs ?\n'), ((551, (6, 10)), '*CHI:\tyeah .\n'), ((554, (10, 15)), "*FAT:\twhy don't we turn the sound and xxx it off .\n"), ((554, (28, 33)), "*FAT:\twhy don't we turn the sound and xxx it off .\n"), ((566, (-1, 4)), '*CHI:\tit was just a spill .\n'), ((566, (20, 25)), '*CHI:\tit was just a spill .\n'), ((570, (-1, 4)), '*MOT:\toh you spilled a little bit ?\n'), ((570, (30, 33)), '*MOT:\toh you spilled a little bit ?\n'), ((574, (6, 9)), '*CHI:\tyes .\n'), ((577, (-1, 4)), "*MOT:\tokay well it's just a little .\n"), ((581, (-1, 4)), '*MOT:\tyou [/] you got the napkin there fast .\n'), ((581, (26, 32)), '*MOT:\tyou [/] you got the napkin there fast .\n'), ((584, (11, 22)), "*FAT:\t<the bi(s)cuits> [//] the biscuits aren't burned .\n"), ((584, (32, 40)), "*FAT:\t<the bi(s)cuits> [//] the biscuits aren't burned .\n"), ((587, (6, 13)), "*FAT:\tthey're (.) just about the way they [//] they're supposed to be .\n"), ((587, (14, 17)), "*FAT:\tthey're (.) just about the way they [//] they're supposed to be .\n"), ((587, (33, 36)), "*FAT:\tthey're (.) just about the way they [//] they're supposed to be .\n"), ((595, (6, 10)), '*FAT:\tyeah .\n'), ((598, (-1, 4)), '*MOT:\tI guess the reason I was going to take them out before is (be)cause <I> [/] I like them better (.) xxx [>] .\n'), ((598, (18, 24)), '*MOT:\tI guess the reason I was going to take them out before is (be)cause <I> [/] I like them better (.) xxx [>] .\n'), ((598, (78, 81)), '*MOT:\tI guess the reason I was going to take them out before is (be)cause <I> [/] I like them better (.) xxx [>] .\n'), ((598, (101, 104)), '*MOT:\tI guess the reason I was going to take them out before is (be)cause <I> [/] I like them better (.) xxx [>] .\n'), ((605, (-1, 4)), '*FAT:\tunder done [<] ?\n'), ((605, (17, 20)), '*FAT:\tunder done [<] ?\n'), ((612, (39, 44)), "*MOT:\twell it's just that light golden brown across the top (.) .\n"), ((612, (60, 63)), "*MOT:\twell it's just that light golden brown across the top (.) .\n"), ((617, (-1, 4)), "*MOT:\tthat's not light golden brown (.) .\n"), ((617, (30, 35)), "*MOT:\tthat's not light golden brown (.) .\n"), ((617, (36, 39)), "*MOT:\tthat's not light golden brown (.) .\n"), ((620, (6, 10)), "*MOT:\tit's medium golden brown .\n"), ((620, (11, 17)), "*MOT:\tit's medium golden brown .\n"), ((620, (25, 30)), "*MOT:\tit's medium golden brown .\n"), ((623, (-1, 4)), "*FAT:\tbut it's not burnt .\n"), ((629, (16, 19)), '*FAT:\tthe other way the mushy part is supposed to be flaky .\n'), ((629, (30, 34)), '*FAT:\tthe other way the mushy part is supposed to be flaky .\n'), ((634, (11, 17)), "*MOT:\tyeah that's true .\n"), ((637, (-1, 4)), '*MOT:\tI liked it .\n'), ((640, (-1, 4)), "*MOT:\ttrue when mushy then I can't separate these little &-uh layers .\n"), ((640, (16, 21)), "*MOT:\ttrue when mushy then I can't separate these little &-uh layers .\n"), ((640, (62, 68)), "*MOT:\ttrue when mushy then I can't separate these little &-uh layers .\n"), ((645, (6, 9)), '*FAT:\tmhm (.) .\n'), ((645, (10, 13)), '*FAT:\tmhm (.) .\n'), ((648, (-1, 4)), '*CHI:\tthose calendars are so good to eat .\n'), ((656, (-1, 4)), '*CHI:\tthose calendars are so good to eat !\n'), ((660, (-1, 4)), '*FAT:\tthose calendars ?\n'), ((672, (26, 34)), '*CHI:\tno I mean that real calendar is good to eat .\n'), ((677, (-1, 4)), '*FAT:\tyou want to eat the calendar ?\n'), ((677, (26, 34)), '*FAT:\tyou want to eat the calendar ?\n'), ((681, (-1, 4)), '*MOT:\twhen did you eat a calendar ?\n'), ((681, (25, 33)), '*MOT:\twhen did you eat a calendar ?\n'), ((685, (10, 15)), '*FAT:\t<in what> [//] [>] in what month would you start eating ?\n'), ((685, (33, 38)), '*FAT:\t<in what> [//] [>] in what month would you start eating ?\n'), ((693, (17, 21)), '*CHI:\twell every time we eat .\n'), ((696, (12, 16)), '*CHI:\tevery time people eat .\n'), ((696, (17, 23)), '*CHI:\tevery time people eat .\n'), ((699, (-1, 4)), '*CHI:\telse when people eat .\n'), ((699, (16, 22)), '*CHI:\telse when people eat .\n'), ((702, (-1, 4)), "*MOT:\tNathaniel are you sure you don't have_to go to the bath+room ?\n"), ((709, (6, 10)), '*CHI:\tyeah !\n'), ((715, (-1, 4)), '*MOT:\tif you have_to go to the bath+room come back and have food to eat after that .\n'), ((715, (60, 64)), '*MOT:\tif you have_to go to the bath+room come back and have food to eat after that .\n'), ((725, (10, 13)), '*CHI:\txxx eat .\n'), ((728, (6, 9)), '*CHI:\tzzz .\n'), ((735, (-1, 4)), '*FAT:\tgo pee+pee .\n'), ((735, (9, 16)), '*FAT:\tgo pee+pee .\n'), ((738, (6, 9)), '*CHI:\tzzz .\n'), ((747, (-1, 4)), '*MOT:\tjust to avoid confrontation (.) .\n'), ((750, (-1, 4)), "*MOT:\toh the chicken's xxx .\n"), ((750, (13, 22)), "*MOT:\toh the chicken's xxx .\n"), ((750, (23, 26)), "*MOT:\toh the chicken's xxx .\n"), ((753, (-1, 4)), "*MOT:\tit is overdone but <it's still> [//] it's barbecued .\n"), ((753, (26, 30)), "*MOT:\tit is overdone but <it's still> [//] it's barbecued .\n"), ((753, (31, 37)), "*MOT:\tit is overdone but <it's still> [//] it's barbecued .\n"), ((757, (6, 10)), '*FAT:\tyeah .\n'), ((760, (-1, 4)), '*MOT:\tand it would be very unhealthy to have that like that all the time .\n'), ((760, (68, 72)), '*MOT:\tand it would be very unhealthy to have that like that all the time .\n'), ((766, (6, 9)), '*CHI:\tzzz .\n'), ((770, (15, 19)), "*MOT:\twhat the hell it's the first day of spring .\n"), ((770, (35, 38)), "*MOT:\twhat the hell it's the first day of spring .\n"), ((770, (42, 48)), "*MOT:\twhat the hell it's the first day of spring .\n"), ((775, (-1, 4)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (24, 32)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (40, 44)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (53, 60)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (61, 66)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (95, 101)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (102, 107)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((775, (120, 127)), "*FAT:\tusually the first barbecue of the year the (.) chicken isn't cooked right it takes a (.) couple times in the warm weather .\n"), ((784, (-1, 4)), '*FAT:\tin the warm weather you can still cook it and just stay out there with the barbecue .\n'), ((784, (18, 25)), '*FAT:\tin the warm weather you can still cook it and just stay out there with the barbecue .\n'), ((784, (81, 89)), '*FAT:\tin the warm weather you can still cook it and just stay out there with the barbecue .\n'), ((791, (6, 10)), '*MOT:\tyeah .\n'), ((794, (-1, 4)), "*FAT:\tin the cold weather you say let's cook this sucker fast .\n"), ((794, (18, 25)), "*FAT:\tin the cold weather you say let's cook this sucker fast .\n"), ((794, (40, 44)), "*FAT:\tin the cold weather you say let's cook this sucker fast .\n"), ((794, (50, 61)), "*FAT:\tin the cold weather you say let's cook this sucker fast .\n"), ((801, (6, 8)), '*CHI:\thi Ma .\n'), ((804, (10, 13)), '*MOT:\tthe sky is all overcast and today is the night that I was telling &-uh Melanie about <the sky [/]> [>] .\n'), ((804, (34, 39)), '*MOT:\tthe sky is all overcast and today is the night that I was telling &-uh Melanie about <the sky [/]> [>] .\n'), ((804, (47, 52)), '*MOT:\tthe sky is all overcast and today is the night that I was telling &-uh Melanie about <the sky [/]> [>] .\n'), ((812, (-1, 4)), "*FAT:\t<it's not overcast> [<] .\n"), ((812, (26, 29)), "*FAT:\t<it's not overcast> [<] .\n"), ((815, (-1, 4)), '*MOT:\tno ?\n'), ((824, (-1, 4)), '*MOT:\t(bec)ause when I looked out the window up front the sky was all gray [!] .\n'), ((824, (38, 44)), '*MOT:\t(bec)ause when I looked out the window up front the sky was all gray [!] .\n'), ((824, (58, 61)), '*MOT:\t(bec)ause when I looked out the window up front the sky was all gray [!] .\n'), ((830, (26, 33)), '*FAT:\twe just watched the sun set .\n'), ((833, (-1, 4)), '*MOT:\tyeah ?\n'), ((833, (6, 10)), '*MOT:\tyeah ?\n'), ((837, (14, 17)), '*CHI:\toh good [<] .\n'), ((840, (57, 63)), '*MOT:\tmaybe we can go out tonight and see if we can &-uh notice where (.) Mars and Venus (.) and the <Pleiades moon are> [>] .\n'), ((840, (70, 73)), '*MOT:\tmaybe we can go out tonight and see if we can &-uh notice where (.) Mars and Venus (.) and the <Pleiades moon are> [>] .\n'), ((840, (121, 124)), '*MOT:\tmaybe we can go out tonight and see if we can &-uh notice where (.) Mars and Venus (.) and the <Pleiades moon are> [>] .\n'), ((849, (12, 16)), "*CHI:\t<&-um come to school and Ma tell them I'm not coming (.) today> [<] .\n"), ((849, (20, 26)), "*CHI:\t<&-um come to school and Ma tell them I'm not coming (.) today> [<] .\n"), ((849, (70, 73)), "*CHI:\t<&-um come to school and Ma tell them I'm not coming (.) today> [<] .\n"), ((854, (6, 13)), "*MOT:\tthere's no school today .\n"), ((854, (17, 23)), "*MOT:\tthere's no school today .\n"), ((854, (24, 29)), "*MOT:\tthere's no school today .\n"), ((857, (-1, 4)), "*CHI:\tbut tell them I'm not coming .\n"), ((861, (6, 13)), "*FAT:\tthere's no one there to answer the phone .\n"), ((861, (17, 20)), "*FAT:\tthere's no one there to answer the phone .\n"), ((861, (41, 46)), "*FAT:\tthere's no one there to answer the phone .\n"), ((866, (6, 10)), "*FAT:\tit's Sunday .\n"), ((869, (6, 13)), "*FAT:\tthey're all home eating .\n"), ((869, (18, 22)), "*FAT:\tthey're all home eating .\n"), ((869, (23, 29)), "*FAT:\tthey're all home eating .\n"), ((872, (15, 23)), '*CHI:\teven the teachers ?\n'), ((876, (15, 23)), '*FAT:\teven the teachers .\n'), ((879, (-1, 4)), "*FAT:\tthey're not going to go to school when they don't have_to .\n"), ((879, (33, 39)), "*FAT:\tthey're not going to go to school when they don't have_to .\n"), ((884, (-1, 4)), '*MOT:\tthey have families too you know that .\n'), ((884, (16, 24)), '*MOT:\tthey have families too you know that .\n'), ((889, (-1, 4)), '*MOT:\tyou know Gail has a son and Karen has a son .\n'), ((889, (26, 29)), '*MOT:\tyou know Gail has a son and Karen has a son .\n'), ((894, (21, 27)), '*MOT:\tblow your nose please .\n'), ((897, (-1, 4)), '*CHI:\tI know his son Christopher .\n'), ((897, (17, 20)), '*CHI:\tI know his son Christopher .\n'), ((900, (-1, 4)), "*CHI:\the's his son .\n"), ((900, (15, 18)), "*CHI:\the's his son .\n"), ((903, (6, 10)), '*MOT:\tblow .\n'), ((907, (-1, 4)), "*MOT:\tthat's what I heard it alright .\n"), ((911, (13, 16)), '*CHI:\theehee yes .\n'), ((914, (36, 40)), "*CHI:\tthat's how you make blow your nose in Nathaniel land .\n"), ((914, (54, 58)), "*CHI:\tthat's how you make blow your nose in Nathaniel land .\n"), ((919, (37, 41)), '*MOT:\twell I think Karen is probably home with Christopher right now .\n'), ((925, (-1, 4)), '*CHI:\twhy ?\n'), ((929, (-1, 4)), '*CHI:\tChristopher +...\n'), ((932, (55, 59)), "*MOT:\twell <shouldn't> [/] shouldn't he have his Mummy home with him on one day a week ?\n"), ((932, (76, 79)), "*MOT:\twell <shouldn't> [/] shouldn't he have his Mummy home with him on one day a week ?\n"), ((932, (82, 86)), "*MOT:\twell <shouldn't> [/] shouldn't he have his Mummy home with him on one day a week ?\n"), ((939, (10, 14)), '*MOT:\t<or two> [>] ?\n'), ((939, (15, 18)), '*MOT:\t<or two> [>] ?\n'), ((943, (-1, 4)), "*FAT:\taren't you sad when your Mummy goes to work [<] ?\n"), ((943, (6, 12)), "*FAT:\taren't you sad when your Mummy goes to work [<] ?\n"), ((953, (-1, 4)), "*FAT:\taren't you sad when your Mummy goes to work ?\n"), ((953, (6, 12)), "*FAT:\taren't you sad when your Mummy goes to work ?\n"), ((965, (-1, 4)), "*CHI:\tI get the toy (.) that doesn't talk .\n"), ((965, (16, 19)), "*CHI:\tI get the toy (.) that doesn't talk .\n"), ((965, (20, 23)), "*CHI:\tI get the toy (.) that doesn't talk .\n"), ((965, (37, 41)), "*CHI:\tI get the toy (.) that doesn't talk .\n"), ((970, (6, 10)), '*FAT:\tyeah [>] .\n'), ((970, (11, 14)), '*FAT:\tyeah [>] .\n'), ((973, (-1, 4)), '*CHI:\tif [<] you wind th(is) [//] this thing in back of your toy it will talk .\n'), ((973, (39, 44)), '*CHI:\tif [<] you wind th(is) [//] this thing in back of your toy it will talk .\n'), ((973, (48, 52)), '*CHI:\tif [<] you wind th(is) [//] this thing in back of your toy it will talk .\n'), ((973, (61, 64)), '*CHI:\tif [<] you wind th(is) [//] this thing in back of your toy it will talk .\n'), ((978, (11, 15)), "*MOT:\tI'll wait (un)til after dinner then .\n"), ((978, (30, 36)), "*MOT:\tI'll wait (un)til after dinner then .\n"), ((982, (10, 13)), '*MOT:\t<I> [/] I wanted to talk too much instead of eating .\n'), ((982, (51, 57)), '*MOT:\t<I> [/] I wanted to talk too much instead of eating .\n'), ((987, (6, 8)), '*CHI:\thi [<] .\n'), ((987, (9, 12)), '*CHI:\thi [<] .\n'), ((990, (-1, 4)), "*CHI:\tit's Judy [?] .\n"), ((990, (6, 10)), "*CHI:\tit's Judy [?] .\n"), ((993, (6, 9)), '*CHI:\tzzz .\n'), ((997, (12, 15)), '*FAT:\t<okay eat up> [>] .\n'), ((997, (20, 23)), '*FAT:\t<okay eat up> [>] .\n'), ((1000, (6, 9)), '*CHI:\tzzz [<] .\n'), ((1000, (10, 13)), '*CHI:\tzzz [<] .\n'), ((1004, (9, 13)), '*FAT:\tno toys at our table .\n'), ((1004, (21, 26)), '*FAT:\tno toys at our table .\n'), ((1011, (9, 13)), '*FAT:\tno toys at our table .\n'), ((1011, (21, 26)), '*FAT:\tno toys at our table .\n'), ((1018, (-1, 4)), "*CHI:\tI didn't play any toy at our table .\n"), ((1018, (24, 27)), "*CHI:\tI didn't play any toy at our table .\n"), ((1018, (35, 40)), "*CHI:\tI didn't play any toy at our table .\n"), ((1023, (-1, 4)), '*CHI:\tnot me .\n'), ((1028, (33, 38)), "*MOT:\tDylan's in his last minute thing again .\n"), ((1034, (11, 14)), "*MOT:\t&-um (.) he said he couldn't use the emotional side because he [//] his part of the xxx was &-um (.) very specific .\n"), ((1034, (53, 57)), "*MOT:\t&-um (.) he said he couldn't use the emotional side because he [//] his part of the xxx was &-um (.) very specific .\n"), ((1034, (78, 82)), "*MOT:\t&-um (.) he said he couldn't use the emotional side because he [//] his part of the xxx was &-um (.) very specific .\n"), ((1034, (90, 93)), "*MOT:\t&-um (.) he said he couldn't use the emotional side because he [//] his part of the xxx was &-um (.) very specific .\n"), ((1041, (6, 12)), '*FAT:\twh(at) +/.\n'), ((1044, (-1, 4)), '*MOT:\tit was on the economics of it .\n'), ((1048, (55, 61)), '*MOT:\tBrendan [?] you really should have done (.) this before .\n'), ((1054, (-1, 4)), '*CHI:\tsee ?\n'), ((1054, (6, 9)), '*CHI:\tsee ?\n'), ((1058, (-1, 4)), '*CHI:\t<what do they> [//] what are those things called when +/.\n'), ((1058, (41, 47)), '*CHI:\t<what do they> [//] what are those things called when +/.\n'), ((1062, (6, 11)), "*FAT:\tdon't put that near your ear .\n"), ((1062, (22, 25)), "*FAT:\tdon't put that near your ear .\n"), ((1073, (9, 13)), '*MOT:\toh yuck .\n'), ((1080, (-1, 4)), "*FAT:\tI don't want +...\n"), ((1084, (-1, 4)), '*MOT:\tNathaniel no .\n'), ((1087, (-1, 4)), "*MOT:\tdon't swing your head around while you're eating .\n"), ((1087, (6, 11)), "*MOT:\tdon't swing your head around while you're eating .\n"), ((1087, (23, 27)), "*MOT:\tdon't swing your head around while you're eating .\n"), ((1087, (41, 47)), "*MOT:\tdon't swing your head around while you're eating .\n"), ((1087, (48, 54)), "*MOT:\tdon't swing your head around while you're eating .\n"), ((1092, (-1, 4)), '*FAT:\t(a)re you drinking your Quick ?\n'), ((1092, (6, 11)), '*FAT:\t(a)re you drinking your Quick ?\n'), ((1097, (-1, 4)), "*CHI:\tbut [/] but I'm eating .\n"), ((1097, (10, 13)), "*CHI:\tbut [/] but I'm eating .\n"), ((1097, (22, 28)), "*CHI:\tbut [/] but I'm eating .\n"), ((1100, (-1, 4)), '*FAT:\tI mean between [!] bites .\n'), ((1100, (25, 30)), '*FAT:\tI mean between [!] bites .\n'), ((1103, (22, 26)), '*MOT:\tno swinging the head .\n'), ((1106, (-1, 4)), '*MOT:\t<Daddy [/]> [>] .\n'), ((1108, (80, 83)), '*FAT:\t<and so what did you think of the presents that Mac and Melanie gave you> [<] .\n'), ((1115, (6, 13)), "*CHI:\tthey're good .\n"), ((1115, (14, 18)), "*CHI:\tthey're good .\n"), ((1118, (56, 62)), "*CHI:\twell at least I didn't know they gave presents to people .\n"), ((1123, (6, 9)), '*MOT:\tzzz .\n'), ((1128, (43, 47)), "*FAT:\twell we didn't see them at Christmas time .\n"), ((1133, (-1, 4)), '*CHI:\twhy ?\n'), ((1137, (-1, 4)), '*FAT:\tbecause every time they were going to come down here they had snow (.) and every time we were going to go up there the weather was bad (.) so we had to wait (un)til yesterday to see them and so <we gave> [/] we gave Michael his birthday present (be)cause we gave them their Christmas present before Christmas <xxx [/]> [>] .\n'), ((1137, (20, 24)), '*FAT:\tbecause every time they were going to come down here they had snow (.) and every time we were going to go up there the weather was bad (.) so we had to wait (un)til yesterday to see them and so <we gave> [/] we gave Michael his birthday present (be)cause we gave them their Christmas present before Christmas <xxx [/]> [>] .\n'), ((1137, (125, 132)), '*FAT:\tbecause every time they were going to come down here they had snow (.) and every time we were going to go up there the weather was bad (.) so we had to wait (un)til yesterday to see them and so <we gave> [/] we gave Michael his birthday present (be)cause we gave them their Christmas present before Christmas <xxx [/]> [>] .\n'), ((1137, (204, 209)), '*FAT:\tbecause every time they were going to come down here they had snow (.) and every time we were going to go up there the weather was bad (.) so we had to wait (un)til yesterday to see them and so <we gave> [/] we gave Michael his birthday present (be)cause we gave them their Christmas present before Christmas <xxx [/]> [>] .\n'), ((1137, (243, 250)), '*FAT:\tbecause every time they were going to come down here they had snow (.) and every time we were going to go up there the weather was bad (.) so we had to wait (un)til yesterday to see them and so <we gave> [/] we gave Michael his birthday present (be)cause we gave them their Christmas present before Christmas <xxx [/]> [>] .\n'), ((1156, (-1, 4)), "*CHI:\tand we're their friends .\n"), ((1156, (22, 29)), "*CHI:\tand we're their friends .\n"), ((1159, (6, 10)), '*FAT:\tyeah .\n'), ((1163, (-1, 4)), "*CHI:\tbut at least I didn't give Melanie a present .\n"), ((1168, (-1, 4)), '*FAT:\twe (.) well [/] .\n'), ((1171, (-1, 7)), '*MOT:\twe gave her her birthday present Honey in August when she had her birthday .\n'), ((1171, (39, 44)), '*MOT:\twe gave her her birthday present Honey in August when she had her birthday .\n'), ((1177, (-1, 4)), '*FAT:\tand we gave her her Christmas present before Christmas and what they gave you was your Christmas present yesterday .\n'), ((1177, (36, 43)), '*FAT:\tand we gave her her Christmas present before Christmas and what they gave you was your Christmas present yesterday .\n'), ((1185, (-1, 4)), "*MOT:\tbut Michael's birthday was in January .\n"), ((1189, (6, 10)), '*FAT:\tyeah .\n'), ((1192, (-1, 4)), "*MOT:\tand we never saw him in January so that's why he got his present yesterday .\n"), ((1199, (14, 23)), '*MOT:\tMelanie remembers that we gave her present before .\n'), ((1204, (-1, 4)), "*CHI:\tbut they didn't give me a <pr(esent)> [/] present on my [!] birthday .\n"), ((1204, (48, 55)), "*CHI:\tbut they didn't give me a <pr(esent)> [/] present on my [!] birthday .\n"), ((1209, (6, 9)), '*MOT:\tzzz .\n'), ((1213, (48, 53)), '*FAT:\t(be)cause your birthday is coming up next month .\n'), ((1218, (-1, 4)), '*MOT:\tlast year they did .\n'), ((1218, (11, 15)), '*MOT:\tlast year they did .\n'), ((1221, (6, 9)), '*FAT:\tmhm .\n'), ((1224, (-1, 4)), '*MOT:\tyou know your [/] your video tapes with &-uh cartoons on them ?\n'), ((1224, (29, 34)), '*MOT:\tyou know your [/] your video tapes with &-uh cartoons on them ?\n'), ((1224, (35, 40)), '*MOT:\tyou know your [/] your video tapes with &-uh cartoons on them ?\n'), ((1224, (51, 59)), '*MOT:\tyou know your [/] your video tapes with &-uh cartoons on them ?\n'), ((1230, (21, 29)), '*MOT:\t&-um (.) which cartoons were they ?\n'), ((1235, (-1, 4)), "*MOT:\tI don't know Bugs Bunny and things like that [>] .\n"), ((1235, (34, 40)), "*MOT:\tI don't know Bugs Bunny and things like that [>] .\n"), ((1235, (51, 54)), "*MOT:\tI don't know Bugs Bunny and things like that [>] .\n"), ((1240, (6, 9)), '*FAT:\tmhm [<] .\n'), ((1240, (10, 13)), '*FAT:\tmhm [<] .\n'), ((1243, (-1, 4)), "*MOT:\tthose were from Michael and Melanie and they give you <the sweatshirt that> [//] a sweatshirt that you wore yesterday (.) and &-uh they've given you other presents too .\n"), ((1243, (76, 81)), "*MOT:\tthose were from Michael and Melanie and they give you <the sweatshirt that> [//] a sweatshirt that you wore yesterday (.) and &-uh they've given you other presents too .\n"), ((1243, (137, 144)), "*MOT:\tthose were from Michael and Melanie and they give you <the sweatshirt that> [//] a sweatshirt that you wore yesterday (.) and &-uh they've given you other presents too .\n"), ((1253, (-1, 4)), '*MOT:\tbut those <are the ones I remember> [>] .\n'), ((1253, (25, 29)), '*MOT:\tbut those <are the ones I remember> [>] .\n'), ((1258, (-1, 4)), '*CHI:\t<did they Ma> [<] give me the pin cushion &-um tapes ?\n'), ((1258, (40, 47)), '*CHI:\t<did they Ma> [<] give me the pin cushion &-um tapes ?\n'), ((1258, (53, 58)), '*CHI:\t<did they Ma> [<] give me the pin cushion &-um tapes ?\n'), ((1264, (6, 9)), '*MOT:\tyes yes .\n'), ((1267, (-1, 4)), "*MOT:\tthat's right they gave you that [//] the tape .\n"), ((1267, (6, 12)), "*MOT:\tthat's right they gave you that [//] the tape .\n"), ((1267, (13, 18)), "*MOT:\tthat's right they gave you that [//] the tape .\n"), ((1267, (47, 51)), "*MOT:\tthat's right they gave you that [//] the tape .\n"), ((1272, (6, 9)), '*FAT:\tmhm [<] .\n'), ((1272, (10, 13)), '*FAT:\tmhm [<] .\n'), ((1275, (-1, 4)), '*CHI:\tbut (.) you mean the &-uh the xxx [///] whose that guy who &-uh gets all those pins out +...\n'), ((1275, (57, 60)), '*CHI:\tbut (.) you mean the &-uh the xxx [///] whose that guy who &-uh gets all those pins out +...\n'), ((1275, (85, 89)), '*CHI:\tbut (.) you mean the &-uh the xxx [///] whose that guy who &-uh gets all those pins out +...\n'), ((1281, (6, 12)), '*CHI:\tcush@c quash@c +...\n'), ((1281, (13, 20)), '*CHI:\tcush@c quash@c +...\n'), ((1285, (10, 13)), '*MOT:\tthe pin cushion man who (.) pops the balloons ?\n'), ((1285, (14, 21)), '*MOT:\tthe pin cushion man who (.) pops the balloons ?\n'), ((1285, (22, 25)), '*MOT:\tthe pin cushion man who (.) pops the balloons ?\n'), ((1291, (6, 9)), '*CHI:\tyes .\n'), ((1301, (6, 10)), '*FAT:\tyeah .\n'), ((1304, (-1, 4)), "*CHI:\tand that's not very nice .\n"), ((1304, (10, 16)), "*CHI:\tand that's not very nice .\n"), ((1307, (9, 13)), "*FAT:\tno it's not .\n"), ((1310, (11, 15)), '*CHI:\tnext time when we see the pin cushion guy tell him to not &-um &-uh cut the balloons .\n'), ((1310, (32, 35)), '*CHI:\tnext time when we see the pin cushion guy tell him to not &-um &-uh cut the balloons .\n'), ((1310, (36, 43)), '*CHI:\tnext time when we see the pin cushion guy tell him to not &-um &-uh cut the balloons .\n'), ((1310, (44, 47)), '*CHI:\tnext time when we see the pin cushion guy tell him to not &-um &-uh cut the balloons .\n'), ((1310, (74, 77)), '*CHI:\tnext time when we see the pin cushion guy tell him to not &-um &-uh cut the balloons .\n'), ((1317, (-1, 4)), '*CHI:\ttell him not to [>] .\n'), ((1321, (-1, 4)), '*FAT:\tyou mean tell him not to pop the balloons ?\n'), ((1327, (6, 10)), '*CHI:\tyeah .\n'), ((1330, (6, 10)), '*FAT:\tokay .\n'), ((1336, (6, 10)), '*CHI:\tyeah .\n'), ((1339, (-1, 4)), "*CHI:\t(be)cause he doesn't listen to people .\n"), ((1339, (37, 43)), "*CHI:\t(be)cause he doesn't listen to people .\n"), ((1343, (6, 9)), '*MOT:\tzzz .\n'), ((1347, (6, 10)), '*FAT:\tyeah .\n'), ((1350, (-1, 4)), "*MOT:\texcept it's a cartoon Than .\n"), ((1350, (13, 17)), "*MOT:\texcept it's a cartoon Than .\n"), ((1350, (20, 27)), "*MOT:\texcept it's a cartoon Than .\n"), ((1353, (10, 13)), "*MOT:\t<I> [/] I don't think he'll stop popping balloons because on the video he's always &-uh on the video .\n"), ((1353, (39, 46)), "*MOT:\t<I> [/] I don't think he'll stop popping balloons because on the video he's always &-uh on the video .\n"), ((1353, (71, 76)), "*MOT:\t<I> [/] I don't think he'll stop popping balloons because on the video he's always &-uh on the video .\n"), ((1353, (77, 81)), "*MOT:\t<I> [/] I don't think he'll stop popping balloons because on the video he's always &-uh on the video .\n"), ((1361, (6, 13)), '*CHI:\tpopping .\n'), ((1367, (14, 17)), '*CHI:\tpopping [>] .\n'), ((1370, (50, 53)), "*FAT:\t<and> [/] and don't the balloons win in the end ?\n"), ((1380, (-1, 4)), "*FAT:\tdon't the balloons win in the end (.) ?\n"), ((1380, (36, 39)), "*FAT:\tdon't the balloons win in the end (.) ?\n"), ((1380, (40, 43)), "*FAT:\tdon't the balloons win in the end (.) ?\n"), ((1386, (6, 11)), "*FAT:\tdon't they find their way to get rid of the pin cushion man ?\n"), ((1386, (28, 31)), "*FAT:\tdon't they find their way to get rid of the pin cushion man ?\n"), ((1386, (50, 53)), "*FAT:\tdon't they find their way to get rid of the pin cushion man ?\n"), ((1386, (54, 61)), "*FAT:\tdon't they find their way to get rid of the pin cushion man ?\n"), ((1386, (62, 65)), "*FAT:\tdon't they find their way to get rid of the pin cushion man ?\n"), ((1395, (-1, 4)), '*MOT:\tdo they ?\n'), ((1403, (-1, 4)), '*MOT:\tI forget .\n'), ((1406, (36, 43)), "*FAT:\tmaybe we'll have_to watch the cartoon again soon to see how .\n"), ((1411, (-1, 4)), '*CHI:\tI know how they put (.) stuff in it .\n'), ((1411, (30, 35)), '*CHI:\tI know how they put (.) stuff in it .\n'), ((1416, (-1, 4)), '*CHI:\t<they put mm stu(ff)> [//] they put Playdough in everything and then they swim on the pin cush@c guy .\n'), ((1416, (92, 95)), '*CHI:\t<they put mm stu(ff)> [//] they put Playdough in everything and then they swim on the pin cush@c guy .\n'), ((1416, (96, 102)), '*CHI:\t<they put mm stu(ff)> [//] they put Playdough in everything and then they swim on the pin cush@c guy .\n'), ((1416, (103, 106)), '*CHI:\t<they put mm stu(ff)> [//] they put Playdough in everything and then they swim on the pin cush@c guy .\n'), ((1422, (6, 9)), '*CHI:\tpin cushion guy .\n'), ((1422, (10, 17)), '*CHI:\tpin cushion guy .\n'), ((1422, (18, 21)), '*CHI:\tpin cushion guy .\n'), ((1425, (6, 10)), '*FAT:\tyeah .\n'), ((1428, (-1, 4)), "*CHI:\tand that's how the ending goes .\n"), ((1432, (-1, 4)), "*FAT:\tno he can't pop their balloons any more like that .\n"), ((1437, (11, 15)), '*CHI:\tn(o) yeah [!] .\n'), ((1437, (16, 19)), '*CHI:\tn(o) yeah [!] .\n'), ((1440, (6, 8)), '*FAT:\tmm .\n'), ((1446, (11, 17)), "*MOT:\tgood memory Nathaniel I didn't remember that part .\n"), ((1446, (51, 55)), "*MOT:\tgood memory Nathaniel I didn't remember that part .\n"), ((1451, (6, 12)), "*CHI:\tyou'll have_to see it .\n"), ((1454, (6, 10)), '*MOT:\tyeah .\n'), ((1457, (-1, 4)), '*FAT:\tdo you want another piece of .\n'), ((1457, (26, 31)), '*FAT:\tdo you want another piece of .\n'), ((1460, (6, 10)), "*CHI:\tit's on my T_V .\n"), ((1464, (-1, 4)), '*MOT:\twant another piece of chicken ?\n'), ((1464, (19, 24)), '*MOT:\twant another piece of chicken ?\n'), ((1464, (28, 35)), '*MOT:\twant another piece of chicken ?\n'), ((1468, (11, 14)), '*CHI:\t&-uh (.) yeah .\n'), ((1468, (15, 19)), '*CHI:\t&-uh (.) yeah .\n'), ((1471, (8, 14)), '*CHI:\ta couple of pieces .\n'), ((1471, (18, 24)), '*CHI:\ta couple of pieces .\n'), ((1474, (-1, 4)), '*MOT:\tit has a lot of bone .\n'), ((1474, (15, 18)), '*MOT:\tit has a lot of bone .\n'), ((1474, (22, 26)), '*MOT:\tit has a lot of bone .\n'), ((1478, (6, 9)), '*FAT:\tmhm .\n'), ((1484, (6, 9)), '*FAT:\txxx .\n'), ((1486, (-1, 4)), '*MOT:\tI know .\n'), ((1490, (-1, 4)), '*MOT:\there [/] here you go .\n'), ((1494, (6, 9)), '*CHI:\tzzz .\n'), ((1498, (-1, 4)), '*FAT:\tsorry .\n'), ((1498, (6, 11)), '*FAT:\tsorry .\n'), ((1504, (-1, 4)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (25, 33)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (43, 50)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1504, (55, 63)), '*MOT:\tI like to wrap the biscuits and have chicken and biscuits .\n'), ((1509, (-1, 4)), '*CHI:\twant to watch television with me on the [/] my television that I got right here (.) ?\n'), ((1516, (-1, 4)), '*CHI:\twho wants to watch it with me ?\n'), ((1521, (17, 22)), '*CHI:\traise your hands .\n'), ((1524, (-1, 4)), '*FAT:\tnot me .\n'), ((1527, (-1, 4)), '*FAT:\tI want to eat dinner .\n'), ((1527, (20, 26)), '*FAT:\tI want to eat dinner .\n'), ((1530, (17, 21)), '*CHI:\traise your hand .\n'), ((1533, (-1, 4)), '*CHI:\tdo you want to ?\n'), ((1538, (-1, 4)), "*MOT:\tI think we should eat instead of playing television don't you think ?\n"), ((1538, (58, 63)), "*MOT:\tI think we should eat instead of playing television don't you think ?\n"), ((1545, (-1, 4)), '*CHI:\tthis is my [!] television .\n'), ((1548, (-1, 4)), '*FAT:\tcan you turn your television off for a couple of minutes ?\n'), ((1548, (45, 51)), '*FAT:\tcan you turn your television off for a couple of minutes ?\n'), ((1548, (55, 62)), '*FAT:\tcan you turn your television off for a couple of minutes ?\n'), ((1554, (-1, 4)), "*CHI:\tit's off .\n"), ((1560, (-1, 4)), '*FAT:\tcan you put it away ?\n'), ((1564, (6, 10)), '*CHI:\tokay .\n'), ((1567, (-1, 4)), '*CHI:\tbut down there .\n'), ((1573, (6, 10)), '*CHI:\tokay .\n'), ((1576, (-1, 4)), '*CHI:\tuntil I eat .\n'), ((1579, (6, 10)), "*FAT:\tit's about seven minutes <to six> [>] .\n"), ((1579, (23, 30)), "*FAT:\tit's about seven minutes <to six> [>] .\n"), ((1579, (40, 43)), "*FAT:\tit's about seven minutes <to six> [>] .\n"), ((1584, (-1, 4)), '*CHI:\tthat noise bugs me .\n'), ((1584, (11, 16)), '*CHI:\tthat noise bugs me .\n'), ((1584, (17, 21)), '*CHI:\tthat noise bugs me .\n'), ((1587, (-1, 4)), '*FAT:\t<what noise> [>] ?\n'), ((1587, (19, 22)), '*FAT:\t<what noise> [>] ?\n'), ((1591, (-1, 4)), '*CHI:\tbut that [/] that noise from the (re)frigerator (.) it bugs me .\n'), ((1591, (24, 29)), '*CHI:\tbut that [/] that noise from the (re)frigerator (.) it bugs me .\n'), ((1596, (-1, 4)), "*MOT:\tI think it's the fan &-uh that you must hear +/.\n"), ((1596, (23, 26)), "*MOT:\tI think it's the fan &-uh that you must hear +/.\n"), ((1601, (-1, 4)), '*FAT:\tno the refrigerator just kicked on .\n'), ((1607, (-1, 4)), '*MOT:\tnever mind .\n'), ((1607, (12, 16)), '*MOT:\tnever mind .\n'), ((1611, (-1, 4)), '*CHI:\tand that bugs me .\n'), ((1611, (15, 19)), '*CHI:\tand that bugs me .\n'), ((1617, (11, 15)), "*CHI:\tI'll tell that to stop .\n"), ((1620, (6, 10)), '*CHI:\tstop that refrigerator .\n'), ((1623, (69, 75)), "*FAT:\toh don't say that because if the refrigerator stops everything that's in the freezer will thaw and it will not be any good and everything that's in the refrigerator will get warm and it willn't be cold anymore .\n"), ((1638, (-1, 4)), '*FAT:\twe have_to keep everything cold in the (re)frige(rator) .\n'), ((1638, (33, 37)), '*FAT:\twe have_to keep everything cold in the (re)frige(rator) .\n'), ((1643, (6, 12)), "*FAT:\tthat's why we have a refrigerator .\n"), ((1647, (-1, 4)), "*FAT:\tand it makes that noise (be)cause it's working right (.) .\n"), ((1647, (24, 29)), "*FAT:\tand it makes that noise (be)cause it's working right (.) .\n"), ((1647, (40, 44)), "*FAT:\tand it makes that noise (be)cause it's working right (.) .\n"), ((1647, (59, 62)), "*FAT:\tand it makes that noise (be)cause it's working right (.) .\n"), ((1652, (-1, 4)), "*FAT:\tand it's a quiet [!] noise .\n"), ((1652, (27, 32)), "*FAT:\tand it's a quiet [!] noise .\n"), ((1655, (-1, 4)), "*MOT:\tDylan is probably at the library until they're closed .\n"), ((1655, (45, 52)), "*MOT:\tDylan is probably at the library until they're closed .\n"), ((1660, (-1, 4)), '*FAT:\tyou think so ?\n'), ((1663, (6, 10)), '*MOT:\tyeah (.) .\n'), ((1663, (11, 14)), '*MOT:\tyeah (.) .\n'), ((1666, (-1, 4)), '*MOT:\twhen he left here it was after two .\n'), ((1671, (6, 10)), '*FAT:\tyeah .\n'), ((1674, (-1, 4)), "*MOT:\tand he's going to Earling's [?] house today .\n"), ((1674, (10, 14)), "*MOT:\tand he's going to Earling's [?] house today .\n"), ((1674, (38, 43)), "*MOT:\tand he's going to Earling's [?] house today .\n"), ((1674, (44, 49)), "*MOT:\tand he's going to Earling's [?] house today .\n"), ((1679, (6, 10)), '*FAT:\tyeah .\n'), ((1682, (-1, 4)), "*MOT:\tand you know he probably didn't get to the library before three thirty .\n"), ((1682, (70, 76)), "*MOT:\tand you know he probably didn't get to the library before three thirty .\n"), ((1688, (-1, 4)), '*FAT:\tprobably not .\n'), ((1691, (18, 24)), '*FAT:\tthe library closes at +...\n'), ((1694, (11, 17)), '*MOT:\tfive thirty .\n'), ((1697, (11, 14)), '*FAT:\tfive [/] five thirty .\n'), ((1697, (20, 26)), '*FAT:\tfive [/] five thirty .\n'), ((1700, (19, 25)), '*MOT:\tfive or five thirty .\n'), ((1703, (10, 15)), "*MOT:\tI'm sorry I didn't get it .\n"), ((1709, (-1, 4)), "*MOT:\the was saying if the library wasn't open that's alright .\n"), ((1709, (35, 41)), "*MOT:\the was saying if the library wasn't open that's alright .\n"), ((1709, (47, 53)), "*MOT:\the was saying if the library wasn't open that's alright .\n"), ((1715, (-1, 4)), '*MOT:\tother kids will be done with the books they took out of the library and [/] and I can look at them and mine .\n'), ((1715, (12, 16)), '*MOT:\tother kids will be done with the books they took out of the library and [/] and I can look at them and mine .\n'), ((1715, (39, 44)), '*MOT:\tother kids will be done with the books they took out of the library and [/] and I can look at them and mine .\n'), ((1715, (78, 81)), '*MOT:\tother kids will be done with the books they took out of the library and [/] and I can look at them and mine .\n'), ((1715, (109, 113)), '*MOT:\tother kids will be done with the books they took out of the library and [/] and I can look at them and mine .\n'), ((1724, (-1, 4)), "*MOT:\tso social studies isn't the first thing they had in mind .\n"), ((1724, (16, 23)), "*MOT:\tso social studies isn't the first thing they had in mind .\n"), ((1724, (40, 45)), "*MOT:\tso social studies isn't the first thing they had in mind .\n"), ((1724, (58, 62)), "*MOT:\tso social studies isn't the first thing they had in mind .\n"), ((1729, (6, 9)), '*CHI:\tzzz .\n'), ((1733, (-1, 4)), "*MOT:\tNathaniel you're crazy ?\n"), ((1733, (16, 22)), "*MOT:\tNathaniel you're crazy ?\n"), ((1733, (23, 28)), "*MOT:\tNathaniel you're crazy ?\n"), ((1737, (-1, 4)), '*MOT:\twhen would you have time ?\n'), ((1737, (26, 30)), '*MOT:\twhen would you have time ?\n'), ((1741, (6, 9)), '*CHI:\tzzz .\n'), ((1745, (14, 17)), '*CHI:\tnow xxx eat [?] this .\n'), ((1745, (18, 21)), '*CHI:\tnow xxx eat [?] this .\n'), ((1748, (-1, 4)), '*MOT:\tis this [= song he was singing] something you learned in school ?\n'), ((1748, (14, 16)), '*MOT:\tis this [= song he was singing] something you learned in school ?\n'), ((1748, (17, 21)), '*MOT:\tis this [= song he was singing] something you learned in school ?\n'), ((1748, (63, 69)), '*MOT:\tis this [= song he was singing] something you learned in school ?\n'), ((1753, (6, 9)), '*CHI:\tyes .\n'), ((1759, (-1, 4)), '*MOT:\tHenry ?\n'), ((1763, (6, 10)), '*CHI:\tyeah .\n'), ((1766, (-1, 4)), '*CHI:\tmake a cabin .\n'), ((1766, (13, 18)), '*CHI:\tmake a cabin .\n'), ((1769, (-1, 4)), '*CHI:\tmake your cabin for the song please .\n'), ((1769, (16, 21)), '*CHI:\tmake your cabin for the song please .\n'), ((1769, (30, 34)), '*CHI:\tmake your cabin for the song please .\n'), ((1769, (35, 41)), '*CHI:\tmake your cabin for the song please .\n'), ((1773, (6, 10)), '*MOT:\tokay .\n'), ((1776, (-1, 4)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1776, (14, 19)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1776, (27, 31)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1776, (45, 48)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1776, (54, 60)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1776, (77, 83)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1776, (84, 91)), '*CHI:\tin your cabin in the wood (.) a little man by a window stood (.) saw a rabbit hopping by (.) quiet as can be .\n'), ((1786, (-1, 4)), '*CHI:\thelp me !\n'), ((1789, (-1, 4)), '*CHI:\thelp me !\n'), ((1792, (10, 16)), '*CHI:\tthe rabbit [///] .\n'), ((1796, (-1, 4)), '*CHI:\they !\n'), ((1796, (6, 9)), '*CHI:\they !\n'), ((1799, (6, 12)), "*CHI:\tyou're talking quiet .\n"), ((1802, (-1, 4)), '*MOT:\tI know .\n'), ((1808, (6, 12)), "*MOT:\tthat's why .\n"), ((1811, (-1, 4)), '*MOT:\tgo ahead .\n'), ((1814, (-1, 4)), '*CHI:\tbefore the hunter shoot me dead (.) little rabbit come inside (.) safely you will hide .\n'), ((1814, (17, 23)), '*CHI:\tbefore the hunter shoot me dead (.) little rabbit come inside (.) safely you will hide .\n'), ((1814, (24, 29)), '*CHI:\tbefore the hunter shoot me dead (.) little rabbit come inside (.) safely you will hide .\n'), ((1814, (49, 55)), '*CHI:\tbefore the hunter shoot me dead (.) little rabbit come inside (.) safely you will hide .\n'), ((1821, (15, 20)), '*CHI:\tnow this cabin .\n'), ((1824, (-1, 4)), '*CHI:\tin the cabin in the woods a little man by the window stood .\n'), ((1824, (13, 18)), '*CHI:\tin the cabin in the woods a little man by the window stood .\n'), ((1824, (26, 31)), '*CHI:\tin the cabin in the woods a little man by the window stood .\n'), ((1824, (41, 44)), '*CHI:\tin the cabin in the woods a little man by the window stood .\n'), ((1824, (52, 58)), '*CHI:\tin the cabin in the woods a little man by the window stood .\n'), ((1829, (6, 12)), '*CHI:\trabbit +...\n'), ((1833, (-1, 4)), '*MOT:\tin the cabin in the woods a little man by the window stood .\n'), ((1833, (13, 18)), '*MOT:\tin the cabin in the woods a little man by the window stood .\n'), ((1833, (26, 31)), '*MOT:\tin the cabin in the woods a little man by the window stood .\n'), ((1833, (41, 44)), '*MOT:\tin the cabin in the woods a little man by the window stood .\n'), ((1833, (52, 58)), '*MOT:\tin the cabin in the woods a little man by the window stood .\n'), ((1838, (6, 12)), '*MOT:\trabbit +...\n'), ((1842, (-1, 4)), '*MOT:\tgo ahead .\n'), ((1845, (-1, 4)), '*CHI:\tsaw a rabbit hopping by +...\n'), ((1845, (12, 18)), '*CHI:\tsaw a rabbit hopping by +...\n'), ((1845, (19, 26)), '*CHI:\tsaw a rabbit hopping by +...\n'), ((1849, (-1, 4)), '*MOT:\tsaw a rabbit hopping by +...\n'), ((1849, (12, 18)), '*MOT:\tsaw a rabbit hopping by +...\n'), ((1849, (19, 26)), '*MOT:\tsaw a rabbit hopping by +...\n'), ((1852, (6, 15)), '*CHI:\t<(rab)bit hopping by> [<] .\n'), ((1852, (28, 31)), '*CHI:\t<(rab)bit hopping by> [<] .\n'), ((1860, (-1, 4)), '*CHI:\thelp me !\n'), ((1864, (10, 16)), '*CHI:\tthe rabbit said before the hunter shoots me dead .\n'), ((1864, (33, 39)), '*CHI:\tthe rabbit said before the hunter shoots me dead .\n'), ((1864, (40, 46)), '*CHI:\tthe rabbit said before the hunter shoots me dead .\n'), ((1869, (13, 19)), '*CHI:\tlittle rabbit come inside +...\n'), ((1873, (6, 12)), '*MOT:\thunter shoots me dead .\n'), ((1873, (13, 19)), '*MOT:\thunter shoots me dead .\n'), ((1876, (13, 19)), '*MOT:\tlittle rabbit come inside +...\n'), ((1880, (-1, 4)), '*CHI:\tsafely you will hide .\n'), ((1884, (-1, 4)), '*MOT:\tsafely you will hide .\n'), ((1888, (16, 21)), "*CHI:\tnow a big cabin and this time it's gonna be loud .\n"), ((1888, (31, 35)), "*CHI:\tnow a big cabin and this time it's gonna be loud .\n"), ((1888, (41, 46)), "*CHI:\tnow a big cabin and this time it's gonna be loud .\n"), ((1893, (-1, 4)), "*MOT:\thow's that ?\n"), ((1893, (6, 11)), "*MOT:\thow's that ?\n"), ((1897, (6, 10)), '*MOT:\tokay .\n'), ((1900, (-1, 4)), '*CHI:\tin the cabin in the woods +...\n'), ((1900, (13, 18)), '*CHI:\tin the cabin in the woods +...\n'), ((1900, (26, 31)), '*CHI:\tin the cabin in the woods +...\n'), ((1904, (-1, 4)), '*MOT:\tin the cabin in the woods +...\n'), ((1904, (13, 18)), '*MOT:\tin the cabin in the woods +...\n'), ((1904, (26, 31)), '*MOT:\tin the cabin in the woods +...\n'), ((1908, (15, 18)), '*CHI:\ta little man by a window stood .\n'), ((1908, (24, 30)), '*CHI:\ta little man by a window stood .\n'), ((1908, (31, 36)), '*CHI:\ta little man by a window stood .\n'), ((1913, (11, 17)), '*CHI:\t<and while> [>] .\n'), ((1913, (18, 21)), '*CHI:\t<and while> [>] .\n'), ((1916, (6, 9)), '*MOT:\tzzz [<] .\n'), ((1916, (10, 13)), '*MOT:\tzzz [<] .\n'), ((1920, (10, 18)), "*CHI:\tthe rabbit's hopping by safely you will hide !\n"), ((1920, (19, 26)), "*CHI:\tthe rabbit's hopping by safely you will hide !\n"), ((1926, (-1, 4)), "*MOT:\tyou skipped a whole bunch of it more didn't you ?\n"), ((1926, (26, 31)), "*MOT:\tyou skipped a whole bunch of it more didn't you ?\n"), ((1934, (27, 30)), "*CHI:\tno I didn't skip any [>] .\n"), ((1937, (14, 16)), "*MOT:\t<that's a> [/] that's a fun song [<] .\n"), ((1937, (30, 33)), "*MOT:\t<that's a> [/] that's a fun song [<] .\n"), ((1937, (34, 38)), "*MOT:\t<that's a> [/] that's a fun song [<] .\n"), ((1937, (39, 42)), "*MOT:\t<that's a> [/] that's a fun song [<] .\n"), ((1940, (-1, 4)), '*CHI:\tI learned it from Honey [?] .\n'), ((1940, (24, 29)), '*CHI:\tI learned it from Honey [?] .\n'), ((1943, (-1, 4)), '*MOT:\tthat was a nice one of Honey .\n'), ((1943, (29, 34)), '*MOT:\tthat was a nice one of Honey .\n'), ((1947, (-1, 4)), '*MOT:\tdid you hear that one Daddy ?\n'), ((1951, (-1, 4)), '*FAT:\tI heard it all the way from the other room .\n'), ((1951, (25, 28)), '*FAT:\tI heard it all the way from the other room .\n'), ((1951, (44, 48)), '*FAT:\tI heard it all the way from the other room .\n'), ((1956, (-1, 4)), '*MOT:\tI thought you would .\n'), ((1959, (-1, 4)), '*CHI:\tDaddy want to hear it again ?\n'), ((1966, (-1, 4)), "*FAT:\tI [//] one that I'd like to hear is &-uh love is something if you give it away .\n"), ((1966, (47, 51)), "*FAT:\tI [//] one that I'd like to hear is &-uh love is something if you give it away .\n"), ((1973, (-1, 1)), '*FAT:\t<I like that one> [>] .\n'), ((1973, (24, 27)), '*FAT:\t<I like that one> [>] .\n'), ((1976, (6, 9)), '*CHI:\tzzz [<] .\n'), ((1976, (10, 13)), '*CHI:\tzzz [<] .\n'), ((1980, (13, 21)), '*CHI:\tlittle ra(bbit) what ?\n'), ((1984, (32, 36)), '*FAT:\t&-uh I would like to hear love is something if you give it away .\n'), ((1989, (-1, 4)), '*FAT:\tI like that one .\n'), ((1995, (6, 10)), '*CHI:\tokay .\n'), ((1998, (-1, 4)), '*CHI:\tdo you want hear it too ?\n'), ((2003, (6, 9)), '*MOT:\tyes .\n'), ((2006, (6, 10)), '*CHI:\tlove is something if you give it away (.) give it away .\n'), ((2012, (6, 10)), '*CHI:\tlove is something if you give it away you end up having more .\n'), ((2019, (6, 10)), "*CHI:\tit's just like a magic penny (.) hold it tight and you don't have any friends that are near .\n"), ((2019, (29, 34)), "*CHI:\tit's just like a magic penny (.) hold it tight and you don't have any friends that are near .\n"), ((2019, (35, 38)), "*CHI:\tit's just like a magic penny (.) hold it tight and you don't have any friends that are near .\n"), ((2019, (76, 83)), "*CHI:\tit's just like a magic penny (.) hold it tight and you don't have any friends that are near .\n"), ((2027, (-1, 4)), '*CHI:\thave so many and (o)ver (o)ver over the floor .\n'), ((2027, (23, 29)), '*CHI:\thave so many and (o)ver (o)ver over the floor .\n'), ((2027, (46, 51)), '*CHI:\thave so many and (o)ver (o)ver over the floor .\n'), ((2033, (6, 10)), '*CHI:\tlove is something if you give it away (.) give it away .\n'), ((2039, (6, 10)), '*CHI:\tlove is something if you give it away you end up having more .\n'), ((2050, (-1, 4)), '*CHI:\twant to hear the other love song ?\n'), ((2050, (29, 33)), '*CHI:\twant to hear the other love song ?\n'), ((2050, (34, 38)), '*CHI:\twant to hear the other love song ?\n'), ((2057, (24, 32)), '*CHI:\tif there whirling swirling .\n'), ((2061, (6, 10)), '*FAT:\tsure .\n'), ((2064, (6, 10)), '*MOT:\tokay .\n'), ((2067, (-1, 4)), '*CHI:\tlove +...\n'), ((2075, (-1, 4)), "*CHI:\tI don't know what is .\n"), ((2079, (25, 29)), '*MOT:\tonly you know this song here .\n'), ((2085, (-1, 4)), "*MOT:\tthen you can't sing that one right ?\n"), ((2085, (35, 40)), "*MOT:\tthen you can't sing that one right ?\n"), ((2091, (-1, 4)), "*CHI:\t(be)cause I don't know it .\n"), ((2094, (6, 10)), '*MOT:\tokay .\n'), ((2097, (-1, 4)), '*MOT:\twhen you do learn it better will you sing it to us ?\n'), ((2103, (-1, 4)), '*CHI:\tat Open Center I learn it .\n'), ((2106, (-1, 4)), "*MOT:\tthat's the first time I ever heard that second part of love is something that [//] about the penny part (.) ?\n"), ((2106, (23, 27)), "*MOT:\tthat's the first time I ever heard that second part of love is something that [//] about the penny part (.) ?\n"), ((2106, (53, 57)), "*MOT:\tthat's the first time I ever heard that second part of love is something that [//] about the penny part (.) ?\n"), ((2106, (61, 65)), "*MOT:\tthat's the first time I ever heard that second part of love is something that [//] about the penny part (.) ?\n"), ((2106, (110, 113)), "*MOT:\tthat's the first time I ever heard that second part of love is something that [//] about the penny part (.) ?\n"), ((2115, (-1, 4)), '*MOT:\tI never heard that part before .\n'), ((2115, (25, 29)), '*MOT:\tI never heard that part before .\n'), ((2121, (6, 10)), "*CHI:\tit's just like a magic penny .\n"), ((2121, (29, 34)), "*CHI:\tit's just like a magic penny .\n"), ((2125, (6, 10)), '*MOT:\tlove is like a magic penny .\n'), ((2125, (27, 32)), '*MOT:\tlove is like a magic penny .\n'), ((2128, (10, 15)), "*FAT:\tI'm gonna turn the overhead light off .\n"), ((2128, (34, 39)), "*FAT:\tI'm gonna turn the overhead light off .\n"), ((2133, (6, 9)), "*CHI:\tsun it's just like a <ma(gic)> [///] why are you turning off the light ?\n"), ((2133, (10, 14)), "*CHI:\tsun it's just like a <ma(gic)> [///] why are you turning off the light ?\n"), ((2133, (71, 76)), "*CHI:\tsun it's just like a <ma(gic)> [///] why are you turning off the light ?\n"), ((2141, (-1, 4)), '*FAT:\tjust [/] just one of them .\n'), ((2144, (-1, 4)), '*FAT:\tyou still have the two other lights on in the room .\n'), ((2144, (35, 41)), '*FAT:\tyou still have the two other lights on in the room .\n'), ((2144, (52, 56)), '*FAT:\tyou still have the two other lights on in the room .\n'), ((2154, (-1, 4)), "*FAT:\tand now it's Daddy's turn to have the lights the way he likes it .\n"), ((2154, (27, 31)), "*FAT:\tand now it's Daddy's turn to have the lights the way he likes it .\n"), ((2154, (44, 50)), "*FAT:\tand now it's Daddy's turn to have the lights the way he likes it .\n"), ((2154, (55, 58)), "*FAT:\tand now it's Daddy's turn to have the lights the way he likes it .\n"), ((2161, (20, 23)), "*FAT:\tI'll turn the fan back on .\n"), ((2164, (-1, 4)), "*MOT:\tbut we don't need the fan .\n"), ((2164, (28, 31)), "*MOT:\tbut we don't need the fan .\n"), ((2167, (6, 10)), "*FAT:\tit's just nice to [/] to have the fan on low .\n"), ((2167, (40, 43)), "*FAT:\tit's just nice to [/] to have the fan on low .\n"), ((2172, (6, 10)), '*MOT:\tokay .\n'), ((2175, (-1, 4)), "*FAT:\tI was going to have a [/] a cigarette if that wouldn't be objectionable .\n"), ((2175, (28, 31)), "*FAT:\tI was going to have a [/] a cigarette if that wouldn't be objectionable .\n"), ((2181, (6, 9)), '*MOT:\tyes .\n'), ((2184, (-1, 4)), '*MOT:\tdoes that mean you want (t)a be excused ?\n'), ((2192, (10, 15)), "*FAT:\tI'm gonna come <back to the table> [>] .\n"), ((2192, (21, 26)), "*FAT:\tI'm gonna come <back to the table> [>] .\n"), ((2192, (34, 40)), "*FAT:\tI'm gonna come <back to the table> [>] .\n"), ((2192, (41, 44)), "*FAT:\tI'm gonna come <back to the table> [>] .\n"), ((2197, (10, 15)), '*MOT:\t<oh bring it> [//] have it here .\n'), ((2197, (16, 19)), '*MOT:\t<oh bring it> [//] have it here .\n'), ((2200, (35, 38)), "*MOT:\toh that's why you wanted the fan on .\n"), ((2205, (6, 10)), '*FAT:\tyeah .\n'), ((2208, (6, 10)), '*MOT:\tokay .\n'), ((2211, (-1, 4)), '*FAT:\tI mean if I have_to sit and smoke in the kitchen might as well turn the overhead fan on .\n'), ((2211, (26, 29)), '*FAT:\tI mean if I have_to sit and smoke in the kitchen might as well turn the overhead fan on .\n'), ((2211, (34, 39)), '*FAT:\tI mean if I have_to sit and smoke in the kitchen might as well turn the overhead fan on .\n'), ((2211, (47, 54)), '*FAT:\tI mean if I have_to sit and smoke in the kitchen might as well turn the overhead fan on .\n'), ((2211, (87, 90)), '*FAT:\tI mean if I have_to sit and smoke in the kitchen might as well turn the overhead fan on .\n'), ((2218, (11, 15)), '*MOT:\tgood idea .\n'), ((2221, (6, 10)), '*FAT:\tyeah (.) .\n'), ((2221, (11, 14)), '*FAT:\tyeah (.) .\n'), ((2224, (-1, 4)), '*FAT:\toh my tummy .\n'), ((2224, (12, 17)), '*FAT:\toh my tummy .\n'), ((2228, (-1, 4)), '*MOT:\tI know .\n'), ((2231, (6, 11)), "*MOT:\twe're just sitting here eating while +...\n"), ((2236, (16, 19)), "*CHI:\t<I'm your toy Mom> [<] .\n"), ((2240, (-1, 4)), "*FAT:\tI didn't realize I had eaten that much .\n"), ((2245, (6, 10)), '*MOT:\tyeah .\n'), ((2248, (18, 21)), "*CHI:\there's your toy Mom .\n"), ((2251, (6, 10)), '*CHI:\twind &-uh that thing in back (.) of your toy [>] .\n'), ((2251, (21, 26)), '*CHI:\twind &-uh that thing in back (.) of your toy [>] .\n'), ((2251, (35, 38)), '*CHI:\twind &-uh that thing in back (.) of your toy [>] .\n'), ((2251, (47, 50)), '*CHI:\twind &-uh that thing in back (.) of your toy [>] .\n'), ((2251, (51, 54)), '*CHI:\twind &-uh that thing in back (.) of your toy [>] .\n'), ((2256, (-1, 4)), "*FAT:\tI don't want any toys at the table Munchkin .\n"), ((2256, (23, 27)), "*FAT:\tI don't want any toys at the table Munchkin .\n"), ((2256, (35, 40)), "*FAT:\tI don't want any toys at the table Munchkin .\n"), ((2261, (19, 22)), '*MOT:\tget away xxx [>] .\n'), ((2266, (6, 10)), "*CHI:\tit's just on the seat .\n"), ((2266, (23, 27)), "*CHI:\tit's just on the seat .\n"), ((2269, (-1, 4)), "*FAT:\tI don't want any toys at the table Munchkin .\n"), ((2269, (23, 27)), "*FAT:\tI don't want any toys at the table Munchkin .\n"), ((2269, (35, 40)), "*FAT:\tI don't want any toys at the table Munchkin .\n"), ((2274, (-1, 4)), '*CHI:\twhy ?\n'), ((2278, (-1, 4)), '*FAT:\tif you can be Nathaniel the boy you can sit at the table .\n'), ((2278, (34, 37)), '*FAT:\tif you can be Nathaniel the boy you can sit at the table .\n'), ((2278, (57, 62)), '*FAT:\tif you can be Nathaniel the boy you can sit at the table .\n'), ((2283, (-1, 4)), '*FAT:\tif you want to be a toy you have_to go in your toybox .\n'), ((2283, (26, 29)), '*FAT:\tif you want to be a toy you have_to go in your toybox .\n'), ((2283, (53, 59)), '*FAT:\tif you want to be a toy you have_to go in your toybox .\n'), ((2289, (6, 10)), '*CHI:\t&a:h .\n'), ((2290, (6, 10)), "*MOT:\tit's dinner time not play time .\n"), ((2290, (11, 17)), "*MOT:\tit's dinner time not play time .\n"), ((2290, (18, 22)), "*MOT:\tit's dinner time not play time .\n"), ((2294, (-1, 4)), "*CHI:\tI'm the teacher .\n"), ((2294, (14, 21)), "*CHI:\tI'm the teacher .\n"), ((2297, (-1, 4)), "*CHI:\tand I'm doing +/.\n"), ((2300, (6, 10)), '*FAT:\t&-uh &-uh .\n'), ((2304, (6, 10)), '*FAT:\t&-uh &-uh .\n'), ((2305, (39, 43)), "*FAT:\twell you're sitting in the wrong seat then that seat is for Nathaniel the boy .\n"), ((2305, (80, 83)), "*FAT:\twell you're sitting in the wrong seat then that seat is for Nathaniel the boy .\n"), ((2312, (26, 30)), "*CHI:\twell I'm pretending it's for &-um the teacher .\n"), ((2312, (44, 51)), "*CHI:\twell I'm pretending it's for &-um the teacher .\n"), ((2317, (21, 25)), "*CHI:\tI'm pretending it's for the teacher .\n"), ((2317, (34, 41)), "*CHI:\tI'm pretending it's for the teacher .\n"), ((2328, (-1, 4)), "*CHI:\tand I'm pretending that I'm writing a letter to the other teacher who's away .\n"), ((2328, (44, 50)), "*CHI:\tand I'm pretending that I'm writing a letter to the other teacher who's away .\n"), ((2328, (64, 71)), "*CHI:\tand I'm pretending that I'm writing a letter to the other teacher who's away .\n"), ((2335, (-1, 4)), '*FAT:\twhere is the other teacher away at ?\n'), ((2335, (25, 32)), '*FAT:\twhere is the other teacher away at ?\n'), ((2340, (-1, 4)), '*CHI:\tat home .\n'), ((2340, (9, 13)), '*CHI:\tat home .\n'), ((2346, (16, 24)), '*CHI:\tthe other teachers is sick .\n'), ((2349, (108, 114)), '*FAT:\twell teacher I want you to make sure you drink your Quick and I want you to make sure you finish your dinner .\n'), ((2358, (-1, 4)), "*CHI:\there's a letter .\n"), ((2358, (15, 21)), "*CHI:\there's a letter .\n"), ((2365, (-1, 4)), "*CHI:\tI can't read it until the other teacher comes back +...\n"), ((2365, (38, 45)), "*CHI:\tI can't read it until the other teacher comes back +...\n"), ((2370, (6, 10)), '*MOT:\tokay [>] .\n'), ((2370, (11, 14)), '*MOT:\tokay [>] .\n'), ((2373, (-1, 4)), '*CHI:\ttomorrow [<] .\n'), ((2373, (15, 18)), '*CHI:\ttomorrow [<] .\n'), ((2376, (-1, 4)), '*FAT:\they teach make sure you &-uh finish drinking your Quick .\n'), ((2376, (6, 9)), '*FAT:\they teach make sure you &-uh finish drinking your Quick .\n'), ((2376, (42, 50)), '*FAT:\they teach make sure you &-uh finish drinking your Quick .\n'), ((2381, (6, 10)), '*MOT:\twhoa .\n'), ((2384, (6, 9)), '*CHI:\tzzz .\n'), ((2388, (-1, 4)), "*CHI:\tnow today [/] today there [//] the other teacher's back .\n"), ((2388, (10, 15)), "*CHI:\tnow today [/] today there [//] the other teacher's back .\n"), ((2388, (47, 56)), "*CHI:\tnow today [/] today there [//] the other teacher's back .\n"), ((2393, (-1, 4)), '*FAT:\tdo you know if we have a [/] a newer Information Please Almanac ?\n'), ((2393, (31, 34)), '*FAT:\tdo you know if we have a [/] a newer Information Please Almanac ?\n'), ((2399, (-1, 4)), "*MOT:\tI don't think we do that's the only one as far as I know .\n"), ((2399, (42, 45)), "*MOT:\tI don't think we do that's the only one as far as I know .\n"), ((2407, (9, 16)), '*CHI:\tno hot(el) (.) the hotel &-um book ?\n'), ((2407, (25, 30)), '*CHI:\tno hot(el) (.) the hotel &-um book ?\n'), ((2407, (36, 40)), '*CHI:\tno hot(el) (.) the hotel &-um book ?\n'), ((2411, (-1, 4)), '*MOT:\twould that have been something for Dylan to look in ?\n'), ((2416, (6, 10)), '*FAT:\tyeah .\n'), ((2419, (-1, 4)), '*MOT:\tis that why you <pulled it out> [>] ?\n'), ((2423, (11, 16)), '*CHI:\t<the hotel > [<] +...\n'), ((2426, (-1, 4)), "*MOT:\tI didn't even think of that .\n"), ((2429, (10, 15)), '*CHI:\tthe hotel &-uh book ?\n'), ((2429, (21, 25)), '*CHI:\tthe hotel &-uh book ?\n'), ((2433, (9, 15)), "*MOT:\tno that's not a book about hotels .\n"), ((2433, (22, 26)), "*MOT:\tno that's not a book about hotels .\n"), ((2433, (33, 39)), "*MOT:\tno that's not a book about hotels .\n"), ((2438, (6, 9)), '*CHI:\tzzz .\n'), ((2442, (-1, 4)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2442, (13, 17)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2442, (31, 36)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2442, (59, 64)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2442, (90, 93)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2442, (102, 108)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2442, (115, 119)), "*MOT:\tit's a book that has all facts in it about different thing you need and after [///] use Dylan's napkin since he's not here .\n"), ((2452, (6, 10)), "*CHI:\tokay <I'll do it> [>] .\n"), ((2455, (6, 12)), '*MOT:\tplease wipe your hand with it because you [/] you keep touching your eyes and your hands are greasy .\n'), ((2455, (23, 27)), '*MOT:\tplease wipe your hand with it because you [/] you keep touching your eyes and your hands are greasy .\n'), ((2455, (75, 79)), '*MOT:\tplease wipe your hand with it because you [/] you keep touching your eyes and your hands are greasy .\n'), ((2455, (89, 94)), '*MOT:\tplease wipe your hand with it because you [/] you keep touching your eyes and your hands are greasy .\n'), ((2463, (19, 25)), "*MOT:\t<th(at)> [/] that's right .\n"), ((2463, (26, 31)), "*MOT:\t<th(at)> [/] that's right .\n"), ((2466, (-1, 4)), "*MOT:\ttake Dylan's napkin .\n"), ((2469, (-1, 4)), "*MOT:\tI'll do [?] another one .\n"), ((2472, (-1, 4)), '*CHI:\tI steal it from him .\n'), ((2475, (6, 10)), '*MOT:\tokay and I will replace it .\n'), ((2478, (-1, 4)), '*MOT:\twhen he comes for dinner .\n'), ((2478, (24, 30)), '*MOT:\twhen he comes for dinner .\n'), ((2481, (6, 9)), '*CHI:\tzzz .\n'), ((2485, (-1, 4)), "*CHI:\the'll have no napkins for get clean .\n"), ((2485, (6, 11)), "*CHI:\the'll have no napkins for get clean .\n"), ((2485, (20, 27)), "*CHI:\the'll have no napkins for get clean .\n"), ((2485, (32, 35)), "*CHI:\the'll have no napkins for get clean .\n"), ((2490, (6, 9)), '*CHI:\tzzz .\n'), ((2494, (16, 23)), '*MOT:\toh greedy brother you .\n'), ((2500, (-1, 4)), "*CHI:\tBert <foll(ow)> [//] it's a game called follow the arrow .\n"), ((2500, (34, 38)), "*CHI:\tBert <foll(ow)> [//] it's a game called follow the arrow .\n"), ((2500, (57, 62)), "*CHI:\tBert <foll(ow)> [//] it's a game called follow the arrow .\n"), ((2507, (6, 10)), '*CHI:\tplay it .\n'), ((2512, (-1, 4)), '*MOT:\tFollow_The_Arrows ?\n'), ((2516, (6, 10)), '*CHI:\tyeah .\n'), ((2519, (-1, 4)), '*CHI:\tthis bird .\n'), ((2519, (11, 15)), '*CHI:\tthis bird .\n'), ((2522, (6, 9)), '*CHI:\tzzz (.) .\n'), ((2522, (10, 13)), '*CHI:\tzzz (.) .\n'), ((2526, (-1, 4)), "*CHI:\the doesn't do that .\n"), ((2529, (-1, 4)), '*CHI:\the says zzz@q .\n'), ((2533, (6, 10)), '*MOT:\t&-um .\n'), ((2534, (6, 9)), '*CHI:\ttry that .\n'), ((2537, (-1, 4)), "*MOT:\tI think maybe we should celebrate Brook's birthday today even though we don't have a cake .\n"), ((2537, (57, 62)), "*MOT:\tI think maybe we should celebrate Brook's birthday today even though we don't have a cake .\n"), ((2537, (91, 95)), "*MOT:\tI think maybe we should celebrate Brook's birthday today even though we don't have a cake .\n"), ((2547, (-1, 4)), '*CHI:\t<we could make one> [>] .\n'), ((2547, (6, 9)), '*CHI:\t<we could make one> [>] .\n'), ((2547, (26, 29)), '*CHI:\t<we could make one> [>] .\n'), ((2550, (9, 13)), '*FAT:\t<I was> [/] [<] .\n'), ((2551, (-1, 4)), '*FAT:\tI was just looking at the suicide rates around <the world> [>] .\n'), ((2551, (32, 39)), '*FAT:\tI was just looking at the suicide rates around <the world> [>] .\n'), ((2551, (40, 45)), '*FAT:\tI was just looking at the suicide rates around <the world> [>] .\n'), ((2551, (65, 68)), '*FAT:\tI was just looking at the suicide rates around <the world> [>] .\n'), ((2556, (10, 16)), '*CHI:\t<we could> [<] .\n'), ((2556, (17, 20)), '*CHI:\t<we could> [<] .\n'), ((2559, (-1, 4)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2559, (13, 17)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2559, (23, 27)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2559, (28, 31)), '*CHI:\tmake a cake with eggs [>] .\n'), ((2562, (-1, 4)), '*MOT:\tfor nineteen seventy three ?\n'), ((2568, (-1, 4)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2568, (11, 16)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2568, (27, 32)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2568, (33, 36)), '*CHI:\tneed <eggs to make a cake> [>] .\n'), ((2571, (10, 16)), "*FAT:\t<no that's from nineteen seventy one> [<] .\n"), ((2571, (39, 43)), "*FAT:\t<no that's from nineteen seventy one> [<] .\n"), ((2571, (44, 47)), "*FAT:\t<no that's from nineteen seventy one> [<] .\n"), ((2582, (6, 10)), '*FAT:\tyeah .\n'), ((2585, (-1, 4)), '*FAT:\tand Mexico has the lowest suicide rate at one point six per thousand and Hungary has the highest at twenty nine point six per one hundred thousand .\n'), ((2585, (32, 39)), '*FAT:\tand Mexico has the lowest suicide rate at one point six per thousand and Hungary has the highest at twenty nine point six per one hundred thousand .\n'), ((2585, (40, 44)), '*FAT:\tand Mexico has the lowest suicide rate at one point six per thousand and Hungary has the highest at twenty nine point six per one hundred thousand .\n'), ((2585, (52, 57)), '*FAT:\tand Mexico has the lowest suicide rate at one point six per thousand and Hungary has the highest at twenty nine point six per one hundred thousand .\n'), ((2595, (6, 9)), '*CHI:\tzzz [<] .\n'), ((2595, (10, 13)), '*CHI:\tzzz [<] .\n'), ((2599, (6, 9)), '*MOT:\tmhm .\n'), ((2602, (-1, 4)), '*MOT:\tI wonder what [/] what [/] what it is xxx about those countries .\n'), ((2607, (-1, 4)), "*FAT:\tI don't know .\n"), ((2610, (-1, 4)), '*FAT:\tIreland has a very low +/.\n'), ((2613, (-1, 4)), '*CHI:\tMommy ?\n'), ((2617, (6, 10)), '*FAT:\trate .\n'), ((2620, (-1, 4)), '*CHI:\tyou know what ?\n'), ((2624, (38, 42)), "*FAT:\tWest Berlin has an astronomical rate but the rest <of West Germany doesn't have a> [/] a huge rate .\n"), ((2624, (51, 55)), "*FAT:\tWest Berlin has an astronomical rate but the rest <of West Germany doesn't have a> [/] a huge rate .\n"), ((2624, (56, 59)), "*FAT:\tWest Berlin has an astronomical rate but the rest <of West Germany doesn't have a> [/] a huge rate .\n"), ((2633, (17, 22)), '*MOT:\twhat is it Honey ?\n'), ((2637, (30, 34)), '*CHI:\twell (.) do we have any eggs ?\n'), ((2641, (10, 13)), '*MOT:\tyes (.) .\n'), ((2644, (6, 11)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2644, (26, 30)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2644, (41, 45)), "*MOT:\tHoney we don't have time to make a cake tonight .\n"), ((2649, (-1, 4)), '*MOT:\tDaddy and I both have a lot of things to do .\n'), ((2649, (30, 33)), '*MOT:\tDaddy and I both have a lot of things to do .\n'), ((2649, (37, 43)), '*MOT:\tDaddy and I both have a lot of things to do .\n'), ((2654, (-1, 4)), "*MOT:\tso Brook doesn't eat cake .\n"), ((2654, (23, 26)), "*MOT:\tso Brook doesn't eat cake .\n"), ((2654, (27, 31)), "*MOT:\tso Brook doesn't eat cake .\n"), ((2657, (-1, 4)), '*MOT:\tand we have other sweets .\n'), ((2657, (24, 30)), '*MOT:\tand we have other sweets .\n'), ((2660, (-1, 4)), '*MOT:\tI think (.) I have a can of cat food I bought for Brook and I have that present that I got him ?\n'), ((2660, (34, 42)), '*MOT:\tI think (.) I have a can of cat food I bought for Brook and I have that present that I got him ?\n'), ((2670, (10, 16)), "*MOT:\tthe rabbit's foot .\n"), ((2670, (19, 23)), "*MOT:\tthe rabbit's foot .\n"), ((2673, (6, 10)), '*CHI:\tyeah did you get a purple one for him ?\n'), ((2682, (-1, 4)), '*MOT:\tI just got him that orange one .\n'), ((2682, (26, 32)), '*MOT:\tI just got him that orange one .\n'), ((2686, (-1, 4)), '*MOT:\tso we can sing happy birthday to him and we can eat our own sweets .\n'), ((2686, (66, 72)), '*MOT:\tso we can sing happy birthday to him and we can eat our own sweets .\n'), ((2693, (33, 41)), '*MOT:\twe can give him the can of cat+food .\n'), ((2698, (-1, 4)), "*MOT:\tit's a new flavor that they make .\n"), ((2698, (17, 23)), "*MOT:\tit's a new flavor that they make .\n"), ((2703, (-1, 4)), '*CHI:\toh well what ?\n'), ((2707, (19, 22)), "*CHI:\t<McDonald's> [>] ?\n"), ((2711, (-1, 4)), "*MOT:\tand he'll have_to share his with Liz .\n"), ((2711, (10, 15)), "*MOT:\tand he'll have_to share his with Liz .\n"), ((2711, (24, 29)), "*MOT:\tand he'll have_to share his with Liz .\n"), ((2716, (-1, 4)), "*CHI:\tMcDonald's ?\n"), ((2720, (14, 22)), "*MOT:\tno it's cat food .\n"), ((2723, (-1, 4)), "*MOT:\tit's a new flavor I got him [>] .\n"), ((2723, (17, 23)), "*MOT:\tit's a new flavor I got him [>] .\n"), ((2728, (6, 9)), '*CHI:\tzzz [<] .\n'), ((2728, (10, 13)), '*CHI:\tzzz [<] .\n'), ((2732, (6, 16)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2732, (23, 33)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2732, (34, 40)), '*MOT:\tWhite fish ocean white fish flavor .\n'), ((2735, (6, 9)), '*CHI:\tzzz .\n'), ((2740, (-1, 4)), '*CHI:\tdoes cats like to eat ocean white flavor [<] ?\n'), ((2740, (11, 15)), '*CHI:\tdoes cats like to eat ocean white flavor [<] ?\n'), ((2740, (40, 46)), '*CHI:\tdoes cats like to eat ocean white flavor [<] ?\n'), ((2740, (47, 50)), '*CHI:\tdoes cats like to eat ocean white flavor [<] ?\n'), ((2749, (10, 13)), '*MOT:\t<I> [/] I imagine they do (.) .\n'), ((2749, (32, 35)), '*MOT:\t<I> [/] I imagine they do (.) .\n'), ((2752, (-1, 4)), "*MOT:\tso we should do that today (be)cause it's going to be a very busy week .\n"), ((2752, (27, 32)), "*MOT:\tso we should do that today (be)cause it's going to be a very busy week .\n"), ((2752, (43, 47)), "*MOT:\tso we should do that today (be)cause it's going to be a very busy week .\n"), ((2752, (72, 76)), "*MOT:\tso we should do that today (be)cause it's going to be a very busy week .\n"), ((2759, (6, 9)), '*CHI:\tyup .\n'), ((2762, (-1, 4)), '*CHI:\tfor me too .\n'), ((2765, (6, 10)), '*MOT:\tyeah .\n'), ((2768, (20, 24)), '*CHI:\tvery [!] busy week for me (.) .\n'), ((2771, (-1, 4)), "*CHI:\tit's a very busy wake [//] week for us [/] us three .\n"), ((2771, (23, 27)), "*CHI:\tit's a very busy wake [//] week for us [/] us three .\n"), ((2771, (33, 37)), "*CHI:\tit's a very busy wake [//] week for us [/] us three .\n"), ((2776, (-1, 4)), '*MOT:\tI had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .\n'), ((2776, (24, 28)), '*MOT:\tI had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .\n'), ((2776, (29, 35)), '*MOT:\tI had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .\n'), ((2776, (74, 80)), '*MOT:\tI had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .\n'), ((2776, (88, 94)), '*MOT:\tI had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .\n'), ((2776, (95, 101)), '*MOT:\tI had a &-um four part series with Andy Cervick in it which was the nights of the museum school I had to cancel .\n'), ((2786, (-1, 4)), '*FAT:\ttonight ?\n'), ((2789, (-1, 4)), "*MOT:\tit was &-um one of these &-uh the math class schedule we'll be having .\n"), ((2789, (40, 44)), "*MOT:\tit was &-um one of these &-uh the math class schedule we'll be having .\n"), ((2789, (45, 50)), "*MOT:\tit was &-um one of these &-uh the math class schedule we'll be having .\n"), ((2789, (60, 65)), "*MOT:\tit was &-um one of these &-uh the math class schedule we'll be having .\n"), ((2795, (-1, 4)), '*MOT:\tbut <I knew> [//] I just took it tentatively and I &-uh told Kathy +/.\n'), ((2801, (6, 9)), '*CHI:\tzzz .\n'), ((2805, (-1, 4)), '*MOT:\tI might have_to cancel so <she just> [>] xxx and I called her Friday .\n'), ((2805, (22, 28)), '*MOT:\tI might have_to cancel so <she just> [>] xxx and I called her Friday .\n'), ((2805, (37, 42)), '*MOT:\tI might have_to cancel so <she just> [>] xxx and I called her Friday .\n'), ((2810, (6, 9)), '*CHI:\tzzz [<] .\n'), ((2810, (10, 13)), '*CHI:\tzzz [<] .\n'), ((2814, (6, 10)), '*FAT:\tyeah .\n'), ((2817, (-1, 4)), "*MOT:\tso she would have time before she goes away &-uh it's vacation time you know .\n"), ((2817, (24, 28)), "*MOT:\tso she would have time before she goes away &-uh it's vacation time you know .\n"), ((2824, (15, 23)), '*MOT:\tthe &-uh colleges have their &-uh spring vacation this coming week [>] .\n'), ((2824, (40, 46)), '*MOT:\tthe &-uh colleges have their &-uh spring vacation this coming week [>] .\n'), ((2824, (68, 72)), '*MOT:\tthe &-uh colleges have their &-uh spring vacation this coming week [>] .\n'), ((2824, (73, 76)), '*MOT:\tthe &-uh colleges have their &-uh spring vacation this coming week [>] .\n'), ((2831, (6, 9)), '*FAT:\tmhm .\n'), ((2834, (43, 47)), '*CHI:\tMom what [/] what does they call its name ?\n'), ((2839, (26, 32)), '*FAT:\tit says information please almanac atlas and yearbook .\n'), ((2839, (33, 40)), '*FAT:\tit says information please almanac atlas and yearbook .\n'), ((2839, (41, 46)), '*FAT:\tit says information please almanac atlas and yearbook .\n'), ((2847, (-1, 4)), "*MOT:\t(be)cause I'm working at Mass Eye this week .\n"), ((2847, (45, 49)), "*MOT:\t(be)cause I'm working at Mass Eye this week .\n"), ((2852, (6, 10)), '*FAT:\tyeah .\n'), ((2855, (-1, 4)), '*FAT:\tI guess so .\n'), ((2858, (-1, 4)), "*CHI:\t<I guess m(om)> [/] (.) I guess that's my show .\n"), ((2858, (9, 14)), "*CHI:\t<I guess m(om)> [/] (.) I guess that's my show .\n"), ((2858, (48, 52)), "*CHI:\t<I guess m(om)> [/] (.) I guess that's my show .\n"), ((2861, (11, 16)), '*MOT:\twhat Honey ?\n'), ((2865, (-1, 4)), "*CHI:\tI guess that's my show .\n"), ((2865, (24, 28)), "*CHI:\tI guess that's my show .\n"), ((2872, (-1, 4)), '*CHI:\tthat show xxx .\n'), ((2875, (-1, 4)), "*MOT:\tI don't know what it is that's on television .\n"), ((2880, (11, 17)), '*MOT:\twell thanks Hon .\n'), ((2884, (26, 29)), "*FAT:\tyou're welcome Love (.) .\n"), ((2887, (23, 29)), "*FAT:\twe can put Bro's dinner away and he can have it when he gets back .\n"), ((2894, (6, 10)), '*MOT:\tokay (.) .\n'), ((2894, (11, 14)), '*MOT:\tokay (.) .\n'), ((2897, (26, 33)), "*MOT:\tthink that's enough chicken for him ?\n"), ((2902, (6, 8)), '*FAT:\tmm .\n'), ((2905, (6, 9)), '*MOT:\twww .\n'), ((2906, (6, 9)), '*FAT:\twww .\n'), ((2907, (6, 9)), '*CHI:\tzzz .\n'), ((2915, (-1, 4)), '*MOT:\tshould we +...\n'), ((2918, (-1, 4)), "*FAT:\twhat's that ?\n"), ((2918, (6, 12)), "*FAT:\twhat's that ?\n"), ((2921, (-1, 4)), '*MOT:\tshould we &-uh turn that [= the tape recorder] off ?\n'), ((2921, (21, 25)), '*MOT:\tshould we &-uh turn that [= the tape recorder] off ?\n'), ((2921, (38, 42)), '*MOT:\tshould we &-uh turn that [= the tape recorder] off ?\n'), ((2937, (-1, 4)), '*FAT:\tget back in here !\n'), ((2945, (-1, 4)), '*FAT:\twhere did you go ?\n'), ((2949, (-1, 4)), '*CHI:\tin the living room .\n'), ((2949, (13, 19)), '*CHI:\tin the living room .\n'), ((2949, (20, 24)), '*CHI:\tin the living room .\n'), ((2952, (-1, 4)), '*FAT:\tI want you to finish up .\n'), ((2955, (-1, 4)), '*CHI:\tfinish up what ?\n'), ((2959, (6, 12)), '*FAT:\teating .\n'), ((2962, (6, 9)), '*MOT:\tzzz .\n'), ((2969, (-1, 4)), "*CHI:\tI'm a busy bee .\n"), ((2969, (17, 20)), "*CHI:\tI'm a busy bee .\n"), ((2975, (-1, 4)), '*FAT:\tand could you sit [///] put your fishing rod down Honey .\n'), ((2975, (39, 46)), '*FAT:\tand could you sit [///] put your fishing rod down Honey .\n'), ((2975, (56, 61)), '*FAT:\tand could you sit [///] put your fishing rod down Honey .\n'), ((2980, (6, 10)), '*CHI:\tokay .\n'), ((2983, (6, 9)), '*CHI:\txxx .\n'), ((2988, (6, 9)), '*CHI:\tgum drop gum drop .\n'), ((2988, (10, 14)), '*CHI:\tgum drop gum drop .\n'), ((2991, (-1, 4)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((2991, (17, 21)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((2991, (28, 31)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((2991, (36, 40)), '*CHI:\tnot by the hair of my gum gum drop .\n'), ((2996, (58, 63)), '*MOT:\tmaybe we should have told him to look up <something like> [//] do something like that and then update it in the library .\n'), ((3004, (6, 10)), '*FAT:\tyeah .\n'), ((3007, (-1, 4)), "*FAT:\tI thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .\n"), ((3007, (49, 55)), "*FAT:\tI thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .\n"), ((3007, (56, 63)), "*FAT:\tI thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .\n"), ((3007, (70, 75)), "*FAT:\tI thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .\n"), ((3007, (98, 102)), "*FAT:\tI thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .\n"), ((3007, (115, 121)), "*FAT:\tI thought I had gotten another information please almanac since we've been together but one year possibly my mother had given me one .\n"), ((3017, (-1, 4)), "*MOT:\tI don't remember it at all .\n"), ((3021, (6, 9)), '*FAT:\txxx .\n'), ((3023, (11, 14)), '*MOT:\tgood boy .\n'), ((3027, (6, 9)), '*CHI:\tzzz .\n'), ((3031, (15, 18)), '*MOT:\toh yucky boy !\n'), ((3035, (-1, 4)), '*MOT:\tput it on the plate .\n'), ((3035, (20, 25)), '*MOT:\tput it on the plate .\n'), ((3038, (-1, 4)), '*MOT:\tdid you put too much in your mouth ?\n'), ((3038, (35, 40)), '*MOT:\tdid you put too much in your mouth ?\n'), ((3045, (-1, 4)), "*MOT:\tthere's a napkin use a napkin (.) .\n"), ((3045, (23, 26)), "*MOT:\tthere's a napkin use a napkin (.) .\n"), ((3045, (36, 39)), "*MOT:\tthere's a napkin use a napkin (.) .\n"), ((3049, (6, 10)), '*MOT:\tokay .\n'), ((3052, (-1, 4)), '*MOT:\twhatever you have_to do Than .\n'), ((3055, (-1, 4)), '*MOT:\tyou need to spit it out spit it out .\n'), ((3060, (-1, 4)), '*MOT:\tthis dinner was something [!] .\n'), ((3060, (11, 17)), '*MOT:\tthis dinner was something [!] .\n'), ((3060, (32, 35)), '*MOT:\tthis dinner was something [!] .\n'), ((3064, (6, 9)), '*CHI:\tzzz .\n'), ((3068, (6, 10)), '*MOT:\tkind of yucky you know (.) ?\n'), ((3068, (14, 19)), '*MOT:\tkind of yucky you know (.) ?\n'), ((3072, (-1, 4)), '*MOT:\tare you all done ?\n'), ((3076, (6, 10)), '*CHI:\tyeah .\n'), ((3079, (6, 9)), '*CHI:\tyes .\n'), ((3082, (-1, 4)), '*MOT:\tis your milk finished ?\n'), ((3082, (14, 18)), '*MOT:\tis your milk finished ?\n'), ((3086, (-1, 4)), '*CHI:\twant me to show ?\n'), ((3090, (6, 14)), '*MOT:\tgood yes (.) .\n'), ((3093, (14, 19)), '*MOT:\toh good thank you very much .\n'), ((3096, (26, 33)), '*MOT:\tlet me roll up your sleeves so you can wash them .\n'), ((3101, (-1, 4)), '*CHI:\tI did .\n'), ((3104, (6, 10)), '*MOT:\tokay .\n'), ((3111, (6, 9)), '*CHI:\tyes .\n')]
calculating accuracy and recall
correct labels:
set(['meat', 'mcdonald', 'gum drop', 'eggs', 'chocolate', 'strawberry', 'cake', 'quick', 'chicken', 'biscuits', 'milk', 'white fish'])
predicted labels:
set(['', 'sucker fast', 'colleges', 'swirling', "isn't", 'rabbit', 'pardon', "don't", 'money', 'saves', 'rest', 'month', '<well', 'woods', '&-uh', 'thanks', 'oven', 'seats', 'facts', 'barbecue', 'yes', 'encores', 'while>', 'one>', 'before', 'layers', 'cut', 'kind', 'thank', "he's", 'series', 'name', 'show', 'sky', 'window', 'wood', 'tape', 'orange', 'sorry', 'just>', 'white fish', 'plate', 'good', "we've", 'song', 'food', 'couple', 'end', 'stop', "we'll", 'gonna', 'pocket', 'shoot', 'game', '[>]', 'fan', '[!]', 'cushion', 'hands', 'cook', 'bit', 'one', 'day', 'cool', 'cush@c', 'school', 'mhm', 'meat', 'bring', 'chairs', 'hotel', 'drop', 'table>', "they've", 'gum', 'bird', '<back', 'ashes', 'sand', 'stuff', "he'll", 'nose', 'arrow', 'night', 'mine', 'guy', 'biscuits', 'side', 'chicken look', 'fishing', 'www', 'right', 'concert', 'people', 'spring', 'try', 'yeah', 'seat', 'cat food', 'cancel', 'see', 'books', 'video', 'hell', 'tender', 'home', 'calendar', 'ra(bbit)', 'chicken', 'popping', 'blue', 'closes', 'stood', 'part', 'kids', '(.)', 'sun', 'pee+pee', 'yup', 'please', 'flavor', 'milk', "wasn't", 'that>', "there's", 'could>', 'good yes', 'bunch', 'house', 'math', 'cartoons', 'blow', 'notice', 'noise', 'eating', 'zzz', 'lights', '<we', 'guess', 'what>', 'almanac', 'cake', 'reason', 'suicide', 'cabin', "aren't", 'come', 'bone', 'wait', 'boy', 'sister', 'piece', 'tapes', 'oh', 'minutes', 'dollars', 'cup', 'penny', 'times', 'thing', 'dinner', 'stand', 'smoke', 'sun set', 'share', 'studies', 'drinking', "teacher's", 'love', 'point', 'color', 'bl(ue)', 'wash', 'weather', 'cold', 'toys', '<(rab)bit', 'table', 'shoots', 'sweets', 'hotels', 'idea', "you're", 'use', 'toy', "how's", "it's", 'museum', 'hey', 'like>', 'cartoon', 'two>', 'teacher', 'cats', 'rates', "we're", 'lot', 'memory', '<of', 'man', 'tell', 'today', 'back', 'son', 'medium', 'families', 'way', 'brother', 'was>', 'match>', 'gave>', 'xxx', 'kitchen', 'chocolate', 'phone', 'warm', 'wake', '(o)ver', 'cup>', 'atlas', 'sit', 'ear', '(a)re', 'eat', 'present', 'plants', "they're", 'a>', "rabbit's", 'thirty', '<eggs', 'mm', 'coals', 'inside', 'work', 'cash', '[=', 'whoa', 'strawberry', 'napkins', 'teachers', 'light', 'fun', 'grass', 'bites', 'remembers', 'encore', 'crazy', 'toybox', 'pin', 'brown', 'taste', 'year', 'mind', 'head', 'pieces', 'honey', 'cat+food', '[?]', 'yuck', 'play', 'turn', 'hot(el)', 'ones', 'nights', '[/]', 'floor', 'things', 'yellow', 'get', 'sound', 'book', 'season', 'pins', 'hi', 'yucky', "what's", 'rate', 'nice', 'week', 'tension', 'quash@c', 'sure', 'okay', '&-um', 'eyes', 'living', 'hunter', 'eggs', 'drink', 'tops', 'hand', 'mother', 'class', 'mouth', 'letter', '[<]', 'hair', 'cake>', 'friends', "chicken's", 'wh(at)', 'tummy', 'it>', 'still>', 'land', '&a:h', 'hopping', 'room', 'foot', 'mushy', 'napkin', 'bugs', 'spill', 'bee', "you'll", 'points', 'green', 'wind', 'clean', 'time', 'sleeves', 'bi(s)cuits>', 'talk', "that's"])
file:HSLLD/HV1/MT//ethmt1.cha
precision: 0.0276923076923
recall: 0.75
true positives:['biscuits', 'cake', 'chicken', 'chocolate', 'eggs', 'meat', 'milk', 'strawberry', 'white fish']
false positives: ['', '&-uh', '&-um', '&a:h', '(.)', '(a)re', '(o)ver', '<(rab)bit', '<back', '<eggs', '<of', '<we', '<well', '[!]', '[/]', '[<]', '[=', '[>]', '[?]', 'a>', 'almanac', "aren't", 'arrow', 'ashes', 'atlas', 'back', 'barbecue', 'bee', 'before', 'bi(s)cuits>', 'bird', 'bit', 'bites', 'bl(ue)', 'blow', 'blue', 'bone', 'book', 'books', 'boy', 'bring', 'brother', 'brown', 'bugs', 'bunch', 'cabin', 'cake>', 'calendar', 'cancel', 'cartoon', 'cartoons', 'cash', 'cat food', 'cat+food', 'cats', 'chairs', 'chicken look', "chicken's", 'class', 'clean', 'closes', 'coals', 'cold', 'colleges', 'color', 'come', 'concert', 'cook', 'cool', 'could>', 'couple', 'crazy', 'cup', 'cup>', 'cush@c', 'cushion', 'cut', 'day', 'dinner', 'dollars', "don't", 'drink', 'drinking', 'drop', 'ear', 'eat', 'eating', 'encore', 'encores', 'end', 'eyes', 'facts', 'families', 'fan', 'fishing', 'flavor', 'floor', 'food', 'foot', 'friends', 'fun', 'game', 'gave>', 'get', 'gonna', 'good', 'good yes', 'grass', 'green', 'guess', 'gum', 'guy', 'hair', 'hand', 'hands', "he'll", "he's", 'head', 'hell', 'hey', 'hi', 'home', 'honey', 'hopping', 'hot(el)', 'hotel', 'hotels', 'house', "how's", 'hunter', 'idea', 'inside', "isn't", "it's", 'it>', 'just>', 'kids', 'kind', 'kitchen', 'land', 'layers', 'letter', 'light', 'lights', 'like>', 'living', 'lot', 'love', 'man', 'match>', 'math', 'medium', 'memory', 'mhm', 'mind', 'mine', 'minutes', 'mm', 'money', 'month', 'mother', 'mouth', 'museum', 'mushy', 'name', 'napkin', 'napkins', 'nice', 'night', 'nights', 'noise', 'nose', 'notice', 'oh', 'okay', 'one', 'one>', 'ones', 'orange', 'oven', 'pardon', 'part', 'pee+pee', 'penny', 'people', 'phone', 'piece', 'pieces', 'pin', 'pins', 'plants', 'plate', 'play', 'please', 'pocket', 'point', 'points', 'popping', 'present', 'quash@c', 'ra(bbit)', 'rabbit', "rabbit's", 'rate', 'rates', 'reason', 'remembers', 'rest', 'right', 'room', 'sand', 'saves', 'school', 'season', 'seat', 'seats', 'see', 'series', 'share', 'shoot', 'shoots', 'show', 'side', 'sister', 'sit', 'sky', 'sleeves', 'smoke', 'son', 'song', 'sorry', 'sound', 'spill', 'spring', 'stand', 'still>', 'stood', 'stop', 'studies', 'stuff', 'sucker fast', 'suicide', 'sun', 'sun set', 'sure', 'sweets', 'swirling', 'table', 'table>', 'talk', 'tape', 'tapes', 'taste', 'teacher', "teacher's", 'teachers', 'tell', 'tender', 'tension', 'thank', 'thanks', "that's", 'that>', "there's", "they're", "they've", 'thing', 'things', 'thirty', 'time', 'times', 'today', 'tops', 'toy', 'toybox', 'toys', 'try', 'tummy', 'turn', 'two>', 'use', 'video', 'wait', 'wake', 'warm', 'was>', 'wash', "wasn't", 'way', "we'll", "we're", "we've", 'weather', 'week', 'wh(at)', "what's", 'what>', 'while>', 'whoa', 'wind', 'window', 'wood', 'woods', 'work', 'www', 'xxx', 'yeah', 'year', 'yellow', 'yes', "you'll", "you're", 'yuck', 'yucky', 'yup', 'zzz']
false negatives: ['gum drop', 'mcdonald', 'quick']
# true pos: 9
# false pos: 316
# false neg: 3
HSLLD/HV1/MT//brtmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: <thank you for our food amen> [>] .', '*CHI: <thank you for our food amen>[<] .', '*MOT: time to eat !', '*CHI: it was gonna come on ?', '*MOT: mhm .', '*CHI: God is good God is great thank him for our food .', '*MOT: amen .', '*CHI: hm: ?', '*MOT: amen .', '*CHI: mhm .', '*MOT: did you have fun today ?', '*CHI: hm: .', '*MOT: did you have fun at the clinic ?', '*CHI: uhhum .', '*MOT: what did you like about it ?', '*CHI: nothing .', '*MOT: I thought you said you liked it .', '*CHI: I told you .', '*MOT: hm: ?', '*CHI: I told you .', "*MOT: no and I'm asking [!] you .", '*CHI: nothing .', '*MOT: you was a brave girl today huh ?', "*CHI: (..) I don't want this ice xxx .", "*MOT: just leave it in there it'll keep the tonic cold .", "*CHI: <I can't get the> [//] I can't get the tonic .", '*CHI: here put it in your cup .', '*MOT: thank you .', '*CHI: welcome .', '*MOT: taste good ?', "*MOT: did you have fun at Auntie Vi's house ?", '*CHI: mhm .', '*MOT: what did you do ?', '*CHI: xxx .', '*MOT: did you ?', '*CHI: xxx .', '*MOT: and who ?', '*CHI: xxx .', '*MOT: who ?', '*CHI: Theodore !', '*MOT: oh Theodore .', '*MOT: he came over again ?', '*CHI: yep !', '*MOT: oh xxx .', '*CHI: no .', '*CHI: Jason .', '*CHI: Jason .', '*CHI: more ice .', '*CHI: more tonic .', '*MOT: yeah eat some of your food then you can have some more to drink .', "*CHI: why won't come on ?", "*MOT: it's on .", '*CHI: why [//] then why xxx xxx ?', "*MOT: aren't you glad you're going back to school tomorrow ?", '*CHI: no .', '*MOT: why ?', "*CHI: because I don't want to &=whining .", "*MOT: don't you miss all your friends in school ?", '*CHI: no .', '*MAL: xxx .', '*CHI: I want xxx .', '*CHI: want some meat .', '*MOT: hm: ?', '*CHI: meat .', '*MOT: meat ?', "*CHI: I'll just have a little piece .", "*MOT: no you don't eat that much .", '*CHI: you have this xxx .', '*MOT: do you want this piece ?', '*CHI: thank you .', "*MOT: you're welcome .", '*MOT: you miss your teacher ?', '*CHI: yeah .', '*MOT: they miss you too .', '*CHI: xxx .', '*MOT: oh you know who I saw today ?', '*CHI: who ?', '*MOT: Lionel .', '*MOT: and Carmen .', '*CHI: huh ?', '*MOT: and Carmen .', '*CHI: who else ?', "*MOT: <Carmen's> [//] what's her two boys' names ?", '*CHI: Jose .', '*MOT: Jose and Miguel .', '*MOT: uhhum .', '*CHI: his name is xxx .', "*CHI: why won't it come on !", "*MOT: it's on .", '*CHI: Mom could I have some more drink ?', '*MOT: okay ?', '*CHI: I go out [///] you want to still go outside ?', '*MAL: &=murmur .', '*MAL: xxx bus pass .', '*CHI: hm: ?', '*MOT: you finished Brittany ?', '*CHI: yeah .', '*MOT: I am too .', '*MOT: that was good huh ?', '*MOT: was it good ?', '*CHI: uhhuh .']
loading solution set
LINE NO ->  14
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  17
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  21
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  24
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  28
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  36
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  39
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  43
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  46
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  49
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  53
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  56
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  60
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  63
LINE NO ->  67
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  70
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  74
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  77
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  81
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  84
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  95
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  98
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  106
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  109
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  112
LINE NO ->  115
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  120
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  126
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  129
LINE NO ->  133
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  134
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  138
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  139
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  148
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  151
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  158
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  161
LINE NO ->  164
LINE NO ->  167
LINE NO ->  170
LINE NO ->  174
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  177
LINE NO ->  180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0})
LINE NO ->  185
LINE NO ->  189
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  192
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  197
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  203
LINE NO ->  206
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  210
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  215
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  221
LINE NO ->  225
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  226
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  229
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a1908>)
[('want', 'VB'), ('some', 'DT'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  232
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  236
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a1248>)
[('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  239
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a0c68>)
[('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  243
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  246
LINE NO ->  249
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  252
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  259
LINE NO ->  262
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  266
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  269
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  272
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  274
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  279
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  283
LINE NO ->  286
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  289
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  293
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  308
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  314
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  319
LINE NO ->  322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  326
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  336
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  341
LINE NO ->  342
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  345
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  349
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  353
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  356
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  359
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  363
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  367
loading solution set
calculating
set([(240, (6, 10)), (230, (16, 20)), (237, (6, 10))])
[((230, (16, 20)), '*CHI:\twant some meat .\n'), ((237, (6, 10)), '*CHI:\tmeat .\n'), ((240, (6, 10)), '*MOT:\tmeat ?\n')]
set([(301, (37, 42)), (198, (43, 49)), (230, (16, 20)), (110, (6, 11)), (104, (9, 14)), (61, (6, 11)), (18, (6, 12)), (257, (6, 11)), (350, (-1, 4)), (275, (28, 33)), (270, (-1, 4)), (149, (-1, 4)), (343, (10, 13)), (315, (10, 14)), (15, (25, 29)), (88, (-1, 4)), (297, (-1, 4)), (354, (6, 10)), (290, (-1, 4)), (88, (6, 13)), (121, (38, 43)), (216, (6, 11)), (343, (14, 18)), (121, (-1, 4)), (116, (6, 16)), (134, (6, 9)), (244, (30, 35)), (253, (-1, 4)), (32, (31, 36)), (233, (-1, 4)), (301, (43, 48)), (360, (20, 23)), (267, (6, 10)), (263, (-1, 4)), (190, (6, 10)), (15, (30, 35)), (145, (-1, 4)), (360, (-1, 4)), (54, (6, 9)), (78, (-1, 4)), (152, (6, 8)), (57, (-1, 4)), (290, (6, 9)), (193, (24, 27)), (346, (6, 9)), (250, (-1, 4)), (96, (29, 36)), (175, (11, 14)), (312, (6, 11)), (306, (-1, 4)), (32, (49, 53)), (357, (-1, 4)), (68, (6, 13)), (22, (6, 10)), (237, (6, 10)), (40, (-1, 4)), (44, (6, 10)), (47, (6, 9)), (37, (6, 10)), (139, (6, 9)), (91, (-1, 4)), (144, (6, 9)), (323, (6, 10)), (216, (41, 47)), (50, (23, 28)), (104, (45, 50)), (15, (36, 39)), (181, (28, 32)), (140, (-1, 4)), (135, (-1, 4)), (273, (6, 9)), (294, (-1, 4)), (332, (6, 10)), (227, (-1, 4)), (364, (-1, 4)), (57, (30, 36)), (85, (24, 27)), (91, (22, 26)), (216, (30, 37)), (18, (25, 29)), (91, (27, 32)), (40, (6, 9)), (253, (23, 28)), (332, (-1, 4)), (71, (-1, 4)), (230, (-1, 4)), (287, (-1, 4)), (107, (-1, 4)), (346, (-1, 4)), (15, (6, 12)), (280, (-1, 4)), (198, (-1, 4)), (275, (-1, 4)), (226, (6, 9)), (75, (-1, 4)), (227, (13, 16)), (327, (33, 38)), (309, (-1, 4)), (78, (6, 9)), (207, (-1, 4)), (198, (6, 12)), (68, (-1, 4)), (337, (-1, 4)), (240, (6, 10)), (99, (-1, 4)), (99, (50, 54)), (82, (-1, 4)), (233, (6, 9)), (155, (-1, 4)), (250, (20, 23)), (216, (-1, 4)), (263, (20, 27)), (211, (-1, 4)), (29, (6, 9)), (127, (6, 9)), (181, (6, 10)), (107, (26, 29)), (50, (-1, 4)), (25, (-1, 4)), (159, (6, 9)), (240, (-1, 4))])
[((15, (6, 12)), '*MOT:\t<thank you for our food amen> [>] .\n'), ((15, (25, 29)), '*MOT:\t<thank you for our food amen> [>] .\n'), ((15, (30, 35)), '*MOT:\t<thank you for our food amen> [>] .\n'), ((15, (36, 39)), '*MOT:\t<thank you for our food amen> [>] .\n'), ((18, (6, 12)), '*CHI:\t<thank you for our food amen>[<] .\n'), ((18, (25, 29)), '*CHI:\t<thank you for our food amen>[<] .\n'), ((22, (6, 10)), '*MOT:\ttime to eat !\n'), ((25, (-1, 4)), '*CHI:\tit was gonna come on ?\n'), ((29, (6, 9)), '*MOT:\tmhm .\n'), ((32, (31, 36)), '*CHI:\tGod is good God is great thank him for our food .\n'), ((32, (49, 53)), '*CHI:\tGod is good God is great thank him for our food .\n'), ((37, (6, 10)), '*MOT:\tamen .\n'), ((40, (-1, 4)), '*CHI:\thm: ?\n'), ((40, (6, 9)), '*CHI:\thm: ?\n'), ((44, (6, 10)), '*MOT:\tamen .\n'), ((47, (6, 9)), '*CHI:\tmhm .\n'), ((50, (-1, 4)), '*MOT:\tdid you have fun today ?\n'), ((50, (23, 28)), '*MOT:\tdid you have fun today ?\n'), ((54, (6, 9)), '*CHI:\thm: .\n'), ((57, (-1, 4)), '*MOT:\tdid you have fun at the clinic ?\n'), ((57, (30, 36)), '*MOT:\tdid you have fun at the clinic ?\n'), ((61, (6, 11)), '*CHI:\tuhhum .\n'), ((68, (-1, 4)), '*CHI:\tnothing .\n'), ((68, (6, 13)), '*CHI:\tnothing .\n'), ((71, (-1, 4)), '*MOT:\tI thought you said you liked it .\n'), ((75, (-1, 4)), '*CHI:\tI told you .\n'), ((78, (-1, 4)), '*MOT:\thm: ?\n'), ((78, (6, 9)), '*MOT:\thm: ?\n'), ((82, (-1, 4)), '*CHI:\tI told you .\n'), ((85, (24, 27)), "*MOT:\tno and I'm asking [!] you .\n"), ((88, (-1, 4)), '*CHI:\tnothing .\n'), ((88, (6, 13)), '*CHI:\tnothing .\n'), ((91, (-1, 4)), '*MOT:\tyou was a brave girl today huh ?\n'), ((91, (22, 26)), '*MOT:\tyou was a brave girl today huh ?\n'), ((91, (27, 32)), '*MOT:\tyou was a brave girl today huh ?\n'), ((96, (29, 36)), "*CHI:\t(..) I don't want this ice xxx .\n"), ((99, (-1, 4)), "*MOT:\tjust leave it in there it'll keep the tonic cold .\n"), ((99, (50, 54)), "*MOT:\tjust leave it in there it'll keep the tonic cold .\n"), ((104, (9, 14)), "*CHI:\t<I can't get the> [//] I can't get the tonic .\n"), ((104, (45, 50)), "*CHI:\t<I can't get the> [//] I can't get the tonic .\n"), ((107, (-1, 4)), '*CHI:\there put it in your cup .\n'), ((107, (26, 29)), '*CHI:\there put it in your cup .\n'), ((110, (6, 11)), '*MOT:\tthank you .\n'), ((116, (6, 16)), '*MOT:\ttaste good ?\n'), ((121, (-1, 4)), "*MOT:\tdid you have fun at Auntie Vi's house ?\n"), ((121, (38, 43)), "*MOT:\tdid you have fun at Auntie Vi's house ?\n"), ((127, (6, 9)), '*CHI:\tmhm .\n'), ((134, (6, 9)), '*CHI:\txxx .\n'), ((135, (-1, 4)), '*MOT:\tdid you ?\n'), ((139, (6, 9)), '*CHI:\txxx .\n'), ((140, (-1, 4)), '*MOT:\tand who ?\n'), ((144, (6, 9)), '*CHI:\txxx .\n'), ((145, (-1, 4)), '*MOT:\twho ?\n'), ((149, (-1, 4)), '*CHI:\tTheodore !\n'), ((152, (6, 8)), '*MOT:\toh Theodore .\n'), ((155, (-1, 4)), '*MOT:\the came over again ?\n'), ((159, (6, 9)), '*CHI:\tyep !\n'), ((175, (11, 14)), '*CHI:\tmore ice .\n'), ((181, (6, 10)), '*MOT:\tyeah eat some of your food then you can have some more to drink .\n'), ((181, (28, 32)), '*MOT:\tyeah eat some of your food then you can have some more to drink .\n'), ((190, (6, 10)), "*MOT:\tit's on .\n"), ((193, (24, 27)), '*CHI:\twhy [//] then why xxx xxx ?\n'), ((198, (-1, 4)), "*MOT:\taren't you glad you're going back to school tomorrow ?\n"), ((198, (6, 12)), "*MOT:\taren't you glad you're going back to school tomorrow ?\n"), ((198, (43, 49)), "*MOT:\taren't you glad you're going back to school tomorrow ?\n"), ((207, (-1, 4)), '*MOT:\twhy ?\n'), ((211, (-1, 4)), "*CHI:\tbecause I don't want to &=whining .\n"), ((216, (-1, 4)), "*MOT:\tdon't you miss all your friends in school ?\n"), ((216, (6, 11)), "*MOT:\tdon't you miss all your friends in school ?\n"), ((216, (30, 37)), "*MOT:\tdon't you miss all your friends in school ?\n"), ((216, (41, 47)), "*MOT:\tdon't you miss all your friends in school ?\n"), ((226, (6, 9)), '*MAL:\txxx .\n'), ((227, (-1, 4)), '*CHI:\tI want xxx .\n'), ((227, (13, 16)), '*CHI:\tI want xxx .\n'), ((230, (-1, 4)), '*CHI:\twant some meat .\n'), ((230, (16, 20)), '*CHI:\twant some meat .\n'), ((233, (-1, 4)), '*MOT:\thm: ?\n'), ((233, (6, 9)), '*MOT:\thm: ?\n'), ((237, (6, 10)), '*CHI:\tmeat .\n'), ((240, (-1, 4)), '*MOT:\tmeat ?\n'), ((240, (6, 10)), '*MOT:\tmeat ?\n'), ((244, (30, 35)), "*CHI:\tI'll just have a little piece .\n"), ((250, (-1, 4)), '*CHI:\tyou have this xxx .\n'), ((250, (20, 23)), '*CHI:\tyou have this xxx .\n'), ((253, (-1, 4)), '*MOT:\tdo you want this piece ?\n'), ((253, (23, 28)), '*MOT:\tdo you want this piece ?\n'), ((257, (6, 11)), '*CHI:\tthank you .\n'), ((263, (-1, 4)), '*MOT:\tyou miss your teacher ?\n'), ((263, (20, 27)), '*MOT:\tyou miss your teacher ?\n'), ((267, (6, 10)), '*CHI:\tyeah .\n'), ((270, (-1, 4)), '*MOT:\tthey miss you too .\n'), ((273, (6, 9)), '*CHI:\txxx .\n'), ((275, (-1, 4)), '*MOT:\toh you know who I saw today ?\n'), ((275, (28, 33)), '*MOT:\toh you know who I saw today ?\n'), ((280, (-1, 4)), '*CHI:\twho ?\n'), ((287, (-1, 4)), '*MOT:\tand Carmen .\n'), ((290, (-1, 4)), '*CHI:\thuh ?\n'), ((290, (6, 9)), '*CHI:\thuh ?\n'), ((294, (-1, 4)), '*MOT:\tand Carmen .\n'), ((297, (-1, 4)), '*CHI:\twho else ?\n'), ((301, (37, 42)), "*MOT:\t<Carmen's> [//] what's her two boys' names ?\n"), ((301, (43, 48)), "*MOT:\t<Carmen's> [//] what's her two boys' names ?\n"), ((306, (-1, 4)), '*CHI:\tJose .\n'), ((309, (-1, 4)), '*MOT:\tJose and Miguel .\n'), ((312, (6, 11)), '*MOT:\tuhhum .\n'), ((315, (10, 14)), '*CHI:\this name is xxx .\n'), ((323, (6, 10)), "*MOT:\tit's on .\n"), ((327, (33, 38)), '*CHI:\tMom could I have some more drink ?\n'), ((332, (-1, 4)), '*MOT:\tokay ?\n'), ((332, (6, 10)), '*MOT:\tokay ?\n'), ((337, (-1, 4)), '*CHI:\tI go out [///] you want to still go outside ?\n'), ((343, (10, 13)), '*MAL:\txxx bus pass .\n'), ((343, (14, 18)), '*MAL:\txxx bus pass .\n'), ((346, (-1, 4)), '*CHI:\thm: ?\n'), ((346, (6, 9)), '*CHI:\thm: ?\n'), ((350, (-1, 4)), '*MOT:\tyou finished Brittany ?\n'), ((354, (6, 10)), '*CHI:\tyeah .\n'), ((357, (-1, 4)), '*MOT:\tI am too .\n'), ((360, (-1, 4)), '*MOT:\tthat was good huh ?\n'), ((360, (20, 23)), '*MOT:\tthat was good huh ?\n'), ((364, (-1, 4)), '*MOT:\twas it good ?\n')]
calculating accuracy and recall
correct labels:
set(['meat'])
predicted labels:
set(['', '<thank', 'school', 'hm:', "don't", 'house', 'yeah', '[!]', 'clinic', 'names', 'pass', 'yep', 'girl', 'cold', 'uhhum', 'thank', 'cup', "it's", 'ice', "boys'", 'amen>', 'today', 'tonic', 'drink', 'okay', 'amen', 'food', 'bus', 'xxx', 'huh', 'taste good', '[>]', 'nothing', "aren't", 'friends', 'teacher', 'name', 'ice xxx', 'mhm', 'meat', 'oh', 'time', 'piece', "can't"])
file:HSLLD/HV1/MT//brtmt1.cha
precision: 0.0227272727273
recall: 1.0
true positives:['meat']
false positives: ['', '<thank', '[!]', '[>]', 'amen', 'amen>', "aren't", "boys'", 'bus', "can't", 'clinic', 'cold', 'cup', "don't", 'drink', 'food', 'friends', 'girl', 'hm:', 'house', 'huh', 'ice', 'ice xxx', "it's", 'mhm', 'name', 'names', 'nothing', 'oh', 'okay', 'pass', 'piece', 'school', 'taste good', 'teacher', 'thank', 'time', 'today', 'tonic', 'uhhum', 'xxx', 'yeah', 'yep']
false negatives: []
# true pos: 1
# false pos: 43
# false neg: 0
HSLLD/HV1/MT//aprmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: hey [!] now we can get ready to eat .', '*MOT: come on <you wanna say your grace> [>] ?', '*COU: <xxx [=! gobbling sounds]> [<] .', '*MOT: <xxx say your grace> [>] .', "*COU: <I don't ha(ve) none> [<] !", "*MOT: you'll have some in a minute .", '*MOT: say your grace .', '*MOT: God is great .', '*MOT: <God is good> [>] .', '*CHI: <God is good> [<] .', '*MOT: <and we thank him for our food amen> [>] .', '*CHI: <and we thank him for our food amen> [<] .', '*MOT: you too .', '*MOT: okay [!] Gwen <can see> [//] help <you all> [>] +/.', '*COU: <I have got my> [<] +...', '*MOT: get you going on <the table> [>] .', '*AUN: <you want> [<] corn ?', '*COU: yeah .', '*COU: I want that one .', '*AUN: how (a)bout you wink ?', '*CHI: thank you for our (.) &-um +...', '*MOT: potatoes there .', '*CHI: xxx .', '*MOT: anybody want anything to drink ?', '*COU: me !', '*AUN: do you April ?', '*COU: thank [//] I like (.) potatoes .', '*CHI: xxx thank you for Mommy .', '*MOT: <you want something to drink> [>] ?', '*CHI: <thank you for xxx> [<] .', '*CHI: thank you for Granski .', '*CHI: thank you for (.) God +...', '*CHI: +, and thank you for the kids .', '*CHI: <thank you> [>] .', '*MOT: <and thank you> [<] for the kids ?', '*CHI: yeah .', '*CHI: <at my school> [>] .', '*MOT: <what kids> [<] ?', '*MOT: oh okay .', '*CHI: thank you for my teacher .', '*CHI: thank you for my food (.) amen .', '*MOT: amen [>] .', '*AUN: amen [<] .', '*MOT: what would you like to drink April ?', '*MOT: what would you like to have_to drink ?', '*COU: I want koolaid [>] .', '*MOT: what [<] would you like to have for drink ?', '*CHI: milk [?] .', '*MOT: <you want some> [//] whatchu [: what do you] want ?', "*MOT: what's that ?", '*CHI: koolaid [>] .', '*COU: koolaid [<] .', '*MOT: we got koolaid milk and water .', '*CHI: nuhhuh .', '*MOT: and we got air .', '*CHI: mhm [>] .', '*MOT: <anybody want air> [<] ?', '*CHI: me .', '*MOT: you want air ?', '*CHI: I want xxx .', '*CHI: xxx [>] .', '*MOT: <so April> [<] .', '*MOT: <tell me what you did> [>] +/.', '*CHI: xxx [<] .', '*MOT: tell me what happened at your school today whatchu [: what did you] and the kids do at school today ?', '*MOT: name some of the kids go to your school .', '*AUN: what did you do at school today ?', '*COU: <Auntie Mary will tell you something> [>] .', "*AUN: <what's your bus driver's> [//] what's your van driver's name [<] ?", '*COU: Auntie Mary +/.', "*AUN: you know your van driver's name ?", "*AUN: what's some of the kids' name that ride on your van ?", '*CHI: Joey .', '*MOT: eat !', '*AUN: eat some of your potatoes .', '*MOT: anybody want chicken ?', '*COU: me !', "*MOT: April you got a mouth why don't you use your mouth and stop it ?", '*AUN: what did you do at school today ?', '*AUN: hm: ?', '*AUN: April .', '*AUN: (.) April .', '*AUN: (.) what did you do at school today ?', '*CHI: mm no .', "*CHI: <I dunno [: don't know]> [>] .", '*AUN: <what did you do> [<] tell me some games you played .', '*MOT: (..) over at Zayres yesterday Gwen I filled out one of those parers over there so that we can go take a portrait together .', '*AUN: oh really ?', "*MOT: yeah we go over on thirteenth of August at three o'clock on a Sunday (.) me Erica and April and <Salina> [>] .", "*AUN: <that's next Sunday> [<] .", '*AUN: Sunday after this one .', '*MOT: we gonna go and have us a portrait <taken together> [>] .', '*AUN: <sounds good> [<] .', '*COU: yeah [>] .', "*AUN: <that's> [<] the one I had dad and I taken on .", "*MOT: so we gonna have_to make sure that y'all@d hair has been freshly beautifully done .", '*MOT: <you want> [>] +/.', "*AUN: <you better get it done> [<] too (be)cause I'm leaving and I'm going away again next weekend too .", '*MOT: next is the weekend of the seventh ?', '*CHI: &-um &-um &-um Gwenski [>] +/.', "*AUN: &-uh huh [<] I'm gonna go that weekend too .", '*CHI: that other kids name is Ricky and Priscilla and Joanna and Tyrone (.) and Ricky (.) and +...', '*AUN: and what ?', '*CHI: and April .', "*AUN: and what's the little girl name on you van's name April ?", '*AUN: your little friend .', "*AUN: what's her name ?", '*CHI: Veronica [?] .', "*AUN: what's her name ?", '*CHI: Veronica [?] .', "*AUN: what's her name ?", '*AUN: Monica ?', '*CHI: <Veronica> [>] !', '*MOT: <and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .', '*MOT: who want ice cream ?', '*CHI: not me .', "*AUN: I'm a have_to do you hair [//] girls' hair Thursday [!] (.) (be)cause I'm leaving Friday .", '*AUN: okay ?', '*AUN: +, a nice beautiful style .', '*MOT: so you speaking of the tenth .', '*AUN: mhm .', '*MOT: <(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .', '*AUN: yeah .', '*AUN: xxx [>] .', '*CHI: xxx [<] .', "*AUN: that's next weekend huh [>] ?", "*MOT: yeah [<] that's next Friday uhhuh .", '*AUN: mhm .', '*AUN: how you doing xxx ?', '*COU: mm .', '*AUN: xxx .', '*AUN: this is delicious honey got all up on my dress .', '*MOT: &=laughing .', "*MOT: well I'm trying to get back in form again so &-um (.) on my diet today .", '*AUN: I been on mine all week !', "*AUN: <that's why> [>] I'm hungry [!] today .", '*MOT: <the next> [<] +/.', '*MOT: when I go to the store tomorrow and get my sodas .', "*MOT: I'm buyin(g) everything diet .", '*MOT: diet Sprite diet Slice (.) diet ginger+ale .', '*MOT: and &-um (.) I have my &-uh slim fast .', '*MOT: eat it for lunch (.) or for dinner .', '*MOT: and &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .', '*AUN: <I been living on (.) salad> [<] .', "*AUN: I've been living on salad for the last week .", "*AUN: and I'll tell you (.) my body's getting weak .", '*AUN: &=laughs .', "*MOT: well [/] well I'm gonna try it instead <is xxx> [//] is try to try to xxx to eat just about the foods that I'd like to eat .", "*MOT: +^ but I'm just gonna try to cut out (.) a meal and drink diet soda .", "*MOT: +^ (be)cause I really don't eat all that much anyway .", "*MOT: +^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...", '*MOT: so today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .', '*MOT: and I had a &-um (.) diet Sprite for lunch .', '*MOT: and this right here be my &-uh (.) dinner right here .', "*MOT: and tomorrow I'll drink this for &-uh (.) lunch .", '*MOT: and when I come home and cook tomorrow +...', '*MOT: I got some broccoli in there .', '*MOT: and &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .', "*MOT: but I'm gonna try to see if I can (.) do it that way .", "*MOT: and tomorrow when I come home (.) I'm gonna come over there see if I can borrow xxx a mat .", '*AUN: mhm .', "*MOT: +^ and &-um (.) I'm gonna start some exercise .", "*MOT: I'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .", '*MOT: year in and year out .', '*MOT: <it was xxx> [//] it was just a way of life .', '*MOT: +^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .', '*AUN: <and see that was good cause it kept> [>] it kept it down good .', '*MOT: <<never on> [/] (.) never on the weekends> [<] .', '*MOT: and then I used to have Elka [?] come over here and &-uh (.) do it with me .', '*MOT: but &-uh (.) she never did come .', '*MOT: +^ but I was just in that habit of every day .', '*MOT: and ever since my mat that I used to do it on .', '*MOT: my hospital egg crate thing (.) got tore [?] up .', "*MOT: and I tried on the floor a couple of time and my backbone'd be diggin(g) into the floor .", "*AUN: <that's horrible> [>] .", '*MOT: <and I wish> [<] [//] and I tried on the bed but (.) the bed is too soft .', "*MOT: +^ you just can't do it on the bed like you could on something (.) hard and firm .", "*MOT: so tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .", '*AUN: <you make my face kinda xxx> [<] the first .', '*AUN: I start losin(g) my xxx .', "*AUN: xxx I lose xxx it's just a little came off around here .", '*MOT: just a little there .', '*MOT: well they said just earlier where it need <to be firm up> [>] .', '*COU: <can I have> [<] more chicken ?', "*MOT: when it firm it don't necessarily +/.", "*AUN: (be)cause I really <haven't even been> [//] have a appetite that much <for last xxx> [>] .", '*COU: <grandma can I have some more chicken> [<] ?', '*MOT: mhm [<] .', '*COU: can have some more chicken ?', '*MOT: what about potatoes ?', '*COU: yeah .', '*AUN: eat xxx xxx too baby .', '*AUN: she ate her potatoes .', '*MOT: you want potatoes April ?', "*AUN: you whipped yours off too didn't ya [: you] ?", "*MOT: I didn't mess (th)em up .", '*MOT: +^ you know the last time Gwen .', "*MOT: <I had xxx> [//] I don't know what I was thinkin(g) .", '*MOT: +^ I put all that water in that thing .', '*MOT: +^ that whole big package of potatoes .', "*MOT: and then the potatoes didn't have enough water in there .", '*MOT: +^ I tried to add (.) more water to it .', '*MOT: and the things became [?] .', '*AUN: www .', '*MOT: it was a great big mess .', '*AUN: &=laughs .', "*MOT: so today I said I'm gonna make sure this is gonna a xxx .", '*MOT: so it turned out to be (.) <just enough &p> [/] just enough potatoes .', '*AUN: what are these ?', '*CHI: (po)tatoes .', '*AUN: and what is this here ?', '*CHI: chicken ?', '*COU: corn [>] .', '*CHI: corn [<] .', '*MOT: I was cooking just enough for the folks I was gonna feed .', "*AUN: I know and it come out better when you don't cook it too long .", '*MOT: mhm .', "*AUN: she [>] she's talking alright April lips be going together to much when she eat to be (.) conversatin(g)@wp .", "*MOT: that's the thing in front of her .", '*AUN: oh that xxx .', "*MOT: don't you want to talk on the tape recorder <that's a> [/] that's a tape recorder you talk into it and we can play it back and hear it [>] .", '*AUN: <so you> [<] can hear it .', '*MOT: we need a lot of her !', '*MOT: not you tonight you tomorrow night .', "*MOT: we'll take Auntie's it don't work .", '*MOT: you remember when we went to the Brockton fair ?', '*COU: I went to Brockton fair !', '*MOT: yes .', '*MOT: I want April to tell me about when we went to the Brockton fair .', '*AUN: do you remember ?', '*AUN: what did we do ?', '*CHI: touch the animals .', '*AUN: speak up !', "*MOT: I can't hear you .", '*AUN: what did we do ?', '*AUN: (.) mhm ?', '*AUN: tell me what we did at the fair .', "*AUN: didn't you enjoy it ?", '*MOT: this stuff is really good .', '*MOT: +^ even with the skim milk .', '*AUN: kinda [: kind of] like a milk shake xxx .', '*MOT: mhm it sure is .', '*MOT: only thing they do &-um is sometime after so many days of it +/.', '*AUN: you had enough .', "*MOT: yeah mhm but &-um maybe that's part of the program .", '*MOT: you have_to shoot it out .', '*AUN: honey I tell you what .', "*AUN: I haven't xxx eat any +/.", '*AUN: what do you call it ?', '*AUN: oats and bran cereal ?', '*AUN: <oats and> [/] oats and honey ?', '*AUN: somethin(g) <nut and honey> [>] ?', '*CHI: xxx [<] .', '*AUN: I ate some this morning .', '*AUN: +^ oh man what did I do <that for> [>] ?', '*CHI: nothing [<] .', '*CHI: auntie may xxx .', '*AUN: mhm ?', '*CHI: can I have some more fried chicken &=whispering .', '*AUN: why are you whispering ?', '*MOT: <you know any other time (.) she got a big mouth> [>] .', '*COU: <and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .', '*MOT: <you did> [<] !', '*MOT: yes you did !', "*MOT: yeah uhhuh she's talking (a)bout when she sliding on +/.", '*AUN: <mhm sliding on> [//] that was a big slide huh [>] ?', '*MOT: <it was> [<] a big slide found out it was to big for you huh Salina .', '*COU: yeah [<] .', '*AUN: and <heavy headed> [>] too .', '*COU: but it was too xxx [<] .', '*MOT: yep but he came down slidin(g) to the left too .', "*AUN: he's in New York gettin(g) <beat up> [>] .", "*COU: <I'm scared to go> [<] back down there .", "*MOT: where y'all@d people's and Gwen and xxx and y'all@d eat and +/.", '*COU: everybody was laughing at me .', '*AUN: mhm .', "*MOT: after this y'all@d can and sit down a while maybe later on after I take my bath +/.", '*COU: <Auntie Mabel [///] everybody> [>] .', '*MOT: <about the cat> [<] .', '*MOT: the cat inside the red book !', '*COU: yeah .', "*MOT: I'll read the story about the cat before you two go to bed okay ?", '*COU: Auntie Mabel +...', '*CHI: xxx .', '*COU: &-um &-um are we .', '*AUN: whatchu [: what do you] want ?', '*MOT: and what April ?', '*CHI: dog .', '*MOT: and the dog ?', '*MOT: you (re)member that story about the dog ?', '*MOT: what happened in the story (a)bout the cat and the dog tell Gwen (a)bout that story .', '*MOT: come on you love to talk talk !', '*AUN: tell me about it .', '*AUN: tell me about what happened to the dog and the cat in the book .', '*AUN: tell me so I [!] know .', '*AUN: I like to hear stories too .', '*AUN: do you know how to read the book yet ?', "*AUN: I saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .", '*MOT: mhm .', '*AUN: <the buttons you push> [//] <got buttons on> [//] got keys on it like a computer has ?', '*MOT: mhm .', "*AUN: you push one (.) and it returns and <you'll get like> [//] you can make music .", '*AUN: and when you made the music it will play back just what you put in .', '*AUN: then it got one where it has got math in it .', '*AUN: it has got letters .', '*MOT: mhm .', '*AUN: and it has got (.) sounds .', '*AUN: +^ you make certain sounds and it picks it up .', '*MOT: mhm .', "*AUN: it's a really nice thing .", '*MOT: but that sounds xxx [>] +/.', "*AUN: <it's one of those> [<] Texas Instrument toys [>] .", '*MOT: <oh well xxx> [<] <Texas Instrument xxx huh> [>] .', "*AUN: <it's really [?] nice> [<] .", '*AUN: I think Mandi said she paid seventy nine dollars for it .', '*MOT: mhm .', "*AUN: but it's real nice [>] .", '*MOT: xxx [<] he has the time to go in and find it and put in on xxx .', "*MOT: +^ <xxx around Christmas time> [>] things don't go xxx [>] .", '*AUN: <and I was havin(g) problems [?]> [<] .', '*AUN: <I was havin(g)> [<] problems with it myself .', '*AUN: +^ and when you do <they have you &wr> [//] you spell somethin(g) wrong or you (.) have the wrong (.) number <they xxx> [//] they teach you letters first .', '*AUN: then it goes from the (.) letters to your numbers and teach you how to &s (.) recognize (th)em when you see it [?] and you push (th)em .', '*MOT: mhm .', "*AUN: I'd ask you is this a e@l and you'd say yes@q .", "*AUN: if you say yes@q and it's wrong they say you are &wr wrong .", '*AUN: this is not an e@l this is an a@l .', "*AUN: even if it isn't .", "*AUN: it's a really nice toy .", '*MOT: wow that sounds like a nice toy [>] .', "*AUN: <it's a> [<] nice one .", '*MOT: well we gonna xxx .', "*AUN: yeah (be)cause <that's why she says she got it> [>] .", '*MOT: <xxx uhhuh> [<] .', '*AUN: they have some nice ones .', "*AUN: +^ that's what they all need .", '*AUN: stuff like that .', "*MOT: something that's (.) learning uhhuh .", "*AUN: (be)cause you don't play with the babies anyway .", '*AUN: you do them a xxx .', '*AUN: you got enough babies to last you for ten years .', "*COU: <I've got enough toys at home> [>] .", '*MOT: <xxx xxx> [<] pampers on the table this morning .', "*MOT: +^ whose baby's panties is this ?", '*MOT: <whose babies> [>] panties were those April ?', '*MOT: those panties I had the other day for the baby (.) whose doll panties was those ?', '*CHI: for my baby .', '*MOT: huh ?', '*CHI: for my baby .', '*MOT: oh they your baby panties ?', "*COU: my baby don't ha(ve) no panties .", '*AUN: <does she have a pamper> [>] .', '*MOT: xxx [<] .', '*COU: what ?', '*AUN: does your baby have a pamper ?', '*AUN: well does she ?', '*AUN: do you know how to change her pamper ?', "*COU: &-um <my &bar> [//] my Barbie doll don't .", '*COU: my cabbage patch do every time she have a &-um bottle and [/] and a pamper .', '*AUN: really ?', '*COU: yeah .', '*MOT: tomorrow afternoon Thanksgiving [?] .', '*MOT: I want you to xxx to the state house xxx .', '*AUN: oh okay .', '*AUN: out there in Mattapan ?', '*MOT: xxx .', '*MOT: on Morgan Street ?', '*AUN: uhhuh .', '*AUN: I knew xxx .', "*AUN: it's that building where we turn at xxx .", '*MOT: you turn the corner there .', '*AUN: mhm .', "*MOT: it's on the corner xxx .", "*AUN: okay today is today and tomorrow's tomorrow huh ?", '*AUN: xxx today .', '*AUN: <the day> [/] the day for the big one .', '*MOT: so she xxx and I start making xxx .', '*AUN: (be)cause I might leave work early tomorrow anyway .', '*AUN: I definitely am gonna leave early Thursday .', '*AUN: to get everything straightened out and everything done .', '*MOT: xxx are you leavin(g) on Friday ?', '*AUN: mhm .', '*AUN: xxx .', '*MOT: next Friday too .', "*COU: let's make him <xxx no school> [>] .", "*AUN: <(be)cause they're havin(g) it> [<] the <family reunion> [>] till next Friday .", '*MOT: school [<] .', "*MOT: it's xxx .", "*AUN: so I'm gonna spend a weekend in New York this week .", '*MOT: (.) you had enough April ?', '*AUN: are you sure ?', "*AUN: can't you speak ?", '*AUN: hm: ?', '*AUN: well stop shaking your head and say yes@q .', '*CHI: yes .', '*AUN: hm: .', '*AUN: wipe your hands .', "*MOT: that's what you have a napkin for .", '*MOT: wash your hands and wipe your mouth .', "*MOT: they're not just to wrap up popsicles with .", "*AUN: there's a man [!] xxx .", '*AUN: he said come on .', '*AUN: xxx work for me .', '*AUN: xxx come on xxx .', '*MOT: xxx over here xxx [>] .', '*AUN: <I know it> [<] .', '*AUN: you see .', "*AUN: +^ we're just talkin(g) now .", "*AUN: (..) if you're not finished get back up there .", '*AUN: you dropping stuff all over the floor .', '*MOT: if you still eating sit down .', '*MOT: and eat some more of those good potatoes .', '*MOT: +^ eat some more of those potatoes !', '*COU: I ate all mine !', '*MOT: yep you did .', '*AUN: xxx just pop it in there ladies .', "*AUN: it's good .", "*AUN: that's right .", '*AUN: +^ it hit my spot .', '*MOT: yes indeed .', '*AUN: xxx is <on a> [/] on a noncooking diet .', '*AUN: +^ she eats cereal .', '*AUN: xxx no wonder I lost weight .', '*AUN: +^ I lost eight pounds .', '*MOT: oh yeah .', '*MOT: mhm .', "*AUN: that's a old xxx .", '*AUN: I got find a new cereal [>] .', '*COU: xxx [<] .', '*AUN: get up early .', '*AUN: drive into Pennsylvania to the xxx .', '*MOT: xxx .', '*AUN: let her hear what we +/.']
loading solution set
LINE NO ->  15
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  20
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  25
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  26
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  29
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  32
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  35
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  38
LINE NO ->  41
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  44
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  47
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  52
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  57
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  60
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  63
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  66
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947104a28>)
[('get', 'VB'), ('you', 'PRP'), ('going', 'VBG'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  69
corn
corn corn 419
[('you', 'PRP'), ('want', 'VBP'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  78
LINE NO ->  81
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  84
potatoes
potatoes potatoes 62
[('potatoes', 'NNS'), ('there', 'RB')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  88
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  92
LINE NO ->  95
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  98
potatoes
potatoes potatoes 62
[('thank', 'NN'), ('i', 'NN'), ('like', 'IN'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  101
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  104
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  111
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  114
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  117
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  120
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  123
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  127
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  130
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  133
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  137
LINE NO ->  140
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  146
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  149
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  152
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  157
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  165
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  171
milk
milk milk 46
[('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  175
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  179
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  183
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  186
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  189
milk
milk milk 46
[('we', 'PRP'), ('got', 'VBD'), ('koolaid', 'VBN'), ('milk', 'NN'), ('and', 'CC'), ('water', 'NN')]
['milk']
('food -> ', [])
water
water water 18
[('we', 'PRP'), ('got', 'VBD'), ('koolaid', 'VBN'), ('milk', 'NN'), ('and', 'CC'), ('water', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  192
LINE NO ->  195
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  198
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  205
LINE NO ->  208
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  212
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  215
LINE NO ->  216
LINE NO ->  219
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  222
LINE NO ->  223
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 1, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, -1: 1})
LINE NO ->  231
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  236
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  240
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  248
LINE NO ->  251
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  255
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  260
LINE NO ->  263
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  266
potatoes
potatoes potatoes 62
[('eat', 'VB'), ('some', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  269
chicken
chicken chicken 234
[('anybody', 'NN'), ('want', 'VBP'), ('chicken', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  272
LINE NO ->  275
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  283
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  287
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  290
LINE NO ->  293
LINE NO ->  296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0})
LINE NO ->  303
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  306
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  312
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0})
LINE NO ->  322
LINE NO ->  325
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0})
LINE NO ->  333
LINE NO ->  336
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  340
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  345
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  348
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  351
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  356
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, -1: 1})
LINE NO ->  363
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  367
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, -1: 1})
LINE NO ->  375
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  379
LINE NO ->  382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  389
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, -1: 1})
LINE NO ->  396
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  399
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  402
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  407
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  410
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  413
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  416
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  419
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  422
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  425
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  428
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  432
cream
cream cream 72
[('and', 'CC'), ('maybe', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('sit', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('talk', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('or', 'CC'), ('and', 'CC'), ('probably', 'RB'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('afterwards', 'NNS')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('and', 'CC'), ('maybe', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('sit', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('talk', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('or', 'CC'), ('and', 'CC'), ('probably', 'RB'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('afterwards', 'NNS')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471e5d88>)
[('and', 'CC'), ('maybe', 'RB'), ('if', 'IN'), ('you', 'PRP'), ('sit', 'VBP'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('talk', 'NN'), ('and', 'CC'), ('eat', 'VB'), ('your', 'PRP$'), ('food', 'NN'), ('or', 'CC'), ('and', 'CC'), ('probably', 'RB'), ('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('afterwards', 'NNS')]
['table']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 1, 104: 1, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 1, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0})
LINE NO ->  442
cream
cream cream 72
[('who', 'WP'), ('want', 'VBP'), ('ice', 'NN'), ('cream', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('who', 'WP'), ('want', 'VBP'), ('ice', 'NN'), ('cream', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  446
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  451
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, -1: 1})
LINE NO ->  458
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  461
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  465
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  468
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 0, 84: 1, 85: 1, 86: 1, 87: 0, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, -1: 1})
LINE NO ->  476
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  480
LINE NO ->  481
LINE NO ->  482
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  492
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  495
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  498
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  499
honey
honey honey 304
[('this', 'DT'), ('is', 'VBZ'), ('delicious', 'JJ'), ('honey', 'NN'), ('got', 'VBD'), ('all', 'DT'), ('up', 'RB'), ('on', 'IN'), ('my', 'PRP$'), ('dress', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  504
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  506
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0})
LINE NO ->  513
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  516
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  521
LINE NO ->  524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  529
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  532
ginger
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472d2b48>)
[('diet', 'JJ'), ('sprite', 'JJ'), ('diet', 'JJ'), ('slice', 'NN'), ('diet', 'JJ'), ('ginger', 'NN'), ('ale', 'NN')]
['ginger']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  535
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  538
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  541
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a1f38>)
[('and', 'CC'), ('uh', 'NN'), ('i', 'VBP'), ('knew', 'VBD'), ('this', 'DT'), ('stuff', 'NN'), ('on', 'IN'), ('this', 'DT'), ('table', 'NN'), ('was', 'VBD'), ('gon', 'VBG'), ('na', 'TO'), ('tempt', 'VB'), ('me', 'PRP')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 1, 77: 1, 78: 1, 79: 0, 80: 1, 81: 1, 82: 1, 83: 0, 84: 0, 85: 0, -1: 1})
LINE NO ->  547
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  550
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  555
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  560
LINE NO ->  561
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 1, 103: 1, 104: 1, 105: 1, 106: 1, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0})
LINE NO ->  570
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0})
LINE NO ->  577
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  582
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0})
LINE NO ->  589
ham
ham ham 141
[('so', 'RB'), ('today', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('lunch', 'NN'), ('and', 'CC'), ('took', 'VBD'), ('me', 'PRP'), ('a', 'DT'), ('spice', 'NN'), ('ham', 'NN'), ('sandwich', 'NN'), ('to', 'TO'), ('eat', 'VB'), ('lunch', 'NN'), ('and', 'CC'), ('then', 'RB'), ('i', 'VB'), ('had', 'VBD'), ('an', 'DT'), ('apple', 'NN')]
['ham']
('food -> ', [['ham', 'Sausages and Luncheon Meats']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 0, 97: 0, 98: 0, -1: 1})
LINE NO ->  597
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  602
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  607
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  612
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  617
broccoli
broccoli broccoli 30
[('i', 'NN'), ('got', 'VBD'), ('some', 'DT'), ('broccoli', 'NN'), ('in', 'IN'), ('there', 'EX')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  620
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a96c8>)
[('and', 'CC'), ('uh', 'JJ'), ('xxx', 'NN'), ('and', 'CC'), ('put', 'VB'), ('pork', 'NN'), ('chops', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('that', 'DT'), ('baby', 'NN'), ('pork', 'NN'), ('chops', 'NNS'), ('and', 'CC'), ('fix', 'VB'), ('the', 'DT'), ('broccoli', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('food', 'NN'), ('tomorrow', 'NN')]
['baby']
('food -> ', [])
broccoli
broccoli broccoli 30
[('and', 'CC'), ('uh', 'JJ'), ('xxx', 'NN'), ('and', 'CC'), ('put', 'VB'), ('pork', 'NN'), ('chops', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('that', 'DT'), ('baby', 'NN'), ('pork', 'NN'), ('chops', 'NNS'), ('and', 'CC'), ('fix', 'VB'), ('the', 'DT'), ('broccoli', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('food', 'NN'), ('tomorrow', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
pork
pork pork 541
[('and', 'CC'), ('uh', 'JJ'), ('xxx', 'NN'), ('and', 'CC'), ('put', 'VB'), ('pork', 'NN'), ('chops', 'NNS'), ('to', 'TO'), ('make', 'VB'), ('that', 'DT'), ('baby', 'NN'), ('pork', 'NN'), ('chops', 'NNS'), ('and', 'CC'), ('fix', 'VB'), ('the', 'DT'), ('broccoli', 'NN'), ('and', 'CC'), ('i', 'NN'), ('have', 'VBP'), ('food', 'NN'), ('tomorrow', 'NN')]
['pork']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products'], ['pork', 'Pork Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 1, 88: 1, 89: 1, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 1, 96: 1, 97: 1, 98: 1, 99: 1, 100: 1, 101: 1, 102: 1, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 1, 116: 1, 117: 1, 118: 1, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, -1: 1})
LINE NO ->  627
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  632
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 1, 93: 1, 94: 1, 95: 0, 96: 0, 97: 0, -1: 1})
LINE NO ->  639
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  643
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  647
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 1, 106: 1, 107: 1, 108: 1, 109: 1, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 1, 126: 1, 127: 1, 128: 1, 129: 0, 130: 0, 131: 0, 132: 1, 133: 1, 134: 1, 135: 1, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, -1: 1})
LINE NO ->  660
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  663
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  667
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 1, 126: 1, 127: 1, 128: 1, 129: 0, 130: 0, 131: 0, 132: 1, 133: 1, 134: 1, 135: 1, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0})
LINE NO ->  678
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  685
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  688
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  695
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0})
LINE NO ->  703
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  708
egg
egg egg 357
[('my', 'PRP$'), ('hospital', 'NN'), ('egg', 'NN'), ('crate', 'JJ'), ('thing', 'NN'), ('got', 'VBD'), ('tore', 'RB'), ('up', 'RP')]
['egg']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0})
LINE NO ->  713
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, -1: 1})
LINE NO ->  721
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  725
soft
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722e368>)
[('and', 'CC'), ('i', 'VB'), ('wish', 'JJ'), ('and', 'CC'), ('i', 'JJ'), ('tried', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('bed', 'NN'), ('but', 'CC'), ('the', 'DT'), ('bed', 'NN'), ('is', 'VBZ'), ('too', 'RB'), ('soft', 'JJ')]
['soft']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0})
LINE NO ->  730
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a94d0>)
[('you', 'PRP'), ('just', 'RB'), ('can', 'MD'), ('t', 'VB'), ('do', 'VB'), ('it', 'PRP'), ('on', 'IN'), ('the', 'DT'), ('bed', 'NN'), ('like', 'IN'), ('you', 'PRP'), ('could', 'MD'), ('on', 'IN'), ('something', 'NN'), ('hard', 'JJ'), ('and', 'CC'), ('firm', 'NN')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 1, 86: 0, 87: 0, 88: 0, -1: 1})
LINE NO ->  737
round
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94721dea8>)
[('so', 'RB'), ('tomorrow', 'NN'), ('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('try', 'VB'), ('to', 'TO'), ('get', 'VB'), ('into', 'IN'), ('form', 'NN'), ('so', 'IN'), ('i', 'JJ'), ('can', 'MD'), ('see', 'VB'), ('by', 'IN'), ('my', 'PRP$'), ('birthday', 'JJ'), ('october', 'IN'), ('if', 'IN'), ('i', 'NNS'), ('can', 'MD'), ('be', 'VB'), ('lost', 'VBN'), ('these', 'DT'), ('these', 'DT'), ('pounds', 'NNS'), ('a', 'DT'), ('round', 'NN'), ('here', 'RB')]
['round']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 1, 114: 1, 115: 1, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 0, 134: 0, 135: 0, 136: 0, 137: 1, 138: 1, 139: 1, 140: 1, 141: 1, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 1, 150: 1, 151: 1, 152: 0, 153: 0, 154: 0, -1: 1})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  752
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  756
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  762
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  765
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0})
LINE NO ->  770
chicken
chicken chicken 234
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('more', 'JJR'), ('chicken', 'NNS')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  773
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  777
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0, -1: 1})
LINE NO ->  782
chicken
chicken chicken 234
[('grandma', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('chicken', 'NNS')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  786
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  789
chicken
chicken chicken 234
[('can', 'MD'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('chicken', 'NNS')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  792
potatoes
potatoes potatoes 62
[('what', 'WP'), ('about', 'IN'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  795
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  798
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947152a28>)
[('eat', 'NN'), ('xxx', 'JJ'), ('xxx', 'NNP'), ('too', 'RB'), ('baby', 'RB')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  801
potatoes
potatoes potatoes 62
[('she', 'PRP'), ('ate', 'VBD'), ('her', 'PRP'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  804
potatoes
potatoes potatoes 62
[('you', 'PRP'), ('want', 'VBP'), ('potatoes', 'NNS'), ('april', 'VB')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  808
whipped
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a9b00>)
[('you', 'PRP'), ('whipped', 'VBD'), ('yours', 'VB'), ('off', 'RP'), ('too', 'RB'), ('didn', 'JJ'), ('t', 'NN'), ('ya', 'NN'), ('you', 'PRP')]
['whipped']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  813
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  816
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  819
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  824
water
water water 18
[('i', 'NN'), ('put', 'VBD'), ('all', 'DT'), ('that', 'IN'), ('water', 'NN'), ('in', 'IN'), ('that', 'DT'), ('thing', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  829
potatoes
potatoes potatoes 62
[('that', 'DT'), ('whole', 'JJ'), ('big', 'JJ'), ('package', 'NN'), ('of', 'IN'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  832
potatoes
potatoes potatoes 62
[('and', 'CC'), ('then', 'RB'), ('the', 'DT'), ('potatoes', 'NNS'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('water', 'NN'), ('in', 'IN'), ('there', 'EX')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
water
water water 18
[('and', 'CC'), ('then', 'RB'), ('the', 'DT'), ('potatoes', 'NNS'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('water', 'NN'), ('in', 'IN'), ('there', 'EX')]
['water']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products'], ['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  837
water
water water 18
[('i', 'NN'), ('tried', 'VBD'), ('to', 'TO'), ('add', 'VB'), ('more', 'JJR'), ('water', 'NN'), ('to', 'TO'), ('it', 'PRP')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  842
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  845
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  847
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  850
LINE NO ->  851
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  857
potatoes
potatoes potatoes 62
[('so', 'IN'), ('it', 'PRP'), ('turned', 'VBD'), ('out', 'RP'), ('to', 'TO'), ('be', 'VB'), ('just', 'RB'), ('enough', 'RB'), ('p', 'JJ'), ('just', 'RB'), ('enough', 'RB'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  862
LINE NO ->  865
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  869
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  872
chicken
chicken chicken 234
[('chicken', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  875
corn
corn corn 419
[('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  878
corn
corn corn 419
[('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  881
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  888
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  895
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  899
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, -1: 1})
LINE NO ->  907
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  912
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  916
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, -1: 1})
LINE NO ->  927
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  931
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  934
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  938
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  944
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  950
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  953
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  956
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  962
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  965
LINE NO ->  968
LINE NO ->  972
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  975
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  978
LINE NO ->  981
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  984
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  989
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  993
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  996
milk
milk milk 46
[('even', 'RB'), ('with', 'IN'), ('the', 'DT'), ('skim', 'NN'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  999
milk
milk milk 46
[('kinda', 'NN'), ('kind', 'NN'), ('of', 'IN'), ('like', 'IN'), ('a', 'DT'), ('milk', 'NN'), ('shake', 'NN'), ('xxx', 'NN')]
['milk']
('food -> ', [])
shake
shake shake 148
[('kinda', 'NN'), ('kind', 'NN'), ('of', 'IN'), ('like', 'IN'), ('a', 'DT'), ('milk', 'NN'), ('shake', 'NN'), ('xxx', 'NN')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0})
LINE NO ->  1002
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1005
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  1010
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1013
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  1018
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1021
honey
honey honey 304
[('honey', 'NN'), ('i', 'NN'), ('tell', 'VBP'), ('you', 'PRP'), ('what', 'WP')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1024
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1027
LINE NO ->  1030
oats
oats oats 389
[('oats', 'NNS'), ('and', 'CC'), ('bran', 'NN'), ('cereal', 'NN')]
['oats']
('food -> ', [['oats', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1033
oats
oats oats 389
[('oats', 'NNS'), ('and', 'CC'), ('oats', 'NNS'), ('and', 'CC'), ('honey', 'NN')]
['oats']
('food -> ', [['oats', 'Cereal Grains and Pasta']])
honey
honey honey 304
[('oats', 'NNS'), ('and', 'CC'), ('oats', 'NNS'), ('and', 'CC'), ('honey', 'NN')]
['honey']
('food -> ', [['oats', 'Cereal Grains and Pasta'], ['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1036
honey
honey honey 304
[('somethin', 'JJ'), ('g', 'NN'), ('nut', 'NN'), ('and', 'CC'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1039
LINE NO ->  1040
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1043
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1048
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1051
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1055
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1058
fried chicken
fried chicken fried chicken 234
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('fried', 'JJ'), ('chicken', 'NN'), ('whispering', 'NN')]
['fried', 'chicken']
('food -> ', [['fried chicken', 'Legumes and Legume Products']])
chicken
chicken chicken 234
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'RBR'), ('fried', 'JJ'), ('chicken', 'NN'), ('whispering', 'NN')]
['chicken']
('food -> ', [['fried chicken', 'Legumes and Legume Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1062
LINE NO ->  1066
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  1073
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 1, 112: 1, 113: 1, 114: 1, 115: 1, 116: 0, 117: 1, 118: 1, 119: 1, 120: 1, 121: 0, 122: 1, 123: 1, 124: 1, 125: 1, 126: 1, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 1, 154: 1, 155: 1, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 1, 162: 1, 163: 1, 164: 1, 165: 0, 166: 0, 167: 0})
LINE NO ->  1085
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1088
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  1091
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  1096
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  1099
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0})
LINE NO ->  1106
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1109
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1112
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1116
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  1121
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  1126
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1133
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  1138
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1142
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1146
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, -1: 1})
LINE NO ->  1153
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1156
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1159
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1162
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1165
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0})
LINE NO ->  1173
LINE NO ->  1176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1177
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1180
LINE NO ->  1183
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1190
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1194
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1199
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0})
LINE NO ->  1206
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  1209
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1212
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, -1: 1})
LINE NO ->  1218
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1221
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1224
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1230
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 1, 123: 1, 124: 1, 125: 1, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 1, 133: 1, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 1, 178: 1, 179: 1, 180: 1, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 223: 0, 224: 1, 225: 1, 226: 1, 227: 1, 228: 1, 229: 1, 230: 0, 231: 0, 232: 0, -1: 1})
LINE NO ->  1244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0})
LINE NO ->  1252
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1255
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 0, 84: 0, 85: 0, -1: 1})
LINE NO ->  1260
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  1267
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1275
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1278
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1281
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1286
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1289
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  1300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1303
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1306
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  1311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1314
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1317
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  1322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0})
LINE NO ->  1326
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  1329
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1333
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 1, 109: 1, 110: 1, 111: 1, 112: 1, 113: 1, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1, 152: 1, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0})
LINE NO ->  1341
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, -1: 1})
LINE NO ->  1350
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1353
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  1358
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1363
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1368
LINE NO ->  1371
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1374
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1378
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1381
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1384
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0})
LINE NO ->  1389
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1392
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1395
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1398
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1401
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  1407
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1412
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1415
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1420
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1425
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947034758>)
[('xxx', 'JJ'), ('xxx', 'NN'), ('pampers', 'NNS'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN'), ('this', 'DT'), ('morning', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0})
LINE NO ->  1428
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b8638>)
[('whose', 'WP$'), ('baby', 'NN'), ('s', 'NN'), ('panties', 'NNS'), ('is', 'VBZ'), ('this', 'DT')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1437
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471d0998>)
[('those', 'DT'), ('panties', 'NNS'), ('i', 'VBP'), ('had', 'VBD'), ('the', 'DT'), ('other', 'JJ'), ('day', 'NN'), ('for', 'IN'), ('the', 'DT'), ('baby', 'NN'), ('whose', 'WP$'), ('doll', 'NN'), ('panties', 'NNS'), ('was', 'VBD'), ('those', 'DT')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  1445
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472b5ea8>)
[('for', 'IN'), ('my', 'PRP$'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1449
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1453
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a05f0>)
[('for', 'IN'), ('my', 'PRP$'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1457
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947104a28>)
[('oh', 'IN'), ('they', 'PRP'), ('your', 'PRP$'), ('baby', 'NN'), ('panties', 'NNS')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1461
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94721dfc8>)
[('my', 'PRP$'), ('baby', 'NN'), ('don', 'NN'), ('t', 'NN'), ('ha', 'NN'), ('ve', 'VBZ'), ('no', 'DT'), ('panties', 'NNS')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1464
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1467
LINE NO ->  1468
LINE NO ->  1471
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a0200>)
[('does', 'VBZ'), ('your', 'PRP$'), ('baby', 'NN'), ('have', 'VBP'), ('a', 'DT'), ('pamper', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1474
LINE NO ->  1477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1482
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  1485
cabbage
cabbage cabbage 28
[('my', 'PRP$'), ('cabbage', 'NN'), ('patch', 'NN'), ('do', 'VB'), ('every', 'DT'), ('time', 'NN'), ('she', 'PRP'), ('have', 'VBP'), ('a', 'DT'), ('um', 'JJ'), ('bottle', 'NN'), ('and', 'CC'), ('and', 'CC'), ('a', 'DT'), ('pamper', 'NN')]
['cabbage']
('food -> ', [['cabbage', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0})
LINE NO ->  1490
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1493
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1496
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1499
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1505
LINE NO ->  1508
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1511
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1512
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1515
LINE NO ->  1518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1521
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1526
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1529
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1532
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1535
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1540
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1543
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  1546
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1549
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  1554
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  1558
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1563
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1566
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1571
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1572
LINE NO ->  1575
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1578
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, -1: 1})
LINE NO ->  1584
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1587
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1590
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  1595
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1599
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1602
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1605
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1608
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  1613
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1618
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1621
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1624
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1629
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1633
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  1639
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1642
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1645
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1648
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1651
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1654
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1657
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1660
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1663
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  1669
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  1673
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1676
potatoes
potatoes potatoes 62
[('and', 'CC'), ('eat', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('those', 'DT'), ('good', 'JJ'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1681
potatoes
potatoes potatoes 62
[('eat', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('of', 'IN'), ('those', 'DT'), ('potatoes', 'NNS')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1684
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1687
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1690
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1694
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1697
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1700
spot
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453a0bd8>)
[('it', 'PRP'), ('hit', 'VBD'), ('my', 'PRP$'), ('spot', 'NN')]
['spot']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1703
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1706
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1709
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1712
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1715
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1718
LINE NO ->  1721
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1724
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1727
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1730
LINE NO ->  1732
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1735
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1739
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1740
loading solution set
calculating
set([(1059, (27, 40)), (1000, (31, 41)), (1031, (6, 26)), (873, (6, 13)), (190, (30, 35)), (598, (27, 38)), (1034, (21, 35)), (270, (19, 26)), (551, (26, 31)), (590, (91, 96)), (876, (6, 10)), (802, (18, 26)), (184, (6, 13)), (163, (13, 20)), (621, (95, 103)), (621, (68, 78)), (267, (23, 31)), (833, (19, 27)), (783, (36, 43)), (1682, (32, 40)), (866, (6, 16)), (583, (26, 30)), (1728, (23, 29)), (790, (25, 32)), (525, (49, 54)), (1677, (38, 46)), (858, (66, 74)), (190, (21, 25)), (190, (13, 20)), (533, (6, 17)), (533, (18, 28)), (571, (64, 73)), (1034, (7, 11)), (70, (21, 25)), (533, (38, 48)), (621, (35, 45)), (443, (15, 24)), (879, (6, 10)), (172, (6, 10)), (536, (34, 43)), (590, (41, 59)), (793, (17, 25)), (548, (28, 33)), (187, (6, 13)), (805, (15, 23)), (99, (28, 36)), (1037, (19, 32)), (433, (103, 112)), (618, (17, 25)), (85, (6, 14)), (830, (35, 43)), (771, (28, 35)), (1634, (34, 43))])
[((70, (21, 25)), '*AUN:\t<you want> [<] corn ?\n'), ((85, (6, 14)), '*MOT:\tpotatoes there .\n'), ((99, (28, 36)), '*COU:\tthank [//] I like (.) potatoes .\n'), ((163, (13, 20)), '*COU:\tI want koolaid [>] .\n'), ((172, (6, 10)), '*CHI:\tmilk [?] .\n'), ((184, (6, 13)), '*CHI:\tkoolaid [>] .\n'), ((187, (6, 13)), '*COU:\tkoolaid [<] .\n'), ((190, (13, 20)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (21, 25)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (30, 35)), '*MOT:\twe got koolaid milk and water .\n'), ((267, (23, 31)), '*AUN:\teat some of your potatoes .\n'), ((270, (19, 26)), '*MOT:\tanybody want chicken ?\n'), ((433, (103, 112)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((443, (15, 24)), '*MOT:\twho want ice cream ?\n'), ((525, (49, 54)), '*MOT:\twhen I go to the store tomorrow and get my sodas .\n'), ((533, (6, 17)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (18, 28)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((533, (38, 48)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((536, (34, 43)), '*MOT:\tand &-um (.) I have my &-uh slim fast .\n'), ((548, (28, 33)), '*AUN:\t<I been living on (.) salad> [<] .\n'), ((551, (26, 31)), "*AUN:\tI've been living on salad for the last week .\n"), ((571, (64, 73)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((583, (26, 30)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((590, (41, 59)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (91, 96)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((598, (27, 38)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((618, (17, 25)), '*MOT:\tI got some broccoli in there .\n'), ((621, (35, 45)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (68, 78)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (95, 103)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((771, (28, 35)), '*COU:\t<can I have> [<] more chicken ?\n'), ((783, (36, 43)), '*COU:\t<grandma can I have some more chicken> [<] ?\n'), ((790, (25, 32)), '*COU:\tcan have some more chicken ?\n'), ((793, (17, 25)), '*MOT:\twhat about potatoes ?\n'), ((802, (18, 26)), '*AUN:\tshe ate her potatoes .\n'), ((805, (15, 23)), '*MOT:\tyou want potatoes April ?\n'), ((830, (35, 43)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((833, (19, 27)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((858, (66, 74)), '*MOT:\tso it turned out to be (.) <just enough &p> [/] just enough potatoes .\n'), ((866, (6, 16)), '*CHI:\t(po)tatoes .\n'), ((873, (6, 13)), '*CHI:\tchicken ?\n'), ((876, (6, 10)), '*COU:\tcorn [>] .\n'), ((879, (6, 10)), '*CHI:\tcorn [<] .\n'), ((1000, (31, 41)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1031, (6, 26)), '*AUN:\toats and bran cereal ?\n'), ((1034, (7, 11)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1034, (21, 35)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1037, (19, 32)), '*AUN:\tsomethin(g) <nut and honey> [>] ?\n'), ((1059, (27, 40)), '*CHI:\tcan I have some more fried chicken &=whispering .\n'), ((1634, (34, 43)), "*MOT:\tthey're not just to wrap up popsicles with .\n"), ((1677, (38, 46)), '*MOT:\tand eat some more of those good potatoes .\n'), ((1682, (32, 40)), '*MOT:\t+^ eat some more of those potatoes !\n'), ((1728, (23, 29)), '*AUN:\tI got find a new cereal [>] .\n')]
set([(1059, (27, 40)), (48, (6, 10)), (738, (26, 31)), (313, (67, 73)), (1273, (-1, 4)), (714, (43, 47)), (423, (-1, 4)), (1276, (6, 9)), (709, (18, 21)), (82, (6, 11)), (459, (-1, 4)), (873, (-1, 4)), (202, (25, 28)), (628, (55, 58)), (1701, (-1, 4)), (1301, (46, 50)), (1685, (16, 20)), (908, (-1, 4)), (124, (34, 38)), (866, (6, 16)), (61, (35, 39)), (224, (36, 42)), (408, (18, 24)), (1000, (20, 23)), (796, (6, 10)), (973, (-1, 4)), (514, (25, 29)), (709, (28, 33)), (1100, (25, 30)), (452, (27, 31)), (1107, (11, 14)), (400, (-1, 4)), (830, (-1, 4)), (939, (35, 39)), (1438, (63, 67)), (1034, (6, 11)), (852, (9, 14)), (1312, (6, 9)), (1458, (-1, 4)), (1200, (57, 60)), (686, (-1, 4)), (1354, (10, 13)), (1433, (-1, 4)), (1509, (-1, 4)), (209, (15, 18)), (525, (23, 28)), (1041, (22, 29)), (1074, (153, 156)), (722, (24, 27)), (85, (-1, 4)), (33, (6, 12)), (376, (18, 25)), (53, (32, 36)), (190, (30, 35)), (1160, (10, 13)), (1733, (-1, 4)), (304, (18, 23)), (1097, (49, 52)), (1014, (37, 41)), (539, (34, 40)), (1375, (-1, 4)), (517, (38, 43)), (1640, (20, 23)), (858, (66, 74)), (131, (-1, 4)), (245, (50, 53)), (648, (12, 15)), (997, (23, 27)), (256, (31, 35)), (1438, (36, 39)), (1625, (-1, 4)), (1056, (6, 9)), (583, (52, 57)), (1433, (25, 32)), (1736, (6, 11)), (1256, (19, 22)), (1661, (9, 14)), (982, (10, 13)), (1225, (-1, 4)), (1402, (27, 35)), (411, (-1, 4)), (1006, (56, 60)), (1674, (-1, 4)), (121, (18, 21)), (571, (49, 53)), (21, (19, 24)), (1296, (-1, 4)), (1725, (-1, 4)), (267, (-1, 4)), (1049, (6, 13)), (102, (10, 15)), (1323, (41, 47)), (507, (37, 41)), (1147, (-1, 4)), (917, (6, 11)), (357, (-1, 4)), (876, (6, 14)), (1122, (43, 46)), (1416, (21, 27)), (1177, (6, 9)), (536, (15, 18)), (1486, (74, 80)), (1379, (12, 14)), (1596, (-1, 4)), (1117, (6, 9)), (749, (6, 10)), (1034, (30, 35)), (1677, (33, 46)), (628, (-1, 4)), (1282, (26, 32)), (603, (-1, 4)), (70, (11, 16)), (668, (46, 51)), (403, (-1, 4)), (817, (-1, 4)), (830, (24, 31)), (1579, (67, 71)), (1707, (40, 44)), (417, (-1, 4)), (1522, (-1, 4)), (749, (19, 23)), (1497, (-1, 4)), (1139, (-1, 4)), (1041, (-1, 4)), (699, (6, 8)), (562, (102, 107)), (648, (105, 110)), (817, (6, 8)), (121, (13, 17)), (67, (35, 38)), (1359, (27, 31)), (753, (26, 29)), (1527, (-1, 4)), (1307, (-1, 4)), (364, (-1, 4)), (1541, (-1, 4)), (1713, (27, 33)), (753, (-1, 4)), (172, (6, 10)), (571, (69, 73)), (466, (29, 34)), (621, (87, 90)), (1166, (65, 69)), (1393, (26, 30)), (1536, (50, 53)), (1231, (132, 134)), (1454, (-1, 4)), (1019, (-1, 4)), (433, (103, 112)), (252, (20, 23)), (209, (-1, 4)), (1375, (38, 41)), (1031, (6, 10)), (1643, (-1, 4)), (1092, (6, 10)), (232, (23, 27)), (1110, (-1, 4)), (1649, (10, 14)), (500, (-1, 4)), (1067, (6, 10)), (1519, (-1, 4)), (1677, (-1, 4)), (889, (-1, 4)), (1685, (-1, 4)), (237, (32, 37)), (846, (6, 9)), (1279, (25, 31)), (304, (9, 14)), (1334, (108, 114)), (583, (26, 30)), (326, (55, 62)), (913, (-1, 4)), (571, (6, 8)), (990, (-1, 4)), (1450, (6, 9)), (42, (20, 23)), (180, (-1, 4)), (542, (50, 55)), (1634, (-1, 4)), (1279, (-1, 4)), (1413, (-1, 4)), (1117, (44, 48)), (36, (-1, 4)), (778, (-1, 4)), (917, (58, 60)), (1089, (6, 9)), (908, (17, 22)), (141, (23, 30)), (1031, (20, 26)), (1107, (6, 10)), (833, (19, 27)), (507, (56, 59)), (1382, (20, 23)), (1006, (11, 16)), (661, (6, 10)), (1630, (36, 41)), (787, (10, 13)), (172, (11, 14)), (1195, (42, 45)), (48, (37, 42)), (486, (15, 21)), (525, (-1, 4)), (144, (23, 27)), (1606, (-1, 4)), (1256, (78, 83)), (686, (49, 52)), (1728, (30, 33)), (383, (37, 44)), (115, (6, 11)), (118, (31, 35)), (852, (-1, 4)), (598, (23, 26)), (1707, (6, 9)), (1486, (9, 16)), (1682, (32, 40)), (1160, (29, 33)), (954, (6, 9)), (805, (-1, 4)), (452, (-1, 4)), (1609, (29, 33)), (866, (-1, 4)), (603, (15, 20)), (1682, (9, 12)), (1536, (11, 16)), (466, (-1, 4)), (486, (6, 10)), (738, (127, 133)), (1462, (9, 13)), (1290, (-1, 4)), (505, (-1, 4)), (1261, (28, 33)), (1396, (9, 15)), (1219, (-1, 4)), (664, (6, 9)), (297, (36, 41)), (53, (6, 10)), (1342, (-1, 4)), (297, (-1, 4)), (805, (15, 23)), (30, (15, 21)), (1670, (38, 43)), (1458, (19, 23)), (1301, (51, 54)), (763, (-1, 4)), (879, (6, 14)), (542, (15, 18)), (1472, (28, 34)), (433, (40, 50)), (1364, (36, 39)), (738, (113, 116)), (957, (65, 69)), (1646, (10, 14)), (397, (-1, 4)), (112, (6, 11)), (1438, (48, 52)), (633, (-1, 4)), (1100, (10, 14)), (297, (29, 35)), (304, (31, 34)), (1478, (-1, 4)), (1691, (31, 37)), (848, (-1, 4)), (1074, (117, 121)), (1695, (6, 10)), (224, (43, 48)), (704, (-1, 4)), (1533, (18, 24)), (1134, (-1, 4)), (89, (-1, 4)), (738, (137, 142)), (613, (31, 35)), (1579, (34, 37)), (1200, (27, 32)), (1421, (31, 36)), (726, (6, 10)), (224, (69, 73)), (1207, (26, 30)), (1200, (45, 48)), (1113, (25, 28)), (1014, (11, 14)), (939, (6, 11)), (109, (6, 12)), (590, (-1, 4)), (1074, (161, 165)), (1157, (-1, 4)), (1500, (37, 42)), (141, (6, 11)), (507, (71, 76)), (696, (15, 18)), (190, (-1, 4)), (1372, (25, 28)), (180, (6, 12)), (1248, (11, 18)), (1304, (29, 32)), (1408, (-1, 4)), (352, (33, 36)), (1416, (48, 53)), (870, (-1, 4)), (608, (24, 29)), (1585, (13, 16)), (1067, (26, 30)), (771, (28, 35)), (26, (33, 36)), (96, (-1, 4)), (1293, (-1, 4)), (232, (39, 45)), (873, (6, 13)), (417, (17, 21)), (61, (6, 10)), (1619, (6, 9)), (73, (6, 10)), (664, (38, 41)), (1157, (22, 25)), (288, (6, 9)), (1544, (11, 15)), (483, (6, 12)), (668, (125, 129)), (1163, (6, 10)), (825, (24, 29)), (1359, (-1, 4)), (1600, (-1, 4)), (608, (48, 53)), (403, (33, 37)), (21, (41, 44)), (196, (-1, 4)), (1351, (6, 9)), (1429, (15, 21)), (131, (13, 20)), (433, (29, 32)), (232, (-1, 4)), (276, (32, 37)), (985, (33, 37)), (1056, (-1, 4)), (462, (-1, 4)), (469, (6, 9)), (1465, (-1, 4)), (514, (16, 20)), (1086, (16, 19)), (1000, (31, 41)), (793, (17, 25)), (1086, (-1, 4)), (825, (38, 43)), (679, (29, 34)), (1458, (24, 31)), (256, (-1, 4)), (1579, (54, 62)), (757, (6, 9)), (144, (32, 36)), (477, (6, 10)), (349, (11, 14)), (124, (22, 25)), (307, (-1, 4)), (900, (-1, 4)), (1191, (14, 17)), (483, (18, 25)), (368, (-1, 4)), (542, (-1, 4)), (896, (6, 9)), (1375, (34, 37)), (951, (-1, 4)), (1154, (37, 40)), (799, (22, 26)), (429, (17, 20)), (590, (9, 14)), (1318, (10, 13)), (556, (-1, 4)), (202, (-1, 4)), (1222, (-1, 4)), (590, (91, 96)), (1716, (6, 8)), (1691, (6, 9)), (1287, (6, 9)), (578, (34, 37)), (1550, (30, 34)), (848, (25, 29)), (1454, (13, 17)), (1166, (36, 39)), (714, (25, 30)), (882, (-1, 4)), (1472, (-1, 4)), (621, (-1, 4)), (443, (-1, 4)), (1450, (-1, 4)), (1273, (17, 24)), (1375, (6, 9)), (714, (33, 39)), (1067, (-1, 4)), (1707, (20, 23)), (1025, (20, 23)), (1037, (27, 33)), (245, (19, 22)), (621, (35, 39)), (423, (17, 21)), (633, (31, 35)), (1579, (17, 24)), (21, (34, 40)), (787, (6, 9)), (284, (32, 37)), (1462, (14, 19)), (957, (-1, 4)), (1372, (-1, 4)), (1465, (6, 11)), (1625, (29, 35)), (766, (64, 67)), (1736, (37, 40)), (644, (6, 8)), (621, (40, 45)), (307, (41, 46)), (882, (40, 45)), (472, (88, 93)), (184, (-1, 4)), (613, (-1, 4)), (1606, (6, 9)), (945, (48, 52)), (679, (11, 14)), (1426, (20, 27)), (1646, (-1, 4)), (213, (-1, 4)), (1134, (58, 61)), (1462, (30, 37)), (664, (45, 49)), (1688, (-1, 4)), (70, (-1, 4)), (341, (58, 61)), (548, (35, 38)), (256, (25, 30)), (539, (6, 9)), (517, (27, 37)), (1465, (31, 34)), (1527, (19, 25)), (1364, (-1, 4)), (1512, (6, 9)), (1701, (19, 23)), (1429, (22, 29)), (621, (115, 119)), (30, (28, 31)), (1446, (-1, 4)), (1134, (20, 28)), (411, (17, 21)), (689, (63, 66)), (199, (10, 13)), (1555, (-1, 4)), (1052, (6, 12)), (147, (6, 10)), (668, (6, 8)), (190, (21, 25)), (542, (80, 83)), (1034, (21, 25)), (1364, (21, 24)), (1596, (6, 9)), (774, (-1, 4)), (420, (-1, 4)), (1421, (37, 40)), (284, (25, 31)), (67, (28, 34)), (220, (-1, 4)), (809, (-1, 4)), (539, (23, 26)), (1097, (43, 48)), (459, (6, 10)), (1426, (35, 40)), (628, (20, 23)), (1710, (-1, 4)), (76, (-1, 4)), (1609, (42, 47)), (1655, (-1, 1)), (241, (44, 47)), (1567, (6, 9)), (1710, (18, 24)), (843, (14, 20)), (1522, (6, 10)), (640, (6, 9)), (583, (77, 82)), (1359, (17, 22)), (825, (6, 8)), (731, (-1, 4)), (1486, (53, 59)), (536, (-1, 4)), (976, (-1, 4)), (128, (6, 10)), (1000, (6, 11)), (945, (-1, 4)), (514, (-1, 4)), (551, (45, 49)), (1011, (-1, 4)), (783, (36, 43)), (187, (-1, 4)), (33, (28, 34)), (913, (14, 17)), (499, (6, 9)), (583, (6, 8)), (830, (6, 8)), (1446, (13, 17)), (270, (6, 13)), (1483, (41, 46)), (1025, (-1, 4)), (489, (6, 9)), (357, (49, 53)), (163, (21, 24)), (1725, (19, 22)), (1049, (14, 17)), (1670, (-1, 4)), (1591, (27, 34)), (668, (132, 136)), (64, (22, 25)), (472, (47, 49)), (472, (-1, 4)), (1067, (56, 59)), (1426, (46, 53)), (383, (23, 28)), (1354, (36, 41)), (1157, (17, 21)), (267, (23, 31)), (1640, (24, 27)), (472, (17, 20)), (618, (17, 25)), (1491, (-1, 4)), (882, (58, 62)), (337, (-1, 4)), (556, (31, 37)), (158, (-1, 4)), (1591, (-1, 4)), (1200, (61, 65)), (928, (15, 18)), (1716, (22, 28)), (1698, (6, 12)), (1614, (6, 9)), (608, (-1, 4)), (1122, (6, 10)), (749, (24, 29)), (1225, (34, 38)), (1191, (-1, 4)), (1591, (13, 18)), (237, (25, 31)), (1307, (47, 54)), (134, (18, 21)), (1486, (32, 36)), (598, (43, 48)), (1576, (29, 36)), (118, (13, 18)), (613, (22, 26)), (64, (-1, 4)), (1588, (6, 10)), (1500, (31, 36)), (53, (43, 46)), (1630, (16, 21)), (1465, (23, 30)), (1282, (6, 8)), (530, (30, 34)), (731, (82, 86)), (699, (32, 37)), (264, (6, 9)), (1354, (46, 51)), (1213, (41, 44)), (548, (28, 34)), (1318, (25, 29)), (500, (47, 52)), (621, (19, 22)), (648, (57, 66)), (668, (63, 67)), (1658, (-1, 4)), (1704, (6, 9)), (1483, (36, 40)), (963, (-1, 4)), (1438, (12, 19)), (1533, (25, 28)), (153, (-1, 4)), (1603, (6, 11)), (757, (21, 25)), (790, (25, 32)), (603, (37, 40)), (908, (26, 31)), (1245, (6, 9)), (809, (10, 17)), (858, (-1, 4)), (368, (91, 98)), (1408, (40, 46)), (1536, (-1, 4)), (833, (-1, 4)), (1330, (-1, 1)), (1166, (20, 25)), (16, (6, 9)), (714, (-1, 4)), (603, (41, 47)), (383, (11, 14)), (689, (-1, 4)), (1282, (-1, 4)), (1713, (13, 19)), (802, (18, 26)), (89, (6, 13)), (1513, (-1, 4)), (852, (26, 31)), (352, (23, 26)), (124, (17, 21)), (900, (42, 46)), (1074, (122, 127)), (144, (6, 11)), (1213, (53, 56)), (472, (84, 87)), (994, (-1, 4)), (542, (35, 41)), (1579, (-1, 4)), (1127, (-1, 3)), (1640, (-1, 4)), (790, (-1, 4)), (1342, (32, 39)), (390, (22, 26)), (1342, (28, 31)), (48, (32, 36)), (61, (25, 29)), (390, (-1, 4)), (124, (11, 16)), (16, (-1, 4)), (1541, (10, 15)), (699, (47, 50)), (1334, (25, 30)), (1664, (-1, 4)), (928, (10, 14)), (1037, (18, 22)), (1049, (-1, 4)), (118, (6, 8)), (696, (-1, 4)), (1327, (6, 10)), (85, (6, 14)), (433, (64, 68)), (932, (-1, 4)), (1231, (177, 181)), (1541, (6, 9)), (1640, (16, 19)), (1315, (-1, 4)), (1550, (-1, 4)), (551, (26, 31)), (648, (125, 129)), (1210, (-1, 4)), (731, (73, 77)), (1323, (37, 40)), (36, (15, 20)), (483, (26, 29)), (301, (6, 8)), (1390, (18, 21)), (704, (24, 27)), (447, (-1, 4)), (997, (28, 32)), (935, (16, 21)), (1113, (-1, 4)), (288, (-1, 4)), (70, (21, 25)), (1231, (-1, 4)), (1044, (41, 44)), (994, (11, 16)), (53, (37, 42)), (583, (42, 47)), (1688, (6, 9)), (1695, (11, 15)), (783, (45, 48)), (199, (6, 9)), (1740, (6, 9)), (917, (36, 40)), (1564, (-1, 4)), (326, (6, 10)), (1213, (64, 68)), (738, (149, 152)), (1530, (6, 9)), (997, (-1, 4)), (1576, (37, 40)), (802, (-1, 4)), (150, (6, 10)), (1572, (6, 9)), (224, (82, 86)), (27, (27, 30)), (1354, (28, 31)), (1195, (26, 31)), (163, (-1, 4)), (1268, (-1, 4)), (726, (47, 50)), (224, (-1, 4)), (590, (21, 26)), (562, (24, 29)), (633, (92, 95)), (778, (91, 94)), (256, (54, 57)), (58, (-1, 4)), (648, (-1, 4)), (1147, (44, 49)), (33, (-1, 4)), (517, (14, 18)), (1728, (-1, 4)), (1022, (6, 11)), (738, (48, 52)), (1231, (22, 27)), (738, (-1, 4)), (525, (49, 54)), (500, (24, 29)), (1472, (16, 20)), (1231, (122, 126)), (483, (30, 33)), (270, (19, 26)), (493, (20, 23)), (462, (26, 31)), (1184, (-1, 4)), (1000, (42, 45)), (1698, (13, 18)), (48, (43, 46)), (134, (-1, 4)), (1486, (64, 67)), (443, (15, 24)), (1393, (-1, 4)), (648, (132, 136)), (1213, (-1, 4)), (1092, (17, 22)), (1253, (6, 9)), (213, (13, 16)), (1622, (16, 21)), (1603, (-1, 4)), (1290, (25, 30)), (1067, (49, 55)), (1576, (6, 11)), (131, (21, 24)), (1110, (17, 24)), (1698, (-1, 4)), (1261, (-1, 4)), (686, (14, 17)), (1059, (-1, 4)), (270, (-1, 4)), (590, (41, 50)), (1031, (15, 19)), (99, (6, 11)), (1536, (6, 10)), (88, (6, 9)), (252, (33, 37)), (105, (-1, 4)), (1559, (-1, 4)), (1555, (22, 27)), (245, (63, 67)), (496, (6, 8)), (433, (72, 75)), (749, (-1, 4)), (985, (-1, 4)), (1315, (25, 28)), (1722, (6, 9)), (726, (74, 78)), (1564, (6, 9)), (1728, (23, 29)), (1318, (6, 9)), (1547, (13, 16)), (951, (25, 29)), (176, (-1, 4)), (1195, (-1, 4)), (252, (-1, 4)), (838, (6, 8)), (1256, (-1, 4)), (99, (24, 36)), (452, (37, 43)), (820, (-1, 4)), (1652, (6, 9)), (276, (22, 27)), (1037, (34, 37)), (621, (95, 103)), (932, (16, 19)), (1147, (81, 85)), (1143, (6, 9)), (1334, (146, 153)), (1486, (17, 22)), (1086, (11, 15)), (1500, (-1, 4)), (1296, (19, 25)), (533, (38, 44)), (539, (17, 22)), (1588, (11, 14)), (346, (20, 23)), (1385, (54, 57)), (833, (47, 52)), (686, (18, 21)), (799, (6, 9)), (1074, (111, 116)), (738, (32, 35)), (814, (-1, 4)), (341, (-1, 4)), (598, (-1, 4)), (45, (20, 23)), (917, (-1, 4)), (1248, (60, 64)), (542, (76, 79)), (196, (17, 20)), (1649, (6, 9)), (1500, (20, 23)), (1097, (53, 56)), (1483, (11, 14)), (1014, (6, 10)), (349, (6, 10)), (1413, (20, 23)), (166, (42, 47)), (1416, (-1, 4)), (843, (-1, 4)), (838, (33, 38)), (1399, (6, 11)), (426, (-1, 4)), (536, (39, 43)), (1385, (6, 10)), (472, (77, 83)), (1494, (6, 10)), (390, (17, 21)), (1585, (6, 12)), (1301, (-1, 4)), (668, (85, 88)), (1074, (52, 55)), (202, (20, 24)), (1044, (12, 15)), (1533, (6, 10)), (1547, (-1, 4)), (414, (-1, 4)), (621, (63, 72)), (1222, (21, 28)), (618, (-1, 4)), (852, (58, 61)), (648, (38, 43)), (1178, (6, 10)), (817, (27, 31)), (731, (37, 40)), (1334, (6, 8)), (1188, (6, 9)), (1438, (-1, 4)), (1003, (-1, 4)), (1478, (36, 42)), (830, (35, 43)), (1231, (224, 230))])
[((16, (-1, 4)), '*MOT:\they [!] now we can get ready to eat .\n'), ((16, (6, 9)), '*MOT:\they [!] now we can get ready to eat .\n'), ((21, (19, 24)), '*MOT:\tcome on <you wanna say your grace> [>] ?\n'), ((21, (34, 40)), '*MOT:\tcome on <you wanna say your grace> [>] ?\n'), ((21, (41, 44)), '*MOT:\tcome on <you wanna say your grace> [>] ?\n'), ((26, (33, 36)), '*COU:\t<xxx [=! gobbling sounds]> [<] .\n'), ((27, (27, 30)), '*MOT:\t<xxx say your grace> [>] .\n'), ((30, (15, 21)), "*COU:\t<I don't ha(ve) none> [<] !\n"), ((30, (28, 31)), "*COU:\t<I don't ha(ve) none> [<] !\n"), ((33, (-1, 4)), "*MOT:\tyou'll have some in a minute .\n"), ((33, (6, 12)), "*MOT:\tyou'll have some in a minute .\n"), ((33, (28, 34)), "*MOT:\tyou'll have some in a minute .\n"), ((36, (-1, 4)), '*MOT:\tsay your grace .\n'), ((36, (15, 20)), '*MOT:\tsay your grace .\n'), ((42, (20, 23)), '*MOT:\t<God is good> [>] .\n'), ((45, (20, 23)), '*CHI:\t<God is good> [<] .\n'), ((48, (6, 10)), '*MOT:\t<and we thank him for our food amen> [>] .\n'), ((48, (32, 36)), '*MOT:\t<and we thank him for our food amen> [>] .\n'), ((48, (37, 42)), '*MOT:\t<and we thank him for our food amen> [>] .\n'), ((48, (43, 46)), '*MOT:\t<and we thank him for our food amen> [>] .\n'), ((53, (6, 10)), '*CHI:\t<and we thank him for our food amen> [<] .\n'), ((53, (32, 36)), '*CHI:\t<and we thank him for our food amen> [<] .\n'), ((53, (37, 42)), '*CHI:\t<and we thank him for our food amen> [<] .\n'), ((53, (43, 46)), '*CHI:\t<and we thank him for our food amen> [<] .\n'), ((58, (-1, 4)), '*MOT:\tyou too .\n'), ((61, (6, 10)), '*MOT:\tokay [!] Gwen <can see> [//] help <you all> [>] +/.\n'), ((61, (25, 29)), '*MOT:\tokay [!] Gwen <can see> [//] help <you all> [>] +/.\n'), ((61, (35, 39)), '*MOT:\tokay [!] Gwen <can see> [//] help <you all> [>] +/.\n'), ((64, (-1, 4)), '*COU:\t<I have got my> [<] +...\n'), ((64, (22, 25)), '*COU:\t<I have got my> [<] +...\n'), ((67, (28, 34)), '*MOT:\tget you going on <the table> [>] .\n'), ((67, (35, 38)), '*MOT:\tget you going on <the table> [>] .\n'), ((70, (-1, 4)), '*AUN:\t<you want> [<] corn ?\n'), ((70, (11, 16)), '*AUN:\t<you want> [<] corn ?\n'), ((70, (21, 25)), '*AUN:\t<you want> [<] corn ?\n'), ((73, (6, 10)), '*COU:\tyeah .\n'), ((76, (-1, 4)), '*COU:\tI want that one .\n'), ((82, (6, 11)), '*CHI:\tthank you for our (.) &-um +...\n'), ((85, (-1, 4)), '*MOT:\tpotatoes there .\n'), ((85, (6, 14)), '*MOT:\tpotatoes there .\n'), ((88, (6, 9)), '*CHI:\txxx .\n'), ((89, (-1, 4)), '*MOT:\tanybody want anything to drink ?\n'), ((89, (6, 13)), '*MOT:\tanybody want anything to drink ?\n'), ((96, (-1, 4)), '*AUN:\tdo you April ?\n'), ((99, (6, 11)), '*COU:\tthank [//] I like (.) potatoes .\n'), ((99, (24, 36)), '*COU:\tthank [//] I like (.) potatoes .\n'), ((102, (10, 15)), '*CHI:\txxx thank you for Mommy .\n'), ((105, (-1, 4)), '*MOT:\t<you want something to drink> [>] ?\n'), ((109, (6, 12)), '*CHI:\t<thank you for xxx> [<] .\n'), ((112, (6, 11)), '*CHI:\tthank you for Granski .\n'), ((115, (6, 11)), '*CHI:\tthank you for (.) God +...\n'), ((118, (6, 8)), '*CHI:\t+, and thank you for the kids .\n'), ((118, (13, 18)), '*CHI:\t+, and thank you for the kids .\n'), ((118, (31, 35)), '*CHI:\t+, and thank you for the kids .\n'), ((121, (13, 17)), '*CHI:\t<thank you> [>] .\n'), ((121, (18, 21)), '*CHI:\t<thank you> [>] .\n'), ((124, (11, 16)), '*MOT:\t<and thank you> [<] for the kids ?\n'), ((124, (17, 21)), '*MOT:\t<and thank you> [<] for the kids ?\n'), ((124, (22, 25)), '*MOT:\t<and thank you> [<] for the kids ?\n'), ((124, (34, 38)), '*MOT:\t<and thank you> [<] for the kids ?\n'), ((128, (6, 10)), '*CHI:\tyeah .\n'), ((131, (-1, 4)), '*CHI:\t<at my school> [>] .\n'), ((131, (13, 20)), '*CHI:\t<at my school> [>] .\n'), ((131, (21, 24)), '*CHI:\t<at my school> [>] .\n'), ((134, (-1, 4)), '*MOT:\t<what kids> [<] ?\n'), ((134, (18, 21)), '*MOT:\t<what kids> [<] ?\n'), ((141, (6, 11)), '*CHI:\tthank you for my teacher .\n'), ((141, (23, 30)), '*CHI:\tthank you for my teacher .\n'), ((144, (6, 11)), '*CHI:\tthank you for my food (.) amen .\n'), ((144, (23, 27)), '*CHI:\tthank you for my food (.) amen .\n'), ((144, (32, 36)), '*CHI:\tthank you for my food (.) amen .\n'), ((147, (6, 10)), '*MOT:\tamen [>] .\n'), ((150, (6, 10)), '*AUN:\tamen [<] .\n'), ((153, (-1, 4)), '*MOT:\twhat would you like to drink April ?\n'), ((158, (-1, 4)), '*MOT:\twhat would you like to have_to drink ?\n'), ((163, (-1, 4)), '*COU:\tI want koolaid [>] .\n'), ((163, (21, 24)), '*COU:\tI want koolaid [>] .\n'), ((166, (42, 47)), '*MOT:\twhat [<] would you like to have for drink ?\n'), ((172, (6, 10)), '*CHI:\tmilk [?] .\n'), ((172, (11, 14)), '*CHI:\tmilk [?] .\n'), ((176, (-1, 4)), '*MOT:\t<you want some> [//] whatchu [: what do you] want ?\n'), ((180, (-1, 4)), "*MOT:\twhat's that ?\n"), ((180, (6, 12)), "*MOT:\twhat's that ?\n"), ((184, (-1, 4)), '*CHI:\tkoolaid [>] .\n'), ((187, (-1, 4)), '*COU:\tkoolaid [<] .\n'), ((190, (-1, 4)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (21, 25)), '*MOT:\twe got koolaid milk and water .\n'), ((190, (30, 35)), '*MOT:\twe got koolaid milk and water .\n'), ((196, (-1, 4)), '*MOT:\tand we got air .\n'), ((196, (17, 20)), '*MOT:\tand we got air .\n'), ((199, (6, 9)), '*CHI:\tmhm [>] .\n'), ((199, (10, 13)), '*CHI:\tmhm [>] .\n'), ((202, (-1, 4)), '*MOT:\t<anybody want air> [<] ?\n'), ((202, (20, 24)), '*MOT:\t<anybody want air> [<] ?\n'), ((202, (25, 28)), '*MOT:\t<anybody want air> [<] ?\n'), ((209, (-1, 4)), '*MOT:\tyou want air ?\n'), ((209, (15, 18)), '*MOT:\tyou want air ?\n'), ((213, (-1, 4)), '*CHI:\tI want xxx .\n'), ((213, (13, 16)), '*CHI:\tI want xxx .\n'), ((220, (-1, 4)), '*MOT:\t<tell me what you did> [>] +/.\n'), ((224, (-1, 4)), '*MOT:\ttell me what happened at your school today whatchu [: what did you] and the kids do at school today ?\n'), ((224, (36, 42)), '*MOT:\ttell me what happened at your school today whatchu [: what did you] and the kids do at school today ?\n'), ((224, (43, 48)), '*MOT:\ttell me what happened at your school today whatchu [: what did you] and the kids do at school today ?\n'), ((224, (69, 73)), '*MOT:\ttell me what happened at your school today whatchu [: what did you] and the kids do at school today ?\n'), ((224, (82, 86)), '*MOT:\ttell me what happened at your school today whatchu [: what did you] and the kids do at school today ?\n'), ((232, (-1, 4)), '*MOT:\tname some of the kids go to your school .\n'), ((232, (23, 27)), '*MOT:\tname some of the kids go to your school .\n'), ((232, (39, 45)), '*MOT:\tname some of the kids go to your school .\n'), ((237, (25, 31)), '*AUN:\twhat did you do at school today ?\n'), ((237, (32, 37)), '*AUN:\twhat did you do at school today ?\n'), ((241, (44, 47)), '*COU:\t<Auntie Mary will tell you something> [>] .\n'), ((245, (19, 22)), "*AUN:\t<what's your bus driver's> [//] what's your van driver's name [<] ?\n"), ((245, (50, 53)), "*AUN:\t<what's your bus driver's> [//] what's your van driver's name [<] ?\n"), ((245, (63, 67)), "*AUN:\t<what's your bus driver's> [//] what's your van driver's name [<] ?\n"), ((252, (-1, 4)), "*AUN:\tyou know your van driver's name ?\n"), ((252, (20, 23)), "*AUN:\tyou know your van driver's name ?\n"), ((252, (33, 37)), "*AUN:\tyou know your van driver's name ?\n"), ((256, (-1, 4)), "*AUN:\twhat's some of the kids' name that ride on your van ?\n"), ((256, (25, 30)), "*AUN:\twhat's some of the kids' name that ride on your van ?\n"), ((256, (31, 35)), "*AUN:\twhat's some of the kids' name that ride on your van ?\n"), ((256, (54, 57)), "*AUN:\twhat's some of the kids' name that ride on your van ?\n"), ((264, (6, 9)), '*MOT:\teat !\n'), ((267, (-1, 4)), '*AUN:\teat some of your potatoes .\n'), ((267, (23, 31)), '*AUN:\teat some of your potatoes .\n'), ((270, (-1, 4)), '*MOT:\tanybody want chicken ?\n'), ((270, (6, 13)), '*MOT:\tanybody want chicken ?\n'), ((270, (19, 26)), '*MOT:\tanybody want chicken ?\n'), ((276, (22, 27)), "*MOT:\tApril you got a mouth why don't you use your mouth and stop it ?\n"), ((276, (32, 37)), "*MOT:\tApril you got a mouth why don't you use your mouth and stop it ?\n"), ((284, (25, 31)), '*AUN:\twhat did you do at school today ?\n'), ((284, (32, 37)), '*AUN:\twhat did you do at school today ?\n'), ((288, (-1, 4)), '*AUN:\thm: ?\n'), ((288, (6, 9)), '*AUN:\thm: ?\n'), ((297, (-1, 4)), '*AUN:\t(.) what did you do at school today ?\n'), ((297, (29, 35)), '*AUN:\t(.) what did you do at school today ?\n'), ((297, (36, 41)), '*AUN:\t(.) what did you do at school today ?\n'), ((301, (6, 8)), '*CHI:\tmm no .\n'), ((304, (9, 14)), "*CHI:\t<I dunno [: don't know]> [>] .\n"), ((304, (18, 23)), "*CHI:\t<I dunno [: don't know]> [>] .\n"), ((304, (31, 34)), "*CHI:\t<I dunno [: don't know]> [>] .\n"), ((307, (-1, 4)), '*AUN:\t<what did you do> [<] tell me some games you played .\n'), ((307, (41, 46)), '*AUN:\t<what did you do> [<] tell me some games you played .\n'), ((313, (67, 73)), '*MOT:\t(..) over at Zayres yesterday Gwen I filled out one of those parers over there so that we can go take a portrait together .\n'), ((326, (6, 10)), "*MOT:\tyeah we go over on thirteenth of August at three o'clock on a Sunday (.) me Erica and April and <Salina> [>] .\n"), ((326, (55, 62)), "*MOT:\tyeah we go over on thirteenth of August at three o'clock on a Sunday (.) me Erica and April and <Salina> [>] .\n"), ((337, (-1, 4)), '*AUN:\tSunday after this one .\n'), ((341, (-1, 4)), '*MOT:\twe gonna go and have us a portrait <taken together> [>] .\n'), ((341, (58, 61)), '*MOT:\twe gonna go and have us a portrait <taken together> [>] .\n'), ((346, (20, 23)), '*AUN:\t<sounds good> [<] .\n'), ((349, (6, 10)), '*COU:\tyeah [>] .\n'), ((349, (11, 14)), '*COU:\tyeah [>] .\n'), ((352, (23, 26)), "*AUN:\t<that's> [<] the one I had dad and I taken on .\n"), ((352, (33, 36)), "*AUN:\t<that's> [<] the one I had dad and I taken on .\n"), ((357, (-1, 4)), "*MOT:\tso we gonna have_to make sure that y'all@d hair has been freshly beautifully done .\n"), ((357, (49, 53)), "*MOT:\tso we gonna have_to make sure that y'all@d hair has been freshly beautifully done .\n"), ((364, (-1, 4)), '*MOT:\t<you want> [>] +/.\n'), ((368, (-1, 4)), "*AUN:\t<you better get it done> [<] too (be)cause I'm leaving and I'm going away again next weekend too .\n"), ((368, (91, 98)), "*AUN:\t<you better get it done> [<] too (be)cause I'm leaving and I'm going away again next weekend too .\n"), ((376, (18, 25)), '*MOT:\tnext is the weekend of the seventh ?\n'), ((383, (11, 14)), "*AUN:\t&-uh huh [<] I'm gonna go that weekend too .\n"), ((383, (23, 28)), "*AUN:\t&-uh huh [<] I'm gonna go that weekend too .\n"), ((383, (37, 44)), "*AUN:\t&-uh huh [<] I'm gonna go that weekend too .\n"), ((390, (-1, 4)), '*CHI:\tthat other kids name is Ricky and Priscilla and Joanna and Tyrone (.) and Ricky (.) and +...\n'), ((390, (17, 21)), '*CHI:\tthat other kids name is Ricky and Priscilla and Joanna and Tyrone (.) and Ricky (.) and +...\n'), ((390, (22, 26)), '*CHI:\tthat other kids name is Ricky and Priscilla and Joanna and Tyrone (.) and Ricky (.) and +...\n'), ((397, (-1, 4)), '*AUN:\tand what ?\n'), ((400, (-1, 4)), '*CHI:\tand April .\n'), ((403, (-1, 4)), "*AUN:\tand what's the little girl name on you van's name April ?\n"), ((403, (33, 37)), "*AUN:\tand what's the little girl name on you van's name April ?\n"), ((408, (18, 24)), '*AUN:\tyour little friend .\n'), ((411, (-1, 4)), "*AUN:\twhat's her name ?\n"), ((411, (17, 21)), "*AUN:\twhat's her name ?\n"), ((414, (-1, 4)), '*CHI:\tVeronica [?] .\n'), ((417, (-1, 4)), "*AUN:\twhat's her name ?\n"), ((417, (17, 21)), "*AUN:\twhat's her name ?\n"), ((420, (-1, 4)), '*CHI:\tVeronica [?] .\n'), ((423, (-1, 4)), "*AUN:\twhat's her name ?\n"), ((423, (17, 21)), "*AUN:\twhat's her name ?\n"), ((426, (-1, 4)), '*AUN:\tMonica ?\n'), ((429, (17, 20)), '*CHI:\t<Veronica> [>] !\n'), ((433, (29, 32)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((433, (40, 50)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((433, (64, 68)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((433, (72, 75)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((433, (103, 112)), '*MOT:\t<and maybe if you> [<] sit at the table talk and eat your food or [/] and probably can have some ice cream afterwards .\n'), ((443, (-1, 4)), '*MOT:\twho want ice cream ?\n'), ((443, (15, 24)), '*MOT:\twho want ice cream ?\n'), ((447, (-1, 4)), '*CHI:\tnot me .\n'), ((452, (-1, 4)), "*AUN:\tI'm a have_to do you hair [//] girls' hair Thursday [!] (.) (be)cause I'm leaving Friday .\n"), ((452, (27, 31)), "*AUN:\tI'm a have_to do you hair [//] girls' hair Thursday [!] (.) (be)cause I'm leaving Friday .\n"), ((452, (37, 43)), "*AUN:\tI'm a have_to do you hair [//] girls' hair Thursday [!] (.) (be)cause I'm leaving Friday .\n"), ((459, (-1, 4)), '*AUN:\tokay ?\n'), ((459, (6, 10)), '*AUN:\tokay ?\n'), ((462, (-1, 4)), '*AUN:\t+, a nice beautiful style .\n'), ((462, (26, 31)), '*AUN:\t+, a nice beautiful style .\n'), ((466, (-1, 4)), '*MOT:\tso you speaking of the tenth .\n'), ((466, (29, 34)), '*MOT:\tso you speaking of the tenth .\n'), ((469, (6, 9)), '*AUN:\tmhm .\n'), ((472, (-1, 4)), '*MOT:\t<(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .\n'), ((472, (17, 20)), '*MOT:\t<(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .\n'), ((472, (47, 49)), '*MOT:\t<(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .\n'), ((472, (77, 83)), '*MOT:\t<(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .\n'), ((472, (84, 87)), '*MOT:\t<(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .\n'), ((472, (88, 93)), '*MOT:\t<(be)cause me> [/] <(be)cause me and her go to> [//] we go to her &-um school day thing that Friday the eleventh .\n'), ((477, (6, 10)), '*AUN:\tyeah .\n'), ((483, (6, 12)), "*AUN:\tthat's next weekend huh [>] ?\n"), ((483, (18, 25)), "*AUN:\tthat's next weekend huh [>] ?\n"), ((483, (26, 29)), "*AUN:\tthat's next weekend huh [>] ?\n"), ((483, (30, 33)), "*AUN:\tthat's next weekend huh [>] ?\n"), ((486, (6, 10)), "*MOT:\tyeah [<] that's next Friday uhhuh .\n"), ((486, (15, 21)), "*MOT:\tyeah [<] that's next Friday uhhuh .\n"), ((489, (6, 9)), '*AUN:\tmhm .\n'), ((493, (20, 23)), '*AUN:\thow you doing xxx ?\n'), ((496, (6, 8)), '*COU:\tmm .\n'), ((499, (6, 9)), '*AUN:\txxx .\n'), ((500, (-1, 4)), '*AUN:\tthis is delicious honey got all up on my dress .\n'), ((500, (24, 29)), '*AUN:\tthis is delicious honey got all up on my dress .\n'), ((500, (47, 52)), '*AUN:\tthis is delicious honey got all up on my dress .\n'), ((505, (-1, 4)), '*MOT:\t&=laughing .\n'), ((507, (37, 41)), "*MOT:\twell I'm trying to get back in form again so &-um (.) on my diet today .\n"), ((507, (56, 59)), "*MOT:\twell I'm trying to get back in form again so &-um (.) on my diet today .\n"), ((507, (71, 76)), "*MOT:\twell I'm trying to get back in form again so &-um (.) on my diet today .\n"), ((514, (-1, 4)), '*AUN:\tI been on mine all week !\n'), ((514, (16, 20)), '*AUN:\tI been on mine all week !\n'), ((514, (25, 29)), '*AUN:\tI been on mine all week !\n'), ((517, (14, 18)), "*AUN:\t<that's why> [>] I'm hungry [!] today .\n"), ((517, (27, 37)), "*AUN:\t<that's why> [>] I'm hungry [!] today .\n"), ((517, (38, 43)), "*AUN:\t<that's why> [>] I'm hungry [!] today .\n"), ((525, (-1, 4)), '*MOT:\twhen I go to the store tomorrow and get my sodas .\n'), ((525, (23, 28)), '*MOT:\twhen I go to the store tomorrow and get my sodas .\n'), ((525, (49, 54)), '*MOT:\twhen I go to the store tomorrow and get my sodas .\n'), ((530, (30, 34)), "*MOT:\tI'm buyin(g) everything diet .\n"), ((533, (38, 44)), '*MOT:\tdiet Sprite diet Slice (.) diet ginger+ale .\n'), ((536, (-1, 4)), '*MOT:\tand &-um (.) I have my &-uh slim fast .\n'), ((536, (15, 18)), '*MOT:\tand &-um (.) I have my &-uh slim fast .\n'), ((536, (39, 43)), '*MOT:\tand &-um (.) I have my &-uh slim fast .\n'), ((539, (6, 9)), '*MOT:\teat it for lunch (.) or for dinner .\n'), ((539, (17, 22)), '*MOT:\teat it for lunch (.) or for dinner .\n'), ((539, (23, 26)), '*MOT:\teat it for lunch (.) or for dinner .\n'), ((539, (34, 40)), '*MOT:\teat it for lunch (.) or for dinner .\n'), ((542, (-1, 4)), '*MOT:\tand &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .\n'), ((542, (15, 18)), '*MOT:\tand &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .\n'), ((542, (35, 41)), '*MOT:\tand &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .\n'), ((542, (50, 55)), '*MOT:\tand &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .\n'), ((542, (76, 79)), '*MOT:\tand &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .\n'), ((542, (80, 83)), '*MOT:\tand &-uh (.) I knew this (.) <stuff on this table (.) was gonna tempt me> [>] .\n'), ((548, (28, 34)), '*AUN:\t<I been living on (.) salad> [<] .\n'), ((548, (35, 38)), '*AUN:\t<I been living on (.) salad> [<] .\n'), ((551, (26, 31)), "*AUN:\tI've been living on salad for the last week .\n"), ((551, (45, 49)), "*AUN:\tI've been living on salad for the last week .\n"), ((556, (-1, 4)), "*AUN:\tand I'll tell you (.) my body's getting weak .\n"), ((556, (31, 37)), "*AUN:\tand I'll tell you (.) my body's getting weak .\n"), ((562, (24, 29)), "*MOT:\twell [/] well I'm gonna try it instead <is xxx> [//] is try to try to xxx to eat just about the foods that I'd like to eat .\n"), ((562, (102, 107)), "*MOT:\twell [/] well I'm gonna try it instead <is xxx> [//] is try to try to xxx to eat just about the foods that I'd like to eat .\n"), ((571, (6, 8)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((571, (49, 53)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((571, (69, 73)), "*MOT:\t+^ but I'm just gonna try to cut out (.) a meal and drink diet soda .\n"), ((578, (34, 37)), "*MOT:\t+^ (be)cause I really don't eat all that much anyway .\n"), ((583, (6, 8)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((583, (26, 30)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((583, (42, 47)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((583, (52, 57)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((583, (77, 82)), "*MOT:\t+^ I think it's the soda so (.) I'm gonna (.) drink nothin(g) but diet sodas and +...\n"), ((590, (-1, 4)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (9, 14)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (21, 26)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (41, 50)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((590, (91, 96)), '*MOT:\tso today I had lunch and took me a spice ham sandwich to eat lunch and then I had an apple .\n'), ((598, (-1, 4)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((598, (23, 26)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((598, (43, 48)), '*MOT:\tand I had a &-um (.) diet Sprite for lunch .\n'), ((603, (-1, 4)), '*MOT:\tand this right here be my &-uh (.) dinner right here .\n'), ((603, (15, 20)), '*MOT:\tand this right here be my &-uh (.) dinner right here .\n'), ((603, (37, 40)), '*MOT:\tand this right here be my &-uh (.) dinner right here .\n'), ((603, (41, 47)), '*MOT:\tand this right here be my &-uh (.) dinner right here .\n'), ((608, (-1, 4)), "*MOT:\tand tomorrow I'll drink this for &-uh (.) lunch .\n"), ((608, (24, 29)), "*MOT:\tand tomorrow I'll drink this for &-uh (.) lunch .\n"), ((608, (48, 53)), "*MOT:\tand tomorrow I'll drink this for &-uh (.) lunch .\n"), ((613, (-1, 4)), '*MOT:\tand when I come home and cook tomorrow +...\n'), ((613, (22, 26)), '*MOT:\tand when I come home and cook tomorrow +...\n'), ((613, (31, 35)), '*MOT:\tand when I come home and cook tomorrow +...\n'), ((618, (-1, 4)), '*MOT:\tI got some broccoli in there .\n'), ((618, (17, 25)), '*MOT:\tI got some broccoli in there .\n'), ((621, (-1, 4)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (19, 22)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (35, 39)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (40, 45)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (63, 72)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (87, 90)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (95, 103)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((621, (115, 119)), '*MOT:\tand &-uh (.) xxx and put (.) pork chops to make that (.) baby pork chops and (.) fix the broccoli and I have food tomorrow .\n'), ((628, (-1, 4)), "*MOT:\tbut I'm gonna try to see if I can (.) do it that way .\n"), ((628, (20, 23)), "*MOT:\tbut I'm gonna try to see if I can (.) do it that way .\n"), ((628, (55, 58)), "*MOT:\tbut I'm gonna try to see if I can (.) do it that way .\n"), ((633, (-1, 4)), "*MOT:\tand tomorrow when I come home (.) I'm gonna come over there see if I can borrow xxx a mat .\n"), ((633, (31, 35)), "*MOT:\tand tomorrow when I come home (.) I'm gonna come over there see if I can borrow xxx a mat .\n"), ((633, (92, 95)), "*MOT:\tand tomorrow when I come home (.) I'm gonna come over there see if I can borrow xxx a mat .\n"), ((640, (6, 9)), '*AUN:\tmhm .\n'), ((644, (6, 8)), "*MOT:\t+^ and &-um (.) I'm gonna start some exercise .\n"), ((648, (-1, 4)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((648, (12, 15)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((648, (38, 43)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((648, (57, 66)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((648, (105, 110)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((648, (125, 129)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((648, (132, 136)), "*MOT:\tI'm a try to get back to in the habit like I had a few years ago while you was used to do it in my house four and five days a week steadily .\n"), ((661, (6, 10)), '*MOT:\tyear in and year out .\n'), ((664, (6, 9)), '*MOT:\t<it was xxx> [//] it was just a way of life .\n'), ((664, (38, 41)), '*MOT:\t<it was xxx> [//] it was just a way of life .\n'), ((664, (45, 49)), '*MOT:\t<it was xxx> [//] it was just a way of life .\n'), ((668, (6, 8)), '*MOT:\t+^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .\n'), ((668, (46, 51)), '*MOT:\t+^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .\n'), ((668, (63, 67)), '*MOT:\t+^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .\n'), ((668, (85, 88)), '*MOT:\t+^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .\n'), ((668, (125, 129)), '*MOT:\t+^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .\n'), ((668, (132, 136)), '*MOT:\t+^ but I mean but then I got out of the habit when I got work and got lazy and (.) used to do it at least four or five days a week every day xxx .\n'), ((679, (11, 14)), '*AUN:\t<and see that was good cause it kept> [>] it kept it down good .\n'), ((679, (29, 34)), '*AUN:\t<and see that was good cause it kept> [>] it kept it down good .\n'), ((686, (-1, 4)), '*MOT:\t<<never on> [/] (.) never on the weekends> [<] .\n'), ((686, (14, 17)), '*MOT:\t<<never on> [/] (.) never on the weekends> [<] .\n'), ((686, (18, 21)), '*MOT:\t<<never on> [/] (.) never on the weekends> [<] .\n'), ((686, (49, 52)), '*MOT:\t<<never on> [/] (.) never on the weekends> [<] .\n'), ((689, (-1, 4)), '*MOT:\tand then I used to have Elka [?] come over here and &-uh (.) do it with me .\n'), ((689, (63, 66)), '*MOT:\tand then I used to have Elka [?] come over here and &-uh (.) do it with me .\n'), ((696, (-1, 4)), '*MOT:\tbut &-uh (.) she never did come .\n'), ((696, (15, 18)), '*MOT:\tbut &-uh (.) she never did come .\n'), ((699, (6, 8)), '*MOT:\t+^ but I was just in that habit of every day .\n'), ((699, (32, 37)), '*MOT:\t+^ but I was just in that habit of every day .\n'), ((699, (47, 50)), '*MOT:\t+^ but I was just in that habit of every day .\n'), ((704, (-1, 4)), '*MOT:\tand ever since my mat that I used to do it on .\n'), ((704, (24, 27)), '*MOT:\tand ever since my mat that I used to do it on .\n'), ((709, (18, 21)), '*MOT:\tmy hospital egg crate thing (.) got tore [?] up .\n'), ((709, (28, 33)), '*MOT:\tmy hospital egg crate thing (.) got tore [?] up .\n'), ((714, (-1, 4)), "*MOT:\tand I tried on the floor a couple of time and my backbone'd be diggin(g) into the floor .\n"), ((714, (25, 30)), "*MOT:\tand I tried on the floor a couple of time and my backbone'd be diggin(g) into the floor .\n"), ((714, (33, 39)), "*MOT:\tand I tried on the floor a couple of time and my backbone'd be diggin(g) into the floor .\n"), ((714, (43, 47)), "*MOT:\tand I tried on the floor a couple of time and my backbone'd be diggin(g) into the floor .\n"), ((722, (24, 27)), "*AUN:\t<that's horrible> [>] .\n"), ((726, (6, 10)), '*MOT:\t<and I wish> [<] [//] and I tried on the bed but (.) the bed is too soft .\n'), ((726, (47, 50)), '*MOT:\t<and I wish> [<] [//] and I tried on the bed but (.) the bed is too soft .\n'), ((726, (74, 78)), '*MOT:\t<and I wish> [<] [//] and I tried on the bed but (.) the bed is too soft .\n'), ((731, (-1, 4)), "*MOT:\t+^ you just can't do it on the bed like you could on something (.) hard and firm .\n"), ((731, (37, 40)), "*MOT:\t+^ you just can't do it on the bed like you could on something (.) hard and firm .\n"), ((731, (73, 77)), "*MOT:\t+^ you just can't do it on the bed like you could on something (.) hard and firm .\n"), ((731, (82, 86)), "*MOT:\t+^ you just can't do it on the bed like you could on something (.) hard and firm .\n"), ((738, (-1, 4)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (26, 31)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (32, 35)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (48, 52)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (113, 116)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (127, 133)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (137, 142)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((738, (149, 152)), "*MOT:\tso tomorrow (.) I'm gonna try to get into form so I can see by my birthday October if I can be lost <these [/] (.) these pounds (a)round here> [>] .\n"), ((749, (-1, 4)), '*AUN:\t<you make my face kinda xxx> [<] the first .\n'), ((749, (6, 10)), '*AUN:\t<you make my face kinda xxx> [<] the first .\n'), ((749, (19, 23)), '*AUN:\t<you make my face kinda xxx> [<] the first .\n'), ((749, (24, 29)), '*AUN:\t<you make my face kinda xxx> [<] the first .\n'), ((753, (-1, 4)), '*AUN:\tI start losin(g) my xxx .\n'), ((753, (26, 29)), '*AUN:\tI start losin(g) my xxx .\n'), ((757, (6, 9)), "*AUN:\txxx I lose xxx it's just a little came off around here .\n"), ((757, (21, 25)), "*AUN:\txxx I lose xxx it's just a little came off around here .\n"), ((763, (-1, 4)), '*MOT:\tjust a little there .\n'), ((766, (64, 67)), '*MOT:\twell they said just earlier where it need <to be firm up> [>] .\n'), ((771, (28, 35)), '*COU:\t<can I have> [<] more chicken ?\n'), ((774, (-1, 4)), "*MOT:\twhen it firm it don't necessarily +/.\n"), ((778, (-1, 4)), "*AUN:\t(be)cause I really <haven't even been> [//] have a appetite that much <for last xxx> [>] .\n"), ((778, (91, 94)), "*AUN:\t(be)cause I really <haven't even been> [//] have a appetite that much <for last xxx> [>] .\n"), ((783, (36, 43)), '*COU:\t<grandma can I have some more chicken> [<] ?\n'), ((783, (45, 48)), '*COU:\t<grandma can I have some more chicken> [<] ?\n'), ((787, (6, 9)), '*MOT:\tmhm [<] .\n'), ((787, (10, 13)), '*MOT:\tmhm [<] .\n'), ((790, (-1, 4)), '*COU:\tcan have some more chicken ?\n'), ((790, (25, 32)), '*COU:\tcan have some more chicken ?\n'), ((793, (17, 25)), '*MOT:\twhat about potatoes ?\n'), ((796, (6, 10)), '*COU:\tyeah .\n'), ((799, (6, 9)), '*AUN:\teat xxx xxx too baby .\n'), ((799, (22, 26)), '*AUN:\teat xxx xxx too baby .\n'), ((802, (-1, 4)), '*AUN:\tshe ate her potatoes .\n'), ((802, (18, 26)), '*AUN:\tshe ate her potatoes .\n'), ((805, (-1, 4)), '*MOT:\tyou want potatoes April ?\n'), ((805, (15, 23)), '*MOT:\tyou want potatoes April ?\n'), ((809, (-1, 4)), "*AUN:\tyou whipped yours off too didn't ya [: you] ?\n"), ((809, (10, 17)), "*AUN:\tyou whipped yours off too didn't ya [: you] ?\n"), ((814, (-1, 4)), "*MOT:\tI didn't mess (th)em up .\n"), ((817, (-1, 4)), '*MOT:\t+^ you know the last time Gwen .\n'), ((817, (6, 8)), '*MOT:\t+^ you know the last time Gwen .\n'), ((817, (27, 31)), '*MOT:\t+^ you know the last time Gwen .\n'), ((820, (-1, 4)), "*MOT:\t<I had xxx> [//] I don't know what I was thinkin(g) .\n"), ((825, (6, 8)), '*MOT:\t+^ I put all that water in that thing .\n'), ((825, (24, 29)), '*MOT:\t+^ I put all that water in that thing .\n'), ((825, (38, 43)), '*MOT:\t+^ I put all that water in that thing .\n'), ((830, (-1, 4)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((830, (6, 8)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((830, (24, 31)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((830, (35, 43)), '*MOT:\t+^ that whole big package of potatoes .\n'), ((833, (-1, 4)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((833, (19, 27)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((833, (47, 52)), "*MOT:\tand then the potatoes didn't have enough water in there .\n"), ((838, (6, 8)), '*MOT:\t+^ I tried to add (.) more water to it .\n'), ((838, (33, 38)), '*MOT:\t+^ I tried to add (.) more water to it .\n'), ((843, (-1, 4)), '*MOT:\tand the things became [?] .\n'), ((843, (14, 20)), '*MOT:\tand the things became [?] .\n'), ((846, (6, 9)), '*AUN:\twww .\n'), ((848, (-1, 4)), '*MOT:\tit was a great big mess .\n'), ((848, (25, 29)), '*MOT:\tit was a great big mess .\n'), ((852, (-1, 4)), "*MOT:\tso today I said I'm gonna make sure this is gonna a xxx .\n"), ((852, (9, 14)), "*MOT:\tso today I said I'm gonna make sure this is gonna a xxx .\n"), ((852, (26, 31)), "*MOT:\tso today I said I'm gonna make sure this is gonna a xxx .\n"), ((852, (58, 61)), "*MOT:\tso today I said I'm gonna make sure this is gonna a xxx .\n"), ((858, (-1, 4)), '*MOT:\tso it turned out to be (.) <just enough &p> [/] just enough potatoes .\n'), ((858, (66, 74)), '*MOT:\tso it turned out to be (.) <just enough &p> [/] just enough potatoes .\n'), ((866, (-1, 4)), '*CHI:\t(po)tatoes .\n'), ((866, (6, 16)), '*CHI:\t(po)tatoes .\n'), ((870, (-1, 4)), '*AUN:\tand what is this here ?\n'), ((873, (-1, 4)), '*CHI:\tchicken ?\n'), ((873, (6, 13)), '*CHI:\tchicken ?\n'), ((876, (6, 14)), '*COU:\tcorn [>] .\n'), ((879, (6, 14)), '*CHI:\tcorn [<] .\n'), ((882, (-1, 4)), '*MOT:\tI was cooking just enough for the folks I was gonna feed .\n'), ((882, (40, 45)), '*MOT:\tI was cooking just enough for the folks I was gonna feed .\n'), ((882, (58, 62)), '*MOT:\tI was cooking just enough for the folks I was gonna feed .\n'), ((889, (-1, 4)), "*AUN:\tI know and it come out better when you don't cook it too long .\n"), ((896, (6, 9)), '*MOT:\tmhm .\n'), ((900, (-1, 4)), "*AUN:\tshe [>] she's talking alright April lips be going together to much when she eat to be (.) conversatin(g)@wp .\n"), ((900, (42, 46)), "*AUN:\tshe [>] she's talking alright April lips be going together to much when she eat to be (.) conversatin(g)@wp .\n"), ((908, (-1, 4)), "*MOT:\tthat's the thing in front of her .\n"), ((908, (17, 22)), "*MOT:\tthat's the thing in front of her .\n"), ((908, (26, 31)), "*MOT:\tthat's the thing in front of her .\n"), ((913, (-1, 4)), '*AUN:\toh that xxx .\n'), ((913, (14, 17)), '*AUN:\toh that xxx .\n'), ((917, (-1, 4)), "*MOT:\tdon't you want to talk on the tape recorder <that's a> [/] that's a tape recorder you talk into it and we can play it back and hear it [>] .\n"), ((917, (6, 11)), "*MOT:\tdon't you want to talk on the tape recorder <that's a> [/] that's a tape recorder you talk into it and we can play it back and hear it [>] .\n"), ((917, (36, 40)), "*MOT:\tdon't you want to talk on the tape recorder <that's a> [/] that's a tape recorder you talk into it and we can play it back and hear it [>] .\n"), ((917, (58, 60)), "*MOT:\tdon't you want to talk on the tape recorder <that's a> [/] that's a tape recorder you talk into it and we can play it back and hear it [>] .\n"), ((928, (10, 14)), '*AUN:\t<so you> [<] can hear it .\n'), ((928, (15, 18)), '*AUN:\t<so you> [<] can hear it .\n'), ((932, (-1, 4)), '*MOT:\twe need a lot of her !\n'), ((932, (16, 19)), '*MOT:\twe need a lot of her !\n'), ((935, (16, 21)), '*MOT:\tnot you tonight you tomorrow night .\n'), ((939, (6, 11)), "*MOT:\twe'll take Auntie's it don't work .\n"), ((939, (35, 39)), "*MOT:\twe'll take Auntie's it don't work .\n"), ((945, (-1, 4)), '*MOT:\tyou remember when we went to the Brockton fair ?\n'), ((945, (48, 52)), '*MOT:\tyou remember when we went to the Brockton fair ?\n'), ((951, (-1, 4)), '*COU:\tI went to Brockton fair !\n'), ((951, (25, 29)), '*COU:\tI went to Brockton fair !\n'), ((954, (6, 9)), '*MOT:\tyes .\n'), ((957, (-1, 4)), '*MOT:\tI want April to tell me about when we went to the Brockton fair .\n'), ((957, (65, 69)), '*MOT:\tI want April to tell me about when we went to the Brockton fair .\n'), ((963, (-1, 4)), '*AUN:\tdo you remember ?\n'), ((973, (-1, 4)), '*AUN:\tspeak up !\n'), ((976, (-1, 4)), "*MOT:\tI can't hear you .\n"), ((982, (10, 13)), '*AUN:\t(.) mhm ?\n'), ((985, (-1, 4)), '*AUN:\ttell me what we did at the fair .\n'), ((985, (33, 37)), '*AUN:\ttell me what we did at the fair .\n'), ((990, (-1, 4)), "*AUN:\tdidn't you enjoy it ?\n"), ((994, (-1, 4)), '*MOT:\tthis stuff is really good .\n'), ((994, (11, 16)), '*MOT:\tthis stuff is really good .\n'), ((997, (-1, 4)), '*MOT:\t+^ even with the skim milk .\n'), ((997, (23, 27)), '*MOT:\t+^ even with the skim milk .\n'), ((997, (28, 32)), '*MOT:\t+^ even with the skim milk .\n'), ((1000, (6, 11)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1000, (20, 23)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1000, (31, 41)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1000, (42, 45)), '*AUN:\tkinda [: kind of] like a milk shake xxx .\n'), ((1003, (-1, 4)), '*MOT:\tmhm it sure is .\n'), ((1006, (11, 16)), '*MOT:\tonly thing they do &-um is sometime after so many days of it +/.\n'), ((1006, (56, 60)), '*MOT:\tonly thing they do &-um is sometime after so many days of it +/.\n'), ((1011, (-1, 4)), '*AUN:\tyou had enough .\n'), ((1014, (6, 10)), "*MOT:\tyeah mhm but &-um maybe that's part of the program .\n"), ((1014, (11, 14)), "*MOT:\tyeah mhm but &-um maybe that's part of the program .\n"), ((1014, (37, 41)), "*MOT:\tyeah mhm but &-um maybe that's part of the program .\n"), ((1019, (-1, 4)), '*MOT:\tyou have_to shoot it out .\n'), ((1022, (6, 11)), '*AUN:\thoney I tell you what .\n'), ((1025, (-1, 4)), "*AUN:\tI haven't xxx eat any +/.\n"), ((1025, (20, 23)), "*AUN:\tI haven't xxx eat any +/.\n"), ((1031, (6, 10)), '*AUN:\toats and bran cereal ?\n'), ((1031, (15, 19)), '*AUN:\toats and bran cereal ?\n'), ((1031, (20, 26)), '*AUN:\toats and bran cereal ?\n'), ((1034, (6, 11)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1034, (21, 25)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1034, (30, 35)), '*AUN:\t<oats and> [/] oats and honey ?\n'), ((1037, (18, 22)), '*AUN:\tsomethin(g) <nut and honey> [>] ?\n'), ((1037, (27, 33)), '*AUN:\tsomethin(g) <nut and honey> [>] ?\n'), ((1037, (34, 37)), '*AUN:\tsomethin(g) <nut and honey> [>] ?\n'), ((1041, (-1, 4)), '*AUN:\tI ate some this morning .\n'), ((1041, (22, 29)), '*AUN:\tI ate some this morning .\n'), ((1044, (12, 15)), '*AUN:\t+^ oh man what did I do <that for> [>] ?\n'), ((1044, (41, 44)), '*AUN:\t+^ oh man what did I do <that for> [>] ?\n'), ((1049, (-1, 4)), '*CHI:\tnothing [<] .\n'), ((1049, (6, 13)), '*CHI:\tnothing [<] .\n'), ((1049, (14, 17)), '*CHI:\tnothing [<] .\n'), ((1052, (6, 12)), '*CHI:\tauntie may xxx .\n'), ((1056, (-1, 4)), '*AUN:\tmhm ?\n'), ((1056, (6, 9)), '*AUN:\tmhm ?\n'), ((1059, (-1, 4)), '*CHI:\tcan I have some more fried chicken &=whispering .\n'), ((1059, (27, 40)), '*CHI:\tcan I have some more fried chicken &=whispering .\n'), ((1067, (-1, 4)), '*MOT:\t<you know any other time (.) she got a big mouth> [>] .\n'), ((1067, (6, 10)), '*MOT:\t<you know any other time (.) she got a big mouth> [>] .\n'), ((1067, (26, 30)), '*MOT:\t<you know any other time (.) she got a big mouth> [>] .\n'), ((1067, (49, 55)), '*MOT:\t<you know any other time (.) she got a big mouth> [>] .\n'), ((1067, (56, 59)), '*MOT:\t<you know any other time (.) she got a big mouth> [>] .\n'), ((1074, (52, 55)), '*COU:\t<and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .\n'), ((1074, (111, 116)), '*COU:\t<and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .\n'), ((1074, (117, 121)), '*COU:\t<and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .\n'), ((1074, (122, 127)), '*COU:\t<and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .\n'), ((1074, (153, 156)), '*COU:\t<and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .\n'), ((1074, (161, 165)), '*COU:\t<and Auntie Mabel (.) we went on an airplane> [<] and we was on a &-um on a ladybug and I was sliding on da [: the] slide and I cut [!] myself <on my> [<] face .\n'), ((1086, (-1, 4)), '*MOT:\t<you did> [<] !\n'), ((1086, (11, 15)), '*MOT:\t<you did> [<] !\n'), ((1086, (16, 19)), '*MOT:\t<you did> [<] !\n'), ((1089, (6, 9)), '*MOT:\tyes you did !\n'), ((1092, (6, 10)), "*MOT:\tyeah uhhuh she's talking (a)bout when she sliding on +/.\n"), ((1092, (17, 22)), "*MOT:\tyeah uhhuh she's talking (a)bout when she sliding on +/.\n"), ((1097, (43, 48)), '*AUN:\t<mhm sliding on> [//] that was a big slide huh [>] ?\n'), ((1097, (49, 52)), '*AUN:\t<mhm sliding on> [//] that was a big slide huh [>] ?\n'), ((1097, (53, 56)), '*AUN:\t<mhm sliding on> [//] that was a big slide huh [>] ?\n'), ((1100, (10, 14)), '*MOT:\t<it was> [<] a big slide found out it was to big for you huh Salina .\n'), ((1100, (25, 30)), '*MOT:\t<it was> [<] a big slide found out it was to big for you huh Salina .\n'), ((1107, (6, 10)), '*COU:\tyeah [<] .\n'), ((1107, (11, 14)), '*COU:\tyeah [<] .\n'), ((1110, (-1, 4)), '*AUN:\tand <heavy headed> [>] too .\n'), ((1110, (17, 24)), '*AUN:\tand <heavy headed> [>] too .\n'), ((1113, (-1, 4)), '*COU:\tbut it was too xxx [<] .\n'), ((1113, (25, 28)), '*COU:\tbut it was too xxx [<] .\n'), ((1117, (6, 9)), '*MOT:\tyep but he came down slidin(g) to the left too .\n'), ((1117, (44, 48)), '*MOT:\tyep but he came down slidin(g) to the left too .\n'), ((1122, (6, 10)), "*AUN:\the's in New York gettin(g) <beat up> [>] .\n"), ((1122, (43, 46)), "*AUN:\the's in New York gettin(g) <beat up> [>] .\n"), ((1127, (-1, 3)), "*COU:\t<I'm scared to go> [<] back down there .\n"), ((1134, (-1, 4)), "*MOT:\twhere y'all@d people's and Gwen and xxx and y'all@d eat and +/.\n"), ((1134, (20, 28)), "*MOT:\twhere y'all@d people's and Gwen and xxx and y'all@d eat and +/.\n"), ((1134, (58, 61)), "*MOT:\twhere y'all@d people's and Gwen and xxx and y'all@d eat and +/.\n"), ((1139, (-1, 4)), '*COU:\teverybody was laughing at me .\n'), ((1143, (6, 9)), '*AUN:\tmhm .\n'), ((1147, (-1, 4)), "*MOT:\tafter this y'all@d can and sit down a while maybe later on after I take my bath +/.\n"), ((1147, (44, 49)), "*MOT:\tafter this y'all@d can and sit down a while maybe later on after I take my bath +/.\n"), ((1147, (81, 85)), "*MOT:\tafter this y'all@d can and sit down a while maybe later on after I take my bath +/.\n"), ((1154, (37, 40)), '*COU:\t<Auntie Mabel [///] everybody> [>] .\n'), ((1157, (-1, 4)), '*MOT:\t<about the cat> [<] .\n'), ((1157, (17, 21)), '*MOT:\t<about the cat> [<] .\n'), ((1157, (22, 25)), '*MOT:\t<about the cat> [<] .\n'), ((1160, (10, 13)), '*MOT:\tthe cat inside the red book !\n'), ((1160, (29, 33)), '*MOT:\tthe cat inside the red book !\n'), ((1163, (6, 10)), '*COU:\tyeah .\n'), ((1166, (20, 25)), "*MOT:\tI'll read the story about the cat before you two go to bed okay ?\n"), ((1166, (36, 39)), "*MOT:\tI'll read the story about the cat before you two go to bed okay ?\n"), ((1166, (65, 69)), "*MOT:\tI'll read the story about the cat before you two go to bed okay ?\n"), ((1177, (6, 9)), '*CHI:\txxx .\n'), ((1178, (6, 10)), '*COU:\t&-um &-um are we .\n'), ((1184, (-1, 4)), '*MOT:\tand what April ?\n'), ((1188, (6, 9)), '*CHI:\tdog .\n'), ((1191, (-1, 4)), '*MOT:\tand the dog ?\n'), ((1191, (14, 17)), '*MOT:\tand the dog ?\n'), ((1195, (-1, 4)), '*MOT:\tyou (re)member that story about the dog ?\n'), ((1195, (26, 31)), '*MOT:\tyou (re)member that story about the dog ?\n'), ((1195, (42, 45)), '*MOT:\tyou (re)member that story about the dog ?\n'), ((1200, (27, 32)), '*MOT:\twhat happened in the story (a)bout the cat and the dog tell Gwen (a)bout that story .\n'), ((1200, (45, 48)), '*MOT:\twhat happened in the story (a)bout the cat and the dog tell Gwen (a)bout that story .\n'), ((1200, (57, 60)), '*MOT:\twhat happened in the story (a)bout the cat and the dog tell Gwen (a)bout that story .\n'), ((1200, (61, 65)), '*MOT:\twhat happened in the story (a)bout the cat and the dog tell Gwen (a)bout that story .\n'), ((1207, (26, 30)), '*MOT:\tcome on you love to talk talk !\n'), ((1210, (-1, 4)), '*AUN:\ttell me about it .\n'), ((1213, (-1, 4)), '*AUN:\ttell me about what happened to the dog and the cat in the book .\n'), ((1213, (41, 44)), '*AUN:\ttell me about what happened to the dog and the cat in the book .\n'), ((1213, (53, 56)), '*AUN:\ttell me about what happened to the dog and the cat in the book .\n'), ((1213, (64, 68)), '*AUN:\ttell me about what happened to the dog and the cat in the book .\n'), ((1219, (-1, 4)), '*AUN:\ttell me so I [!] know .\n'), ((1222, (-1, 4)), '*AUN:\tI like to hear stories too .\n'), ((1222, (21, 28)), '*AUN:\tI like to hear stories too .\n'), ((1225, (-1, 4)), '*AUN:\tdo you know how to read the book yet ?\n'), ((1225, (34, 38)), '*AUN:\tdo you know how to read the book yet ?\n'), ((1231, (-1, 4)), "*AUN:\tI saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .\n"), ((1231, (22, 27)), "*AUN:\tI saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .\n"), ((1231, (122, 126)), "*AUN:\tI saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .\n"), ((1231, (132, 134)), "*AUN:\tI saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .\n"), ((1231, (177, 181)), "*AUN:\tI saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .\n"), ((1231, (224, 230)), "*AUN:\tI saw this nice thing that Gregory had would just perfect for you all but it need to be laid away now because [//] <it's like a> [//] <it comes up> [//] you carry it in a case and when it opens up it's like a computer screen .\n"), ((1245, (6, 9)), '*MOT:\tmhm .\n'), ((1248, (11, 18)), '*AUN:\t<the buttons you push> [//] <got buttons on> [//] got keys on it like a computer has ?\n'), ((1248, (60, 64)), '*AUN:\t<the buttons you push> [//] <got buttons on> [//] got keys on it like a computer has ?\n'), ((1253, (6, 9)), '*MOT:\tmhm .\n'), ((1256, (-1, 4)), "*AUN:\tyou push one (.) and it returns and <you'll get like> [//] you can make music .\n"), ((1256, (19, 22)), "*AUN:\tyou push one (.) and it returns and <you'll get like> [//] you can make music .\n"), ((1256, (78, 83)), "*AUN:\tyou push one (.) and it returns and <you'll get like> [//] you can make music .\n"), ((1261, (-1, 4)), '*AUN:\tand when you made the music it will play back just what you put in .\n'), ((1261, (28, 33)), '*AUN:\tand when you made the music it will play back just what you put in .\n'), ((1268, (-1, 4)), '*AUN:\tthen it got one where it has got math in it .\n'), ((1273, (-1, 4)), '*AUN:\tit has got letters .\n'), ((1273, (17, 24)), '*AUN:\tit has got letters .\n'), ((1276, (6, 9)), '*MOT:\tmhm .\n'), ((1279, (-1, 4)), '*AUN:\tand it has got (.) sounds .\n'), ((1279, (25, 31)), '*AUN:\tand it has got (.) sounds .\n'), ((1282, (-1, 4)), '*AUN:\t+^ you make certain sounds and it picks it up .\n'), ((1282, (6, 8)), '*AUN:\t+^ you make certain sounds and it picks it up .\n'), ((1282, (26, 32)), '*AUN:\t+^ you make certain sounds and it picks it up .\n'), ((1287, (6, 9)), '*MOT:\tmhm .\n'), ((1290, (-1, 4)), "*AUN:\tit's a really nice thing .\n"), ((1290, (25, 30)), "*AUN:\tit's a really nice thing .\n"), ((1293, (-1, 4)), '*MOT:\tbut that sounds xxx [>] +/.\n'), ((1296, (-1, 4)), "*AUN:\t<it's one of those> [<] Texas Instrument toys [>] .\n"), ((1296, (19, 25)), "*AUN:\t<it's one of those> [<] Texas Instrument toys [>] .\n"), ((1301, (-1, 4)), '*MOT:\t<oh well xxx> [<] <Texas Instrument xxx huh> [>] .\n'), ((1301, (46, 50)), '*MOT:\t<oh well xxx> [<] <Texas Instrument xxx huh> [>] .\n'), ((1301, (51, 54)), '*MOT:\t<oh well xxx> [<] <Texas Instrument xxx huh> [>] .\n'), ((1304, (29, 32)), "*AUN:\t<it's really [?] nice> [<] .\n"), ((1307, (-1, 4)), '*AUN:\tI think Mandi said she paid seventy nine dollars for it .\n'), ((1307, (47, 54)), '*AUN:\tI think Mandi said she paid seventy nine dollars for it .\n'), ((1312, (6, 9)), '*MOT:\tmhm .\n'), ((1315, (-1, 4)), "*AUN:\tbut it's real nice [>] .\n"), ((1315, (25, 28)), "*AUN:\tbut it's real nice [>] .\n"), ((1318, (6, 9)), '*MOT:\txxx [<] he has the time to go in and find it and put in on xxx .\n'), ((1318, (10, 13)), '*MOT:\txxx [<] he has the time to go in and find it and put in on xxx .\n'), ((1318, (25, 29)), '*MOT:\txxx [<] he has the time to go in and find it and put in on xxx .\n'), ((1323, (37, 40)), "*MOT:\t+^ <xxx around Christmas time> [>] things don't go xxx [>] .\n"), ((1323, (41, 47)), "*MOT:\t+^ <xxx around Christmas time> [>] things don't go xxx [>] .\n"), ((1327, (6, 10)), '*AUN:\t<and I was havin(g) problems [?]> [<] .\n'), ((1330, (-1, 1)), '*AUN:\t<I was havin(g)> [<] problems with it myself .\n'), ((1334, (6, 8)), '*AUN:\t+^ and when you do <they have you &wr> [//] you spell somethin(g) wrong or you (.) have the wrong (.) number <they xxx> [//] they teach you letters first .\n'), ((1334, (25, 30)), '*AUN:\t+^ and when you do <they have you &wr> [//] you spell somethin(g) wrong or you (.) have the wrong (.) number <they xxx> [//] they teach you letters first .\n'), ((1334, (108, 114)), '*AUN:\t+^ and when you do <they have you &wr> [//] you spell somethin(g) wrong or you (.) have the wrong (.) number <they xxx> [//] they teach you letters first .\n'), ((1334, (146, 153)), '*AUN:\t+^ and when you do <they have you &wr> [//] you spell somethin(g) wrong or you (.) have the wrong (.) number <they xxx> [//] they teach you letters first .\n'), ((1342, (-1, 4)), '*AUN:\tthen it goes from the (.) letters to your numbers and teach you how to &s (.) recognize (th)em when you see it [?] and you push (th)em .\n'), ((1342, (28, 31)), '*AUN:\tthen it goes from the (.) letters to your numbers and teach you how to &s (.) recognize (th)em when you see it [?] and you push (th)em .\n'), ((1342, (32, 39)), '*AUN:\tthen it goes from the (.) letters to your numbers and teach you how to &s (.) recognize (th)em when you see it [?] and you push (th)em .\n'), ((1351, (6, 9)), '*MOT:\tmhm .\n'), ((1354, (10, 13)), "*AUN:\tI'd ask you is this a e@l and you'd say yes@q .\n"), ((1354, (28, 31)), "*AUN:\tI'd ask you is this a e@l and you'd say yes@q .\n"), ((1354, (36, 41)), "*AUN:\tI'd ask you is this a e@l and you'd say yes@q .\n"), ((1354, (46, 51)), "*AUN:\tI'd ask you is this a e@l and you'd say yes@q .\n"), ((1359, (-1, 4)), "*AUN:\tif you say yes@q and it's wrong they say you are &wr wrong .\n"), ((1359, (17, 22)), "*AUN:\tif you say yes@q and it's wrong they say you are &wr wrong .\n"), ((1359, (27, 31)), "*AUN:\tif you say yes@q and it's wrong they say you are &wr wrong .\n"), ((1364, (-1, 4)), '*AUN:\tthis is not an e@l this is an a@l .\n'), ((1364, (21, 24)), '*AUN:\tthis is not an e@l this is an a@l .\n'), ((1364, (36, 39)), '*AUN:\tthis is not an e@l this is an a@l .\n'), ((1372, (-1, 4)), "*AUN:\tit's a really nice toy .\n"), ((1372, (25, 28)), "*AUN:\tit's a really nice toy .\n"), ((1375, (-1, 4)), '*MOT:\twow that sounds like a nice toy [>] .\n'), ((1375, (6, 9)), '*MOT:\twow that sounds like a nice toy [>] .\n'), ((1375, (34, 37)), '*MOT:\twow that sounds like a nice toy [>] .\n'), ((1375, (38, 41)), '*MOT:\twow that sounds like a nice toy [>] .\n'), ((1379, (12, 14)), "*AUN:\t<it's a> [<] nice one .\n"), ((1382, (20, 23)), '*MOT:\twell we gonna xxx .\n'), ((1385, (6, 10)), "*AUN:\tyeah (be)cause <that's why she says she got it> [>] .\n"), ((1385, (54, 57)), "*AUN:\tyeah (be)cause <that's why she says she got it> [>] .\n"), ((1390, (18, 21)), '*MOT:\t<xxx uhhuh> [<] .\n'), ((1393, (-1, 4)), '*AUN:\tthey have some nice ones .\n'), ((1393, (26, 30)), '*AUN:\tthey have some nice ones .\n'), ((1396, (9, 15)), "*AUN:\t+^ that's what they all need .\n"), ((1399, (6, 11)), '*AUN:\tstuff like that .\n'), ((1402, (27, 35)), "*MOT:\tsomething that's (.) learning uhhuh .\n"), ((1408, (-1, 4)), "*AUN:\t(be)cause you don't play with the babies anyway .\n"), ((1408, (40, 46)), "*AUN:\t(be)cause you don't play with the babies anyway .\n"), ((1413, (-1, 4)), '*AUN:\tyou do them a xxx .\n'), ((1413, (20, 23)), '*AUN:\tyou do them a xxx .\n'), ((1416, (-1, 4)), '*AUN:\tyou got enough babies to last you for ten years .\n'), ((1416, (21, 27)), '*AUN:\tyou got enough babies to last you for ten years .\n'), ((1416, (48, 53)), '*AUN:\tyou got enough babies to last you for ten years .\n'), ((1421, (31, 36)), "*COU:\t<I've got enough toys at home> [>] .\n"), ((1421, (37, 40)), "*COU:\t<I've got enough toys at home> [>] .\n"), ((1426, (20, 27)), '*MOT:\t<xxx xxx> [<] pampers on the table this morning .\n'), ((1426, (35, 40)), '*MOT:\t<xxx xxx> [<] pampers on the table this morning .\n'), ((1426, (46, 53)), '*MOT:\t<xxx xxx> [<] pampers on the table this morning .\n'), ((1429, (15, 21)), "*MOT:\t+^ whose baby's panties is this ?\n"), ((1429, (22, 29)), "*MOT:\t+^ whose baby's panties is this ?\n"), ((1433, (-1, 4)), '*MOT:\t<whose babies> [>] panties were those April ?\n'), ((1433, (25, 32)), '*MOT:\t<whose babies> [>] panties were those April ?\n'), ((1438, (-1, 4)), '*MOT:\tthose panties I had the other day for the baby (.) whose doll panties was those ?\n'), ((1438, (12, 19)), '*MOT:\tthose panties I had the other day for the baby (.) whose doll panties was those ?\n'), ((1438, (36, 39)), '*MOT:\tthose panties I had the other day for the baby (.) whose doll panties was those ?\n'), ((1438, (48, 52)), '*MOT:\tthose panties I had the other day for the baby (.) whose doll panties was those ?\n'), ((1438, (63, 67)), '*MOT:\tthose panties I had the other day for the baby (.) whose doll panties was those ?\n'), ((1446, (-1, 4)), '*CHI:\tfor my baby .\n'), ((1446, (13, 17)), '*CHI:\tfor my baby .\n'), ((1450, (-1, 4)), '*MOT:\thuh ?\n'), ((1450, (6, 9)), '*MOT:\thuh ?\n'), ((1454, (-1, 4)), '*CHI:\tfor my baby .\n'), ((1454, (13, 17)), '*CHI:\tfor my baby .\n'), ((1458, (-1, 4)), '*MOT:\toh they your baby panties ?\n'), ((1458, (19, 23)), '*MOT:\toh they your baby panties ?\n'), ((1458, (24, 31)), '*MOT:\toh they your baby panties ?\n'), ((1462, (9, 13)), "*COU:\tmy baby don't ha(ve) no panties .\n"), ((1462, (14, 19)), "*COU:\tmy baby don't ha(ve) no panties .\n"), ((1462, (30, 37)), "*COU:\tmy baby don't ha(ve) no panties .\n"), ((1465, (-1, 4)), '*AUN:\t<does she have a pamper> [>] .\n'), ((1465, (6, 11)), '*AUN:\t<does she have a pamper> [>] .\n'), ((1465, (23, 30)), '*AUN:\t<does she have a pamper> [>] .\n'), ((1465, (31, 34)), '*AUN:\t<does she have a pamper> [>] .\n'), ((1472, (-1, 4)), '*AUN:\tdoes your baby have a pamper ?\n'), ((1472, (16, 20)), '*AUN:\tdoes your baby have a pamper ?\n'), ((1472, (28, 34)), '*AUN:\tdoes your baby have a pamper ?\n'), ((1478, (-1, 4)), '*AUN:\tdo you know how to change her pamper ?\n'), ((1478, (36, 42)), '*AUN:\tdo you know how to change her pamper ?\n'), ((1483, (11, 14)), "*COU:\t&-um <my &bar> [//] my Barbie doll don't .\n"), ((1483, (36, 40)), "*COU:\t&-um <my &bar> [//] my Barbie doll don't .\n"), ((1483, (41, 46)), "*COU:\t&-um <my &bar> [//] my Barbie doll don't .\n"), ((1486, (9, 16)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1486, (17, 22)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1486, (32, 36)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1486, (53, 59)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1486, (64, 67)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1486, (74, 80)), '*COU:\tmy cabbage patch do every time she have a &-um bottle and [/] and a pamper .\n'), ((1491, (-1, 4)), '*AUN:\treally ?\n'), ((1494, (6, 10)), '*COU:\tyeah .\n'), ((1497, (-1, 4)), '*MOT:\ttomorrow afternoon Thanksgiving [?] .\n'), ((1500, (-1, 4)), '*MOT:\tI want you to xxx to the state house xxx .\n'), ((1500, (20, 23)), '*MOT:\tI want you to xxx to the state house xxx .\n'), ((1500, (31, 36)), '*MOT:\tI want you to xxx to the state house xxx .\n'), ((1500, (37, 42)), '*MOT:\tI want you to xxx to the state house xxx .\n'), ((1509, (-1, 4)), '*AUN:\tout there in Mattapan ?\n'), ((1512, (6, 9)), '*MOT:\txxx .\n'), ((1513, (-1, 4)), '*MOT:\ton Morgan Street ?\n'), ((1519, (-1, 4)), '*AUN:\tI knew xxx .\n'), ((1522, (-1, 4)), "*AUN:\tit's that building where we turn at xxx .\n"), ((1522, (6, 10)), "*AUN:\tit's that building where we turn at xxx .\n"), ((1527, (-1, 4)), '*MOT:\tyou turn the corner there .\n'), ((1527, (19, 25)), '*MOT:\tyou turn the corner there .\n'), ((1530, (6, 9)), '*AUN:\tmhm .\n'), ((1533, (6, 10)), "*MOT:\tit's on the corner xxx .\n"), ((1533, (18, 24)), "*MOT:\tit's on the corner xxx .\n"), ((1533, (25, 28)), "*MOT:\tit's on the corner xxx .\n"), ((1536, (-1, 4)), "*AUN:\tokay today is today and tomorrow's tomorrow huh ?\n"), ((1536, (6, 10)), "*AUN:\tokay today is today and tomorrow's tomorrow huh ?\n"), ((1536, (11, 16)), "*AUN:\tokay today is today and tomorrow's tomorrow huh ?\n"), ((1536, (50, 53)), "*AUN:\tokay today is today and tomorrow's tomorrow huh ?\n"), ((1541, (-1, 4)), '*AUN:\txxx today .\n'), ((1541, (6, 9)), '*AUN:\txxx today .\n'), ((1541, (10, 15)), '*AUN:\txxx today .\n'), ((1544, (11, 15)), '*AUN:\t<the day> [/] the day for the big one .\n'), ((1547, (-1, 4)), '*MOT:\tso she xxx and I start making xxx .\n'), ((1547, (13, 16)), '*MOT:\tso she xxx and I start making xxx .\n'), ((1550, (-1, 4)), '*AUN:\t(be)cause I might leave work early tomorrow anyway .\n'), ((1550, (30, 34)), '*AUN:\t(be)cause I might leave work early tomorrow anyway .\n'), ((1555, (-1, 4)), '*AUN:\tI definitely am gonna leave early Thursday .\n'), ((1555, (22, 27)), '*AUN:\tI definitely am gonna leave early Thursday .\n'), ((1559, (-1, 4)), '*AUN:\tto get everything straightened out and everything done .\n'), ((1564, (-1, 4)), '*MOT:\txxx are you leavin(g) on Friday ?\n'), ((1564, (6, 9)), '*MOT:\txxx are you leavin(g) on Friday ?\n'), ((1567, (6, 9)), '*AUN:\tmhm .\n'), ((1572, (6, 9)), '*AUN:\txxx .\n'), ((1576, (6, 11)), "*COU:\tlet's make him <xxx no school> [>] .\n"), ((1576, (29, 36)), "*COU:\tlet's make him <xxx no school> [>] .\n"), ((1576, (37, 40)), "*COU:\tlet's make him <xxx no school> [>] .\n"), ((1579, (-1, 4)), "*AUN:\t<(be)cause they're havin(g) it> [<] the <family reunion> [>] till next Friday .\n"), ((1579, (17, 24)), "*AUN:\t<(be)cause they're havin(g) it> [<] the <family reunion> [>] till next Friday .\n"), ((1579, (34, 37)), "*AUN:\t<(be)cause they're havin(g) it> [<] the <family reunion> [>] till next Friday .\n"), ((1579, (54, 62)), "*AUN:\t<(be)cause they're havin(g) it> [<] the <family reunion> [>] till next Friday .\n"), ((1579, (67, 71)), "*AUN:\t<(be)cause they're havin(g) it> [<] the <family reunion> [>] till next Friday .\n"), ((1585, (6, 12)), '*MOT:\tschool [<] .\n'), ((1585, (13, 16)), '*MOT:\tschool [<] .\n'), ((1588, (6, 10)), "*MOT:\tit's xxx .\n"), ((1588, (11, 14)), "*MOT:\tit's xxx .\n"), ((1591, (-1, 4)), "*AUN:\tso I'm gonna spend a weekend in New York this week .\n"), ((1591, (13, 18)), "*AUN:\tso I'm gonna spend a weekend in New York this week .\n"), ((1591, (27, 34)), "*AUN:\tso I'm gonna spend a weekend in New York this week .\n"), ((1596, (-1, 4)), '*MOT:\t(.) you had enough April ?\n'), ((1596, (6, 9)), '*MOT:\t(.) you had enough April ?\n'), ((1600, (-1, 4)), '*AUN:\tare you sure ?\n'), ((1603, (-1, 4)), "*AUN:\tcan't you speak ?\n"), ((1603, (6, 11)), "*AUN:\tcan't you speak ?\n"), ((1606, (-1, 4)), '*AUN:\thm: ?\n'), ((1606, (6, 9)), '*AUN:\thm: ?\n'), ((1609, (29, 33)), '*AUN:\twell stop shaking your head and say yes@q .\n'), ((1609, (42, 47)), '*AUN:\twell stop shaking your head and say yes@q .\n'), ((1614, (6, 9)), '*CHI:\tyes .\n'), ((1619, (6, 9)), '*AUN:\thm: .\n'), ((1622, (16, 21)), '*AUN:\twipe your hands .\n'), ((1625, (-1, 4)), "*MOT:\tthat's what you have a napkin for .\n"), ((1625, (29, 35)), "*MOT:\tthat's what you have a napkin for .\n"), ((1630, (16, 21)), '*MOT:\twash your hands and wipe your mouth .\n'), ((1630, (36, 41)), '*MOT:\twash your hands and wipe your mouth .\n'), ((1634, (-1, 4)), "*MOT:\tthey're not just to wrap up popsicles with .\n"), ((1640, (-1, 4)), "*AUN:\tthere's a man [!] xxx .\n"), ((1640, (16, 19)), "*AUN:\tthere's a man [!] xxx .\n"), ((1640, (20, 23)), "*AUN:\tthere's a man [!] xxx .\n"), ((1640, (24, 27)), "*AUN:\tthere's a man [!] xxx .\n"), ((1643, (-1, 4)), '*AUN:\the said come on .\n'), ((1646, (-1, 4)), '*AUN:\txxx work for me .\n'), ((1646, (10, 14)), '*AUN:\txxx work for me .\n'), ((1649, (6, 9)), '*AUN:\txxx come on xxx .\n'), ((1649, (10, 14)), '*AUN:\txxx come on xxx .\n'), ((1652, (6, 9)), '*MOT:\txxx over here xxx [>] .\n'), ((1655, (-1, 1)), '*AUN:\t<I know it> [<] .\n'), ((1658, (-1, 4)), '*AUN:\tyou see .\n'), ((1661, (9, 14)), "*AUN:\t+^ we're just talkin(g) now .\n"), ((1664, (-1, 4)), "*AUN:\t(..) if you're not finished get back up there .\n"), ((1670, (-1, 4)), '*AUN:\tyou dropping stuff all over the floor .\n'), ((1670, (38, 43)), '*AUN:\tyou dropping stuff all over the floor .\n'), ((1674, (-1, 4)), '*MOT:\tif you still eating sit down .\n'), ((1677, (-1, 4)), '*MOT:\tand eat some more of those good potatoes .\n'), ((1677, (33, 46)), '*MOT:\tand eat some more of those good potatoes .\n'), ((1682, (9, 12)), '*MOT:\t+^ eat some more of those potatoes !\n'), ((1682, (32, 40)), '*MOT:\t+^ eat some more of those potatoes !\n'), ((1685, (-1, 4)), '*COU:\tI ate all mine !\n'), ((1685, (16, 20)), '*COU:\tI ate all mine !\n'), ((1688, (-1, 4)), '*MOT:\tyep you did .\n'), ((1688, (6, 9)), '*MOT:\tyep you did .\n'), ((1691, (6, 9)), '*AUN:\txxx just pop it in there ladies .\n'), ((1691, (31, 37)), '*AUN:\txxx just pop it in there ladies .\n'), ((1695, (6, 10)), "*AUN:\tit's good .\n"), ((1695, (11, 15)), "*AUN:\tit's good .\n"), ((1698, (-1, 4)), "*AUN:\tthat's right .\n"), ((1698, (6, 12)), "*AUN:\tthat's right .\n"), ((1698, (13, 18)), "*AUN:\tthat's right .\n"), ((1701, (-1, 4)), '*AUN:\t+^ it hit my spot .\n'), ((1701, (19, 23)), '*AUN:\t+^ it hit my spot .\n'), ((1704, (6, 9)), '*MOT:\tyes indeed .\n'), ((1707, (6, 9)), '*AUN:\txxx is <on a> [/] on a noncooking diet .\n'), ((1707, (20, 23)), '*AUN:\txxx is <on a> [/] on a noncooking diet .\n'), ((1707, (40, 44)), '*AUN:\txxx is <on a> [/] on a noncooking diet .\n'), ((1710, (-1, 4)), '*AUN:\t+^ she eats cereal .\n'), ((1710, (18, 24)), '*AUN:\t+^ she eats cereal .\n'), ((1713, (13, 19)), '*AUN:\txxx no wonder I lost weight .\n'), ((1713, (27, 33)), '*AUN:\txxx no wonder I lost weight .\n'), ((1716, (6, 8)), '*AUN:\t+^ I lost eight pounds .\n'), ((1716, (22, 28)), '*AUN:\t+^ I lost eight pounds .\n'), ((1722, (6, 9)), '*MOT:\tmhm .\n'), ((1725, (-1, 4)), "*AUN:\tthat's a old xxx .\n"), ((1725, (19, 22)), "*AUN:\tthat's a old xxx .\n"), ((1728, (-1, 4)), '*AUN:\tI got find a new cereal [>] .\n'), ((1728, (23, 29)), '*AUN:\tI got find a new cereal [>] .\n'), ((1728, (30, 33)), '*AUN:\tI got find a new cereal [>] .\n'), ((1733, (-1, 4)), '*AUN:\tget up early .\n'), ((1736, (6, 11)), '*AUN:\tdrive into Pennsylvania to the xxx .\n'), ((1736, (37, 40)), '*AUN:\tdrive into Pennsylvania to the xxx .\n'), ((1740, (6, 9)), '*MOT:\txxx .\n')]
calculating accuracy and recall
correct labels:
set(['diet soda', 'milk shake', 'apple', 'fried chicken', 'slim fast', 'chicken', 'oats and honey', 'milk', 'ice cream', 'ginger+ale', 'oats and bran cereal', 'popsicles', 'nut and honey', 'diet sprite', 'corn', 'water', 'cereal', '(po)tatoes', 'broccoli', 'koolaid', 'salad', 'oats', 'potatoes', 'sodas', 'spice ham sandwich', 'pork chops', 'soda', 'diet slice'])
predicted labels:
set(['', 'fried chicken', 'help', "don't", 'hands', 'panties', '[!]', 'years', 'front', 'table talk', 'school>', 'go', 'yep', 'chicken', 'milk', '<does', 'style', 'thank', 'head', "he's", '<you', 'fix', 'drive', "baby's", 'eat', 'grace>', 'tape', 'folks', 'did>', 'pampers', 'round', 'dad', '<nut', 'good', 'corn [>]', 'food', 'couple', 'hungry [!]', "we'll", 'gonna', 'number', 'it>', 'lunch', '[>]', "kids'", 'cook', 'bath', 'day', 'minute', 'school', 'mhm', 'name', 'pounds', 'potatoes', 'table>', 'morning', 'try', 'the]', 'stuff', 'man', 'night', 'skim', 'soft', 'meal', 'da [:', 'milk shake', '<thank', 'right', "you'd", 'pork', 'habit', 'till', 'house', 'hard', 'yeah', 'my>', 'hair', 'see', 'year', 'home', 'me>', 'tenth', '+^', 'ice cream', 'wonder', '<it', 'pamper>', 'friend', '(.)', 'wow', 'ha(ve)', 'slide', 'keys', 'state', 'stories', 'cause', 'screen', 'whipped', 'amen', 'corn', 'corn [<]', 'good potatoes', 'water', 'salad>', '<and', "people's", '(po)tatoes', 'yes', 'teacher', 'bottle', 'kids', 'package', 'dunno', 'dollars', '<they', 'days', '+,', 'thing', 'dinner', 'games', 'cat>', 'soda', 'spice ham', 'wanna', 'bran', "can't", 'feed', 'ladies', 'letters', 'apple', 'hm:', 'auntie', 'want>', 'one', 'ask', 'parers', 'learning', 'table', 'sounds', 'cabbage', 'pamper', 'why>', 'buttons', 'story', 'toy', 'van', 'fair', "it's", 'doll', 'home>', 'hey', 'fast', 'amen>', 'music', "we're", 'way', 'of]', 'tell', 'store', 'firm', 'life', 'lot', 'form', 'was>', 'bus', "what's", 'xxx', 'huh', 'weight', 'you>', 'patch', 'part', 'on>', 'yes@q', 'cereal', 'baby', 'you]', 'grace', 'case', "they're", 'salad', 'oats', 'mm', 'work', 'lips', 'bed', 'air', 'while', "body's", 'today', 'www', 'those>', '(.) potatoes', 'headed>', 'air>', 'napkin', 'reunion>', 'mouth>', '<stuff', 'mine', 'ginger', 'dog', 'honey', 'foods', '[?]', 'huh>', "girls'", 'face', 'dress', 'e@l', '[/]', 'sit', 'things', 'chops', '<my', 'book', 'babies', 'come', 'baby pork', 'week', 'day>', 'okay', 'mat', 'a@l', "o'clock", 'mess', 'see>', 'drink', 'spot', 'diet', "let's", 'mouth', '&-um', 'kinda', 'nothing', '[<]', '<oats', 'weekend', 'broccoli', 'a>', 'cat', 'floor', 'anybody', 'sodas', "you'll", 'ones', 'few years', 'honey>', 'time', 'corner', "she's", 'left', 'egg', 'talk', "that's"])
file:HSLLD/HV1/MT//aprmt1.cha
precision: 0.0627450980392
recall: 0.571428571429
true positives:['(po)tatoes', 'apple', 'broccoli', 'cereal', 'chicken', 'corn', 'fried chicken', 'ice cream', 'milk', 'milk shake', 'oats', 'potatoes', 'salad', 'soda', 'sodas', 'water']
false positives: ['', '&-um', '(.)', '(.) potatoes', '+,', '+^', '<and', '<does', '<it', '<my', '<nut', '<oats', '<stuff', '<thank', '<they', '<you', '[!]', '[/]', '[<]', '[>]', '[?]', 'a>', 'a@l', 'air', 'air>', 'amen', 'amen>', 'anybody', 'ask', 'auntie', 'babies', 'baby', 'baby pork', "baby's", 'bath', 'bed', "body's", 'book', 'bottle', 'bran', 'bus', 'buttons', 'cabbage', "can't", 'case', 'cat', 'cat>', 'cause', 'chops', 'come', 'cook', 'corn [<]', 'corn [>]', 'corner', 'couple', 'da [:', 'dad', 'day', 'day>', 'days', 'did>', 'diet', 'dinner', 'dog', 'doll', 'dollars', "don't", 'dress', 'drink', 'drive', 'dunno', 'e@l', 'eat', 'egg', 'face', 'fair', 'fast', 'feed', 'few years', 'firm', 'fix', 'floor', 'folks', 'food', 'foods', 'form', 'friend', 'front', 'games', 'ginger', "girls'", 'go', 'gonna', 'good', 'good potatoes', 'grace', 'grace>', 'ha(ve)', 'habit', 'hair', 'hands', 'hard', "he's", 'head', 'headed>', 'help', 'hey', 'hm:', 'home', 'home>', 'honey', 'honey>', 'house', 'huh', 'huh>', 'hungry [!]', "it's", 'it>', 'keys', 'kids', "kids'", 'kinda', 'ladies', 'learning', 'left', "let's", 'letters', 'life', 'lips', 'lot', 'lunch', 'man', 'mat', 'me>', 'meal', 'mess', 'mhm', 'mine', 'minute', 'mm', 'morning', 'mouth', 'mouth>', 'music', 'my>', 'name', 'napkin', 'night', 'nothing', 'number', "o'clock", 'of]', 'okay', 'on>', 'one', 'ones', 'package', 'pamper', 'pamper>', 'pampers', 'panties', 'parers', 'part', 'patch', "people's", 'pork', 'pounds', 'reunion>', 'right', 'round', 'salad>', 'school', 'school>', 'screen', 'see', 'see>', "she's", 'sit', 'skim', 'slide', 'soft', 'sounds', 'spice ham', 'spot', 'state', 'store', 'stories', 'story', 'stuff', 'style', 'table', 'table talk', 'table>', 'talk', 'tape', 'teacher', 'tell', 'tenth', 'thank', "that's", 'the]', "they're", 'thing', 'things', 'those>', 'till', 'time', 'today', 'toy', 'try', 'van', 'wanna', 'want>', 'was>', 'way', "we'll", "we're", 'week', 'weekend', 'weight', "what's", 'while', 'whipped', 'why>', 'wonder', 'work', 'wow', 'www', 'xxx', 'yeah', 'year', 'years', 'yep', 'yes', 'yes@q', "you'd", "you'll", 'you>', 'you]']
false negatives: ['diet slice', 'diet soda', 'diet sprite', 'ginger+ale', 'koolaid', 'nut and honey', 'oats and bran cereal', 'oats and honey', 'popsicles', 'pork chops', 'slim fast', 'spice ham sandwich']
# true pos: 16
# false pos: 239
# false neg: 12
HSLLD/HV1/MT//jermt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: you'll have some milk after (.) okay ?", "*CHI: I'm thirsty .", "*MOT: you're thirsty ?", '*MOT: alright well let mamma give you the raviolis first and then you [//] and then mamma will give you some milk .', '*CHI: okay .', '*MOT: alright ?', "*MOT: now you gotta be a big boy and eat all your raviolis and eat all your raviolis so you'll grow to be big and strong .", '*MOT: alright [>] ?', '*CHI: okay [<] .', "*MOT: okay that's my boy .", '*MOT: (..) did you sing any songs in school today ?', '*CHI: yeah .', '*MOT: you did ?', "*MOT: what'd you sing [>] ?", "*CHI: <I didn't> [<] +/.", '*CHI: no the girl said bitsy_bitsy@wp spider .', '*MOT: the girl said bitsy_bitsy@wp spider ?', '*CHI: yeah .', '*MOT: yeah ?', '*MOT: did you sing with her ?', '*CHI: no .', '*MOT: no ?', '*MOT: how come ?', '*MOT: you like to sing .', '*CHI: I did it with Steve .', '*MOT: yeah ?', '*MOT: and what did Miss Vicki say ?', "*MOT: that you're being a good boy ?", '*CHI: yeah .', '*MOT: yeah ?', "*MOT: that's good .", '*MOT: do you like Miss Vicki ?', '*CHI: yes xxx in school .', '*MOT: leave your nose alone .', '*MOT: leave your nose [!] alone !', '*CHI: why ?', '*MOT: because I said so .', '*MOT: (..) alright start eating and then momma will give you <some &-um> [//] some milk .', '*CHI: what ?', "*MOT: start eating and then I'll give you some milk .", '*CHI: start eating now xxx [>] milk ?', '*MOT: yep [<] .', '*CHI: good then give me some milk .', '*MOT: blow it though .', "*MOT: if it's hot (.) okay ?", '*MOT: good raviolis Chi .', '*CHI: I did eat it .', '*CHI: I did eat it .', '*MOT: okay here comes the milk !', '*MOT: there it is !', '*CHI: makes me cold .', '*MOT: it makes you cold ?', '*CHI: yeah .', "*MOT: well don't drink it so fast .", "*MOT: why you'll get a boo+boo in your belly if you drink it too fast .", '*MOT: leave your nose alone .', '*MOT: sit up like a big boy come on .', "*MOT: don't wanna make a mess .", '*MOT: so tell momma what happened in school today .', '*MOT: what did you do ?', '*CHI: xxx play with the bees and I color <with the> [/] with your picture again .', '*MOT: yeah you colored my picture ?', '*CHI: yep .', '*CHI: I did it .', '*CHI: I did that .', '*MOT: yeah ?', '*CHI: I xxx gonna xxx the picture for you .', '*CHI: when I come home .', '*MOT: when you come home ?', "*CHI: but [!] it's gonna be dry .", '*MOT: oh you made me a picture with paint ?', '*CHI: yeah [>] .', "*MOT: and [<] you gotta wait for it to dry so you're gonna [: going to] bring it home Monday ?", '*CHI: yeah I gonna bring it (.) home Monday .', '*MOT: good boy !', "*MOT: you're such a big boy now when you go to school huh ?", "*CHI: and I'm a big helper with you .", "*MOT: yeah you're a big helper for me .", '*MOT: you help me with Ryan and Kayla huh ?', '*CHI: yup (.) and I have_to help Steve .', '*MOT: no .', '*CHI: just mommy and Ryan and daddy and Kayla .', '*MOT: yeah .', '*MOT: good raviolis ?', "*CHI: Steve's [/] Steve's mom is big helper .", "*MOT: yep Steve's mom is big helper too .", '*MOT: you like your raviolis ?', '*CHI: yup .', '*CHI: and you like it too ?', '*MOT: mhm .', "*MOT: (.) they're good huh ?", '*MOT: easy !', '*CHI: I chew [>] +/.', "*MOT: use [<] your napkin you don't use your shirt !", '*MOT: know better than that .', '*MOT: &=coughs .', '*MOT: gotta finish your raviolis .', '*CHI: okay gotta drink all my milk .', '*MOT: but you have_to finish your raviolis too you know .', '*CHI: I drink it all .', '*MOT: okay .', '*CHI: and you give me some more milk [>] .', '*MOT: <a little> [<] more maybe .', '*MOT: you gotta eat more .', '*CHI: okay &=laughing .', '*MOT: good boy .', "*MOT: see\xe2\x86\x91 you're gonna get big strong muscles when you get big .", '*CHI: xxx .', "*MOT: don't talk with your mouth full .", '*CHI: what ?', '*MOT: what ?', "*MOT: don't talk with your mouth full .", '*CHI: xxx fire engine in the wheel truck .', '*MOT: fire engine and an oil truck ?', '*CHI: no oil man in the oil .', '*CHI: an oil man in the &f +/.', '*MOT: I told you you have_to ask Santa Claus for that .', '*CHI: good .', "*MOT: if you're a good boy you'll get it for Christmas .", '*CHI: I want a big [!] fire engine .', '*CHI: I want a big [!] big fire engine .', '*MOT: big big fire engine so you can ride in it ?', '*CHI: yep .', '*MOT: so you can drive it yourself yeah ?', "*MOT: I told you ask Santa Claus if you're a good boy he'll bring it .", '*CHI: okay I want the little fire engine truck .', '*CHI: so I can ride it .', '*MOT: oh !', '*CHI: so I can ride it in the street .', '*MOT: what do you say ?', '*CHI: I wanna +/.', '*MOT: no !', '*CHI: excuse me I wanna +/.', '*MOT: okay good boy .', '*CHI: I wanna ride the fire engine in the street .', "*MOT: no you don't ride it in the street because [<] the cars will hit you .", '*CHI: why [<] ?', '*CHI: (be)cause the car will hit the fire engine ?', "*CHI: and won't [//] and then Santa Claus won't bring it anymore ?", '*MOT: mhm .', '*CHI: oh .', "*MOT: oh I'm sorry .", "*MOT: (.) I'm gonna get some water .", '*CHI: come in !', "*MOT: there's no one there .", '*MOT: (..) you like ravioli ?', '*CHI: yep .', '*CHI: I like raviolis I like raviolis .', '*MOT: yep you 0have gotta eat them all up .', '*MOT: so you get nice big strong muscles .', '*CHI: okay .', '*MOT: so you can drive the great big oil truck when you get big .', '*MOT: you wanna still drive the oil truck or you wanna [: want to] drive the fire engine now ?', '*CHI: I wanna drive the oil truck and I wanna drive the fire engine truck .', '*MOT: you wanna drive both ?', '*CHI: sure .', '*MOT: oh_my_goodness .', '*MOT: (..) how can you do that ?', '*CHI: <(be)cause I xxx> [//] <so I> [/] <so I gonna take it (.) in the> [//] so I gonna take it right from the man .', '*MOT: no !', '*CHI: why ?', "*MOT: (be)cause you don't take things that don't belong to you .", '*CHI: because I do !', "*MOT: no you don't .", '*CHI: yes I would .', "*MOT: no you won't or you get spankings and you go to bed .", "*MOT: you'll have_to stay in your room .", "*MOT: you don't take things that don't belong to you .", '*CHI: how about drive it in the fire trucks ?', '*MOT: yeah you can drive your own .', "*MOT: that's all .", '*CHI: Ma , I just broke my oil from the oil truck .', '*CHI: I break my oil truck .', '*MOT: mm .', '*MOT: (..) finish your raviolis .', '*CHI: (o)kay .', '*MOT: come on you gotta eat (th)em up .', "*MOT: that's a boy !", '*MOT: good boy .', '*CHI: I want more milk .', "*MOT: eat some more raviolis first you're not filling up on milk .", '*SIS: (...) 0 [=! bursts out crying] .', "*MOT: &aw Sis's sad .", "*MOT: see <Sis's> [/] Sis's getting toothies in her teeth .", '*CHI: why ?', '*CHI: it hurting her teeth ?', "*MOT: (...) you're a big boy now you have all your teeth huh ?", '*MOT: right ?', "*MOT: guess what\xe2\x86\x91 it's gonna rain out tonight .", "*CHI: xxx I can't go outside it's gonna rain out .", '*MOT: mhm .', '*CHI: xxx gonna stop .', '*MOT: and it might thunder too .', "*MOT: (be)cause we're getting a big storm .", "*CHI: and xxx [/] and I can't go outside all day .", "*CHI: it's gonna rain and thunder out and I have_to wait .", '*MOT: yep .', '*CHI: when it stops .', '*CHI: (.) get off .', "*CHI: (.) almost [//] I'm almost (.) eating .", '*MOT: yep .', '*CHI: ow !', "*MOT: don't talk with your mouth full I said (.) or you're gonna choke .", '*MOT: what are you doing\xe2\x86\x91 sit !', '*MOT: (.) before I punch you in the nose .', '*CHI: xxx get that ?', '*CHI: (.) more milk .', "*MOT: milk's all gone you gotta wait (un)til I go to the store .", '*MOT: (.) okay ?', '*CHI: I want some of your water then .', '*MOT: you want some of my water then .', '*MOT: there you go .', '*MOT: you all done\xe2\x86\x91 (.) or you want more ?', "*CHI: I don't want it .", '*MOT: no more ?', '*CHI: xxx eat all .', '*MOT: are you full ?', '*CHI: yeah .', '*MOT: yeah ?', '*MOT: okay big boy .', '*MOT: Ryan will eat when he gets up from his nap .', '*MOT: okay ?', '*MOT: go ahead you can go play now .', '*CHI: can I go play with Ryan ?', '*MOT: no .', "*MOT: Ryan's sleeping you can go [/] go color in your book (.) because when Ryan gets up you can't have the crayons or he'll write all over the walls .", '*MOT: remember ?', '*MOT: what I said ?', '*CHI: and me and Ryan xxx .', "*MOT: yeah but you can't (.) have it with Ryan (be)cause he'll write on the walls ."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jermt1.cha
HSLLD/HV1/MT//brimt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: what don't you want Ryan ?", '*CHI: guess [?] !', '*MOT: what would you like ?', '*MOT: a cup ?', '*CHI: uhuh .', '*MOT: what ?', '*CHI: I got yyy .', "*MOT: you have_to pick one or the other we can't have two .", "*MOT: I'll get you a cup ?", '*CHI: hm: !', '*CHI: Ma !', '*CHI: no !', '*MOT: what do you want ?', '*CHI: this .', '*MOT: is that what you want ?', '*MOT: you happy now ?', '*CHI: zzz .', '*MOT: who &-um put the paintings on the floor that you made ?', '*BRO: Brian did .', '*MOT: mm .', '*MOT: those are pretty with <all the> [/] all the colors Brian .', '*MOT: are they yours over here ?', '*BRO: yeah .', "*MOT: think it's raining again .", "*BRO: I'm going back out though .", "*MOT: I think we're getting thunder and lightning I don't think you'll be going back out again .", "*BRO: if there's no thunder <or &-um> [//] if there's thunder out .", "*MOT: you don't want to be outside in thunder and lightning do you ?", "*BRO: there's only thunder !", '*CHI: I know [?] .', '*MOT: remember the other night Brian all the thunder and lightning ?', '*BRO: <<you should have saw the big> [///] Mom> [>] !', '*MOT: <<put your> [/] put your butter on the noodles> [<] okay ?', '*MOT: what ?', '*CHI: you should have saw today .', '*CHI: it was pouring hard coming down hard .', '*CHI: I was outside .', '*MOT: did you get all wet ?', '*BRO: no !', '*BRO: we had to go zzz my zzz .', '*BRO: zzz .', '*BRO: I was riding my bike and then +...', '*MOT: who put your bike away ?', '*BRO: me !', '*MOT: did you have your bike huh Brian ?', '*BRO: he had his big wheel .', '*CHI: not my big one .', '*MOT: the little bike ?', '*CHI: yeah .', '*CHI: not the big one !', '*CHI: I hate the +...', '*MOT: you liked that nice black and red bike (.) .', "*MOT: bought you a little basket for it didn't I ?", "*BRO: that's old .", '*CHI: nuhhuh .', '*MOT: do you want more Sean ?', "*MOT: I didn't think so .", '*MOT: hm: ?', '*MOT: a little ?', '*MOT: no ?', '*BRO: no .', '*MOT: what shall we do this week end Fourth of July ?', '*BRO: well [/] .', '*CHI: (when) [?] the xxx [= taperecorder] gonna come on .', '*BRO: this is the first .', "*MOT: it's not going to come on it's going to listen to us Brian .", '*CHI: me ?', "*MOT: today's the fir(st) [///] it's listening to us [!] okay (.) ?", "*MOT: it's not playing [!] you a song .", "*BRO: Brian <tomorrow is> [//] today's the first of July .", '*BRO: tomorrow is the second .', "*BRO: and then Sunday's the third and then Monday [!] Brian we light off firecrackers at night +...", '*MOT: what do you have some firecrackers ?', '*BRO: me ?', '*MOT: yeah !', '*BRO: yeah .', '*MOT: zzz .', "*MOT: I hope you don't .", '*CHI: <up there> [>] .', '*BRO: xxx [<] .', '*BRO: up there (.) .', '*BRO: and one +...', '*MOT: I have some of those snap things that you throw on the ground .', "*BRO: yeah they're right up there [>] .", "*MOT: <they're> [<] not firecrackers though (.) .", '*MOT: alright ?', '*BRO: can I have a bite Brian ?', "*MOT: I don't know what else we're going to do .", "*MOT: maybe we'll get to go boating again (.) .", '*MOT: did &-uh did you look at any of the books from the library today ?', '*BRO: no .', '*MOT: but you have_to take them back y(ou) know .', "*BRO: well I don't care .", '*CHI: today ?', '*MOT: not yet but we better start readin(g) (th)em .', '*MOT: maybe after dinner we can do another one (.) ?', '*MOT: huh ?', '*CHI: me ?', '*MOT: one of the books that you brought maybe Brian and then another one that Sean got .', "*CHI: then we'll do another one then I got and then Sean then<me [/] me then> [/] [>] .", "*MOT: <Sean when we> [<] have time we didn't take that many out .", '*MOT: we have enough .', '*BRO: is it raining ?', '*MOT: is it raining out ?', '*CHI: oh .', '*CHI: oh .', '*MOT: Sean are you done eating ?', '*BRO: yeah .', '*BRO: can I go out (.) ?', '*MOT: you want some applesauce or somethin(g) ?', '*MOT: no ?', '*MOT: dessert ?', '*MOT: you wan(t) (t)a wait (un)til later ?', '*BRO: can I ?', '*MOT: is it raining outside ?', '*BRO: oh .', '*BRO: no .', "*BRO: doesn't look it .", '*MOT: okay .', '*CHI: can I ?', "*MOT: your plate's full you'll have_to wait (un)til we eat supper and then you can go out .", "*CHI: I don't want mine .", '*MOT: Brian you finish first .', "*MOT: you're almost done .", '*CHI: oh .', '*CHI: is this a cap gun ?', '*MOT: mhm .', '*CHI: you do the cackles in .', "*MOT: I don't know it's not mine is it ?", '*CHI: in here ?', '*MOT: mhm .', '*CHI: this way ?', '*MOT: you done with all the legos ?', '*CHI: 0 .', '*MOT: hm: ?', '*MOT: are you gonna still play with (th)em ?', "*MOT: okay don't forget you have_to pick them all up after we're done .", '*MOT: after supper you can finish playin(g) .', '*CHI: 0 .', '*MOT: show me what you made .', '*CHI: 0 .', '*MOT: did you find the little house ?', '*CHI: 0 .', '*MOT: can you finish eating your supper before you play with the gun Sean ?', '*MOT: <Brain> [>] !', '*CHI: &=shoots .', '*MOT: Brian !', '*MOT: put the toy down !', '*MOT: <and then finish and then play>[>] !', '*CHI: &=shoots .', '*MOT: zzz .', '*MOT: Ryan .', '*CHI: 0 .', '*MOT: Brian .', '*MOT: oh Brian !', '*MOT: one !', '*CHI: 0 .', '*MOT: two !', '*CHI: 0 .', '*MOT: three !', "*CHI: I don't want .", '*MOT: I would like to hold the toy .', '*CHI: 0 .', "*MOT: (un)til you're done eating .", "*CHI: I don't want .", "*MOT: you don't want any more ?", '*CHI: mhm .', "*MOT: you're all done ?", "*MOT: there's only one <bite left in here> [>] .", '*CHI: &=shoots .', '*MOT: two bites .', '*MOT: look !', '*MOT: <two bites> [>] .', '*CHI: &=shoots .', '*MOT: you can finish that for me ?', '*MOT: please ?', '*CHI: 0 .', '*CHI: Mom !', '*MOT: mm .', '*MOT: one bite .', '*MOT: how (a)bout one bite not two ?', '*CHI: 0 .', "*MOT: okay and if it stops rainin(g) I'll take you outside again .", '*CHI: 0 .', '*CHI: zzz .', '*MOT: okay ?', "*CHI: it's magic .", "*MOT: cat's going to get your legos .", '*CHI: &=shoots .', '*MOT: <one more bite> [<] !', '*MOT: <one more bite> [<] !', '*CHI: 0 .', '*MOT: no ?', '*CHI: freeze !', '*CHI: wan(t) I put a cap in this and shoot you ?', "*MOT: that wouldn't be very nice would it ?", '*CHI: 0 .', '*CHI: zzz .', '*MOT: silly kid !', '*CHI: ow .']
loading solution set
LINE NO ->  14
LINE NO ->  19
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  24
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  28
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  32
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  35
LINE NO ->  39
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  43
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  49
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  53
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  56
LINE NO ->  60
LINE NO ->  64
LINE NO ->  68
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  71
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  79
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  84
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  89
LINE NO ->  92
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  95
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  100
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  106
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  109
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  113
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, -1: 1})
LINE NO ->  122
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  127
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  135
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  139
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  147
butter
butter butter 499
[('put', 'VB'), ('your', 'PRP$'), ('put', 'VB'), ('your', 'PRP$'), ('butter', 'NN'), ('on', 'IN'), ('the', 'DT'), ('noodles', 'NNS'), ('okay', 'VBP')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
noodles
noodles noodles 138
[('put', 'VB'), ('your', 'PRP$'), ('put', 'VB'), ('your', 'PRP$'), ('butter', 'NN'), ('on', 'IN'), ('the', 'DT'), ('noodles', 'NNS'), ('okay', 'VBP')]
['noodles']
('food -> ', [['butter', 'Fats and Oils'], ['noodles', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  151
LINE NO ->  154
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  157
hard
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947034908>)
[('it', 'PRP'), ('was', 'VBD'), ('pouring', 'VBG'), ('hard', 'JJ'), ('coming', 'VBG'), ('down', 'RP'), ('hard', 'RB')]
['hard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  161
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  164
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  168
LINE NO ->  171
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  181
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  186
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  189
LINE NO ->  193
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  198
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  208
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  214
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  217
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, -1: 1})
LINE NO ->  222
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  228
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  231
LINE NO ->  235
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  238
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  241
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  244
LINE NO ->  247
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  250
LINE NO ->  253
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  258
LINE NO ->  261
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0})
LINE NO ->  265
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  268
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  275
LINE NO ->  279
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  285
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  290
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0})
LINE NO ->  295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  298
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, -1: 1})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  309
LINE NO ->  312
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  315
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  318
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  322
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  325
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  328
LINE NO ->  329
LINE NO ->  332
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  335
ground
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470f0170>)
[('i', 'NNS'), ('have', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('those', 'DT'), ('snap', 'JJ'), ('things', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('throw', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('ground', 'NN')]
['ground']
('food -> ', [])
snap
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470f0b90>)
[('i', 'NNS'), ('have', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('those', 'DT'), ('snap', 'JJ'), ('things', 'NNS'), ('that', 'IN'), ('you', 'PRP'), ('throw', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('ground', 'NN')]
['snap']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  340
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  343
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  347
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  350
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  354
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  359
LINE NO ->  365
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 1, 69: 1, 70: 0, 71: 0, 72: 0, -1: 1})
LINE NO ->  371
LINE NO ->  375
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  380
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  383
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  387
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  393
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  399
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  403
LINE NO ->  407
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0})
LINE NO ->  414
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, -1: 1})
LINE NO ->  420
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  425
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  429
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  436
LINE NO ->  439
LINE NO ->  442
LINE NO ->  445
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  448
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  451
applesauce
applesauce applesauce 76
[('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('applesauce', 'NN'), ('or', 'CC'), ('somethin', 'JJ'), ('g', 'NN')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  455
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  458
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471439e0>)
[('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  461
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  464
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  467
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  470
LINE NO ->  473
LINE NO ->  476
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  479
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  482
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  486
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0})
LINE NO ->  493
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  496
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  499
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  502
LINE NO ->  506
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  510
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  513
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  529
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  532
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  537
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  541
LINE NO ->  543
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  547
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0})
LINE NO ->  559
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  562
LINE NO ->  564
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  567
LINE NO ->  569
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  573
LINE NO ->  575
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  584
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947139cb0>)
[('shoots', 'NNS')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  585
LINE NO ->  588
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  591
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  594
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470f0200>)
[('shoots', 'NNS')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  599
LINE NO ->  602
LINE NO ->  604
LINE NO ->  607
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  611
LINE NO ->  615
LINE NO ->  617
LINE NO ->  620
LINE NO ->  622
LINE NO ->  625
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  629
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  633
LINE NO ->  635
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  638
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  641
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  645
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  649
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  653
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  658
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471d0f80>)
[('shoots', 'NNS')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  659
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  662
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  665
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  668
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947143518>)
[('shoots', 'NNS')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  669
LINE NO ->  672
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  676
LINE NO ->  678
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  682
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  685
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  688
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  692
LINE NO ->  694
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0})
LINE NO ->  699
LINE NO ->  701
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  705
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  709
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  713
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  717
shoots
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9471d0fc8>)
[('shoots', 'NNS')]
['shoots']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  718
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  721
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  724
LINE NO ->  726
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  730
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  734
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  741
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  747
LINE NO ->  749
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  754
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  759
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
loading solution set
calculating
set([(452, (20, 30)), (148, (45, 52)), (148, (31, 37))])
[((148, (31, 37)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (45, 52)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((452, (20, 30)), '*MOT:\tyou want some applesauce or somethin(g) ?\n')]
set([(296, (-1, 4)), (187, (19, 23)), (511, (6, 9)), (630, (31, 34)), (306, (28, 40)), (525, (-1, 4)), (400, (6, 9)), (158, (38, 42)), (642, (-1, 4)), (381, (19, 23)), (459, (-1, 4)), (544, (6, 9)), (731, (-1, 4)), (449, (-1, 4)), (462, (22, 26)), (128, (38, 45)), (182, (-1, 4)), (242, (-1, 4)), (242, (6, 9)), (596, (6, 9)), (376, (-1, 4)), (480, (6, 10)), (452, (-1, 4)), (344, (44, 47)), (576, (65, 68)), (269, (6, 10)), (148, (45, 52)), (483, (-1, 4)), (554, (59, 64)), (538, (28, 33)), (659, (6, 14)), (686, (10, 14)), (148, (54, 57)), (299, (73, 85)), (254, (28, 32)), (630, (-1, 4)), (266, (-1, 4)), (155, (26, 31)), (497, (-1, 4)), (148, (58, 62)), (145, (32, 36)), (400, (-1, 4)), (215, (-1, 4)), (456, (-1, 4)), (421, (17, 20)), (514, (17, 24)), (76, (-1, 4)), (148, (31, 37)), (199, (21, 26)), (465, (-1, 4)), (286, (-1, 4)), (218, (36, 44)), (576, (33, 39)), (85, (-1, 4)), (519, (19, 23)), (239, (-1, 4)), (494, (19, 23)), (706, (6, 10)), (286, (33, 37)), (355, (-1, 4)), (433, (-1, 4)), (319, (6, 9)), (351, (-1, 4)), (336, (-1, 4)), (394, (47, 50)), (570, (-1, 4)), (654, (43, 46)), (136, (-1, 4)), (565, (-1, 4)), (212, (-1, 4)), (114, (-1, 4)), (487, (24, 30)), (695, (6, 10)), (110, (-1, 4)), (187, (-1, 4)), (636, (26, 32)), (650, (6, 12)), (248, (-1, 4)), (165, (-1, 4)), (145, (-1, 4)), (589, (-1, 4)), (336, (27, 31)), (727, (-1, 4)), (299, (-1, 4)), (519, (-1, 4)), (538, (-1, 4)), (608, (-1, 7)), (336, (32, 38)), (533, (-1, 4)), (291, (22, 25)), (54, (6, 9)), (722, (22, 25)), (719, (22, 25)), (595, (6, 14)), (333, (-1, 4)), (209, (6, 10)), (177, (6, 9)), (133, (-1, 4)), (194, (-1, 4)), (20, (6, 11)), (33, (6, 10)), (93, (6, 8)), (415, (57, 64)), (689, (22, 26)), (384, (-1, 4)), (123, (-1, 4)), (199, (-1, 4)), (96, (33, 37)), (673, (6, 12)), (162, (-1, 4)), (679, (-1, 2)), (158, (-1, 4)), (165, (22, 25)), (262, (42, 47)), (660, (10, 15)), (40, (-1, 4)), (280, (32, 36)), (719, (16, 21)), (96, (-1, 4)), (269, (-1, 4)), (172, (-1, 4)), (69, (-1, 4)), (85, (40, 45)), (313, (6, 10)), (714, (-1, 4)), (589, (14, 17)), (663, (6, 10)), (654, (23, 28)), (408, (17, 22)), (218, (45, 48)), (254, (33, 36)), (576, (-1, 4)), (494, (-1, 4)), (666, (18, 21)), (29, (8, 11)), (344, (24, 36)), (205, (17, 21)), (735, (6, 12)), (366, (65, 70)), (750, (6, 9)), (654, (-1, 4)), (570, (30, 35)), (702, (6, 9)), (299, (89, 94)), (366, (42, 47)), (735, (21, 24)), (530, (6, 9)), (544, (-1, 4)), (462, (-1, 4)), (459, (6, 13)), (229, (6, 12)), (582, (14, 17)), (336, (61, 67)), (415, (-1, 4)), (96, (50, 56)), (133, (19, 26)), (669, (6, 14)), (666, (11, 17)), (533, (11, 14)), (194, (24, 28)), (158, (21, 25)), (718, (6, 14)), (487, (11, 18)), (683, (6, 8)), (735, (37, 42)), (654, (37, 42)), (430, (-1, 4)), (507, (-1, 4)), (760, (6, 8)), (229, (-1, 4)), (742, (-1, 4)), (646, (6, 9)), (388, (-1, 4)), (123, (20, 27)), (639, (-1, 4)), (182, (22, 26)), (710, (6, 10)), (722, (16, 21)), (394, (18, 24)), (114, (28, 35)), (500, (-1, 4)), (514, (-1, 4)), (714, (30, 35)), (140, (45, 52)), (104, (6, 10)), (351, (19, 23)), (44, (-1, 4)), (710, (11, 16)), (202, (-1, 4)), (376, (37, 42)), (280, (-1, 4)), (140, (25, 30)), (585, (6, 14)), (592, (-1, 4)), (50, (21, 24)), (626, (-1, 4)), (706, (-1, 4)), (507, (16, 19)), (384, (6, 11)), (468, (-1, 4)), (223, (26, 32)), (366, (-1, 4)), (500, (6, 12)), (355, (29, 34)), (426, (-1, 4)), (487, (39, 43)), (376, (43, 47)), (421, (-1, 4)), (755, (-1, 4)), (341, (6, 10)), (560, (-1, 4)), (477, (-1, 4)), (194, (29, 32)), (636, (-1, 4)), (446, (6, 10)), (714, (6, 11)), (20, (12, 15)), (155, (-1, 4)), (236, (-1, 4)), (80, (6, 9)), (394, (-1, 4)), (548, (-1, 4)), (415, (82, 85)), (341, (11, 18)), (507, (20, 23)), (348, (-1, 4)), (107, (17, 24)), (326, (17, 20)), (72, (-1, 4)), (452, (20, 30)), (326, (10, 16)), (323, (-1, 4)), (148, (-1, 4)), (316, (6, 10)), (50, (-1, 4)), (128, (-1, 4)), (421, (30, 34)), (731, (6, 12)), (25, (-1, 4)), (101, (-1, 4)), (145, (48, 51)), (172, (19, 22)), (218, (-1, 4)), (408, (6, 9))])
[((20, (6, 11)), '*CHI:\tguess [?] !\n'), ((20, (12, 15)), '*CHI:\tguess [?] !\n'), ((25, (-1, 4)), '*MOT:\twhat would you like ?\n'), ((29, (8, 11)), '*MOT:\ta cup ?\n'), ((33, (6, 10)), '*CHI:\tuhuh .\n'), ((40, (-1, 4)), '*CHI:\tI got yyy .\n'), ((44, (-1, 4)), "*MOT:\tyou have_to pick one or the other we can't have two .\n"), ((50, (-1, 4)), "*MOT:\tI'll get you a cup ?\n"), ((50, (21, 24)), "*MOT:\tI'll get you a cup ?\n"), ((54, (6, 9)), '*CHI:\thm: !\n'), ((69, (-1, 4)), '*CHI:\tthis .\n'), ((72, (-1, 4)), '*MOT:\tis that what you want ?\n'), ((76, (-1, 4)), '*MOT:\tyou happy now ?\n'), ((80, (6, 9)), '*CHI:\tzzz .\n'), ((85, (-1, 4)), '*MOT:\twho &-um put the paintings on the floor that you made ?\n'), ((85, (40, 45)), '*MOT:\twho &-um put the paintings on the floor that you made ?\n'), ((93, (6, 8)), '*MOT:\tmm .\n'), ((96, (-1, 4)), '*MOT:\tthose are pretty with <all the> [/] all the colors Brian .\n'), ((96, (33, 37)), '*MOT:\tthose are pretty with <all the> [/] all the colors Brian .\n'), ((96, (50, 56)), '*MOT:\tthose are pretty with <all the> [/] all the colors Brian .\n'), ((101, (-1, 4)), '*MOT:\tare they yours over here ?\n'), ((104, (6, 10)), '*BRO:\tyeah .\n'), ((107, (17, 24)), "*MOT:\tthink it's raining again .\n"), ((110, (-1, 4)), "*BRO:\tI'm going back out though .\n"), ((114, (-1, 4)), "*MOT:\tI think we're getting thunder and lightning I don't think you'll be going back out again .\n"), ((114, (28, 35)), "*MOT:\tI think we're getting thunder and lightning I don't think you'll be going back out again .\n"), ((123, (-1, 4)), "*BRO:\tif there's no thunder <or &-um> [//] if there's thunder out .\n"), ((123, (20, 27)), "*BRO:\tif there's no thunder <or &-um> [//] if there's thunder out .\n"), ((128, (-1, 4)), "*MOT:\tyou don't want to be outside in thunder and lightning do you ?\n"), ((128, (38, 45)), "*MOT:\tyou don't want to be outside in thunder and lightning do you ?\n"), ((133, (-1, 4)), "*BRO:\tthere's only thunder !\n"), ((133, (19, 26)), "*BRO:\tthere's only thunder !\n"), ((136, (-1, 4)), '*CHI:\tI know [?] .\n'), ((140, (25, 30)), '*MOT:\tremember the other night Brian all the thunder and lightning ?\n'), ((140, (45, 52)), '*MOT:\tremember the other night Brian all the thunder and lightning ?\n'), ((145, (-1, 4)), '*BRO:\t<<you should have saw the big> [///] Mom> [>] !\n'), ((145, (32, 36)), '*BRO:\t<<you should have saw the big> [///] Mom> [>] !\n'), ((145, (48, 51)), '*BRO:\t<<you should have saw the big> [///] Mom> [>] !\n'), ((148, (-1, 4)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (31, 37)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (45, 52)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (54, 57)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((148, (58, 62)), '*MOT:\t<<put your> [/] put your butter on the noodles> [<] okay ?\n'), ((155, (-1, 4)), '*CHI:\tyou should have saw today .\n'), ((155, (26, 31)), '*CHI:\tyou should have saw today .\n'), ((158, (-1, 4)), '*CHI:\tit was pouring hard coming down hard .\n'), ((158, (21, 25)), '*CHI:\tit was pouring hard coming down hard .\n'), ((158, (38, 42)), '*CHI:\tit was pouring hard coming down hard .\n'), ((162, (-1, 4)), '*CHI:\tI was outside .\n'), ((165, (-1, 4)), '*MOT:\tdid you get all wet ?\n'), ((165, (22, 25)), '*MOT:\tdid you get all wet ?\n'), ((172, (-1, 4)), '*BRO:\twe had to go zzz my zzz .\n'), ((172, (19, 22)), '*BRO:\twe had to go zzz my zzz .\n'), ((177, (6, 9)), '*BRO:\tzzz .\n'), ((182, (-1, 4)), '*BRO:\tI was riding my bike and then +...\n'), ((182, (22, 26)), '*BRO:\tI was riding my bike and then +...\n'), ((187, (-1, 4)), '*MOT:\twho put your bike away ?\n'), ((187, (19, 23)), '*MOT:\twho put your bike away ?\n'), ((194, (-1, 4)), '*MOT:\tdid you have your bike huh Brian ?\n'), ((194, (24, 28)), '*MOT:\tdid you have your bike huh Brian ?\n'), ((194, (29, 32)), '*MOT:\tdid you have your bike huh Brian ?\n'), ((199, (-1, 4)), '*BRO:\the had his big wheel .\n'), ((199, (21, 26)), '*BRO:\the had his big wheel .\n'), ((202, (-1, 4)), '*CHI:\tnot my big one .\n'), ((205, (17, 21)), '*MOT:\tthe little bike ?\n'), ((209, (6, 10)), '*CHI:\tyeah .\n'), ((212, (-1, 4)), '*CHI:\tnot the big one !\n'), ((215, (-1, 4)), '*CHI:\tI hate the +...\n'), ((218, (-1, 4)), '*MOT:\tyou liked that nice black and red bike (.) .\n'), ((218, (36, 44)), '*MOT:\tyou liked that nice black and red bike (.) .\n'), ((218, (45, 48)), '*MOT:\tyou liked that nice black and red bike (.) .\n'), ((223, (26, 32)), "*MOT:\tbought you a little basket for it didn't I ?\n"), ((229, (-1, 4)), "*BRO:\tthat's old .\n"), ((229, (6, 12)), "*BRO:\tthat's old .\n"), ((236, (-1, 4)), '*MOT:\tdo you want more Sean ?\n'), ((239, (-1, 4)), "*MOT:\tI didn't think so .\n"), ((242, (-1, 4)), '*MOT:\thm: ?\n'), ((242, (6, 9)), '*MOT:\thm: ?\n'), ((248, (-1, 4)), '*MOT:\tno ?\n'), ((254, (28, 32)), '*MOT:\twhat shall we do this week end Fourth of July ?\n'), ((254, (33, 36)), '*MOT:\twhat shall we do this week end Fourth of July ?\n'), ((262, (42, 47)), '*CHI:\t(when) [?] the xxx [= taperecorder] gonna come on .\n'), ((266, (-1, 4)), '*BRO:\tthis is the first .\n'), ((269, (-1, 4)), "*MOT:\tit's not going to come on it's going to listen to us Brian .\n"), ((269, (6, 10)), "*MOT:\tit's not going to come on it's going to listen to us Brian .\n"), ((280, (-1, 4)), "*MOT:\ttoday's the fir(st) [///] it's listening to us [!] okay (.) ?\n"), ((280, (32, 36)), "*MOT:\ttoday's the fir(st) [///] it's listening to us [!] okay (.) ?\n"), ((286, (-1, 4)), "*MOT:\tit's not playing [!] you a song .\n"), ((286, (33, 37)), "*MOT:\tit's not playing [!] you a song .\n"), ((291, (22, 25)), "*BRO:\tBrian <tomorrow is> [//] today's the first of July .\n"), ((296, (-1, 4)), '*BRO:\ttomorrow is the second .\n'), ((299, (-1, 4)), "*BRO:\tand then Sunday's the third and then Monday [!] Brian we light off firecrackers at night +...\n"), ((299, (73, 85)), "*BRO:\tand then Sunday's the third and then Monday [!] Brian we light off firecrackers at night +...\n"), ((299, (89, 94)), "*BRO:\tand then Sunday's the third and then Monday [!] Brian we light off firecrackers at night +...\n"), ((306, (28, 40)), '*MOT:\twhat do you have some firecrackers ?\n'), ((313, (6, 10)), '*MOT:\tyeah !\n'), ((316, (6, 10)), '*BRO:\tyeah .\n'), ((319, (6, 9)), '*MOT:\tzzz .\n'), ((323, (-1, 4)), "*MOT:\tI hope you don't .\n"), ((326, (10, 16)), '*CHI:\t<up there> [>] .\n'), ((326, (17, 20)), '*CHI:\t<up there> [>] .\n'), ((333, (-1, 4)), '*BRO:\tand one +...\n'), ((336, (-1, 4)), '*MOT:\tI have some of those snap things that you throw on the ground .\n'), ((336, (27, 31)), '*MOT:\tI have some of those snap things that you throw on the ground .\n'), ((336, (32, 38)), '*MOT:\tI have some of those snap things that you throw on the ground .\n'), ((336, (61, 67)), '*MOT:\tI have some of those snap things that you throw on the ground .\n'), ((341, (6, 10)), "*BRO:\tyeah they're right up there [>] .\n"), ((341, (11, 18)), "*BRO:\tyeah they're right up there [>] .\n"), ((344, (24, 36)), "*MOT:\t<they're> [<] not firecrackers though (.) .\n"), ((344, (44, 47)), "*MOT:\t<they're> [<] not firecrackers though (.) .\n"), ((348, (-1, 4)), '*MOT:\talright ?\n'), ((351, (-1, 4)), '*BRO:\tcan I have a bite Brian ?\n'), ((351, (19, 23)), '*BRO:\tcan I have a bite Brian ?\n'), ((355, (-1, 4)), "*MOT:\tI don't know what else we're going to do .\n"), ((355, (29, 34)), "*MOT:\tI don't know what else we're going to do .\n"), ((366, (-1, 4)), '*MOT:\tdid &-uh did you look at any of the books from the library today ?\n'), ((366, (42, 47)), '*MOT:\tdid &-uh did you look at any of the books from the library today ?\n'), ((366, (65, 70)), '*MOT:\tdid &-uh did you look at any of the books from the library today ?\n'), ((376, (-1, 4)), '*MOT:\tbut you have_to take them back y(ou) know .\n'), ((376, (37, 42)), '*MOT:\tbut you have_to take them back y(ou) know .\n'), ((376, (43, 47)), '*MOT:\tbut you have_to take them back y(ou) know .\n'), ((381, (19, 23)), "*BRO:\twell I don't care .\n"), ((384, (-1, 4)), '*CHI:\ttoday ?\n'), ((384, (6, 11)), '*CHI:\ttoday ?\n'), ((388, (-1, 4)), '*MOT:\tnot yet but we better start readin(g) (th)em .\n'), ((394, (-1, 4)), '*MOT:\tmaybe after dinner we can do another one (.) ?\n'), ((394, (18, 24)), '*MOT:\tmaybe after dinner we can do another one (.) ?\n'), ((394, (47, 50)), '*MOT:\tmaybe after dinner we can do another one (.) ?\n'), ((400, (-1, 4)), '*MOT:\thuh ?\n'), ((400, (6, 9)), '*MOT:\thuh ?\n'), ((408, (6, 9)), '*MOT:\tone of the books that you brought maybe Brian and then another one that Sean got .\n'), ((408, (17, 22)), '*MOT:\tone of the books that you brought maybe Brian and then another one that Sean got .\n'), ((415, (-1, 4)), "*CHI:\tthen we'll do another one then I got and then Sean then<me [/] me then> [/] [>] .\n"), ((415, (57, 64)), "*CHI:\tthen we'll do another one then I got and then Sean then<me [/] me then> [/] [>] .\n"), ((415, (82, 85)), "*CHI:\tthen we'll do another one then I got and then Sean then<me [/] me then> [/] [>] .\n"), ((421, (-1, 4)), "*MOT:\t<Sean when we> [<] have time we didn't take that many out .\n"), ((421, (17, 20)), "*MOT:\t<Sean when we> [<] have time we didn't take that many out .\n"), ((421, (30, 34)), "*MOT:\t<Sean when we> [<] have time we didn't take that many out .\n"), ((426, (-1, 4)), '*MOT:\twe have enough .\n'), ((430, (-1, 4)), '*BRO:\tis it raining ?\n'), ((433, (-1, 4)), '*MOT:\tis it raining out ?\n'), ((446, (6, 10)), '*BRO:\tyeah .\n'), ((449, (-1, 4)), '*BRO:\tcan I go out (.) ?\n'), ((452, (-1, 4)), '*MOT:\tyou want some applesauce or somethin(g) ?\n'), ((452, (20, 30)), '*MOT:\tyou want some applesauce or somethin(g) ?\n'), ((456, (-1, 4)), '*MOT:\tno ?\n'), ((459, (-1, 4)), '*MOT:\tdessert ?\n'), ((459, (6, 13)), '*MOT:\tdessert ?\n'), ((462, (-1, 4)), '*MOT:\tyou wan(t) (t)a wait (un)til later ?\n'), ((462, (22, 26)), '*MOT:\tyou wan(t) (t)a wait (un)til later ?\n'), ((465, (-1, 4)), '*BRO:\tcan I ?\n'), ((468, (-1, 4)), '*MOT:\tis it raining outside ?\n'), ((477, (-1, 4)), "*BRO:\tdoesn't look it .\n"), ((480, (6, 10)), '*MOT:\tokay .\n'), ((483, (-1, 4)), '*CHI:\tcan I ?\n'), ((487, (11, 18)), "*MOT:\tyour plate's full you'll have_to wait (un)til we eat supper and then you can go out .\n"), ((487, (24, 30)), "*MOT:\tyour plate's full you'll have_to wait (un)til we eat supper and then you can go out .\n"), ((487, (39, 43)), "*MOT:\tyour plate's full you'll have_to wait (un)til we eat supper and then you can go out .\n"), ((494, (-1, 4)), "*CHI:\tI don't want mine .\n"), ((494, (19, 23)), "*CHI:\tI don't want mine .\n"), ((497, (-1, 4)), '*MOT:\tBrian you finish first .\n'), ((500, (-1, 4)), "*MOT:\tyou're almost done .\n"), ((500, (6, 12)), "*MOT:\tyou're almost done .\n"), ((507, (-1, 4)), '*CHI:\tis this a cap gun ?\n'), ((507, (16, 19)), '*CHI:\tis this a cap gun ?\n'), ((507, (20, 23)), '*CHI:\tis this a cap gun ?\n'), ((511, (6, 9)), '*MOT:\tmhm .\n'), ((514, (-1, 4)), '*CHI:\tyou do the cackles in .\n'), ((514, (17, 24)), '*CHI:\tyou do the cackles in .\n'), ((519, (-1, 4)), "*MOT:\tI don't know it's not mine is it ?\n"), ((519, (19, 23)), "*MOT:\tI don't know it's not mine is it ?\n"), ((525, (-1, 4)), '*CHI:\tin here ?\n'), ((530, (6, 9)), '*MOT:\tmhm .\n'), ((533, (-1, 4)), '*CHI:\tthis way ?\n'), ((533, (11, 14)), '*CHI:\tthis way ?\n'), ((538, (-1, 4)), '*MOT:\tyou done with all the legos ?\n'), ((538, (28, 33)), '*MOT:\tyou done with all the legos ?\n'), ((544, (-1, 4)), '*MOT:\thm: ?\n'), ((544, (6, 9)), '*MOT:\thm: ?\n'), ((548, (-1, 4)), '*MOT:\tare you gonna still play with (th)em ?\n'), ((554, (59, 64)), "*MOT:\tokay don't forget you have_to pick them all up after we're done .\n"), ((560, (-1, 4)), '*MOT:\tafter supper you can finish playin(g) .\n'), ((565, (-1, 4)), '*MOT:\tshow me what you made .\n'), ((570, (-1, 4)), '*MOT:\tdid you find the little house ?\n'), ((570, (30, 35)), '*MOT:\tdid you find the little house ?\n'), ((576, (-1, 4)), '*MOT:\tcan you finish eating your supper before you play with the gun Sean ?\n'), ((576, (33, 39)), '*MOT:\tcan you finish eating your supper before you play with the gun Sean ?\n'), ((576, (65, 68)), '*MOT:\tcan you finish eating your supper before you play with the gun Sean ?\n'), ((582, (14, 17)), '*MOT:\t<Brain> [>] !\n'), ((585, (6, 14)), '*CHI:\t&=shoots .\n'), ((589, (-1, 4)), '*MOT:\tput the toy down !\n'), ((589, (14, 17)), '*MOT:\tput the toy down !\n'), ((592, (-1, 4)), '*MOT:\t<and then finish and then play>[>] !\n'), ((595, (6, 14)), '*CHI:\t&=shoots .\n'), ((596, (6, 9)), '*MOT:\tzzz .\n'), ((608, (-1, 7)), '*MOT:\toh Brian !\n'), ((626, (-1, 4)), "*CHI:\tI don't want .\n"), ((630, (-1, 4)), '*MOT:\tI would like to hold the toy .\n'), ((630, (31, 34)), '*MOT:\tI would like to hold the toy .\n'), ((636, (-1, 4)), "*MOT:\t(un)til you're done eating .\n"), ((636, (26, 32)), "*MOT:\t(un)til you're done eating .\n"), ((639, (-1, 4)), "*CHI:\tI don't want .\n"), ((642, (-1, 4)), "*MOT:\tyou don't want any more ?\n"), ((646, (6, 9)), '*CHI:\tmhm .\n'), ((650, (6, 12)), "*MOT:\tyou're all done ?\n"), ((654, (-1, 4)), "*MOT:\tthere's only one <bite left in here> [>] .\n"), ((654, (23, 28)), "*MOT:\tthere's only one <bite left in here> [>] .\n"), ((654, (37, 42)), "*MOT:\tthere's only one <bite left in here> [>] .\n"), ((654, (43, 46)), "*MOT:\tthere's only one <bite left in here> [>] .\n"), ((659, (6, 14)), '*CHI:\t&=shoots .\n'), ((660, (10, 15)), '*MOT:\ttwo bites .\n'), ((663, (6, 10)), '*MOT:\tlook !\n'), ((666, (11, 17)), '*MOT:\t<two bites> [>] .\n'), ((666, (18, 21)), '*MOT:\t<two bites> [>] .\n'), ((669, (6, 14)), '*CHI:\t&=shoots .\n'), ((673, (6, 12)), '*MOT:\tplease ?\n'), ((679, (-1, 2)), '*CHI:\tMom !\n'), ((683, (6, 8)), '*MOT:\tmm .\n'), ((686, (10, 14)), '*MOT:\tone bite .\n'), ((689, (22, 26)), '*MOT:\thow (a)bout one bite not two ?\n'), ((695, (6, 10)), "*MOT:\tokay and if it stops rainin(g) I'll take you outside again .\n"), ((702, (6, 9)), '*CHI:\tzzz .\n'), ((706, (-1, 4)), '*MOT:\tokay ?\n'), ((706, (6, 10)), '*MOT:\tokay ?\n'), ((710, (6, 10)), "*CHI:\tit's magic .\n"), ((710, (11, 16)), "*CHI:\tit's magic .\n"), ((714, (-1, 4)), "*MOT:\tcat's going to get your legos .\n"), ((714, (6, 11)), "*MOT:\tcat's going to get your legos .\n"), ((714, (30, 35)), "*MOT:\tcat's going to get your legos .\n"), ((718, (6, 14)), '*CHI:\t&=shoots .\n'), ((719, (16, 21)), '*MOT:\t<one more bite> [<] !\n'), ((719, (22, 25)), '*MOT:\t<one more bite> [<] !\n'), ((722, (16, 21)), '*MOT:\t<one more bite> [<] !\n'), ((722, (22, 25)), '*MOT:\t<one more bite> [<] !\n'), ((727, (-1, 4)), '*MOT:\tno ?\n'), ((731, (-1, 4)), '*CHI:\tfreeze !\n'), ((731, (6, 12)), '*CHI:\tfreeze !\n'), ((735, (6, 12)), '*CHI:\twan(t) I put a cap in this and shoot you ?\n'), ((735, (21, 24)), '*CHI:\twan(t) I put a cap in this and shoot you ?\n'), ((735, (37, 42)), '*CHI:\twan(t) I put a cap in this and shoot you ?\n'), ((742, (-1, 4)), "*MOT:\tthat wouldn't be very nice would it ?\n"), ((750, (6, 9)), '*CHI:\tzzz .\n'), ((755, (-1, 4)), '*MOT:\tsilly kid !\n'), ((760, (6, 8)), '*CHI:\tow .\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'noodles', 'applesauce'])
predicted labels:
set(['', 'raining', 'cap', 'hm:', 'mhm', 'house', 'hard', "cat's", 'yeah', 'one', 'the>', 'colors', 'books', '[?]', 'eating', 'noodles', 'uhuh', 'ground', "you're", 'guess', 'toy', 'end', 'is>', 'cup', '(.)', 'thunder', 'bite', 'please', "you'll", 'bites>', 'bite>', 'there>', 'bike', "we're", 'way', 'wet', 'snap', 'wait', "it's", 'today', 'wan(t)', 'wheel', 'shoot', 'okay', 'zzz', 'magic', 'song', 'dessert', 'firecrackers', 'time', 'huh', 'gonna', 'mine', 'red bike', 'ow', '[>]', 'know', 'supper', '[<]', 'freeze', 'care', 'butter', "they're", 'applesauce', 'big>', 'here>', 'things', 'mm', 'legos', 'floor', 'gun', 'cackles', 'look', 'dinner', '&=shoots', 'week', "plate's", 'night', 'basket', 'y(ou)', '<bite', 'bites', 'we>', 'then<me', "that's"])
file:HSLLD/HV1/MT//brimt1.cha
precision: 0.0352941176471
recall: 1.0
true positives:['applesauce', 'butter', 'noodles']
false positives: ['', '&=shoots', '(.)', '<bite', '[<]', '[>]', '[?]', 'basket', 'big>', 'bike', 'bite', 'bite>', 'bites', 'bites>', 'books', 'cackles', 'cap', 'care', "cat's", 'colors', 'cup', 'dessert', 'dinner', 'eating', 'end', 'firecrackers', 'floor', 'freeze', 'gonna', 'ground', 'guess', 'gun', 'hard', 'here>', 'hm:', 'house', 'huh', 'is>', "it's", 'know', 'legos', 'look', 'magic', 'mhm', 'mine', 'mm', 'night', 'okay', 'one', 'ow', "plate's", 'please', 'raining', 'red bike', 'shoot', 'snap', 'song', 'supper', "that's", 'the>', 'then<me', 'there>', "they're", 'things', 'thunder', 'time', 'today', 'toy', 'uhuh', 'wait', 'wan(t)', 'way', "we're", 'we>', 'week', 'wet', 'wheel', 'y(ou)', 'yeah', "you'll", "you're", 'zzz']
false negatives: []
# true pos: 3
# false pos: 82
# false neg: 0
HSLLD/HV1/MT//zanmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: they said no .', '*CHI: is there a xxx [>] ?', '*MOT: <can you> [<] [/] can you say grace for me again ?', '*CHI: <xxx food> [>] amen .', '*MOT: &aw [<] .', '*MOT: say it car .', '*CHI: thank you Jesus for this food .', '*CHI: amen [>] .', '*MOT: &=laughs .', '*CHI: amen .', '*MOT: amen Chi .', "*CHI: he can't say it .", '*MOT: yes he can huh <Chi> [>] ?', '*CHI: <Chi> [<] go like this .', '*CHI: amen .', '*CHI: no car .', '*CHI: go like this .', '*CHI: thank you Jesus for this food .', '*CHI: amen [>] .', '*MOT: amen [<] .', "*CHI: I don't want to .", '*MOT: be a sport Chi will you ?', '*CHI: he said me want .', "*MOT: I didn't xxx .", '*CHI: you xxx .', '*MOT: <what do you think> [>] ?', '*MAR: want [<] that soda ?', "*CHI: I don't like you anymore .", '*MOT: how <do you get the stuffing> [>] ?', '*CHI: <nobody xxx> [<] more [>] .', '*MOT: <xxx huh> [<] ?', '*MAR: yeah (.) oh no .', "*CHI: I'm sorry car .", "*CHI: <I &t> [//] I turned xxx <you gonna> [//] you ain't gonna see xxx anymore .", '*MOT: we can take both wings ?', '*CHI: <him better> [/] <him better (.) bring me> [>] over there .', '*MOT: come on xxx the xxx .', '*MOT: oh <I> [/] I forgot that you like those .', "*CHI: I'm tired of you xxx being older .", "*CHI: <I xxx> [//] <I didn't> [/] I didn't say (.) &-um Jackie\xe2\x86\x91 will you be over here ?", '*CHI: say no .', '*CHI: she said xxx [>] .', "*CHI: <oh I> [<] I didn't say no .", '*CHI: xxx say xxx [>] .', '*MOT: xxx [<] hear screaming .', '*MAR: yes I know .', '*MAR: I can hear [>] him .', '*CHI: <Mom xxx> [>] .', '*CHI: xxx [<] <baby crying> [>] !', "*MOT: <I'll get it> [<] .", "*MOT: I'll get it .", '*CHI: xxx try I get xxx .', "*MOT: you get the soda I'll get him .", '*MAR: okay .', '*CHI: (..) I love this .', '*CHI: (.) I love this stuff .', '*CHI: I like it too .', '*CHI: I never mush it .', '*CHI: oh !', "*CHI: (.) I don't like it .", '*CHI: I said I like it !', '*CHI: mm !', '*CHI: thank you Jesus for this food .', '*CHI: amen .', '*CHI: thank you for amen [>] .', '*MOT: <sayin(g) it> [<] again Chi ?', '*CHI: xxx [>] .', '*CHI: xxx [<] .', '*CHI: <thank you> [>] Je(s)us for this food .', '*CHI: <I can xxx> [<] .', '*CHI: I xxx thank you Jesus <for food [/]> [>] foo(d) .', '*MOT: <hi Anthony> [<] .', '*MOT: hi Anthony .', '*CHI: please stop !', '*CHI: Mar get the bee out o(f) here .', "*MAR: oh it's only a fly .", '*CHI: &h <hello there> [>] wimpy@wp [?] .', "*MOT: what'd you do with my other wind chimes you brought in ?", '*CHI: <Mom> [>] +/.', "*CHI: <they're> [<] hangin(g) up above the stairs .", '*MOT: oh .', "*CHI: Mom he's sittin(g) the I xxx his xxx .", "*MOT: no he's not .", "*MOT: or I'll kill him .", '*CHI: thank you xxx .', "*MOT: you're welcome Chi .", '*CHI: oh xxx !', '*CHI: pow &=shouts !', '*CHI: xxx [>] .', '*CHI: pow [<] !', '*CHI: pow !', '*CHI: pow (.) pow [>] !', '*MAR: <okay xxx> [<] .', '*CHI: pow pow [>] !', '*MOT: <you shootin(g)> [<] that fly ?', '*CHI: yeah .', '*CHI: Mom I xxx [>] .', '*CHI: pow [<] !', '*CHI: get fly out xxx [>] .', '*CHI: right [<] right here comes the enemy .', '*CHI: pow !', '*CHI: now Mot gonna buy me &-um gun xxx the fly and I gonna [: going to] shoot him .', "*MOT: I'm gonna buy you a gun you're gonna find it and shoot him ?", '*CHI: Mom !', "*CHI: he gonna [>] buy me [>] a big gun and I'm gonna [: going to] [>] shoot him .", '*CHI: yeah [<] .', '*MOT: okay [>] .', "*MOT: <he's in there cryin(g)> [<] .", "*CHI: yeah &m (.) Mot's gonna +/.", '*CHI: Mom !', "*CHI: &-um (.) Mot's gonna buy &-uh my <gun and> [>] +/.", '*CHI: <Mom> [<] !', "*CHI: gonna buy [>] me a big gun and I'm gonna <&k> [//] (.) kill that fly .", '*CHI: boom [<] .', '*MOT: yeah [>] .', '*MAR: have [<] mercy .', '*CHI: <over there> [>] .', '*CHI: <oh yeah> [<] you better buy one Mot .', '*MOT: yeah .', '*CHI: Mom xxx .', '*MOT: huh ?', '*CHI: a buggie (.) in was xxx here .', '*MOT: is he gone now ?', '*CHI: yeah [/] yeah (.) no xxx [>] .', '*CHI: <Mom> [<] buy me a big gun .', "*CHI: <I got> [//] (.) you gotta buy me a big gun <and I> [/] (.) and I'm gonna kill him with car .", '*CHI: Mom !', '*MOT: xxx [>] .', '*CHI: xxx [<] I xxx that .', '*CHI: xxx that .', "*CHI: Mom I'm full [>] .", "*MOT: <Chi> [<] that's enough juice .", '*MOT: eat !', '*CHI: (ex)cuse me .', '*MOT: &=chuckles (ex)cuse me .', '*CHI: (ex)cuse me .', '*CHI: I have_to go pee .', '*CHI: no xxx .', '*CHI: alright go .', '*CHI: xxx <Mom> [>] +...', '*CHI: xxx [<] .', '*CHI: I have xxx over there .', '*MOT: huh ?', '*CHI: I have xxx all there .', '*MOT: yeah .', "*CHI: I'll go get it ?", '*MOT: yeah .', '*CHI: (o)kay .', '*MAR: to the bath+room ?', '*CHI: xxx no the xxx .', '*MAR: xxx [>] .', '*CHI: <know where> [<] xxx is ?', '*CHI: is he alright Mot ?', '*MOT: mhm .', '*CHI: are we lucky .', "*MOT: get him over &w Chi's chair over here a little bit .", '*CHI: <Mom> [>] ?', '*CHI: xxx [<] !', '*CHI: xxx !', '*CHI: xxx !', '*MOT: xxx .', '*CHI: this is mine mom .', '*MOT: come on Chi !', '*CHI: this is xxx I think xxx [>] .', "*MOT: <what I'm gonna do is> [<] .", "*MOT: (.) when I'm goin(g) down and bringing Anthony down tomorrow mornin(g) (.) you can get these guys ready .", '*MAR: mhm .', "*MOT: <Sean's supposed to call> [//] you can call him right ?", '*MOT: call him tell him to be ready at least by eight .', '*MAR: mhm .', "*MOT: I'm gettin(g) up at seven .", "*MOT: I'll get Anthony down to [/] to Linda's house .", '*MOT: you know [>] ?', '*CHI: oh [<] can I come with you ?', '*MOT: not tomorrow morning .', "*MOT: we're goin(g) to the beach tomorrow .", '*CHI: <I wanna> [/] I wanna (.) Patty .', '*CHI: and xxx (.) I would say (.) &-uh Patty can I jump in the water ?', '*MOT: &=laughs .', '*CHI: I can too .', '*MOT: sure if you goin(g) xxx .', '*CHI: Mom you know what ?', '*CHI: I know [/] I know my gun is this high .', '*CHI: like this .', '*CHI: that high .', '*MOT: yeah ?', '*CHI: see (.) like high .', '*CHI: xxx .', '*CHI: (.) goin(g) again .', '*MOT: Chi !', '*CHI: hey you Chi !', '*CHI: look_it .', '*CHI: <Mom> [>] .', '*CHI: <Mom> [<] .', '*CHI: <Mom> [>] +/.', "*CHI: <Mom> [<] the next time I'm xxx .", '*CHI: Mom in xxx .', '*CHI: 0 [=! sound like a buzzer] !', '*CHI: I said go pee .', '*MOT: oh you got a mosquito bite ?', '*CHI: yeah .', '*MOT: mm .', '*CHI: &=laughs .', '*MOT: nasty mosquitos .', '*MOT: Chi .', '*CHI: yeah Mot I xxx [>] .', '*MOT: eat [<] .', "*MOT: what's over there ?", '*CHI: oh (.) xxx [>] .', '*CHI: xxx [<] .', '*CHI: Mom (.) kill the bug on [>] my xxx .', '*CHI: <&=whimpering > [<] .', '*CHI: he [/] he cut him in +...', '*CHI: he +/.', '*MOT: no eat .', "*CHI: <but I> [>] xxx close my xxx door until xxx I'm cold .", '*CHI: xxx [<] .', '*MOT: you can go close the front door .', '*CHI: no .', '*CHI: (.) Mot (.) <I have_to> [>] +/.', '*CHI: xxx [<] .', '*CHI: he <xxx me> [>] .', '*CHI: <Mom> [<] .', '*CHI: see ?', "*CHI: when xxx goes (.) I'll xxx go xxx .", "*CHI: <Mom> [>] I wanna go in the car (.) the mosquito's gonna bite me .", "*CHI: I'm closin(g) the window .", '*CHI: xxx [<] .', "*CHI: you don't care he's gonna bite me .", "*MOT: oh the <mosquito's gonna bite you> [>] ?", '*CHI: <&C Chi> [<] !', '*CHI: yeah .', "*CHI: &-um Mot just washed the car you can't close that window .", '*CHI: Mom just washed the car .', "*CHI: xxx <Mom's> [/] (.) Mot's gonna (.) close the window <and make sure xxx wash the car> [>] .", '*CHI: Mom (.) <Mikey <get in> [/] get in there> [<] .', '*CHI: <xxx cold> [>] .', '*MOT: <&=laughs > [<] .', '*CHI: Mom !', '*CHI: did you just wash the car ?', '*MOT: I washed it earlier today .', '*CHI: today ?', '*MOT: mhm .', '*CHI: you washed it now .', '*MOT: I washed it earlier .', '*CHI: earlier ?', '*MOT: mhm .', '*CHI: and [/] and you xxx let me use the hose .', '*MOT: yeah you both played with the hose for a little bit .', '*CHI: yeah .', '*CHI: and xxx [>] .', "*CHI: xxx [<] xxx you don't wanna get &-um you gotta babysit .", '*MAR: I do ?', '*CHI: <yeah and> [>] and you wanna get wet over the hose xxx take the little hose .', '*CHI: <do you> [<] wanna get wet ?', "*MOT: no that's alright .", '*CHI: when we get back xxx now you can get wet alright ?', '*CHI: xxx .', '*MOT: xxx ?', "*CHI: Mom I'm gonna put my xxx in there .", '*CHI: Mom .', '*MOT: what Chi ?', "*CHI: I'm gonna throw my xxx in there .", '*CHI: there [>] .', "*MOT: no [<] I'll do it .", '*CHI: right .', '*CHI: xxx [>] .', '*MOT: <you have> [<] enough already !', '*CHI: Mom .', "*CHI: where's mine &mi right Mot ?", '*CHI: mine .', '*CHI: I wanna take my (.) plate up myself xxx .', '*CHI: (.) Mot (.) over here .', '*CHI: xxx get those xxx .', '*CHI: mm .', '*MOT: &=chuckles .', "*MOT: I don't know xxx [>] ?", '*CHI: xxx [<] .', '*MOT: yeah .', '*CHI: Mom xxx .', '*CHI: <Mom> [/] Mot I want xxx ice .', "*MOT: hon(ey) you don't need any .", '*MOT: yours is nice and cold .', "*MOT: Mom's is warm .", '*CHI: &=gasps &-um <I want> [/] I wanna get some xxx .', '*CHI: wait (un)til it gets warm (.) then I can have &-um (.) xxx .', '*CHI: Mom you got Pepsi in there .', '*CHI: xxx too [>] ?', '*MOT: <come on> [<] (.) finish eating .', '*CHI: I already ate mine .', "*MOT: no you didn't eat anything [!] yet .", '*CHI: oh yeah I wanna eat .', "*CHI: Mom I'm really sick .", "*MOT: &=chuckles <you're really sick> [>] ?", '*CHI: until you [<] eat all [>] of this .', '*CHI: <Mom> [<] !', '*CHI: &-um (.) I really eat because [/] (.) because [>] <I> [/] I only ate once and &-uh right here and I want to xxx .', '*CHI: xxx [<] .', '*MOT: take a break .', "*MOT: (.) I love the white meat when it's dry <all around> [>] .", '*CHI: <I love you Mot> [<] .', '*MAR: I know .', '*MOT: I love you too .', '*CHI: I <thought you was comin(g)> [>] back .', '*CHI: <and I love you> [<] .', '*MOT: I love you too .', '*CHI: oh what happened to me ?', '*MOT: xxx [>] napkins .', '*CHI: <I xxx> [<] .', '*CHI: xxx .', '*CHI: &aw .', '*CHI: catsup .', "*MOT: that's the bean juice .", '*MOT: she stuck her arm in her beans .', '*MOT: silly+dilly .', '*CHI: you silly+dilly .', '*CHI: you silly+dilly .', '*MOT: no .', '*CHI: Mom that xxx ?', '*CHI: I put xxx on there .', '*MOT: oh yeah ?', '*CHI: yeah he picked it .', '*MOT: she picked a mosquito bite ?', '*CHI: yeah [>] .', '*CHI: yeah [<] and [>] +/.', '*MOT: yeah [<] .', '*CHI: and <Alicia [?]> [>] was (.) and mosquito was go like this (.) xxx of and and it was bigger .', '*MOT: yes [<] .', '*CHI: Alicia was scratching all over the place .', '*CHI: Alicia got (.) scratch all over the place .', '*CHI: xxx &=laughs [>] .', "*CHI: <and he wasn't> [<] +/.", "*CHI: and [//] oh [!] that's blood already picked .", "*CHI: I don't like that (.) can I ?", "*MOT: it ain't blood &=laughs .", '*CHI: oh .', "*CHI: it's catsup .", '*CHI: right Mot ?', '*CHI: xxx what happened ?', '*MOT: come on eat a little bit more .', '*CHI: xxx .', '*CHI: hey [!] [= high pitched] can I go back out ?', '*MOT: mhm .', "*CHI: wow [: I don't want to] [!] [?] .", '*CHI: <I> [/] I think you [/] you xxx [>] .', '*CHI: xxx [<] .', "*CHI: because (.) I wanna go &w wit(h) Mot and I'm done eatin(g) .", "*CHI: and I'm gonna go to the beach with Mot .", "*MOT: <that's> [>] tomorrow .", '*MOT: tomorrow morning [>] .', '*CHI: Mom [<] .', '*CHI: I wanna (.) xxx (.) &-um Patty tomorrow .', '*CHI: Mom <I already> [/] I already (.) ate one more over here .', '*CHI: o(f) rice .', "*CHI: Mom where's my (s)nake ?", "*MOT: where's your snake ?", '*CHI: yeah .', "*MOT: I don't know what'd you do with it ?", '*CHI: upstairs .', '*MOT: right here look .', '*CHI: xxx .', '*MOT: what do you say ?', '*CHI: I know xxx .', '*CHI: (.) let me see that .', '*CHI: 0 [=! pretend screaming] .', '*MOT: the snake has got Chi !', '*MOT: oh no !', '*MOT: no [/] no <not me> [/] not me !', '*MOT: get Mar .', '*CHI: <0 [=! attacking noises]> [>] .', '*MAR: <0 [=! fake screaming]> [<] .', "*CHI: <no don't> [>] get <Maria> [>] !", '*CHI: xxx [<] .', '*MAR: oh [<] .', "*MAR: oh_goodness I'm dyin(g) .", '*CHI: xxx you <b(l)eedin(g)> [>] .', '*CHI: <&-uh oh> [<][>] .', "*MAR: oh [<] (.) I'm bleeding ?", '*MAR: oh .', "*CHI: I'm xxx &=screams [>] !", "*CHI: <you're> [<] b(l)eedin(g) .", "*CHI: you're b(l)eeding .", "*CHI: no [!] don't kill my Mot !", "*CHI: I ain't .", '*CHI: no [/] no (.) no !', '*CHI: xxx !', '*CHI: no [/] no xxx .', '*CHI: no [/] no .', '*CHI: Mom the xxx +/.']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//zanmt1.cha
HSLLD/HV1/MT//todmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: yeah .', '*CHI: mhm [>] .', '*SS: no [<] .', "*SS: I'm xxx .", '*MOT: no .', '*MOT: just try it <first [?]> [>] .', "*SS: let's [<] sing Caca Poo .", '*SS: Do you like that ?', '*CHI: not caca .', '*MOT: hey .', "*MOT: <come here a minute I don't want you talking that way> [>] .", '*SS: no [<] .', "*SS: let's sing <Caca Poo> [<] .", "*MOT: don't talk that way .", '*MOT: zzz [>] .', "*SS: you <know that's> [<] true .", '*MOT: Nicky you want some milk ?', '*SS: no I have my iced tea .', '*SS: no thank you .', '*CHI: I want some [/] some more big pork chops .', '*MOT: did you try the rice Chi ?', '*CHI: no .', '*SS: I trieded@n mine and I hate it .', "*MOT: you don't like it ?", '*SS: no .', '*CHI: yuck (.) .', '*SS: tastes like caca .', '*SS: caca [>] .', '*MOT: well the <corn on the cob> [<] (wi)ll be ready in about ten minutes .', '*CHI: yum [>] !', '*SIS: <<it better be>[?]> [<] (..) .', '*SS: zzz zzz [>] .', '*MOT: <what are you doing Nicky (.)> [<] ?', '*MOT: <okay eat> [<] .', '*SS: zzz .', '*CHI: woof .', '*SS: zzz .', '*CHI: Nicky .', '*SIS: Chi .', '*SIS: zzz .', '*CHI: zzz [>] .', '*SS: zzz [<] zzz .', '*SIS: Nicky and Chi cut that out .', '*CHI: <I cut it> [//] I cutted@n it out .', '*SS: zzz .', '*CHI: woof woof !', '*SS: zzz zzz [>] .', "*MOT: <Nicky <you can't> [/] you can't Nicky> [<] .", "*MOT: you can't eat if you're doing that out loud .", '*SS: zzz zzz zzz [>] .', '*CHI: zzz [<] zzz zzz zzz [>] .', '*SS: woof [<] woof woof <woof woof woof woof> [>] .', '*CHI: zzz [<] .', '*CHI: <Mama> [>] .', '*CHI: Ma I want more of the pork chops .', '*MOT: <yeah [?]> [<] .', '*SS: thanks .', '*MOT: do you want more pork chops ?', '*MOT: <<you too>[?]> [>] ?', '*SIS: zzz [<] .', '*SIS: zzz zzz [>] zzz .', '*SS: yes [<] .', '*MOT: oh [?] .', "*CHI: hey what stuff's on it ?", '*MOT: what stuff ?', "*MOT: there's nothing on [!] it .", '*MOT: what do you mean ?', '*CHI: that [>] .', '*SS: <Mama> [<] .', '*MOT: that [>] you mean ?', '*SS: <Ma> [<] .', '*CHI: yeah [>] .', '*SS: <Mama> [<] .', '*MOT: just eat [///] .', '*MOT: see that ?', '*MOT: just eat in there .', '*MOT: and [>] .', '*CHI: why [<] ?', "*MOT: you won't even get any [>] .", '*SIS: xxx [<] Chi .', '*MOT: just eat around the bone and [?] leave the fat .', '*CHI: hm: ?', "*SIS: Chi's afraid of fat .", '*SIS: zzz [>] .', '*CHI: <Mom cut it off> [<] .', '*MOT: Chi I already cut as much .', '*SIS: zzz [>] .', '*MOT: <as I can off of it> [<] .', "*MOT: you're gonna have_to just +...", '*MOT: let me see (.) .', '*MOT: xxx .', "*SS: I don't like the meat or the corn .", "*SS: I don't +/.", '*CHI: <on the> [>] cob ?', '*MOT: zzz [<] .', '*SS: no .', "*SS: I don't [///] I mean [///] not +/.", '*MOT: you gonna eat your corn Nicky ?', "*SS: I mean I don't [/] I don't like the pork chops (th)a(t')s all .", "*MOT: you don't like corn ?", "*MOT: you didn't eat any rice .", "*MOT: and you're eating that pork chop Nicky .", '*MOT: you liked it just a <minute ago> [>] .', '*SS: <no [!]> [<] .', "*SS: <I don't> [/] I don't +/.", '*MOT: well .', '*SS: I was <already [?] xxx> [>] .', "*SIS: <I'll eat the pork> [<] chop .", '*SS: okay .', '*SS: now +/.', '*MOT: let Tarci have it .', "*MOT: she'll eat it all .", "*CHI: Tarci'll eat the rice with doo@o mixed in ?", '*SIS: no .', '*SS: look you have_to give her the half .', '*MOT: I will .', '*MOT: <Nicky> [<] .', '*MOT: Nicky are you gonna eat some corn on the cob ?', '*SS: <oh yeah> [>] .', '*SIS: xxx [<] xxx [>] .', '*MOT: <eat [/] eat a piece> [<] .', '*MOT: eat a piece .', "*MOT: it's good .", '*SIS: xxx [>] .', '*SS: <I ate a lot o(f)> [<] pieces .', "*MOT: no you didn't .", '*SS: yes I did [!] !', '*SS: now take those to Tarci .', '*SIS: no .', '*SIS: xxx [<][>] .', "*MOT: <okay that's> [<] enough .", "*MOT: she doesn't want anymore .", "*SIS: that's <all fat> [>] .", '*MOT: <just leave it right there> [<] .', '*SS: Mommy I just want to sleep .', '*MOT: you wan(t) <(t)a go to sleep> [>] ?', "*SIS: <that's all> [<] fat ?", '*MOT: well go brush your teeth .', '*SIS: then [?] go .', '*MOT: and you can go to bed early (.) .', '*SIS: while we [!] stay up (.) .', '*CHI: no Tarci you said she needs to go to bed right [///] <ea(rly)> [//] early .', '*MOT: she does .', "*CHI: I'm not .", '*CHI: right ?', '*SS: me [!] either [!] (.) <if I> [>] +/.', '*MOT: you [<] are .', '*SS: no .', "*SS: if I eat this I'm going to bed [!] .", "*SIS: that's not too bad .", '*MOT: you can go and read a book <to yourself> [>] .', '*SIS: <I have> [<] (un)til eight thirty .', '*SIS: <hey Mom> [>] ?', '*SS: <I know> [<] .', '*SIS: <I wanted to take them> [>] .', '*MOT: oh [<] .', '*MOT: okay [<] .', '*CHI: Mom ?', '*MOT: what ?', "*CHI: I'm staying up .", "*SS: I'm gay[!] ing@c up .", "*SS: hey there's ice in here !", '*MOT: xxx xxx [>] .', "*SS: <I'll show> [<] you .", '*MOT: nah .', '*MOT: Nicky ?', '*SS: I wan(t) (t)a show you <the ice> [>] .', '*MOT: <no playing> [<] at the table no .', '*SS: later I wanted to show <you the ice> [>] .', '*SIS: <no Nicky> [<] .', '*SIS: Mama [///] listen to Mama .', '*SS: I did .', '*SS: but I wanted to show her [>] +/.', "*MOT: obviously [<] you didn't .", '*SS: yeah I did .', "*SS: no I'm not going to bed .", "*SS: I'm playing <with the> [>] +/.", "*MOT: <you don't have> [<] to go to bed .", '*SS: can I go outside [>] ?', '*MOT: <are you gonna have> [<] corn ?', '*SIS: no [>] .', '*CHI: yeah [<] .', '*SS: can I play outside [>] ?', '*CHI: <I [!] want xxx> [<] [>] !', '*SIS: <Nicky> [<] .', '*SS: mm .', '*SS: and Chi <will want> [>] +/.', '*MOT: <you want more what> [<] .', '*MOT: pork chops ?', '*SS: Mom +/.', '*SIS: Nicky it is seven twenty five .', "*SS: <&m> [/] <&m> [//] Mom can't I go out ?", '*SS: Mommy [>] ?', '*MOT: <Chi> [<] !', '*MOT: all you <do is you eat inside there> [>] .', '*MOT: see that ?', "*SS: <Mommy didn't cook this > [<] .", "*MOT: <that's all> [>] meat .", '*MOT: right here .', '*SS: look [<] .', '*MOT: <an(d) here> [>] .', '*SS: <Mommy> [<] (.) ?', '*SS: Mommy <I wan(t) (t)a go outside> [>] .', "*CHI: <I think we'll xxx> [<] ?", "*MOT: it's mine .", '*MOT: uhhuh [>] .', "*SS: <I'm gonna> [<] go outside and wait for the corn .", "*MOT: you're gonna watch the corn for me ?", '*MOT: okay .', '*SS: mm .', '*MOT: stay away from the griller and stay up on the porch .', "*SS: I'm goin(g) [!] (t)a !", '*SIS: Mom (.) .', '*SIS: is it ten minutes yet ?', '*MOT: hm: ?', '*SIS: is it ten minutes yet ?', "*MOT: I don't know why ?", '*MOT: you having some corn ?', '*SIS: no (.) .', '*CHI: corn on the cob .', '*SIS: zzz corn and cob ?', "*SIS: <we're> [/] we're eating the cob too ?", '*MOT: no .', "*SIS: I think it's more like corn on the cob (.) ?", '*CHI: Mom .', '*MOT: what ?', '*CHI: is the bone good there ?', '*MOT: hm: ?', '*CHI: is the bone good there ?', '*MOT: the bone ?', '*MOT: no .', '*CHI: Tarci and you eat it .', "*MOT: no she doesn't eat it .", '*SIS: I eat the bone the &-um the wing bone on chicken .', "*MOT: yeah but that's soft .", '*SIS: (un)til it starts to break my teeth .', "*MOT: well that's not good either (.) .", '*MOT: Tarci you want some more rice ?', '*SIS: no (.) .', '*CHI: <you want your> [//] <you want> [/] you want your teeth breaked@n ?', "*MOT: it's not breaked it's broken .", "*MOT: (it')s not +/.", '*SS: I think you should look at the rice .', '*SS: it smells so good .', "*MOT: it's not rice Nicky .", "*MOT: it's corn .", '*SS: corn .', '*SS: xxx .', '*SIS: zzz .', '*SS: oh no .', '*SS: not again .', '*SS: no .', '*MOT: what ?', '*SS: xxx Chi [!] xxx .', '*SIS: zzz .', '*SS: xxx .', '*SIS: zzz zzz [>] .', '*MOT: <Chi you gonna drink up your milk> [<] ?', "*SIS: zzz Chi don't you love [!] cook+outs (.) ?", '*MOT: zzz .', '*SIS: say it .', "*SIS: don't nod (.) .", "*MOT: Tarci don't worry about it .", '*SIS: Chi sing your A_B_Cs .', '*CHI: A@l B@l C@l D@l caca .', '*MOT: hey [>] .', '*SIS: zzz [<] zzz zzz .', "*MOT: that's not nice .", "*SIS: it's a@l b@l c@l d@l e@l f@l g@l h@l i@l j@l k@l l@l m@l n@l o@l p@l q@l r@l s@l [>] zzz +/.", '*CHI: zzz [<] .', '*MOT: Chi .', '*SIS: tuv@b tuv@b [>] .', '*CHI: caca [<] .', '*MOT: <wha(t) did I tell you about that kind of talk> [>] ?', '*SIS: <zzz w@l x@l> [<] y@l and z@l [>] .', '*CHI: caca [<] .', "*SIS: now I know my A@l B@l C@l <next time won't you> [>] sing with me ?", '*MOT: <is it time for bed now> [<] ?', '*CHI: what does inside here do ?', '*MOT: nothing .', '*MOT: put some in there .', '*SIS: zzz zzz [>] .', '*CHI: <you take it back> [<] .', '*CHI: <you take everything> [<] .', '*SIS: zzz [>] .', "*MOT: <you know you're really lazy Chi> [<] .", "*MOT: <I'll tell you that right now> [<] .", '*CHI: <me too> [>] .', '*SIS: zzz [<] .', '*MOT: <you want everything done for you> [>] .', '*SIS: zzz [<] zzz (.) .', '*CHI: hey (.) !', "*MOT: corn's almost ready (.) .", '*CHI: xxx it is ?', "*SIS: the corn's almost ready too zzz zzz .", "*MOT: Tarce you don't want this stuff right ?", "*MOT: (o)kay Tarce why don't you get a butter knife out for me ?", '*MOT: and &-um +...', '*SIS: why do I want to get a butter knife out ?', '*CHI: <to butter [?] the corn> [>] .', '*MOT: <a butter knife and some> [<] butter right .', '*MOT: while I go get the corn okay ?', '*SIS: mm .', '*MOT: okay ?', '*SIS: <okay[!]> [>] .', '*MOT: <you can get> [<] that for me ?', "*MOT: the butter's [///] I don't think it's open .", "*MOT: <you have_to> [//] so you're gonna have_to open it .", '*SIS: xxx Mommy ?', '*MOT: what (.) ?', "*SIS: how come Nicky gets into everyone's business (.) ?", "*MOT: I don't know Tarci .", '*MOT: xxx the corn ?', '*SS: xxx xxx [>] .', '*SIS: <Chi> [<] .', '*SIS: look [<] .', '*SS: xxx .', '*CHI: what is it ?', '*SS: xxx .', "*SIS: it's a tape recorder .", '*SS: xxx xxx [>] .', '*CHI: know where <that thing came from> [<] ?', '*SS: Mom ?', '*SS: why did you slam it on me ?', '*MOT: what happened ?', '*SS: <Mom> [>] ?', '*SIS: oh [<] Chi knows about the tape recorder (.) .', '*MOT: so ?', '*SS: I wan(t) (t)a see .', "*SIS: she's trying to tape our sounds (.) .", '*SIS: all our sounds that we make .', '*MOT: how do you know ?', '*SS: what is that for ?', "*MOT: how do you know what <I'm> [/] I'm doing with it ?", '*CHI: zzz in this .', '*SIS: someone told you that at <supper time> [>] .', '*CHI: <feel this> [<] corn on the cob ?', '*SIS: some people that came [>] ?', '*CHI: &-um [<] .', '*CHI: my God <sure is hot> [>] .', '*SIS: <they said at> [<] supper time +/.', "*MOT: what I need Nicky since Tarci didn't do it yet can you go in <and get a> [>] [///] .", '*SIS: zzz [<] .', "*MOT: never mind Tarci's gonna do it for me .", '*SS: what ?', '*MOT: never <mind > [>] .', '*SS: zzz [<] zzz can I feel it ?', "*MOT: there [//] there's one ear of corn .", '*SIS: <Mommy can I have one> [>] ?', "*SS: <it's not mine> [<] .", "*SS: <it's yours> [<] .", "*MOT: where's your plate ?", '*SS: you put it in the sink .', '*MOT: oh .', '*SIS: zzz zzz [>] zzz .', '*MOT: sorry [<] .', '*CHI: <hot[?]> [>] .', '*MOT: <you want> [<] a ear of corn Tarce (.) ?', '*MOT: you gonna have an ear of corn ?', "*CHI: (it')s good .", "*MOT: it's really [!] good .", '*MOT: especially cooked on the grill .', '*SS: Mommy is it hot (.) ?', '*SS: <Mommy I wan(t) (t)a go outside> [>] .', '*SIS: <she burnt those> [<] .', "*MOT: no sir they're not burned .", '*CHI: that one is .', "*MOT: it's not burned .", '*SS: yeah <I wan(t) (t)a go> [>] outside .', "*MOT: <I'll take it> [<] (.) .", "*MOT: no you're not going outside .", "*MOT: you're gonna stay right in here .", '*MOT: I want you to be here .', '*SS: Mama burnt hers .', "*MOT: it's not burned [!] .", '*MOT: what <are you> [>] +/.', '*SS: yes [<] it is .', "*SS: there's brown [!] on it .", "*MOT: brown isn't burned .", '*SS: <yeah right> [>] ?', '*MOT: <you wan(t) (t)a wash it> [<] ?', "*SIS: I don't care (.) .", "*MOT: you're not gonna waste this are you Tarci ?", '*SIS: no .', '*MOT: who eats +...', '*SIS: xxx .', '*SS: Mom wash mine off too in cold water (.) .', '*SS: wash mine off too in <cold water> [>] .', '*MOT: no [<] .', '*MOT: <you got ta> [<] put butter on it .', "*MOT: it's not gonna melt if it's cold .", '*MOT: let me see .', '*SIS: this .', '*SS: <this is too hot> [>] .', '*SIS: <just take some off> [<] for me (be)cause I want +/.', '*SS: I wan(t) (t)a get my own butter .', '*SS: zzz I wanted to get my own [>] .', "*MOT: <oh it's hot> [<] .", '*SS: hot hot hot hot hot hot .', '*SS: how you say ta ta ta ta ?', '*MOT: I say hototototototot@wp .', '*SS: Mama why do you say that ?', '*MOT: why not ?', '*SS: hototototototot@wp .', "*SS: that's stupid .", '*SS: and <weird[?]> [>] .', "*MOT: <that's not> [<] nice Nicky .", "*MOT: I don't like <that kind of talk> [>] .", '*SS: <<hey but I>[?] > [<] [///] .', '*SS: Ma put cold water on mine .', "*SS: it's already melted .", '*SIS: I love [!] butter .', "*MOT: well why don't you get the salt and I [!] will put the salt on .", '*SIS: yeah .', "*SIS: <that's the only thing that> [//] this is the only thing <you really should put salt on > [>] .", '*SS: <I wan(t) (t)a put the salt on mine> [<] .', '*SS: Mom I wan(t) (t)a put the salt on mine .', '*SS: and you tell me when to stop [>] .', '*MOT: no [<] .', '*MOT: I [!] am putting salt on (be)cause <you go too fast> [>] .', '*SS: no [<][>] .', '*SIS: uhhuh [<] .', '*SS: no and you look look down xxx [>] .', '*MOT: <Tarce> [<] did you get it ?', '*SIS: where is it ?', "*MOT: it's not up there ?", '*SIS: no .', '*MOT: oh .', '*MOT: wonderful .', '*MOT: are you sure ?', '*SIS: mhm .', '*SIS: positive .', "*SS: it's not up there either .", "*SS: it [//] it's not on these xxx I wish I xxx [>] .", "*SIS: <Mom I'm not gonna> [<] put salt on this .", '*SS: I want salt [>] .', '*MOT: oh [<] be quiet .', "*MOT: I'm <hungry too xxx> [>] .", '*SS: <Ma> [<] &-um [>] .', '*MOT: salt [<] xxx .', "*SS: I'm gonna <go outside> [>] .", '*MOT: <did &-uh somebody> [<] take it somewhere ?', "*SS: I didn't .", '*SIS: no .', "*CHI: I didn't .", "*SS: Ma know what I'm doing <I'm> [/] I'm cooling mine off .", '*SIS: no .', '*SIS: know what you do ?', '*SS: what .', '*SIS: you take +...', "*MOT: Nicky I'm not putting any more butter on that .", "*MOT: that's it .", "*MOT: I'm not wasting butter .", '*SS: zzz <no [!]> [>] .', '*SIS: <you take> [<] paper towel +...', '*SIS: and <y(ou)> [//] you take pieces [//] two pieces of paper towel [///] .', '*SIS: Nick you can use one (.) .', '*SS: no I want long .', "*SIS: no <you don't> [>] [/] you don't use one whole thing .", '*SS: <two [?]> [<] .', '*SS: no .', '*SS: I want [!] <two [?]> [>] .', '*SIS: <you take> [<] little pieces .', '*SS: I want <to use> [/] to use two [!] .', '*SIS: oh .', '*MOT: zzz .', '*SS: zzz .', '*MOT: where [!] is the salt ?', '*MOT: zzz .', "*CHI: I'm gonna do this again .", '*MOT: you eating your xxx Chi ?', '*MOT: what are you doing [!] ?', '*MOT: you eating the bone [!] ?', '*MOT: you really like pork chops huh ?', '*MOT: is that your favorite thing pork chops ?', '*MOT: or is it chicken ?', "*SS: hey what's in that ?", '*SS: in <your hand> [>] ?', '*MOT: <here you go> [<] Chi .', '*SIS: Mom what is it [>] ?', '*MOT: salt [<] .', '*SIS: put some on mine .', '*MOT: yep .', '*SS: Mom my [>] ?', '*MOT: <you got> [<] to find that salt shaker I need it .', '*MOT: I mean not right this minute but +...', '*SS: Mom bring it over [!] to here .', '*MOT: Nicky will you be quiet ?', "*MOT: <I'm going to> [>] .", '*SS: xxx [<] .', "*SS: I'm gonna xxx [>] .", '*SIS: <Mom> [<] <jus(t)> [//] just put that in butter [!] (..) .', '*SS: yuck !', "*SS: that's disgusting .", "*MOT: it's not come on Nicky .", "*MOT: it isn't in there .", '*SS: it [!] is [!] !', '*SIS: it is not .', '*CHI: no it is ?', "*SS: this is what's gonna <get burned> [>] .", '*MOT: mm [<] .', "*SS: mine too and <Chiny's> [>] .", '*MOT: mm [<] .', "*MOT: that's real [!] good like that .", '*SS: what ?', '*MOT: on the grill (.) .', '*MOT: mm .', '*SIS: mm .', '*SIS: this is delicious .', '*MOT: oh so you like corn on the cob again huh (.) ?', '*SS: yyy[!] xxx yyy [<] [>] yyy .', '*MOT: hm: .', "*MOT: you haven't been eating it for a couple years now .", '*SIS: and (.) I eat corn on the cob [!] .', "*SIS: but I don't like corn .", "*SS: you know it's +...", '*SIS: because [///] well this +/.', '*SS: yours is the same same thing .', '*SS: right ?', '*MOT: no .', '*MOT: <if they> [>] take it off .', "*SS: <it isn't> [<] ?", '*SIS: the cob and they [>] put salt in it .', '*SS: they [<] +/.', '*MOT: zzz .', '*SIS: yes !', '*MOT: not always .', '*SIS: they put salt in it and they take some things away from it .', '*MOT: like what (.) ?', '*SIS: like a lot of their vitamins .', '*MOT: how do you know ?', '*SS: I know .', '*SIS: they only have <one or> [/] one or two vitamins .', '*SIS: minus [?] one two three .', '*CHI: Ma do you think that I would like you <to do the other> [>] one ?', '*MOT: <no vitamins go out of it> [<] .', '*CHI: Mom <think I would like> [/] think that I would <like you> [>] to do the other one .', '*MOT: maybe [<] .', "*MOT: maybe when it freezes <it comes> [//] some of it comes out and then when you cook it if you don't [///] if you cook it too much some of those vitamins come out .", '*SIS: did you cook this too much ?', "*MOT: I don't know this +...", '*SS: a little too much .', '*SS: so one [!] <bite xxx> [>] +/.', "*MOT: <I think it's> [<] perfect don't you ?", '*SS: yeah ?', "*SS: I took one teensie (weensie) bite (be)cause it's too hot [!] .", '*MOT: mm .', '*SIS: there is one other thing (.) .', '*SIS: needs more butter .', '*CHI: is it warm ?', '*SS: hot .', '*CHI: yours ?', '*SS: hot ?', '*CHI: is it ?', '*SS: yeah mine is .', '*SS: why .', '*SS: is yours ?', '*CHI: yeah .', '*SS: can I <touch it> [>] ?', '*CHI: <I eat [?] the sides> [<] .', '*SS: Chi want a paper towel just to hold it ?', '*CHI: yeah .', '*SS: okay .', '*SS: Ma Chi wants the paper <towel [?]> [>] .', "*MOT: <I'll> [<] get it .", '*SS: (o)kay .', "*SIS: it's not hot .", '*SS: hot [>] .', "*MOT: <I> [<] know it's not even that hot .", '*MOT: here .', '*SS: mine is .', "*SS: (ex)cept <Chi's [!]> [>] corn is warm [?] right Chi ?", '*MOT: <oh [?]> [<] .', '*CHI: right .', '*SIS: zzz zzz how are you gonna eat zzz<zzz zzz> [>] .', '*SS: <are you laughing> [<] at me ?', "*SIS: no but you're weird .", '*SIS: zzz zzz [>] .', '*SS: zzz [<] .', '*SIS: zzz zzz [>] .', "*SS: <I know> [<] you're weird .", '*SIS: you [!] are .', '*SS: no .', "*MOT: I should've waited for your baths .", '*MOT: zzz .', '*SS: what ?', "*MOT: should've gave you baths after you ate supper .", '*SS: why ?', '*MOT: (be)cause look at you .', '*SS: I know .', "*CHI: we're still dirty .", '*SS: I know you need to <gi(ve)> [//] you need to give us another bath .', '*MOT: no I xxx wash you off (.) .', '*CHI: what ?', "*MOT: your ha(nds) [///] everything's clean but your hands and face now .", '*SS: ah ah ah (.) .', '*SS: no dirt on me anymore .', "*CHI: so I'm still .", '*MOT: mhm .', '*CHI: Mom can you get this down ?', '*MOT: what [>] Hon ?', '*SIS: <Mom [?]> [<] ?', '*SIS: <mhm[?]> [>] ?', '*CHI: little [<] ?', "*SS: who put it down on here Chiny's leg .", '*SS: I did .', '*SS: here .', "*SS: I'll put it down .", "*SIS: I'm thirsty .", '*CHI: on yours ?', '*SS: no on yours .', '*SIS: I have two cups .', '*SS: I know it burn your hand xxx .', '*MOT: wait a few minutes .', "*MOT: wait a while and it'll cool off .", '*SS: xxx .', '*MOT: drink your milk up .', '*SS: Mom [!] this is not mud at all .', '*MOT: no ?', '*SS: why not ?', '*SS: ouch [?] !', '*SS: zzz zzz [>] .', '*SIS: zzz [<] .', '*SS: Tarce feel that .', '*SS: Mama feel it (.) .', '*MOT: huh ?', '*SS: feel this .', '*MOT: no .', '*MOT: it might be too hot for him .', '*SS: ouch ouch ouch ouch xxx [>] xxx .', '*SIS: xxx [<] .', "*SS: zzz that's not hot .", "*SIS: okay I'm gonna feel yours Nicky .", "*SS: mine's not too hot but it's hot (.) .", '*SIS: this [!] ?', "*SIS: that's not hot .", "*SIS: it's only warm !", '*SS: oh[?] .', '*SIS: zzz [>] .', '*MOT: <if you> [<] keep your finger on the inside yeah (.) .', '*SS: now low .', '*MOT: bite it .', '*MOT: is that too hot ?', '*CHI: hunhunh (.) .', '*MOT: good huh (.) ?', "*CHI: didn't we have this for a long time ago and Tarci loved it .", '*SS: I know what you mean Tarci loved it (.) .', '*SS: <Tarci> [>] <&d> [//] .', "*SIS: <didn't> [<] .", '*SS: did is eat that and nothing else .', '*SS: zzz .', '*SIS: Mom ?', '*MOT: what [>] ?', '*CHI: <is this salad> [<] ?', '*CHI: <Tarce is this salad> [>] ?', '*SS: <xxx no they> [<] mean <when you> [//] when we were with Daddy .', '*SS: xxx [>] .', '*SS: <when you were riding horses > [>] .', "*CHI: <Daddy> [<] [///] who's gonna eat this part [?] ?", '*SIS: Mom ?', '*SS: no .', '*SS: she ate everything [>] .', '*MOT: what [<] ?', '*SS: and she <ate the bones> [>] .', "*SIS: <there's some xxx> [<] ?", "*SS: she didn't eat anything until [>] .", '*MOT: huh [<] ?', '*SS: the <corn on the cob> [>] .', '*SIS: <can I eat spinach> [<] next time (.) ?', "*MOT: well we're having chicken tomorrow so I don't think then that spinach really [?] goes with chicken too good .", '*SIS: mhm (.) .', "*SIS: there's spinach with chicken .", '*MOT: I suppose we <can for the summer> [>] .', '*CHI: <see inside> [<] !', '*SS: zzz yuck !', '*SS: do you hate spinach ?', '*CHI: yum .', '*SS: if you like it I hate you .', "*MOT: don't say things <like that> [>] .", "*MOT: <that's not nice> [>] .", "*SIS: <Nicky that's not> [<] nice (.) .", '*SIS: <Nicky> [>] do you like squash ?', '*SS: xxx [<] <&n> [/] <&n> [/] <&n> [//] yuck .', '*SS: yuck yuck yuck (.) .', '*CHI: want one <of these> [>] ?', '*SIS: <Nicky> [<] tell me one [///] <do you want yours> [>] ?', '*CHI: <who needs xxx> [<][>] ?', '*SS: <do you want> [<] my iced tea ?', '*CHI: to have [>] .', '*MOT: huh [<] ?', '*CHI: snack [>] ?', '*SS: do [<] you want my iced tea ?', '*CHI: know what ?', "*CHI: <and [/] and <when we're> [/] when we're> [>] .", '*MOT: you want your <iced tea cold> [<] .', "*MOT: <you're gonna have milk> [<] .", '*CHI: <under the> [>] table .', '*SS: <I want milk>[<] .', '*SS: <now now> [>] .', '*CHI: know [<] what ?', '*CHI: know what Tarce ?', '*SIS: Nicky do you <like milk> [>] ?', "*SS: <that's a> [<] dirty cup .", "*MOT: I'm <wa(shing)> [//] <rinsing it out> [>] .", '*SS: mm [<] .', "*SIS: I don't like you .", '*MOT: Tarci !', "*MOT: okay that's enough <alright> [>] ?", "*SIS: <you don't> [<] like me (be)cause I like spinach .", "*SIS: I don't <like you> [>] .", '*SS: <I> [<] like you .', '*MOT: okay I can see a <fight starting> [>] .', '*MOT: <knock it off> [>] .', '*SS: <and I like> [<] Chiny [!] .', '*SS: not [/] not Nicholas .', "*SIS: that's not nice neither .", "*MOT: no it isn't and I want you to stop it .", "*SS: who's gonna drink that cup ?", '*MOT: xxx .', '*MOT: zzz [>] .', '*SIS: zzz [<] zzz [>] .', "*CHI: (re)member being in Scott's lot under the table <and you> [<] [>] <let us> [<][>] ?", '*MOT: <Chi> [<] .', '*MOT: Chi !', '*SIS: zzz [>] .', '*MOT: <can I tell you> [<] something ?', '*SIS: zzz .', '*CHI: what ?', "*SS: <<they said it's a lot> [?]> [>] .", "*MOT: <how many times have I told> [<] you it's not a lot [!] .", "*MOT: it's a yard [!] .", '*SS: a yard .', '*SS: Tarci know what ?', "*SS: they made me look in <Scott's> [/] Scott's <&y> [//] yard .", '*SS: know what they saw under the table ?', '*SIS: what ?', '*SS: a dead mouse .', '*CHI: and we saw the blood [!] .', '*SS: and [!] the heart [>] .', "*MOT: okay [<] okay we're eating [>] .", '*SS: no [<] !', '*SS: we only saw the heart .', '*MOT: yeah Nicky .', '*MOT: xxx .', '*SIS: oh .', '*SS: I hated [!] it .', '*SS: <Nicholas > [/] <Nicholas was xxx [/]> [>] .', '*CHI: <Nicholas screamed> [<] .', '*SIS: zzz zzz [<][>] .', "*SS: <no he didn't> [<] .", '*SS: he just keeped@n staring at it (.) .', '*MOT: I think that corn is pretty cooled off .', '*CHI: hey .', "*SS: it's not .", '*SIS: zzz [>] .', '*MOT: <we should> [<] <have got the marshmallows> [>] .', '*CHI: <is that mine> [<] ?', '*SS: taste it .', '*SIS: you did .', '*SS: no [!] it is .', "*MOT: no I didn't I got us small marshmallows <to make> [>] the fruit salad with .", '*SIS: oh [<] .', '*CHI: where are [!] they ?', '*MOT: you need big marshmallows <to put xxx> [>] .', '*SIS: <oh yeah> [<] huge [!] ones to roast .', "*SIS: <why don't we just> [/] why don't we just stop at the store ?", '*SS: yeah .', '*SS: go <out [/]> [>] .', '*MOT: <stop at> [<] the store on the way where ?', "*MOT: we're not going anywhere .", '*SS: we had a sticker Mama .', '*MOT: so ?', '*SIS: <watch me> [>] .', '*MOT: <not touching> [<] the sticker for one thing .', '*SS: what ?', '*MOT: nothing .', "*SIS: couldn't you buy a real sticker ?", "*MOT: you have_to [///] when you go to get a sticker they have_to check the car out to make sure it's good and [/] and my car +...", '*SIS: is bad .', "*MOT: well it's all good except for the part that comes out the tail pipe (.) .", "*MOT: (be)cause my car's old [!] .", '*SIS: then why did Sharon give [!] it to you ?', "*MOT: because it's a good car except for (.) what comes out the tail pipe .", "*SIS: why can't you get a new sticker ?", "*MOT: well in two years I will be able to because <they won't> [/] they won't count that .", "*MOT: xxx it'll be old enough so that they don't think anything about it (.) .", '*MOT: Nicky sit up and eat your corn .', "*MOT: and don't lay <down while we're eating> [>] .", '*SS: xxx [<][>] .', '*SIS: <in two years [!]> [<] ?', '*MOT: oh yeah her nap .', '*MOT: unless I get a (.) xxx first xxx [>] .', '*CHI: <Tarci eats this> [<] bone [>] .', '*SIS: zzz [<] zzz .', '*CHI: this is the bone .', '*SS: Tarci did not [!] eat the bone .', '*SS: right Tarci ?', "*SIS: I'm taking the burnt stuff off it .", '*SS: what ?', '*SIS: what is this burnt stuff ?', '*SS: throw it out .', "*SS: I don't know nothing about it .", "*SS: I wan(t) (t)a go wait for me now but I'm not gonna !", '*MOT: be careful Nicky .', '*SS: zzz zzz [>] .', '*MOT: <Nicky> [<] eat your corn up come on .', '*SS: why [?] ?', '*SS: yum [>] .', "*MOT: <you're the only> [<] one who <&z> [//] fools around and doesn't eat .", '*SS: I know .', "*SS: I'm too thirsty .", "*MOT: no you're just [>] fidgety .", '*CHI: yep [<] .', '*SS: thirsty (.) .', '*MOT: so was that good ?', "*CHI: <I didn't> [/] <I didn't make> [>] .", '*MOT: the corn <on the cob did you like> [<] it Tarce ?', '*MOT: the corn [>] ?', '*CHI: big drinks <(b)ecause> [<] [///] <Mom Mom I can> [>] ?', '*MOT: no [?] ?', '*MOT: <you sure> [<] ?', "*CHI: I didn't make <big drinks> [>] .", "*CHI: <it's hot> [>] .", '*SIS: <xxx xxx and you can have it> [<] .', "*MOT: no I don't want it .", '*SS: then give it to me [!] .', "*MOT: no you didn't even <eat the one you got and you sit there and eat the one you have> [>] .", '*SIS: zzz [<][>] .', '*SS: <give it to Chi> [<] .', '*SS: he [<] loves it .', '*CHI: mm .', '*CHI: mm [>] .', '*SS: he [<] took a lot [!] of bites .', '*SIS: took more than you .', '*SS: I know .', '*SS: no I took more than him .', '*SS: see ?', '*SIS: yeah but look at him (.) .', '*SS: all gone (.) .', '*SS: hey !', '*CHI: xxx +/.', '*MOT: (o)kay take care of your plate Tarci .', '*MOT: done eating ?', '*CHI: Chi (.) .', "*SS: I don't like this .", '*MOT: huh ?', "*SS: I don't like this [>] .", '*MOT: <no wonder [?]> [<] .', '*MOT: okay .', "*SS: and what'd I say I xxx ?", '*MOT: Chi ?', '*MOT: take your <plate and put it in the sink> [>] .', "*CHI: <mine's got> [<] the xxx .", '*MOT: Bro .', '*MOT: take care of your plate .', '*MOT: and Tarci you too .', "*MOT: you didn't take care of your plate yet .", '*SS: I bring [?] a <present to you> [>] .', '*MOT: <thank you> [<] .', '*MOT: xxx [<] (.) .', '*SS: mine is also [///] oh I forgot to say I love you .', "*MOT: you're welcome ?", '*SS: yeah .', "*MOT: you're welcome for what ?", '*SS: for <bringing you a plate in here> [>] .', '*MOT: <oh (be)cause I said thank you> [<] ?', '*MOT: no <I> [<] [>] +/.', '*MOT: I said thank you first .', "*MOT: that's why you said you're welcome .", '*SS: I know .', '*SS: no [>] .', '*SIS: <Mom> [<] ?', '*SS: after I <put [?]> [>] your plate in it .', '*SIS: zzz [<] .', '*SIS: <xxx something> [<] .', '*MOT: xxx .', '*MOT: what (.) ?', '*SIS: zzz .', '*MOT: could we have <good table manners> [>] ?', '*SIS: <tell me[?]> [<] .', '*MOT: Tarci .', '*SIS: mhm ?', '*SS: you [!] tell them .', "*MOT: there's nothing to tell them .", "*MOT: it's for a lady .", '*MOT: for some people that are doing the study .', '*SIS: oh who wan(t) (t)a see how .', '*MOT: <or something>[?] [>] .', '*SIS: <Chi > [<] reacts as we <xxx to him> [>] ?', "*MOT: <I don't> [<] [/] I don't know Chi .", '*MOT: I have no idea .', '*CHI: I hurt my throat (.) .', '*CHI: I hurt my throat .', "*MOT: okay we'll take care of you .", '*MOT: take care <of your plate too> [>] .', "*SIS: <when everyone's> [<] done eating can we &-um +/.", '*SS: everyone <is done eating> [>] .', '*SIS: <can &-uh we go up> [<] to the store and <j(ust)> [//] you just go in .', '*MOT: what ?', '*SIS: to get some marshmallows ?', '*MOT: well +/.', '*SS: big [!] ones .', '*MOT: by then it might be &-um +...', '*SS: who loves burnt .', "*MOT: oh Nicky don't do that .", '*SS: why ?', "*MOT: for one thing there's all rice on this plate .", "*MOT: I don't like the dishes put in the sink when they're +...", '*SIS: the what ?', '*SIS: Nicky just poured milk [!] in there !', '*SS: milk in what (.) ?', "*SS: I'll bring these in there .", '*MOT: okay .', "*SS: not <Tarci's> [>] .", '*MOT: <be careful> [<] though [>] .', "*SIS: explain [<] why can't we <go get> [//] go in there and get some big [!] marshmallows to roast ?", "*MOT: don't do that !", '*MOT: bring all that to me .', '*SIS: zzz Mom we never get to roast <marshmallows xxx> [>] .', '*MOT: <well &-uh> [<] the summer just started my dear .', '*SS: I wan(t) (t)a do that [>] .', '*MOT: <Chi> [<] come here you got ta wash your hands and face .', '*CHI: I did [!] .', "*MOT: you're not supposed to go in there with your hands and face like that .", '*CHI: I know .', '*MOT: Chi !', '*MOT: <Chi> [>] .', '*SS: <(ex)cuse me> [<] .', '*SS: Mommy know [/] know what happened when we were at Nicholas ?', '*SIS: Mom !', '*SS: xxx xxx [>] xxx .', '*MOT: <xxx xxx> [<] .', '*MOT: yeah why ?', '*MOT: look at your belly sticking way out .', '*SIS: zzz xxx [>] +/.', '*MOT: xxx [<] <do you> [>] ?', '*SS: <xxx gonna eat> [<] .', '*SIS: huge stomach .', '*SIS: zzz .', '*SS: Mommy ?', '*SS: know what happened when [/] when they were at <Nicholas> [>] ?', "*SIS: <Courtney's tooth> [<] fell out .", "*SS: Courtney's tooth fell out .", '*CHI: <did you> [>] +/.', '*MOT: really [<] ?', '*CHI: <did you> [>] see it ?', '*SS: yeah [<] .', '*SIS: and it was bloody .', '*SS: yeah it was bloody .', '*SS: xxx .', '*SIS: zzz .', "*SS: yeah let's get one of them .", "*SS: let's go .", '*SIS: get one ?', "*CHI: couldn't get one .", '*CHI: I want one of those .', '*SS: get it !', '*SS: come on Chi .', '*SIS: no [!] you got_to get in line .', '*SIS: okay now [!] xxx +/.', "*SIS: <don't> [/] don't choke me ."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//todmt1.cha
HSLLD/HV1/MT//jasmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: tell me if you like that .', "*MOT: that is something new I'll get more of it if you like .", '*MOT: try these here .', '*MOT: these are called <&m> [//] Chi beef turnovers .', "*MOT: they're kind of hot so be careful .", '*CHI: &=yelps .', '*MOT: I told [!] you to blow [!] on it .', '*CHI: ow !', '*MOT: let it cool .', '*MOT: eat your potatoes .', '*MOT: xxx .', '*CHI: xxx mama .', '*MOT: hm: ?', '*MOT: you can have chicken tomorrow .', '*CHI: what Mom ?', "*MOT: we're having chicken tomorrow .", '*CHI: chicken ?', '*MOT: mhm .', '*MOT: I have_to defrost it .', '*CHI: xxx .', "*MOT: so what'd you xxx .", '*CHI: Momma .', '*MOT: what ?', '*CHI: this is a big plate Mom .', '*CHI: this is a big fat plate .', "*MOT: it's not a big plate it's a medium size plate .", '*CHI: what Mom ?', "*MOT: it's not a +...", '*CHI: what Mom ?', '*MOT: nothing .', '*CHI: what xxx .', '*CHI: what ?', "*MOT: <it's a big> [//] it's not a big size plate it's a medium (.) size plate .", '*CHI: xxx .', '*MOT: xxx have you been learning any stories in <&s> [/] day care ?', '*CHI: what Mom ?', '*MOT: have you xxx in school ?', '*CHI: yeah .', '*MOT: can <you tell me one> [>] ?', '*CHI: xxx [<] xxx .', '*MOT: can you tell me a story ?', '*CHI: &-um xxx .', '*MOT: and the horsie too ?', '*CHI: yeah !', '*CHI: and he was walking on his feet .', '*CHI: xxx and the xxx kicked [//] kicked in the face Mom .', '*MOT: really ?', '*CHI: yeah Mom .', '*MOT: hold on let me hang up the phone .', '*CHI: &=coughs .', '*CHI: xxx .', "*MOT: what's that .", '*MOT: lemme [: let me] see .', '*CHI: the mail comed@n .', '*MOT: eat the potatoes .', '*MOT: these are good .', '*MOT: so what happened to the horse and the feet ?', '*CHI: what Mom ?', '*MOT: what happened to the horse ?', '*CHI: he broke his xxx .', "*MOT: how'd [: how did] he xxx .", '*CHI: xxx table .', '*MOT: did he get hit by a car ?', '*CHI: xxx .', '*MOT: oh he took xxx .', '*CHI: no .', '*CHI: uhhuh .', '*CHI: he kicked xxx .', '*CHI: xxx .', '*CHI: what Mot ?', '*CHI: xxx kicked xxx broked@n his tummy off .', '*CHI: he xxx broked@n his paw [?] .', '*MOT: was the horsie a bad horsie or +/.', '*CHI: he xxx .', '*MOT: what do you say ?', '*MOT: what do you say ?', '*CHI: bad [?] please .', '*MOT: now what do you say ?', '*CHI: no milk .', '*CHI: xxx .', '*MOT: xxx ?', '*MOT: you kicked a ball ?', '*MOT: Uncle Richard likes to play soccer .', '*CHI: what Mama ?', '*MOT: Uncle Richard likes to play soccer .', '*CHI: <I> [/] I like to play soccer outside Mom .', '*MOT: you gonna eat your xxx .', '*CHI: like that mom xxx and I broke my foot like that .', '*MOT: did you ?', '*MOT: &=laughs .', '*CHI: I did Mom .', '*CHI: I did broke my foot off .', '*MOT: xxx .', '*CHI: xxx .', '*MOT: if you broke your foot Chi <you would know it> [>] .', '*CHI: xxx [<] xxx !', "*MOT: eat your supper and I'll hang up .", '*CHI: xxx go like whoa xxx I bumped my xxx I bumped my head xxx whoa .', "*MOT: <isn't it> [//] doesn't it stink to be so &-um (.) popular Chi ?", '*MOT: everybody [!] wants to talk to you everybody .', '*CHI: Mom !', '*MOT: but who xxx know .', "*MOT: tell you what you're going to be doing tomorrow .", "*CHI: I'm going to paint Mom .", "*MOT: you're going to paint ?", '*CHI: ah .', "*CHI: you love to paint don't you ?", '*CHI: xxx .', "*CHI: I'm all done Mom .", "*MOT: no you're not .", '*CHI: uhhum .', '*MOT: I want to see you eat a little more Chi xxx .', '*CHI: what ?', '*CHI: what Mom ?', '*CHI: xxx Mom .', '*CHI: Mom !', '*MOT: xxx probably be playing in the yard again .', '*CHI: &=whines .', "*CHI: I'm xxx .", '*CHI: (..) are you all the way done ?', '*MOT: huh ?', '*CHI: are you all the <way done> [>] .', "*MOT: <no you're not> [>] Chi .", '*CHI: <I want xxx>[<] .', '*MOT: hm: ?', '*CHI: I want xxx .', '*MOT: where are you going ?', '*CHI: xxx .', '*MOT: huh ?', "*CHI: I'm almost done .", "*CHI: I'm all done .", '*CHI: xxx .', '*CHI: xxx &=yells !', '*CHI: xxx all done mom .', "*MOT: no you're not .", '*CHI: all [!] done [!] all [!] done !', "*MOT: you stay out back (be)cause you're coming in in fifteen minutes .", '*CHI: okay Mom .', '*MOT: bye .', '*CHI: okay !']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jasmt1.cha
HSLLD/HV1/MT//paumt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: don't eat your sausages .", '*MOT: just eat everything else in front of you .', "*SIS2: I don't like them .", "*MOT: don't eat [!] it then !", '*SIS2: zzz .', '*MOT: that is all it is is sausages .', '*MOT: God bless you .', '*SIS2: but I do not like it .', "*MOT: don't eat [!] them !", '*MOT: just move (th)em out of the way .', '*MOT: alright ?', "*MOT: that's all it takes is to move (th)em .", '*MOT: alls it is is sausages .', '*MOT: you like sausages .', '*CHI: I like them [>] .', '*MOT: <eat up> [<] Chi you like this stuff .', "*MOT: Daddy's getting your iced tea for you .", '*SIS2: zzz .', '*MOT: Jessica !', '*FAT: she want milk ?', '*MOT: do you want milk or iced tea Jessica ?', '*SIS2: xxx .', '*MOT: iced tea she said .', '*CHI: xxx .', '*MOT: alright Chi calm down .', '*FAT: sit up on the chair please (.) .', '*FAT: all the way .', "*SIS2: I don't want to .", '*MOT: you have_to sit up right to eat .', '*SIS2: Ma I want xxx I want &-uh I (..) give them to me (.) .', '*CHI: give me mine .', '*SIS2: zzz .', '*MOT: stop fighting !', "*PLA: that's Chi's .", "*MOT: that's Chi's .", '*MOT: get your hand out of there .', '*CHI: Ma (.) Daddy xxx over me .', '*SIS2: xxx [>] .', '*CHI: xxx [<] .', '*FAT: you want anything Kimberly ?', '*SIS: yeah .', '*FAT: what does Mummy want ?', "*MOT: Mummy's having milk .", '*SIS2: Mummy !', '*MOT: give [?] you a drink .', '*MOT: <Wilfred [?]> [>] !', '*SIS2: xxx [<] .', '*SIS2: I like anything [>] .', '*MOT: <Larry xxx> [<] .', '*CHI: then what do you want Dad ?', '*MOT: xxx xxx .', '*CHI: xxx I see Michael [?] Daddy ?', '*MOT: sit down .', '*MOT: sit .', '*MOT: sit [>] .', '*FAT: give [<] me a minute I will .', '*FAT: xxx .', "*MOT: I'll get the the sausage xxx you sit down .", '*CHI: I want the bigger one .', '*SIS: xxx Daddy please .', '*FAT: you can have some more xxx (.) .', '*FAT: alright ?', '*SIS2: nanapkin@f ?', '*FAT: xxx ?', '*SIS2: nanapkin@f !', "*MOT: you're gonna get a nanapkin@f .", '*SIS: xxx .', "*MOT: you're something Chi .", '*CHI: what [>] ?', '*SIS: xxx [<] .', '*MOT: xxx .', '*FAT: xxx .', "*PLA: Dad I don't want to eat that .", '*FAT: xxx [>] .', '*MOT: xxx [<] .', '*PLA: maybe tomorrow can I have them ?', '*FAT: yes [>] .', '*SIS2: <Daddy> [<] I xxx [>] .', '*MOT: <what do you want Jessica> [<] ?', '*FAT: xxx big glass .', '*MOT: get the lasagne and put it in a bowl Kevin .', "*CHI: don't eat .", '*SIS2: Mommy !', '*MOT: that is xxx .', '*SIS2: oh xxx .', '*SIS2: Daddy !', '*SIS2: I need milk !', '*MOT: iced tea .', "*MOT: you're drinking iced tea not milk .", '*SIS2: I want milk !', '*MOT: xxx .', '*MOT: xxx yourself a brownie .', '*SIS2: baba@b ba@b ba@b ba@b !', '*FAT: has Jess been a good girl today ?', '*FAT: huh ?', '*CHI: she went to the bath+room in my underwear .', "*MOT: she didn't .", '*CHI: xxx .', '*MOT: she used the toilet .', "*FAT: that's very good .", '*SIS: but she just missed the toilet .', '*FAT: xxx .', "*CHI: she's gotta be a bad girl [!] .", '*SIS2: zzz [>] .', "*FAT: <well she's not bad girl> [<] .", "*MOT: she's just learning .", "*MOT: you learned how to [///] she's learning how to do it now .", '*SIS2: zzz .', '*CHI: sit down [!] and do it .', '*SIS2: yeah [>] .', "*FAT: <you're okay> [<] .", '*CHI: and I wipe my bum [!] off .', '*FAT: good for you .', '*FAT: do you want me to teach you how to do that ?', '*SIS2: zzz .', '*MOT: xxx .', '*SIS2: zzz .', '*FAT: alright .', '*SIS2: Daddy !', '*PLA: she tried to xxx [>] .', '*FAT: yeah [<] ?', '*FAT: you want some more ?', '*MOT: milk ?', '*FAT: milk now ?', '*FAT: okay .', "*MOT: here's your iced tea Kevin .", "*MOT: drink it (.) or I'm taking it away .", '*SIS2: xxx .', '*FAT: how is your lasagna ?', '*SIS: good but the xxx .', "*MOT: that's it .", "*MOT: you're not getting any more Kevin .", '*SIS2: zzz .', '*MOT: where are you going ?', '*PLA: going to the bath+room .', '*FAT: alright .', '*SIS2: Daddy (.) I <want tea> [>] .', '*FAT: no [<] .', "*FAT: no I'll tell you .", "*FAT: when you want a little drink you ask Mommy and she'll give you a little drink (.) then we'll put the glass away .", '*FAT: okay ?', '*MOT: want some iced tea to drink ?', '*MOT: huh ?', '*MOT: yes ?', '*MOT: put your foot off the table .', '*SIS2: zzz .', "*MOT: that's it .", '*SIS2: xxx xxx tea !', '*FAT: are you full ?', '*SIS2: zzz .', '*CHI: <xxx xxx> [>] .', '*SIS2: <xxx xxx> [<] .', '*MOT: I knew it !', '*SIS2: zzz .', "*MOT: you're not getting anything else to drink at supper time .", '*MOT: never !', '*FAT: alright .', '*MOT: alright .', "*MOT: you're the one that's all soaked [!] (.) .", '*MOT: oh +...', '*SIS2: Daddy ?', '*SIS2: iced tea (.) ?', '*SIS2: Mummy ?', '*SIS2: iced tea ?', '*FAT: xxx [>] .', '*MOT: <eat [!] Kevin> [<] .', "*MOT: you're not getting anymore .", '*SIS2: I need iced tea !', '*MOT: what did I just say ?', '*MOT: no !', "*CHI: what's this [!] stuff ?", '*MOT: cheese .', "*FAT: that's cheese .", '*CHI: why [/] why (di)d you put some cheese in here ?', "*SIS: because that's how you make it .", '*CHI: how do you make it ?', '*FAT: take cheese and tomato sauce and meat .', '*PLA: and two eggs .', "*FAT: <uhhuh that's right (.)> [>] .", '*SIS2: <Mommy please> [<] ?', '*FAT: eggs [>] .', '*SIS2: <Mommy> [<] ?', "*MOT: be quiet and eat your supper or you're going to bed .", '*FAT: who do you think xxx cheeses ?', '*SIS2: shut up !', '*FAT: supper .', '*SIS2: supper .', '*FAT: supper .', '*SIS2: Daddy .', '*MOT: eat your supper !', '*SIS2: no !', "*MOT: you're going right to bed !", '*SIS2: no !', '*CHI: xxx .', '*CHI: yeah .', "*CHI: I'm good at xxx .", '*CHI: I can [/] I can sing god god heaven heaven .', '*CHI: Mommy I did a handstand !', '*CHI: zzz [>] .', '*MOT: <you what> [<] ?', '*CHI: I did a handstand .', '*SIS: Chi !', '*MOT: xxx .', '*CHI: handstand .', '*MOT: testing [?] .', '*CHI: handstand .', '*CHI: still testing .', '*SIS: testing [!] .', '*MOT: what did you find in the backyard today Chi ?', '*CHI: frogs [>] .', '*PLA: frogs [<] .', '*PLA: a frog .', '*CHI: <two frogs> [>] .', '*PLA: <I set mine> [<] free .', '*MOT: <did you really> [>] ?', '*FAT: <xxx xxx> [<] ?', '*CHI: I got two frogs .', '*PLA: one was all grayish (.) the one you caught the other day ?', '*PLA: Chi <threw his football>[?] over the fence xxx .', '*PLA: I told him go get it .', '*CHI: and I went to get it and Danny said xxx and pout and pout and pout .', '*CHI: xxx Danny says go xxx .', '*FAT: hm: ?', '*CHI: go right back through this spaghetti .', '*PLA: xxx .', "*CHI: I'm not gonna never <go o(ver)> [//] go over there again .", '*SIS: just above the wall .', '*FAT: how did Jess look over ?', '*CHI: a xxx .', '*PLA: how many times I got it in my leg ?', "*PLA: xxx now I can't pick anything up .", '*SIS2: napkin .', '*MOT: xxx napkin .', '*CHI: is she all done ?', "*MOT: you're making a mess Jess .", '*MOT: push it all to the middle of the plate please (.) .', '*MOT: push your food all to the middle of the plate (.) .', '*MOT: with your spoon [!] .', '*MOT: <with your sp(oon) [/]>[>] .', '*FAT: xxx [<] .', '*MOT: give it to me .', '*MOT: I said push it to the middle .', "*MOT: this isn't pushed to the middle .", "*FAT: that way it doesn't fall on the floor .", '*SIS: mm .', "*MOT: I don't want that .", "*SIS2: I don't want that .", '*CHI: xxx xxx for her ?', '*SIS2: xxx (.) .', '*MOT: this is a xxx (un)til everybody spills .', '*SIS2: yeah .', '*MOT: all done ?', '*CHI: after <everybody finished> [/] everybody finished can I go outside ?', '*MOT: no .', "*FAT: we'll see .", '*MOT: you know why ?', '*CHI: why ?', '*MOT: the mosquitoes are too [/] too much .', '*MOT: xxx .', '*CHI: yeah .', '*MOT: xxx .', '*CHI: xxx the water ?', '*MOT: xxx xxx .', '*SIS: <Daddy [/]> [>] ?', '*PLA: <when [?] Daddy> [<] went [?] outside (.) ?', '*PLA: sorry (.) .', '*PLA: Daddy !', "*CHI: I'm getting indigestion .", '*PLA: Daddy I +/.', '*FAT: xxx ?', '*FAT: why thank you !', '*CHI: I got indigestion [>] .', '*CHI: <Daddy> [<] it xxx by everybody gonna .', '*FAT: yeah ?', '*CHI: you <gonna eat> [/] gonna eat it ?', '*FAT: are you all finished here ?', '*SIS: yeah .', "*CHI: you're gonna eat the carrots ?", '*PLA: <they can eat anything> [>] !', '*SIS2: <you[?] can eat mine Daddy> [<] .', '*CHI: everybody shut [!] up I am talking to (.) I am xxx (.) .', '*FAT: who are you talking to ?', '*CHI: Dad .', '*FAT: okay .', '*CHI: Dad you know what ?', '*CHI: the beetles will bite us <xxx xxx [/]>[>] .', '*SIS: xxx [<] .', '*CHI: xxx [>] .', "*MOT: <if you don't want it> [<] throw <in the trash> [>] .", '*CHI: beetles [<] <eating it> [/] eating xxx and they gonna <eat the xxx> [>] (.) right Dad ?', '*SIS: xxx [<] .', '*FAT: yes .', '*CHI: Dad .', '*CHI: xxx [>] .', "*PLA: <I don't want that> [<] .", '*CHI: I told [/] I told you [>] that they <walk sideways> [?] xxx xxx mosquitoes eat frogs xxx [!] so [/] so mosquitoes can [/] can make a hole !', '*SIS: xxx [<] .', '*PLA: <xxx xxx> [>] .', '*CHI: <xxx xxx> [<] .', '*FAT: Playmate uhuh .', "*FAT: let's not play with our supper .", '*SIS2: zzz [>] .', "*CHI: <I'm not playing with my [!] supper> [<][>] !", '*FAT: <xxx say your doing> [<] .', "*CHI: <I'll throw mine away> [>] .", '*SIS2: zzz [<] .', '*MOT: stop whining .', '*SIS2: zzz [>] .', '*FAT: xxx [<] .', '*CHI: whoops .', '*CHI: it dropped .', '*PLA: xxx [>] .', "*MOT: <don't cry [?]> [<] .", "*FAT: yeah that's Jessica's .", '*FAT: just leave it alone .', '*CHI: xxx .', '*CHI: Jessica come in here .', "*CHI: you put your Dad's in the sink .", '*SIS2: no .', '*CHI: I burpded@n .', '*CHI: I saw them over here .', '*MOT: xxx xxx .', '*CHI: what ?', '*FAT: <how are we doing> [>] ?', '*CHI: xxx [<] ?', "*PLA: <why don't you &-um> [<] pelt [!] it off ?", '*SIS: <Daddy want xxx salad> [>] ?', '*PLA: <xxx xxx> [<] .', '*CHI: that was in my xxx xxx in my milk !', "*FAT: no <there's nothing in your milk> [>] .", '*SIS: <Daddy> [<] more (.) <I need> [/] <I need> [>] something here .', '*FAT: uhuh [<] .', '*CHI: Daddy (.) <I need> [//] <I> [/] I (.) give me the ketchup .', '*SIS: can I go out and play ?', '*FAT: yeah yeah yeah .', '*FAT: xxx you have it now ?', "*SIS: no I didn't .", '*SIS: I had a shovel in the xxx .', '*FAT: oh did you ?', '*SIS: yeah (.) .', '*PLA: put it on the xxx .', '*FAT: how are we doing Chi ?', '*CHI: good .', '*MOT: everybody almost finished ?', "*CHI: I'm not .", '*MOT: okay .', "*MOT: come on Chi where you're supposed to .", '*SIS2: Mommy .', '*CHI: <Mommy xxx why did you guys shut that off> [>] ?', '*SIS2: <Mommy xxx> [<] .', '*MOT: it is [!] on .', '*FAT: it is [!] on .', '*SIS2: xxx [>] .', '*CHI: <its off[!]> [<] .', "*MOT: it's on [!] .", "*CHI: I can't hear [!] it .", "*MOT: of course you can't hear it .", '*CHI: can I see ?', "*MOT: it's on .", "*CHI: I can't hear it .", "*MOT: I know you can't hear it .", '*SIS: you have_to go all the way over there .', "*MOT: no he doesn't have_to come all the way over here .", '*PLA: if you want to hear the water .', '*PLA: see ?', '*CHI: testing testing .', '*CHI: zzz .', '*MOT: go sit down and finish up .', '*FAT: eat your supper .', '*PLA: he went over there and said testing testing .', '*CHI: I did xxx .', "*MOT: your brother's something xxx you're getting down <xxx xxx> [>] .", '*CHI: xxx [<] .', '*SIS2: zzz [>] .', '*CHI: awoh [<] .', '*CHI: I said it !', '*CHI: this is boring .', "*MOT: as soon as you guys finish I'm gonna shoot to the store .", '*CHI: what (.) ?', '*CHI: may I go to the store with you ?', '*MOT: no .', '*CHI: why ?', '*MOT: you already went once with Dad .', '*PLA: can I go with you ?', "*MOT: no you're not coming either .", '*CHI: where you going ?', "*MOT: I'm going to the store I said .", '*CHI: why do you have xxx ?', "*MOT: I'm gonna mail something .", '*CHI: xxx .', "*MOT: I can't [!] mail this so I'll have_to wait until tomorrow .", '*FAT: why ?', '*MOT: xxx .', '*SIS2: Mommy xxx xxx can I get water [?] ?', '*CHI: <xxx go out> [>] ?', '*FAT: <where are you going> [<] ?', '*MOT: nobody is going outside after supper .', '*MOT: the mosquitoes are too much .', '*CHI: Mom mosquitoes have [!] to eat us xxx [>] .', "*MOT: no [<] mosquitoes don't have_to eat anybody .", "*MOT: they're a nuisance .", "*CHI: there's one [!] on me [!] .", "*MOT: let's hope that's all [!] you get .", "*MOT: you're lucky .", '*SIS2: zzz [>] .', '*MOT: <xxx [/]> [<] .', '*SIS2: Mommy .', '*FAT: yeah .', '*SIS2: add cheese .', '*CHI: <Daddy needs a bumper [!] and some shocks[!]>[?] .', '*FAT: xxx .', "*MOT: there's a bag of shoes in there if you want xxx xxx put it upstairs in the attic or something .", "*PLA: no don't put it in the attic [>] .", "*MOT: <you don't> [<] need [!] it .", "*MOT: there's enough shoes [!] in this house to last us a lifetime .", "*CHI: Mommy you didn't <xxx any> [>] .", '*MOT: <xxx shoes> [<] .', '*CHI: Daddy can I go up in the xxx (.) Daddy <do you want to go> [//] do want to go up into our attic ?', '*FAT: alright hey you get xxx [>] .', "*MOT: <he's> [<] not doing it today so xxx .", "*CHI: <I don't> [>] [///] xxx to do without the supper .", '*MOT: <go in the other room> [<] .', '*MOT: go on .', '*CHI: right .', '*MOT: maybe one or two pairs in the morning .', '*CHI: keep the xxx .', '*CHI: keep the xxx .', "*MOT: I'm trying to get rid of shoes .", '*CHI: why ?', '*SIS: xxx[>] .', '*MOT: xxx [<] .', '*CHI: what ?', '*SIS: it helps being a girl ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//paumt1.cha
HSLLD/HV1/MT//chamt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: eat up .', "*CHI: that [?] don't (.) right there ?", '*MOT: what ?', '*CHI: because (.) because [?] (.) is right there ?', '*MOT: what did you do today Sandy ?', '*SAN: go on trip .', '*MOT: where ?', '*SAN: swimmin(g) .', '*MOT: yeah ?', '*SAN: yeah yeah .', '*MOT: you go swimmin(g) any more Charlie ?', '*CHI: no I xxx [>] <Mom(my)> [/] <Mom(my)> [/] Mommyknow what ?', '*SAN: xxx [<] .', '*MOT: what ?', "*SAN: we're havin(g) to break off swimmin(g) now .", '*CHI: Mom [/] .', '*SAN: know what ?', '*MOT: <just a minute Charlie> [>] .', "*SAN: <I'm just kidding> [<] .", '*CHI: <Mom> [>] .', "*SAN: <I'm> [<] just kidding .", '*MOT: alright .', "*MOT: well don't kid .", "*MOT: <ju(st) [?] > [//] that's lying .", '*CHI: <Mom> [>] .', '*SAN: xxx [<] (.) &-um next year .', '*SAN: and then go .', '*CHI: know what <Mom> [>] ?', '*MOT: what [<] ?', '*CHI: know what ?', "*CHI: know why I ain't goin(g) no more (s)wimmin(g) lessons ?", '*CHI: (be)cause the <xxx [/] > [>] .', '*MOT: use [<] your fork .', '*MOT: <see you dropped xxx [/] > [>] .', '*CHI: <xxx the other> [<] one is out (.) from the plug [?] .', '*MOT: yeah [>] ?', "*CHI: <and it's> [<] way down (.) .", "*CHI: that's why (.) .", '*CHI: and <going to> [/] going t(o) (.) to plug (th)em up and then it come xxx [>] xxx go down .', '*MOT: <what are you eatin(g)> [<] Charlie (.) ?', '*MOT: Charlie what are you eatin(g) ?', '*CHI: peas .', '*MOT: peas +...', '*CHI: peas .', '*MOT: ham +...', '*CHI: ham .', '*MOT: and what else ?', '*MOT: buttered noodles ?', '*CHI: buttered noodles .', '*MOT: butter +...', '*CHI: butter .', '*MOT: noodles .', '*CHI: noodle .', '*CHI: noodle .', '*MOT: eat your ham .', '*MOT: so what else you do ?', '*SAN: &-uh (.) <xxx [/] > [>] .', '*MOT: <do you go> [<] today ?', '*SAN: yep .', '*CHI: the other window broken (.) xxx because (.) one of them broken (.) and xxx .', '*MOT: xxx Sandy .', '*SAN: xxx .', '*CHI: xxx broken too .', '*CHI: Mom ?', '*MOT: what ?', '*CHI: could I put xxx lemon in there ?', '*MOT: xxx [>] .', '*SAN: xxx [<] good .', '*CHI: I <put more [?] lemon in> [>] there .', '*SAN: xxx [<] .', '*CHI: zzz .', '*CHI: Mom ?', '*MOT: what ?', '*CHI: I put more lemon in there .', '*MOT: no (.) drink that first .', '*CHI: xxx .', '*SAN: zzz .', '*CHI: zzz .', '*MOT: mm .', '*SAN: why you sit in that chair ?', '*MOT: huh ?', '*SAN: in this chair .', '*SAN: why you sit in this chair ?', '*MOT: (be)cause .', '*CHI: not for me .', '*MOT: why ?', '*MOT: <this is> [>] my chair .', '*CHI: <xxx [/] > [<] and that one .', '*SAN: that used to been my chair .', '*CHI: what ?', '*MOT: uhhuh (.) .', '*MOT: who used to sit with Sandy ?', '*SAN: <Pop> [>] .', '*MOT: <sittin(g)> [<] .', '*MOT: who used to sit where [?] Sandy sittin(g) ?', '*SAN: you .', '*CHI: you <xxx chair> [>] .', '*MOT: uhuh [<] .', '*MOT: you used to sit there .', '*MOT: it was you +...', '*CHI: I wan(t) ta sit there [>] .', '*MOT: you [<] (.) me (.) Sandy +...', '*CHI: xxx [/] .', '*SAN: Daddy +...', '*MOT: yeah .', '*CHI: zzz (.) .', '*CHI: no .', '*CHI: xxx [>] there .', '*MOT: <eat up> [<] .', '*SAN: Mommy you (.) got sit over here .', '*MOT: like the ham ?', '*SAN: and Charlie +...', '*SAN: uhhuh .', "*MOT: how's the ham Charlie ?", '*CHI: fine .', '*MOT: fine not good ?', '*CHI: no (.) fine .', "*MOT: Sandy that's enough juice I said .", '*MOT: 0 .', '*MOT: xxx hot .', "*CHI: not for me it isn't .", '*MOT: Charlie ?', '*CHI: xxx a little (.) .', '*CHI: (o)kay ?', '*MOT: for a little .', '*CHI: (o)kay (.) .', '*CHI: xxx .', "*MOT: Charlie you're gonna spill it .", '*CHI: xxx .', '*MOT: alright Charlie I got ta open the drawer .', '*MOT: put it down .', '*CHI: xxx (.) .', '*CHI: I opened it Mom !', '*MOT: good .', '*CHI: you xxx .', '*MOT: okay Charlie .', "*CHI: that's it .", '*CHI: I did it a little .', '*MOT: put it behind your plate .', '*CHI: xxx (.) in the middle ?', '*MOT: yeah .', '*CHI: this the middle (.) ?', '*CHI: yeah [>] .', '*MOT: xxx [<] .', '*CHI: I got xxx you [/] you already (.) .', '*CHI: xxx .', '*CHI: Mommy turn it off ?', '*MOT: what ?', '*CHI: oh this cames@n off .', '*CHI: xxx comes off .', '*MOT: the light ?', '*CHI: yeah <just came [/] > [>] .', "*MOT: no [<] (.) I think that's how it works honey .", '*MOT: just eat .', '*MOT: come on .', '*MOT: eat your food .', '*CHI: <then it come> [//] after the (.) light comes on then it comes back on .', '*CHI: know that ?', "*SAN: haha you don't got one .", '*SAN: we get two .', '*CHI: xxx we got two .', '*CHI: <what &d> [/] what these [>] ?', '*SAN: xxx [<] .', '*CHI: and this ?', '*CHI: and [>] she gots@n one .', '*MOT: yeah [<] .', '*SAN: haha .', '*CHI: haha you got one .', '*CHI: we gots@n two .', "*SAN: no don't say that .", "*SAN: it hurts Mommy's feelings .", '*SAN: right Mommy ?', '*SAN: hm: ?', '*SAN: zzz .', '*MOT: no .', "*MOT: <(be)cause> [<] I willn't buy (th)em .", '*SAN: <xxx [/] > [<] .', '*MOT: haha haha .', '*CHI: now that hurt my feelings !', '*MOT: zzz .', '*SAN: yeah it hurts my feelings too .', '*MOT: did you go out today (.) Sandy (.) ?', '*MOT: hm: ?', "*SAN: I know I didn't go swimmin(g) (.) lessons (.) .", "*SAN: I'm not goin(g) for a long long time .", '*SAN: (un)til I be in first grade .', '*MOT: use your fork Charlie .', '*SAN: (un)til <I be in [/] > [>] .', '*MOT: <use your> [<] fork !', "*SAN: (.) next year they're going <swimming lessons> [>] ?", '*MOT: <gi(ve) me> [<] the juice .', '*CHI: no .', '*MOT: well [?] use your fork .', '*MOT: <say okay Mommy> [>] .', '*SAN: <know what> [<] ?', '*CHI: xxx after I xxx .', '*MOT: what ?', '*CHI: xxx .', '*SAN: Mom .', "*SAN: <I can't go> [//] I'm not going swimming lessons next year (be)cause I'm gonna be in first grade .", '*MOT: so ?', '*MOT: <xxx [/] > [>] .', "*CHI: <and I don't wan(t) (t)a> [<] go swimming lessons .", '*CHI: know why ?', '*MOT: why ?', '*MOT: you need to learn how to swim .', "*SAN: I don't know how to swim .", "*CHI: you don't know how to (s)wim (.) .", '*CHI: next year when I be in first grade (.) I <xxx [/] >[>] .', "*SAN: I'll be next year [<] .", '*CHI: huh [>] ?', '*SAN: <swimming [/] > [<] .', '*CHI: <you know what> [>] ?', "*SAN: I'll be next year [<] .", '*CHI: Mom ?', '*MOT: what ?', "*CHI: I'm bigger (be)cause <I> [/] I went in in the (.) (s)chool that mean I'm bigger .", '*MOT: yeah ?', "*CHI: that (.) mean I'm know how to (s)wim .", "*SAN: I'm bigger than you .", "*CHI: I'm bigger too !", "*CHI: (be)cause [?] I'm in a new (s)chool !", "*MOT: yeah you're gettin(g) big Charlie .", '*CHI: yeah because I went to the new school .', '*MOT: yeah this &-um +...', "*MOT: three more days (.) Daddy's gonna take you out (.) to the park (.) or the zoo .", '*SAN: xxx [>] .', '*CHI: <yeah I wan(t) (t)a go to the> [<] (.) zoo !', "*MOT: we're gonna go over your school things Sandy .", '*SAN: no .', '*MOT: eat up (.) .', "*MOT: Mommy's finished .", '*CHI: now I can do that .', '*MOT: Mommy finished .', "*MOT: Sandy's almost done Charlie .", '*CHI: I almost finished too .', '*MOT: are you ?', '*CHI: yeah .', "*CHI: I'm almost .", '*MOT: almost (.) .', '*MOT: (o)kay you still got a ways .', '*CHI: you have the ways .', '*CHI: haha .', "*CHI: I don't got no more ways (.) .", '*CHI: Mommy ?', '*MOT: what ?', '*MOT: very good .', '*MOT: how (di)d your hands get like that ?', '*SAN: xxx .', "*CHI: I don't want any more .", '*MOT: yes you need to eat a little more .', "*MOT: we're not leaving .", "*MOT: <we're staying right [/] > [>] .", '*CHI: <I just ate> [<] a little more !', "*MOT: no you're gonna eat some more .", "*MOT: that's not enough !", '*MOT: give me your hand Sandy .', '*SAN: look_it Mom .', '*SAN: <people [/] > [>] .', '*MOT: xxx [<] .', "*MOT: it don't come off .", '*SAN: people did that to my shirt .', "*SAN: and I said I didn't like it anyway .", '*MOT: gi(ve) me your other hand .', '*MOT: <xxx hand> [>] .', '*SAN: xxx [<] like this .', "*MOT: so (it'll) come off .", '*MOT: Charlie sit up neat !', '*CHI: I ate a little more meat [>] !', '*MOT: wait [<] .', '*MOT: stay like that (.) Sandy .', '*SAN: zzz .', "*MOT: Sandy see you don't listen to me !", '*SAN: I xxx [>] .', '*MOT: <leave it alone> [<] !', '*SAN: zzz .', '*SAN: zzz [>] .', '*MOT: <Charlie (.) eat> [<] .', '*MOT: <sit down and eat> [<] .', '*SAN: zzz [>] .', '*CHI: <Mom I ate a little more meat> [<] .', '*MOT: <no eat> [>] .', "*MOT: <<or you're not ge(tting)> [//] alright no dessert>[>] .", "*MOT: <you don't get dessert (.) if you don't eat>[>] .", '*MOT: <you know that> [>] .', '*SAN: zzz [<] .', '*CHI: I just had a little more meat !', '*MOT: no .', '*MOT: well eat more peas and buttered noodles .', "*CHI: I don't like (.) peas and xxx (.) <butter xxx>[>] .", '*MOT: <then eat> [<] that ham .', '*CHI: I ate <the mea(t)> [//] little more (h)am .', '*CHI: what .', '*MOT: Charlie what did I say ?', '*MOT: get up there .', '*MOT: now .', '*CHI: xxx meat !', "*MOT: I'm not givin(g) you no ice cream or anything later .", '*CHI: why ?', "*MOT: (be)cause you're not eating !", '*CHI: but I just ate <xxx [/] > [>] .', '*MOT: <me and> [<] Sandy ate everything !', '*MOT: I gave you as much as Sandy !', '*CHI: I ate more that (.) xxx [>] !', "*MOT: <that's enough> [<] juice Sandy !", '*CHI: zzz (.) .', '*CHI: can I ?', "*CHI: I'll have a little more [>] .", '*MOT: <gi(ve) me> [<] it .', "*SAN: now it ain't .", '*SAN: zzz .', '*MOT: sit down [>] !', '*CHI: xxx [<] more .', '*MOT: Charlie +...', '*SAN: Mommy .', '*MOT: Je(sus) +...', '*MOT: leave it alone !', '*CHI: you should have (h)elped me !', '*MOT: no <you sh(ould)> [//] yeah I should help you (.) !', '*MOT: drink it .', '*MOT: and eat .', '*CHI: put my [?] (.) little bit in xxx .', '*CHI: want me to turn it off ?', '*MOT: no +...', '*CHI: why ?', '*MOT: (be)cause .', '*CHI: Sandy <xxx [/] > [>] .', '*MOT: just [<] eat Charlie !', '*MOT: I want you to eat (.) !', '*MOT: I said eat your f(ood) +...', '*MOT: alright forget it .', "*MOT: you're not gettin(g) no dessert .", "*MOT: I'm givin(g) Sandy ice cream .", '*MOT: you are not [!] gettin(g) any .', '*CHI: Mom I just ate a little +...', '*CHI: Mommy !', '*MOT: I want you to eat more food .', "*MOT: you didn't eat much !", "*CHI: you didn't gi(ve) me that much (.) food .", '*MOT: sit and eat I said .', '*CHI: no .', '*MOT: get over there Charlie before [/] +...', '*CHI: zzz .', '*MOT: get on your chair I think !', '*CHI: zzz .', '*MOT: do you want dessert tonight ?', '*MOT: do you want to have ice cream later ?', '*MOT: then eat .', '*CHI: but xxx little +...', '*CHI: Mommy !', '*MOT: no you eat all the meat .', "*MOT: (be)cause you're not eatin(g) them <p(eas)> [/] peas or the buttered noodles (.) !", '*MOT: sit up and eat !', '*CHI: xxx .', '*MOT: going to bed early .', '*SAN: no .', '*MOT: yeah <Smartie [?] > [>] .', '*SAN: <I took> [<] a late nap today though .', '*CHI: Mom (.) .', '*CHI: Mom .', '*MOT: what ?', '*CHI: I <just (.) xxx> [>] .', '*SAN: <and you know I did yesterday too and I woke up late>[<] .', "*CHI: that's why I can stay up too .", '*MOT: feet up .', '*MOT: sit right .', '*MOT: sit [>] right .', '*CHI: zzz [<] .', '*CHI: oh .', '*CHI: zzz .', '*MOT: thank you .', "*CHI: I didn't put my finger in there .", '*SAN: he put his finger in there <Mommy> [>] .', '*MOT: <Charlie> [<] eat .', '*CHI: nuhhuh <I xxx [/] > [>] .', '*MOT: <just eat> [<] .', '*MOT: gonna wash up and put pajamas on and watch tv .', '*CHI: why ?', '*MOT: (be)cause .', '*CHI: why <xxx [/] > [>] .', "*SAN: (be)cause we're going to bed early tonight .", '*SAN: xxx [>] .', "*MOT: no [<] you're going to bed the same time .", '*CHI: zzz .', '*MOT: seven thirty .', "*SAN: no we're going bed [//] to bed early .", '*SAN: I can .', '*SAN: very early .', '*CHI: no xxx [>] .', '*SAN: xxx [<] Mommy can .', '*CHI: huh (.) ?', '*CHI: xxx .', '*CHI: she can .', '*SAN: quarter to five [?] .', '*SAN: midnight (.) wake .', '*SAN: uhuh .', '*CHI: Mom (.) xxx ever do you ever xxx stay up xxx midnight (.) ?', '*CHI: when I woke you up (.) &-um one night we stayed up (un)til midnight .', '*SAN: xxx <my xxx> [>] Mommy .', '*MOT: <eat up> [<] .', "*MOT: oh (.) it's (.) piece o(f) +...", '*MOT: eat it .', '*MOT: drink it (.) .', '*MOT: throw it away .', "*MOT: it don't matter .", '*MOT: good boy .', '*MOT: was that hard to do ?', '*CHI: yeah Mom yeah .', '*MOT: huh ?', '*CHI: now can I have xxx ice cream ?', "*MOT: no you don't get ice cream (un)til a little after Charlie !", '*CHI: why ?', '*MOT: (be)cause .', '*MOT: let me do your hands .', '*MOT: come here (.) .', '*MOT: come here !', '*CHI: oh .', '*CHI: zzz .', '*CHI: zzz .', '*MOT: oh (.) .', '*MOT: no pain today (.) ?', '*MOT: dry [>] your hands .', '*CHI: xxx [<] (.) .', '*CHI: yeah xxx [>] .', '*SAN: zzz [<] .', '*MOT: <Sandy> [//] Charlie .', '*MOT: dry your hands .', '*SAN: Charlie (.) were you finished it ?', '*CHI: zzz .', '*CHI: zzz .', '*SAN: xxx this one xxx ?', '*MOT: Sandy no .', '*SAN: he had too much .', '*MOT: you ate the same as he did !', '*SAN: yeah but look at his .', '*SAN: and his (.) <is full> [>] .', '*MOT: <(be)cause> [<] he drinks slower than you .', '*SAN: no (.) sometimes he drinks faster than me .', '*SAN: I <xxx [/] > [>] .', "*CHI: <I don't drink> [<] fast .", '*MOT: okay .', '*CHI: slow .', '*SAN: xxx .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//chamt1.cha
HSLLD/HV1/MT//gilmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: come on make some phone calls .', '*CHI: zzz .', '*MOT: <Bro there goes a fire hat > [>] .', '*CHI: zzz [<][>] .', '*MOT: <you always like hats well here > [<] .', '*MOT: here goes one .', '*MOT: xxx .', '*CHI: <zzz > [>] .', '*MOT: <xxx xxx > [<] .', '*MOT: oh !', "*MOT: doesn't he [?] look like a fireman huh ?", "*MOT: Chi that's an old lady's hat .", '*MOT: where they get that from ?', '*CHI: <zzz zzz > [>] .', '*MOT: <you like that xxx > [<] .', '*MOT: <she likes that [= the hat]> [>] .', '*CHI: <zzz > [<] .', '*MOT: she thinks this is funny .', '*CHI: <zzz > [<][>] .', "*MOT: <come on let's build some blocks Chi > [<] .", '*MOT: what about having some tea ?', '*CHI: eeee@b eehee@b .', "*MOT: come on let's get organized here .", '*MOT: <come on > [>] .', '*CHI: <eee@b> [<] eee@b eee@b .', '*CHI: zzz zzz .', '*CHI: <zzz > [>] .', '*MOT: <here Chi look xxx xxx > [<] .', '*MOT: xxx cooking .', "*MOT: she's always servin(g) me [!] tea (.) .", '*MOT: you going to do some cooking Chi (.) ?', "*BRO2: don't break it .", '*MOT: you gonna build something ?', '*BRO2: no !', '*CHI: you zzz .', '*MOT: okay Chi .', '*BRO2: ew you look ugly .', '*CHI: ew you look ugly !', "*BRO2: I don't .", '*MOT: see Bro is enjoying the toys more than you are .', "*CHI: that don't go in there .", '*INV1: you like the phone .', '*MOT: yeah he likes the phone .', '*MOT: see xxx they were [!] going like that huh ?', '*MOT: give Chi a call .', '*MOT: tell Chi to pick up her phone .', '*MOT: you like this hat .', "*MOT: I don't think they'll get back this [!] hat from you .", '*MOT: Chi do you like to build blocks ?', '*CHI: yeah .', '*BRO2: come on cook !', '*CHI: no I wanna build .', '*CHI: I wanna build .', '*BRO2: want some ?', '*CHI: zzz .', "*MOT: don't you want build something ?", '*MOT: come on .', "*CHI: don't (.) !", '*CHI: stop Bro !', '*BRO2: what did I do ?', '*CHI: you taking my stuff .', "*BRO2: it isn't yours .", '*CHI: xxx .', '*MOT: xxx xxx .', '*BRO2: xxx .', '*MOT: mhm .', "*BRO2: don't break it .", '*MOT: xxx .', '*CHI: zzz .', '*BRO2: xxx break it .', '*BRO2: told you not to break it .', '*CHI: already [?] did .', '*CHI: (wh)oo(ps) (wh)oo(ps) .', '*CHI: this [?] go in there .', '*CHI: xxx [!] (wh)oop(s) .', '*MOT: zzz .', '*CHI: okay .', '*BRO2: I want one of them [= blocks Chi is playing with] .', '*CHI: 0 .', '*BRO2: thank you .', '*CHI: zzz zzz .', '*CHI: here Bro .', '*MOT: where did he go ?', '*CHI: kitchen .', '*MOT: go get Bro .', '*MOT: what did you take (.) come here .', '*INV1: zzz .', '*MOT: come here .', "*MOT: don't swipe the toys .", '*MOT: come here .']
loading solution set
LINE NO ->  15
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  19
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  24
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  27
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  34
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  38
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  39
LINE NO ->  43
LINE NO ->  44
LINE NO ->  47
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  53
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  62
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  66
LINE NO ->  69
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  72
LINE NO ->  77
LINE NO ->  80
LINE NO ->  84
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  89
tea
tea tea 2
[('what', 'WP'), ('about', 'IN'), ('having', 'VBG'), ('some', 'DT'), ('tea', 'NN')]
['tea']
('food -> ', [['tea', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  93
LINE NO ->  96
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  100
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  106
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  110
LINE NO ->  114
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  117
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  120
tea
tea tea 2
[('she', 'PRP'), ('s', 'VBD'), ('always', 'RB'), ('servin', 'VBN'), ('g', 'NN'), ('me', 'PRP'), ('tea', 'IN')]
['tea']
('food -> ', [['tea', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  124
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  129
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  133
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  136
LINE NO ->  139
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  146
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  151
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  157
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  166
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  173
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  177
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  181
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  184
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  187
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  194
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  198
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  204
LINE NO ->  208
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  216
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  220
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  224
LINE NO ->  227
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  230
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  233
LINE NO ->  236
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  239
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  242
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  243
LINE NO ->  244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  246
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  249
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  252
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  253
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  257
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  260
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  263
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  266
LINE NO ->  269
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  273
LINE NO ->  276
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  283
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  287
LINE NO ->  289
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  292
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  308
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  312
LINE NO ->  315
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  319
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  322
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  325
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
loading solution set
calculating
set([(121, (36, 39)), (90, (29, 32))])
[((90, (29, 32)), '*MOT:\twhat about having some tea ?\n'), ((121, (36, 39)), "*MOT:\tshe's always servin(g) me [!] tea (.) .\n")]
set([(212, (-1, 5)), (54, (11, 14)), (240, (16, 21)), (247, (6, 9)), (152, (-1, 4)), (70, (-1, 4)), (118, (6, 9)), (293, (6, 9)), (264, (-1, 4)), (182, (-1, 4)), (228, (6, 11)), (158, (30, 34)), (115, (-1, 4)), (182, (30, 35)), (121, (6, 11)), (101, (6, 11)), (32, (23, 27)), (48, (41, 44)), (323, (22, 26)), (261, (-1, 5)), (320, (6, 10)), (221, (-1, 4)), (182, (6, 10)), (297, (-1, 4)), (97, (20, 23)), (195, (-1, 4)), (326, (6, 10)), (174, (-1, 4)), (323, (6, 11)), (258, (11, 16)), (188, (-1, 4)), (163, (-1, 4)), (170, (6, 10)), (130, (7, 12)), (16, (30, 35)), (284, (-1, 5)), (25, (24, 28)), (70, (35, 38)), (54, (24, 30)), (270, (11, 14)), (147, (7, 9)), (54, (-1, 4)), (170, (-1, 4)), (253, (6, 9)), (231, (-1, 2)), (152, (6, 8)), (316, (7, 10)), (134, (-1, 4)), (85, (32, 38)), (174, (44, 47)), (155, (-1, 5)), (125, (27, 34)), (107, (6, 9)), (290, (7, 12)), (85, (15, 20)), (48, (21, 25)), (25, (29, 32)), (237, (-1, 4)), (158, (-1, 4)), (35, (-1, 4)), (270, (-1, 4)), (188, (46, 49)), (228, (-1, 4)), (228, (12, 15)), (144, (6, 10)), (281, (6, 10)), (188, (42, 45)), (59, (-1, 4)), (140, (-1, 4)), (85, (6, 11)), (28, (6, 9)), (217, (6, 9)), (199, (6, 10)), (301, (-1, 4)), (32, (-1, 4)), (250, (7, 12)), (178, (17, 21)), (104, (7, 12)), (118, (-1, 4)), (90, (29, 32)), (16, (24, 29)), (63, (7, 10)), (209, (-1, 4)), (118, (10, 17)), (185, (20, 23)), (237, (20, 25)), (121, (40, 43)), (170, (24, 29)), (284, (51, 56)), (277, (6, 9)), (167, (20, 25)), (70, (29, 34)), (147, (-1, 5)), (121, (36, 39)), (231, (6, 10)), (309, (-1, 4)), (221, (6, 11)), (245, (7, 10)), (284, (29, 35)), (202, (15, 19)), (243, (6, 9)), (48, (-1, 4)), (25, (-1, 3)), (39, (6, 9)), (254, (6, 9)), (125, (-1, 4)), (195, (31, 37)), (101, (17, 20)), (305, (6, 13)), (323, (-1, 4)), (20, (6, 9))])
[((16, (24, 29)), '*MOT:\tcome on make some phone calls .\n'), ((16, (30, 35)), '*MOT:\tcome on make some phone calls .\n'), ((20, (6, 9)), '*CHI:\tzzz .\n'), ((25, (-1, 3)), '*MOT:\t<Bro there goes a fire hat > [>] .\n'), ((25, (24, 28)), '*MOT:\t<Bro there goes a fire hat > [>] .\n'), ((25, (29, 32)), '*MOT:\t<Bro there goes a fire hat > [>] .\n'), ((28, (6, 9)), '*CHI:\tzzz [<][>] .\n'), ((32, (-1, 4)), '*MOT:\t<you always like hats well here > [<] .\n'), ((32, (23, 27)), '*MOT:\t<you always like hats well here > [<] .\n'), ((35, (-1, 4)), '*MOT:\there goes one .\n'), ((39, (6, 9)), '*MOT:\txxx .\n'), ((48, (-1, 4)), "*MOT:\tdoesn't he [?] look like a fireman huh ?\n"), ((48, (21, 25)), "*MOT:\tdoesn't he [?] look like a fireman huh ?\n"), ((48, (41, 44)), "*MOT:\tdoesn't he [?] look like a fireman huh ?\n"), ((54, (-1, 4)), "*MOT:\tChi that's an old lady's hat .\n"), ((54, (11, 14)), "*MOT:\tChi that's an old lady's hat .\n"), ((54, (24, 30)), "*MOT:\tChi that's an old lady's hat .\n"), ((59, (-1, 4)), '*MOT:\twhere they get that from ?\n'), ((63, (7, 10)), '*CHI:\t<zzz zzz > [>] .\n'), ((70, (-1, 4)), '*MOT:\t<she likes that [= the hat]> [>] .\n'), ((70, (29, 34)), '*MOT:\t<she likes that [= the hat]> [>] .\n'), ((70, (35, 38)), '*MOT:\t<she likes that [= the hat]> [>] .\n'), ((85, (6, 11)), "*MOT:\t<come on let's build some blocks Chi > [<] .\n"), ((85, (15, 20)), "*MOT:\t<come on let's build some blocks Chi > [<] .\n"), ((85, (32, 38)), "*MOT:\t<come on let's build some blocks Chi > [<] .\n"), ((90, (29, 32)), '*MOT:\twhat about having some tea ?\n'), ((97, (20, 23)), "*MOT:\tcome on let's get organized here .\n"), ((101, (6, 11)), '*MOT:\t<come on > [>] .\n'), ((101, (17, 20)), '*MOT:\t<come on > [>] .\n'), ((104, (7, 12)), '*CHI:\t<eee@b> [<] eee@b eee@b .\n'), ((107, (6, 9)), '*CHI:\tzzz zzz .\n'), ((115, (-1, 4)), '*MOT:\t<here Chi look xxx xxx > [<] .\n'), ((118, (-1, 4)), '*MOT:\txxx cooking .\n'), ((118, (6, 9)), '*MOT:\txxx cooking .\n'), ((118, (10, 17)), '*MOT:\txxx cooking .\n'), ((121, (6, 11)), "*MOT:\tshe's always servin(g) me [!] tea (.) .\n"), ((121, (36, 39)), "*MOT:\tshe's always servin(g) me [!] tea (.) .\n"), ((121, (40, 43)), "*MOT:\tshe's always servin(g) me [!] tea (.) .\n"), ((125, (-1, 4)), '*MOT:\tyou going to do some cooking Chi (.) ?\n'), ((125, (27, 34)), '*MOT:\tyou going to do some cooking Chi (.) ?\n'), ((130, (7, 12)), "*BRO2:\tdon't break it .\n"), ((134, (-1, 4)), '*MOT:\tyou gonna build something ?\n'), ((140, (-1, 4)), '*CHI:\tyou zzz .\n'), ((144, (6, 10)), '*MOT:\tokay Chi .\n'), ((147, (-1, 5)), '*BRO2:\tew you look ugly .\n'), ((147, (7, 9)), '*BRO2:\tew you look ugly .\n'), ((152, (-1, 4)), '*CHI:\tew you look ugly !\n'), ((152, (6, 8)), '*CHI:\tew you look ugly !\n'), ((155, (-1, 5)), "*BRO2:\tI don't .\n"), ((158, (-1, 4)), '*MOT:\tsee Bro is enjoying the toys more than you are .\n'), ((158, (30, 34)), '*MOT:\tsee Bro is enjoying the toys more than you are .\n'), ((163, (-1, 4)), "*CHI:\tthat don't go in there .\n"), ((167, (20, 25)), '*INV1:\tyou like the phone .\n'), ((170, (-1, 4)), '*MOT:\tyeah he likes the phone .\n'), ((170, (6, 10)), '*MOT:\tyeah he likes the phone .\n'), ((170, (24, 29)), '*MOT:\tyeah he likes the phone .\n'), ((174, (-1, 4)), '*MOT:\tsee xxx they were [!] going like that huh ?\n'), ((174, (44, 47)), '*MOT:\tsee xxx they were [!] going like that huh ?\n'), ((178, (17, 21)), '*MOT:\tgive Chi a call .\n'), ((182, (-1, 4)), '*MOT:\ttell Chi to pick up her phone .\n'), ((182, (6, 10)), '*MOT:\ttell Chi to pick up her phone .\n'), ((182, (30, 35)), '*MOT:\ttell Chi to pick up her phone .\n'), ((185, (20, 23)), '*MOT:\tyou like this hat .\n'), ((188, (-1, 4)), "*MOT:\tI don't think they'll get back this [!] hat from you .\n"), ((188, (42, 45)), "*MOT:\tI don't think they'll get back this [!] hat from you .\n"), ((188, (46, 49)), "*MOT:\tI don't think they'll get back this [!] hat from you .\n"), ((195, (-1, 4)), '*MOT:\tChi do you like to build blocks ?\n'), ((195, (31, 37)), '*MOT:\tChi do you like to build blocks ?\n'), ((199, (6, 10)), '*CHI:\tyeah .\n'), ((202, (15, 19)), '*BRO2:\tcome on cook !\n'), ((209, (-1, 4)), '*CHI:\tI wanna build .\n'), ((212, (-1, 5)), '*BRO2:\twant some ?\n'), ((217, (6, 9)), '*CHI:\tzzz .\n'), ((221, (-1, 4)), "*MOT:\tdon't you want build something ?\n"), ((221, (6, 11)), "*MOT:\tdon't you want build something ?\n"), ((228, (-1, 4)), "*CHI:\tdon't (.) !\n"), ((228, (6, 11)), "*CHI:\tdon't (.) !\n"), ((228, (12, 15)), "*CHI:\tdon't (.) !\n"), ((231, (-1, 2)), '*CHI:\tstop Bro !\n'), ((231, (6, 10)), '*CHI:\tstop Bro !\n'), ((237, (-1, 4)), '*CHI:\tyou taking my stuff .\n'), ((237, (20, 25)), '*CHI:\tyou taking my stuff .\n'), ((240, (16, 21)), "*BRO2:\tit isn't yours .\n"), ((243, (6, 9)), '*CHI:\txxx .\n'), ((245, (7, 10)), '*BRO2:\txxx .\n'), ((247, (6, 9)), '*MOT:\tmhm .\n'), ((250, (7, 12)), "*BRO2:\tdon't break it .\n"), ((253, (6, 9)), '*MOT:\txxx .\n'), ((254, (6, 9)), '*CHI:\tzzz .\n'), ((258, (11, 16)), '*BRO2:\txxx break it .\n'), ((261, (-1, 5)), '*BRO2:\ttold you not to break it .\n'), ((264, (-1, 4)), '*CHI:\talready [?] did .\n'), ((270, (-1, 4)), '*CHI:\tthis [?] go in there .\n'), ((270, (11, 14)), '*CHI:\tthis [?] go in there .\n'), ((277, (6, 9)), '*MOT:\tzzz .\n'), ((281, (6, 10)), '*CHI:\tokay .\n'), ((284, (-1, 5)), '*BRO2:\tI want one of them [= blocks Chi is playing with] .\n'), ((284, (29, 35)), '*BRO2:\tI want one of them [= blocks Chi is playing with] .\n'), ((284, (51, 56)), '*BRO2:\tI want one of them [= blocks Chi is playing with] .\n'), ((290, (7, 12)), '*BRO2:\tthank you .\n'), ((293, (6, 9)), '*CHI:\tzzz zzz .\n'), ((297, (-1, 4)), '*CHI:\there Bro .\n'), ((301, (-1, 4)), '*MOT:\twhere did he go ?\n'), ((305, (6, 13)), '*CHI:\tkitchen .\n'), ((309, (-1, 4)), '*MOT:\tgo get Bro .\n'), ((316, (7, 10)), '*INV1:\tzzz .\n'), ((320, (6, 10)), '*MOT:\tcome here .\n'), ((323, (-1, 4)), "*MOT:\tdon't swipe the toys .\n"), ((323, (6, 11)), "*MOT:\tdon't swipe the toys .\n"), ((323, (22, 26)), "*MOT:\tdon't swipe the toys .\n"), ((326, (6, 10)), '*MOT:\tcome here .\n')]
calculating accuracy and recall
correct labels:
set(['tea'])
predicted labels:
set(['', "don't", 'with]', 'tea', 'hats', 'okay', 'yeah', '[!]', '[?]', 'toys', '<come', 'ew', 'thank', '(.)', 'cooking', 'call', "lady's", 'hat', 'tell', 'blocks', 'zzz', 'get', 'fire', 'stop', 'xxx', 'huh', "let's", 'phone', '[>]', 'cook', 'hat]>', 'come', 'kitchen', 'break', 'mhm', 'look', 'calls', 'stuff', 'eee@b', "she's", 'yours'])
file:HSLLD/HV1/MT//gilmt1.cha
precision: 0.0243902439024
recall: 1.0
true positives:['tea']
false positives: ['', '(.)', '<come', '[!]', '[>]', '[?]', 'blocks', 'break', 'call', 'calls', 'come', 'cook', 'cooking', "don't", 'eee@b', 'ew', 'fire', 'get', 'hat', 'hat]>', 'hats', 'huh', 'kitchen', "lady's", "let's", 'look', 'mhm', 'okay', 'phone', "she's", 'stop', 'stuff', 'tell', 'thank', 'toys', 'with]', 'xxx', 'yeah', 'yours', 'zzz']
false negatives: []
# true pos: 1
# false pos: 40
# false neg: 0
HSLLD/HV1/MT//tamtp1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*INV: <now > [>] .', '*MOT: okay [<] .', '*INV: Tanya do you wan(t) (t)a look and see <wh(at)> [//] what is on here .', "*INV: I don't know quite what we have in here and you can +...", '*MOT: oh yeah .', '*INV: play with her maybe .', '*MOT: you wan(t) (t)a see what <game you wan(t) (t)a play> [>] ?', '*INV: <could spread them out> [<] [>] on the floor and you can dump the whole [<] .', '*INV: <bag out> [>] .', '*MOT: <in here [?]> [<] ?', '*MOT: know what you like ?', '*MOT: puzzles .', "*MOT: it's got any puzzles huh ?", "*MOT: there's a puzzle in here I think .", '*INV: mm .', '*MOT: what is that (.) ?', "*MOT: tell her what you're gon(t)a@d have on Sunday you're gon(t)a@d have a birthday party an(d) tell her where you're gonna <have it> [>] .", '*INV: zzz[<] .', '*INV: oh [>] .', "*CHI: <McDonald's> [<] [>] [<] .", "*MOT: McDonald's !", '*INV: <oh [!] how nice> [>] .', "*MOT: <you're gonna have a birthday party> [<] [>] at McDonald's [<] .", '*MOT: oh you wan(t) (t)a play with the tea set (.) ?', '*MOT: you see that ?', "*MOT: <oh here's> [<] [>] a puzzle [>] .", '*CHI: mhm [<] .', '*MOT: wait now .', '*MOT: let me get the pieces out (.) .', '*MOT: here are two .', '*MOT: oh Johnny you wan(t) (t)a go out ?', '*BRO: yeah .', "*MOT: let's see what we got here .", '*MOT: did you see the xxx ?', '*MOT: oh a phone .', '*MOT: do you like to talk on the phone (.) ?', '*MOT: do you wan(t) (t)a try that ?', '*CHI: 0 .', '*MOT: okay who you gonna call up ?', '*CHI: Mommy .', '*MOT: call up Daddy at work .', '*MOT: can you call Dad ?', '*CHI: 0 .', '*MOT: do you wan(t) (t)a p(l)ay with the tea set (.) ?', '*MOT: <would you like> [<] [>] to play with that [>] ?', '*CHI: no [<] .', '*BRO: Mom .', '*BRO: Mommy !', '*MOT: okay John .', '*INV: zzz (.) .', "*MOT: that's the part to a puzzle (.) .", '*MOT: oh let me xxx dump this an(d) find the puzzle pieces in it .', '*MOT: okay .', '*MOT: we pick up all the puzzle pieces an(d) you wan(t) (t)a do that one okay (.) ?', '*MOT: okay .', '*MOT: pick up all the puzzle pieces .', '*CHI: zzz .', '*BRO: Mama !', '*MOT: yeah .', '*BRO: Mommy !', '*MOT: try that (.) .', '*MOT: pick (th)em all up .', '*MOT: can you pick all the puzzle pieces out (.) ?', '*MOT: oh [!] just a moment .', '*INV: zzz .', "*MOT: I was wishin(g) [///] see what I was plannin(g) on that (.) my husband wasn't supposed to be workin(g) like this afternoon .", "*MOT: usually his job he'll get out like about one of the clock .", '*INV: mhm .', '*MOT: it ended up he had to work because they have_to do inspection and everything <so> [<] [>] it happened that he would work (be)cause I figured he could take care of them [>] .', '*INV: oh [<] .', "*MOT: I mean if it's only once in awhile that you have_to meet an(d) everything (.) he could (h)a(ve) taken care of him say <while I could> [<] [>] do this you know [>] .", '*INV: mhm [<] .', '*INV: right .', "*MOT: an(d) <I really don't> [//] I didn't feel +/.", "*INV: oh it's o(kay) .", "*INV: he's not being you know +...", '*MOT: huh ?', '*MOT: yeah .', "*MOT: <he's not> [///] .", '*INV: <you know> [<] .', "*MOT: <I'm> [//] I'll just let him go out .", '*MOT: zzz .', "*MOT: I don't know who left their +...", "*MOT: <I'll let> [<] [>] him go out a little while [>] .", '*INV: zzz [<] [>] .', "*MOT: wait a minute I'll come get you but no more biting again .", '*BRO: Mommy !', '*MOT: you got_to learn not to do that .', '*BRO: Mama !', "*MOT: no that's what I wanted to try to plan on doin(g) like if you know whatever meetings you do schedule is try to tell him you know this date I have <one so> [>] .", '*INV: mhm [<] .', '*MOT: just you know try to get home early an(d) take care of him you know just for an hou(r) .', '*MOT: what does it take an hour or so ?', '*MOT: what do you say ?', "*MOT: like an hour isn't it ?", '*MOT: an hour and a half yeah .', '*MOT: okay [>] .', '*INV: yeah [<] .', '*INV: <about an hour and a half or something yeah> [<] [>] .', "*INV: <I'd like her to maybe tell me s(omething) [///] maybe she'll get used to me and then> [/] [<] .", '*MOT: yeah [>] .', '*INV: <say something> [<] [>] interesting you can get [<] .', '*MOT: right [>] .', '*INV: <her to> [<] [>] say [/] [<] .', '*MOT: yeah .', '*INV: maybe a memory a special time <or something> [>] .', '*MOT: right [<] .', "*MOT: okay Johnny it's not okay to bite I don't want you to do that again okay ?", '*MOT: (di)d you hear me ?', "*MOT: it's not okay to do that .", '*MOT: whoops_a_daisy .', '*INV: whoops_a_daisy .', '*INV: zzz [>] .', "*MOT: <I'm trippin(g) over what she did> [<] .", "*MOT: Michele didn't put her things back away did she (.) ?", '*MOT: like she was s(up)posed [!] to .', '*INV: zzz .', "*MOT: I try to teach (th)em to pick them up but they don't <always do it huh> [>] ?", "*INV: <oh it's hard> [<] yeah .", '*MOT: zzz .', '*INV: zzz .', '*MOT: they wan(t) (t)a go out they just gone out .', '*INV: yep .', '*MOT: <they get> [//] I clean my closet every once in awhile then they get it torn apart again .', '*INV: <oh yeah> [>] .', "*MOT: <you know they wan(t)> [<] [>] (t)a take out whatever they wan(t) (t)a play with they just drag it out now everything's all over the place in there [<] .", '*INV: yep .', '*MOT: xxx (.) .', '*MOT: yeah there is a little bit of a breeze today anyway .', '*MOT: it was so hot for awhile there .', '*INV: yeah it was (.) .', '*MOT: do you know what her name is Mich(ele) [//] Tanya ?', '*MOT: do you know what her name was ?', '*CHI: no .', '*MOT: <ask her> [/] ask her what her name is .', "*MOT: she's <a little> [>] shy at first but once she gets used to you she'll be fine .", '*BRO: zzz [<] .', '*MOT: <(be)cause> [>] .', '*INV: yeah [<] ?', "*MOT: she was in the Head Start program last year an(d) the first few times that she came she kind o(f) didn't really <do any(thing)> [>] [//] do much of anything an(d) then <after that> [<] [>] she'd get used to her an(d) then she [/] she was fine .", '*INV: mhm [<] .', '*INV: fine yeah .', '*MOT: can you tell her what <your name> [<] [>] is ?', "*INV: maybe [/] maybe she'll even [<] .", '*CHI: <Tanya> [>] .', '*INV: <play with you> [<] .', '*INV: Tanya yeah [>] .', '*MOT: uhuh [<] .', '*MOT: want me to help you ?', '*MOT: she does seem to like puzzles a lot so .', '*INV: mm [>] .', '*MOT: <she might> [>] do [/] do that [<][>] .', '*BRO: <xxx that> [<] .', '*BRO: xxx .', '*MOT: you need help ?', '*CHI: 0 .', '*MOT: yep .', '*MOT: xxx (.) .', '*MOT: is this just make your own thing an(d) this makes all different things or what +...', '*INV: <I think [>] what one> [//] ?', '*BRO: yyy [<] .', '*INV: I think this is the <parrot one> [>] .', '*CHI: zzz [<] .', '*MOT: oh yeah .', '*INV: an(d) then +...', "*MOT: oh yeah she should be able to do this one since you're under eight .", "*MOT: oh let's see (.) .", '*MOT: oh Tanya think this one goes here (.) ?', '*CHI: yeah (.) .', '*MOT: oh how (a)bout this here (.) .', '*MOT: that was hard for me [!] to do .', '*INV: yeah .', '*INV: lots_of funny shaped pieces .', '*MOT: hm: (.) .', "*MOT: let's see .", '*MOT: oh here Tanya I found +...', '*MOT: that goes there (.) .', '*MOT: how (a)bout +...', '*MOT: hm: .', '*MOT: xxx (.) .', "*MOT: let's see where this fits (.) .", '*MOT: that fit here (.) ?', "*INV: here're some pieces (.) .", "*MOT: oh yeah an(d) some of those'll go here (.) .", '*MOT: okay .', '*MOT: oh see does that look right ?', '*INV: mm [>] .', '*MOT: <an(d)> [<] that piece goes there .', '*MOT: <you got> [>] to find a piece like that .', "*INV: <that's good> [<] (.) .", '*INV: mm .', '*INV: not bad .', '*INV: hm: .', '*MOT: xxx that goes around (.) .', '*MOT: oh yeah this goes first .', '*MOT: this go first here ?', '*INV: mm .', '*MOT: that go there ?', '*MOT: an(d) then that (.) ?', '*MOT: yep (.) .', '*MOT: oh see does that go in there ?', '*MOT: that goes in there .', '*MOT: how (a)bout that little orange piece right in there ?', '*MOT: here I think that goes there Tanya .', '*MOT: <wan(t) (t)a> [/] wan(t) (t)a try that again (.) ?', "*CHI: that don't go there .", '*MOT: what is it (.) ?', '*MOT: how (a)bout this here (.) ?', "*MOT: xxx it doesn't go here (.) .", '*MOT: no (.) .', "*MOT: let's see (.) .", '*MOT: oh this orange .', '*MOT: oh I know that other one (.) .', '*CHI: here (.) .', "*INV: here's a missing piece .", '*MOT: oh (.) .', '*MOT: oh there .', '*MOT: that goes there huh ?', '*MOT: xxx [>] .', '*INV: <there we go> [<] .', '*MOT: mm .', '*MOT: how about xxx (.) ?', '*MOT: you got a bus Johnny ?', '*MOT: <an(d) a phone> [>] (.) ?', '*INV: zzz [<] .', '*BRO: 0 .', '*MOT: talk on the phone ?', '*MOT: you know how to do it (.) .', '*MOT: think we try that (.) ?', '*MOT: Tanya here try that one .', '*CHI: what one ?', '*MOT: black piece (.) .', '*BRO: I want this .', '*CHI: then get the other one .', '*BRO: xxx [>] .', '*MOT: xxx [<][>] .', "*CHI: <I'm gettin(g) (th)em both> [<] (.) .", "*CHI: I'm [!] playing with that (.) .", '*MOT: xxx .', '*MOT: (di)d you find one (.) ?', '*CHI: here the black one .', '*MOT: mm how (a)bout that here ?', '*BRO: zzz .', '*MOT: well that one was right (.) .', '*MOT: I think that one was okay .', '*MOT: you took that black piece out ?', '*INV: just stretches out of shape .', "*INV: that's too bad .", '*MOT: oh yeah [>] (.) .', '*INV: <you know> [<] .', '*BRO: Mom .', '*MOT: what ?', '*MOT: you got_to do the black piece .', '*MOT: that was right (.) .', "*MOT: okay let's see (.) .", "*MOT: or <maybe she> [/] maybe she can help me with the pu(zzle) [///] I don't know if I can figure out anymore of it .", "*MOT: let's see .", '*MOT: figure anymore out (.) .', '*BRO: zzz .', '*MOT: telephone .', '*INV: <could have a conversation> [<] [>] with each other too .', '*CHI: mine .', '*MOT: six .', '*BRO: Mo(m) .', '*CHI: zzz .', "*BRO: Mom who's got it ?", '*CHI: mine (.) .', '*BRO: zzz (.) .', '*BRO: one more .', '*MOT: can you try that one (.) ?', '*CHI: here .', '*CHI: zzz .', '*MOT: zzz .', '*CHI: zzz .', '*MOT: xxx (.) .', '*INV: you like that puzzle Tanya (.) ?', '*BRO: no .', '*MOT: that all you know (.) ?', '*CHI: 0 .', '*INV: we have plenty of blocks here (.) .', '*MOT: what ?', '*INV: we have some tea cups and spoons <and a pitcher> [>] .', '*MOT: <wan(t) (t)a play with those> [<] ?', '*INV: we have a dinosaur (.) .', '*INV: are you getting your own toy (.) ?', '*MOT: zzz .', '*INV: zzz .', "*MOT: (o)kay that's it on that one huh (.) ?", '*INV: oh look at that .', '*INV: Chutes an(d) [///] oops_a_daisy .', '*MOT: awoh .', '*INV: Chutes an(d) Ladders .', '*MOT: okay .', '*INV: do you play with that with your mom a lot Tanya ?', '*INV: Chutes an(d) Ladders ?', '*MOT: no (.) .', '*CHI: 0 .', '*INV: do you ever talk on the phone with your mom ?', '*INV: like on these special kinds of phones ?', '*CHI: nah [>] .', '*MOT: <wan(t) (t)a> [<] talk on the phone ?', '*INV: Tanya look at these .', '*INV: we have one phone for <each > [>] of you .', '*MOT: oh [<] .', '*INV: see that ?', '*BRO: xxx .', '*MOT: cars Tanya ?', '*MOT: want your Sesame Street cars ?', '*INV: we have some +...', '*CHI: 0 .', "*INV: Tanya why don't you and your mom play with some of the toys we brought here .", '*INV: that might be really fun .', "*INV: you've never seen these toys before (.) .", '*INV: huh (.) ?', '*MOT: (o)kay Tanya ?', '*INV: have you seen that baby bottle before ?', '*CHI: no .', '*INV: see look (.) .', "*INV: it's right over there by the blocks (.) .", '*INV: I wonder how that game works .', '*INV: how does that game work ?', "*MOT: excuse me I'm still gettin(g) over [>] my head cold here .", '*INV: oh [<] .', '*INV: okay .', '*MOT: zzz .', '*INV: maybe when your mom comes back you can build something with her huh (.) ?', '*CHI: 0 .', '*MOT: okay .', "*BRO: I'll talk with Dad .", '*MOT: do you wan(t) us t(o) talk on the phone ?', '*MOT: do you wan(t) us to do that next ?', '*MOT: or we should &-uh +...', '*INV: you can play any [/] any [//] [>] .', '*MOT: <with blocks> [<] .', '*INV: <with any> [>] of the toys we brought with .', '*MOT: <do you wan(t) (t)a> [/] [<] .', '*INV: <your mom> [>] .', '*MOT: <do you wan(t) (t)a> [<] make a house or somethin(g) with the blocks then ?', '*MOT: wan(t) (t)a play with the blocks for awhile ?', '*MOT: or you wan(t)a@d (t)a do the bus .', '*CHI: play with this [= bus] .', '*MOT: that (.) .', '*MOT: oh you know what I know what you like .', '*MOT: you wan(t) (t)a write for awhile on the paper an(d) show her how you can make it ?', '*INV: zzz [>] .', '*CHI: yeah [<] .', '*INV: mm .', '*MOT: okay .', '*INV: 0 .', '*MOT: do you wan(t) (t)a use a pen ?', '*MOT: no you write your for awhile .', '*MOT: write your an(d) show her how you can write .', '*MOT: fill up the bus an(d) then <get your> [//] write your (.) .', '*MOT: an(d) then you wan(t) (t)a talk on the phone (.) ?', '*CHI: yeah .', "*MOT: alright then we'll talk on the phone after .", '*BRO: hey <no way> [<] [>] (.) .', '*MOT: okay here .', '*MOT: I want you to do that right there .', '*MOT: you gon(t)@d (t)a write your ?', '*CHI: 0 .', '*MOT: now .', '*INV: mm .', "*MOT: that's the only letter she knows <how to write I think> [>] .", '*INV: zzz [<] .', '*INV: that is great !', "*INV: and you said you're four Tanya ?", '*INV: oh .', '*INV: incredible [>] !', '*MOT: <yeah do a paper> [<] for her an(d) she can keep it .', '*MOT: <do a paper for her> [>] .', "*INV: < oh I'd love it> [<] .", '*INV: you could write a little letter yeah .', '*CHI: 0 .', '*INV: oh how nice .', '*CHI: see Mommy .', '*MOT: hm: (.) .', '*CHI: zzz .', '*MOT: wha(t) do [?] you do .', '*MOT: yeah ?', '*MOT: you wan(t) (t)a (ju)s(t) keep writing <for a minute> [>] ?', '*CHI: <when I> [/] when I have a [/] [<] .', "*MOT: don't write on yourself .", '*MOT: huh [>] ?', '*CHI: <wh(en)> [/] when I have a [<] .', '*MOT: yeah [>] .', '*CHI: puzzle [<] I have My Little Pony ?', '*MOT: oh yeah (.) .', '*CHI: 0 .', '*INV: oh very nice .', '*MOT: do you wan(t) (t)a do more ?', '*CHI: 0 .', '*MOT: zzz .', "*MOT: that's all you <want (i)s> [>] .", '*INV: zzz [<] (.) .', '*MOT: alright she can keep that if she wants okay [>] ?', '*CHI: 0 .', '*INV: oh [<] do .', '*INV: thank you .', "*MOT: that's your an(d) now you wan(t) (t)a build a house (.) ?", "*MOT: gonna build a house or we'll have a tea party which one ?", '*MOT: huh (.) ?', '*MOT: (a)n(d) what are you doin(g) (.) ?', "*MOT: you're lookin(g) for attention huh [>] ?", '*INV: zzz [<] .', '*BRO: zzz .', '*MOT: here wha(t) do you wan(t) (t)a talk on the phone (.) ?', '*MOT: go (a)head (.) .', '*MOT: you wan(t) (t)a write one minute ?', '*MOT: you can write one minute (.) .', '*MOT: now what are you gonna have are you gonna have a tea party ?', '*CHI: 0 .', '*MOT: alright get the animals up there .', '*MOT: you can let them come too .', '*MOT: you wan(t) (t)a let the animals that come an(d) have tea ?', '*MOT: oh you gonna do blocks ?', '*MOT: I thought you were doin(g) a tea party .', '*INV: zzz .', "*MOT: tell us what you're gonna make .", "*MOT: can you tell her what you're gonna make ?", '*MOT: what are you gonna make (.) ?', "*MOT: can you tell her what you're gonna make ?", '*CHI: xxx .', '*MOT: huh ?', '*CHI: a shield [?] .', '*MOT: what ?', '*MOT: <what are you gonna make> [>] ?', '*CHI: <a fort> [<] .', '*MOT: what are you gonna make .', "*CHI: it's a fort .", '*MOT: what are you gonna make .', '*CHI: fort .', '*MOT: fort ?', '*MOT: oh a fort .', "*MOT: oh a fort okay let's see how you do it .", '*MOT: you want help or you wan(t) (t)a do it by yourself .', '*CHI: do it by myself .', '*MOT: yourself .', '*MOT: zzz .', '*INV: zzz (.) .', '*CHI: 0 .', '*MOT: would you like anything to drink I have &-um Pepsi .', "*MOT: I don't know what you like [>] .", '*INV: no [<] thank you .', "*INV: <thanks I'm fine> [>] .", '*MOT: water [<] ?', "*MOT: <you don't want any> [<] .", '*INV: thank you (.) .', '*CHI: 0 .', '*MOT: oops_a_daisy (.) .', "*MOT: let's see how that's gonna be huh (.) ?", "*MOT: an(d) who's gonna go in your fort ?", "*MOT: who's gonna go in your fort ?", '*CHI: <Johnny> [>] .', "*MOT: <you're> [<] stealin(g) paper ?", '*INV: zzz .', '*MOT: okay you (.) .', "*MOT: long as you don't write on anything else you're not supposed to (.) .", "*MOT: oh your fort's done .", '*MOT: now wha(t) did you wan(t) (t)a do .', '*MOT: you wan(t) (t)a have a tea party [>] ?', '*BRO: <Ma> [<] Ma .', "*MOT: <why don't> [<] [>] you get the cups an(d) saucers .", '*BRO: look [<] .', '*MOT: <an(d) put them together> [>] .', '*BRO: <Mama> [<] .', '*MOT: <(le)t us see> [>] .', '*BRO: <Mommy> [<] .', "*MOT: that's for the milk (.) .", '*MOT: get the cups an(d) saucers an(d) put them together an(d) you can have the animals come if you want .', '*MOT: you want the animals to come ?', "*MOT: there's some more up on the couch .", '*MOT: get the animals .', '*BRO: Mama .', '*MOT: you want the dinosaur to come (.) ?', '*MOT: an(d) the doggie to come ?', '*MOT: and <get their> [//] get the saucers an(d) put the cups an(d) saucers together .', '*MOT: this is for the milk <an(d) the sug(ar)> [//] an(d) the sugar .', '*BRO: Ma mommy .', '*MOT: okay tea (.) .', '*MOT: put <the plates over this is how the plates> [>] go .', '*BRO: xxx [<] .', '*BRO: Mommy .', '*MOT: okay now <put the plates> [//] match the plates up what color goes with what color an(d) put them on top .', '*MOT: do you know how to do that cup an(d) saucers like this ?', '*CHI: what way ?', '*MOT: do that .', '*MOT: like that .', '*MOT: put the blue an(d) the blue an(d) the yellow an(d) the yellow .', "*MOT: that's it .", '*MOT: let me see .', "*MOT: the red one's over here .", '*MOT: this is it (.) .', "*MOT: here's the red one (.) .", '*CHI: the red one is here .', '*MOT: whoops_a_daisy .', '*MOT: oh God .', '*MOT: I was sittin(g) on a car [>] .', '*CHI: where one .', "*MOT: (it')s a car <Johnny> [>] .", '*CHI: <an(d) another> [<] one .', '*MOT: alright .', "*MOT: that's it .", '*MOT: now [/] now which one +...', '*INV: oh here we have a pitcher .', '*INV: okay [>] .', '*MOT: <gonna put them> [<] .', "*INV: <the yellow's> [>] .", "*MOT: <oh yeah (a)n(d) this> [//] that's for your +...", '*MOT: oh this is for the +...', '*MOT: this will go like that .', '*MOT: you want the animals to drink (.) ?', '*MOT: drink some ?', '*MOT: an(d) you take one an(d) drink some ?', '*MOT: alright drink some of your tea .', '*MOT: this is yours .', "*MOT: an(d) this'll be mine .", '*INV: zzz .', "*MOT: let's have a drink of tea .", "*MOT: whoa it's good isn't it ?", '*MOT: (di)d you drink all your(s) ?', "*MOT: here's a spoon .", '*MOT: you got t(o) put the sugar in .', '*BRO: mm ?', '*MOT: an(d) your milk in .', '*BRO: zzz .', '*MOT: alright take some sugar (.) .', '*MOT: got_to put the sugar in .', '*MOT: how many sugars you want one ?', '*MOT: put how many sugars you want [>] .', '*CHI: five [<] .', '*MOT: you take one ?', '*MOT: five [!] ?', '*INV: zzz .', "*MOT: oh that's a lot of sugar .", '*MOT: okay an(d) this is the milk .', '*MOT: now pour the milk (.) .', '*CHI: 0 .', '*MOT: put the sugar in an(d) stir it around .', '*MOT: a(ll) right first you do this put the sugar in (.) .', '*MOT: put the sugar in (.) .', '*MOT: put it in your cup (.) .', '*CHI: 0 .', '*MOT: now stir it around .', '*MOT: stir it around (.) .', '*MOT: (o)kay .', '*MOT: now the milk goes in .', '*MOT: take the milk an(d) pour some in .', '*MOT: take the pitcher an(d) pour it in .', '*CHI: 0 .', '*MOT: okay .', '*MOT: now stir it around again to mix it together (.) .', '*CHI: 0 .', '*MOT: oh good .', '*MOT: now you can drink it .', "*MOT: I'm gonna put my sugar an(d) milk +...", '*BRO: Mama .', '*MOT: zzz you .', '*MOT: alright now you can drink it .', '*MOT: drink it up (.) .', '*MOT: take some .', '*MOT: you gonna give yours to the animals ?', '*MOT: zzz .', '*MOT: zzz [>] .', "*INV: <that's> [>] .", '*INV: <sweet huh> [>] .', '*BRO: xxx [<] xxx .', "*MOT: she's usin(g) the animals .", '*MOT: zzz [>] .', '*INV: zzz [<] .', '*INV: zzz (.) .', '*MOT: did they have enough (.) ?', '*MOT: do they want some cold drink ?', '*CHI: 0 .', '*MOT: oh okay give (th)em a cold drink (.) .', '*CHI: 0 .', '*MOT: okay let them drink that .', '*MOT: now you got_to drink some .', "*MOT: oh it's good huh ?", '*MOT: Johnny drinkin(g) some ?', "*MOT: oh that's good .", '*INV: zzz .', '*BRO: <some more wet> [>] .', '*MOT: <that was good tea> [<] huh ?', '*BRO: <some more> [>] .', '*MOT: <that was good> [<] [>] tea ?', '*MOT: now you wan(t) (t)a talk on the phone for a minute ?', '*CHI: yeah .', "*MOT: okay well we'll put these <in the> [//] in to be washed .", '*MOT: wan(t) (t)a put these in to be washed (.) ?', "*MOT: okay we'll put those <in the dish> [//] <in the> [//] to be washed .", '*CHI: zzz .', '*MOT: put the spoons on top .', '*MOT: put (th)em all together .', "*MOT: an(d) we'll wash (th)em (.) .", '*MOT: those are in the wash .', "*MOT: we'll talk on the phone (.) .", '*MOT: an(d) put the cups all together .', '*CHI: beautiful [?] (.) .', '*MOT: there .', '*BRO: xxx put .', "*MOT: (o)kay <now we'll talk on the phones> [>] .", '*BRO: xxx [<] .', "*MOT: these'll be in the wash .", '*CHI: hey [!] let me have this end .', '*BRO: zzz .', '*CHI: stop that .', '*CHI: hey [>] !', '*MOT: first [<] you an(d) Johnny wan(t) (t)a talk a second an(d) then me an(d) you ?', '*CHI: 0 .', '*MOT: <okay talk to> [>] Johnny then .', '*CHI: xxx [<] xxx .', '*MOT: alright ring the phone .', '*MOT: an(d) you answer it hello .', '*CHI: 0 .', '*MOT: <you got_to> [//] someone got_to answer it hello .', '*BRO: hello Ma <bye bye> [>] .', '*MOT: zzz [<] [>] .', '*MOT: go (a)head Tanya (.) .', '*MOT: you got_to say hello .', '*CHI: hi .', '*MOT: hi Johnny (.) .', "*MOT: ask him what him what he's <doin(g)> [>] .", '*CHI: <Papa> [<] .', "*MOT: alright Papa you make pretend you're talkin(g) to Papa then .", '*MOT: hi Papa what are you doin(g) you have_to do it you <do it> [>] .', '*CHI: hey [<] .', '*MOT: no .', '*MOT: <hi Papa> [<][>] .', '*MOT: you know how to talk you talk .', '*MOT: you talk on the phone like you really .', '*CHI: hey [<] !', '*MOT: do [>] .', '*CHI: gimme [<] .', '*MOT: alright .', '*MOT: you take the other one Johnny has .', "*MOT: alright I'm gonna call Tanya up .", '*MOT: wait a minute let Tanya do it a minute .', '*BRO: uhuh .', '*MOT: then you [>] .', '*BRO: then [<] me (.) .', '*BRO: then me .', '*MOT: alright here (.) .', '*MOT: here .', '*MOT: you say hello .', '*MOT: or we can use this one .', '*MOT: hello Tanya (.) ?', '*MOT: are you there (.) ?', '*MOT: <come on talk> [>] .', '*BRO: zzz .', '*MOT: say +/.', '*BRO: hi .', '*MOT: alright let me talk to Tanya for a minute .', '*INV: oo .', '*MOT: then you can have it .', '*MOT: wait one minute .', "*MOT: Tanya I'm gonna call you up come on .", "*INV: oh don't miss your important <phone call> [>] .", '*MOT: <come on> [<] .', '*INV: zzz .', '*MOT: hi Tanya ?', '*MOT: let Tanya have it .', '*MOT: Tanya ?', '*CHI: what [>] ?', '*MOT: you [<] know who this is ?', '*INV: zzz .', '*MOT: zzz .', '*INV: zzz .', '*MOT: this is Mom .', '*MOT: alright come on pick the phone up .', '*MOT: it already rang Tee .', '*MOT: pick it up !', '*MOT: pick it up (.) !', '*MOT: pick it up you got_to say hello (.) .', '*MOT: Tanya you got_to say hello .', '*MOT: hello ?', '*MOT: hi .', '*MOT: is this Tanya ?', '*MOT: can I speak <to Tan> [>] ya ?', '*CHI: hi [<] .', '*MOT: what are you doin(g) Tanya ?', '*CHI: hi Mommy .', '*MOT: hi .', '*MOT: what are you doin(g) right now (.) ?', '*MOT: are you keepin(g) busy ?', '*MOT: are you having fun ?', '*CHI: fun [>] .', '*MOT: what [<] are you doin(g) (.) ?', '*MOT: can you tell me what animals you saw at the zoo (.) ?', '*MOT: what was it ?', "*MOT: you're not gonna say ?", '*MOT: are you goin(g) to school this year (.) ?', '*MOT: &-uh are you havin(g) fun this summer ?', '*MOT: have you been goin(g) to the beach a lot ?', '*MOT: what else have you been doin(g) ?', '*CHI: Mommy .', '*MOT: yeah .', '*CHI: Mom .', '*MOT: talk on the phone .', '*CHI: <Mommy> [>] ?', '*MOT: yeah [<] ?', '*MOT: yeah ?', '*CHI: 0 .', '*MOT: oh you wan(t) (t)a say bye now (.) ?', '*MOT: okay bye bye .', '*CHI: bye .', "*MOT: she's really funny she usually plays a lot more than that <an(d) now when you really> [>] want her to play she just does +...", '*INV: oh [<] .', '*INV: zzz .', "*MOT: I don't know it's funny [>] .", "*INV: <wouldn't> [<] you know it .", "*INV: well <we can> [//] actually [>] I can stop the tape and &-uh I'll give you your .", '*MOT: but [<] .', '*INV: interview [>] .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//tamtp1.cha
HSLLD/HV1/MT//aimmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*CHI: it's not gonna talk &d is [/] is [/] (.) is there blinkin(g) too (.) .", "*CHI: that's there blinkin(g) (.) .", '*CHI: and is off !', '*CHI: xxx off .', '*CHI: that is off .', '*BAB: zzz .', '*FAT: xxx (.) .', '*FAT: xxx [>] .', '*CHI: <Daddy look this off> [<] .', '*BAB: zzz .', '*FAT: xxx .', '*CHI: off (.) .', '*CHI: off .', '*CHI: off .', '*CHI: off off off off .', '*CHI: Daddy look_it .', '*CHI: off off off off .', '*CHI: zzz [>] .', '*MOT: <okay Aimee> [<] .', '*MOT: okay [<] .', '*MOT: <go sit down> [<] .', "*MOT: <it's supper time> [<] .", '*CHI: off off off off off .', "*FAT: okay Aimee that's enough .", '*CHI: oin@wp oin@wp oin@wp .', "*MOT: Aimee that's enough .", '*MOT: okay ?', '*CHI: zzz .', "*FAT: I'm gonna put the pots down .", '*CHI: huh ?', '*BAB: zzz [>] .', '*MOT: that blouse [?] is dirty .', "*MOT: you don't need it (.) .", "*MOT: don't put it on .", "*MOT: you don't need to put it on .", '*MOT: go out and put it in <the drawer> [<][>] .', '*CHI: <Mommy> [<] right here is dirty .', '*BAB: daba@b .', '*CHI: zzz .', '*CHI: Mommy look_it over here .', '*BAB: zzz .', "*MOT: that's because you went to school with it .", '*MOT: xxx [>] dirty .', '*CHI: zzz [<] .', "*CHI: I didn't fall (.) .", "*CHI: I didn't fall in it .", '*CHI: zzz .', "*CHI: xxx didn't fall in it .", '*CHI: zzz .', '*CHI: xxx my xxx .', '*CHI: xxx .', '*FAT: xxx (.) .', '*FAT: xxx .', '*BAB: zzz .', '*CHI: happy bir(thday) [/] xxx .', '*BAB: zzz [>] .', '*CHI: 0 [<] .', '*MOT: <Aimee> [>] +...', '*BAB: zzz [<] .', '*CHI: 0 .', '*BAB: zzz .', '*CHI: happy birthday to you (.) .', '*CHI: zzz (.) .', '*CHI: zzz .', '*CHI: happy birthday to you (.) .', '*CHI: happy birthday to you (.) .', '*CHI: how old are you now (.) .', '*CHI: how old are you now (.) .', '*CHI: how old are you now (.) .', '*CHI: know [?] [//] .', '*CHI: wan(t) (t)a say my prayers (.) ?', '*CHI: I <know h(ow) > [/] <I> [/] <I> [//] Daddy I know it .', '*FAT: xxx ?', '*CHI: xxx .', '*BAB: zzz .', '*CHI: our father in heaven xxx amen .', "*MOT: oh that's good .", '*MOT: you can say your prayers real good .', '*CHI: I can say that (.) .', '*CHI: I pledge allegiance to the flag of the United_States_of_America and to the republic for which it stands one nation under god [>] .', '*FAT: <Elizabeth what happened> [<] ?', '*CHI: with liberty and justice <for all> [>] .', '*FAT: <Elizabeth> [<] ?', '*MOT: xxx .', '*FAT: Elizabeth ?', '*CHI: Mommy look .', '*CHI: Mommy look .', '*CHI: I xxx [/] (.) okay .', '*CHI: zzz .', '*CHI: pledge alle(giance) +...', '*CHI: Mommy hear this one .', '*CHI: Mommy hear this one .', '*MOT: uhhuh .', '*CHI: I pledge allegiance to the flag of United_States_of_Amer(ica) .', '*CHI: and to the republic for which it stands one nation under God indivisible and xxx justice for all .', '*FAT: mm [>] .', '*MOT: mm [<] .', '*FAT: good .', '*FAT: pretty good huh ?', '*MOT: now what else you learn in school (.) ?', '*MOT: what else you say in school ?', '*CHI: say a@l b@l c@l .', '*CHI: a@l b@l c@l .', '*CHI: e@l f@l g@l .', '*CHI: e@l f@l g@l (.) .', '*CHI: h@l i@l j@l .', '*CHI: h@l i@l j@l .', '*CHI: l@l m@l n@l o@l <p@l> [>] .', '*MOT: zzz [<] .', '*CHI: l@l m@l n@l o@l p@l .', '*CHI: q@l r@l s@l .', '*CHI: q@l r@l s@l .', '*CHI: t@l u@l v@l .', '*CHI: t@l u@l v@l .', '*CHI: w@l x@l (.) .', '*CHI: w@l x@l .', '*CHI: y@l and z@l .', '*CHI: y@l and z@l .', '*CHI: say it over .', '*CHI: xxx alphabet .', '*CHI: over .', '*CHI: over +...', '*BAB: zzz .', '*BAB: zzz [>] .', '*CHI: <Mommy was that> [<] song was good ?', '*BAB: zzz .', '*MOT: yeah that song was good .', '*MOT: how [/] how much you can count to ?', '*MOT: can you count ?', '*CHI: no +...', '*CHI: say [/] .', '*MOT: please ?', '*CHI: Daddy taking us to zoo tomorrow .', '*CHI: zoo tomorrow (.) .', '*CHI: Daddy taking us to the zoo tomorrow .', '*CHI: stay all day .', '*CHI: going to the zoo (.) <zoo (.) zoo> [>] .', '*FAT: xxx [<] .', '*CHI: how about you (.) you (.) you .', '*CHI: you will come too (.) too (.) too .', '*CHI: we going to the zoo (.) zoo (.) zoo +...', '*MOT: we goin(g) to the zoo (.) zoo (.) zoo +...', '*CHI: zoo (.) .', '*CHI: how about you (.) you (.) you .', '*CHI: <you will come too> [>] (.) too (.) too .', '*FAT: <xxx my school teacher> [<] ?', '*FAT: xxx [<] (.) .', '*FAT: xxx [<] .', '*CHI: we going to the <zoo (.) zoo (.) zoo> [>] +...', '*FAT: xxx [<] .', '*MOT: xxx [>] ?', '*CHI: <Daddy taking us> [<] to the zoo tomorrow .', '*CHI: <zoo tomorrow zoo tomorrow> [>] .', '*FAT: xxx [<] .', '*CHI: Daddy taking <us to the zoo> [>] tomorrow .', '*BAB: zzz [<] .', '*CHI: and we stay all day .', '*CHI: we going to the zoo (.) zoo (.) zoo .', '*CHI: how about you (.) you (.) you .', '*FAT: xxx [<] .', '*CHI: you will come too [>] (.) .', '*MOT: hm: [<] ?', '*CHI: <too (.) too we going to the zoo (.) zoo (.) xxx> [>] +...', '*FAT: <like right now xxx [/] > [<] .', '*MOT: uhhuh .', '*FAT: xxx (.) ?', '*FAT: xxx .', '*BAB: zzz [>] .', '*CHI: xxx [<] !', '*CHI: xxx .', '*CHI: zzz (.) .', '*CHI: xxx we going to the zoo (.) zoo (.) <zoo (.) how about> [>] you (.) you (.) you .', '*FAT: xxx [<] .', "*CHI: you will come too (.) too (.) too (.) we're going to the zoo (.) zoo (.) zoo .", '*FAT: xxx [<] .', '*CHI: you better stay off this +...', '*CHI: stay off xxx .', '*CHI: Daddy taking us to the zoo tomorrow .', '*CHI: zoo tomorrow .', '*CHI: zoo tomorrow .', '*CHI: Daddy taking us to the zoo tomorrow .', '*CHI: xxx stay all day .', '*FAT: xxx [<] .', '*CHI: xxx <zoo (.) zoo> [>] .', '*FAT: xxx [<] ?', '*CHI: how about you (.) you (.) you +...', '*FAT: go away (.) .', '*FAT: xxx ?', '*MOT: huh ?', '*FAT: xxx ?', '*CHI: Daddy taking us to the zoo tomorrow [>] (.) <zoo tomorrow > [>] (.) <zoo tomorrow (.) zoo tomorrow (.) Daddy taking us> [>] to the zoo tomorrow +...', '*BAB: zzz [<] .', '*BAB: zzz (.) .', '*BAB: zzz [>] .', '*CHI: okay [<] .', '*BAB: zzz [>] .', '*CHI: <tutti@wp frutti@wp> [<] .', '*CHI: Mommy look !', '*CHI: look_it .', '*CHI: tutti@wp frutti@wp .', '*CHI: oh lutti@wp .', '*CHI: aloppa@wp boowa@wp poloppaypo@wp .', '*CHI: get out my stuff !', '*BAB: zzz .', "*FAT: what's all this junk ?", '*BAB: zzz .', "*CHI: Mommy let's get rid of my stuff (.) !", '*CHI: and now I come on (.) .', '*CHI: zzz .', "*CHI: I can't get rid of my stuff .", '*CHI: oh look .', '*CHI: oh look_it this gold [?] .', '*CHI: look_it this little (.) pretty stuff .', '*CHI: look_it (.) right here .', '*CHI: pretty stuff .', '*CHI: zzz .', '*CHI: Mommy how do I get rid of my stuff [?] ?', '*CHI: <Mommy> [/] Mommy we [/] we goin(g) to the zoo (.) zoo (.) zoo .', '*CHI: Daddy taking us to the zoo tomorrow .', '*CHI: zoo tomorrow .', '*CHI: zoo tomorrow .', '*CHI: Daddy taking us .', '*CHI: zzz .', "*MOT: you don't think babies [?] can't do it .", '*CHI: zzz .', '*CHI: zzz .', '*FAT: hurry up Aimee hurry (.) .', '*FAT: xxx hurry up (.) .', '*FAT: hurry up Aimee .', '*CHI: hey [?] look .', '*CHI: Daddy look (.) .', '*CHI: xxx (.) .', '*CHI: can I get some milk please (.) ?', '*CHI: zzz (.) .', '*CHI: Mommy can I get some chocolate (.) ?', '*CHI: can I get some chocolate too and milk too .', '*CHI: zzz .', '*CHI: xxx [>] chocolate .', '*BAB: zzz [<] .', '*CHI: milk and chocolate .', '*CHI: Mommy I want milk and chocolate .', '*CHI: milk and chocolate (.) .', '*CHI: and shake good up .', '*CHI: and shake it up .', '*CHI: and give me a spoon .', '*CHI: give me a spoon .', '*CHI: ya@wp hahaha@wp +...', '*MOT: I found that now .', '*MOT: this is the stuff .', "*CHI: Mommy I'm gonna spin around .", '*CHI: Mommy I spin around .', "*MOT: take any xxx now because you're gonna get a beatin(g) .", '*MOT: go sit down .', '*CHI: huh ?', '*MOT: let me do it because I can just see you making a whole mess of this whole place .', '*BAB: hey .', '*CHI: Mommy xxx (.) .', '*CHI: xxx have no xxx ?', '*FAT: xxx [<] .', '*CHI: <Mommy xxx> [<] (.) ?', '*CHI: zzz .', '*BAB: hey [>] !', '*CHI: <thank you> [<] .', '*CHI: thank you Mommy .', "*FAT: what's so xxx ?", '*BAB: zzz .', '*MOT: why does he have_to scream <like this> [<] (.) ?', '*MOT: <Junior please> [>] !', '*BAB: zzz [<] .', '*CHI: xxx Mommy (.) .', '*CHI: xxx .', '*CHI: zzz .', '*CHI: hey Mommy xxx (.) .', '*CHI: xxx [>] .', '*FAT: <do you [?] need some help> [<] ?', '*FAT: xxx ?', '*BAB: &-uh .', '*FAT: xxx ?', '*BAB: &-uh .', '*FAT: <xxx [/] > [>] .', '*BAB: zzz [<] .', '*CHI: huh (.) ?', '*CHI: huh +...', '*FAT: xxx ?', '*CHI: zzz [>] .', '*FAT: xxx [<] ?', '*MOT: Aimee ?', '*CHI: hm: ?', '*MOT: can you &-uh (.) watch what Robbie is doing downstairs ?', '*MOT: <xxx [/] > [>] .', "*CHI: <he's> [<] bathing .", "*MOT: he's (.) having a bath ?", '*CHI: uhhuh .', "*MOT: well (.) see if he's finished .", '*CHI: 0 .', '*FAT: xxx (.) .', '*FAT: he look like (.) xxx .', '*MOT: huh ?', '*FAT: xxx .', "*MOT: okay it's time to eat .", '*MOT: come on .', "*CHI: come on Robbie it's dinner (.) .", '*CHI: we eat (.) .', '*CHI: dinnertime (.) !', '*CHI: dinnertime .', '*CHI: dinnertime .', '*CHI: xxx .', '*MOT: www (.) .', '*MOT: please turn off the tv .', '*MOT: I have this thing on you know .', "*CHI: it's still blinkin(g) Mommy .", '*MOT: I know .', '*CHI: no !', '*CHI: no no no no no (.) .', '*CHI: no .', '*CHI: no .', '*MOT: Aimee you gonna eat lots [>] of food tonight (.) .', '*MOT: okay ?', '*CHI: zzz (.) .', '*CHI: uhhuh .', "*CHI: it's a little bit tonight [?] .", '*MOT: Robbie come on .', "*CHI: Mommy that's a little bit ?", "*MOT: <yeah that's a little > [>] .", '*BAB: zzz [<] .', '*CHI: I starting .', '*FAT: xxx .', '*MOT: who ?', '*FAT: xxx (.) .', '*FAT: xxx .', '*MOT: xxx .', '*FAT: xxx (.) ?', '*FAT: xxx .', '*MOT: wait a minute .', "*CHI: I'm taking a little forks (.) .", '*CHI: zzz +...', '*MOT: come on .', '*MOT: oh xxx people ?', '*FAT: xxx .', '*CHI: thank you thank you .', '*CHI: thank you thank you .', '*CHI: xxx .', '*MOT: Robbie come on .', '*CHI: thank you .', '*CHI: thank you (.) .', '*CHI: thank you .', '*CHI: thank you (.) .', '*CHI: thank you .', '*CHI: thank you .', '*CHI: thank you .', '*CHI: thank you +...', '*CHI: xxx <Robbie has to eat [/] > [>] .', '*MOT: <Aimee > [<][>] +...', '*FAT: xxx [<] .', '*CHI: Robbie has to eat (.) .', '*CHI: Robbie has to eat (.) .', '*CHI: Aimee has to eat .', '*CHI: zzz (.) .', '*CHI: Daddy has to eat .', '*CHI: Daddy xxx (.) you hungry ?', '*FAT: yeah .', '*CHI: are you hungry (.) ?', '*CHI: huh (.) ?', '*CHI: Mommy you hungry ?', '*MOT: yes I am .', '*MOT: are you ?', '*CHI: yeah .', '*MOT: say the [/] .', '*FAT: say the grace .', '*CHI: God is great (.) God is good (.) let us thank him for our food (.) amen .', '*MOT: uhuh .', '*MOT: say xxx over .', '*MOT: come on .', '*MOT: be good .', '*BRO: god is grace and god is good .', '*BRO: <and we [/] > [>] .', "*CHI: <thank you> [<] or (.) the rest I've said .", '*CHI: thank you god for every day (.) .', '*CHI: amen .', '*BRO: god is grace and god is good .', '*BRO: and we thank him for our food (.) .', "*BRO: no , that's mine .", '*CHI: what are you doing ?', '*FAT: Aimee +...', '*CHI: you know [?] (.) .', '*CHI: (be)cause .', '*CHI: me .', '*CHI: me .', '*CHI: no no .', '*BRO: you eat this up .', "*CHI: you don't got no flower [?] .", "*CHI: you don't got no <flower [?] > [>] .", '*BRO: xxx [<] .', '*BRO: xxx flower .', "*CHI: I've got the flower [?] .", '*CHI: xxx [>] .', '*BRO: <Mommy> [<] (.) .', '*BRO: Mommy .', '*MOT: yes ?', "*BRO: didn't you get some juice ?", '*FAT: xxx (.) .', '*FAT: xxx baby ?', '*BAB: xxx .', '*FAT: xxx .', '*BRO: xxx .', "*FAT: I don't care .", "*CHI: Daddy I didn't ask for no juice .", '*FAT: xxx .', '*CHI: okay watch out for my fork [?] boy (.) .', '*CHI: xxx juice thank you .', '*CHI: huh (.) !', '*CHI: I hate [?] on my skirt .', '*FAT: xxx (.) .', '*FAT: xxx .', '*MOT: you want to eat ?', '*FAT: huh baby ?', '*CHI: Daddy (.) .', '*CHI: here [>] .', "*FAT: that's a good boy [<] .", '*CHI: Daddy .', '*FAT: hm: ?', '*CHI: here .', '*CHI: 0 .', '*FAT: xxx (.) .', '*FAT: right there .', '*CHI: but Daddy it was behind my food .', '*FAT: just put it right here .', '*FAT: xxx Junior xxx .', '*MOT: I am [!] gonna bring some juice .', '*MOT: oh gosh .', '*FAT: xxx I said .', '*MOT: well no xxx .', "*MOT: I'm gonna get juice .", '*FAT: xxx .', "*MOT: no they don't .", '*MOT: they eat all this food [>] .', '*FAT: xxx [<] .', '*MOT: they do .', '*MOT: they eat all this .', '*MOT: potatoes only [?] (.) .', '*MOT: they do eat all this food (.) .', '*MOT: xxx have room for one more xxx .', '*BAB: xxx .', '*FAT: alright eat .', '*BAB: zzz .', '*BAB: da@b .', '*MOT: Junior (.) .', '*MOT: leave it alone .', '*BAB: xxx .', '*CHI: xxx .', '*FAT: huh ?', '*CHI: zzz .', '*FAT: what ?', "*CHI: I don't like no pepper .", '*CHI: do you like pepper ?', '*MOT: sometimes .', '*CHI: it burns my mouth .', "*MOT: it doesn't burn your mouth .", '*CHI: but [<] look at Daddy he like it (.) .', '*CHI: Daddy you has our bowl (.) .', '*CHI: right here .', '*FAT: hm: ?', '*CHI: we use our flower [?] .', '*FAT: mhm .', "*CHI: that's why xxx (.) .", '*CHI: and that .', '*BAB: zzz .', "*CHI: <that's why> [>] xxx .", '*BAB: <zzz > [<] .', '*FAT: xxx ?', '*BAB: zzz .', '*BAB: zzz .', '*CHI: xxx (.) .', '*CHI: you wan(t) a flower ?', '*BAB: zzz [>] .', '*CHI: xxx [<] .', '*FAT: xxx ?', '*MOT: uhhuh .', '*CHI: uhhuh .', '*CHI: zzz .', '*BRO: xxx .', '*MOT: want some of this soup xxx ?', '*BRO: xxx soup bowl ?', '*FAT: xxx .', '*CHI: are you ready to go hm: ?', '*MOT: xxx .', '*CHI: Daddy we ready to go now (.) ?', '*CHI: <Mommy you> [//] Mommy fan me (.) .', "*CHI: I've become hot (.) .", '*CHI: xxx .', '*CHI: Mommy fan me .', '*MOT: why ?', '*CHI: because (.) .', '*CHI: fan me (.) .', '*CHI: zzz .', '*CHI: am [?] hot ?', '*MOT: uhuh .', '*CHI: yes I am (.) .', '*CHI: xxx still [?] .', '*MOT: just eat your food Aimee .', '*MOT: here just try this whole thing .', '*CHI: just [?] wan(t) (t)a play with it and eat it .', '*CHI: zzz (.) .', '*CHI: zzz .', '*BRO: I already ate that .', '*CHI: something for breakfast (.) .', '*CHI: zzz .', '*BAB: zzz .', '*MOT: stop screaming [>] .', '*FAT: xxx [<] .', '*BAB: zzz [>] .', "*BRO: <what's wrong with him> [<] ?", "*MOT: he's pulling it out .", '*FAT: xxx ?', '*BAB: zzz .', '*FAT: xxx .', "*CHI: I'm [?] stop the eating .", '*MOT: Baby you are a mean boy .', '*CHI: zzz .', '*BRO: I know .', '*CHI: xxx .', '*BAB: zzz .', '*CHI: xxx look at Baby <he like that part > [>] .', '*BAB: zzz [<] .', '*MOT: hm: [?] ?', '*FAT: xxx .', '*CHI: xxx I picked up my own meat (.) .', '*CHI: <xxx he like it> [>] .', '*BAB: zzz [<] .', '*BAB: zzz .', '*CHI: xxx .', '*BAB: zzz .', '*CHI: xxx (.) .', '*CHI: <you too baby> [>] (.) .', '*BAB: zzz [<] .', '*CHI: you too baby .', '*MOT: <xxx [/] > [>] .', '*CHI: okay [<] Junior ?', '*CHI: zzz .', '*CHI: zzz .', '*CHI: zzz (.) .', '*CHI: zzz .', '*MOT: zzz .', '*CHI: zzz .', '*MOT: mosquito [?] .', '*BAB: zzz .', '*CHI: pepper (.) .', '*CHI: zzz +...', '*MOT: xxx .', '*BAB: xxx .', "*MOT: don't start with that .", '*BAB: xxx .', '*CHI: xxx ?', '*BAB: xxx .', "*MOT: don't push back my hands .", '*MOT: young man .', '*CHI: zzz (.) .', '*CHI: here just one second .', "*MOT: I know you wan(t) (t)a get into my food but you're not going to .", '*BAB: &-uh .', "*MOT: you're a mean boy .", '*CHI: he is [!] .', '*CHI: I know .', '*BAB: &-uh .', '*MOT: okay .', '*MOT: one (.) two good .', '*MOT: do good do xxx .', '*BAB: &-uh [>] !', '*MOT: <go play> [<] .', '*MOT: go play .', '*MOT: go play (.) .', '*MOT: go play (.) .', '*MOT: look at your shoes [?] .', '*MOT: shoes [?] ?', '*MOT: look at shoes .', '*BAB: &-uh ?', '*MOT: go bring your shoes for Daddy .', '*BAB: zzz .', '*MOT: bring shoes .', '*FAT: xxx your food .', '*BAB: &-uh (.) ?', '*BAB: zzz .', '*FAT: xxx food Aimee .', '*CHI: uhuh .', '*FAT: xxx .', '*BAB: zzz .', '*FAT: xxx .', "*MOT: how come you're not hungry ?", '*BAB: zzz [>] .', '*BRO: xxx [<] .', '*MOT: that was xxx <this afternoon > [>] .', '*BAB: zzz [<] .', '*BRO: xxx [>] .', '*BAB: zzz [<] .', '*MOT: here .', '*BAB: zzz (.) .', '*BAB: zzz [>] .', '*MOT: xxx [<] .', '*MOT: <eat [/] eat [/] eat your applesauce> [<] .', '*BAB: zzz .', '*CHI: but I like it .', '*BAB: zzz [>] .', '*MOT: <you like it> [<] ?', '*CHI: uhhuh .', '*BAB: zzz .', '*MOT: Baby +...', '*BAB: zzz .', '*CHI: hm: (.) .', "*CHI: I'm eatin(g) dinner (.) .", '*CHI: I want that [?] water .', '*FAT: xxx .', '*MOT: hm: ?', '*FAT: xxx .', '*CHI: xxx .', "*MOT: it's hot .", '*FAT: need some water xxx .', '*CHI: I want some water xxx .', '*BAB: zzz [>] .', '*FAT: <xxx must (ha)ve been xxx> [<] .', '*CHI: xxx .', '*CHI: zzz .', '*BAB: zzz (.) .', '*BAB: zzz .', '*CHI: <xxx [/] > [>] .', '*BAB: <&-uh> [<] .', '*BAB: ome@b .', '*BAB: ome@b .', '*MOT: huh ?', '*BAB: xxx ?', '*BRO: xxx .', '*CHI: can you <wait outside> [>] for me ?', '*BAB: zzz [<] .', '*MOT: what kind of xxx is this ?', "*FAT: <nobody ain't> [/] nobody ain't xxx food there .", '*CHI: (be)cause nobody like it .', '*CHI: nobody .', '*CHI: look_it .', '*CHI: xxx ?', '*CHI: xxx .', '*CHI: Daddy [?] make your food one more xxx .', '*BAB: zzz .', '*BRO: xxx ?', '*FAT: xxx .', '*BRO: xxx stop tapping on the table .', '*FAT: xxx that ?', "*CHI: that's you too ?", '*BRO: xxx (.) .', '*BRO: oh oh oh .', '*CHI: oh oh oh .', '*BAB: zzz .', '*CHI: no no .', '*BAB: zzz .', "*CHI: why you can't do that .", '*BAB: zzz .', "*FAT: y'all@d had enough ?", '*BAB: zzz [>] .', "*FAT: <y'all@d had enough to eat > [<] ?", '*BAB: zzz [>] .', "*MOT: <don't throw away that milk> [<] .", '*MOT: <xxx bottle> [>] .', '*BRO: <what d(id) you do in school> [<] today ?', '*CHI: what ?', '*BRO: what d(id) you do in school today ?', '*CHI: I color .', '*CHI: I went outside to the park (.) .', '*CHI: went walking .', '*CHI: went out (.) <wi(th) &-um> [/] wi(th) xxx for a walk and xxx [>] .', '*FAT: <xxx something> [<] (.) .', '*FAT: eat your food .', '*FAT: eat your food .', '*MOT: I was home all day .', '*FAT: eat your food .', '*CHI: (be)cause my arm it itches me .', '*MOT: Aimee hurry up .', '*CHI: xxx my arm is itching xxx .', "*MOT: yeah but you don't need your arms for eating food .", '*MOT: you got ta go to bed (be)cause you got ta go to school tomorrow (.) .', "*MOT: and it's a bit past your bedtime so hurry up .", '*CHI: zzz .', '*MOT: xxx (.) .', '*MOT: xxx (.) .', '*MOT: why have you xxx it ?', '*CHI: mm (.) .', "*CHI: I'm through Mom .", '*MOT: you drink any milk ?', '*CHI: what ?', '*MOT: you drink any milk ?', '*CHI: zzz (.) .', '*CHI: &-uh .', '*MOT: uhuh .', "*CHI: I'm gonna xxx (.) .", '*CHI: xxx .', '*MOT: xxx .', '*CHI: xxx my stomach hurts (.) .', '*CHI: xxx I have_to go (.) to the bath+room .', '*MOT: you always say your stomach hurts .', '*MOT: eat your food .', '*CHI: but my stomach hurts .', '*MOT: you always keep saying xxx .', '*MOT: xxx has food tonight ?', '*FAT: xxx .', '*MOT: huh ?', '*CHI: uhhuh .', '*CHI: yeah Mommy .', '*CHI: yeah Mommy .', '*CHI: Mommy I eat all my food .', '*CHI: but I did .', '*CHI: I did .', '*CHI: I eat xxx .', '*CHI: I eat xxx .', "*CHI: Mommy I'm not hungry (.) .", '*CHI: xxx (.) .', '*CHI: Mommy .', '*CHI: Mommy I xxx (.) .', '*CHI: xxx .', '*BRO: I still got xxx Mommy ?', '*MOT: uhhuh .', '*MOT: may I have some ?', '*BRO: xxx .', '*CHI: xxx .', '*CHI: xxx .', '*CHI: xxx .', '*CHI: xxx .', '*CHI: xxx .', '*CHI: xxx (.) .', '*CHI: nobody xxx [>] .', '*BAB: zzz [<] .', '*CHI: xxx ?']
loading solution set
LINE NO ->  17
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, -1: 1})
LINE NO ->  22
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  25
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  28
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  37
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  41
LINE NO ->  42
LINE NO ->  44
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  47
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  51
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  52
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  55
LINE NO ->  58
LINE NO ->  61
LINE NO ->  64
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  67
LINE NO ->  70
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  74
LINE NO ->  77
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  80
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  83
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  86
LINE NO ->  89
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  92
LINE NO ->  96
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  99
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  107
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  111
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  115
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  119
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  123
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  126
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  131
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  136
LINE NO ->  143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  146
LINE NO ->  149
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  153
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  156
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  166
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  173
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  176
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  179
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  183
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  186
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  190
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  194
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  195
LINE NO ->  196
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  197
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  205
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  212
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  215
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  219
LINE NO ->  221
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  226
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  231
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  236
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  241
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  245
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  250
LINE NO ->  255
LINE NO ->  260
LINE NO ->  265
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  266
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  270
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  273
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  275
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  276
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  284
LINE NO ->  287
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 1, 115: 1, 116: 1, 117: 1, 118: 1, 119: 1, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 1, 128: 1, 129: 1, 130: 0, 131: 1, 132: 1, 133: 1, 134: 0, 135: 0, 136: 0, -1: 1})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  308
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  314
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  315
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  319
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  325
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  328
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  332
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  335
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  338
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  341
LINE NO ->  344
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  349
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, -1: 1})
LINE NO ->  357
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  360
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  363
LINE NO ->  366
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0})
LINE NO ->  375
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  379
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  385
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  388
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  391
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  394
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  397
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  400
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  407
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  410
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  413
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  416
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  419
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  422
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  425
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  428
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  431
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  434
LINE NO ->  437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  440
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  444
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  447
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  451
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  456
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  460
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  463
LINE NO ->  467
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  471
LINE NO ->  475
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  476
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  480
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  488
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  494
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  498
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  502
LINE NO ->  503
LINE NO ->  507
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  511
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  515
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  519
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  522
LINE NO ->  526
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  530
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  534
LINE NO ->  535
LINE NO ->  536
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  540
LINE NO ->  541
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  543
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  548
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  553
LINE NO ->  554
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  559
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  563
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  567
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  570
LINE NO ->  575
LINE NO ->  576
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  580
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  584
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, -1: 1})
LINE NO ->  590
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  594
LINE NO ->  598
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  600
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  602
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  606
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  608
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  609
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  613
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0})
LINE NO ->  620
LINE NO ->  621
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, -1: 1})
LINE NO ->  628
LINE NO ->  629
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  632
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  635
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  641
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  646
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  651
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  657
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  662
LINE NO ->  663
LINE NO ->  668
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  670
LINE NO ->  674
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  678
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  681
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  684
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  686
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 0, 152: 0, 153: 0, 154: 0, -1: 1})
LINE NO ->  696
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  700
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  704
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  708
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  711
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  715
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  719
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  722
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  725
LINE NO ->  729
LINE NO ->  733
LINE NO ->  737
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  741
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  745
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  752
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  757
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  760
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  764
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  770
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  773
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  776
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  779
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  782
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  785
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  789
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  795
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0})
LINE NO ->  801
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  806
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  810
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  814
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  818
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  822
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  827
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  831
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  835
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  838
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  841
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  844
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  847
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  850
LINE NO ->  851
milk
milk milk 46
[('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('milk', 'NN'), ('please', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  855
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  859
chocolate
chocolate chocolate 598
[('mommy', 'NN'), ('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  863
milk
milk milk 46
[('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN'), ('too', 'RB'), ('and', 'CC'), ('milk', 'VB'), ('too', 'RB')]
['milk']
('food -> ', [])
chocolate
chocolate chocolate 598
[('can', 'MD'), ('i', 'VB'), ('get', 'VB'), ('some', 'DT'), ('chocolate', 'NN'), ('too', 'RB'), ('and', 'CC'), ('milk', 'VB'), ('too', 'RB')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  868
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  872
chocolate
chocolate chocolate 598
[('xxx', 'NN'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  876
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  880
milk
milk milk 46
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['milk']
('food -> ', [])
chocolate
chocolate chocolate 598
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  883
milk
milk milk 46
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['milk']
('food -> ', [])
chocolate
chocolate chocolate 598
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  886
milk
milk milk 46
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['milk']
('food -> ', [])
chocolate
chocolate chocolate 598
[('milk', 'NN'), ('and', 'CC'), ('chocolate', 'NN')]
['chocolate']
('food -> ', [['chocolate', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  890
shake
shake shake 148
[('and', 'CC'), ('shake', 'VB'), ('good', 'JJ'), ('up', 'RP')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  894
shake
shake shake 148
[('and', 'CC'), ('shake', 'VB'), ('it', 'PRP'), ('up', 'RP')]
['shake']
('food -> ', [['shake', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  898
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  902
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  905
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  908
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  911
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  914
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  917
LINE NO ->  921
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  926
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  930
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  935
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 1, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0})
LINE NO ->  943
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  946
LINE NO ->  949
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  954
LINE NO ->  955
LINE NO ->  959
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  963
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  966
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  969
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  972
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  976
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  981
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 1, 46: 1, 47: 1, 48: 0, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0})
LINE NO ->  986
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  989
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  993
LINE NO ->  996
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  998
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1002
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1005
LINE NO ->  1006
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1010
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1012
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1013
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1015
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1016
LINE NO ->  1017
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1021
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1025
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1029
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1031
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1035
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1037
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1041
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1045
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1051
LINE NO ->  1052
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1055
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1059
LINE NO ->  1062
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  1065
LINE NO ->  1067
LINE NO ->  1068
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1071
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1074
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1077
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1080
LINE NO ->  1083
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1086
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1089
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1092
LINE NO ->  1095
LINE NO ->  1098
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1100
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1102
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1105
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1109
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1113
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1116
LINE NO ->  1119
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1122
LINE NO ->  1125
LINE NO ->  1128
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  1133
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1137
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1141
LINE NO ->  1144
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1147
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1150
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  1154
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1157
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1161
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1164
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1165
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1168
LINE NO ->  1169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1170
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1171
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1172
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1173
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0})
LINE NO ->  1184
LINE NO ->  1187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1190
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1191
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1195
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1199
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1210
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1213
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1216
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1222
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1225
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1228
LINE NO ->  1231
LINE NO ->  1234
LINE NO ->  1235
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1238
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1241
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1248
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1251
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1255
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1258
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1262
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1266
LINE NO ->  1271
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  1274
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1278
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1281
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1284
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1287
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 1, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0})
LINE NO ->  1293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1299
LINE NO ->  1302
LINE NO ->  1305
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1308
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  1316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  1319
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1323
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1326
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1335
LINE NO ->  1340
LINE NO ->  1343
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1346
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1349
LINE NO ->  1352
LINE NO ->  1355
LINE NO ->  1358
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1362
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1365
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1368
LINE NO ->  1369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1372
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1375
LINE NO ->  1376
LINE NO ->  1379
LINE NO ->  1382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1385
juice
juice juice 52
[('didn', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('get', 'VBP'), ('some', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1388
LINE NO ->  1389
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fd5dd0>)
[('xxx', 'NN'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1392
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1393
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1394
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1395
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1398
juice
juice juice 52
[('daddy', 'NN'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('ask', 'NN'), ('for', 'IN'), ('no', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1403
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1408
juice
juice juice 52
[('xxx', 'JJ'), ('juice', 'NN'), ('thank', 'NN'), ('you', 'PRP')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1412
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1415
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1418
LINE NO ->  1419
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1420
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1424
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453ccb00>)
[('huh', 'NN'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1428
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1431
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1434
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1440
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1444
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1447
LINE NO ->  1449
LINE NO ->  1450
LINE NO ->  1454
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1459
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1463
LINE NO ->  1467
juice
juice juice 52
[('i', 'NN'), ('am', 'VBP'), ('gon', 'VBG'), ('na', 'TO'), ('bring', 'VB'), ('some', 'DT'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1470
LINE NO ->  1473
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  1477
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1480
juice
juice juice 52
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('get', 'VB'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1484
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1485
LINE NO ->  1488
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1491
LINE NO ->  1492
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1495
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1498
potatoes
potatoes potatoes 62
[('potatoes', 'NNS'), ('only', 'RB')]
['potatoes']
('food -> ', [['potatoes', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1501
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1504
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1508
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1510
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1514
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1519
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1523
LINE NO ->  1526
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1529
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1530
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1531
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1535
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1539
LINE NO ->  1544
pepper
pepper pepper 27
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('like', 'IN'), ('no', 'DT'), ('pepper', 'NN')]
['pepper']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1548
pepper
pepper pepper 27
[('do', 'VB'), ('you', 'PRP'), ('like', 'IN'), ('pepper', 'NN')]
['pepper']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1552
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1555
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1558
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1562
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1565
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1568
LINE NO ->  1571
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1575
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1578
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1581
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1584
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1587
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1591
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1594
LINE NO ->  1598
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1599
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1603
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1607
LINE NO ->  1608
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1611
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1615
LINE NO ->  1616
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1618
LINE NO ->  1621
LINE NO ->  1624
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1628
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1629
soup
soup soup 72
[('want', 'VB'), ('some', 'DT'), ('of', 'IN'), ('this', 'DT'), ('soup', 'NN'), ('xxx', 'NN')]
['soup']
('food -> ', [['soup', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1632
soup
soup soup 72
[('xxx', 'NN'), ('soup', 'NN'), ('bowl', 'NN')]
['soup']
('food -> ', [['soup', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1635
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1636
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1640
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1641
LINE NO ->  1646
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472647e8>)
[('mommy', 'NN'), ('you', 'PRP'), ('mommy', 'VBP'), ('fan', 'VB'), ('me', 'PRP')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  1649
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1652
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1653
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fcff80>)
[('mommy', 'NN'), ('fan', 'NN'), ('me', 'PRP')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1656
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1660
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1663
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94539eea8>)
[('fan', 'NN'), ('me', 'PRP')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1666
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1670
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1674
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1677
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1681
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1684
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1688
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1691
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1696
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1700
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1704
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1707
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1710
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1714
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1718
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1721
LINE NO ->  1722
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1725
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1728
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1731
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1732
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1736
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1737
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1740
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453c4680>)
[('baby', 'NN'), ('you', 'PRP'), ('are', 'VBP'), ('a', 'DT'), ('mean', 'JJ'), ('boy', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1743
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1747
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1751
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1753
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1757
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fcfcf8>)
[('xxx', 'JJ'), ('look', 'NN'), ('at', 'IN'), ('baby', 'NN'), ('he', 'PRP'), ('like', 'IN'), ('that', 'DT'), ('part', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  1762
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1766
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1769
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1770
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453c49e0>)
[('xxx', 'NN'), ('i', 'NN'), ('picked', 'VBD'), ('up', 'RP'), ('my', 'PRP$'), ('own', 'JJ'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1774
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1777
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1781
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1786
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1787
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1791
LINE NO ->  1792
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947256bd8>)
[('you', 'PRP'), ('too', 'RB'), ('baby', 'VB')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1796
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1800
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94539eea8>)
[('you', 'PRP'), ('too', 'RB'), ('baby', 'VB')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1804
LINE NO ->  1805
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1808
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1812
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1816
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1820
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1824
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1828
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1832
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1836
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1840
pepper
pepper pepper 27
[('pepper', 'NN')]
['pepper']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1843
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0})
LINE NO ->  1847
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1849
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1850
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1853
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1854
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1855
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1856
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  1859
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1863
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1867
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1870
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, -1: 1})
LINE NO ->  1878
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1879
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1882
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1885
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1888
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1889
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1893
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1897
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1901
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1902
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1905
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1908
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1911
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1914
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  1918
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1922
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1927
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1928
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1931
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1935
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1938
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1941
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1942
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1946
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  1950
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1953
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1954
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1958
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1959
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  1962
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1966
LINE NO ->  1967
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1970
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1974
LINE NO ->  1975
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1979
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1982
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1985
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1989
LINE NO ->  1990
applesauce
applesauce applesauce 76
[('eat', 'NN'), ('eat', 'NN'), ('eat', 'VB'), ('your', 'PRP$'), ('applesauce', 'NN')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  1993
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1997
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  2000
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2003
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  2007
LINE NO ->  2010
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2014
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947287cf8>)
[('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  2017
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2022
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2026
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  2030
water
water water 18
[('i', 'NN'), ('want', 'VBP'), ('that', 'IN'), ('water', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2033
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2034
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2037
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2038
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2039
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  2042
water
water water 18
[('need', 'VB'), ('some', 'DT'), ('water', 'NN'), ('xxx', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2045
water
water water 18
[('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('water', 'NN'), ('xxx', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2048
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2051
LINE NO ->  2054
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2055
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2059
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2063
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2067
LINE NO ->  2068
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  2069
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  2073
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  2077
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2081
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2082
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2083
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  2086
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2090
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  2094
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  2098
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2101
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  2106
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2109
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2112
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2114
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  2118
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2123
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2124
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2125
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453c4440>)
[('xxx', 'JJ'), ('stop', 'NN'), ('tapping', 'NN'), ('on', 'IN'), ('the', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  2128
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  2132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2135
LINE NO ->  2136
LINE NO ->  2139
LINE NO ->  2143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2147
LINE NO ->  2150
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2155
LINE NO ->  2160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2164
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2168
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2172
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  2176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2179
milk
milk milk 46
[('don', 'NN'), ('t', 'NN'), ('throw', 'VB'), ('away', 'RP'), ('that', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  2182
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  2187
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  2191
LINE NO ->  2194
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  2199
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  2203
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  2206
LINE NO ->  2209
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0})
LINE NO ->  2213
LINE NO ->  2216
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2223
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2230
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  2234
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  2237
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  2240
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  2247
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  2253
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  2259
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2263
LINE NO ->  2264
LINE NO ->  2265
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  2269
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  2272
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2275
milk
milk milk 46
[('you', 'PRP'), ('drink', 'VBP'), ('any', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2279
LINE NO ->  2283
milk
milk milk 46
[('you', 'PRP'), ('drink', 'VBP'), ('any', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  2287
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2291
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2292
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  2295
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  2298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2300
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2302
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  2305
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  2309
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  2313
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  2316
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  2323
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  2327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2328
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  2332
LINE NO ->  2335
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  2338
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  2341
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  2344
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2347
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  2350
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2353
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  2356
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  2359
LINE NO ->  2360
LINE NO ->  2363
LINE NO ->  2366
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  2371
LINE NO ->  2374
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  2378
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2379
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2380
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2381
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2382
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2383
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  2384
LINE NO ->  2385
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  2388
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  2392
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
loading solution set
calculating
set([(887, (15, 24)), (1991, (32, 42)), (884, (19, 23)), (884, (28, 37)), (1633, (10, 14)), (2031, (22, 27)), (1499, (6, 14)), (881, (15, 24)), (2046, (18, 23)), (1409, (10, 15)), (881, (6, 10)), (1399, (32, 37)), (864, (21, 30)), (1549, (18, 24)), (1545, (22, 28)), (2276, (20, 24)), (2284, (20, 24)), (1468, (32, 37)), (1481, (20, 25)), (864, (39, 43)), (887, (6, 10)), (852, (21, 25)), (873, (14, 23)), (2043, (16, 21)), (860, (27, 36)), (1841, (6, 12)), (1386, (26, 31)), (1630, (24, 28))])
[((852, (21, 25)), '*CHI:\tcan I get some milk please (.) ?\n'), ((860, (27, 36)), '*CHI:\tMommy can I get some chocolate (.) ?\n'), ((864, (21, 30)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((864, (39, 43)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((873, (14, 23)), '*CHI:\txxx [>] chocolate .\n'), ((881, (6, 10)), '*CHI:\tmilk and chocolate .\n'), ((881, (15, 24)), '*CHI:\tmilk and chocolate .\n'), ((884, (19, 23)), '*CHI:\tMommy I want milk and chocolate .\n'), ((884, (28, 37)), '*CHI:\tMommy I want milk and chocolate .\n'), ((887, (6, 10)), '*CHI:\tmilk and chocolate (.) .\n'), ((887, (15, 24)), '*CHI:\tmilk and chocolate (.) .\n'), ((1386, (26, 31)), "*BRO:\tdidn't you get some juice ?\n"), ((1399, (32, 37)), "*CHI:\tDaddy I didn't ask for no juice .\n"), ((1409, (10, 15)), '*CHI:\txxx juice thank you .\n'), ((1468, (32, 37)), '*MOT:\tI am [!] gonna bring some juice .\n'), ((1481, (20, 25)), "*MOT:\tI'm gonna get juice .\n"), ((1499, (6, 14)), '*MOT:\tpotatoes only [?] (.) .\n'), ((1545, (22, 28)), "*CHI:\tI don't like no pepper .\n"), ((1549, (18, 24)), '*CHI:\tdo you like pepper ?\n'), ((1630, (24, 28)), '*MOT:\twant some of this soup xxx ?\n'), ((1633, (10, 14)), '*BRO:\txxx soup bowl ?\n'), ((1841, (6, 12)), '*CHI:\tpepper (.) .\n'), ((1991, (32, 42)), '*MOT:\t<eat [/] eat [/] eat your applesauce> [<] .\n'), ((2031, (22, 27)), '*CHI:\tI want that [?] water .\n'), ((2043, (16, 21)), '*FAT:\tneed some water xxx .\n'), ((2046, (18, 23)), '*CHI:\tI want some water xxx .\n'), ((2276, (20, 24)), '*MOT:\tyou drink any milk ?\n'), ((2284, (20, 24)), '*MOT:\tyou drink any milk ?\n')]
set([(881, (6, 10)), (1485, (6, 9)), (1042, (-1, 4)), (2238, (13, 16)), (395, (14, 17)), (350, (87, 94)), (1205, (6, 11)), (1072, (6, 9)), (1435, (24, 27)), (448, (10, 13)), (2293, (6, 10)), (1889, (6, 10)), (2357, (20, 30)), (1609, (-1, 4)), (1344, (-1, 4)), (2126, (15, 22)), (1129, (31, 34)), (712, (10, 13)), (293, (-1, 4)), (2254, (17, 20)), (1297, (-1, 4)), (531, (21, 29)), (944, (-1, 4)), (380, (18, 21)), (1729, (6, 10)), (1871, (50, 56)), (423, (6, 9)), (622, (63, 66)), (964, (10, 13)), (489, (29, 32)), (520, (6, 9)), (1906, (9, 13)), (274, (6, 9)), (1641, (6, 9)), (2224, (21, 24)), (2125, (6, 9)), (555, (19, 22)), (1145, (32, 35)), (97, (19, 25)), (452, (27, 31)), (568, (22, 25)), (1011, (6, 9)), (1211, (6, 11)), (1837, (6, 9)), (2324, (6, 9)), (869, (6, 9)), (1200, (6, 9)), (2107, (6, 13)), (210, (8, 11)), (1576, (24, 27)), (2288, (6, 9)), (1971, (6, 9)), (614, (6, 9)), (701, (6, 9)), (895, (-1, 4)), (2329, (6, 9)), (2060, (10, 13)), (1689, (31, 36)), (389, (14, 17)), (1664, (6, 9)), (1114, (-1, 4)), (856, (6, 9)), (78, (6, 10)), (2133, (-1, 4)), (1366, (-1, 4)), (675, (-1, 4)), (2381, (6, 9)), (1220, (6, 11)), (309, (23, 30)), (753, (12, 17)), (527, (6, 10)), (531, (-1, 4)), (1752, (6, 9)), (1855, (6, 9)), (486, (19, 22)), (765, (-1, 4)), (839, (19, 22)), (2204, (-1, 4)), (2055, (6, 9)), (577, (28, 31)), (1226, (6, 11)), (389, (10, 13)), (1327, (36, 39)), (1650, (-1, 4)), (622, (-1, 4)), (1370, (10, 16)), (296, (114, 120)), (922, (38, 43)), (2035, (-1, 4)), (836, (-1, 4)), (71, (10, 13)), (1855, (-1, 4)), (1145, (20, 23)), (1636, (6, 9)), (1723, (6, 9)), (1317, (30, 33)), (26, (-1, 4)), (1951, (6, 10)), (1046, (-1, 4)), (392, (6, 9)), (1170, (6, 9)), (1022, (6, 9)), (895, (10, 15)), (2084, (29, 32)), (2384, (6, 9)), (398, (18, 21)), (2023, (10, 13)), (774, (27, 30)), (2169, (6, 9)), (1726, (-1, 4)), (398, (6, 9)), (915, (16, 21)), (2027, (19, 25)), (607, (10, 13)), (2241, (35, 39)), (2386, (-1, 4)), (758, (-1, 4)), (2115, (-1, 4)), (429, (14, 17)), (306, (-1, 4)), (1566, (29, 32)), (276, (6, 9)), (1732, (6, 9)), (1947, (10, 14)), (1056, (24, 28)), (977, (6, 9)), (819, (6, 9)), (486, (6, 9)), (516, (-1, 4)), (1841, (6, 12)), (1138, (10, 13)), (2301, (6, 9)), (161, (6, 12)), (1576, (17, 23)), (549, (6, 10)), (1256, (6, 10)), (405, (6, 9)), (1963, (10, 13)), (720, (12, 16)), (1432, (-1, 4)), (1188, (13, 19)), (542, (10, 13)), (2276, (-1, 4)), (1013, (6, 10)), (1661, (-1, 4)), (2375, (-1, 4)), (2228, (15, 19)), (358, (6, 8)), (2241, (51, 55)), (1420, (6, 9)), (1155, (30, 33)), (150, (6, 9)), (2284, (20, 24)), (232, (6, 9)), (1898, (17, 20)), (2034, (6, 9)), (1909, (9, 13)), (765, (28, 33)), (669, (10, 13)), (1671, (-1, 4)), (120, (-1, 4)), (864, (21, 30)), (1732, (-1, 4)), (2119, (6, 9)), (723, (6, 13)), (2210, (44, 47)), (2195, (34, 39)), (339, (12, 16)), (1007, (34, 37)), (1527, (-1, 4)), (1499, (-1, 4)), (1332, (-1, 4)), (2173, (-1, 4)), (2351, (-1, 4)), (544, (-1, 4)), (116, (6, 9)), (1998, (-1, 4)), (642, (6, 9)), (1744, (6, 9)), (753, (38, 41)), (157, (6, 9)), (408, (14, 17)), (622, (44, 49)), (174, (20, 23)), (2161, (6, 9)), (2083, (6, 9)), (1637, (26, 29)), (2317, (13, 20)), (1515, (6, 9)), (1868, (-1, 4)), (738, (17, 22)), (753, (32, 37)), (2180, (29, 34)), (2074, (6, 11)), (1715, (6, 9)), (982, (39, 44)), (2087, (6, 9)), (2389, (10, 13)), (2078, (-1, 4)), (877, (10, 13)), (408, (10, 13)), (1767, (6, 9)), (1505, (6, 9)), (1110, (-1, 4)), (1014, (6, 9)), (2004, (20, 23)), (658, (-1, 4)), (161, (33, 39)), (1405, (41, 44)), (65, (12, 19)), (884, (28, 37)), (1915, (6, 10)), (380, (14, 17)), (2314, (15, 19)), (1599, (6, 9)), (564, (-1, 4)), (1647, (29, 32)), (489, (-1, 4)), (881, (15, 24)), (426, (6, 9)), (370, (33, 39)), (780, (14, 17)), (899, (-1, 4)), (2183, (11, 18)), (652, (-1, 4)), (811, (6, 9)), (345, (-1, 4)), (687, (42, 45)), (912, (18, 23)), (1599, (-1, 4)), (1625, (6, 9)), (267, (25, 32)), (555, (-1, 4)), (1084, (33, 36)), (2367, (6, 9)), (1708, (20, 33)), (127, (6, 11)), (309, (-1, 4)), (1099, (6, 9)), (2383, (6, 9)), (936, (80, 85)), (1413, (-1, 4)), (1478, (14, 17)), (53, (10, 13)), (1767, (10, 13)), (1502, (27, 31)), (2126, (30, 35)), (100, (6, 10)), (78, (11, 14)), (1719, (21, 24)), (1986, (6, 9)), (685, (6, 9)), (481, (-1, 4)), (1069, (-1, 4)), (2095, (-1, 4)), (852, (21, 25)), (2173, (35, 38)), (376, (27, 33)), (2031, (-1, 4)), (108, (10, 15)), (758, (24, 27)), (316, (-1, 4)), (887, (15, 24)), (195, (6, 9)), (461, (16, 20)), (1396, (-1, 4)), (1505, (15, 19)), (184, (17, 21)), (1954, (6, 9)), (2393, (-1, 4)), (1788, (6, 9)), (2031, (22, 27)), (964, (6, 9)), (84, (12, 18)), (1976, (10, 13)), (1817, (10, 13)), (237, (6, 9)), (591, (-1, 4)), (1409, (10, 15)), (97, (12, 18)), (1396, (14, 18)), (1833, (-1, 4)), (823, (33, 38)), (1386, (-1, 4)), (1559, (27, 32)), (52, (6, 9)), (1886, (-1, 4)), (1532, (-1, 4)), (288, (23, 30)), (1903, (16, 19)), (697, (10, 13)), (544, (35, 38)), (206, (10, 13)), (1032, (6, 9)), (170, (10, 13)), (1793, (-1, 4)), (2306, (6, 9)), (213, (14, 17)), (2339, (6, 10)), (2091, (19, 22)), (1171, (6, 9)), (2126, (10, 14)), (1046, (23, 28)), (2270, (9, 12)), (912, (-1, 4)), (2345, (-1, 4)), (1208, (6, 11)), (1868, (20, 26)), (709, (6, 10)), (197, (6, 9)), (2354, (-1, 4)), (1857, (25, 30)), (960, (6, 9)), (568, (-1, 4)), (1030, (6, 9)), (132, (-1, 4)), (1976, (6, 9)), (2078, (6, 9)), (389, (6, 9)), (1801, (-1, 4)), (2231, (-1, 4)), (1275, (-1, 4)), (845, (6, 9)), (1263, (-1, 4)), (180, (6, 9)), (2038, (6, 9)), (633, (-1, 4)), (81, (20, 23)), (2124, (-1, 4)), (216, (6, 9)), (1151, (28, 31)), (1018, (10, 13)), (848, (-1, 4)), (1468, (-1, 4)), (1971, (10, 13)), (1363, (23, 29)), (170, (6, 9)), (2369, (-1, 4)), (2004, (16, 19)), (2102, (-1, 4)), (1748, (-1, 4)), (90, (24, 30)), (1719, (6, 10)), (1134, (-1, 4)), (222, (6, 9)), (48, (6, 9)), (682, (-1, 4)), (1850, (6, 9)), (1880, (20, 23)), (1363, (30, 33)), (144, (18, 23)), (2393, (6, 9)), (187, (6, 9)), (267, (6, 12)), (380, (-1, 4)), (1489, (-1, 4)), (1324, (6, 9)), (1919, (6, 11)), (392, (14, 17)), (1682, (6, 9)), (333, (-1, 4)), (1726, (25, 29)), (1821, (6, 9)), (383, (14, 17)), (1036, (10, 13)), (477, (6, 12)), (2238, (-1, 4)), (1986, (10, 13)), (2317, (-1, 4)), (71, (6, 9)), (1770, (6, 9)), (1612, (6, 9)), (398, (10, 13)), (2273, (-1, 4)), (2351, (12, 15)), (1898, (-1, 4)), (1771, (34, 37)), (1022, (10, 13)), (999, (6, 9)), (2303, (-1, 4)), (420, (6, 9)), (1787, (6, 9)), (1259, (-1, 4)), (1383, (6, 9)), (23, (6, 12)), (2169, (10, 13)), (1738, (23, 29)), (274, (-1, 4)), (2129, (6, 9)), (1857, (12, 16)), (1708, (-1, 4)), (679, (-1, 4)), (326, (-1, 4)), (18, (43, 46)), (922, (31, 37)), (636, (29, 32)), (1929, (20, 25)), (1499, (6, 14)), (1129, (26, 30)), (1129, (-1, 4)), (1409, (16, 21)), (293, (21, 24)), (1932, (6, 9)), (1797, (10, 13)), (1793, (15, 19)), (1936, (12, 17)), (1359, (-1, 4)), (1101, (10, 13)), (585, (35, 38)), (1553, (-1, 4)), (1630, (-1, 4)), (585, (-1, 4)), (679, (6, 9)), (1647, (13, 17)), (417, (6, 9)), (1416, (13, 16)), (495, (15, 18)), (2248, (70, 73)), (815, (-1, 4)), (2348, (-1, 4)), (386, (14, 17)), (232, (10, 13)), (1880, (-1, 4)), (2115, (26, 30)), (1481, (20, 25)), (1851, (-1, 4)), (476, (-1, 4)), (1505, (-1, 4)), (705, (6, 9)), (1909, (-1, 4)), (1425, (10, 14)), (555, (30, 34)), (271, (-1, 4)), (685, (-1, 4)), (1689, (-1, 4)), (306, (32, 35)), (1857, (6, 11)), (549, (34, 37)), (45, (-1, 4)), (2177, (10, 13)), (1980, (-1, 4)), (1545, (-1, 4)), (1806, (6, 10)), (1692, (15, 21)), (658, (19, 22)), (2336, (6, 10)), (1633, (15, 19)), (1429, (-1, 4)), (1813, (6, 9)), (887, (25, 28)), (202, (-1, 4)), (1306, (6, 9)), (1404, (6, 9)), (950, (6, 9)), (177, (-1, 4)), (2087, (10, 13)), (1078, (16, 20)), (1022, (-1, 4)), (426, (14, 17)), (2049, (6, 9)), (1106, (18, 23)), (45, (28, 31)), (2180, (-1, 4)), (1394, (6, 9)), (783, (13, 18)), (990, (6, 9)), (774, (22, 26)), (1272, (6, 9)), (1282, (14, 17)), (1502, (-1, 4)), (845, (14, 18)), (124, (-1, 4)), (448, (6, 9)), (2129, (-1, 4)), (2276, (20, 24)), (2296, (10, 15)), (1312, (18, 21)), (1007, (6, 9)), (2310, (-1, 4)), (23, (30, 33)), (1192, (6, 11)), (2328, (6, 9)), (1236, (-1, 4)), (1474, (6, 9)), (997, (6, 9)), (839, (6, 9)), (2380, (6, 9)), (1347, (-1, 4)), (581, (10, 13)), (1841, (13, 16)), (2204, (28, 32)), (405, (22, 25)), (537, (-1, 4)), (555, (35, 38)), (1075, (6, 9)), (742, (6, 9)), (1617, (-1, 4)), (2049, (10, 13)), (2210, (33, 36)), (716, (27, 30)), (1242, (-1, 4)), (84, (19, 24)), (860, (27, 36)), (326, (20, 24)), (18, (-1, 4)), (864, (-1, 4)), (1844, (6, 9)), (1038, (-1, 4)), (1883, (-1, 4)), (1912, (14, 17)), (2303, (13, 20)), (1771, (29, 33)), (2292, (6, 10)), (1983, (6, 9)), (610, (6, 9)), (697, (6, 9)), (1120, (21, 24)), (206, (6, 9)), (281, (10, 16)), (461, (6, 10)), (903, (16, 21)), (1425, (6, 9)), (1775, (23, 26)), (749, (6, 9)), (860, (37, 40)), (329, (6, 9)), (973, (6, 12)), (1726, (30, 33)), (2310, (34, 39)), (1236, (24, 27)), (38, (6, 9)), (964, (-1, 4)), (2321, (-1, 4)), (1968, (-1, 4)), (1991, (6, 10)), (350, (-1, 4)), (581, (6, 9)), (2217, (15, 19)), (2110, (6, 9)), (1955, (6, 9)), (1758, (18, 22)), (1373, (26, 29)), (2254, (-1, 4)), (1563, (-1, 4)), (1754, (6, 9)), (1549, (18, 24)), (1545, (22, 28)), (687, (29, 32)), (2354, (12, 15)), (1239, (-1, 4)), (1129, (38, 42)), (2188, (28, 35)), (2069, (13, 16)), (887, (6, 10)), (1771, (6, 9)), (1158, (10, 13)), (1890, (6, 10)), (392, (10, 13)), (1018, (6, 9)), (1177, (32, 35)), (2303, (27, 30)), (2099, (-1, 4)), (1499, (24, 27)), (987, (14, 21)), (1919, (-1, 4)), (112, (-1, 4)), (29, (-1, 4)), (987, (22, 25)), (2043, (-1, 4)), (1223, (6, 11)), (383, (10, 13)), (2001, (10, 13)), (65, (-1, 4)), (1775, (-1, 4)), (1288, (73, 77)), (909, (-1, 4)), (1145, (-1, 4)), (358, (9, 12)), (1393, (6, 9)), (796, (49, 52)), (1758, (10, 14)), (1217, (6, 11)), (411, (6, 9)), (682, (6, 9)), (1413, (10, 13)), (1511, (14, 17)), (1138, (6, 9)), (1829, (6, 9)), (1455, (-1, 4)), (560, (6, 9)), (1468, (15, 20)), (401, (6, 9)), (1011, (-1, 4)), (1860, (-1, 4)), (2180, (35, 38)), (1697, (10, 13)), (845, (-1, 4)), (1309, (20, 23)), (1871, (41, 45)), (367, (18, 21)), (1994, (6, 9)), (1103, (26, 28)), (1460, (-1, 4)), (2288, (10, 13)), (2310, (26, 33)), (81, (10, 13)), (296, (127, 130)), (2379, (6, 9)), (1435, (-1, 4)), (701, (10, 13)), (2023, (6, 9)), (1496, (-1, 4)), (198, (6, 9)), (452, (-1, 5)), (383, (6, 9)), (1582, (17, 20)), (852, (-1, 4)), (2011, (6, 9)), (1609, (19, 25)), (1705, (-1, 4)), (1259, (14, 24)), (1134, (6, 10)), (2124, (6, 9)), (267, (13, 17)), (746, (22, 26)), (1778, (6, 9)), (1489, (24, 28)), (112, (6, 9)), (2001, (6, 9)), (1416, (23, 28)), (361, (9, 12)), (1617, (6, 9)), (2299, (6, 9)), (1797, (6, 9)), (1536, (6, 9)), (544, (24, 27)), (609, (6, 9)), (774, (9, 16)), (836, (6, 11)), (2329, (-1, 4)), (1588, (6, 9)), (281, (31, 35)), (309, (41, 44)), (1172, (10, 13)), (1723, (10, 13)), (1633, (10, 14)), (1252, (-1, 4)), (2270, (6, 8)), (1592, (14, 18)), (1489, (29, 32)), (1741, (26, 29)), (1399, (32, 37)), (438, (-1, 4)), (1654, (12, 15)), (1441, (-1, 4)), (1373, (19, 25)), (90, (17, 23)), (1582, (21, 24)), (1923, (14, 19)), (45, (13, 17)), (120, (11, 17)), (1939, (15, 19)), (1661, (14, 17)), (386, (6, 9)), (705, (10, 13)), (1435, (20, 23)), (1455, (33, 37)), (922, (-1, 4)), (417, (14, 17)), (1758, (37, 41)), (1174, (13, 19)), (599, (10, 13)), (1042, (6, 9)), (1741, (-1, 4)), (1894, (10, 13)), (1563, (14, 18)), (2188, (36, 39)), (1363, (-1, 4)), (389, (18, 21)), (927, (-1, 4)), (1741, (6, 10)), (2133, (6, 12)), (630, (-1, 4)), (2235, (12, 17)), (967, (18, 21)), (1942, (11, 14)), (633, (15, 18)), (414, (14, 17)), (1129, (51, 54)), (832, (6, 9)), (1056, (6, 10)), (445, (6, 9)), (1983, (10, 13)), (2082, (-1, 4)), (1288, (19, 22)), (1991, (44, 47)), (1697, (6, 9)), (81, (14, 19)), (1502, (32, 35)), (1101, (6, 9)), (1864, (6, 9)), (1682, (-1, 4)), (495, (-1, 4)), (1909, (14, 17)), (1960, (15, 21)), (1395, (6, 9)), (277, (6, 9)), (2064, (6, 9)), (848, (12, 16)), (982, (45, 48)), (614, (62, 65)), (100, (-1, 4)), (1263, (10, 13)), (1282, (-1, 4)), (1604, (6, 9)), (1090, (17, 20)), (1856, (6, 9)), (970, (6, 11)), (104, (6, 9)), (1288, (64, 68)), (786, (6, 9)), (1991, (32, 43)), (1309, (6, 10)), (1851, (12, 17)), (777, (37, 42)), (967, (13, 17)), (601, (6, 9)), (636, (-1, 4)), (780, (6, 13)), (2060, (6, 9)), (1399, (-1, 4)), (1825, (6, 9)), (2248, (54, 60)), (1667, (6, 9)), (345, (33, 37)), (1854, (6, 9)), (1775, (19, 22)), (2284, (-1, 4)), (1556, (18, 23)), (2018, (6, 9)), (2248, (-1, 4)), (1912, (-1, 4)), (2046, (18, 23)), (468, (-1, 4)), (1833, (15, 18)), (1509, (6, 9)), (1285, (14, 19)), (2113, (6, 9)), (906, (6, 11)), (931, (6, 9)), (1332, (18, 22)), (1664, (-1, 4)), (296, (131, 134)), (108, (24, 28)), (891, (-1, 4)), (1032, (10, 13)), (610, (10, 13)), (2188, (40, 45)), (2046, (-1, 4)), (499, (19, 22)), (2260, (6, 9)), (2040, (11, 14)), (370, (40, 43)), (899, (20, 25)), (1929, (-1, 4)), (1936, (6, 11)), (296, (-1, 4)), (1576, (-1, 4)), (884, (19, 23)), (712, (6, 9)), (1520, (6, 10)), (1549, (-1, 4)), (395, (6, 9)), (1173, (6, 9)), (2324, (14, 18)), (891, (10, 15)), (1936, (-1, 4)), (1481, (10, 15)), (1629, (6, 9)), (1585, (-1, 4)), (423, (10, 13)), (296, (33, 37)), (512, (22, 25)), (647, (6, 9)), (652, (29, 32)), (242, (-1, 4)), (564, (22, 25)), (2231, (19, 22)), (1763, (6, 9)), (84, (25, 28)), (1312, (33, 37)), (2070, (6, 11)), (2035, (6, 9)), (432, (-1, 4)), (315, (6, 9)), (2241, (6, 10)), (508, (-1, 4)), (216, (10, 13)), (1959, (6, 9)), (1425, (-1, 4)), (1685, (-1, 4)), (2056, (6, 9)), (1007, (28, 33)), (461, (-1, 4)), (1320, (6, 10)), (266, (-1, 4)), (1312, (13, 17)), (1285, (-1, 4)), (842, (-1, 4)), (761, (6, 9)), (603, (6, 9)), (309, (36, 40)), (167, (14, 19)), (2144, (6, 9)), (1196, (6, 11)), (2084, (-1, 4)), (2165, (-1, 4)), (395, (10, 13)), (2091, (11, 15)), (1556, (-1, 4)), (527, (-1, 4)), (512, (-1, 4)), (1733, (6, 9)), (174, (-1, 4)), (1084, (26, 32)), (856, (10, 13)), (411, (10, 13)), (531, (14, 20)), (802, (-1, 4)), (1386, (26, 31)), (709, (11, 14)), (361, (6, 8)), (1413, (6, 9)), (350, (50, 56)), (1778, (10, 13)), (1782, (6, 9)), (2043, (16, 21)), (577, (-1, 4)), (1711, (6, 9)), (401, (10, 13)), (1421, (-1, 4)), (1657, (-1, 4)), (746, (6, 12)), (1158, (6, 9)), (1084, (21, 25)), (1026, (-1, 4)), (2095, (42, 46)), (2195, (11, 16)), (411, (14, 17)), (1530, (6, 9)), (1692, (-1, 4)), (516, (24, 27)), (1106, (-1, 4)), (1630, (29, 32)), (1737, (6, 9)), (1579, (6, 9)), (614, (26, 29)), (120, (18, 21)), (982, (49, 52)), (603, (10, 13)), (1468, (32, 37)), (90, (6, 10)), (1405, (37, 40)), (1026, (6, 9)), (1860, (12, 15)), (1566, (24, 28)), (807, (6, 9)), (823, (22, 28)), (1165, (6, 9)), (1263, (6, 9)), (1902, (11, 14)), (1947, (-1, 4)), (790, (35, 40)), (1162, (-1, 4)), (1817, (6, 9)), (154, (12, 19)), (2195, (27, 33)), (1572, (6, 9)), (2200, (-1, 4)), (2183, (19, 22)), (1685, (20, 24)), (1675, (6, 10)), (1928, (6, 10)), (246, (-1, 4)), (429, (6, 9)), (1249, (-1, 4)), (1630, (24, 28)), (1871, (-1, 4)), (2220, (15, 19)), (982, (26, 32)), (1801, (14, 18)), (2095, (14, 19)), (1848, (6, 9)), (1963, (6, 9)), (1493, (-1, 4)), (2043, (22, 25)), (936, (55, 65)), (1297, (10, 13)), (323, (12, 16)), (1214, (6, 11)), (2210, (54, 58)), (2039, (6, 9)), (386, (10, 13)), (1532, (6, 9)), (191, (6, 9)), (1053, (17, 24)), (915, (22, 26)), (560, (10, 13)), (2177, (6, 9)), (950, (-1, 4)), (2115, (40, 43)), (1327, (31, 35)), (2188, (-1, 4)), (944, (6, 9)), (1809, (6, 9)), (405, (10, 13)), (191, (-1, 4)), (2224, (-1, 4)), (1612, (10, 13)), (1600, (6, 9)), (18, (21, 25)), (1441, (6, 9)), (1279, (6, 10)), (227, (-1, 4)), (309, (11, 18)), (1409, (-1, 4)), (1103, (6, 12)), (32, (-1, 4)), (1763, (10, 13)), (441, (-1, 4)), (828, (6, 9)), (1030, (-1, 4)), (990, (10, 13)), (408, (6, 9)), (2110, (-1, 4)), (802, (29, 32)), (2027, (26, 29)), (2324, (-1, 4)), (1003, (6, 9)), (414, (6, 9)), (1923, (6, 10)), (873, (14, 23)), (116, (10, 13)), (531, (30, 33)), (1191, (6, 9)), (1906, (-1, 4)), (1566, (-1, 4)), (2040, (6, 10)), (1317, (6, 11)), (1110, (6, 10)), (1481, (16, 19)), (1294, (6, 10)), (931, (-1, 4)), (405, (18, 21)), (1879, (6, 10)), (1007, (-1, 4)), (1390, (10, 14)), (1653, (6, 9)), (1166, (-1, 4)), (771, (9, 13)), (336, (12, 16)), (312, (18, 21)), (1245, (6, 9)), (738, (6, 9)), (1063, (15, 18)), (2382, (6, 9)), (320, (12, 16)), (1416, (-1, 4)), (877, (6, 9)), (1239, (24, 27)), (457, (6, 9)), (1701, (6, 9)), (1327, (-1, 4)), (1864, (10, 13)), (1943, (6, 9)), (1445, (-1, 4)), (1405, (28, 32)), (1087, (-1, 4)), (1072, (-1, 4)), (1871, (29, 32)), (1692, (27, 31)), (2342, (25, 29)), (1148, (13, 17)), (687, (-1, 4)), (476, (10, 13)), (1582, (6, 12)), (2389, (6, 9)), (1915, (19, 24)), (1572, (-1, 4)), (452, (23, 26)), (2082, (6, 9)), (1016, (6, 10)), (1678, (6, 9)), (1903, (10, 15)), (1531, (6, 9)), (790, (41, 44)), (2015, (6, 10)), (1014, (-1, 4)), (864, (39, 43)), (1245, (10, 13)), (520, (10, 13)), (1202, (13, 17)), (1637, (-1, 4)), (2046, (24, 27)), (2266, (-1, 4)), (1758, (23, 31)), (1912, (9, 13)), (1181, (6, 9)), (1438, (-1, 4)), (1003, (-1, 4)), (2151, (6, 9)), (823, (-1, 4))])
[((18, (-1, 4)), "*CHI:\tit's not gonna talk &d is [/] is [/] (.) is there blinkin(g) too (.) .\n"), ((18, (21, 25)), "*CHI:\tit's not gonna talk &d is [/] is [/] (.) is there blinkin(g) too (.) .\n"), ((18, (43, 46)), "*CHI:\tit's not gonna talk &d is [/] is [/] (.) is there blinkin(g) too (.) .\n"), ((23, (6, 12)), "*CHI:\tthat's there blinkin(g) (.) .\n"), ((23, (30, 33)), "*CHI:\tthat's there blinkin(g) (.) .\n"), ((26, (-1, 4)), '*CHI:\tand is off !\n'), ((29, (-1, 4)), '*CHI:\txxx off .\n'), ((32, (-1, 4)), '*CHI:\tthat is off .\n'), ((38, (6, 9)), '*BAB:\tzzz .\n'), ((45, (-1, 4)), '*CHI:\t<Daddy look this off> [<] .\n'), ((45, (13, 17)), '*CHI:\t<Daddy look this off> [<] .\n'), ((45, (28, 31)), '*CHI:\t<Daddy look this off> [<] .\n'), ((48, (6, 9)), '*BAB:\tzzz .\n'), ((52, (6, 9)), '*FAT:\txxx .\n'), ((53, (10, 13)), '*CHI:\toff (.) .\n'), ((65, (-1, 4)), '*CHI:\tDaddy look_it .\n'), ((65, (12, 19)), '*CHI:\tDaddy look_it .\n'), ((71, (6, 9)), '*CHI:\tzzz [>] .\n'), ((71, (10, 13)), '*CHI:\tzzz [>] .\n'), ((78, (6, 10)), '*MOT:\tokay [<] .\n'), ((78, (11, 14)), '*MOT:\tokay [<] .\n'), ((81, (10, 13)), '*MOT:\t<go sit down> [<] .\n'), ((81, (14, 19)), '*MOT:\t<go sit down> [<] .\n'), ((81, (20, 23)), '*MOT:\t<go sit down> [<] .\n'), ((84, (12, 18)), "*MOT:\t<it's supper time> [<] .\n"), ((84, (19, 24)), "*MOT:\t<it's supper time> [<] .\n"), ((84, (25, 28)), "*MOT:\t<it's supper time> [<] .\n"), ((90, (6, 10)), "*FAT:\tokay Aimee that's enough .\n"), ((90, (17, 23)), "*FAT:\tokay Aimee that's enough .\n"), ((90, (24, 30)), "*FAT:\tokay Aimee that's enough .\n"), ((97, (12, 18)), "*MOT:\tAimee that's enough .\n"), ((97, (19, 25)), "*MOT:\tAimee that's enough .\n"), ((100, (-1, 4)), '*MOT:\tokay ?\n'), ((100, (6, 10)), '*MOT:\tokay ?\n'), ((104, (6, 9)), '*CHI:\tzzz .\n'), ((108, (10, 15)), "*FAT:\tI'm gonna put the pots down .\n"), ((108, (24, 28)), "*FAT:\tI'm gonna put the pots down .\n"), ((112, (-1, 4)), '*CHI:\thuh ?\n'), ((112, (6, 9)), '*CHI:\thuh ?\n'), ((116, (6, 9)), '*BAB:\tzzz [>] .\n'), ((116, (10, 13)), '*BAB:\tzzz [>] .\n'), ((120, (-1, 4)), '*MOT:\tthat blouse [?] is dirty .\n'), ((120, (11, 17)), '*MOT:\tthat blouse [?] is dirty .\n'), ((120, (18, 21)), '*MOT:\tthat blouse [?] is dirty .\n'), ((124, (-1, 4)), "*MOT:\tyou don't need it (.) .\n"), ((127, (6, 11)), "*MOT:\tdon't put it on .\n"), ((132, (-1, 4)), "*MOT:\tyou don't need to put it on .\n"), ((144, (18, 23)), '*CHI:\t<Mommy> [<] right here is dirty .\n'), ((150, (6, 9)), '*CHI:\tzzz .\n'), ((154, (12, 19)), '*CHI:\tMommy look_it over here .\n'), ((157, (6, 9)), '*BAB:\tzzz .\n'), ((161, (6, 12)), "*MOT:\tthat's because you went to school with it .\n"), ((161, (33, 39)), "*MOT:\tthat's because you went to school with it .\n"), ((167, (14, 19)), '*MOT:\txxx [>] dirty .\n'), ((170, (6, 9)), '*CHI:\tzzz [<] .\n'), ((170, (10, 13)), '*CHI:\tzzz [<] .\n'), ((174, (-1, 4)), "*CHI:\tI didn't fall (.) .\n"), ((174, (20, 23)), "*CHI:\tI didn't fall (.) .\n"), ((177, (-1, 4)), "*CHI:\tI didn't fall in it .\n"), ((180, (6, 9)), '*CHI:\tzzz .\n'), ((184, (17, 21)), "*CHI:\txxx didn't fall in it .\n"), ((187, (6, 9)), '*CHI:\tzzz .\n'), ((191, (-1, 4)), '*CHI:\txxx my xxx .\n'), ((191, (6, 9)), '*CHI:\txxx my xxx .\n'), ((195, (6, 9)), '*CHI:\txxx .\n'), ((197, (6, 9)), '*FAT:\txxx .\n'), ((198, (6, 9)), '*BAB:\tzzz .\n'), ((202, (-1, 4)), '*CHI:\thappy bir(thday) [/] xxx .\n'), ((206, (6, 9)), '*BAB:\tzzz [>] .\n'), ((206, (10, 13)), '*BAB:\tzzz [>] .\n'), ((210, (8, 11)), '*CHI:\t0 [<] .\n'), ((213, (14, 17)), '*MOT:\t<Aimee> [>] +...\n'), ((216, (6, 9)), '*BAB:\tzzz [<] .\n'), ((216, (10, 13)), '*BAB:\tzzz [<] .\n'), ((222, (6, 9)), '*BAB:\tzzz .\n'), ((227, (-1, 4)), '*CHI:\thappy birthday to you (.) .\n'), ((232, (6, 9)), '*CHI:\tzzz (.) .\n'), ((232, (10, 13)), '*CHI:\tzzz (.) .\n'), ((237, (6, 9)), '*CHI:\tzzz .\n'), ((242, (-1, 4)), '*CHI:\thappy birthday to you (.) .\n'), ((246, (-1, 4)), '*CHI:\thappy birthday to you (.) .\n'), ((266, (-1, 4)), '*CHI:\tknow [?] [//] .\n'), ((267, (6, 12)), '*CHI:\twan(t) (t)a say my prayers (.) ?\n'), ((267, (13, 17)), '*CHI:\twan(t) (t)a say my prayers (.) ?\n'), ((267, (25, 32)), '*CHI:\twan(t) (t)a say my prayers (.) ?\n'), ((271, (-1, 4)), '*CHI:\tI <know h(ow) > [/] <I> [/] <I> [//] Daddy I know it .\n'), ((274, (-1, 4)), '*FAT:\txxx ?\n'), ((274, (6, 9)), '*FAT:\txxx ?\n'), ((276, (6, 9)), '*CHI:\txxx .\n'), ((277, (6, 9)), '*BAB:\tzzz .\n'), ((281, (10, 16)), '*CHI:\tour father in heaven xxx amen .\n'), ((281, (31, 35)), '*CHI:\tour father in heaven xxx amen .\n'), ((288, (23, 30)), '*MOT:\tyou can say your prayers real good .\n'), ((293, (-1, 4)), '*CHI:\tI can say that (.) .\n'), ((293, (21, 24)), '*CHI:\tI can say that (.) .\n'), ((296, (-1, 4)), '*CHI:\tI pledge allegiance to the flag of the United_States_of_America and to the republic for which it stands one nation under god [>] .\n'), ((296, (33, 37)), '*CHI:\tI pledge allegiance to the flag of the United_States_of_America and to the republic for which it stands one nation under god [>] .\n'), ((296, (114, 120)), '*CHI:\tI pledge allegiance to the flag of the United_States_of_America and to the republic for which it stands one nation under god [>] .\n'), ((296, (127, 130)), '*CHI:\tI pledge allegiance to the flag of the United_States_of_America and to the republic for which it stands one nation under god [>] .\n'), ((296, (131, 134)), '*CHI:\tI pledge allegiance to the flag of the United_States_of_America and to the republic for which it stands one nation under god [>] .\n'), ((306, (-1, 4)), '*FAT:\t<Elizabeth what happened> [<] ?\n'), ((306, (32, 35)), '*FAT:\t<Elizabeth what happened> [<] ?\n'), ((309, (-1, 4)), '*CHI:\twith liberty and justice <for all> [>] .\n'), ((309, (11, 18)), '*CHI:\twith liberty and justice <for all> [>] .\n'), ((309, (23, 30)), '*CHI:\twith liberty and justice <for all> [>] .\n'), ((309, (36, 40)), '*CHI:\twith liberty and justice <for all> [>] .\n'), ((309, (41, 44)), '*CHI:\twith liberty and justice <for all> [>] .\n'), ((312, (18, 21)), '*FAT:\t<Elizabeth> [<] ?\n'), ((315, (6, 9)), '*MOT:\txxx .\n'), ((316, (-1, 4)), '*FAT:\tElizabeth ?\n'), ((320, (12, 16)), '*CHI:\tMommy look .\n'), ((323, (12, 16)), '*CHI:\tMommy look .\n'), ((326, (-1, 4)), '*CHI:\tI xxx [/] (.) okay .\n'), ((326, (20, 24)), '*CHI:\tI xxx [/] (.) okay .\n'), ((329, (6, 9)), '*CHI:\tzzz .\n'), ((333, (-1, 4)), '*CHI:\tpledge alle(giance) +...\n'), ((336, (12, 16)), '*CHI:\tMommy hear this one .\n'), ((339, (12, 16)), '*CHI:\tMommy hear this one .\n'), ((345, (-1, 4)), '*CHI:\tI pledge allegiance to the flag of United_States_of_Amer(ica) .\n'), ((345, (33, 37)), '*CHI:\tI pledge allegiance to the flag of United_States_of_Amer(ica) .\n'), ((350, (-1, 4)), '*CHI:\tand to the republic for which it stands one nation under God indivisible and xxx justice for all .\n'), ((350, (50, 56)), '*CHI:\tand to the republic for which it stands one nation under God indivisible and xxx justice for all .\n'), ((350, (87, 94)), '*CHI:\tand to the republic for which it stands one nation under God indivisible and xxx justice for all .\n'), ((358, (6, 8)), '*FAT:\tmm [>] .\n'), ((358, (9, 12)), '*FAT:\tmm [>] .\n'), ((361, (6, 8)), '*MOT:\tmm [<] .\n'), ((361, (9, 12)), '*MOT:\tmm [<] .\n'), ((367, (18, 21)), '*FAT:\tpretty good huh ?\n'), ((370, (33, 39)), '*MOT:\tnow what else you learn in school (.) ?\n'), ((370, (40, 43)), '*MOT:\tnow what else you learn in school (.) ?\n'), ((376, (27, 33)), '*MOT:\twhat else you say in school ?\n'), ((380, (-1, 4)), '*CHI:\tsay a@l b@l c@l .\n'), ((380, (14, 17)), '*CHI:\tsay a@l b@l c@l .\n'), ((380, (18, 21)), '*CHI:\tsay a@l b@l c@l .\n'), ((383, (6, 9)), '*CHI:\ta@l b@l c@l .\n'), ((383, (10, 13)), '*CHI:\ta@l b@l c@l .\n'), ((383, (14, 17)), '*CHI:\ta@l b@l c@l .\n'), ((386, (6, 9)), '*CHI:\te@l f@l g@l .\n'), ((386, (10, 13)), '*CHI:\te@l f@l g@l .\n'), ((386, (14, 17)), '*CHI:\te@l f@l g@l .\n'), ((389, (6, 9)), '*CHI:\te@l f@l g@l (.) .\n'), ((389, (10, 13)), '*CHI:\te@l f@l g@l (.) .\n'), ((389, (14, 17)), '*CHI:\te@l f@l g@l (.) .\n'), ((389, (18, 21)), '*CHI:\te@l f@l g@l (.) .\n'), ((392, (6, 9)), '*CHI:\th@l i@l j@l .\n'), ((392, (10, 13)), '*CHI:\th@l i@l j@l .\n'), ((392, (14, 17)), '*CHI:\th@l i@l j@l .\n'), ((395, (6, 9)), '*CHI:\th@l i@l j@l .\n'), ((395, (10, 13)), '*CHI:\th@l i@l j@l .\n'), ((395, (14, 17)), '*CHI:\th@l i@l j@l .\n'), ((398, (6, 9)), '*CHI:\tl@l m@l n@l o@l <p@l> [>] .\n'), ((398, (10, 13)), '*CHI:\tl@l m@l n@l o@l <p@l> [>] .\n'), ((398, (18, 21)), '*CHI:\tl@l m@l n@l o@l <p@l> [>] .\n'), ((401, (6, 9)), '*MOT:\tzzz [<] .\n'), ((401, (10, 13)), '*MOT:\tzzz [<] .\n'), ((405, (6, 9)), '*CHI:\tl@l m@l n@l o@l p@l .\n'), ((405, (10, 13)), '*CHI:\tl@l m@l n@l o@l p@l .\n'), ((405, (18, 21)), '*CHI:\tl@l m@l n@l o@l p@l .\n'), ((405, (22, 25)), '*CHI:\tl@l m@l n@l o@l p@l .\n'), ((408, (6, 9)), '*CHI:\tq@l r@l s@l .\n'), ((408, (10, 13)), '*CHI:\tq@l r@l s@l .\n'), ((408, (14, 17)), '*CHI:\tq@l r@l s@l .\n'), ((411, (6, 9)), '*CHI:\tq@l r@l s@l .\n'), ((411, (10, 13)), '*CHI:\tq@l r@l s@l .\n'), ((411, (14, 17)), '*CHI:\tq@l r@l s@l .\n'), ((414, (6, 9)), '*CHI:\tt@l u@l v@l .\n'), ((414, (14, 17)), '*CHI:\tt@l u@l v@l .\n'), ((417, (6, 9)), '*CHI:\tt@l u@l v@l .\n'), ((417, (14, 17)), '*CHI:\tt@l u@l v@l .\n'), ((420, (6, 9)), '*CHI:\tw@l x@l (.) .\n'), ((423, (6, 9)), '*CHI:\tw@l x@l .\n'), ((423, (10, 13)), '*CHI:\tw@l x@l .\n'), ((426, (6, 9)), '*CHI:\ty@l and z@l .\n'), ((426, (14, 17)), '*CHI:\ty@l and z@l .\n'), ((429, (6, 9)), '*CHI:\ty@l and z@l .\n'), ((429, (14, 17)), '*CHI:\ty@l and z@l .\n'), ((432, (-1, 4)), '*CHI:\tsay it over .\n'), ((438, (-1, 4)), '*CHI:\tover .\n'), ((441, (-1, 4)), '*CHI:\tover +...\n'), ((445, (6, 9)), '*BAB:\tzzz .\n'), ((448, (6, 9)), '*BAB:\tzzz [>] .\n'), ((448, (10, 13)), '*BAB:\tzzz [>] .\n'), ((452, (-1, 5)), '*CHI:\t<Mommy was that> [<] song was good ?\n'), ((452, (23, 26)), '*CHI:\t<Mommy was that> [<] song was good ?\n'), ((452, (27, 31)), '*CHI:\t<Mommy was that> [<] song was good ?\n'), ((457, (6, 9)), '*BAB:\tzzz .\n'), ((461, (-1, 4)), '*MOT:\tyeah that song was good .\n'), ((461, (6, 10)), '*MOT:\tyeah that song was good .\n'), ((461, (16, 20)), '*MOT:\tyeah that song was good .\n'), ((468, (-1, 4)), '*MOT:\tcan you count ?\n'), ((476, (-1, 4)), '*CHI:\tsay [/] .\n'), ((476, (10, 13)), '*CHI:\tsay [/] .\n'), ((477, (6, 12)), '*MOT:\tplease ?\n'), ((481, (-1, 4)), '*CHI:\tDaddy taking us to zoo tomorrow .\n'), ((486, (6, 9)), '*CHI:\tzoo tomorrow (.) .\n'), ((486, (19, 22)), '*CHI:\tzoo tomorrow (.) .\n'), ((489, (-1, 4)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((489, (29, 32)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((495, (-1, 4)), '*CHI:\tstay all day .\n'), ((495, (15, 18)), '*CHI:\tstay all day .\n'), ((499, (19, 22)), '*CHI:\tgoing to the zoo (.) <zoo (.) zoo> [>] .\n'), ((508, (-1, 4)), '*CHI:\tyou will come too (.) too (.) too .\n'), ((512, (-1, 4)), '*CHI:\twe going to the zoo (.) zoo (.) zoo +...\n'), ((512, (22, 25)), '*CHI:\twe going to the zoo (.) zoo (.) zoo +...\n'), ((516, (-1, 4)), '*MOT:\twe goin(g) to the zoo (.) zoo (.) zoo +...\n'), ((516, (24, 27)), '*MOT:\twe goin(g) to the zoo (.) zoo (.) zoo +...\n'), ((520, (6, 9)), '*CHI:\tzoo (.) .\n'), ((520, (10, 13)), '*CHI:\tzoo (.) .\n'), ((527, (-1, 4)), '*CHI:\t<you will come too> [>] (.) too (.) too .\n'), ((527, (6, 10)), '*CHI:\t<you will come too> [>] (.) too (.) too .\n'), ((531, (-1, 4)), '*FAT:\t<xxx my school teacher> [<] ?\n'), ((531, (14, 20)), '*FAT:\t<xxx my school teacher> [<] ?\n'), ((531, (21, 29)), '*FAT:\t<xxx my school teacher> [<] ?\n'), ((531, (30, 33)), '*FAT:\t<xxx my school teacher> [<] ?\n'), ((537, (-1, 4)), '*CHI:\twe going to the <zoo (.) zoo (.) zoo> [>] +...\n'), ((542, (10, 13)), '*MOT:\txxx [>] ?\n'), ((544, (-1, 4)), '*CHI:\t<Daddy taking us> [<] to the zoo tomorrow .\n'), ((544, (24, 27)), '*CHI:\t<Daddy taking us> [<] to the zoo tomorrow .\n'), ((544, (35, 38)), '*CHI:\t<Daddy taking us> [<] to the zoo tomorrow .\n'), ((549, (6, 10)), '*CHI:\t<zoo tomorrow zoo tomorrow> [>] .\n'), ((549, (34, 37)), '*CHI:\t<zoo tomorrow zoo tomorrow> [>] .\n'), ((555, (-1, 4)), '*CHI:\tDaddy taking <us to the zoo> [>] tomorrow .\n'), ((555, (19, 22)), '*CHI:\tDaddy taking <us to the zoo> [>] tomorrow .\n'), ((555, (30, 34)), '*CHI:\tDaddy taking <us to the zoo> [>] tomorrow .\n'), ((555, (35, 38)), '*CHI:\tDaddy taking <us to the zoo> [>] tomorrow .\n'), ((560, (6, 9)), '*BAB:\tzzz [<] .\n'), ((560, (10, 13)), '*BAB:\tzzz [<] .\n'), ((564, (-1, 4)), '*CHI:\tand we stay all day .\n'), ((564, (22, 25)), '*CHI:\tand we stay all day .\n'), ((568, (-1, 4)), '*CHI:\twe going to the zoo (.) zoo (.) zoo .\n'), ((568, (22, 25)), '*CHI:\twe going to the zoo (.) zoo (.) zoo .\n'), ((577, (-1, 4)), '*CHI:\tyou will come too [>] (.) .\n'), ((577, (28, 31)), '*CHI:\tyou will come too [>] (.) .\n'), ((581, (6, 9)), '*MOT:\thm: [<] ?\n'), ((581, (10, 13)), '*MOT:\thm: [<] ?\n'), ((585, (-1, 4)), '*CHI:\t<too (.) too we going to the zoo (.) zoo (.) xxx> [>] +...\n'), ((585, (35, 38)), '*CHI:\t<too (.) too we going to the zoo (.) zoo (.) xxx> [>] +...\n'), ((591, (-1, 4)), '*FAT:\t<like right now xxx [/] > [<] .\n'), ((599, (10, 13)), '*FAT:\txxx (.) ?\n'), ((601, (6, 9)), '*FAT:\txxx .\n'), ((603, (6, 9)), '*BAB:\tzzz [>] .\n'), ((603, (10, 13)), '*BAB:\tzzz [>] .\n'), ((607, (10, 13)), '*CHI:\txxx [<] !\n'), ((609, (6, 9)), '*CHI:\txxx .\n'), ((610, (6, 9)), '*CHI:\tzzz (.) .\n'), ((610, (10, 13)), '*CHI:\tzzz (.) .\n'), ((614, (6, 9)), '*CHI:\txxx we going to the zoo (.) zoo (.) <zoo (.) how about> [>] you (.) you (.) you .\n'), ((614, (26, 29)), '*CHI:\txxx we going to the zoo (.) zoo (.) <zoo (.) how about> [>] you (.) you (.) you .\n'), ((614, (62, 65)), '*CHI:\txxx we going to the zoo (.) zoo (.) <zoo (.) how about> [>] you (.) you (.) you .\n'), ((622, (-1, 4)), "*CHI:\tyou will come too (.) too (.) too (.) we're going to the zoo (.) zoo (.) zoo .\n"), ((622, (44, 49)), "*CHI:\tyou will come too (.) too (.) too (.) we're going to the zoo (.) zoo (.) zoo .\n"), ((622, (63, 66)), "*CHI:\tyou will come too (.) too (.) too (.) we're going to the zoo (.) zoo (.) zoo .\n"), ((630, (-1, 4)), '*CHI:\tyou better stay off this +...\n'), ((633, (-1, 4)), '*CHI:\tstay off xxx .\n'), ((633, (15, 18)), '*CHI:\tstay off xxx .\n'), ((636, (-1, 4)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((636, (29, 32)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((642, (6, 9)), '*CHI:\tzoo tomorrow .\n'), ((647, (6, 9)), '*CHI:\tzoo tomorrow .\n'), ((652, (-1, 4)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((652, (29, 32)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((658, (-1, 4)), '*CHI:\txxx stay all day .\n'), ((658, (19, 22)), '*CHI:\txxx stay all day .\n'), ((669, (10, 13)), '*FAT:\txxx [<] ?\n'), ((675, (-1, 4)), '*FAT:\tgo away (.) .\n'), ((679, (-1, 4)), '*FAT:\txxx ?\n'), ((679, (6, 9)), '*FAT:\txxx ?\n'), ((682, (-1, 4)), '*MOT:\thuh ?\n'), ((682, (6, 9)), '*MOT:\thuh ?\n'), ((685, (-1, 4)), '*FAT:\txxx ?\n'), ((685, (6, 9)), '*FAT:\txxx ?\n'), ((687, (-1, 4)), '*CHI:\tDaddy taking us to the zoo tomorrow [>] (.) <zoo tomorrow > [>] (.) <zoo tomorrow (.) zoo tomorrow (.) Daddy taking us> [>] to the zoo tomorrow +...\n'), ((687, (29, 32)), '*CHI:\tDaddy taking us to the zoo tomorrow [>] (.) <zoo tomorrow > [>] (.) <zoo tomorrow (.) zoo tomorrow (.) Daddy taking us> [>] to the zoo tomorrow +...\n'), ((687, (42, 45)), '*CHI:\tDaddy taking us to the zoo tomorrow [>] (.) <zoo tomorrow > [>] (.) <zoo tomorrow (.) zoo tomorrow (.) Daddy taking us> [>] to the zoo tomorrow +...\n'), ((697, (6, 9)), '*BAB:\tzzz [<] .\n'), ((697, (10, 13)), '*BAB:\tzzz [<] .\n'), ((701, (6, 9)), '*BAB:\tzzz (.) .\n'), ((701, (10, 13)), '*BAB:\tzzz (.) .\n'), ((705, (6, 9)), '*BAB:\tzzz [>] .\n'), ((705, (10, 13)), '*BAB:\tzzz [>] .\n'), ((709, (6, 10)), '*CHI:\tokay [<] .\n'), ((709, (11, 14)), '*CHI:\tokay [<] .\n'), ((712, (6, 9)), '*BAB:\tzzz [>] .\n'), ((712, (10, 13)), '*BAB:\tzzz [>] .\n'), ((716, (27, 30)), '*CHI:\t<tutti@wp frutti@wp> [<] .\n'), ((720, (12, 16)), '*CHI:\tMommy look !\n'), ((723, (6, 13)), '*CHI:\tlook_it .\n'), ((738, (6, 9)), '*CHI:\tget out my stuff !\n'), ((738, (17, 22)), '*CHI:\tget out my stuff !\n'), ((742, (6, 9)), '*BAB:\tzzz .\n'), ((746, (6, 12)), "*FAT:\twhat's all this junk ?\n"), ((746, (22, 26)), "*FAT:\twhat's all this junk ?\n"), ((749, (6, 9)), '*BAB:\tzzz .\n'), ((753, (12, 17)), "*CHI:\tMommy let's get rid of my stuff (.) !\n"), ((753, (32, 37)), "*CHI:\tMommy let's get rid of my stuff (.) !\n"), ((753, (38, 41)), "*CHI:\tMommy let's get rid of my stuff (.) !\n"), ((758, (-1, 4)), '*CHI:\tand now I come on (.) .\n'), ((758, (24, 27)), '*CHI:\tand now I come on (.) .\n'), ((761, (6, 9)), '*CHI:\tzzz .\n'), ((765, (-1, 4)), "*CHI:\tI can't get rid of my stuff .\n"), ((765, (28, 33)), "*CHI:\tI can't get rid of my stuff .\n"), ((771, (9, 13)), '*CHI:\toh look .\n'), ((774, (9, 16)), '*CHI:\toh look_it this gold [?] .\n'), ((774, (22, 26)), '*CHI:\toh look_it this gold [?] .\n'), ((774, (27, 30)), '*CHI:\toh look_it this gold [?] .\n'), ((777, (37, 42)), '*CHI:\tlook_it this little (.) pretty stuff .\n'), ((780, (6, 13)), '*CHI:\tlook_it (.) right here .\n'), ((780, (14, 17)), '*CHI:\tlook_it (.) right here .\n'), ((783, (13, 18)), '*CHI:\tpretty stuff .\n'), ((786, (6, 9)), '*CHI:\tzzz .\n'), ((790, (35, 40)), '*CHI:\tMommy how do I get rid of my stuff [?] ?\n'), ((790, (41, 44)), '*CHI:\tMommy how do I get rid of my stuff [?] ?\n'), ((796, (49, 52)), '*CHI:\t<Mommy> [/] Mommy we [/] we goin(g) to the zoo (.) zoo (.) zoo .\n'), ((802, (-1, 4)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((802, (29, 32)), '*CHI:\tDaddy taking us to the zoo tomorrow .\n'), ((807, (6, 9)), '*CHI:\tzoo tomorrow .\n'), ((811, (6, 9)), '*CHI:\tzoo tomorrow .\n'), ((815, (-1, 4)), '*CHI:\tDaddy taking us .\n'), ((819, (6, 9)), '*CHI:\tzzz .\n'), ((823, (-1, 4)), "*MOT:\tyou don't think babies [?] can't do it .\n"), ((823, (22, 28)), "*MOT:\tyou don't think babies [?] can't do it .\n"), ((823, (33, 38)), "*MOT:\tyou don't think babies [?] can't do it .\n"), ((828, (6, 9)), '*CHI:\tzzz .\n'), ((832, (6, 9)), '*CHI:\tzzz .\n'), ((836, (-1, 4)), '*FAT:\thurry up Aimee hurry (.) .\n'), ((836, (6, 11)), '*FAT:\thurry up Aimee hurry (.) .\n'), ((839, (6, 9)), '*FAT:\txxx hurry up (.) .\n'), ((839, (19, 22)), '*FAT:\txxx hurry up (.) .\n'), ((842, (-1, 4)), '*FAT:\thurry up Aimee .\n'), ((845, (-1, 4)), '*CHI:\they [?] look .\n'), ((845, (6, 9)), '*CHI:\they [?] look .\n'), ((845, (14, 18)), '*CHI:\they [?] look .\n'), ((848, (-1, 4)), '*CHI:\tDaddy look (.) .\n'), ((848, (12, 16)), '*CHI:\tDaddy look (.) .\n'), ((852, (-1, 4)), '*CHI:\tcan I get some milk please (.) ?\n'), ((852, (21, 25)), '*CHI:\tcan I get some milk please (.) ?\n'), ((856, (6, 9)), '*CHI:\tzzz (.) .\n'), ((856, (10, 13)), '*CHI:\tzzz (.) .\n'), ((860, (27, 36)), '*CHI:\tMommy can I get some chocolate (.) ?\n'), ((860, (37, 40)), '*CHI:\tMommy can I get some chocolate (.) ?\n'), ((864, (-1, 4)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((864, (21, 30)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((864, (39, 43)), '*CHI:\tcan I get some chocolate too and milk too .\n'), ((869, (6, 9)), '*CHI:\tzzz .\n'), ((873, (14, 23)), '*CHI:\txxx [>] chocolate .\n'), ((877, (6, 9)), '*BAB:\tzzz [<] .\n'), ((877, (10, 13)), '*BAB:\tzzz [<] .\n'), ((881, (6, 10)), '*CHI:\tmilk and chocolate .\n'), ((881, (15, 24)), '*CHI:\tmilk and chocolate .\n'), ((884, (19, 23)), '*CHI:\tMommy I want milk and chocolate .\n'), ((884, (28, 37)), '*CHI:\tMommy I want milk and chocolate .\n'), ((887, (6, 10)), '*CHI:\tmilk and chocolate (.) .\n'), ((887, (15, 24)), '*CHI:\tmilk and chocolate (.) .\n'), ((887, (25, 28)), '*CHI:\tmilk and chocolate (.) .\n'), ((891, (-1, 4)), '*CHI:\tand shake good up .\n'), ((891, (10, 15)), '*CHI:\tand shake good up .\n'), ((895, (-1, 4)), '*CHI:\tand shake it up .\n'), ((895, (10, 15)), '*CHI:\tand shake it up .\n'), ((899, (-1, 4)), '*CHI:\tand give me a spoon .\n'), ((899, (20, 25)), '*CHI:\tand give me a spoon .\n'), ((903, (16, 21)), '*CHI:\tgive me a spoon .\n'), ((906, (6, 11)), '*CHI:\tya@wp hahaha@wp +...\n'), ((909, (-1, 4)), '*MOT:\tI found that now .\n'), ((912, (-1, 4)), '*MOT:\tthis is the stuff .\n'), ((912, (18, 23)), '*MOT:\tthis is the stuff .\n'), ((915, (16, 21)), "*CHI:\tMommy I'm gonna spin around .\n"), ((915, (22, 26)), "*CHI:\tMommy I'm gonna spin around .\n"), ((922, (-1, 4)), "*MOT:\ttake any xxx now because you're gonna get a beatin(g) .\n"), ((922, (31, 37)), "*MOT:\ttake any xxx now because you're gonna get a beatin(g) .\n"), ((922, (38, 43)), "*MOT:\ttake any xxx now because you're gonna get a beatin(g) .\n"), ((927, (-1, 4)), '*MOT:\tgo sit down .\n'), ((931, (-1, 4)), '*CHI:\thuh ?\n'), ((931, (6, 9)), '*CHI:\thuh ?\n'), ((936, (55, 65)), '*MOT:\tlet me do it because I can just see you making a whole mess of this whole place .\n'), ((936, (80, 85)), '*MOT:\tlet me do it because I can just see you making a whole mess of this whole place .\n'), ((944, (-1, 4)), '*BAB:\they .\n'), ((944, (6, 9)), '*BAB:\they .\n'), ((950, (-1, 4)), '*CHI:\txxx have no xxx ?\n'), ((950, (6, 9)), '*CHI:\txxx have no xxx ?\n'), ((960, (6, 9)), '*CHI:\tzzz .\n'), ((964, (-1, 4)), '*BAB:\they [>] !\n'), ((964, (6, 9)), '*BAB:\they [>] !\n'), ((964, (10, 13)), '*BAB:\they [>] !\n'), ((967, (13, 17)), '*CHI:\t<thank you> [<] .\n'), ((967, (18, 21)), '*CHI:\t<thank you> [<] .\n'), ((970, (6, 11)), '*CHI:\tthank you Mommy .\n'), ((973, (6, 12)), "*FAT:\twhat's so xxx ?\n"), ((977, (6, 9)), '*BAB:\tzzz .\n'), ((982, (26, 32)), '*MOT:\twhy does he have_to scream <like this> [<] (.) ?\n'), ((982, (39, 44)), '*MOT:\twhy does he have_to scream <like this> [<] (.) ?\n'), ((982, (45, 48)), '*MOT:\twhy does he have_to scream <like this> [<] (.) ?\n'), ((982, (49, 52)), '*MOT:\twhy does he have_to scream <like this> [<] (.) ?\n'), ((987, (14, 21)), '*MOT:\t<Junior please> [>] !\n'), ((987, (22, 25)), '*MOT:\t<Junior please> [>] !\n'), ((990, (6, 9)), '*BAB:\tzzz [<] .\n'), ((990, (10, 13)), '*BAB:\tzzz [<] .\n'), ((997, (6, 9)), '*CHI:\txxx .\n'), ((999, (6, 9)), '*CHI:\tzzz .\n'), ((1003, (-1, 4)), '*CHI:\they Mommy xxx (.) .\n'), ((1003, (6, 9)), '*CHI:\they Mommy xxx (.) .\n'), ((1007, (-1, 4)), '*FAT:\t<do you [?] need some help> [<] ?\n'), ((1007, (6, 9)), '*FAT:\t<do you [?] need some help> [<] ?\n'), ((1007, (28, 33)), '*FAT:\t<do you [?] need some help> [<] ?\n'), ((1007, (34, 37)), '*FAT:\t<do you [?] need some help> [<] ?\n'), ((1011, (-1, 4)), '*FAT:\txxx ?\n'), ((1011, (6, 9)), '*FAT:\txxx ?\n'), ((1013, (6, 10)), '*BAB:\t&-uh .\n'), ((1014, (-1, 4)), '*FAT:\txxx ?\n'), ((1014, (6, 9)), '*FAT:\txxx ?\n'), ((1016, (6, 10)), '*BAB:\t&-uh .\n'), ((1018, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1018, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1022, (-1, 4)), '*CHI:\thuh (.) ?\n'), ((1022, (6, 9)), '*CHI:\thuh (.) ?\n'), ((1022, (10, 13)), '*CHI:\thuh (.) ?\n'), ((1026, (-1, 4)), '*CHI:\thuh +...\n'), ((1026, (6, 9)), '*CHI:\thuh +...\n'), ((1030, (-1, 4)), '*FAT:\txxx ?\n'), ((1030, (6, 9)), '*FAT:\txxx ?\n'), ((1032, (6, 9)), '*CHI:\tzzz [>] .\n'), ((1032, (10, 13)), '*CHI:\tzzz [>] .\n'), ((1036, (10, 13)), '*FAT:\txxx [<] ?\n'), ((1038, (-1, 4)), '*MOT:\tAimee ?\n'), ((1042, (-1, 4)), '*CHI:\thm: ?\n'), ((1042, (6, 9)), '*CHI:\thm: ?\n'), ((1046, (-1, 4)), '*MOT:\tcan you &-uh (.) watch what Robbie is doing downstairs ?\n'), ((1046, (23, 28)), '*MOT:\tcan you &-uh (.) watch what Robbie is doing downstairs ?\n'), ((1053, (17, 24)), "*CHI:\t<he's> [<] bathing .\n"), ((1056, (6, 10)), "*MOT:\the's (.) having a bath ?\n"), ((1056, (24, 28)), "*MOT:\the's (.) having a bath ?\n"), ((1063, (15, 18)), "*MOT:\twell (.) see if he's finished .\n"), ((1069, (-1, 4)), '*FAT:\the look like (.) xxx .\n'), ((1072, (-1, 4)), '*MOT:\thuh ?\n'), ((1072, (6, 9)), '*MOT:\thuh ?\n'), ((1075, (6, 9)), '*FAT:\txxx .\n'), ((1078, (16, 20)), "*MOT:\tokay it's time to eat .\n"), ((1084, (21, 25)), "*CHI:\tcome on Robbie it's dinner (.) .\n"), ((1084, (26, 32)), "*CHI:\tcome on Robbie it's dinner (.) .\n"), ((1084, (33, 36)), "*CHI:\tcome on Robbie it's dinner (.) .\n"), ((1087, (-1, 4)), '*CHI:\twe eat (.) .\n'), ((1090, (17, 20)), '*CHI:\tdinnertime (.) !\n'), ((1099, (6, 9)), '*CHI:\txxx .\n'), ((1101, (6, 9)), '*MOT:\twww (.) .\n'), ((1101, (10, 13)), '*MOT:\twww (.) .\n'), ((1103, (6, 12)), '*MOT:\tplease turn off the tv .\n'), ((1103, (26, 28)), '*MOT:\tplease turn off the tv .\n'), ((1106, (-1, 4)), '*MOT:\tI have this thing on you know .\n'), ((1106, (18, 23)), '*MOT:\tI have this thing on you know .\n'), ((1110, (-1, 4)), "*CHI:\tit's still blinkin(g) Mommy .\n"), ((1110, (6, 10)), "*CHI:\tit's still blinkin(g) Mommy .\n"), ((1114, (-1, 4)), '*MOT:\tI know .\n'), ((1120, (21, 24)), '*CHI:\tno no no no no (.) .\n'), ((1129, (-1, 4)), '*MOT:\tAimee you gonna eat lots [>] of food tonight (.) .\n'), ((1129, (26, 30)), '*MOT:\tAimee you gonna eat lots [>] of food tonight (.) .\n'), ((1129, (31, 34)), '*MOT:\tAimee you gonna eat lots [>] of food tonight (.) .\n'), ((1129, (38, 42)), '*MOT:\tAimee you gonna eat lots [>] of food tonight (.) .\n'), ((1129, (51, 54)), '*MOT:\tAimee you gonna eat lots [>] of food tonight (.) .\n'), ((1134, (-1, 4)), '*MOT:\tokay ?\n'), ((1134, (6, 10)), '*MOT:\tokay ?\n'), ((1138, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1138, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1145, (-1, 4)), "*CHI:\tit's a little bit tonight [?] .\n"), ((1145, (20, 23)), "*CHI:\tit's a little bit tonight [?] .\n"), ((1145, (32, 35)), "*CHI:\tit's a little bit tonight [?] .\n"), ((1148, (13, 17)), '*MOT:\tRobbie come on .\n'), ((1151, (28, 31)), "*CHI:\tMommy that's a little bit ?\n"), ((1155, (30, 33)), "*MOT:\t<yeah that's a little > [>] .\n"), ((1158, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1158, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1162, (-1, 4)), '*CHI:\tI starting .\n'), ((1165, (6, 9)), '*FAT:\txxx .\n'), ((1166, (-1, 4)), '*MOT:\twho ?\n'), ((1170, (6, 9)), '*FAT:\txxx .\n'), ((1171, (6, 9)), '*MOT:\txxx .\n'), ((1172, (10, 13)), '*FAT:\txxx (.) ?\n'), ((1173, (6, 9)), '*FAT:\txxx .\n'), ((1174, (13, 19)), '*MOT:\twait a minute .\n'), ((1177, (32, 35)), "*CHI:\tI'm taking a little forks (.) .\n"), ((1181, (6, 9)), '*CHI:\tzzz +...\n'), ((1188, (13, 19)), '*MOT:\toh xxx people ?\n'), ((1191, (6, 9)), '*FAT:\txxx .\n'), ((1192, (6, 11)), '*CHI:\tthank you thank you .\n'), ((1196, (6, 11)), '*CHI:\tthank you thank you .\n'), ((1200, (6, 9)), '*CHI:\txxx .\n'), ((1202, (13, 17)), '*MOT:\tRobbie come on .\n'), ((1205, (6, 11)), '*CHI:\tthank you .\n'), ((1208, (6, 11)), '*CHI:\tthank you (.) .\n'), ((1211, (6, 11)), '*CHI:\tthank you .\n'), ((1214, (6, 11)), '*CHI:\tthank you (.) .\n'), ((1217, (6, 11)), '*CHI:\tthank you .\n'), ((1220, (6, 11)), '*CHI:\tthank you .\n'), ((1223, (6, 11)), '*CHI:\tthank you .\n'), ((1226, (6, 11)), '*CHI:\tthank you +...\n'), ((1236, (-1, 4)), '*CHI:\tRobbie has to eat (.) .\n'), ((1236, (24, 27)), '*CHI:\tRobbie has to eat (.) .\n'), ((1239, (-1, 4)), '*CHI:\tRobbie has to eat (.) .\n'), ((1239, (24, 27)), '*CHI:\tRobbie has to eat (.) .\n'), ((1242, (-1, 4)), '*CHI:\tAimee has to eat .\n'), ((1245, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1245, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1249, (-1, 4)), '*CHI:\tDaddy has to eat .\n'), ((1252, (-1, 4)), '*CHI:\tDaddy xxx (.) you hungry ?\n'), ((1256, (6, 10)), '*FAT:\tyeah .\n'), ((1259, (-1, 4)), '*CHI:\tare you hungry (.) ?\n'), ((1259, (14, 24)), '*CHI:\tare you hungry (.) ?\n'), ((1263, (-1, 4)), '*CHI:\thuh (.) ?\n'), ((1263, (6, 9)), '*CHI:\thuh (.) ?\n'), ((1263, (10, 13)), '*CHI:\thuh (.) ?\n'), ((1272, (6, 9)), '*MOT:\tyes I am .\n'), ((1275, (-1, 4)), '*MOT:\tare you ?\n'), ((1279, (6, 10)), '*CHI:\tyeah .\n'), ((1282, (-1, 4)), '*MOT:\tsay the [/] .\n'), ((1282, (14, 17)), '*MOT:\tsay the [/] .\n'), ((1285, (-1, 4)), '*FAT:\tsay the grace .\n'), ((1285, (14, 19)), '*FAT:\tsay the grace .\n'), ((1288, (19, 22)), '*CHI:\tGod is great (.) God is good (.) let us thank him for our food (.) amen .\n'), ((1288, (64, 68)), '*CHI:\tGod is great (.) God is good (.) let us thank him for our food (.) amen .\n'), ((1288, (73, 77)), '*CHI:\tGod is great (.) God is good (.) let us thank him for our food (.) amen .\n'), ((1294, (6, 10)), '*MOT:\tuhuh .\n'), ((1297, (-1, 4)), '*MOT:\tsay xxx over .\n'), ((1297, (10, 13)), '*MOT:\tsay xxx over .\n'), ((1306, (6, 9)), '*BRO:\tgod is grace and god is good .\n'), ((1309, (6, 10)), '*BRO:\t<and we [/] > [>] .\n'), ((1309, (20, 23)), '*BRO:\t<and we [/] > [>] .\n'), ((1312, (13, 17)), "*CHI:\t<thank you> [<] or (.) the rest I've said .\n"), ((1312, (18, 21)), "*CHI:\t<thank you> [<] or (.) the rest I've said .\n"), ((1312, (33, 37)), "*CHI:\t<thank you> [<] or (.) the rest I've said .\n"), ((1317, (6, 11)), '*CHI:\tthank you god for every day (.) .\n'), ((1317, (30, 33)), '*CHI:\tthank you god for every day (.) .\n'), ((1320, (6, 10)), '*CHI:\tamen .\n'), ((1324, (6, 9)), '*BRO:\tgod is grace and god is good .\n'), ((1327, (-1, 4)), '*BRO:\tand we thank him for our food (.) .\n'), ((1327, (31, 35)), '*BRO:\tand we thank him for our food (.) .\n'), ((1327, (36, 39)), '*BRO:\tand we thank him for our food (.) .\n'), ((1332, (-1, 4)), "*BRO:\tno , that's mine .\n"), ((1332, (18, 22)), "*BRO:\tno , that's mine .\n"), ((1344, (-1, 4)), '*CHI:\tyou know [?] (.) .\n'), ((1347, (-1, 4)), '*CHI:\t(be)cause .\n'), ((1359, (-1, 4)), '*BRO:\tyou eat this up .\n'), ((1363, (-1, 4)), "*CHI:\tyou don't got no flower [?] .\n"), ((1363, (23, 29)), "*CHI:\tyou don't got no flower [?] .\n"), ((1363, (30, 33)), "*CHI:\tyou don't got no flower [?] .\n"), ((1366, (-1, 4)), "*CHI:\tyou don't got no <flower [?] > [>] .\n"), ((1370, (10, 16)), '*BRO:\txxx flower .\n'), ((1373, (19, 25)), "*CHI:\tI've got the flower [?] .\n"), ((1373, (26, 29)), "*CHI:\tI've got the flower [?] .\n"), ((1383, (6, 9)), '*MOT:\tyes ?\n'), ((1386, (-1, 4)), "*BRO:\tdidn't you get some juice ?\n"), ((1386, (26, 31)), "*BRO:\tdidn't you get some juice ?\n"), ((1390, (10, 14)), '*FAT:\txxx baby ?\n'), ((1393, (6, 9)), '*BAB:\txxx .\n'), ((1394, (6, 9)), '*FAT:\txxx .\n'), ((1395, (6, 9)), '*BRO:\txxx .\n'), ((1396, (-1, 4)), "*FAT:\tI don't care .\n"), ((1396, (14, 18)), "*FAT:\tI don't care .\n"), ((1399, (-1, 4)), "*CHI:\tDaddy I didn't ask for no juice .\n"), ((1399, (32, 37)), "*CHI:\tDaddy I didn't ask for no juice .\n"), ((1404, (6, 9)), '*FAT:\txxx .\n'), ((1405, (28, 32)), '*CHI:\tokay watch out for my fork [?] boy (.) .\n'), ((1405, (37, 40)), '*CHI:\tokay watch out for my fork [?] boy (.) .\n'), ((1405, (41, 44)), '*CHI:\tokay watch out for my fork [?] boy (.) .\n'), ((1409, (-1, 4)), '*CHI:\txxx juice thank you .\n'), ((1409, (10, 15)), '*CHI:\txxx juice thank you .\n'), ((1409, (16, 21)), '*CHI:\txxx juice thank you .\n'), ((1413, (-1, 4)), '*CHI:\thuh (.) !\n'), ((1413, (6, 9)), '*CHI:\thuh (.) !\n'), ((1413, (10, 13)), '*CHI:\thuh (.) !\n'), ((1416, (-1, 4)), '*CHI:\tI hate [?] on my skirt .\n'), ((1416, (13, 16)), '*CHI:\tI hate [?] on my skirt .\n'), ((1416, (23, 28)), '*CHI:\tI hate [?] on my skirt .\n'), ((1420, (6, 9)), '*FAT:\txxx .\n'), ((1421, (-1, 4)), '*MOT:\tyou want to eat ?\n'), ((1425, (-1, 4)), '*FAT:\thuh baby ?\n'), ((1425, (6, 9)), '*FAT:\thuh baby ?\n'), ((1425, (10, 14)), '*FAT:\thuh baby ?\n'), ((1429, (-1, 4)), '*CHI:\tDaddy (.) .\n'), ((1432, (-1, 4)), '*CHI:\there [>] .\n'), ((1435, (-1, 4)), "*FAT:\tthat's a good boy [<] .\n"), ((1435, (20, 23)), "*FAT:\tthat's a good boy [<] .\n"), ((1435, (24, 27)), "*FAT:\tthat's a good boy [<] .\n"), ((1438, (-1, 4)), '*CHI:\tDaddy .\n'), ((1441, (-1, 4)), '*FAT:\thm: ?\n'), ((1441, (6, 9)), '*FAT:\thm: ?\n'), ((1445, (-1, 4)), '*CHI:\there .\n'), ((1455, (-1, 4)), '*CHI:\tbut Daddy it was behind my food .\n'), ((1455, (33, 37)), '*CHI:\tbut Daddy it was behind my food .\n'), ((1460, (-1, 4)), '*FAT:\tjust put it right here .\n'), ((1468, (-1, 4)), '*MOT:\tI am [!] gonna bring some juice .\n'), ((1468, (15, 20)), '*MOT:\tI am [!] gonna bring some juice .\n'), ((1468, (32, 37)), '*MOT:\tI am [!] gonna bring some juice .\n'), ((1474, (6, 9)), '*FAT:\txxx I said .\n'), ((1478, (14, 17)), '*MOT:\twell no xxx .\n'), ((1481, (10, 15)), "*MOT:\tI'm gonna get juice .\n"), ((1481, (16, 19)), "*MOT:\tI'm gonna get juice .\n"), ((1481, (20, 25)), "*MOT:\tI'm gonna get juice .\n"), ((1485, (6, 9)), '*FAT:\txxx .\n'), ((1489, (-1, 4)), '*MOT:\tthey eat all this food [>] .\n'), ((1489, (24, 28)), '*MOT:\tthey eat all this food [>] .\n'), ((1489, (29, 32)), '*MOT:\tthey eat all this food [>] .\n'), ((1493, (-1, 4)), '*MOT:\tthey do .\n'), ((1496, (-1, 4)), '*MOT:\tthey eat all this .\n'), ((1499, (-1, 4)), '*MOT:\tpotatoes only [?] (.) .\n'), ((1499, (6, 14)), '*MOT:\tpotatoes only [?] (.) .\n'), ((1499, (24, 27)), '*MOT:\tpotatoes only [?] (.) .\n'), ((1502, (-1, 4)), '*MOT:\tthey do eat all this food (.) .\n'), ((1502, (27, 31)), '*MOT:\tthey do eat all this food (.) .\n'), ((1502, (32, 35)), '*MOT:\tthey do eat all this food (.) .\n'), ((1505, (-1, 4)), '*MOT:\txxx have room for one more xxx .\n'), ((1505, (6, 9)), '*MOT:\txxx have room for one more xxx .\n'), ((1505, (15, 19)), '*MOT:\txxx have room for one more xxx .\n'), ((1509, (6, 9)), '*BAB:\txxx .\n'), ((1511, (14, 17)), '*FAT:\talright eat .\n'), ((1515, (6, 9)), '*BAB:\tzzz .\n'), ((1520, (6, 10)), '*BAB:\tda@b .\n'), ((1527, (-1, 4)), '*MOT:\tleave it alone .\n'), ((1530, (6, 9)), '*BAB:\txxx .\n'), ((1531, (6, 9)), '*CHI:\txxx .\n'), ((1532, (-1, 4)), '*FAT:\thuh ?\n'), ((1532, (6, 9)), '*FAT:\thuh ?\n'), ((1536, (6, 9)), '*CHI:\tzzz .\n'), ((1545, (-1, 4)), "*CHI:\tI don't like no pepper .\n"), ((1545, (22, 28)), "*CHI:\tI don't like no pepper .\n"), ((1549, (-1, 4)), '*CHI:\tdo you like pepper ?\n'), ((1549, (18, 24)), '*CHI:\tdo you like pepper ?\n'), ((1553, (-1, 4)), '*MOT:\tsometimes .\n'), ((1556, (-1, 4)), '*CHI:\tit burns my mouth .\n'), ((1556, (18, 23)), '*CHI:\tit burns my mouth .\n'), ((1559, (27, 32)), "*MOT:\tit doesn't burn your mouth .\n"), ((1563, (-1, 4)), '*CHI:\tbut [<] look at Daddy he like it (.) .\n'), ((1563, (14, 18)), '*CHI:\tbut [<] look at Daddy he like it (.) .\n'), ((1566, (-1, 4)), '*CHI:\tDaddy you has our bowl (.) .\n'), ((1566, (24, 28)), '*CHI:\tDaddy you has our bowl (.) .\n'), ((1566, (29, 32)), '*CHI:\tDaddy you has our bowl (.) .\n'), ((1572, (-1, 4)), '*FAT:\thm: ?\n'), ((1572, (6, 9)), '*FAT:\thm: ?\n'), ((1576, (-1, 4)), '*CHI:\twe use our flower [?] .\n'), ((1576, (17, 23)), '*CHI:\twe use our flower [?] .\n'), ((1576, (24, 27)), '*CHI:\twe use our flower [?] .\n'), ((1579, (6, 9)), '*FAT:\tmhm .\n'), ((1582, (6, 12)), "*CHI:\tthat's why xxx (.) .\n"), ((1582, (17, 20)), "*CHI:\tthat's why xxx (.) .\n"), ((1582, (21, 24)), "*CHI:\tthat's why xxx (.) .\n"), ((1585, (-1, 4)), '*CHI:\tand that .\n'), ((1588, (6, 9)), '*BAB:\tzzz .\n'), ((1592, (14, 18)), "*CHI:\t<that's why> [>] xxx .\n"), ((1599, (-1, 4)), '*FAT:\txxx ?\n'), ((1599, (6, 9)), '*FAT:\txxx ?\n'), ((1600, (6, 9)), '*BAB:\tzzz .\n'), ((1604, (6, 9)), '*BAB:\tzzz .\n'), ((1609, (-1, 4)), '*CHI:\tyou wan(t) a flower ?\n'), ((1609, (19, 25)), '*CHI:\tyou wan(t) a flower ?\n'), ((1612, (6, 9)), '*BAB:\tzzz [>] .\n'), ((1612, (10, 13)), '*BAB:\tzzz [>] .\n'), ((1617, (-1, 4)), '*FAT:\txxx ?\n'), ((1617, (6, 9)), '*FAT:\txxx ?\n'), ((1625, (6, 9)), '*CHI:\tzzz .\n'), ((1629, (6, 9)), '*BRO:\txxx .\n'), ((1630, (-1, 4)), '*MOT:\twant some of this soup xxx ?\n'), ((1630, (24, 28)), '*MOT:\twant some of this soup xxx ?\n'), ((1630, (29, 32)), '*MOT:\twant some of this soup xxx ?\n'), ((1633, (10, 14)), '*BRO:\txxx soup bowl ?\n'), ((1633, (15, 19)), '*BRO:\txxx soup bowl ?\n'), ((1636, (6, 9)), '*FAT:\txxx .\n'), ((1637, (-1, 4)), '*CHI:\tare you ready to go hm: ?\n'), ((1637, (26, 29)), '*CHI:\tare you ready to go hm: ?\n'), ((1641, (6, 9)), '*MOT:\txxx .\n'), ((1647, (13, 17)), '*CHI:\t<Mommy you> [//] Mommy fan me (.) .\n'), ((1647, (29, 32)), '*CHI:\t<Mommy you> [//] Mommy fan me (.) .\n'), ((1650, (-1, 4)), "*CHI:\tI've become hot (.) .\n"), ((1653, (6, 9)), '*CHI:\txxx .\n'), ((1654, (12, 15)), '*CHI:\tMommy fan me .\n'), ((1657, (-1, 4)), '*MOT:\twhy ?\n'), ((1661, (-1, 4)), '*CHI:\tbecause (.) .\n'), ((1661, (14, 17)), '*CHI:\tbecause (.) .\n'), ((1664, (-1, 4)), '*CHI:\tfan me (.) .\n'), ((1664, (6, 9)), '*CHI:\tfan me (.) .\n'), ((1667, (6, 9)), '*CHI:\tzzz .\n'), ((1671, (-1, 4)), '*CHI:\tam [?] hot ?\n'), ((1675, (6, 10)), '*MOT:\tuhuh .\n'), ((1678, (6, 9)), '*CHI:\tyes I am (.) .\n'), ((1682, (-1, 4)), '*CHI:\txxx still [?] .\n'), ((1682, (6, 9)), '*CHI:\txxx still [?] .\n'), ((1685, (-1, 4)), '*MOT:\tjust eat your food Aimee .\n'), ((1685, (20, 24)), '*MOT:\tjust eat your food Aimee .\n'), ((1689, (-1, 4)), '*MOT:\there just try this whole thing .\n'), ((1689, (31, 36)), '*MOT:\there just try this whole thing .\n'), ((1692, (-1, 4)), '*CHI:\tjust [?] wan(t) (t)a play with it and eat it .\n'), ((1692, (15, 21)), '*CHI:\tjust [?] wan(t) (t)a play with it and eat it .\n'), ((1692, (27, 31)), '*CHI:\tjust [?] wan(t) (t)a play with it and eat it .\n'), ((1697, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1697, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1701, (6, 9)), '*CHI:\tzzz .\n'), ((1705, (-1, 4)), '*BRO:\tI already ate that .\n'), ((1708, (-1, 4)), '*CHI:\tsomething for breakfast (.) .\n'), ((1708, (20, 33)), '*CHI:\tsomething for breakfast (.) .\n'), ((1711, (6, 9)), '*CHI:\tzzz .\n'), ((1715, (6, 9)), '*BAB:\tzzz .\n'), ((1719, (6, 10)), '*MOT:\tstop screaming [>] .\n'), ((1719, (21, 24)), '*MOT:\tstop screaming [>] .\n'), ((1723, (6, 9)), '*BAB:\tzzz [>] .\n'), ((1723, (10, 13)), '*BAB:\tzzz [>] .\n'), ((1726, (-1, 4)), "*BRO:\t<what's wrong with him> [<] ?\n"), ((1726, (25, 29)), "*BRO:\t<what's wrong with him> [<] ?\n"), ((1726, (30, 33)), "*BRO:\t<what's wrong with him> [<] ?\n"), ((1729, (6, 10)), "*MOT:\the's pulling it out .\n"), ((1732, (-1, 4)), '*FAT:\txxx ?\n'), ((1732, (6, 9)), '*FAT:\txxx ?\n'), ((1733, (6, 9)), '*BAB:\tzzz .\n'), ((1737, (6, 9)), '*FAT:\txxx .\n'), ((1738, (23, 29)), "*CHI:\tI'm [?] stop the eating .\n"), ((1741, (-1, 4)), '*MOT:\tBaby you are a mean boy .\n'), ((1741, (6, 10)), '*MOT:\tBaby you are a mean boy .\n'), ((1741, (26, 29)), '*MOT:\tBaby you are a mean boy .\n'), ((1744, (6, 9)), '*CHI:\tzzz .\n'), ((1748, (-1, 4)), '*BRO:\tI know .\n'), ((1752, (6, 9)), '*CHI:\txxx .\n'), ((1754, (6, 9)), '*BAB:\tzzz .\n'), ((1758, (10, 14)), '*CHI:\txxx look at Baby <he like that part > [>] .\n'), ((1758, (18, 22)), '*CHI:\txxx look at Baby <he like that part > [>] .\n'), ((1758, (23, 31)), '*CHI:\txxx look at Baby <he like that part > [>] .\n'), ((1758, (37, 41)), '*CHI:\txxx look at Baby <he like that part > [>] .\n'), ((1763, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1763, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1767, (6, 9)), '*MOT:\thm: [?] ?\n'), ((1767, (10, 13)), '*MOT:\thm: [?] ?\n'), ((1770, (6, 9)), '*FAT:\txxx .\n'), ((1771, (6, 9)), '*CHI:\txxx I picked up my own meat (.) .\n'), ((1771, (29, 33)), '*CHI:\txxx I picked up my own meat (.) .\n'), ((1771, (34, 37)), '*CHI:\txxx I picked up my own meat (.) .\n'), ((1775, (-1, 4)), '*CHI:\t<xxx he like it> [>] .\n'), ((1775, (19, 22)), '*CHI:\t<xxx he like it> [>] .\n'), ((1775, (23, 26)), '*CHI:\t<xxx he like it> [>] .\n'), ((1778, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1778, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1782, (6, 9)), '*BAB:\tzzz .\n'), ((1787, (6, 9)), '*CHI:\txxx .\n'), ((1788, (6, 9)), '*BAB:\tzzz .\n'), ((1793, (-1, 4)), '*CHI:\t<you too baby> [>] (.) .\n'), ((1793, (15, 19)), '*CHI:\t<you too baby> [>] (.) .\n'), ((1797, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1797, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1801, (-1, 4)), '*CHI:\tyou too baby .\n'), ((1801, (14, 18)), '*CHI:\tyou too baby .\n'), ((1806, (6, 10)), '*CHI:\tokay [<] Junior ?\n'), ((1809, (6, 9)), '*CHI:\tzzz .\n'), ((1813, (6, 9)), '*CHI:\tzzz .\n'), ((1817, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1817, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1821, (6, 9)), '*CHI:\tzzz .\n'), ((1825, (6, 9)), '*MOT:\tzzz .\n'), ((1829, (6, 9)), '*CHI:\tzzz .\n'), ((1833, (-1, 4)), '*MOT:\tmosquito [?] .\n'), ((1833, (15, 18)), '*MOT:\tmosquito [?] .\n'), ((1837, (6, 9)), '*BAB:\tzzz .\n'), ((1841, (6, 12)), '*CHI:\tpepper (.) .\n'), ((1841, (13, 16)), '*CHI:\tpepper (.) .\n'), ((1844, (6, 9)), '*CHI:\tzzz +...\n'), ((1848, (6, 9)), '*MOT:\txxx .\n'), ((1850, (6, 9)), '*BAB:\txxx .\n'), ((1851, (-1, 4)), "*MOT:\tdon't start with that .\n"), ((1851, (12, 17)), "*MOT:\tdon't start with that .\n"), ((1854, (6, 9)), '*BAB:\txxx .\n'), ((1855, (-1, 4)), '*CHI:\txxx ?\n'), ((1855, (6, 9)), '*CHI:\txxx ?\n'), ((1856, (6, 9)), '*BAB:\txxx .\n'), ((1857, (6, 11)), "*MOT:\tdon't push back my hands .\n"), ((1857, (12, 16)), "*MOT:\tdon't push back my hands .\n"), ((1857, (25, 30)), "*MOT:\tdon't push back my hands .\n"), ((1860, (-1, 4)), '*MOT:\tyoung man .\n'), ((1860, (12, 15)), '*MOT:\tyoung man .\n'), ((1864, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1864, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1868, (-1, 4)), '*CHI:\there just one second .\n'), ((1868, (20, 26)), '*CHI:\there just one second .\n'), ((1871, (-1, 4)), "*MOT:\tI know you wan(t) (t)a get into my food but you're not going to .\n"), ((1871, (29, 32)), "*MOT:\tI know you wan(t) (t)a get into my food but you're not going to .\n"), ((1871, (41, 45)), "*MOT:\tI know you wan(t) (t)a get into my food but you're not going to .\n"), ((1871, (50, 56)), "*MOT:\tI know you wan(t) (t)a get into my food but you're not going to .\n"), ((1879, (6, 10)), '*BAB:\t&-uh .\n'), ((1880, (-1, 4)), "*MOT:\tyou're a mean boy .\n"), ((1880, (20, 23)), "*MOT:\tyou're a mean boy .\n"), ((1883, (-1, 4)), '*CHI:\the is [!] .\n'), ((1886, (-1, 4)), '*CHI:\tI know .\n'), ((1889, (6, 10)), '*BAB:\t&-uh .\n'), ((1890, (6, 10)), '*MOT:\tokay .\n'), ((1894, (10, 13)), '*MOT:\tone (.) two good .\n'), ((1898, (-1, 4)), '*MOT:\tdo good do xxx .\n'), ((1898, (17, 20)), '*MOT:\tdo good do xxx .\n'), ((1902, (11, 14)), '*BAB:\t&-uh [>] !\n'), ((1903, (10, 15)), '*MOT:\t<go play> [<] .\n'), ((1903, (16, 19)), '*MOT:\t<go play> [<] .\n'), ((1906, (-1, 4)), '*MOT:\tgo play .\n'), ((1906, (9, 13)), '*MOT:\tgo play .\n'), ((1909, (-1, 4)), '*MOT:\tgo play (.) .\n'), ((1909, (9, 13)), '*MOT:\tgo play (.) .\n'), ((1909, (14, 17)), '*MOT:\tgo play (.) .\n'), ((1912, (-1, 4)), '*MOT:\tgo play (.) .\n'), ((1912, (9, 13)), '*MOT:\tgo play (.) .\n'), ((1912, (14, 17)), '*MOT:\tgo play (.) .\n'), ((1915, (6, 10)), '*MOT:\tlook at your shoes [?] .\n'), ((1915, (19, 24)), '*MOT:\tlook at your shoes [?] .\n'), ((1919, (-1, 4)), '*MOT:\tshoes [?] ?\n'), ((1919, (6, 11)), '*MOT:\tshoes [?] ?\n'), ((1923, (6, 10)), '*MOT:\tlook at shoes .\n'), ((1923, (14, 19)), '*MOT:\tlook at shoes .\n'), ((1928, (6, 10)), '*BAB:\t&-uh ?\n'), ((1929, (-1, 4)), '*MOT:\tgo bring your shoes for Daddy .\n'), ((1929, (20, 25)), '*MOT:\tgo bring your shoes for Daddy .\n'), ((1932, (6, 9)), '*BAB:\tzzz .\n'), ((1936, (-1, 4)), '*MOT:\tbring shoes .\n'), ((1936, (6, 11)), '*MOT:\tbring shoes .\n'), ((1936, (12, 17)), '*MOT:\tbring shoes .\n'), ((1939, (15, 19)), '*FAT:\txxx your food .\n'), ((1942, (11, 14)), '*BAB:\t&-uh (.) ?\n'), ((1943, (6, 9)), '*BAB:\tzzz .\n'), ((1947, (-1, 4)), '*FAT:\txxx food Aimee .\n'), ((1947, (10, 14)), '*FAT:\txxx food Aimee .\n'), ((1951, (6, 10)), '*CHI:\tuhuh .\n'), ((1954, (6, 9)), '*FAT:\txxx .\n'), ((1955, (6, 9)), '*BAB:\tzzz .\n'), ((1959, (6, 9)), '*FAT:\txxx .\n'), ((1960, (15, 21)), "*MOT:\thow come you're not hungry ?\n"), ((1963, (6, 9)), '*BAB:\tzzz [>] .\n'), ((1963, (10, 13)), '*BAB:\tzzz [>] .\n'), ((1968, (-1, 4)), '*MOT:\tthat was xxx <this afternoon > [>] .\n'), ((1971, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1971, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1976, (6, 9)), '*BAB:\tzzz [<] .\n'), ((1976, (10, 13)), '*BAB:\tzzz [<] .\n'), ((1980, (-1, 4)), '*MOT:\there .\n'), ((1983, (6, 9)), '*BAB:\tzzz (.) .\n'), ((1983, (10, 13)), '*BAB:\tzzz (.) .\n'), ((1986, (6, 9)), '*BAB:\tzzz [>] .\n'), ((1986, (10, 13)), '*BAB:\tzzz [>] .\n'), ((1991, (6, 10)), '*MOT:\t<eat [/] eat [/] eat your applesauce> [<] .\n'), ((1991, (32, 43)), '*MOT:\t<eat [/] eat [/] eat your applesauce> [<] .\n'), ((1991, (44, 47)), '*MOT:\t<eat [/] eat [/] eat your applesauce> [<] .\n'), ((1994, (6, 9)), '*BAB:\tzzz .\n'), ((1998, (-1, 4)), '*CHI:\tbut I like it .\n'), ((2001, (6, 9)), '*BAB:\tzzz [>] .\n'), ((2001, (10, 13)), '*BAB:\tzzz [>] .\n'), ((2004, (16, 19)), '*MOT:\t<you like it> [<] ?\n'), ((2004, (20, 23)), '*MOT:\t<you like it> [<] ?\n'), ((2011, (6, 9)), '*BAB:\tzzz .\n'), ((2015, (6, 10)), '*MOT:\tBaby +...\n'), ((2018, (6, 9)), '*BAB:\tzzz .\n'), ((2023, (6, 9)), '*CHI:\thm: (.) .\n'), ((2023, (10, 13)), '*CHI:\thm: (.) .\n'), ((2027, (19, 25)), "*CHI:\tI'm eatin(g) dinner (.) .\n"), ((2027, (26, 29)), "*CHI:\tI'm eatin(g) dinner (.) .\n"), ((2031, (-1, 4)), '*CHI:\tI want that [?] water .\n'), ((2031, (22, 27)), '*CHI:\tI want that [?] water .\n'), ((2034, (6, 9)), '*FAT:\txxx .\n'), ((2035, (-1, 4)), '*MOT:\thm: ?\n'), ((2035, (6, 9)), '*MOT:\thm: ?\n'), ((2038, (6, 9)), '*FAT:\txxx .\n'), ((2039, (6, 9)), '*CHI:\txxx .\n'), ((2040, (6, 10)), "*MOT:\tit's hot .\n"), ((2040, (11, 14)), "*MOT:\tit's hot .\n"), ((2043, (-1, 4)), '*FAT:\tneed some water xxx .\n'), ((2043, (16, 21)), '*FAT:\tneed some water xxx .\n'), ((2043, (22, 25)), '*FAT:\tneed some water xxx .\n'), ((2046, (-1, 4)), '*CHI:\tI want some water xxx .\n'), ((2046, (18, 23)), '*CHI:\tI want some water xxx .\n'), ((2046, (24, 27)), '*CHI:\tI want some water xxx .\n'), ((2049, (6, 9)), '*BAB:\tzzz [>] .\n'), ((2049, (10, 13)), '*BAB:\tzzz [>] .\n'), ((2055, (6, 9)), '*CHI:\txxx .\n'), ((2056, (6, 9)), '*CHI:\tzzz .\n'), ((2060, (6, 9)), '*BAB:\tzzz (.) .\n'), ((2060, (10, 13)), '*BAB:\tzzz (.) .\n'), ((2064, (6, 9)), '*BAB:\tzzz .\n'), ((2069, (13, 16)), '*BAB:\t<&-uh> [<] .\n'), ((2070, (6, 11)), '*BAB:\tome@b .\n'), ((2074, (6, 11)), '*BAB:\tome@b .\n'), ((2078, (-1, 4)), '*MOT:\thuh ?\n'), ((2078, (6, 9)), '*MOT:\thuh ?\n'), ((2082, (-1, 4)), '*BAB:\txxx ?\n'), ((2082, (6, 9)), '*BAB:\txxx ?\n'), ((2083, (6, 9)), '*BRO:\txxx .\n'), ((2084, (-1, 4)), '*CHI:\tcan you <wait outside> [>] for me ?\n'), ((2084, (29, 32)), '*CHI:\tcan you <wait outside> [>] for me ?\n'), ((2087, (6, 9)), '*BAB:\tzzz [<] .\n'), ((2087, (10, 13)), '*BAB:\tzzz [<] .\n'), ((2091, (11, 15)), '*MOT:\twhat kind of xxx is this ?\n'), ((2091, (19, 22)), '*MOT:\twhat kind of xxx is this ?\n'), ((2095, (-1, 4)), "*FAT:\t<nobody ain't> [/] nobody ain't xxx food there .\n"), ((2095, (14, 19)), "*FAT:\t<nobody ain't> [/] nobody ain't xxx food there .\n"), ((2095, (42, 46)), "*FAT:\t<nobody ain't> [/] nobody ain't xxx food there .\n"), ((2099, (-1, 4)), '*CHI:\t(be)cause nobody like it .\n'), ((2102, (-1, 4)), '*CHI:\tnobody .\n'), ((2107, (6, 13)), '*CHI:\tlook_it .\n'), ((2110, (-1, 4)), '*CHI:\txxx ?\n'), ((2110, (6, 9)), '*CHI:\txxx ?\n'), ((2113, (6, 9)), '*CHI:\txxx .\n'), ((2115, (-1, 4)), '*CHI:\tDaddy [?] make your food one more xxx .\n'), ((2115, (26, 30)), '*CHI:\tDaddy [?] make your food one more xxx .\n'), ((2115, (40, 43)), '*CHI:\tDaddy [?] make your food one more xxx .\n'), ((2119, (6, 9)), '*BAB:\tzzz .\n'), ((2124, (-1, 4)), '*BRO:\txxx ?\n'), ((2124, (6, 9)), '*BRO:\txxx ?\n'), ((2125, (6, 9)), '*FAT:\txxx .\n'), ((2126, (10, 14)), '*BRO:\txxx stop tapping on the table .\n'), ((2126, (15, 22)), '*BRO:\txxx stop tapping on the table .\n'), ((2126, (30, 35)), '*BRO:\txxx stop tapping on the table .\n'), ((2129, (-1, 4)), '*FAT:\txxx that ?\n'), ((2129, (6, 9)), '*FAT:\txxx that ?\n'), ((2133, (-1, 4)), "*CHI:\tthat's you too ?\n"), ((2133, (6, 12)), "*CHI:\tthat's you too ?\n"), ((2144, (6, 9)), '*BAB:\tzzz .\n'), ((2151, (6, 9)), '*BAB:\tzzz .\n'), ((2161, (6, 9)), '*BAB:\tzzz .\n'), ((2165, (-1, 4)), "*FAT:\ty'all@d had enough ?\n"), ((2169, (6, 9)), '*BAB:\tzzz [>] .\n'), ((2169, (10, 13)), '*BAB:\tzzz [>] .\n'), ((2173, (-1, 4)), "*FAT:\t<y'all@d had enough to eat > [<] ?\n"), ((2173, (35, 38)), "*FAT:\t<y'all@d had enough to eat > [<] ?\n"), ((2177, (6, 9)), '*BAB:\tzzz [>] .\n'), ((2177, (10, 13)), '*BAB:\tzzz [>] .\n'), ((2180, (-1, 4)), "*MOT:\t<don't throw away that milk> [<] .\n"), ((2180, (29, 34)), "*MOT:\t<don't throw away that milk> [<] .\n"), ((2180, (35, 38)), "*MOT:\t<don't throw away that milk> [<] .\n"), ((2183, (11, 18)), '*MOT:\t<xxx bottle> [>] .\n'), ((2183, (19, 22)), '*MOT:\t<xxx bottle> [>] .\n'), ((2188, (-1, 4)), '*BRO:\t<what d(id) you do in school> [<] today ?\n'), ((2188, (28, 35)), '*BRO:\t<what d(id) you do in school> [<] today ?\n'), ((2188, (36, 39)), '*BRO:\t<what d(id) you do in school> [<] today ?\n'), ((2188, (40, 45)), '*BRO:\t<what d(id) you do in school> [<] today ?\n'), ((2195, (11, 16)), '*BRO:\twhat d(id) you do in school today ?\n'), ((2195, (27, 33)), '*BRO:\twhat d(id) you do in school today ?\n'), ((2195, (34, 39)), '*BRO:\twhat d(id) you do in school today ?\n'), ((2200, (-1, 4)), '*CHI:\tI color .\n'), ((2204, (-1, 4)), '*CHI:\tI went outside to the park (.) .\n'), ((2204, (28, 32)), '*CHI:\tI went outside to the park (.) .\n'), ((2210, (33, 36)), '*CHI:\twent out (.) <wi(th) &-um> [/] wi(th) xxx for a walk and xxx [>] .\n'), ((2210, (44, 47)), '*CHI:\twent out (.) <wi(th) &-um> [/] wi(th) xxx for a walk and xxx [>] .\n'), ((2210, (54, 58)), '*CHI:\twent out (.) <wi(th) &-um> [/] wi(th) xxx for a walk and xxx [>] .\n'), ((2217, (15, 19)), '*FAT:\teat your food .\n'), ((2220, (15, 19)), '*FAT:\teat your food .\n'), ((2224, (-1, 4)), '*MOT:\tI was home all day .\n'), ((2224, (21, 24)), '*MOT:\tI was home all day .\n'), ((2228, (15, 19)), '*FAT:\teat your food .\n'), ((2231, (-1, 4)), '*CHI:\t(be)cause my arm it itches me .\n'), ((2231, (19, 22)), '*CHI:\t(be)cause my arm it itches me .\n'), ((2235, (12, 17)), '*MOT:\tAimee hurry up .\n'), ((2238, (-1, 4)), '*CHI:\txxx my arm is itching xxx .\n'), ((2238, (13, 16)), '*CHI:\txxx my arm is itching xxx .\n'), ((2241, (6, 10)), "*MOT:\tyeah but you don't need your arms for eating food .\n"), ((2241, (35, 39)), "*MOT:\tyeah but you don't need your arms for eating food .\n"), ((2241, (51, 55)), "*MOT:\tyeah but you don't need your arms for eating food .\n"), ((2248, (-1, 4)), '*MOT:\tyou got ta go to bed (be)cause you got ta go to school tomorrow (.) .\n'), ((2248, (54, 60)), '*MOT:\tyou got ta go to bed (be)cause you got ta go to school tomorrow (.) .\n'), ((2248, (70, 73)), '*MOT:\tyou got ta go to bed (be)cause you got ta go to school tomorrow (.) .\n'), ((2254, (-1, 4)), "*MOT:\tand it's a bit past your bedtime so hurry up .\n"), ((2254, (17, 20)), "*MOT:\tand it's a bit past your bedtime so hurry up .\n"), ((2260, (6, 9)), '*CHI:\tzzz .\n'), ((2266, (-1, 4)), '*MOT:\twhy have you xxx it ?\n'), ((2270, (6, 8)), '*CHI:\tmm (.) .\n'), ((2270, (9, 12)), '*CHI:\tmm (.) .\n'), ((2273, (-1, 4)), "*CHI:\tI'm through Mom .\n"), ((2276, (-1, 4)), '*MOT:\tyou drink any milk ?\n'), ((2276, (20, 24)), '*MOT:\tyou drink any milk ?\n'), ((2284, (-1, 4)), '*MOT:\tyou drink any milk ?\n'), ((2284, (20, 24)), '*MOT:\tyou drink any milk ?\n'), ((2288, (6, 9)), '*CHI:\tzzz (.) .\n'), ((2288, (10, 13)), '*CHI:\tzzz (.) .\n'), ((2292, (6, 10)), '*CHI:\t&-uh .\n'), ((2293, (6, 10)), '*MOT:\tuhuh .\n'), ((2296, (10, 15)), "*CHI:\tI'm gonna xxx (.) .\n"), ((2299, (6, 9)), '*CHI:\txxx .\n'), ((2301, (6, 9)), '*MOT:\txxx .\n'), ((2303, (-1, 4)), '*CHI:\txxx my stomach hurts (.) .\n'), ((2303, (13, 20)), '*CHI:\txxx my stomach hurts (.) .\n'), ((2303, (27, 30)), '*CHI:\txxx my stomach hurts (.) .\n'), ((2306, (6, 9)), '*CHI:\txxx I have_to go (.) to the bath+room .\n'), ((2310, (-1, 4)), '*MOT:\tyou always say your stomach hurts .\n'), ((2310, (26, 33)), '*MOT:\tyou always say your stomach hurts .\n'), ((2310, (34, 39)), '*MOT:\tyou always say your stomach hurts .\n'), ((2314, (15, 19)), '*MOT:\teat your food .\n'), ((2317, (-1, 4)), '*CHI:\tbut my stomach hurts .\n'), ((2317, (13, 20)), '*CHI:\tbut my stomach hurts .\n'), ((2321, (-1, 4)), '*MOT:\tyou always keep saying xxx .\n'), ((2324, (-1, 4)), '*MOT:\txxx has food tonight ?\n'), ((2324, (6, 9)), '*MOT:\txxx has food tonight ?\n'), ((2324, (14, 18)), '*MOT:\txxx has food tonight ?\n'), ((2328, (6, 9)), '*FAT:\txxx .\n'), ((2329, (-1, 4)), '*MOT:\thuh ?\n'), ((2329, (6, 9)), '*MOT:\thuh ?\n'), ((2336, (6, 10)), '*CHI:\tyeah Mommy .\n'), ((2339, (6, 10)), '*CHI:\tyeah Mommy .\n'), ((2342, (25, 29)), '*CHI:\tMommy I eat all my food .\n'), ((2345, (-1, 4)), '*CHI:\tbut I did .\n'), ((2348, (-1, 4)), '*CHI:\tI did .\n'), ((2351, (-1, 4)), '*CHI:\tI eat xxx .\n'), ((2351, (12, 15)), '*CHI:\tI eat xxx .\n'), ((2354, (-1, 4)), '*CHI:\tI eat xxx .\n'), ((2354, (12, 15)), '*CHI:\tI eat xxx .\n'), ((2357, (20, 30)), "*CHI:\tMommy I'm not hungry (.) .\n"), ((2367, (6, 9)), '*CHI:\txxx .\n'), ((2369, (-1, 4)), '*BRO:\tI still got xxx Mommy ?\n'), ((2375, (-1, 4)), '*MOT:\tmay I have some ?\n'), ((2379, (6, 9)), '*BRO:\txxx .\n'), ((2380, (6, 9)), '*CHI:\txxx .\n'), ((2381, (6, 9)), '*CHI:\txxx .\n'), ((2382, (6, 9)), '*CHI:\txxx .\n'), ((2383, (6, 9)), '*CHI:\txxx .\n'), ((2384, (6, 9)), '*CHI:\txxx .\n'), ((2386, (-1, 4)), '*CHI:\tnobody xxx [>] .\n'), ((2389, (6, 9)), '*BAB:\tzzz [<] .\n'), ((2389, (10, 13)), '*BAB:\tzzz [<] .\n'), ((2393, (-1, 4)), '*CHI:\txxx ?\n'), ((2393, (6, 9)), '*CHI:\txxx ?\n')]
calculating accuracy and recall
correct labels:
set(['pepper', 'soup', 'potatoes', 'chocolate', 'water', 'juice', 'applesauce', 'milk'])
predicted labels:
set(['', '(t)a', 'shoes', 'gold', "don't", 'tapping', 'hands', 'bathing', 'hungry (.)', 'bring', '&-uh', 'j@l', 'shake', 'yes', 'milk', 'thank', "he's", 'justice', '<you', 'down>', 'father', 'b@l', 'applesauce>', 'f@l', 'please>', 'zoo>', 'get', 'food', 'watch', 'gonna', 'nation', 'it>', 'spoon', '[>]', 'fan', 'rest', 'fall', 'bit', 'bath', 'day', 'minute', 'room', 'school', 'mhm', 'meat', 'potatoes', 'y@l', 'stuff', 'help>', 'all>', 'school>', 'www', 'right', 'prayers', 'yeah', 'see', 'da@b', 'thing', 'uhuh', 'arm', 'blouse', 'time>', 'flower', '<zoo', '(.)', 'god', 'please', 'liberty', 'milk>', 'enough', 'dirty', 'pepper', 'eating', 'zzz', 'amen', 'walk', 'water', '[<]', '<and', 'hurts', 'come', 'care', 'boy', 'eat', 'play>', 'tv', 'dinner', 'place', '<he like', 'mouth', "can't", 'hm:', 'v@l', 'r@l', 'x@l', 'table', '<do', 'why>', "you're", 'start', "it's", 'people', 'pots', 'hey', 'breakfast (.)', 'ya@wp', "we're", 'h@l', 't@l', 'today', 'fork', 'stomach', "what's", 'xxx', 'huh', 'chocolate', 'teacher>', 'flag', 'part', 'hear', 'arms', 'baby', 'hurry', 'spin', 'grace', 'p@l', 'play', 'kind', 'l@l', 'look', 'mm', 's@l', 'second', 'soup', 'wan(t)', 'this>', 'w@l', '<eat', 'park', 'mine', 'juice', '[?]', 'skirt', 'i@l', 'e@l', '[/]', 'sit', 'whole mess', 'song', 'bowl', 'zoo', 'g@l', 'hot', 'babies', 'ome@b', 'him>', 'junk', 'okay', 'a@l', 'o@l', 'stop', 'd(id)', "let's", 'c@l', 'q@l', 'supper', 'look_it', 'man', 'z@l', 'you>', 'bottle>', 'lots', '<us', 'time', 'push', "ain't", 'm@l', 'scream', 'talk', "that's"])
file:HSLLD/HV1/MT//aimmt1.cha
precision: 0.0388888888889
recall: 0.875
true positives:['chocolate', 'juice', 'milk', 'pepper', 'potatoes', 'soup', 'water']
false positives: ['', '&-uh', '(.)', '(t)a', '<and', '<do', '<eat', '<he like', '<us', '<you', '<zoo', '[/]', '[<]', '[>]', '[?]', 'a@l', "ain't", 'all>', 'amen', 'applesauce>', 'arm', 'arms', 'b@l', 'babies', 'baby', 'bath', 'bathing', 'bit', 'blouse', 'bottle>', 'bowl', 'boy', 'breakfast (.)', 'bring', 'c@l', "can't", 'care', 'come', 'd(id)', 'da@b', 'day', 'dinner', 'dirty', "don't", 'down>', 'e@l', 'eat', 'eating', 'enough', 'f@l', 'fall', 'fan', 'father', 'flag', 'flower', 'food', 'fork', 'g@l', 'get', 'god', 'gold', 'gonna', 'grace', 'h@l', 'hands', "he's", 'hear', 'help>', 'hey', 'him>', 'hm:', 'hot', 'huh', 'hungry (.)', 'hurry', 'hurts', 'i@l', "it's", 'it>', 'j@l', 'junk', 'justice', 'kind', 'l@l', "let's", 'liberty', 'look', 'look_it', 'lots', 'm@l', 'man', 'meat', 'mhm', 'milk>', 'mine', 'minute', 'mm', 'mouth', 'nation', 'o@l', 'okay', 'ome@b', 'p@l', 'park', 'part', 'people', 'place', 'play', 'play>', 'please', 'please>', 'pots', 'prayers', 'push', 'q@l', 'r@l', 'rest', 'right', 'room', 's@l', 'school', 'school>', 'scream', 'second', 'see', 'shake', 'shoes', 'sit', 'skirt', 'song', 'spin', 'spoon', 'start', 'stomach', 'stop', 'stuff', 'supper', 't@l', 'table', 'talk', 'tapping', 'teacher>', 'thank', "that's", 'thing', 'this>', 'time', 'time>', 'today', 'tv', 'uhuh', 'v@l', 'w@l', 'walk', 'wan(t)', 'watch', "we're", "what's", 'whole mess', 'why>', 'www', 'x@l', 'xxx', 'y@l', 'ya@wp', 'yeah', 'yes', "you're", 'you>', 'z@l', 'zoo', 'zoo>', 'zzz']
false negatives: ['applesauce']
# true pos: 7
# false pos: 173
# false neg: 1
HSLLD/HV1/MT//allmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: is that a rabbit ?', '*MOT: no .', '*CHI: it looks like one .', '*GMA: a rabbit ?', '*CHI: no rabbit .', '*CHI: look .', "*CHI: that's not my Papa .", '*GMA: not your Papa yet ?', '*GMA: nope .', '*CHI: that !', "*CHI: that's not his green car .", '*GMA: nope .', '*GMA: what color was that car ?', '*CHI: &-um (.) .', '*MOT: blue and [>] .', '*GMA: right [<] !', '*CHI: black wheels .', '*GMA: mhm .', '*CHI: and black wheels .', "*GMA: that's right .", "*GMA: <you're> [>] a smart kid .", '*CHI: <and> [<] [/] and black striped [?] lines .', '*GMA: mhm .', '*MOT: mm (.) .', "*MOT: what d'you@d have for lunch today ?", '*CHI: peanut butter and jelly .', '*GMA: mm .', '*MOT: peanut butter and jelly ?', '*MOT: did you eat it all ?', '*CHI: and I asked [!] her for one .', '*MOT: &a:h .', '*GMA: and what else did you have ?', '*CHI: celery .', '*GMA: with what [!] ?', '*MOT: here Mom .', '*MOT: you cut up some celery .', '*CHI: with celery ?', "*GMA: <what d'you@d have> [/] what you have on the celery [!] ?", "*MOT: d'you@d have peanut butter ?", '*CHI: pean(ut) butter !', '*GMA: right !', '*MOT: right !', '*GMA: you ate three pieces of that !', '*CHI: three pieces .', '*MOT: three [!] pieces ?', '*MOT: filled her up .', '*CHI: &-uh .', '*CHI: one more piece .', '*CHI: and the other more piece and the other piece .', '*MOT: oh !', '*CHI: and the other piece and the other piece !', '*CHI: &a:h !', '*CHI: zzz .', '*CHI: eat how [!] you do it (.) .', '*CHI: this piece and this piece and this piece .', '*GMA: mm .', "*GMA: you're a silly goose .", '*CHI: something smells (.) .', '*CHI: gonna [/] .', '*GMA: the pizza [!] .', '*CHI: my pizza ?', '*GMA: no .', "*GMA: it's [///] you smell the cheese [!] (.) .", '*GMA: that good pizza ?', '*GMA: mm (.) .', '*CHI: yum (.) .', "*GMA: there's no more steak so make sure you finish eating your pizza too .", '*CHI: what ?', "*GMA: there's no more steak .", '*GMA: finish eating your pizza .', "*CHI: there's more steak !", '*MOT: you ate it all .', '*CHI: what ?', '*MOT: you ate [!] it all .', '*CHI: nuhhuh !', '*MOT: yes sir .', '*CHI: nuhhuh !', '*GMA: yeah you did .', '*GMA: you were [///] there was a piece that was left over .', '*GMA: remember ?', '*GMA: I cut it all up for you .', "*CHI: it's right here .", '*GMA: oh .', '*GMA: well yeah .', '*GMA: on <your dish> [>] .', "*MOT: <and you're> [<] eating it .", '*CHI: but you said it was all [!] gone [!] .', '*GMA: mm .', "*MOT: it'll be all gone when you're done eating [!] it .", '*CHI: nuhhuh (.) !', "*CHI: <I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .", "*MOT: you're gonna what [!] ?", '*CHI: I gonna put my food in a paper <bag [!]> [>] .', '*GMA: put [<] your food in a paper bag ?', '*GMA: why (.) ?', '*CHI: (be)cause (.) .', '*CHI: I want [!] to !', '*GMA: are you going to work (.) ?', '*CHI: zzz .', '*CHI: oh .', '*MOT: awoh .', '*CHI: can I please come [?] ?', '*CHI: I want swim the [//] this [/] this one and play with Kyle .', "*CHI: I didn't cry .", '*MOT: no .', '*MOT: maybe Kyle went to have his ears checked .', '*MOT: remember he had an ear infection ?', '*CHI: ears checked .', "*CHI: (be)cau(se) [//] <because he's> [>] [/] .", '*GMA: <you [!] said> [<] he went to the dentist [!] .', '*CHI: yeah .', "*GMA: but he didn't [!] <he went to the doctor [!]> [>] .", "*MOT: <he doesn't have any teeth [!] > [<] yet !", '*CHI: what ?', '*GMA: who else went to the doctor today ?', '*CHI: uncle .', '*GMA: no .', '*GMA: Tasha [!] .', "*GMA: remember her grandma said she went to the doctor's today to have her blood work done .", '*MOT: oh .', "*MOT: she didn't go in until <she was feeling xxx> [>] ?", '*GMA: <no she went in> [<] Sat(urday) [///] (.) &-uh (.) Thursday .', '*MOT: next <Thursday> [>] .', '*CHI: huh [<] ?', '*CHI: she had [!] a boo+boo .', '*CHI: <I think she had a boo+boo> [>] .', '*MOT: yeah [>] .', '*MOT: <she had it fixed [!] > [<][>] huh ?', '*CHI: yeah [>] .', '*GMA: <she had> [<] to go to the hospital [!] .', '*CHI: hospital .', '*GMA: mhm .', "*MOT: we'll go visit Tasha when she recovers .", '*CHI: okay .', '*CHI: <my bruise> [>] [/] .', '*MOT: <when she comes> [<] home .', '*CHI: what ?', '*CHI: (o)kay (.) .', "*CHI: Tasha didn't cry .", "*GMA: well you don't know .", '*GMA: she got a blood test today .', '*CHI: what ?', '*GMA: she had a blood [!] test .', '*CHI: yeah .', '*GMA: mhm [>] .', '*CHI: <Tasha> [<] have blood test [!] (.) .', '*CHI: you know yesterday ?', '*CHI: Mom ?', '*CHI: my bruise came in from now .', '*MOT: it was ?', '*CHI: a bone .', '*CHI: (be)cause it went wrong (.) .', '*CHI: it stop [!] hurting [?] .', '*GMA: next hour [?] you can .', '*GMA: what she did is she fell out of bed last night .', "*GMA: it's time we <mo(ve)> [//] move her bed against the wall (.) tonight [>] .", '*MOT: <she fell out> [<] of bed ?', '*GMA: yeah !', '*GMA: she fells@n out of bed almost every night !', "*MOT: <I didn't know that> [>] .", "*CHI: <I don't want to talk> [<] +...", '*GMA: right (be)fore the smoke detectors went off .', '*GMA: about half an hour before them she was screaming [!] bloody murder (.) .', '*GMA: got ta move that bed around against the wall (.) .', '*GMA: huh (.) ?', '*GMA: you were screaming (.) .', "*GMA: well she didn't wake up when the fireworks <we(re)> [//] were those [/] those firecrackers went +...", '*MOT: no .', '*CHI: one more piece of steak left [!] .', '*MOT: good girl (.) .', '*CHI: no more .', '*MOT: all gone !', '*MOT: wipe your hands (.) on the napkin thanks .', '*CHI: no napkin !', '*MOT: no ?', '*CHI: zzz .', "*MOT: don't put [!] that in your mouth .", '*CHI: why [>] ?', '*GMA: eat [<] your delicious pizza .', '*GMA: yumyum (.) .', '*CHI: this [!] is .', '*GMA: did you like that (.) ?', '*GMA: no ?', '*CHI: yes .', '*GMA: how about the pizza ?', '*CHI: this ?', '*GMA: no .', "*GMA: this [!] one's the pizza .", '*CHI: I like it .', '*GMA: like it ?', '*CHI: yes .', '*CHI: I call this pizza too .', '*GMA: yep .', '*CHI: zzz .', '*CHI: this is kind of food .', '*GMA: very good .', '*CHI: pizza .', "*GMA: that's right .", '*CHI: Mommy +...', "*CHI: what's this (.) ?", '*CHI: yuck .', '*CHI: who like it ?', '*CHI: who likes this [!] pizza ?', "*MOT: I'm going into town [?] .", "*CHI: Mommy I'm stuffed .", '*CHI: zzz (.) .', '*MOT: you holding this ?', '*CHI: what ?', "*MOT: you're silly (.) .", '*CHI: you eat all yours [!] !', '*MOT: yeah ?', '*CHI: most of it .', '*CHI: look out .', "*CHI: there's something outside .", '*MOT: right .', "*MOT: that's yours that you didn't eat .", '*CHI: no .', '*MOT: think Allison through ?', '*CHI: xxx like it .', '*MOT: you want dessert ?', '*CHI: no (.) .', '*CHI: getting down .', "*MOT: I don't she does .", "*CHI: I don't want dessert .", '*CHI: uhuh .', '*CHI: hm: .', '*CHI: turn that [= tape recorder] back on again .', '*MOT: it is [!] on !', '*MOT: do you want to hear yourself ?', '*CHI: mm .', '*GFA: huh ?', '*GFA: did I wake you up ?', '*CHI: mm .', '*GFA: yeah (.) ?', "*CHI: d'you@d know what ?", '*CHI: that thing sounded like Allison and Grandma on there .', '*CHI: on +...', '*GFA: zzz .', '*GFA: <it soun(ded)> [//] it sounded just like Allison and <Grandma> [>] are on there ?', '*CHI: yeah [<] .', '*CHI: it did [!] .', '*CHI: <and Mommy [!]> [>] .', '*GFA: <it did> [<] ?', '*GFA: and Mommy [!] too ?', '*CHI: yeah .', "*GFA: and now Papa's on there now (.) .", '*GFA: huh (.) ?', '*GFA: <Pap(a)> [>] [/] .', '*CHI: is <Papa> [<] on there now ?', "*GFA: he's gonna be on there .", '*GFA: yeah .', '*CHI: zzz .', '*MOT: Alli .', '*GFA: have Papa and Momma and Grandma and Allison .', "*CHI: Mom's not out [!] there !", '*GFA: no .', "*GFA: but she's on the tape [!] (.) .", '*CHI: zzz .', '*GFA: put some more milk .', "*CHI: Grandpa that's sugar [?] in there ?", '*GFA: yeah .', '*GFA: gonna put some sugar on there too .', '*CHI: oh .', '*GFA: yeah .', '*GFA: I like sugar on there .', '*GFA: <you> [>] [/] .', "*CHI: <I'll get [?] it> [<] .", "*GFA: you'll like it too .", "*GFA: it's delicious .", "*GFA: and you'll [///] listen to that bang .", '*CHI: xxx break that ?', "*GFA: I don't [///] I wouldn't break [!] it .", '*CHI: oops .', '*CHI: want that final [?] piece .', '*CHI: oops .', '*GFA: zzz !', '*GFA: you sticking your finger in my crackers and milk for ?', '*CHI: zzz .', '*GFA: huh ?', '*GFA: what are you haha@q doing [>] ?', '*CHI: zzz [>] .', '*GFA: laughs .', '*GMA: <just leave [!] > [<] it !', '*GFA: oh Allison !', '*GMA: you done with the milk ?', '*CHI: can I have a bite ?', '*GFA: yeah .', '*GFA: that taste good ?', '*GFA: hm: ?', '*CHI: yes .', '*CHI: but (.) &-um (.) oatmeal in it ?', '*GFA: no .', "*GFA: it's just crackers and milk .", '*GFA: <saltine crackers and milk> [>] .', "*GMA: <Papa's going to throw [?] them out> [<] remember ?", '*CHI: can I have another bite (.) ?', '*GFA: can you have another bite ?', '*CHI: mm .', '*GFA: did you eat supper already ?', '*CHI: zzz .', '*GFA: huh ?', '*GFA: did you eat supper already ?', "*CHI: I didn't eat all of it !", "*GFA: well you didn't eat all of it ?", '*GFA: you <sa(ved)> [//] you saved some room for my [!] supper (.) ?', '*GFA: huh ?', '*CHI: mm .', '*GFA: yeah ?', "*GFA: well that's okay .", '*GMA: what do you want to drink ?', '*GMA: nothing .', '*CHI: xxx [>] .', '*GFA: <can I have the sugar and the spoon> [<] back ?', '*GFA: clean the spoon .', '*GMA: you already put enough sugar on there (.) .', '*GFA: zzz .', '*CHI: xxx like those ?', '*GMA: zzz .', '*CHI: how come ?', "*CHI: it's all gone [!] .", '*GFA: zzz .', "*GFA: I don't know .", "*GFA: Grandma's trying to sugar me to death here .", "*CHI: it's all gone !", "*CHI: it's underneath there !", "*CHI: it's by the jelly !", '*GFA: yep .', "*GFA: d'you@d like crackers and milk ?", '*GFA: hm: .', "*GFA: that's good .", '*GFA: that makes me happy .', '*MOT: she says she likes them with milk .', '*CHI: oh .', '*CHI: your hand is dirty right here .', "*GFA: Allison my hand isn't dirty .", "*GFA: that's ink on my hand and I couldn't wash it off .", '*CHI: oh .', "*GFA: it's alright though .", "*GFA: it'll wash off (.) .", "*MOT: Poppy tell me when you're going to finish up so <we can go to the store> [>] .", '*CHI: <can you give me another bite> [<] ?', '*GFA: <do you> [>] +...', '*GMA: <when Timmy [?]> [<] noticed the glove there [///] he said [///] go over and yelled at me the other night for not going over there .', '*MOT: I must have been at work .', '*GMA: the night of your birthday .', '*GMA: the night he was making ham in the oven .', '*GMA: when he called me a crazy lady and she started yelling at him .', "*GMA: my grandmother's not crazy !", '*MOT: zzz .', "*GMA: I said I expect to see you over there in that pool tonight so I don't have_to explain to him (.) .", '*CHI: zzz (.) .', '*CHI: what (.) ?', '*CHI: what ?', "*MOT: you don't what [!] .", '*MOT: you heard Grandma .', "*GFA: what d'you@d do today ?", '*CHI: went in the pool .', '*GFA: <you went in the pool [!]> [>] !', '*GMA: <who went in the pool with you> [<][>] ?', '*CHI: <Grandma> [<] !', '*GFA: <Grandma went in too> [>] !', '*GMA: no [<][>] .', "*CHI: <Grandma's in and Mommy's> [<] in .", '*GFA: did she fit in there (.) ?', '*GFA: huh ?', '*GFA: yeah ?', '*GFA: zzz .', '*GFA: she was laughing at Papa in there last week and now [/] now she went in there !', '*MOT: who else went in there (.) ?', '*MOT: did I go in your pool ?', '*CHI: yes .', '*CHI: you were in it (be)fore .', "*CHI: now you're going go in the pool when you're done eating that [!] stuff .", '*CHI: whe(n) [/] .', "*GFA: when I'm done eating this stuff we have_to go to the store .", '*GFA: we have_to get Mummy <a thing> [//] a belt for her car .', '*GFA: zzz [>] .', '*CHI: <a belt> [<][>] ?', '*GMA: xxx [<] good yeah [>] .', '*CHI: <a belt> [<] for a car ?', '*GFA: a fan belt .', '*GFA: yeah ?', '*CHI: <fan belt> [>] ?', '*GMA: yeah [<] .', "*GMA: <uhhuh her belt> [<] in her car's broken .", '*CHI: oh yeah .', '*GMA: oh yeah .', "*GMA: I don't know .", "*CHI: she <won't> [/] won't be able to drive <the car now that it's> [>] .", "*GMA: <she won't be> [<] be able to drive it no not [/] not (un)til Papa fixes it .", '*GMA: no .', '*CHI: I [!] fix it .', '*GMA: yeah .', '*GMA: you been saying that all day long .', '*CHI: I fix it (.) .', '*CHI: zzz .', "*MOT: now sit still in Papa's lap honey .", "*MOT: why you sitting on his lap anyway <it's too hot [!]> [>] (.) .", '*GFA: <want a bite> [<] ?', '*MOT: to sit <on his lap> [>] .', "*GMA: <but she's> [<] [//] but he's not holding [///] she [//] <she eats> [>] .", "*GFA: <she's having her second [!]> [<] supper [!] .", '*GMA: she eats supper with him [!] too (.) .', "*MOT: she's going to get fat !", '*CHI: <too [?]> [>] !', "*GMA: course [<] she's not three hundred pounds .", "*GFA: say I'm beautiful .", "*GFA: I'm not fat [!] .", "*CHI: I'm beautiful .", '*GMA: zzz .', '*MOT: you think [!] <you are> [>] .', '*GFA: zzz [<] .', "*CHI: yes I am [!] I'm [/] .", '*MOT: who says ?', "*CHI: I'm eating a lot .", "*MOT: now that's fresh [>] .", '*CHI: &-um [!] .', '*CHI: I ate that .', '*GMA: here .', '*GMA: Papa saved you supper .', "*GFA: you're a monkey .", "*GMA: what d'you@d eat for supper before (.) ?", "*GMA: what d'you@d already eat for supper ?", '*CHI: pizza .', '*GMA: and what else ?', '*CHI: calzone .', '*GMA: and what else ?', '*CHI: steak .', '*GMA: tell Papa .', '*CHI: I had [>] .', '*GFA: mm [<] .', '*CHI: steak and pizza !', '*GFA: steak and pizza ?', '*GMA: and calzone [>] .', '*CHI: calzone [<] .', '*GFA: and calzone !', "*GMA: she didn't like the <macaroni salad> [>] .", '*MOT: <did you like that calzone xxx> [<] ?', '*GFA: hm: !', "*MOT: that's Canadian bacon .", '*CHI: zzz .', "*GMA: that's papa's .", '*GMA: his mouth is bigger than yours .', '*GFA: hm: .', '*CHI: zzz .', '*GFA: zzz .', "*GFA: I don't know about that (.) .", '*GFA: my mouth bigger than yours ?', '*GFA: no ?', '*GFA: okay (.) .', '*CHI: I swallowed .', '*GMA: you swallowed it ?', '*GMA: well I hope so .', "*GMA: that's what you're supposed to do .", '*CHI: more .', '*GFA: one more bite then you got_to scram .', '*GMA: come on .', '*GMA: get down so Papa can finish <his supper> [>] .', '*GFA: okay [<] ?', '*CHI: hm: (.) .', '*MOT: stay in front .', '*CHI: what ?', '*GMA: where ?']
loading solution set
LINE NO ->  15
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c5b90>)
[('is', 'VBZ'), ('that', 'IN'), ('a', 'DT'), ('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  20
LINE NO ->  23
LINE NO ->  26
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c51b8>)
[('a', 'DT'), ('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  29
rabbit
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c5ef0>)
[('no', 'DT'), ('rabbit', 'NN')]
['rabbit']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  33
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  37
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  41
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  44
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  47
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  50
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c2b00>)
[('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('his', 'PRP$'), ('green', 'JJ'), ('car', 'NN')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  53
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  61
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  62
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c20e0>)
[('blue', 'NN'), ('and', 'CC')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  65
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  69
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  81
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  84
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  95
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  99
peanut butter
peanut butter peanut butter 590
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['peanut', 'butter']
('food -> ', [['peanut butter', 'Legumes and Legume Products']])
butter
butter butter 499
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['butter']
('food -> ', [['peanut butter', 'Legumes and Legume Products'], ['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  106
peanut butter
peanut butter peanut butter 590
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['peanut', 'butter']
('food -> ', [['peanut butter', 'Legumes and Legume Products']])
butter
butter butter 499
[('peanut', 'NN'), ('butter', 'NN'), ('and', 'CC'), ('jelly', 'RB')]
['butter']
('food -> ', [['peanut butter', 'Legumes and Legume Products'], ['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  110
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  114
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  117
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  118
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  121
celery
celery celery 18
[('celery', 'NN')]
['celery']
('food -> ', [['celery', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  124
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  127
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  130
celery
celery celery 18
[('you', 'PRP'), ('cut', 'VBD'), ('up', 'RP'), ('some', 'DT'), ('celery', 'NN')]
['celery']
('food -> ', [['celery', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  133
celery
celery celery 18
[('with', 'IN'), ('celery', 'NN')]
['celery']
('food -> ', [['celery', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  136
celery
celery celery 18
[('what', 'WP'), ('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VB'), ('what', 'WP'), ('you', 'PRP'), ('have', 'VBP'), ('on', 'IN'), ('the', 'DT'), ('celery', 'NN')]
['celery']
('food -> ', [['celery', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  140
peanut butter
peanut butter peanut butter 590
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('peanut', 'VBN'), ('butter', 'NN')]
['peanut', 'butter']
('food -> ', [['peanut butter', 'Legumes and Legume Products']])
butter
butter butter 499
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('have', 'VBP'), ('peanut', 'VBN'), ('butter', 'NN')]
['butter']
('food -> ', [['peanut butter', 'Legumes and Legume Products'], ['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  144
butter
butter butter 499
[('pean', 'JJ'), ('ut', 'NN'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  147
LINE NO ->  151
LINE NO ->  155
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  159
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  162
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  166
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  170
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  173
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  178
LINE NO ->  181
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  186
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  192
LINE NO ->  195
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  204
goose
goose goose 133
[('you', 'PRP'), ('re', 'VBP'), ('a', 'DT'), ('silly', 'RB'), ('goose', 'JJ')]
['goose']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  208
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  211
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  212
pizza
pizza pizza 274
[('the', 'DT'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  215
pizza
pizza pizza 274
[('my', 'PRP$'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  218
LINE NO ->  221
cheese
cheese cheese 280
[('it', 'PRP'), ('s', 'VBZ'), ('you', 'PRP'), ('smell', 'VBP'), ('the', 'DT'), ('cheese', 'NN')]
['cheese']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  224
pizza
pizza pizza 274
[('that', 'DT'), ('good', 'JJ'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  230
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  234
pizza
pizza pizza 274
[('there', 'EX'), ('s', 'VBZ'), ('no', 'DT'), ('more', 'RBR'), ('steak', 'NNS'), ('so', 'RB'), ('make', 'VB'), ('sure', 'JJ'), ('you', 'PRP'), ('finish', 'VBP'), ('eating', 'VBG'), ('your', 'PRP$'), ('pizza', 'NN'), ('too', 'RB')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 1, 65: 1, 66: 1, 67: 1, 68: 1, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0})
LINE NO ->  240
LINE NO ->  243
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  246
pizza
pizza pizza 274
[('finish', 'JJ'), ('eating', 'VBG'), ('your', 'PRP$'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  251
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  254
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  257
LINE NO ->  261
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  264
LINE NO ->  268
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  271
LINE NO ->  275
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  278
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, -1: 1})
LINE NO ->  283
LINE NO ->  286
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  290
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  293
LINE NO ->  296
LINE NO ->  299
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  302
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  309
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  312
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  317
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  322
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 1, 97: 1, 98: 1, 99: 1, 100: 0, 101: 0, 102: 0})
LINE NO ->  327
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  336
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  340
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  344
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  347
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  350
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  354
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  357
LINE NO ->  361
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  372
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, -1: 1})
LINE NO ->  378
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  381
LINE NO ->  385
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  390
LINE NO ->  394
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  398
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  400
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  404
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  408
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  414
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  418
LINE NO ->  422
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  426
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  429
LINE NO ->  432
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  437
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0})
LINE NO ->  444
LINE NO ->  448
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  453
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  456
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  459
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  463
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  466
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  471
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  474
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  478
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  481
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  485
LINE NO ->  488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  491
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  497
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  500
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  501
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  504
LINE NO ->  508
LINE NO ->  511
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  515
LINE NO ->  518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  521
LINE NO ->  524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  527
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  530
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  538
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  542
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  546
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  549
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  553
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  556
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  559
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  562
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  566
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 0, 54: 0})
LINE NO ->  571
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0})
LINE NO ->  576
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  579
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  582
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  587
LINE NO ->  591
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0})
LINE NO ->  598
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 0, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, -1: 1})
LINE NO ->  604
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, -1: 1})
LINE NO ->  610
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  613
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  617
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 1, 85: 1, 86: 1, 87: 1, 88: 1, 89: 1, 90: 1, 91: 1, 92: 1, 93: 1, 94: 1, 95: 1, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0})
LINE NO ->  623
LINE NO ->  627
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  631
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  634
LINE NO ->  637
LINE NO ->  640
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  644
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  647
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  651
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  656
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  660
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  665
pizza
pizza pizza 274
[('eat', 'VB'), ('your', 'PRP$'), ('delicious', 'JJ'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  668
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  671
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  674
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  677
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  680
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  683
pizza
pizza pizza 274
[('how', 'WRB'), ('about', 'IN'), ('the', 'DT'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  686
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  689
LINE NO ->  692
pizza
pizza pizza 274
[('this', 'DT'), ('one', 'CD'), ('s', 'VBZ'), ('the', 'DT'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  695
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  701
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  704
pizza
pizza pizza 274
[('i', 'NN'), ('call', 'NN'), ('this', 'DT'), ('pizza', 'NN'), ('too', 'RB')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  707
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  710
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  713
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  717
LINE NO ->  720
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  723
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  726
LINE NO ->  729
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  733
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  736
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  740
pizza
pizza pizza 274
[('who', 'WP'), ('likes', 'VBZ'), ('this', 'DT'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  744
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  751
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  760
LINE NO ->  764
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  767
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  770
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  774
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  778
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  781
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  785
LINE NO ->  788
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  793
LINE NO ->  796
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  801
LINE NO ->  804
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470f31b8>)
[('you', 'PRP'), ('want', 'VBP'), ('dessert', 'JJ')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  808
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  811
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  814
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  818
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947124878>)
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  821
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  824
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  827
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  830
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  833
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  837
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  842
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  845
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  849
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  852
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  855
LINE NO ->  858
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  863
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  866
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  870
LINE NO ->  875
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  878
LINE NO ->  881
LINE NO ->  884
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  887
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  890
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  893
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  896
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  899
LINE NO ->  900
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  903
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  906
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  909
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  913
LINE NO ->  916
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  922
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  925
LINE NO ->  928
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  931
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  935
milk
milk milk 46
[('put', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  938
sugar
sugar sugar 399
[('grandpa', 'NN'), ('that', 'WDT'), ('s', 'VBZ'), ('sugar', 'NN'), ('in', 'IN'), ('there', 'EX')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  941
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  944
sugar
sugar sugar 399
[('gon', 'NN'), ('na', 'TO'), ('put', 'VB'), ('some', 'DT'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX'), ('too', 'RB')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  948
LINE NO ->  951
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  954
sugar
sugar sugar 399
[('i', 'NN'), ('like', 'IN'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  957
LINE NO ->  958
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  961
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  964
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  967
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  970
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  973
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  976
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  979
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  982
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  985
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  990
crackers
crackers crackers 453
[('you', 'PRP'), ('sticking', 'VBG'), ('your', 'PRP$'), ('finger', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN'), ('for', 'IN')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
milk
milk milk 46
[('you', 'PRP'), ('sticking', 'VBG'), ('your', 'PRP$'), ('finger', 'NN'), ('in', 'IN'), ('my', 'PRP$'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN'), ('for', 'IN')]
['milk']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  996
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1000
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1003
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1006
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1009
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1012
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1015
LINE NO ->  1019
milk
milk milk 46
[('you', 'PRP'), ('done', 'VBN'), ('with', 'IN'), ('the', 'DT'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1022
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1025
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1029
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1032
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1035
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1038
oatmeal
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722e2d8>)
[('but', 'CC'), ('um', 'JJ'), ('oatmeal', 'NN'), ('in', 'IN'), ('it', 'PRP')]
['oatmeal']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1041
LINE NO ->  1044
crackers
crackers crackers 453
[('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
milk
milk milk 46
[('it', 'PRP'), ('s', 'VBZ'), ('just', 'RB'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['milk']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  1047
crackers
crackers crackers 453
[('saltine', 'NN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
milk
milk milk 46
[('saltine', 'NN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['milk']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1050
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  1055
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1059
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1063
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1066
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1069
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1073
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1076
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1080
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1083
LINE NO ->  1088
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 1, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  1093
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1096
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1099
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1102
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1105
LINE NO ->  1108
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1111
LINE NO ->  1112
sugar
sugar sugar 399
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('sugar', 'NN'), ('and', 'CC'), ('the', 'DT'), ('spoon', 'NN'), ('back', 'RB')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  1117
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1120
sugar
sugar sugar 399
[('you', 'PRP'), ('already', 'RB'), ('put', 'VBD'), ('enough', 'JJ'), ('sugar', 'NN'), ('on', 'IN'), ('there', 'EX')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1125
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1129
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1132
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1136
LINE NO ->  1139
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1142
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1145
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1148
sugar
sugar sugar 399
[('grandma', 'NN'), ('s', 'NN'), ('trying', 'VBG'), ('to', 'TO'), ('sugar', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('death', 'NN'), ('here', 'RB')]
['sugar']
('food -> ', [['sugar', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0})
LINE NO ->  1154
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1157
LINE NO ->  1160
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1163
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1166
crackers
crackers crackers 453
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['crackers']
('food -> ', [['crackers', 'Baked Products']])
milk
milk milk 46
[('d', 'NN'), ('you', 'PRP'), ('d', 'VBP'), ('like', 'IN'), ('crackers', 'NNS'), ('and', 'CC'), ('milk', 'NN')]
['milk']
('food -> ', [['crackers', 'Baked Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1173
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1176
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1179
milk
milk milk 46
[('she', 'PRP'), ('says', 'VBZ'), ('she', 'PRP'), ('likes', 'VBZ'), ('them', 'PRP'), ('with', 'IN'), ('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1184
LINE NO ->  1187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  1190
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1193
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  1198
LINE NO ->  1201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  1204
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1208
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 1, 78: 0, 79: 1, 80: 1, 81: 1, 82: 0, 83: 0, 84: 0})
LINE NO ->  1216
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  1219
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1223
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 1, 107: 1, 108: 1, 109: 1, 110: 1, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, -1: 1})
LINE NO ->  1230
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1233
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  1236
ham
ham ham 141
[('the', 'DT'), ('night', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('making', 'VBG'), ('ham', 'NN'), ('in', 'IN'), ('the', 'DT'), ('oven', 'NN')]
['ham']
('food -> ', [['ham', 'Sausages and Luncheon Meats']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0})
LINE NO ->  1241
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  1247
LINE NO ->  1251
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1256
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, -1: 1})
LINE NO ->  1266
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1269
LINE NO ->  1273
LINE NO ->  1279
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1282
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1286
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1289
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1299
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1302
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1305
LINE NO ->  1308
LINE NO ->  1312
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1315
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1318
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1321
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1324
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, -1: 1})
LINE NO ->  1332
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1336
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1340
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1343
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1348
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0})
LINE NO ->  1355
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1357
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1364
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, -1: 1})
LINE NO ->  1369
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1374
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1377
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1380
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1383
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c5908>)
[('a', 'DT'), ('fan', 'NN'), ('belt', 'NN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  1386
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1389
fan
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472c5dd0>)
[('fan', 'NN'), ('belt', 'NN')]
['fan']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1392
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1395
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1400
LINE NO ->  1404
LINE NO ->  1407
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1411
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  1416
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, -1: 1})
LINE NO ->  1424
LINE NO ->  1427
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1430
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1433
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1440
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1445
honey
honey honey 304
[('now', 'RB'), ('sit', 'NN'), ('still', 'RB'), ('in', 'IN'), ('papa', 'JJ'), ('s', 'JJ'), ('lap', 'NN'), ('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1451
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0})
LINE NO ->  1456
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1459
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1463
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  1466
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1471
LINE NO ->  1474
fat
fat fat 900
[('she', 'PRP'), ('s', 'VBD'), ('going', 'VBG'), ('to', 'TO'), ('get', 'VB'), ('fat', 'JJ')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1477
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1480
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  1485
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1488
fat
fat fat 900
[('i', 'NNS'), ('m', 'VBP'), ('not', 'RB'), ('fat', 'JJ')]
['fat']
('food -> ', [['fat', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1491
LINE NO ->  1494
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1498
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1501
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1505
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  1508
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1512
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0})
LINE NO ->  1515
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1518
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1520
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1523
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1526
LINE NO ->  1529
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1533
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1536
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1539
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  1542
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1545
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1548
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1551
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  1555
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1558
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1561
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1564
pizza
pizza pizza 274
[('steak', 'NN'), ('and', 'CC'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1567
pizza
pizza pizza 274
[('steak', 'NN'), ('and', 'CC'), ('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  1570
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1573
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1577
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1580
macaroni
macaroni macaroni 128
[('she', 'PRP'), ('didn', 'VBD'), ('t', 'NNS'), ('like', 'IN'), ('the', 'DT'), ('macaroni', 'NN'), ('salad', 'NN')]
['macaroni']
('food -> ', [['macaroni', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1584
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1588
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1591
bacon
bacon bacon 309
[('that', 'DT'), ('s', 'VBZ'), ('canadian', 'JJ'), ('bacon', 'NN')]
['bacon']
('food -> ', [['bacon', 'Legumes and Legume Products']])
canadian bacon
canadian bacon canadian bacon 146
[('that', 'DT'), ('s', 'VBZ'), ('canadian', 'JJ'), ('bacon', 'NN')]
['canadian', 'bacon']
('food -> ', [['bacon', 'Legumes and Legume Products'], ['canadian bacon', 'Pork Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1594
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1598
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1601
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1605
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1609
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1613
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1617
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1620
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1623
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  1626
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1629
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1632
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1635
LINE NO ->  1638
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  1643
LINE NO ->  1646
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1651
LINE NO ->  1655
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  1661
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1664
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1667
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1670
LINE NO ->  1673
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
loading solution set
calculating
set([(1546, (6, 13)), (1585, (25, 32)), (721, (6, 11)), (1578, (10, 17)), (666, (29, 34)), (1161, (18, 23)), (216, (9, 14)), (684, (20, 25)), (235, (64, 69)), (936, (20, 24)), (991, (50, 54)), (137, (51, 57)), (1121, (29, 34)), (1167, (19, 27)), (939, (21, 26)), (1565, (6, 11)), (1045, (16, 24)), (235, (22, 27)), (1552, (6, 11)), (222, (31, 37)), (1149, (26, 31)), (945, (21, 26)), (1045, (29, 33)), (1113, (22, 27)), (628, (24, 29)), (145, (6, 21)), (107, (6, 29)), (247, (25, 30)), (741, (25, 30)), (1048, (7, 23)), (1167, (32, 36)), (1039, (23, 30)), (1540, (6, 11)), (1574, (6, 13)), (1568, (6, 11)), (1592, (13, 27)), (134, (11, 17)), (693, (25, 30)), (213, (10, 15)), (244, (22, 27)), (1571, (10, 17)), (955, (13, 18)), (1020, (24, 28)), (131, (22, 28)), (100, (6, 29)), (141, (19, 32)), (252, (19, 24)), (1180, (35, 39)), (1565, (16, 21)), (1568, (16, 21)), (1237, (30, 33)), (1581, (27, 41)), (991, (37, 45)), (122, (6, 12)), (1048, (28, 32)), (705, (18, 23)), (225, (16, 21))])
[((100, (6, 29)), '*CHI:\tpeanut butter and jelly .\n'), ((107, (6, 29)), '*MOT:\tpeanut butter and jelly ?\n'), ((122, (6, 12)), '*CHI:\tcelery .\n'), ((131, (22, 28)), '*MOT:\tyou cut up some celery .\n'), ((134, (11, 17)), '*CHI:\twith celery ?\n'), ((137, (51, 57)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((141, (19, 32)), "*MOT:\td'you@d have peanut butter ?\n"), ((145, (6, 21)), '*CHI:\tpean(ut) butter !\n'), ((213, (10, 15)), '*GMA:\tthe pizza [!] .\n'), ((216, (9, 14)), '*CHI:\tmy pizza ?\n'), ((222, (31, 37)), "*GMA:\tit's [///] you smell the cheese [!] (.) .\n"), ((225, (16, 21)), '*GMA:\tthat good pizza ?\n'), ((235, (22, 27)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((235, (64, 69)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((244, (22, 27)), "*GMA:\tthere's no more steak .\n"), ((247, (25, 30)), '*GMA:\tfinish eating your pizza .\n'), ((252, (19, 24)), "*CHI:\tthere's more steak !\n"), ((628, (24, 29)), '*CHI:\tone more piece of steak left [!] .\n'), ((666, (29, 34)), '*GMA:\teat [<] your delicious pizza .\n'), ((684, (20, 25)), '*GMA:\thow about the pizza ?\n'), ((693, (25, 30)), "*GMA:\tthis [!] one's the pizza .\n"), ((705, (18, 23)), '*CHI:\tI call this pizza too .\n'), ((721, (6, 11)), '*CHI:\tpizza .\n'), ((741, (25, 30)), '*CHI:\twho likes this [!] pizza ?\n'), ((936, (20, 24)), '*GFA:\tput some more milk .\n'), ((939, (21, 26)), "*CHI:\tGrandpa that's sugar [?] in there ?\n"), ((945, (21, 26)), '*GFA:\tgonna put some sugar on there too .\n'), ((955, (13, 18)), '*GFA:\tI like sugar on there .\n'), ((991, (37, 45)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((991, (50, 54)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((1020, (24, 28)), '*GMA:\tyou done with the milk ?\n'), ((1039, (23, 30)), '*CHI:\tbut (.) &-um (.) oatmeal in it ?\n'), ((1045, (16, 24)), "*GFA:\tit's just crackers and milk .\n"), ((1045, (29, 33)), "*GFA:\tit's just crackers and milk .\n"), ((1048, (7, 23)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1048, (28, 32)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1113, (22, 27)), '*GFA:\t<can I have the sugar and the spoon> [<] back ?\n'), ((1121, (29, 34)), '*GMA:\tyou already put enough sugar on there (.) .\n'), ((1149, (26, 31)), "*GFA:\tGrandma's trying to sugar me to death here .\n"), ((1161, (18, 23)), "*CHI:\tit's by the jelly !\n"), ((1167, (19, 27)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1167, (32, 36)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1180, (35, 39)), '*MOT:\tshe says she likes them with milk .\n'), ((1237, (30, 33)), '*GMA:\tthe night he was making ham in the oven .\n'), ((1540, (6, 11)), '*CHI:\tpizza .\n'), ((1546, (6, 13)), '*CHI:\tcalzone .\n'), ((1552, (6, 11)), '*CHI:\tsteak .\n'), ((1565, (6, 11)), '*CHI:\tsteak and pizza !\n'), ((1565, (16, 21)), '*CHI:\tsteak and pizza !\n'), ((1568, (6, 11)), '*GFA:\tsteak and pizza ?\n'), ((1568, (16, 21)), '*GFA:\tsteak and pizza ?\n'), ((1571, (10, 17)), '*GMA:\tand calzone [>] .\n'), ((1574, (6, 13)), '*CHI:\tcalzone [<] .\n'), ((1578, (10, 17)), '*GFA:\tand calzone !\n'), ((1581, (27, 41)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1585, (25, 32)), '*MOT:\t<did you like that calzone xxx> [<] ?\n'), ((1592, (13, 27)), "*MOT:\tthat's Canadian bacon .\n")]
set([(618, (74, 77)), (171, (15, 20)), (859, (-1, 4)), (276, (6, 10)), (423, (-1, 4)), (279, (33, 38)), (1094, (-1, 4)), (1349, (33, 37)), (66, (12, 15)), (641, (16, 21)), (279, (-1, 4)), (897, (6, 9)), (693, (-1, 4)), (1174, (6, 12)), (1283, (-1, 4)), (423, (34, 39)), (79, (-1, 4)), (1344, (-1, 4)), (323, (96, 100)), (1390, (11, 16)), (864, (-1, 4)), (550, (-1, 4)), (115, (-1, 4)), (1393, (11, 14)), (107, (-1, 18)), (959, (-1, 4)), (1381, (15, 18)), (1130, (6, 9)), (1020, (-1, 4)), (657, (6, 11)), (96, (34, 39)), (362, (6, 10)), (42, (-1, 3)), (539, (-1, 4)), (252, (6, 13)), (1621, (9, 14)), (401, (11, 14)), (1506, (6, 9)), (1077, (-1, 4)), (1478, (16, 19)), (724, (13, 18)), (711, (6, 9)), (332, (31, 36)), (1565, (6, 11)), (1039, (-1, 4)), (1100, (-1, 4)), (1509, (-1, 4)), (1045, (6, 10)), (897, (10, 13)), (498, (6, 10)), (675, (-1, 4)), (724, (6, 12)), (1089, (-1, 4)), (300, (-1, 4)), (1177, (-1, 4)), (745, (26, 29)), (235, (64, 69)), (1581, (27, 35)), (351, (-1, 4)), (156, (-1, 4)), (959, (24, 27)), (577, (28, 31)), (131, (-1, 4)), (332, (21, 25)), (1412, (50, 53)), (1602, (31, 36)), (1393, (6, 10)), (63, (15, 18)), (775, (-1, 4)), (345, (16, 19)), (1224, (39, 44)), (337, (35, 38)), (1303, (-1, 4)), (1174, (13, 17)), (163, (12, 15)), (1592, (-1, 13)), (652, (6, 9)), (1081, (-1, 4)), (1013, (6, 11)), (328, (13, 18)), (373, (41, 44)), (1296, (-1, 4)), (1319, (6, 10)), (929, (23, 27)), (1349, (10, 16)), (306, (-1, 4)), (628, (15, 20)), (901, (16, 19)), (1224, (106, 111)), (572, (11, 15)), (137, (-1, 4)), (369, (-1, 4)), (1365, (30, 36)), (1571, (-1, 4)), (666, (29, 34)), (1010, (6, 12)), (974, (37, 40)), (749, (16, 23)), (782, (-1, 4)), (167, (-1, 4)), (1205, (21, 24)), (438, (57, 62)), (1217, (31, 36)), (876, (6, 10)), (1549, (-1, 4)), (894, (-1, 4)), (492, (6, 11)), (1417, (11, 16)), (27, (8, 14)), (30, (9, 15)), (1457, (20, 23)), (1534, (27, 33)), (1574, (14, 17)), (917, (-1, 4)), (1013, (-1, 4)), (1375, (9, 14)), (1237, (41, 45)), (1457, (14, 19)), (313, (48, 51)), (1113, (36, 42)), (1656, (-1, 4)), (714, (14, 18)), (1267, (10, 13)), (560, (26, 29)), (1224, (-1, 4)), (1365, (57, 60)), (82, (27, 30)), (965, (6, 10)), (323, (46, 50)), (1303, (28, 31)), (1662, (6, 10)), (1408, (-1, 4)), (59, (26, 29)), (991, (37, 45)), (1599, (13, 19)), (1033, (-1, 4)), (16, (16, 22)), (438, (48, 56)), (1118, (16, 21)), (475, (-1, 4)), (1460, (21, 25)), (91, (6, 8)), (1481, (6, 12)), (1627, (11, 14)), (528, (6, 10)), (1313, (-1, 4)), (730, (18, 21)), (1589, (6, 9)), (345, (-1, 4)), (519, (-1, 4)), (1267, (6, 9)), (1191, (22, 27)), (1039, (23, 30)), (592, (9, 14)), (1431, (6, 10)), (846, (-1, 4)), (1341, (6, 9)), (134, (11, 17)), (188, (6, 9)), (1191, (28, 33)), (1559, (-1, 4)), (1556, (6, 10)), (534, (38, 41)), (141, (19, 32)), (1242, (32, 36)), (904, (6, 10)), (1007, (10, 13)), (1217, (37, 40)), (789, (13, 18)), (291, (-1, 4)), (1396, (-1, 4)), (834, (-1, 4)), (525, (-1, 4)), (850, (6, 8)), (1489, (14, 17)), (1543, (-1, 4)), (104, (6, 8)), (1322, (6, 9)), (1164, (6, 9)), (1519, (11, 14)), (1396, (17, 22)), (888, (-1, 4)), (805, (-1, 4)), (661, (10, 13)), (1100, (6, 10)), (1293, (-1, 4)), (1252, (6, 9)), (492, (15, 20)), (482, (16, 19)), (971, (10, 15)), (512, (19, 22)), (1434, (-1, 4)), (1540, (6, 11)), (645, (9, 15)), (291, (6, 10)), (262, (-1, 4)), (1521, (-1, 4)), (991, (50, 54)), (741, (21, 24)), (1074, (6, 9)), (752, (6, 9)), (563, (11, 15)), (1467, (31, 34)), (1467, (40, 46)), (170, (6, 10)), (595, (25, 30)), (467, (34, 37)), (812, (-1, 4)), (1143, (6, 9)), (216, (9, 14)), (222, (6, 10)), (1478, (-1, 4)), (433, (-1, 4)), (125, (-1, 4)), (137, (51, 57)), (269, (10, 13)), (300, (15, 20)), (859, (11, 16)), (789, (6, 12)), (355, (6, 9)), (955, (13, 18)), (572, (42, 45)), (1674, (-1, 4)), (467, (-1, 1)), (1303, (23, 27)), (1089, (56, 62)), (119, (-1, 4)), (714, (22, 26)), (752, (10, 13)), (323, (11, 16)), (174, (25, 30)), (923, (-1, 4)), (1337, (23, 27)), (1194, (6, 12)), (1647, (36, 41)), (1537, (35, 41)), (187, (6, 10)), (543, (-1, 4)), (1571, (10, 17)), (472, (11, 14)), (779, (-1, 4)), (125, (16, 19)), (672, (11, 14)), (225, (-1, 4)), (1293, (33, 36)), (1647, (15, 19)), (567, (47, 52)), (605, (51, 54)), (255, (-1, 4)), (1530, (15, 21)), (438, (75, 80)), (401, (15, 20)), (1452, (29, 32)), (111, (-1, 4)), (1004, (32, 35)), (904, (11, 16)), (1585, (38, 41)), (16, (-1, 4)), (1133, (6, 9)), (1358, (59, 64)), (212, (6, 11)), (118, (6, 10)), (708, (6, 9)), (70, (12, 18)), (942, (6, 10)), (137, (58, 61)), (449, (51, 54)), (929, (-1, 4)), (1191, (17, 21)), (1578, (-1, 4)), (968, (10, 16)), (1627, (6, 10)), (1565, (16, 21)), (213, (10, 19)), (247, (25, 30)), (79, (6, 12)), (1056, (-1, 4)), (929, (10, 15)), (1460, (26, 29)), (1446, (30, 33)), (85, (42, 47)), (1656, (47, 50)), (1319, (-1, 4)), (1630, (-1, 4)), (1146, (-1, 4)), (734, (6, 10)), (1121, (-1, 4)), (225, (11, 21)), (332, (-1, 4)), (1562, (9, 12)), (341, (10, 13)), (838, (6, 8)), (1316, (6, 9)), (1209, (79, 82)), (968, (38, 42)), (231, (6, 9)), (936, (-1, 4)), (1365, (-1, 4)), (141, (-1, 4)), (438, (81, 85)), (1365, (44, 48)), (1513, (19, 22)), (1097, (6, 8)), (1464, (6, 10)), (1662, (11, 14)), (1001, (-1, 4)), (1149, (26, 31)), (235, (22, 27)), (815, (-1, 4)), (572, (75, 78)), (337, (29, 34)), (678, (-1, 4)), (1013, (24, 27)), (475, (6, 10)), (482, (-1, 4)), (1581, (43, 46)), (48, (-1, 4)), (460, (10, 13)), (1067, (-1, 4)), (1180, (35, 39)), (876, (11, 14)), (1056, (25, 29)), (741, (25, 30)), (1007, (6, 9)), (611, (10, 13)), (313, (-1, 4)), (1378, (24, 27)), (693, (25, 30)), (454, (6, 9)), (1417, (21, 24)), (244, (22, 27)), (1296, (23, 27)), (997, (6, 9)), (252, (19, 24)), (1581, (-1, 4)), (379, (-1, 4)), (771, (6, 10)), (482, (42, 45)), (614, (-1, 4)), (1428, (-1, 4)), (962, (6, 12)), (1023, (-1, 4)), (1020, (24, 28)), (332, (37, 41)), (1417, (-1, 4)), (1242, (-1, 4)), (1639, (18, 24)), (1581, (36, 42)), (502, (27, 31)), (1578, (10, 17)), (457, (22, 25)), (1293, (23, 27)), (76, (16, 22)), (1390, (17, 20)), (464, (-1, 4)), (1396, (23, 26)), (705, (-1, 4)), (907, (6, 10)), (632, (16, 19)), (310, (6, 8)), (618, (84, 96)), (1656, (39, 46)), (983, (6, 10)), (599, (73, 76)), (96, (28, 33)), (1384, (8, 11)), (1639, (-1, 4)), (1624, (-1, 4)), (1475, (-1, 4)), (91, (9, 12)), (819, (19, 26)), (1300, (16, 19)), (303, (19, 22)), (797, (6, 11)), (554, (8, 12)), (76, (-1, 4)), (409, (-1, 4)), (51, (-1, 4)), (1489, (-1, 4)), (1280, (21, 24)), (705, (18, 23)), (1585, (25, 32)), (1109, (-1, 4)), (756, (-1, 4)), (318, (13, 16)), (1161, (18, 23)), (1489, (18, 21)), (323, (57, 63)), (745, (-1, 4)), (867, (6, 9)), (1546, (6, 13)), (828, (6, 10)), (1234, (10, 15)), (1170, (6, 9)), (222, (31, 37)), (427, (6, 11)), (1060, (27, 31)), (300, (21, 24)), (831, (-1, 4)), (1412, (11, 16)), (525, (16, 21)), (577, (6, 10)), (1056, (30, 33)), (1668, (6, 10)), (313, (29, 35)), (1296, (33, 37)), (1417, (17, 20)), (672, (-1, 4)), (1026, (6, 10)), (534, (34, 37)), (492, (-1, 4)), (531, (6, 9)), (1316, (-1, 4)), (1592, (13, 27)), (592, (29, 32)), (54, (6, 10)), (1287, (22, 27)), (379, (15, 18)), (1070, (6, 9)), (737, (-1, 4)), (1618, (30, 33)), (1237, (30, 33)), (1475, (6, 11)), (885, (15, 18)), (1194, (13, 16)), (337, (-1, 4)), (475, (37, 40)), (932, (6, 9)), (1161, (-1, 4)), (202, (6, 8)), (323, (79, 82)), (1446, (34, 39)), (1191, (-1, 4)), (936, (20, 24)), (1231, (26, 30)), (209, (16, 22)), (730, (6, 12)), (1390, (7, 10)), (1665, (6, 9)), (1537, (27, 30)), (1167, (19, 27)), (73, (6, 9)), (1552, (6, 11)), (34, (6, 10)), (1140, (6, 10)), (1516, (17, 26)), (809, (9, 12)), (980, (22, 25)), (1064, (6, 8)), (1113, (22, 27)), (205, (21, 26)), (885, (10, 14)), (1467, (6, 12)), (897, (-1, 4)), (974, (-1, 4)), (323, (25, 28)), (1094, (6, 9)), (1188, (11, 15)), (1209, (72, 78)), (547, (9, 15)), (939, (14, 20)), (489, (6, 9)), (991, (24, 30)), (373, (-1, 4)), (1149, (38, 43)), (1633, (-1, 4)), (1384, (12, 16)), (768, (-1, 4)), (583, (-1, 4)), (819, (-1, 4)), (1412, (-1, 4)), (1370, (10, 13)), (1665, (10, 13)), (472, (6, 10)), (1610, (6, 9)), (1599, (6, 12)), (63, (6, 10)), (1524, (-1, 4)), (681, (6, 9)), (1499, (-1, 4)), (714, (-1, 4)), (160, (12, 18)), (684, (20, 25)), (519, (22, 26)), (952, (6, 10)), (1464, (74, 77)), (1333, (-1, 4)), (611, (6, 9)), (980, (-1, 4)), (955, (-1, 4)), (605, (46, 50)), (1325, (45, 49)), (1534, (41, 44)), (145, (6, 21)), (945, (21, 26)), (328, (6, 12)), (423, (27, 33)), (611, (-1, 4)), (557, (30, 33)), (1618, (-1, 4)), (977, (6, 10)), (1030, (11, 16)), (657, (33, 38)), (1370, (6, 9)), (1060, (-1, 4)), (822, (6, 10)), (1530, (-1, 4)), (1356, (13, 16)), (479, (6, 10)), (502, (-1, 4)), (1074, (-1, 4)), (1209, (25, 31)), (696, (-1, 4)), (182, (20, 25)), (583, (25, 28)), (156, (20, 26)), (409, (40, 46)), (1023, (19, 23)), (828, (19, 23)), (1048, (28, 33)), (721, (6, 11)), (745, (21, 25)), (910, (6, 9)), (1602, (10, 15)), (212, (12, 15)), (1039, (10, 13)), (666, (6, 9)), (1585, (-1, 4)), (137, (20, 25)), (991, (-1, 4)), (669, (6, 12)), (1121, (29, 34)), (1481, (41, 47)), (182, (-1, 4)), (771, (-1, 4)), (395, (6, 10)), (853, (11, 14)), (1434, (31, 34)), (399, (32, 37)), (38, (-1, 4)), (628, (24, 29)), (228, (9, 12)), (122, (6, 12)), (1257, (52, 56)), (1574, (6, 13)), (1356, (6, 12)), (583, (42, 47)), (1237, (10, 15)), (1045, (29, 33)), (1556, (-1, 4)), (1349, (71, 76)), (196, (11, 16)), (968, (-1, 4)), (1381, (9, 14)), (1568, (6, 11)), (1089, (63, 66)), (79, (13, 18)), (1140, (20, 23)), (174, (-1, 4)), (939, (27, 30)), (1534, (19, 22)), (512, (-1, 4)), (1387, (-1, 4)), (605, (13, 17)), (163, (-1, 4)), (577, (-1, 4)), (228, (6, 8)), (1155, (6, 10)), (454, (-1, 4)), (891, (6, 10)), (1358, (32, 37)), (843, (-1, 4)), (1257, (-1, 4)), (519, (16, 21)), (1036, (6, 9)), (768, (18, 23)), (724, (-1, 4)), (1568, (16, 21)), (699, (-1, 4)), (1126, (6, 9)), (1220, (15, 18)), (1571, (18, 21)), (980, (26, 31)), (1358, (-1, 4)), (1381, (25, 28)), (1387, (6, 10)), (1668, (14, 19)), (1001, (6, 9)), (843, (6, 9)), (134, (-1, 4)), (386, (34, 38)), (163, (16, 22)), (599, (-1, 4)), (167, (17, 19)), (945, (6, 11)), (572, (33, 37)), (1033, (6, 9)), (460, (-1, 4)), (1396, (34, 39)), (1464, (-1, 4)), (337, (19, 23)), (405, (6, 10)), (531, (10, 13)), (1325, (-1, 6)), (449, (-1, 4)), (1396, (40, 46)), (567, (38, 41)), (88, (6, 9)), (641, (40, 46)), (1048, (6, 23)), (1045, (16, 24)), (348, (-1, 4)), (599, (66, 72)), (632, (11, 15)), (1109, (6, 13)), (1103, (18, 22)), (605, (-1, 4)), (1202, (6, 10)), (1502, (6, 9)), (572, (58, 62)), (1441, (6, 9)), (1167, (32, 36)), (51, (21, 30)), (205, (-1, 4)), (1486, (-1, 4)), (401, (40, 47)), (1048, (34, 37)), (986, (6, 9)), (1030, (-1, 4)), (1606, (6, 9)), (1089, (40, 44)), (1475, (25, 28)), (1595, (6, 9)), (100, (6, 19)), (460, (6, 9)), (131, (22, 28)), (276, (-1, 4)), (1280, (-1, 4)), (675, (24, 27)), (1562, (6, 8)), (614, (25, 28)), (741, (-1, 4)), (765, (6, 12)), (45, (6, 10)), (415, (27, 32)), (1412, (69, 72)), (1457, (-1, 4)), (59, (11, 16)), (1220, (10, 14)), (534, (29, 33)), (702, (6, 9)), (401, (21, 24)), (525, (26, 30)), (825, (6, 9)), (1614, (6, 9)), (519, (27, 32)), (580, (6, 10)), (1231, (-1, 4)), (1290, (18, 22)), (1467, (-1, 4)), (479, (11, 14)), (1194, (23, 27)), (62, (11, 14)), (401, (-1, 4)), (853, (6, 10)), (373, (49, 53)), (599, (20, 24)), (648, (-1, 4)), (1621, (27, 32)), (687, (-1, 4)), (1337, (-1, 4)), (901, (-1, 4)), (1546, (-1, 4)), (231, (10, 13)), (287, (-1, 4)), (669, (13, 16)), (939, (21, 26)), (805, (15, 22)), (1051, (-1, 4)), (1460, (-1, 4)), (128, (-1, 4)), (557, (-1, 4)), (1378, (19, 23)), (1495, (6, 9)), (1502, (10, 13)), (501, (10, 17)), (1438, (-1, 4))])
[((16, (-1, 4)), '*CHI:\tis that a rabbit ?\n'), ((16, (16, 22)), '*CHI:\tis that a rabbit ?\n'), ((27, (8, 14)), '*GMA:\ta rabbit ?\n'), ((30, (9, 15)), '*CHI:\tno rabbit .\n'), ((34, (6, 10)), '*CHI:\tlook .\n'), ((38, (-1, 4)), "*CHI:\tthat's not my Papa .\n"), ((42, (-1, 3)), '*GMA:\tnot your Papa yet ?\n'), ((45, (6, 10)), '*GMA:\tnope .\n'), ((48, (-1, 4)), '*CHI:\tthat !\n'), ((51, (-1, 4)), "*CHI:\tthat's not his green car .\n"), ((51, (21, 30)), "*CHI:\tthat's not his green car .\n"), ((54, (6, 10)), '*GMA:\tnope .\n'), ((59, (11, 16)), '*GMA:\twhat color was that car ?\n'), ((59, (26, 29)), '*GMA:\twhat color was that car ?\n'), ((62, (11, 14)), '*CHI:\t&-um (.) .\n'), ((63, (6, 10)), '*MOT:\tblue and [>] .\n'), ((63, (15, 18)), '*MOT:\tblue and [>] .\n'), ((66, (12, 15)), '*GMA:\tright [<] !\n'), ((70, (12, 18)), '*CHI:\tblack wheels .\n'), ((73, (6, 9)), '*GMA:\tmhm .\n'), ((76, (-1, 4)), '*CHI:\tand black wheels .\n'), ((76, (16, 22)), '*CHI:\tand black wheels .\n'), ((79, (-1, 4)), "*GMA:\tthat's right .\n"), ((79, (6, 12)), "*GMA:\tthat's right .\n"), ((79, (13, 18)), "*GMA:\tthat's right .\n"), ((82, (27, 30)), "*GMA:\t<you're> [>] a smart kid .\n"), ((85, (42, 47)), '*CHI:\t<and> [<] [/] and black striped [?] lines .\n'), ((88, (6, 9)), '*GMA:\tmhm .\n'), ((91, (6, 8)), '*MOT:\tmm (.) .\n'), ((91, (9, 12)), '*MOT:\tmm (.) .\n'), ((96, (28, 33)), "*MOT:\twhat d'you@d have for lunch today ?\n"), ((96, (34, 39)), "*MOT:\twhat d'you@d have for lunch today ?\n"), ((100, (6, 19)), '*CHI:\tpeanut butter and jelly .\n'), ((104, (6, 8)), '*GMA:\tmm .\n'), ((107, (-1, 18)), '*MOT:\tpeanut butter and jelly ?\n'), ((111, (-1, 4)), '*MOT:\tdid you eat it all ?\n'), ((115, (-1, 4)), '*CHI:\tand I asked [!] her for one .\n'), ((118, (6, 10)), '*MOT:\t&a:h .\n'), ((119, (-1, 4)), '*GMA:\tand what else did you have ?\n'), ((122, (6, 12)), '*CHI:\tcelery .\n'), ((125, (-1, 4)), '*GMA:\twith what [!] ?\n'), ((125, (16, 19)), '*GMA:\twith what [!] ?\n'), ((128, (-1, 4)), '*MOT:\there Mom .\n'), ((131, (-1, 4)), '*MOT:\tyou cut up some celery .\n'), ((131, (22, 28)), '*MOT:\tyou cut up some celery .\n'), ((134, (-1, 4)), '*CHI:\twith celery ?\n'), ((134, (11, 17)), '*CHI:\twith celery ?\n'), ((137, (-1, 4)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((137, (20, 25)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((137, (51, 57)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((137, (58, 61)), "*GMA:\t<what d'you@d have> [/] what you have on the celery [!] ?\n"), ((141, (-1, 4)), "*MOT:\td'you@d have peanut butter ?\n"), ((141, (19, 32)), "*MOT:\td'you@d have peanut butter ?\n"), ((145, (6, 21)), '*CHI:\tpean(ut) butter !\n'), ((156, (-1, 4)), '*GMA:\tyou ate three pieces of that !\n'), ((156, (20, 26)), '*GMA:\tyou ate three pieces of that !\n'), ((160, (12, 18)), '*CHI:\tthree pieces .\n'), ((163, (-1, 4)), '*MOT:\tthree [!] pieces ?\n'), ((163, (12, 15)), '*MOT:\tthree [!] pieces ?\n'), ((163, (16, 22)), '*MOT:\tthree [!] pieces ?\n'), ((167, (-1, 4)), '*MOT:\tfilled her up .\n'), ((167, (17, 19)), '*MOT:\tfilled her up .\n'), ((170, (6, 10)), '*CHI:\t&-uh .\n'), ((171, (15, 20)), '*CHI:\tone more piece .\n'), ((174, (-1, 4)), '*CHI:\tand the other more piece and the other piece .\n'), ((174, (25, 30)), '*CHI:\tand the other more piece and the other piece .\n'), ((182, (-1, 4)), '*CHI:\tand the other piece and the other piece !\n'), ((182, (20, 25)), '*CHI:\tand the other piece and the other piece !\n'), ((187, (6, 10)), '*CHI:\t&a:h !\n'), ((188, (6, 9)), '*CHI:\tzzz .\n'), ((196, (11, 16)), '*CHI:\tthis piece and this piece and this piece .\n'), ((202, (6, 8)), '*GMA:\tmm .\n'), ((205, (-1, 4)), "*GMA:\tyou're a silly goose .\n"), ((205, (21, 26)), "*GMA:\tyou're a silly goose .\n"), ((209, (16, 22)), '*CHI:\tsomething smells (.) .\n'), ((212, (6, 11)), '*CHI:\tgonna [/] .\n'), ((212, (12, 15)), '*CHI:\tgonna [/] .\n'), ((213, (10, 19)), '*GMA:\tthe pizza [!] .\n'), ((216, (9, 14)), '*CHI:\tmy pizza ?\n'), ((222, (6, 10)), "*GMA:\tit's [///] you smell the cheese [!] (.) .\n"), ((222, (31, 37)), "*GMA:\tit's [///] you smell the cheese [!] (.) .\n"), ((225, (-1, 4)), '*GMA:\tthat good pizza ?\n'), ((225, (11, 21)), '*GMA:\tthat good pizza ?\n'), ((228, (6, 8)), '*GMA:\tmm (.) .\n'), ((228, (9, 12)), '*GMA:\tmm (.) .\n'), ((231, (6, 9)), '*CHI:\tyum (.) .\n'), ((231, (10, 13)), '*CHI:\tyum (.) .\n'), ((235, (22, 27)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((235, (64, 69)), "*GMA:\tthere's no more steak so make sure you finish eating your pizza too .\n"), ((244, (22, 27)), "*GMA:\tthere's no more steak .\n"), ((247, (25, 30)), '*GMA:\tfinish eating your pizza .\n'), ((252, (6, 13)), "*CHI:\tthere's more steak !\n"), ((252, (19, 24)), "*CHI:\tthere's more steak !\n"), ((255, (-1, 4)), '*MOT:\tyou ate it all .\n'), ((262, (-1, 4)), '*MOT:\tyou ate [!] it all .\n'), ((269, (10, 13)), '*MOT:\tyes sir .\n'), ((276, (-1, 4)), '*GMA:\tyeah you did .\n'), ((276, (6, 10)), '*GMA:\tyeah you did .\n'), ((279, (-1, 4)), '*GMA:\tyou were [///] there was a piece that was left over .\n'), ((279, (33, 38)), '*GMA:\tyou were [///] there was a piece that was left over .\n'), ((287, (-1, 4)), '*GMA:\tI cut it all up for you .\n'), ((291, (-1, 4)), "*CHI:\tit's right here .\n"), ((291, (6, 10)), "*CHI:\tit's right here .\n"), ((300, (-1, 4)), '*GMA:\ton <your dish> [>] .\n'), ((300, (15, 20)), '*GMA:\ton <your dish> [>] .\n'), ((300, (21, 24)), '*GMA:\ton <your dish> [>] .\n'), ((303, (19, 22)), "*MOT:\t<and you're> [<] eating it .\n"), ((306, (-1, 4)), '*CHI:\tbut you said it was all [!] gone [!] .\n'), ((310, (6, 8)), '*GMA:\tmm .\n'), ((313, (-1, 4)), "*MOT:\tit'll be all gone when you're done eating [!] it .\n"), ((313, (29, 35)), "*MOT:\tit'll be all gone when you're done eating [!] it .\n"), ((313, (48, 51)), "*MOT:\tit'll be all gone when you're done eating [!] it .\n"), ((318, (13, 16)), '*CHI:\tnuhhuh (.) !\n'), ((323, (11, 16)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((323, (25, 28)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((323, (46, 50)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((323, (57, 63)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((323, (79, 82)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((323, (96, 100)), "*CHI:\t<I'm gonna put my> [/] I'm gonna put my food <in a paper> [/] in a paper bag [!] this (.) time .\n"), ((328, (6, 12)), "*MOT:\tyou're gonna what [!] ?\n"), ((328, (13, 18)), "*MOT:\tyou're gonna what [!] ?\n"), ((332, (-1, 4)), '*CHI:\tI gonna put my food in a paper <bag [!]> [>] .\n'), ((332, (21, 25)), '*CHI:\tI gonna put my food in a paper <bag [!]> [>] .\n'), ((332, (31, 36)), '*CHI:\tI gonna put my food in a paper <bag [!]> [>] .\n'), ((332, (37, 41)), '*CHI:\tI gonna put my food in a paper <bag [!]> [>] .\n'), ((337, (-1, 4)), '*GMA:\tput [<] your food in a paper bag ?\n'), ((337, (19, 23)), '*GMA:\tput [<] your food in a paper bag ?\n'), ((337, (29, 34)), '*GMA:\tput [<] your food in a paper bag ?\n'), ((337, (35, 38)), '*GMA:\tput [<] your food in a paper bag ?\n'), ((341, (10, 13)), '*GMA:\twhy (.) ?\n'), ((345, (-1, 4)), '*CHI:\t(be)cause (.) .\n'), ((345, (16, 19)), '*CHI:\t(be)cause (.) .\n'), ((348, (-1, 4)), '*CHI:\tI want [!] to !\n'), ((351, (-1, 4)), '*GMA:\tare you going to work (.) ?\n'), ((355, (6, 9)), '*CHI:\tzzz .\n'), ((362, (6, 10)), '*MOT:\tawoh .\n'), ((369, (-1, 4)), '*CHI:\tcan I please come [?] ?\n'), ((373, (-1, 4)), '*CHI:\tI want swim the [//] this [/] this one and play with Kyle .\n'), ((373, (41, 44)), '*CHI:\tI want swim the [//] this [/] this one and play with Kyle .\n'), ((373, (49, 53)), '*CHI:\tI want swim the [//] this [/] this one and play with Kyle .\n'), ((379, (-1, 4)), "*CHI:\tI didn't cry .\n"), ((379, (15, 18)), "*CHI:\tI didn't cry .\n"), ((386, (34, 38)), '*MOT:\tmaybe Kyle went to have his ears checked .\n'), ((395, (6, 10)), '*CHI:\tears checked .\n'), ((399, (32, 37)), "*CHI:\t(be)cau(se) [//] <because he's> [>] [/] .\n"), ((401, (-1, 4)), '*GMA:\t<you [!] said> [<] he went to the dentist [!] .\n'), ((401, (11, 14)), '*GMA:\t<you [!] said> [<] he went to the dentist [!] .\n'), ((401, (15, 20)), '*GMA:\t<you [!] said> [<] he went to the dentist [!] .\n'), ((401, (21, 24)), '*GMA:\t<you [!] said> [<] he went to the dentist [!] .\n'), ((401, (40, 47)), '*GMA:\t<you [!] said> [<] he went to the dentist [!] .\n'), ((405, (6, 10)), '*CHI:\tyeah .\n'), ((409, (-1, 4)), "*GMA:\tbut he didn't [!] <he went to the doctor [!]> [>] .\n"), ((409, (40, 46)), "*GMA:\tbut he didn't [!] <he went to the doctor [!]> [>] .\n"), ((415, (27, 32)), "*MOT:\t<he doesn't have any teeth [!] > [<] yet !\n"), ((423, (-1, 4)), '*GMA:\twho else went to the doctor today ?\n'), ((423, (27, 33)), '*GMA:\twho else went to the doctor today ?\n'), ((423, (34, 39)), '*GMA:\twho else went to the doctor today ?\n'), ((427, (6, 11)), '*CHI:\tuncle .\n'), ((433, (-1, 4)), '*GMA:\tTasha [!] .\n'), ((438, (48, 56)), "*GMA:\tremember her grandma said she went to the doctor's today to have her blood work done .\n"), ((438, (57, 62)), "*GMA:\tremember her grandma said she went to the doctor's today to have her blood work done .\n"), ((438, (75, 80)), "*GMA:\tremember her grandma said she went to the doctor's today to have her blood work done .\n"), ((438, (81, 85)), "*GMA:\tremember her grandma said she went to the doctor's today to have her blood work done .\n"), ((449, (-1, 4)), "*MOT:\tshe didn't go in until <she was feeling xxx> [>] ?\n"), ((449, (51, 54)), "*MOT:\tshe didn't go in until <she was feeling xxx> [>] ?\n"), ((454, (-1, 4)), '*GMA:\t<no she went in> [<] Sat(urday) [///] (.) &-uh (.) Thursday .\n'), ((454, (6, 9)), '*GMA:\t<no she went in> [<] Sat(urday) [///] (.) &-uh (.) Thursday .\n'), ((457, (22, 25)), '*MOT:\tnext <Thursday> [>] .\n'), ((460, (-1, 4)), '*CHI:\thuh [<] ?\n'), ((460, (6, 9)), '*CHI:\thuh [<] ?\n'), ((460, (10, 13)), '*CHI:\thuh [<] ?\n'), ((464, (-1, 4)), '*CHI:\tshe had [!] a boo+boo .\n'), ((467, (-1, 1)), '*CHI:\t<I think she had a boo+boo> [>] .\n'), ((467, (34, 37)), '*CHI:\t<I think she had a boo+boo> [>] .\n'), ((472, (6, 10)), '*MOT:\tyeah [>] .\n'), ((472, (11, 14)), '*MOT:\tyeah [>] .\n'), ((475, (-1, 4)), '*MOT:\t<she had it fixed [!] > [<][>] huh ?\n'), ((475, (6, 10)), '*MOT:\t<she had it fixed [!] > [<][>] huh ?\n'), ((475, (37, 40)), '*MOT:\t<she had it fixed [!] > [<][>] huh ?\n'), ((479, (6, 10)), '*CHI:\tyeah [>] .\n'), ((479, (11, 14)), '*CHI:\tyeah [>] .\n'), ((482, (-1, 4)), '*GMA:\t<she had> [<] to go to the hospital [!] .\n'), ((482, (16, 19)), '*GMA:\t<she had> [<] to go to the hospital [!] .\n'), ((482, (42, 45)), '*GMA:\t<she had> [<] to go to the hospital [!] .\n'), ((489, (6, 9)), '*GMA:\tmhm .\n'), ((492, (-1, 4)), "*MOT:\twe'll go visit Tasha when she recovers .\n"), ((492, (6, 11)), "*MOT:\twe'll go visit Tasha when she recovers .\n"), ((492, (15, 20)), "*MOT:\twe'll go visit Tasha when she recovers .\n"), ((498, (6, 10)), '*CHI:\tokay .\n'), ((501, (10, 17)), '*CHI:\t<my bruise> [>] [/] .\n'), ((502, (-1, 4)), '*MOT:\t<when she comes> [<] home .\n'), ((502, (27, 31)), '*MOT:\t<when she comes> [<] home .\n'), ((512, (-1, 4)), "*CHI:\tTasha didn't cry .\n"), ((512, (19, 22)), "*CHI:\tTasha didn't cry .\n"), ((519, (-1, 4)), '*GMA:\tshe got a blood test today .\n'), ((519, (16, 21)), '*GMA:\tshe got a blood test today .\n'), ((519, (22, 26)), '*GMA:\tshe got a blood test today .\n'), ((519, (27, 32)), '*GMA:\tshe got a blood test today .\n'), ((525, (-1, 4)), '*GMA:\tshe had a blood [!] test .\n'), ((525, (16, 21)), '*GMA:\tshe had a blood [!] test .\n'), ((525, (26, 30)), '*GMA:\tshe had a blood [!] test .\n'), ((528, (6, 10)), '*CHI:\tyeah .\n'), ((531, (6, 9)), '*GMA:\tmhm [>] .\n'), ((531, (10, 13)), '*GMA:\tmhm [>] .\n'), ((534, (29, 33)), '*CHI:\t<Tasha> [<] have blood test [!] (.) .\n'), ((534, (34, 37)), '*CHI:\t<Tasha> [<] have blood test [!] (.) .\n'), ((534, (38, 41)), '*CHI:\t<Tasha> [<] have blood test [!] (.) .\n'), ((539, (-1, 4)), '*CHI:\tyou know yesterday ?\n'), ((543, (-1, 4)), '*CHI:\tMom ?\n'), ((547, (9, 15)), '*CHI:\tmy bruise came in from now .\n'), ((550, (-1, 4)), '*MOT:\tit was ?\n'), ((554, (8, 12)), '*CHI:\ta bone .\n'), ((557, (-1, 4)), '*CHI:\t(be)cause it went wrong (.) .\n'), ((557, (30, 33)), '*CHI:\t(be)cause it went wrong (.) .\n'), ((560, (26, 29)), '*CHI:\tit stop [!] hurting [?] .\n'), ((563, (11, 15)), '*GMA:\tnext hour [?] you can .\n'), ((567, (38, 41)), '*GMA:\twhat she did is she fell out of bed last night .\n'), ((567, (47, 52)), '*GMA:\twhat she did is she fell out of bed last night .\n'), ((572, (11, 15)), "*GMA:\tit's time we <mo(ve)> [//] move her bed against the wall (.) tonight [>] .\n"), ((572, (33, 37)), "*GMA:\tit's time we <mo(ve)> [//] move her bed against the wall (.) tonight [>] .\n"), ((572, (42, 45)), "*GMA:\tit's time we <mo(ve)> [//] move her bed against the wall (.) tonight [>] .\n"), ((572, (58, 62)), "*GMA:\tit's time we <mo(ve)> [//] move her bed against the wall (.) tonight [>] .\n"), ((572, (75, 78)), "*GMA:\tit's time we <mo(ve)> [//] move her bed against the wall (.) tonight [>] .\n"), ((577, (-1, 4)), '*MOT:\t<she fell out> [<] of bed ?\n'), ((577, (6, 10)), '*MOT:\t<she fell out> [<] of bed ?\n'), ((577, (28, 31)), '*MOT:\t<she fell out> [<] of bed ?\n'), ((580, (6, 10)), '*GMA:\tyeah !\n'), ((583, (-1, 4)), '*GMA:\tshe fells@n out of bed almost every night !\n'), ((583, (25, 28)), '*GMA:\tshe fells@n out of bed almost every night !\n'), ((583, (42, 47)), '*GMA:\tshe fells@n out of bed almost every night !\n'), ((592, (9, 14)), "*CHI:\t<I don't want to talk> [<] +...\n"), ((592, (29, 32)), "*CHI:\t<I don't want to talk> [<] +...\n"), ((595, (25, 30)), '*GMA:\tright (be)fore the smoke detectors went off .\n'), ((599, (-1, 4)), '*GMA:\tabout half an hour before them she was screaming [!] bloody murder (.) .\n'), ((599, (20, 24)), '*GMA:\tabout half an hour before them she was screaming [!] bloody murder (.) .\n'), ((599, (66, 72)), '*GMA:\tabout half an hour before them she was screaming [!] bloody murder (.) .\n'), ((599, (73, 76)), '*GMA:\tabout half an hour before them she was screaming [!] bloody murder (.) .\n'), ((605, (-1, 4)), '*GMA:\tgot ta move that bed around against the wall (.) .\n'), ((605, (13, 17)), '*GMA:\tgot ta move that bed around against the wall (.) .\n'), ((605, (46, 50)), '*GMA:\tgot ta move that bed around against the wall (.) .\n'), ((605, (51, 54)), '*GMA:\tgot ta move that bed around against the wall (.) .\n'), ((611, (-1, 4)), '*GMA:\thuh (.) ?\n'), ((611, (6, 9)), '*GMA:\thuh (.) ?\n'), ((611, (10, 13)), '*GMA:\thuh (.) ?\n'), ((614, (-1, 4)), '*GMA:\tyou were screaming (.) .\n'), ((614, (25, 28)), '*GMA:\tyou were screaming (.) .\n'), ((618, (74, 77)), "*GMA:\twell she didn't wake up when the fireworks <we(re)> [//] were those [/] those firecrackers went +...\n"), ((618, (84, 96)), "*GMA:\twell she didn't wake up when the fireworks <we(re)> [//] were those [/] those firecrackers went +...\n"), ((628, (15, 20)), '*CHI:\tone more piece of steak left [!] .\n'), ((628, (24, 29)), '*CHI:\tone more piece of steak left [!] .\n'), ((632, (11, 15)), '*MOT:\tgood girl (.) .\n'), ((632, (16, 19)), '*MOT:\tgood girl (.) .\n'), ((641, (16, 21)), '*MOT:\twipe your hands (.) on the napkin thanks .\n'), ((641, (40, 46)), '*MOT:\twipe your hands (.) on the napkin thanks .\n'), ((645, (9, 15)), '*CHI:\tno napkin !\n'), ((648, (-1, 4)), '*MOT:\tno ?\n'), ((652, (6, 9)), '*CHI:\tzzz .\n'), ((657, (6, 11)), "*MOT:\tdon't put [!] that in your mouth .\n"), ((657, (33, 38)), "*MOT:\tdon't put [!] that in your mouth .\n"), ((661, (10, 13)), '*CHI:\twhy [>] ?\n'), ((666, (6, 9)), '*GMA:\teat [<] your delicious pizza .\n'), ((666, (29, 34)), '*GMA:\teat [<] your delicious pizza .\n'), ((669, (6, 12)), '*GMA:\tyumyum (.) .\n'), ((669, (13, 16)), '*GMA:\tyumyum (.) .\n'), ((672, (-1, 4)), '*CHI:\tthis [!] is .\n'), ((672, (11, 14)), '*CHI:\tthis [!] is .\n'), ((675, (-1, 4)), '*GMA:\tdid you like that (.) ?\n'), ((675, (24, 27)), '*GMA:\tdid you like that (.) ?\n'), ((678, (-1, 4)), '*GMA:\tno ?\n'), ((681, (6, 9)), '*CHI:\tyes .\n'), ((684, (20, 25)), '*GMA:\thow about the pizza ?\n'), ((687, (-1, 4)), '*CHI:\tthis ?\n'), ((693, (-1, 4)), "*GMA:\tthis [!] one's the pizza .\n"), ((693, (25, 30)), "*GMA:\tthis [!] one's the pizza .\n"), ((696, (-1, 4)), '*CHI:\tI like it .\n'), ((699, (-1, 4)), '*GMA:\tlike it ?\n'), ((702, (6, 9)), '*CHI:\tyes .\n'), ((705, (-1, 4)), '*CHI:\tI call this pizza too .\n'), ((705, (18, 23)), '*CHI:\tI call this pizza too .\n'), ((708, (6, 9)), '*GMA:\tyep .\n'), ((711, (6, 9)), '*CHI:\tzzz .\n'), ((714, (-1, 4)), '*CHI:\tthis is kind of food .\n'), ((714, (14, 18)), '*CHI:\tthis is kind of food .\n'), ((714, (22, 26)), '*CHI:\tthis is kind of food .\n'), ((721, (6, 11)), '*CHI:\tpizza .\n'), ((724, (-1, 4)), "*GMA:\tthat's right .\n"), ((724, (6, 12)), "*GMA:\tthat's right .\n"), ((724, (13, 18)), "*GMA:\tthat's right .\n"), ((730, (6, 12)), "*CHI:\twhat's this (.) ?\n"), ((730, (18, 21)), "*CHI:\twhat's this (.) ?\n"), ((734, (6, 10)), '*CHI:\tyuck .\n'), ((737, (-1, 4)), '*CHI:\twho like it ?\n'), ((741, (-1, 4)), '*CHI:\twho likes this [!] pizza ?\n'), ((741, (21, 24)), '*CHI:\twho likes this [!] pizza ?\n'), ((741, (25, 30)), '*CHI:\twho likes this [!] pizza ?\n'), ((745, (-1, 4)), "*MOT:\tI'm going into town [?] .\n"), ((745, (21, 25)), "*MOT:\tI'm going into town [?] .\n"), ((745, (26, 29)), "*MOT:\tI'm going into town [?] .\n"), ((749, (16, 23)), "*CHI:\tMommy I'm stuffed .\n"), ((752, (6, 9)), '*CHI:\tzzz (.) .\n'), ((752, (10, 13)), '*CHI:\tzzz (.) .\n'), ((756, (-1, 4)), '*MOT:\tyou holding this ?\n'), ((765, (6, 12)), "*MOT:\tyou're silly (.) .\n"), ((768, (-1, 4)), '*CHI:\tyou eat all yours [!] !\n'), ((768, (18, 23)), '*CHI:\tyou eat all yours [!] !\n'), ((771, (-1, 4)), '*MOT:\tyeah ?\n'), ((771, (6, 10)), '*MOT:\tyeah ?\n'), ((775, (-1, 4)), '*CHI:\tmost of it .\n'), ((779, (-1, 4)), '*CHI:\tlook out .\n'), ((782, (-1, 4)), "*CHI:\tthere's something outside .\n"), ((789, (6, 12)), "*MOT:\tthat's yours that you didn't eat .\n"), ((789, (13, 18)), "*MOT:\tthat's yours that you didn't eat .\n"), ((797, (6, 11)), '*MOT:\tthink Allison through ?\n'), ((805, (-1, 4)), '*MOT:\tyou want dessert ?\n'), ((805, (15, 22)), '*MOT:\tyou want dessert ?\n'), ((809, (9, 12)), '*CHI:\tno (.) .\n'), ((812, (-1, 4)), '*CHI:\tgetting down .\n'), ((815, (-1, 4)), "*MOT:\tI don't she does .\n"), ((819, (-1, 4)), "*CHI:\tI don't want dessert .\n"), ((819, (19, 26)), "*CHI:\tI don't want dessert .\n"), ((822, (6, 10)), '*CHI:\tuhuh .\n'), ((825, (6, 9)), '*CHI:\thm: .\n'), ((828, (6, 10)), '*CHI:\tturn that [= tape recorder] back on again .\n'), ((828, (19, 23)), '*CHI:\tturn that [= tape recorder] back on again .\n'), ((831, (-1, 4)), '*MOT:\tit is [!] on !\n'), ((834, (-1, 4)), '*MOT:\tdo you want to hear yourself ?\n'), ((838, (6, 8)), '*CHI:\tmm .\n'), ((843, (-1, 4)), '*GFA:\thuh ?\n'), ((843, (6, 9)), '*GFA:\thuh ?\n'), ((846, (-1, 4)), '*GFA:\tdid I wake you up ?\n'), ((850, (6, 8)), '*CHI:\tmm .\n'), ((853, (6, 10)), '*GFA:\tyeah (.) ?\n'), ((853, (11, 14)), '*GFA:\tyeah (.) ?\n'), ((859, (-1, 4)), '*CHI:\tthat thing sounded like Allison and Grandma on there .\n'), ((859, (11, 16)), '*CHI:\tthat thing sounded like Allison and Grandma on there .\n'), ((864, (-1, 4)), '*CHI:\ton +...\n'), ((867, (6, 9)), '*GFA:\tzzz .\n'), ((876, (6, 10)), '*CHI:\tyeah [<] .\n'), ((876, (11, 14)), '*CHI:\tyeah [<] .\n'), ((885, (10, 14)), '*GFA:\t<it did> [<] ?\n'), ((885, (15, 18)), '*GFA:\t<it did> [<] ?\n'), ((888, (-1, 4)), '*GFA:\tand Mommy [!] too ?\n'), ((891, (6, 10)), '*CHI:\tyeah .\n'), ((894, (-1, 4)), "*GFA:\tand now Papa's on there now (.) .\n"), ((897, (-1, 4)), '*GFA:\thuh (.) ?\n'), ((897, (6, 9)), '*GFA:\thuh (.) ?\n'), ((897, (10, 13)), '*GFA:\thuh (.) ?\n'), ((901, (-1, 4)), '*CHI:\tis <Papa> [<] on there now ?\n'), ((901, (16, 19)), '*CHI:\tis <Papa> [<] on there now ?\n'), ((904, (6, 10)), "*GFA:\the's gonna be on there .\n"), ((904, (11, 16)), "*GFA:\the's gonna be on there .\n"), ((907, (6, 10)), '*GFA:\tyeah .\n'), ((910, (6, 9)), '*CHI:\tzzz .\n'), ((917, (-1, 4)), '*GFA:\thave Papa and Momma and Grandma and Allison .\n'), ((923, (-1, 4)), "*CHI:\tMom's not out [!] there !\n"), ((929, (-1, 4)), "*GFA:\tbut she's on the tape [!] (.) .\n"), ((929, (10, 15)), "*GFA:\tbut she's on the tape [!] (.) .\n"), ((929, (23, 27)), "*GFA:\tbut she's on the tape [!] (.) .\n"), ((932, (6, 9)), '*CHI:\tzzz .\n'), ((936, (-1, 4)), '*GFA:\tput some more milk .\n'), ((936, (20, 24)), '*GFA:\tput some more milk .\n'), ((939, (14, 20)), "*CHI:\tGrandpa that's sugar [?] in there ?\n"), ((939, (21, 26)), "*CHI:\tGrandpa that's sugar [?] in there ?\n"), ((939, (27, 30)), "*CHI:\tGrandpa that's sugar [?] in there ?\n"), ((942, (6, 10)), '*GFA:\tyeah .\n'), ((945, (6, 11)), '*GFA:\tgonna put some sugar on there too .\n'), ((945, (21, 26)), '*GFA:\tgonna put some sugar on there too .\n'), ((952, (6, 10)), '*GFA:\tyeah .\n'), ((955, (-1, 4)), '*GFA:\tI like sugar on there .\n'), ((955, (13, 18)), '*GFA:\tI like sugar on there .\n'), ((959, (-1, 4)), "*CHI:\t<I'll get [?] it> [<] .\n"), ((959, (24, 27)), "*CHI:\t<I'll get [?] it> [<] .\n"), ((962, (6, 12)), "*GFA:\tyou'll like it too .\n"), ((965, (6, 10)), "*GFA:\tit's delicious .\n"), ((968, (-1, 4)), "*GFA:\tand you'll [///] listen to that bang .\n"), ((968, (10, 16)), "*GFA:\tand you'll [///] listen to that bang .\n"), ((968, (38, 42)), "*GFA:\tand you'll [///] listen to that bang .\n"), ((971, (10, 15)), '*CHI:\txxx break that ?\n'), ((974, (-1, 4)), "*GFA:\tI don't [///] I wouldn't break [!] it .\n"), ((974, (37, 40)), "*GFA:\tI don't [///] I wouldn't break [!] it .\n"), ((977, (6, 10)), '*CHI:\toops .\n'), ((980, (-1, 4)), '*CHI:\twant that final [?] piece .\n'), ((980, (22, 25)), '*CHI:\twant that final [?] piece .\n'), ((980, (26, 31)), '*CHI:\twant that final [?] piece .\n'), ((983, (6, 10)), '*CHI:\toops .\n'), ((986, (6, 9)), '*GFA:\tzzz !\n'), ((991, (-1, 4)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((991, (24, 30)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((991, (37, 45)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((991, (50, 54)), '*GFA:\tyou sticking your finger in my crackers and milk for ?\n'), ((997, (6, 9)), '*CHI:\tzzz .\n'), ((1001, (-1, 4)), '*GFA:\thuh ?\n'), ((1001, (6, 9)), '*GFA:\thuh ?\n'), ((1004, (32, 35)), '*GFA:\twhat are you haha@q doing [>] ?\n'), ((1007, (6, 9)), '*CHI:\tzzz [>] .\n'), ((1007, (10, 13)), '*CHI:\tzzz [>] .\n'), ((1010, (6, 12)), '*GFA:\tlaughs .\n'), ((1013, (-1, 4)), '*GMA:\t<just leave [!] > [<] it !\n'), ((1013, (6, 11)), '*GMA:\t<just leave [!] > [<] it !\n'), ((1013, (24, 27)), '*GMA:\t<just leave [!] > [<] it !\n'), ((1020, (-1, 4)), '*GMA:\tyou done with the milk ?\n'), ((1020, (24, 28)), '*GMA:\tyou done with the milk ?\n'), ((1023, (-1, 4)), '*CHI:\tcan I have a bite ?\n'), ((1023, (19, 23)), '*CHI:\tcan I have a bite ?\n'), ((1026, (6, 10)), '*GFA:\tyeah .\n'), ((1030, (-1, 4)), '*GFA:\tthat taste good ?\n'), ((1030, (11, 16)), '*GFA:\tthat taste good ?\n'), ((1033, (-1, 4)), '*GFA:\thm: ?\n'), ((1033, (6, 9)), '*GFA:\thm: ?\n'), ((1036, (6, 9)), '*CHI:\tyes .\n'), ((1039, (-1, 4)), '*CHI:\tbut (.) &-um (.) oatmeal in it ?\n'), ((1039, (10, 13)), '*CHI:\tbut (.) &-um (.) oatmeal in it ?\n'), ((1039, (23, 30)), '*CHI:\tbut (.) &-um (.) oatmeal in it ?\n'), ((1045, (6, 10)), "*GFA:\tit's just crackers and milk .\n"), ((1045, (16, 24)), "*GFA:\tit's just crackers and milk .\n"), ((1045, (29, 33)), "*GFA:\tit's just crackers and milk .\n"), ((1048, (6, 23)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1048, (28, 33)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1048, (34, 37)), '*GFA:\t<saltine crackers and milk> [>] .\n'), ((1051, (-1, 4)), "*GMA:\t<Papa's going to throw [?] them out> [<] remember ?\n"), ((1056, (-1, 4)), '*CHI:\tcan I have another bite (.) ?\n'), ((1056, (25, 29)), '*CHI:\tcan I have another bite (.) ?\n'), ((1056, (30, 33)), '*CHI:\tcan I have another bite (.) ?\n'), ((1060, (-1, 4)), '*GFA:\tcan you have another bite ?\n'), ((1060, (27, 31)), '*GFA:\tcan you have another bite ?\n'), ((1064, (6, 8)), '*CHI:\tmm .\n'), ((1067, (-1, 4)), '*GFA:\tdid you eat supper already ?\n'), ((1070, (6, 9)), '*CHI:\tzzz .\n'), ((1074, (-1, 4)), '*GFA:\thuh ?\n'), ((1074, (6, 9)), '*GFA:\thuh ?\n'), ((1077, (-1, 4)), '*GFA:\tdid you eat supper already ?\n'), ((1081, (-1, 4)), "*CHI:\tI didn't eat all of it !\n"), ((1089, (-1, 4)), '*GFA:\tyou <sa(ved)> [//] you saved some room for my [!] supper (.) ?\n'), ((1089, (40, 44)), '*GFA:\tyou <sa(ved)> [//] you saved some room for my [!] supper (.) ?\n'), ((1089, (56, 62)), '*GFA:\tyou <sa(ved)> [//] you saved some room for my [!] supper (.) ?\n'), ((1089, (63, 66)), '*GFA:\tyou <sa(ved)> [//] you saved some room for my [!] supper (.) ?\n'), ((1094, (-1, 4)), '*GFA:\thuh ?\n'), ((1094, (6, 9)), '*GFA:\thuh ?\n'), ((1097, (6, 8)), '*CHI:\tmm .\n'), ((1100, (-1, 4)), '*GFA:\tyeah ?\n'), ((1100, (6, 10)), '*GFA:\tyeah ?\n'), ((1103, (18, 22)), "*GFA:\twell that's okay .\n"), ((1109, (-1, 4)), '*GMA:\tnothing .\n'), ((1109, (6, 13)), '*GMA:\tnothing .\n'), ((1113, (22, 27)), '*GFA:\t<can I have the sugar and the spoon> [<] back ?\n'), ((1113, (36, 42)), '*GFA:\t<can I have the sugar and the spoon> [<] back ?\n'), ((1118, (16, 21)), '*GFA:\tclean the spoon .\n'), ((1121, (-1, 4)), '*GMA:\tyou already put enough sugar on there (.) .\n'), ((1121, (29, 34)), '*GMA:\tyou already put enough sugar on there (.) .\n'), ((1126, (6, 9)), '*GFA:\tzzz .\n'), ((1130, (6, 9)), '*CHI:\txxx like those ?\n'), ((1133, (6, 9)), '*GMA:\tzzz .\n'), ((1140, (6, 10)), "*CHI:\tit's all gone [!] .\n"), ((1140, (20, 23)), "*CHI:\tit's all gone [!] .\n"), ((1143, (6, 9)), '*GFA:\tzzz .\n'), ((1146, (-1, 4)), "*GFA:\tI don't know .\n"), ((1149, (26, 31)), "*GFA:\tGrandma's trying to sugar me to death here .\n"), ((1149, (38, 43)), "*GFA:\tGrandma's trying to sugar me to death here .\n"), ((1155, (6, 10)), "*CHI:\tit's all gone !\n"), ((1161, (-1, 4)), "*CHI:\tit's by the jelly !\n"), ((1161, (18, 23)), "*CHI:\tit's by the jelly !\n"), ((1164, (6, 9)), '*GFA:\tyep .\n'), ((1167, (19, 27)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1167, (32, 36)), "*GFA:\td'you@d like crackers and milk ?\n"), ((1170, (6, 9)), '*GFA:\thm: .\n'), ((1174, (6, 12)), "*GFA:\tthat's good .\n"), ((1174, (13, 17)), "*GFA:\tthat's good .\n"), ((1177, (-1, 4)), '*GFA:\tthat makes me happy .\n'), ((1180, (35, 39)), '*MOT:\tshe says she likes them with milk .\n'), ((1188, (11, 15)), '*CHI:\tyour hand is dirty right here .\n'), ((1191, (-1, 4)), "*GFA:\tAllison my hand isn't dirty .\n"), ((1191, (17, 21)), "*GFA:\tAllison my hand isn't dirty .\n"), ((1191, (22, 27)), "*GFA:\tAllison my hand isn't dirty .\n"), ((1191, (28, 33)), "*GFA:\tAllison my hand isn't dirty .\n"), ((1194, (6, 12)), "*GFA:\tthat's ink on my hand and I couldn't wash it off .\n"), ((1194, (13, 16)), "*GFA:\tthat's ink on my hand and I couldn't wash it off .\n"), ((1194, (23, 27)), "*GFA:\tthat's ink on my hand and I couldn't wash it off .\n"), ((1202, (6, 10)), "*GFA:\tit's alright though .\n"), ((1205, (21, 24)), "*GFA:\tit'll wash off (.) .\n"), ((1209, (25, 31)), "*MOT:\tPoppy tell me when you're going to finish up so <we can go to the store> [>] .\n"), ((1209, (72, 78)), "*MOT:\tPoppy tell me when you're going to finish up so <we can go to the store> [>] .\n"), ((1209, (79, 82)), "*MOT:\tPoppy tell me when you're going to finish up so <we can go to the store> [>] .\n"), ((1217, (31, 36)), '*CHI:\t<can you give me another bite> [<] ?\n'), ((1217, (37, 40)), '*CHI:\t<can you give me another bite> [<] ?\n'), ((1220, (10, 14)), '*GFA:\t<do you> [>] +...\n'), ((1220, (15, 18)), '*GFA:\t<do you> [>] +...\n'), ((1224, (-1, 4)), '*GMA:\t<when Timmy [?]> [<] noticed the glove there [///] he said [///] go over and yelled at me the other night for not going over there .\n'), ((1224, (39, 44)), '*GMA:\t<when Timmy [?]> [<] noticed the glove there [///] he said [///] go over and yelled at me the other night for not going over there .\n'), ((1224, (106, 111)), '*GMA:\t<when Timmy [?]> [<] noticed the glove there [///] he said [///] go over and yelled at me the other night for not going over there .\n'), ((1231, (-1, 4)), '*MOT:\tI must have been at work .\n'), ((1231, (26, 30)), '*MOT:\tI must have been at work .\n'), ((1234, (10, 15)), '*GMA:\tthe night of your birthday .\n'), ((1237, (10, 15)), '*GMA:\tthe night he was making ham in the oven .\n'), ((1237, (30, 33)), '*GMA:\tthe night he was making ham in the oven .\n'), ((1237, (41, 45)), '*GMA:\tthe night he was making ham in the oven .\n'), ((1242, (-1, 4)), '*GMA:\twhen he called me a crazy lady and she started yelling at him .\n'), ((1242, (32, 36)), '*GMA:\twhen he called me a crazy lady and she started yelling at him .\n'), ((1252, (6, 9)), '*MOT:\tzzz .\n'), ((1257, (-1, 4)), "*GMA:\tI said I expect to see you over there in that pool tonight so I don't have_to explain to him (.) .\n"), ((1257, (52, 56)), "*GMA:\tI said I expect to see you over there in that pool tonight so I don't have_to explain to him (.) .\n"), ((1267, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1267, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1280, (-1, 4)), "*MOT:\tyou don't what [!] .\n"), ((1280, (21, 24)), "*MOT:\tyou don't what [!] .\n"), ((1283, (-1, 4)), '*MOT:\tyou heard Grandma .\n'), ((1287, (22, 27)), "*GFA:\twhat d'you@d do today ?\n"), ((1290, (18, 22)), '*CHI:\twent in the pool .\n'), ((1293, (-1, 4)), '*GFA:\t<you went in the pool [!]> [>] !\n'), ((1293, (23, 27)), '*GFA:\t<you went in the pool [!]> [>] !\n'), ((1293, (33, 36)), '*GFA:\t<you went in the pool [!]> [>] !\n'), ((1296, (-1, 4)), '*GMA:\t<who went in the pool with you> [<][>] ?\n'), ((1296, (23, 27)), '*GMA:\t<who went in the pool with you> [<][>] ?\n'), ((1296, (33, 37)), '*GMA:\t<who went in the pool with you> [<][>] ?\n'), ((1300, (16, 19)), '*CHI:\t<Grandma> [<] !\n'), ((1303, (-1, 4)), '*GFA:\t<Grandma went in too> [>] !\n'), ((1303, (23, 27)), '*GFA:\t<Grandma went in too> [>] !\n'), ((1303, (28, 31)), '*GFA:\t<Grandma went in too> [>] !\n'), ((1313, (-1, 4)), '*GFA:\tdid she fit in there (.) ?\n'), ((1316, (-1, 4)), '*GFA:\thuh ?\n'), ((1316, (6, 9)), '*GFA:\thuh ?\n'), ((1319, (-1, 4)), '*GFA:\tyeah ?\n'), ((1319, (6, 10)), '*GFA:\tyeah ?\n'), ((1322, (6, 9)), '*GFA:\tzzz .\n'), ((1325, (-1, 6)), '*GFA:\tshe was laughing at Papa in there last week and now [/] now she went in there !\n'), ((1325, (45, 49)), '*GFA:\tshe was laughing at Papa in there last week and now [/] now she went in there !\n'), ((1333, (-1, 4)), '*MOT:\twho else went in there (.) ?\n'), ((1337, (-1, 4)), '*MOT:\tdid I go in your pool ?\n'), ((1337, (23, 27)), '*MOT:\tdid I go in your pool ?\n'), ((1341, (6, 9)), '*CHI:\tyes .\n'), ((1344, (-1, 4)), '*CHI:\tyou were in it (be)fore .\n'), ((1349, (10, 16)), "*CHI:\tnow you're going go in the pool when you're done eating that [!] stuff .\n"), ((1349, (33, 37)), "*CHI:\tnow you're going go in the pool when you're done eating that [!] stuff .\n"), ((1349, (71, 76)), "*CHI:\tnow you're going go in the pool when you're done eating that [!] stuff .\n"), ((1356, (6, 12)), '*CHI:\twhe(n) [/] .\n'), ((1356, (13, 16)), '*CHI:\twhe(n) [/] .\n'), ((1358, (-1, 4)), "*GFA:\twhen I'm done eating this stuff we have_to go to the store .\n"), ((1358, (32, 37)), "*GFA:\twhen I'm done eating this stuff we have_to go to the store .\n"), ((1358, (59, 64)), "*GFA:\twhen I'm done eating this stuff we have_to go to the store .\n"), ((1365, (-1, 4)), '*GFA:\twe have_to get Mummy <a thing> [//] a belt for her car .\n'), ((1365, (30, 36)), '*GFA:\twe have_to get Mummy <a thing> [//] a belt for her car .\n'), ((1365, (44, 48)), '*GFA:\twe have_to get Mummy <a thing> [//] a belt for her car .\n'), ((1365, (57, 60)), '*GFA:\twe have_to get Mummy <a thing> [//] a belt for her car .\n'), ((1370, (6, 9)), '*GFA:\tzzz [>] .\n'), ((1370, (10, 13)), '*GFA:\tzzz [>] .\n'), ((1375, (9, 14)), '*CHI:\t<a belt> [<][>] ?\n'), ((1378, (19, 23)), '*GMA:\txxx [<] good yeah [>] .\n'), ((1378, (24, 27)), '*GMA:\txxx [<] good yeah [>] .\n'), ((1381, (9, 14)), '*CHI:\t<a belt> [<] for a car ?\n'), ((1381, (15, 18)), '*CHI:\t<a belt> [<] for a car ?\n'), ((1381, (25, 28)), '*CHI:\t<a belt> [<] for a car ?\n'), ((1384, (8, 11)), '*GFA:\ta fan belt .\n'), ((1384, (12, 16)), '*GFA:\ta fan belt .\n'), ((1387, (-1, 4)), '*GFA:\tyeah ?\n'), ((1387, (6, 10)), '*GFA:\tyeah ?\n'), ((1390, (7, 10)), '*CHI:\t<fan belt> [>] ?\n'), ((1390, (11, 16)), '*CHI:\t<fan belt> [>] ?\n'), ((1390, (17, 20)), '*CHI:\t<fan belt> [>] ?\n'), ((1393, (6, 10)), '*GMA:\tyeah [<] .\n'), ((1393, (11, 14)), '*GMA:\tyeah [<] .\n'), ((1396, (-1, 4)), "*GMA:\t<uhhuh her belt> [<] in her car's broken .\n"), ((1396, (17, 22)), "*GMA:\t<uhhuh her belt> [<] in her car's broken .\n"), ((1396, (23, 26)), "*GMA:\t<uhhuh her belt> [<] in her car's broken .\n"), ((1396, (34, 39)), "*GMA:\t<uhhuh her belt> [<] in her car's broken .\n"), ((1396, (40, 46)), "*GMA:\t<uhhuh her belt> [<] in her car's broken .\n"), ((1408, (-1, 4)), "*GMA:\tI don't know .\n"), ((1412, (-1, 4)), "*CHI:\tshe <won't> [/] won't be able to drive <the car now that it's> [>] .\n"), ((1412, (11, 16)), "*CHI:\tshe <won't> [/] won't be able to drive <the car now that it's> [>] .\n"), ((1412, (50, 53)), "*CHI:\tshe <won't> [/] won't be able to drive <the car now that it's> [>] .\n"), ((1412, (69, 72)), "*CHI:\tshe <won't> [/] won't be able to drive <the car now that it's> [>] .\n"), ((1417, (-1, 4)), "*GMA:\t<she won't be> [<] be able to drive it no not [/] not (un)til Papa fixes it .\n"), ((1417, (11, 16)), "*GMA:\t<she won't be> [<] be able to drive it no not [/] not (un)til Papa fixes it .\n"), ((1417, (17, 20)), "*GMA:\t<she won't be> [<] be able to drive it no not [/] not (un)til Papa fixes it .\n"), ((1417, (21, 24)), "*GMA:\t<she won't be> [<] be able to drive it no not [/] not (un)til Papa fixes it .\n"), ((1428, (-1, 4)), '*CHI:\tI [!] fix it .\n'), ((1431, (6, 10)), '*GMA:\tyeah .\n'), ((1434, (-1, 4)), '*GMA:\tyou been saying that all day long .\n'), ((1434, (31, 34)), '*GMA:\tyou been saying that all day long .\n'), ((1438, (-1, 4)), '*CHI:\tI fix it (.) .\n'), ((1441, (6, 9)), '*CHI:\tzzz .\n'), ((1446, (30, 33)), "*MOT:\tnow sit still in Papa's lap honey .\n"), ((1446, (34, 39)), "*MOT:\tnow sit still in Papa's lap honey .\n"), ((1452, (29, 32)), "*MOT:\twhy you sitting on his lap anyway <it's too hot [!]> [>] (.) .\n"), ((1457, (-1, 4)), '*GFA:\t<want a bite> [<] ?\n'), ((1457, (14, 19)), '*GFA:\t<want a bite> [<] ?\n'), ((1457, (20, 23)), '*GFA:\t<want a bite> [<] ?\n'), ((1460, (-1, 4)), '*MOT:\tto sit <on his lap> [>] .\n'), ((1460, (21, 25)), '*MOT:\tto sit <on his lap> [>] .\n'), ((1460, (26, 29)), '*MOT:\tto sit <on his lap> [>] .\n'), ((1464, (-1, 4)), "*GMA:\t<but she's> [<] [//] but he's not holding [///] she [//] <she eats> [>] .\n"), ((1464, (6, 10)), "*GMA:\t<but she's> [<] [//] but he's not holding [///] she [//] <she eats> [>] .\n"), ((1464, (74, 77)), "*GMA:\t<but she's> [<] [//] but he's not holding [///] she [//] <she eats> [>] .\n"), ((1467, (-1, 4)), "*GFA:\t<she's having her second [!]> [<] supper [!] .\n"), ((1467, (6, 12)), "*GFA:\t<she's having her second [!]> [<] supper [!] .\n"), ((1467, (31, 34)), "*GFA:\t<she's having her second [!]> [<] supper [!] .\n"), ((1467, (40, 46)), "*GFA:\t<she's having her second [!]> [<] supper [!] .\n"), ((1475, (-1, 4)), "*MOT:\tshe's going to get fat !\n"), ((1475, (6, 11)), "*MOT:\tshe's going to get fat !\n"), ((1475, (25, 28)), "*MOT:\tshe's going to get fat !\n"), ((1478, (-1, 4)), '*CHI:\t<too [?]> [>] !\n'), ((1478, (16, 19)), '*CHI:\t<too [?]> [>] !\n'), ((1481, (6, 12)), "*GMA:\tcourse [<] she's not three hundred pounds .\n"), ((1481, (41, 47)), "*GMA:\tcourse [<] she's not three hundred pounds .\n"), ((1486, (-1, 4)), "*GFA:\tsay I'm beautiful .\n"), ((1489, (-1, 4)), "*GFA:\tI'm not fat [!] .\n"), ((1489, (14, 17)), "*GFA:\tI'm not fat [!] .\n"), ((1489, (18, 21)), "*GFA:\tI'm not fat [!] .\n"), ((1495, (6, 9)), '*GMA:\tzzz .\n'), ((1499, (-1, 4)), '*MOT:\tyou think [!] <you are> [>] .\n'), ((1502, (6, 9)), '*GFA:\tzzz [<] .\n'), ((1502, (10, 13)), '*GFA:\tzzz [<] .\n'), ((1506, (6, 9)), "*CHI:\tyes I am [!] I'm [/] .\n"), ((1509, (-1, 4)), '*MOT:\twho says ?\n'), ((1513, (19, 22)), "*CHI:\tI'm eating a lot .\n"), ((1516, (17, 26)), "*MOT:\tnow that's fresh [>] .\n"), ((1519, (11, 14)), '*CHI:\t&-um [!] .\n'), ((1521, (-1, 4)), '*CHI:\tI ate that .\n'), ((1524, (-1, 4)), '*GMA:\there .\n'), ((1530, (-1, 4)), "*GFA:\tyou're a monkey .\n"), ((1530, (15, 21)), "*GFA:\tyou're a monkey .\n"), ((1534, (19, 22)), "*GMA:\twhat d'you@d eat for supper before (.) ?\n"), ((1534, (27, 33)), "*GMA:\twhat d'you@d eat for supper before (.) ?\n"), ((1534, (41, 44)), "*GMA:\twhat d'you@d eat for supper before (.) ?\n"), ((1537, (27, 30)), "*GMA:\twhat d'you@d already eat for supper ?\n"), ((1537, (35, 41)), "*GMA:\twhat d'you@d already eat for supper ?\n"), ((1540, (6, 11)), '*CHI:\tpizza .\n'), ((1543, (-1, 4)), '*GMA:\tand what else ?\n'), ((1546, (-1, 4)), '*CHI:\tcalzone .\n'), ((1546, (6, 13)), '*CHI:\tcalzone .\n'), ((1549, (-1, 4)), '*GMA:\tand what else ?\n'), ((1552, (6, 11)), '*CHI:\tsteak .\n'), ((1556, (-1, 4)), '*GMA:\ttell Papa .\n'), ((1556, (6, 10)), '*GMA:\ttell Papa .\n'), ((1559, (-1, 4)), '*CHI:\tI had [>] .\n'), ((1562, (6, 8)), '*GFA:\tmm [<] .\n'), ((1562, (9, 12)), '*GFA:\tmm [<] .\n'), ((1565, (6, 11)), '*CHI:\tsteak and pizza !\n'), ((1565, (16, 21)), '*CHI:\tsteak and pizza !\n'), ((1568, (6, 11)), '*GFA:\tsteak and pizza ?\n'), ((1568, (16, 21)), '*GFA:\tsteak and pizza ?\n'), ((1571, (-1, 4)), '*GMA:\tand calzone [>] .\n'), ((1571, (10, 17)), '*GMA:\tand calzone [>] .\n'), ((1571, (18, 21)), '*GMA:\tand calzone [>] .\n'), ((1574, (6, 13)), '*CHI:\tcalzone [<] .\n'), ((1574, (14, 17)), '*CHI:\tcalzone [<] .\n'), ((1578, (-1, 4)), '*GFA:\tand calzone !\n'), ((1578, (10, 17)), '*GFA:\tand calzone !\n'), ((1581, (-1, 4)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1581, (27, 35)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1581, (36, 42)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1581, (43, 46)), "*GMA:\tshe didn't like the <macaroni salad> [>] .\n"), ((1585, (-1, 4)), '*MOT:\t<did you like that calzone xxx> [<] ?\n'), ((1585, (25, 32)), '*MOT:\t<did you like that calzone xxx> [<] ?\n'), ((1585, (38, 41)), '*MOT:\t<did you like that calzone xxx> [<] ?\n'), ((1589, (6, 9)), '*GFA:\thm: !\n'), ((1592, (-1, 13)), "*MOT:\tthat's Canadian bacon .\n"), ((1592, (13, 27)), "*MOT:\tthat's Canadian bacon .\n"), ((1595, (6, 9)), '*CHI:\tzzz .\n'), ((1599, (6, 12)), "*GMA:\tthat's papa's .\n"), ((1599, (13, 19)), "*GMA:\tthat's papa's .\n"), ((1602, (10, 15)), '*GMA:\this mouth is bigger than yours .\n'), ((1602, (31, 36)), '*GMA:\this mouth is bigger than yours .\n'), ((1606, (6, 9)), '*GFA:\thm: .\n'), ((1610, (6, 9)), '*CHI:\tzzz .\n'), ((1614, (6, 9)), '*GFA:\tzzz .\n'), ((1618, (-1, 4)), "*GFA:\tI don't know about that (.) .\n"), ((1618, (30, 33)), "*GFA:\tI don't know about that (.) .\n"), ((1621, (9, 14)), '*GFA:\tmy mouth bigger than yours ?\n'), ((1621, (27, 32)), '*GFA:\tmy mouth bigger than yours ?\n'), ((1624, (-1, 4)), '*GFA:\tno ?\n'), ((1627, (6, 10)), '*GFA:\tokay (.) .\n'), ((1627, (11, 14)), '*GFA:\tokay (.) .\n'), ((1630, (-1, 4)), '*CHI:\tI swallowed .\n'), ((1633, (-1, 4)), '*GMA:\tyou swallowed it ?\n'), ((1639, (-1, 4)), "*GMA:\tthat's what you're supposed to do .\n"), ((1639, (18, 24)), "*GMA:\tthat's what you're supposed to do .\n"), ((1647, (15, 19)), '*GFA:\tone more bite then you got_to scram .\n'), ((1647, (36, 41)), '*GFA:\tone more bite then you got_to scram .\n'), ((1656, (-1, 4)), '*GMA:\tget down so Papa can finish <his supper> [>] .\n'), ((1656, (39, 46)), '*GMA:\tget down so Papa can finish <his supper> [>] .\n'), ((1656, (47, 50)), '*GMA:\tget down so Papa can finish <his supper> [>] .\n'), ((1662, (6, 10)), '*GFA:\tokay [<] ?\n'), ((1662, (11, 14)), '*GFA:\tokay [<] ?\n'), ((1665, (6, 9)), '*CHI:\thm: (.) .\n'), ((1665, (10, 13)), '*CHI:\thm: (.) .\n'), ((1668, (6, 10)), '*MOT:\tstay in front .\n'), ((1668, (14, 19)), '*MOT:\tstay in front .\n'), ((1674, (-1, 4)), '*GMA:\twhere ?\n')]
calculating accuracy and recall
correct labels:
set(['cheese', 'ham', 'macaroni salad', 'sugar', 'jelly', 'oatmeal', 'milk', 'celery', 'peanut butter and jelly', 'calzone', 'saltine crackers', 'crackers', 'steak', 'canadian bacon', 'pean(ut) butter', 'peanut butter', 'pizza'])
predicted labels:
set(['', "don't", 'move', 'bruise', '[!]', 'course', 'paper', '&-uh', 'thanks', 'oven', 'yep', 'yes', 'milk', 'death', 'ham', "he's", 'belt>', 'sugar', 'celery', 'wall', 'tape', 'did>', 'pean(ut) butter', 'town', 'good', 'food', 'dessert', '<no', 'gonna', 'break', 'lunch', 'bang', '[>]', 'fan', 'awoh', 'hands', 'front', 'lady', 'day', 'room', "we'll", 'mhm', 'pounds', 'cry', 'glove', 'bag', 'stuff', 'night', "won't", 'steak', "car's", 'bone', 'ears', 'right', '<bag', '<just', 'yeah', 'goose', 'home', 'girl', 'thing', 'uhuh', 'blue', 'bruise>', '(.)', 'fat', 'milk>', "there's", 'finger', 'scram', 'nope', 'zzz', 'calzone', "doctor's", 'broken', 'green car', 'stay', 'store', 'salad>', 'jelly', 'oatmeal', 'turn', 'yum', "isn't", 'smoke', 'wheels', 'think', 'peanut butter', 'cheese', 'hm:', 'color', 'have>', 'one', "he's>", 'spoon>', 'too>', 'smells', 'belt', "you're", 'monkey', 'bite>', "it's", 'bite', 'visit', 'taste', 'be>', 'stuffed', 'tell', 'today', 'good pizza', 'yuck', 'lot', "what's", 'xxx', 'huh', 'you>', 'dentist', 'uncle', 'rabbit', 'eat', 'play', 'kind', 'look', 'hour', 'lap>', 'mm', 'car', 'work', 'up', 'bed', 'dish>', 'dirty', 'crackers', 'piece', 'canadian bacon', 'yumyum', 'supper>', 'laughs', 'said>', 'pieces', 'honey', 'murder', '[?]', 'ink', 'sir', '[/]', 'doctor', '<but', "papa's", 'macaroni', 'fresh [>]', 'store>', 'test', 'pizza', 'week', 'pizza [!]', 'okay', "<she's", 'firecrackers', 'time', 'hand', 'whe(n)', 'mouth', 'blood', '<she', 'supper', 'nothing', '[<]', 'lap', 'pool', 'kid', 'thing>', '&a:h', 'napkin', 'lines', 'spoon', '<saltine crackers', "you'll", 'oops', 'teeth', "she's", 'paper>', 'yours', "that's"])
file:HSLLD/HV1/MT//allmt1.cha
precision: 0.0760869565217
recall: 0.823529411765
true positives:['calzone', 'canadian bacon', 'celery', 'cheese', 'crackers', 'ham', 'jelly', 'milk', 'oatmeal', 'pean(ut) butter', 'peanut butter', 'pizza', 'steak', 'sugar']
false positives: ['', '&-uh', '&a:h', '(.)', '<bag', '<but', '<just', '<no', '<saltine crackers', '<she', "<she's", '[!]', '[/]', '[<]', '[>]', '[?]', 'awoh', 'bag', 'bang', 'be>', 'bed', 'belt', 'belt>', 'bite', 'bite>', 'blood', 'blue', 'bone', 'break', 'broken', 'bruise', 'bruise>', 'car', "car's", 'color', 'course', 'cry', 'day', 'death', 'dentist', 'dessert', 'did>', 'dirty', 'dish>', 'doctor', "doctor's", "don't", 'ears', 'eat', 'fan', 'fat', 'finger', 'firecrackers', 'food', 'fresh [>]', 'front', 'girl', 'glove', 'gonna', 'good', 'good pizza', 'goose', 'green car', 'hand', 'hands', 'have>', "he's", "he's>", 'hm:', 'home', 'honey', 'hour', 'huh', 'ink', "isn't", "it's", 'kid', 'kind', 'lady', 'lap', 'lap>', 'laughs', 'lines', 'look', 'lot', 'lunch', 'macaroni', 'mhm', 'milk>', 'mm', 'monkey', 'mouth', 'move', 'murder', 'napkin', 'night', 'nope', 'nothing', 'okay', 'one', 'oops', 'oven', "papa's", 'paper', 'paper>', 'piece', 'pieces', 'pizza [!]', 'play', 'pool', 'pounds', 'rabbit', 'right', 'room', 'said>', 'salad>', 'scram', "she's", 'sir', 'smells', 'smoke', 'spoon', 'spoon>', 'stay', 'store', 'store>', 'stuff', 'stuffed', 'supper', 'supper>', 'tape', 'taste', 'teeth', 'tell', 'test', 'thanks', "that's", "there's", 'thing', 'thing>', 'think', 'time', 'today', 'too>', 'town', 'turn', 'uhuh', 'uncle', 'up', 'visit', 'wall', "we'll", 'week', "what's", 'whe(n)', 'wheels', "won't", 'work', 'xxx', 'yeah', 'yep', 'yes', "you'll", "you're", 'you>', 'yours', 'yuck', 'yum', 'yumyum', 'zzz']
false negatives: ['macaroni salad', 'peanut butter and jelly', 'saltine crackers']
# true pos: 14
# false pos: 170
# false neg: 3
HSLLD/HV1/MT//rilmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: oh that's enough cheese Chi .", '*BR2: Bro .', '*BR1: what ?', '*BR2: will you help me ?', '*BR1: what ?', "*BR2: &-um xxx bike I'm tryin(g) to get the tire off ?", '*BR2: &-um xxx that black bike ?', '*BR1: yeah .', '*BR2: wait .', '*MOT: did you have fun on your vacation Chi ?', '*CHI: yeah .', '*MOT: where did we go ?', '*MOT: huh ?', '*MOT: where did we go ?', '*CHI: college .', '*MOT: to where ?', '*CHI: college .', '*MOT: the cottage ?', '*MOT: <&=laughs > [>] .', '*CHI: <&=laughs > [<] .', '*MOT: the cottage ?', '*BR1: college .', '*CHI: college .', '*MOT: (..) is it hot ?', '*CHI: yeah .', '*CHI: this is stickin(g) together .', '*MOT: it is stickin(g) together ?', '*CHI: yeah .', "*BR1: Chi what's this ?", "*MOT: they're both xxx .", '*BR1: xxx .', '*BR1: what does it taste like ?', '*MOT: same as the other stuff tasted .', "*MOT: but it's good right Chi ?", '*CHI: mhm .', '*MOT: what did you do at the cottage ?', '*MOT: huh ?', '*CHI: I painted +...', '*MOT: yeah [>] ?', '*BR1: <&=laughs > [<] .', '*CHI: ow .', '*MOT: what else ?', '*CHI: and [/] (..) and [//] (..) hot !', '*MOT: blow on it Chi .', '*MOT: and what else did you do at the xxx ?', '*CHI: &-um I had cherries +...', '*MOT: yeah ?', '*CHI: and xxx [>] .', "*BR1: <what's she> [<] talking about ?", '*MOT: the cottage .', '*CHI: the game xxx .', '*CHI: &-uh yeah .', '*BR2: great stuff .', "*BR2: <you gotta be gettin(g)> [//] I'm tryin(g) ta get the tire off and I can't get it .", '*BR1: who shut off .', '*MOT: did you go swimmin(g) at the cottage ?', '*CHI: yep .', '*MOT: what <else did you do> [>] ?', '*BR1: <did you jump> [<] ?', '*BR1: did you jump in xxx ?', "*CHI: I can't sit on you ?", '*BR1: no you got_to &=laughs xxx give to you xxx eat it .', '*MOT: xxx your Mot .', '*CHI: huh ?', '*MOT: what d(id) the doctor do with the froggy ?', '*CHI: he (.) &-um Bro caught the [/] the fish [/] fishy ?', '*MOT: yeah ?', '*CHI: and Bro caught the &-um the birdie .', '*CHI: how come ?', '*MOT: mhm .', "*MOT: that's right you went after the frog that was on the xxx huh ?", '*CHI: yep .', '*CHI: xxx (.) had (be)cause he [>] +/.', '*BR1: how [<] &=laughs +...', '*CHI: (be)cause +/.', '*BR1: are these the same things ?', '*MOT: yeah .', '*BR1: like xxx [>] .', '*MOT: <go ahead> [<] Chi .', '*BR1: I <had first> [>] !', '*BR2: xxx [<] go first .', "*MOT: she's tryin(g) to tell me somethin(g) .", '*MOT: go ahead Chi .', '*CHI: &-um (.) then (.) +...', '*CHI: they did it after me .', '*MOT: yeah I hear xxx [>] .', '*BR1: <Chi> [<] want a mushroom ?', '*CHI: xxx my plate .', '*CHI: huh ?', "*CHI: <where's my> [/] where's my &-um (.) my roll ?", '*MOT: your what ?', '*CHI: look !', '*MOT: one of these ?', '*CHI: yeah .', '*MOT: meatball .', '*MOT: yeah .', '*BR1: can I have a piece of bread ?', '*BR1: (..) xxx on the bus .', '*MOT: did you fish at the cottage ?', '*CHI: yep .', '*CHI: (be)cause I watch the frog in the water xxx [>] .', '*BR1: <did you> [<] catch a fishy ?', '*CHI: yep .', '*BR1: you caught a lot of fishies right ?', '*CHI: want me xxx the big fishy you caught ?', "*BR1: I don't care .", "*CHI: it's a big big one .", '*BR1: I caught some xxx fish .', '*CHI: <Bro> [>] !', '*BR1: xxx [<] .', '*CHI: xxx [//] when we caught the big fish like this big ?', '*CHI: we caught\xe2\x86\x91 (.) okay ?', '*CHI: tomorrow I go do the +...', "*MOT: watch out for your milk Chi don't spill it .", '*BR1: xxx .', '*MOT: yeah .', "*CHI: I'm gonna eat good .", '*CHI: right ?', '*MOT: yup .', '*CHI: is this right ?', '*MOT: a little bit yeah .', '*CHI: 0 [=! strong exhale] .', "*BR1: Mom I'll be going to xxx okay ?", "*BR1: I'll be swimming until eight .", "*BR1: I'll be swimming until eight and I'll go eat xxx friends .", '*MOT: yeah alright .', '*BR1: yeah .', "*CHI: Bro it's a vegetable .", "*CHI: (..) don't put it right there this is a mushroom .", '*BR1: oh sorry !', "*CHI: how come you don't want this ?", '*BR1: Mom did the dryer dry all the clothes in there ?', "*MOT: I don't know .", '*MOT: why ?', '*BR1: well (.) is <it done> [>] ?', '*CHI: xxx [<] .', '*BR1: did you put it on ?', "*CHI: it [/] it's not xxx [>] .", "*MOT: <it's xxx> [<] .", '*BR1: I know .', '*CHI: xxx dry in a bit right ?', '*MOT: right .', '*CHI: I have_to get a drink now .', '*MOT: check the oven .', '*BR1: yeah Mot .', '*CHI: this (.) the sauce is xxx .', '*MOT: yeah I know .', '*BR1: the sauce is xxx .', "*CHI: that's why I have_to get a drink .", '*CHI: right ?', '*BR1: mhm .', '*CHI: Mom and that ?', '*MOT: huh ?', '*CHI: &-um (.) a xxx and a beep ?', '*MOT: yeah a little bit .', '*CHI: nuhhuh .', '*MOT: no .', '*CHI: do you mean it ?', "*CHI: where's a napkin ?", '*MOT: this is hot .', '*CHI: this is hot too .', '*CHI: ow !', '*MOT: you xxx jump for her milk you almost +...', '*BR1: yeah I know .', '*CHI: (..) eat those Bro .', '*BR1: hey !', '*CHI: (..) I took his .', '*BR1: I know [=! short laugh] .', '*BR1: when we were watching a movie xxx ?', "*BR2: she ate like a four year old she's hiccoughing@d and burping at the same time &=laughs !", '*BR1: it was so funny !', '*CHI: Mom .', '*CHI: I dove over and under I [% act=takes deep breath] +...', "*CHI: Mom <I> [//] maybe I don't need a bubble when I went in there .", "*MOT: yeah I know you didn't need a bubble .", '*MOT: is the towel she had still there ?', '*MOT: xxx hands off on .', "*BR1: <you won't> [>] +/.", '*BR2: xxx [<] on her left .', '*BR2: no .', "*BR1: Chi where's the towel ?", '*CHI: is it a brown one ?', '*MOT: xxx .', "*BR1: it's the brown one ?", '*MOT: yes [>] .', '*BR2: yeah [<] right over there .', '*BR1: xxx .', "*MOT: we'll give it to Chi .", '*BR2: who ?', '*BR1: &Sh Chi went to camp .', "*BR2: Mom I'll be down Mike's again okay ?", '*CHI: you have_to eat your supper !', '*MOT: did he eat it all ?', '*CHI: no .', "*CHI: he [/] he didn't +/.", '*BR1: he had just xxx .', "*MOT: it's soggy .", '*CHI: what is it ?', "*CHI: oh it's a mushroom !", '*MOT: you like mushrooms huh ?', '*CHI: it is a mushroom .', '*MOT: well then eat it .', '*CHI: mm .', '*CHI: yyy yyy .', '*CHI: (..) want some ?', '*BR1: no [>] .', '*CHI: xxx [<] .', '*MOT: &=laughs .', '*CHI: say yyy .', '*BR1: will you cut (th)em ?', "*MOT: they're not done yet .", '*BR1: are these done ?', '*MOT: are mine done ?', '*BR1: yeah .', '*MOT: almost .', "*BR1: oh you didn't put the dryer on .", '*MOT: are you sure ?', '*BR1: yes .', "*BR1: all the stuff's soaked .", '*MOT: <pick up> [//] pull out that big towel .', "*CHI: it's raining outside .", '*MOT: no .', "*CHI: <we have_to> [/] <we have_to> [//] no more supper I don't want eat a (.) one .", '*CHI: right ?', '*MOT: what ?', '*CHI: one ?', '*MOT: no .', '*CHI: sure ?', '*MOT: a lot more .', '*BR1: (..) what big towel ?', '*BR1: oh <I> [/] I got it .', '*CHI: one .', '*BR1: Mom how long does it take for this stuff to wash ?', '*BR1: I mean dry ?', "*MOT: it'll be dry before six thirty Bro .", '*CHI: one ?', '*CHI: (..) one ?', '*CHI: one more ?', '*MOT: no a few more .', "*BR1: I'm gonna put it on okay ?", '*MOT: (.) yeah .', '*CHI: one ?', '*CHI: (..) two ?', '*MOT: keep [>] that door shut .', '*BR1: <where should> [<] +/.', '*BR1: where should I put this ?', '*BR1: (..) where should I put this ?', '*MOT: right there .', '*BR1: xxx ?', '*MOT: what happened to that towel ?', '*MOT: get rid of the towel please ?', '*CHI: mm I done .', '*MOT: no .', '*CHI: one ?', '*CHI: Mom ?', '*CHI: all done ?', '*MOT: not yet .', '*CHI: 0 [=! whimpering cry] .', '*MOT: yyy be a big girl .', '*CHI: 0 [=! lets out loud whine] .', '*MOT: you wanna want to go see Uncle Bill after supper ?', '*CHI: no [>] .', '*MOT: maybe [<] ?', '*MOT: why not ?', '*CHI: because ow I got a headache and xxx I wanna lie down .', '*MOT: &=laughs no .', "*MOT: you're not goin(g) out unless you finish some more o(f) your supper .", '*CHI: one &=crying ?', '*MOT: five [>] .', '*CHI: one [<] Mot ?', '*CHI: Mom ?', '*MOT: five .', '*MOT: eat (th)em slow .', '*CHI: one (.) two .', '*CHI: (..) three .', "*MOT: no &=laughs that's two .", '*CHI: how (a)bout one ?', '*MOT: xxx .', '*CHI: 0 [=! whines and cries] .', '*MOT: three more .', '*CHI: one ?', '*CHI: this ?', '*MOT: three .', '*CHI: no [/] no [/] no [/] no &=crying !', '*MOT: yeah .', '*CHI: just one ?', "*MOT: that's two .", '*CHI: one .', '*CHI: (..) three .', '*CHI: (..) Mot ?', '*MOT: alright wipe your hands off .', '*CHI: xxx ?', '*MOT: no more .', '*CHI: &=whines one ?', '*MOT: yeah .', '*MOT: now wipe your hands off .', '*CHI: it hurts xxx more .', '*MOT: did you finish your milk ?', '*CHI: no .', '*MOT: (..) slow down .', '*CHI: (..) am I done ?', '*MOT: I guess so .', '*CHI: one more ?', '*MOT: yeah .', '*CHI: no .', '*CHI: no [>] .', '*MOT: <did you> [<] finish your meatball ?', '*CHI: no .', "*CHI: I don't want a meatball .", "*CHI: I'm done !", "*MOT: you're done ?", '*MOT: put shoes on .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//rilmt1.cha
HSLLD/HV1/MT//sarmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: xxx .', '*MOT: is the rice on ?', '*FAT: yeah [>] .', '*SIS: yeah [<] you want that one ?', '*CHI: this one <that middle one was for you> [>] .', '*MOT: <everybody has got clam chowder to start with> [<] ?', '*MOT: everybody has got spoons or something to eat with ?', '*FAT: yup .', "*SIS: <momma does not> [//] <this one's not [//] put that back> [>] .", '*MOT: <we &ha [//] any more saltine crackers over there> [<] ?', '*MOT: <this is my soup> [>] ?', '*CHI: <no we > [<] want this one .', "*MOT: I'll sit next to Sara .", '*MOT: Sis you gonna <sit right> [>] there ?', '*FAT: saltines [<] ?', '*SIS: mhm .', '*MOT: yeah saltines whatever they are <national right at the end in the black box there> [>] .', "*CHI: <mommy's sitting next to me too> [<] .", '*MOT: the kids have forks already too ?', '*FAT: no .', '*CHI: &=growls .', '*CHI: xxx .', '*CHI: mommy +/.', '*FAT: anybody want some crackers for their soup ?', '*SIS: yes .', "*CHI: yes [//] <no (.) I don't (.) xxx> [>] one .", "*MOT: <there's a fork for you Sara (.) fork for Heather> [<] .", "*MOT: you don't want crackers for your clam chowder ?", '*SIS: I do .', '*SIS: I said I would eat it +/.', '*MOT: oh .', '*MOT: what are you trying to do there hon ?', '*CHI: put that fork in there .', '*MOT: to what ?', '*CHI: put the fork in there .', '*MOT: put the fork inside the corn on the cob ?', "*SIS: I'm doing great !", "*MOT: I hate to say it I don't think the corn on the cob is done .", '*FAT: I think it is so .', '*MOT: alright .', "*FAT: it is it's just &-uh xxx .", '*MOT: what are we having to drink ?', '*MOT: <ice tea> [>] ?', '*FAT: <ice tea> [<] .', '*MOT: paper cups ?', '*MOT: you wanna zap the rolls real quick ?', '*MOT: out of the plastic bag .', '*CHI: let me eat this side .', "*MOT: we got a salad too <don't forget> [>] .", '*CHI: <me need butter on this> [<] !', '*FAT: yes you do need butter on that corn .', "*MOT: yeah here's the butter you (.) twirl [>] it over the top of the big cube of butter .", '*CHI: oh [<] .', "*MOT: dad'll show you how .", '*CHI: me ?', "*FAT: &-um I don't want your fingers all over it though .", '*FAT: there we go .', '*FAT: give it a little spin .', "*SIS: mine's already xxx .", '*MOT: Heather sit down me and you will share the butter in a minute (.) let Sara and Dad do the butter first [>] .', '*SIS: okay [<] .', '*FAT: roll it !', '*SIS: oh look_it !', '*SIS: someone ate that one already .', "*FAT: no some [//] this is fresher than (.) your grandmother's garden .", "*FAT: out of marmar's [: grandma's] garden .", '*CHI: hey dad me need do that watch [>] .', '*SIS: <why do you> [<] have_to <put your hair back> [>] ?', "*FAT: <no I don't> [<] think so .", "*MOT: (be)cause my hair's long .", '*FAT: what do you mean that ?', "*FAT: oh what you're not getting enough butter on your corn ?", '*CHI: unhunh .', '*FAT: lemme [: let me] see .', '*CHI: xxx .', '*FAT: here let me do it .', '*CHI: xxx .', '*FAT: there you go .', '*CHI: hey where are my crackers .', "*FAT: oh they're over there next to Heather .", '*MOT: want some more crackers ?', '*FAT: here .', '*CHI: mom +/.', '*MOT: xxx [>] some hot rolls ?', '*CHI: I was hanging them on a +/.', '*MOT: just take a cracker baby .', '*MOT: thanks .', '*CHI: oh .', "*CHI: what's in that salad ?", "*MOT: what's in the salad ?", "*MOT: cucumbers out of your grandmother's garden (.) tomatoes from the grocery store some lettuce from the grocery store pepper out of your grandmother's garden and (.) some carrots from the <grocery store> [>] .", '*CHI: <I had a> [<] +/.', '*MOT: a roll and butter ?', '*CHI: look at mine !', '*MOT: you gonna have a hot dog a hamburger a piece of steak what do you want to eat ?', '*SIS: I have steak .', '*CHI: <I have &-uh> [/] I have steak .', '*FAT: www .', '*CHI: xxx .', "*MOT: yes you are you're eating dinner .", '*FAT: www .', '*MOT: you do that over your bowl Sara .', '*MOT: your crackers you crunch (th)em over your bowl into your soup .', "*FAT: well I'll have a cracker .", '*MOT: take that off of the hook .', '*SIS: pass the crackers .', '*MOT: please +/.', '*CHI: I think I got enough .', "*CHI: (be)cause mine's warm .", '*MOT: (..) Heather please sit up at the table the right way .', '*SIS: huh (.) okay .', "*MOT: you're gonna end up wearing more dinner than you're eating .", '*MOT: good corn ?', '*SIS: mhm .', '*MOT: good corn Sara ?', '*CHI: mhm .', "*CHI: dad says it's fresh xxx .", '*MOT: you need to cut that meat up on the plate .', '*MOT: almost lost that plate !', "*CHI: mom there's a hole in here .", '*MOT: yeah you just poke that with your finger Sara .', '*CHI: oh xxx .', "*MOT: don't do anymore .", '*SIS: is Investigator sitting on the step ?', '*CHI: hey .', '*MOT: what was that Heather ?', '*SIS: is Investigator sitting on the steps ?', "*MOT: that doesn't matter just eat your dinner .", "*SIS: (re)member my bike's laying out there !", "*MOT: yeah Investigator's watching it don't worry .", "*MOT: you're gonna want A_one right Heather ?", '*SIS: mhm .', '*CHI: chop chop !', '*MOT: ketchup for Sara ?', '*CHI: xxx .', "*FAT: what'd you ask for ?", '*CHI: chop chop .', '*FAT: chop chop ?', "*FAT: what's that ketchup ?", '*CHI: yeah .', '*FAT: ketchup .', "*CHI: this one's so burned .", "*MOT: yeah it does look burned it's not burned though Sara it's just &-uh (.) something inside the cup (be)cause you can pick that right off see ?", "*MOT: it's not burned .", "*MOT: but you don't have_to eat it you can <take another one> [>] .", '*CHI: <no more Mom> [<] .', '*MOT: nope .', "*MOT: I'm gonna cut your steak up right now .", '*MOT: you gonna have steak <Sara hot dog> [>] or hamburger ?', '*CHI: <I want [//] you need> [<] butter on this .', '*MOT: you need butter on that ?', "*MOT: Dad'has got the butter .", '*SIS: only three more to go .', "*SIS: I'll take the little one (.) with the butter .", '*MOT: you wait and have something else besides corn please .', '*CHI: hey dad !', '*CHI: me can pick up that xxx .', '*CHI: wanna see ?', '*CHI: xxx .', '*CHI: xxx [>] .', '*MOT: <&=laughs > [<] .', '*FAT: what [>] ?', '*CHI: xxx [<] .', "*FAT: yes it's like magic .", '*CHI: mm .', '*FAT: do you like bread and butter ?', '*CHI: xxx stuck together .', "*FAT: <don't talk with your mouth full> [>] .", '*MOT: <she likes to stick it together> [<] .', "*MOT: she doesn't like the bread <and butter> [>] .", "*SIS: <Angela's not > [<] watching it .", "*MOT: don't you worry about it .", '*MOT: just sit down [=! small laugh] and eat .', "*MOT: nobody's gonna steal your bike .", "*SIS: <(be)cause it's> [>] laying on the steps .", '*FAT: xxx [<] .', "*MOT: it's laying down ?", '*SIS: mhm .', '*MOT: I had it standing up when I came in .', "*SIS: it's laying down now .", '*MOT: maybe I should bring the bike in you never know somebody might steal it .', '*FAT: xxx .', '*FAT: stay !', '*FAT: <just keep eating> [>] .', '*MOT: <move your clam chowder> [<] .', '*CHI: oh .', "*FAT: no it's standing right up over there it's fine .", '*MOT: she said it was laying on the steps .', "*MOT: it's standing up ?", '*MOT: what are you having a hot dog hamburger or steak ?', '*CHI: steak .', '*MOT: steak you sure ?', '*MOT: you wanna try a piece first\xe2\x86\x91 I know how you are .', '*MOT: when you finish the bread .', "*MOT: you taste it first I wanna make sure you're gonna [: going to] eat it .", '*MOT: you always play [///] [=! sigh of disgust] pouring out the A .', "*CHI: it's not what it always did .", '*MOT: you like these !', '*MOT: Sara these Salisbury steaks !', "*CHI: what's <Salisbury> [>] +/.", '*MOT: <you want> [<] Salisbury steak ?', "*CHI: what's Salisbury steak ?", '*MOT: <the &m> [//] the gravy and hamburgers like <&Mi> [//] &-uh Mimi makes .', "*FAT: you haven't taken a bite of your corn yet .", '*CHI: xxx [>] .', '*SIS: yessir [<] .', '*FAT: where ?', '*FAT: this is a bite .', '*CHI: me bite this little .', '*FAT: here put a little bit of pepper on it .', '*FAT: like pepper ?', '*CHI: yeah .', '*CHI: xxx that smells .', '*MOT: stop it .', '*CHI: stop it !', '*FAT: a little bit salt ?', '*FAT: very little .', "*MOT: she don't need salt and pepper dear .", '*CHI: 0 [=! cry of protest] !', '*MOT: you do need salt and pepper ?', '*CHI: mm !', '*CHI: Heather !', '*CHI: Mom !', '*CHI: xxx .', '*MOT: oh you want some salad too ?', '*CHI: xxx .', '*SIS: xxx .', "*MOT: here's the steak .", '*MOT: you done with your soup ?', "*MOT: you don't like clam chowder huh ?", "*MOT: you taste that Salisbury steak make sure it's still good ?", '*FAT: xxx .', "*FAT: <I heard> [//] I'm eatin(g) hamburger .", "*FAT: I already had two steaks it's fine .", '*MOT: fine ?', '*FAT: mhm .', '*FAT: tastes better than the hamburgers .', '*MOT: you want bacon bits on your salad Sara ?', '*SIS: I will not have bacon bits .', '*CHI: xxx I will .', '*CHI: where are those bacon bits ?', '*MOT: where are they ?', "*MOT: they're up on the counter I'll get (th)em .", "*CHI: we don't keep xxx up on the counter .", "*MOT: I told you I'd get them one minute please okay\xe2\x86\x91 let me dish out your salad .", '*CHI: xxx .', "*MOT: no I don't have any chick peas .", "*MOT: <I have some> [//] I don't have any chick peas tonight .", "*MOT: I have bacon bits (.) and croutons but you didn't like the croutons last time I had them .", '*CHI: <me xxx> [>] +/.', '*MOT: <would you> [<] like to try them again ?', "*MOT: you want Ken's Italian ?", '*MOT: creamy Italian or regular Italian ?', '*CHI: <creamy Italian> [>] .', '*SIS: <creamy Italian> [<] .', "*MOT: I didn't know you wanted a salad .", '*MOT: would you pass me the salt .', "*MOT: could I have little bite of something to eat and then I'll &-um +...", "*FAT: Heather throw down the bun Heather and I'll put some butter on it for you .", '*CHI: is this for me ?', '*MOT: please pass me the buns &=whispers ?', '*MOT: 0 [=! short laugh] .', '*FAT: what ?', '*SIS: yeah !', '*FAT: what are you saying ?', '*SIS: &=laughs .', '*SIS: it rolled right on my plate Mom !', '*MOT: &=laughs .', '*FAT: can I have the xxx dressing ?', '*MOT: &=laughs .', '*SIS: what did you say ?', '*MOT: &=laughs .', '*MOT: what Sara ?', '*SIS: what did he do ?', '*MOT: nothing Dad asked me for something and I found it amusing .', '*CHI: &-um &=laughs .', '*MOT: well he asked you for something he told you to throw the bun at him .', '*SIS: xxx .', '*FAT: unhunh .', "*FAT: only when I'm asking for it .", '*CHI: (..) eat the rest .', '*MOT: are you eating any of that steak Sara ?', '*CHI: eat this little .', '*MOT: is that the bite you took out of her corn ?', '*MOT: so what did Chi eat so far ?', '*FAT: a half a roll , a nibble of corn , a bite of salad , two scoops of clam chowder .', '*SIS: &-um (.) I ate a couple of bites of clam chowder all of my corn .', '*MOT: did you eat any of that steak yet ?', '*SIS: yeah mhm .', "*MOT: you ate almost a whole roll that's in your hand .", '*MOT: and you want some salad right ?', "*MOT: so &-uh (.) I guess you'll be able to <go outside and play> [>] .", '*CHI: <I wanna go> [<] .', '*FAT: finish that clam chowder you will .', "*MOT: you have_to some eat some more Sara or you're not going back outside and playing with your friends I told you that .", '*CHI: xxx .', '*FAT: can I have some bacon bits please ?', '*FAT: so did you have fun at the park today Sara ?', '*SIS: yes .', '*FAT: Sara ?', '*FAT: you have fun today at the park ?', '*CHI: xxx &-um you know what ?', '*FAT: what ?', '*CHI: <this was> [/] this [/] this was better this xxx button !', '*FAT: xxx what ?', '*CHI: this belly [?] button this xxx .', '*MOT: &=laughs .', '*CHI: yeah .', '*MOT: yeah ?', "*MOT: I don't see any buttons on the table .", '*SIS: xxx .', '*MOT: oh Heather I got up to get you a bowl for your (.) salad &=loudly .', '*CHI: can I have something to drink please can I have something to drink ?', "*MOT: no Sara you cannot because you haven't eaten anything yet .", '*CHI: yessir !', '*MOT: what some bites of salad ?', '*MOT: what <did she> [//] did she eat anything today ?', '*FAT: <two &-uh &s> [//] <two sandwiches> [>] at Kentucky Fried .', '*MOT: <&=laughs > [<] .', '*CHI: who said that ?', '*MOT: xxx .', '*MOT: &=laughs .', '*CHI: my xxx said it my xxx .', "*MOT: don't talk at the table &=laughs .", '*SIS: well I am xxx .', '*FAT: mhm xxx some chow eat some burgers .', '*FAT: that Salisbury steak there .', '*FAT: please .', '*CHI: xxx .', '*FAT: do you like it ?', '*FAT: do you like the Salisbury steak ?', '*CHI: okay .', "*FAT: I mean I'm pouring your drink but you [///] I'm gonna have_to hold off on your drink (be)cause I know what you do .", '*FAT: you drink the whole +/.', '*SIS: dad !', "*MOT: she's moving her salad right along there what do you want Heather ?", "*SIS: <I'll have potatoes and a xxx> [>] and cabbage !", "*FAT: <don't drink it all and not have any room left for dinner please> [<] .", '*SIS: xxx .', "*MOT: by the time I get to the salad it's all picked through !", "*MOT: that's it !", '*MOT: I want some too .', '*SIS: I know you want some too .', '*CHI: you can have some of mine Mom .', '*MOT: are you done with your clam chowder ?', '*MOT: xxx .', "*CHI: here's my xxx Mom .", '*CHI: oh I xxx .', "*MOT: that's alright .", '*SIS: let it sink there .', '*SIS: &=giggles .', '*MOT: oh .', '*CHI: oh .', '*MOT: <almost spilt> [//] xxx xxx one spilt their drink .', '*CHI: me xxx too +/.', '*SIS: xxx .', "*FAT: don't do it .", '*CHI: xxx .', '*MOT: you want bacon bits ?', '*SIS: yes .', '*MOT: you want dressing ?', '*SIS: is that our favorite ?', "*FAT: that's enough of that .", '*FAT: <eat some> [/] eat some +/.', '*MOT: yeah this is your favorite .', '*MOT: Italian dressing you like it .', '*MOT: at least you always tell me you do .', '*CHI: 0 [=! accelerated eating noises] .', "*MOT: hey don't be like that .", '*CHI: <0 [=! eating noises]> [>] .', '*SIS: pepper [<] ?', "*MOT: xxx it's surprising you sat down this long Sara and xxx .", '*MOT: bacon bits .', '*CHI: hey xxx [>] .', "*SIS: xxx [<] it's bacon .", '*CHI: xxx .', "*SIS: Mom it's bacon .", '*FAT: mhm .', '*CHI: <<I did this one> [>]> [//] <I did> [/] I did this one .', '*SIS: xxx [<][>] .', '*MOT: mhm [<] .', "*SIS: <I> [//] Mom what's <that thing right there> [>] ?", '*FAT: <you gotta eat more than that> [<] .', "*SIS: what's that ?", '*MOT: never mind .', '*CHI: xxx .', '*CHI: I know .', "*MOT: it's the light blinking just leave it alone .", "*FAT: it's just Investigator's tape recorder .", "*FAT: batteries are going dead it's just showing you that .", '*SIS: xxx .', "*FAT: (...) I'll have another piece of corn .", '*MOT: which piece would you like ?', '*FAT: that one .', '*MOT: looks good to me would you like the butter also ?', '*FAT: please .', '*CHI: that almost melting !', "*FAT: help me I'm melt(ing) [=! high quavering voice] who says that ?", '*CHI: me did !', "*FAT: no help me I'm melting what movie ?", "*FAT: remember the wicked witch help me I'm melting [=! quivery voice] ?", "*FAT: Dorothy I'm going to get you and your little dog too [=! high quivery voice] .", '*SIS: yeah .', '*SIS: the wicked witch !', '*FAT: yeah !', '*FAT: from the Wizard of Oz !', '*CHI: yeah .', '*CHI: I just watched it .', '*FAT: you what ?', '*MOT: she just watched it .', '*FAT: you did\xe2\x86\x91 when ?', '*CHI: at movies xxx you butthead@f !', '*FAT: <&=laughs > [>] .', '*CHI: <&=laughs > [<] .', "*FAT: don't call me a butthead@f .", '*CHI: me can too +/.', "*MOT: that's not nice to call dad .", '*MOT: sit up and eat Sara .', "*CHI: I'm sick .", '*SIS: xxx .', "*MOT: you're not sick .", '*MOT: now come on you do this every night .', "*CHI: I'm xxx +/.", "*MOT: you're doing so good just sit up and finish .", '*MOT: at least sit with us while everybody else finishes how you doing Heather almost done ?', '*FAT: you feel sick honey ?', '*CHI: 0 [=! makes crying noise] .', '*FAT: do you ?', '*CHI: 0 [=! continues whining] .', "*FAT: (be)cause if you're sick I'm sure we'll put you to bed when you're done eating .", "*MOT: don't start crying [=! intense near whisper] .", '*FAT: come on !', '*FAT: sit up please .', '*CHI: xxx .', '*FAT: nuhhuh .', '*MOT: fine just there sit hon okay\xe2\x86\x91 just let us finish eating .', '*SIS: &=burps .', "*FAT: here's your drink .", '*SIS: <&=laughs > [>] .', '*CHI: <&=whining > [<] .', '*MOT: what do you say ?', '*SIS: excuse me xxx .', '*MOT: xxx table &=whispering .', "*FAT: don't spill it xxx .", "*MOT: what's this your used up corn cob ?", '*SIS: no this is my used up corn cob .', '*CHI: that mine !', '*FAT: mine .', "*MOT: hey you didn't want it Sara dad's taking over now .", '*FAT: nuhhuh .', '*CHI: okay .', "*MOT: she doesn't care .", "*FAT: this wasn't her's anyway .", "*FAT: she took her's over on the counter .", '*CHI: &-um .', '*MOT: oh .', '*MOT: my corn cob .', '*MOT: Heather you want another piece of corn now still ?', '*MOT: no ?', "*MOT: you've eaten enough ?", '*MOT: see\xe2\x86\x91 it was better you ate the salad .', '*MOT: are you gonna eat this last tomato ?', '*CHI: mom me xxx table .', "*MOT: no don't play under the table Sara .", '*FAT: what are you going to do with xxx .', '*CHI: me xxx under the table .', "*MOT: I don't know .", '*SIS: xxx table .', '*FAT: you can xxx .', '*CHI: under the +...', "*MOT: what's under the table ?", '*CHI: me just burp under the table .', '*SIS: xxx .', '*MOT: oh well you say excuse me even if you burp under a table .', '*MOT: what do you say ?', '*CHI: excuse me .', '*SIS: xxx .', '*MOT: yep .', '*CHI: xxx under the table .', '*FAT: nuhhuh .', '*SIS: xxx .', '*CHI: xxx .', '*MOT: xxx xxx [=! speaking in low voice] outside .', "*MOT: please go sit back at the table til everybody's done eating Sara !", '*MOT: now [=! harsh yell] !', "*MOT: I'm gonna drop you on the floor that's it .", "*SIS: I'm done .", '*CHI: xxx .', '*FAT: nuhhuh .', '*MOT: did she already have a second drink ?', '*FAT: no Heather only had a very little .', '*MOT: close that door Sara .', '*CHI: &=cries .', '*SIS: can I go out Mom ?', '*FAT: here +/.', "*MOT: I guess so you're done eating after this drink go on out .", "*MOT: okay tralala everything's done ."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//sarmt1.cha
HSLLD/HV1/MT//joymt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CLI: xxx how nice it looks .', '*CHI: Cli do you like camping ?', '*CLI: not [>] really (.) to be honest .', '*CLI: to be perfectly honest with you (.) no .', '*SIS: I miss home sometimes .', '*MOT: do you ?', "*CLI: already she's missing home .", '*CLI: look out !', "*MOT: &aw &=laughs I think you're tired Sis .", '*MOT: Krystal woke you up this mornin(g) ?', '*CLI: oh really ?', '*CLI: xxx get up nice and early\xe2\x86\x91 you get up early anyway .', '*MOT: she said Krystal woke her up though .', '*CLI: you probably kept <her awake last night> [>] .', '*MOT: <it must have been real [!] early> [<] !', '*MOT: did you go to bed late ?', '*SIS: yeah but Paula said to sleep as late you want !', '*MOT: &=laughs .', '*MOT: hm: [<] .', '*CLI: xxx probably gets up (.) real early .', "*CHI: &-uh (.) it (.) what's right there\xe2\x86\x91 I (.) keep on feeling something right there .", '*MOT: xxx .', "*CLI: don't feel anything .", '*CLI: leave your hands off your face .', '*CHI: why [>] ?', '*CLI: <you wanna get> [<] (.) you wanna get poison ivy in the stomach ?', "*MOT: I didn't get any of this yummy squash yet .", '*CLI: let it get cool .', '*SIS: may I please have some xxx ?', '*SIS: more .', '*SIS: more [>] .', '*CHI: <me too> [<] .', '*SIS: I need (.) rice .', '*SIS: please .', '*CLI: you <have some> [>] .', '*CHI: <can I have> [<] some too ?', '*CLI: push your plate over here .', '*MOT: Chi push your plate over a little .', '*MOT: okay xxx .', '*CLI: saw my buddy David xxx .', '*MOT: oh really ?', '*CLI: yup .', '*CHI: you have more <rice too Sis> [>] .', '*CLI: xxx [<] .', '*CHI: Mommy .', '*MOT: what ?', '*MOT: hm: ?', '*CLI: xxx [<] .', "*CLI: he's going down in a couple o(f) weeks .", "*CHI: that's enough [>] .", "*CLI: <xxx [<]> [//] maybe we'll come down +/.", "*CHI: that's enough !", "*CHI: that's enough Mom !", '*CHI: no .', '*CHI: 0 [=! grunts in frustration] .', '*CLI: get that for Chi .', "*MOT: <she's gettin(g) it> [>] for Chi .", '*SIS: <I am> [<] .', '*CLI: alright .', '*CHI: <no I> [/] (.) I can get it myself [=! whines and cries] .', '*MOT: alright let her get a scoop by herself .', '*SIS: well excuse me !', '*CLI: is she trying to be a big girl now ?', '*MOT: yeah .', '*MOT: she likes to do things on her own .', '*SIS: xxx .', '*CHI: no (.) some more .', '*CLI: see ?', "*CLI: you couldn't get it .", '*CLI: xxx goin(g) now .', '*CLI: comin(g) to a head !', '*MOT: 0 [=! laughs quietly] .', '*CLI: xxx .', '*MOT: &=giggles .', '*CLI: xxx spend about two hundred bucks .', '*MOT: &=giggles .', '*CLI: because camping is [!] cheaper you know .', '*CLI: well for two hundred bucks you stay in a hotel room for four nights you know what I mean ?', '*CLI: they ship these things here from xxx .', "*CLI: there's a definite argument there .", '*CLI: the shit you spend every year to be able to camp +...', '*MOT: watch your mouth please .', "*CHI: uhoh keep your mouth (.) closed when you're eatin(g) .", '*CLI: yep .', '*MOT: right right that too .', '*CHI: &=sneezes .', '*MOT: bless you .', '*CHI: can I have <more food> [>] ?', '*CLI: <no more napkins> [<] .', "*CLI: you're the only one with a nap [///] oh xxx xxx [>] +...", '*MOT: <yeah I took out> [<] napkins for everybody .', '*MOT: xxx .', "*MOT: so what's the first [!] thing you're gonna do when you get up to Hermit Island ?", '*CLI: unpack (.) set their tent up (.) spend the day +/.', "*MOT: I'm asking the children !", '*CLI: xxx .', '*CLI: oh oh +/.', '*MOT: just because you hate camping .', "*MOT: they're gonna have a good time .", '*MOT: right Chi ?', "*CLI: no I know they're gonna have an excellent time .", "*SIS: Sis what's the first thing you [!] wanna do ?", '*SIS: look at my tent .', '*MOT: mm !', '*SIS: see my tent .', '*CHI: me too !', '*MOT: yeah .', '*MOT: crawl in it and set up your sleeping bag and +/.', '*SIS: Mama !', '*MOT: what ?', '*SIS: now it hurts right here .', '*SIS: in the middle of my two teeth .', '*MOT: you might have somethin(g) stuck in there .', '*MOT: we can floss it out (.) after dinner .', '*CLI: so did <you get my xxx> [>] ?', '*CHI: xxx [<] .', '*MOT: I dropped it off like you asked me to .', "*CLI: I thought you told me you'd get [!] it .", '*MOT: no I need the car to get it .', '*CLI: xxx .', '*CHI: I need more (.) rice xxx .', '*CLI: like that rice huh ?', '*MOT: I cooked that especially for her .', '*MOT: she saw that I was cooking brown rice and then +...', '*MOT: well I promised her last time that I would cook white [!] rice the next time .', "*MOT: Chi what's the first thing you +...", '*CHI: &-um (.) look at my tent (.) and crawl in it and set my sleeping bag up .', '*CLI: do you want some ?', '*MOT: no .', "*CLI: you <don't> [>] ?", '*CHI: <same as> [<] Mom .', "*CLI: do you think it's xxx ?", "*CHI: <I want> [/] <I want the same as> [//] I'm doing the same as Sis .", '*MOT: oh .', '*MOT: oh xxx .', '*MOT: want this ?', '*CLI: hm: ?', '*CLI: excuse me !', '*CHI: can I have a little of that please ?', '*CLI: xxx .', '*MOT: you know what the first thing I would do ?', '*CHI: what ?', '*MOT: I would want to walk down to the ocean and look around .', "*CHI: you're going to come down my camp site and you can could come down with xxx .", '*MOT: what camp site are you gonna be on ?', "*CHI: I don't know .", '*SIS: &-um .', '*MOT: do you know ?', "*SIS: I know it's one number &c circle ?", '*SIS: (be)cause Paula told me and she knows <(be)cause> [>] +/.', "*MOT: oh [<] yeah that's the name [>] of the road (.) circle .", '*SIS: (be)cause &-um (.) her dad (.) got it .', '*SIS: from my dad .', '*MOT: yeah .', '*CLI: 0 [=! clears throat] .', "*CHI: (..) I don't want the rest .", "*CHI: I'm still having dessert ?", "*MOT: well eat your meat honey you haven't dipped it in your (.) steak sauce .", '*CHI: uhhuh .', '*MOT: <oh you did> [>] ?', '*CLI: <well you still got> [<] to eat .', '*CHI: see ?', '*CLI: xxx we have for <dessert xxx> [>] .', '*MOT: <one piece> [<] .', '*MOT: mhm .', '*CLI: what ?', '*MOT: apple pie .', '*CLI: oh .', '*CLI: with that crummy stuff ?', '*MOT: yeah .', '*MOT: &=chuckles crummy stuff .', '*CLI: can we eat the other one there ?', '*CLI: the cherry one ?', '*MOT: no I told you what happened .', '*SIS: what ?', '*CLI: oh that was the one it happened to ?', '*SIS: what ?', '*CHI: what happened to it ?', '*MOT: I wasted it .', '*CHI: you wasted it .', '*CLI: I was the only <one that> [>] got_to try it out .', '*MOT: <I did> [<] .', "*CHI: I'll eat (..) one bite two bites three bite .", '*CHI: I will eat three bites .', "*MOT: right , (be)cause there's three left right ?", '*MOT: xxx [>] .', '*CHI: xxx [<] .', '*MOT: is this the one that you bought ?', '*CLI: xxx .', '*CHI: more milk .', '*CLI: why ?', '*MOT: was it cooked a little more ?', "*MOT: <I> [/] I <think it's thinner> [>] then .", '*CHI: <more steak> [<] .', "*CLI: they're all cooked xxx [>] .", '*CHI: <more milk> [<] !', '*MOT: oh .', '*CHI: more milk please .', '*MOT: good manners Chi .', '*SIS: <please may I> [/] (.) please may I be excused ?', '*MOT: all finished ?', '*SIS: I am .', "*SIS: you can call me when dessert's ready okay ?", '*MOT: okay .', "*CHI: <when everything> [//] when &-um everybody's things is gone &-um then dessert will be &c &-um served right ?", '*MOT: mhm .', "*SIS: Mom xxx after dinner &-um (.) you can read this <to me> [/] (.) to me and Chi okay so when you're (.) done can you xxx [>] .", '*MOT: <okay that new book we bought> [<] ?', '*CHI: Sis I know the name of it ?', '*SIS: what ?', '*CHI: peekaboo .', '*SIS: nuhhuh !', '*CHI: uhhuh .', '*CHI: <right Mummy> [>] ?', '*SIS: xxx [<] .', "*MOT: no (.) Chi it's &-uh +...", '*MOT: yoohoo little rabbit .', "*MOT: it's a peekaboo book !", '*MOT: but <the name of it> [/] (.) the name of it is yoohoo little rabbit .', '*CLI: yoohoo [!] rabbit !', '*CLI: yoohoo tootaloo@wp !', '*CLI: xxx !', '*CHI: &=grunts .', '*MOT: 0 [=! laughs quietly] .', '*CHI: xxx .', '*CHI: <this is> [/] this is a meat+loaf !', "*MOT: still isn't cooked enough .", '*MOT: I like my summer squash mushy .', "*CLI: not me I think that's perfect .", '*MOT: mm .', '*CLI: I like these pieces here .', '*MOT: yeah me too .', '*MOT: seedless ones ?', '*CLI: of course .', "*CHI: here's a seedless one over here .", "*CHI: it's a lot of seeds o(f) seeds in it .", '*CHI: xxx [>] .', '*MOT: <no I like> [<] the ones without seeds Chi .', '*MOT: seedless !', '*MOT: see ?', '*CLI: xxx .', '*CLI: mm .', "*CHI: Cliff here's a big one over (.) here .", '*CHI: xxx [>] .', '*CLI: <you want it> [<] ?', '*CLI: want me to get it for you ?', '*CHI: no for you !', '*MOT: you wanna try a piece of squash Chi ?', '*CHI: yeah .', '*CLI: wicked good .', '*CHI: a little piece !', '*CLI: this is a good batch [>] xxx .', '*MOT: okay [<] .', "*CLI: it's got that rich (.) taste xxx .", '*MOT: mm it was very [!] good very it looked good and <it was fresh> [>] .', '*CLI: <very fresh> [<] .', '*CLI: almost <said cut this one back> [>] .', '*MOT: <you want me to cut it in half> [<] ?', '*CHI: yucky !', '*MOT: let me cut it in half .', "*CHI: it's yucky [>] !", "*MOT: <it's still> [<] very hot too .", '*MOT: there .', '*MOT: now try a bite .', "*MOT: take a real bite don't just stick it on your lips .", '*CHI: yucky !', '*MOT: are you kiddin(g) me ?', '*MOT: I love [!] squash !', '*CHI: mm !', '*MOT: is it good now ?', "*CHI: no it's yucky !", '*MOT: &=laughs .', '*MOT: such a good girl though .', '*MOT: look at her trying it !', '*CLI: I know .', "*CLI: because she loves food that's why .", '*MOT: yeah .', "*CLI: she noticed you get older you know (.) you get the change in taste different foods that sometimes you thought wasn't good .", "*CLI: it changes and it's really [!] good !", "*CLI: when I was a &l little kid I didn't like potatoes now I love [!] potatoes .", "*MOT: you didn't like potatoes ?", '*CLI: I hated potatoes !', '*MOT: wow !', '*CLI: mashed (.) potatoes baked [!] potatoes baked [!] especially really hated those .', "*MOT: oh wow I didn't like carrots and now I love [!] carrots .", '*CHI: <Sis> [//] when Sis was a baby (.) &-um she picked up one carrot then the other carrot (be)cause she liked carrots (.) when she was a baby .', '*MOT: mm .', "*CHI: didn't she Mom ?", '*MOT: yeah .', '*CLI: the most important thing <though about your eating> [>] +/.', '*CHI: <can I be> [<] excused ?', '*CLI: is to <keep your mouth> [>] closed .', '*CHI: <Mom> [<] ?', '*MOT: mm .', '*CHI: <can I be excused> [>] ?', '*MOT: <how was the meat+loaf> [<] ?', "*CHI: it's not [!] meat+loaf .", "*MOT: we didn't have meat+loaf again ?", '*CHI: no .', '*MOT: what did we have ?', '*CHI: steak !', '*CHI: dessert for me ?', '*MOT: yeah .', '*CHI: <when are> [/] when are you gonna do that ?', '*MOT: I just did .', '*CHI: no when are you gonna call me ?', '*MOT: yes !', "*CHI: I didn't hear it !", '*MOT: yeah &=laughs !', '*CLI: the whole conversation ?', '*MOT: yes .', "*CLI: <you've been> [>] taping us ?", "*CHI: <I didn't> [<] +/.", '*CLI: oh my God did I say anything incriminating ?', '*MOT: yeah you were swearing +/.', '*CLI: <I swore> [>] !', '*MOT: <I tried to get> [<] you not to do that .', '*CLI: Chi never hears me though .', '*MOT: &=laughs .', '*CLI: I <usually never talk like that> [>] !', '*MOT: <&=laughing > [<][>] .', '*CHI: <<can I> [/] can I see> [<] +...', '*CHI: can I see if he did that ?', '*MOT: we need a video camera not a tape recorder .', '*CLI: I know it .', '*CLI: those facial expressions are priceless .', '*CHI: do it again .', "*CLI: didn't catch those +/."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//joymt1.cha
HSLLD/HV1/MT//melmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*GRM: they haven't come down yet ?", '*CHI: nope .', '*GRM: they should be coming down soon .', '*GRF: I was surprised to see you xxx .', '*GRM: xxx .', '*MOT: yesterday [>] .', '*CHI: yeah [<] !', '*MOT: so you had no nap yesterday [>] .', '*CHI: xxx [<] .', '*CHI: xxx .', '*AUN: yeah but she fell asleep .', '*CHI: no .', "*MOT: I'm eating .", '*CHI: okay .', '*GRF: look at this .', '*GRF: (.) nice turkey .', '*GRM: did you have some meat ?', '*AUN: xxx .', '*CHI: no !', '*GRM: no ?', '*GRM: oh .', '*GRM: (..) xxx put that tape recorder xxx .', '*MOT: I guess so huh ?', '*CHI: xxx .', '*MOT: yeah we have_to give it back to her .', '*CHI: today ?', "*MOT: &-um no I think the man's gonna come this week to come and get it ?", '*GRF: gonna come this week for it .', "*MOT: he's gonna come this week and get it .", '*MOT: no .', '*CHI: xxx .', '*MOT: yeah we have_to wait for suppertime .', "*CHI: (.) it's all over ?", '*CHI: we have_to (.) xxx I think we should get some gum huh ?', '*MOT: xxx to the store after lunch .', '*CHI: can Richie come ?', "*MOT: <&-um I don't know what Auntie Mary Anne's going to do> [>] .", '*AUN: xxx [<] for you .', '*MOT: Auntie Mary Anne has to get ready for work .', '*GRM: xxx .', '*MOT: you should pick her up .', '*GRM: tell Uncle to talk to you because the +/.', '*UNC: xxx record you .', '*GRM: xxx right there for (.) they need it for school .', '*UNC: oh you need it for school ?', '*GRF: xxx .', '*GRM: well tell him to talk to you .', '*UNC: I always talk to her .', "*UNC: she's my honey .", '*CHI: &=laughs .', '*UNC: you gonna sing ?', '*CHI: 0 [=! loud outburst] .', '*UNC: come on easy .', "*MOT: she wasn't supposed to know this was on .", '*UNC: sit down !', '*UNC: hey !', '*GRF: &=laughs .', '*UNC: sit down .', '*CHI: (..) bad boy .', '*UNC: who me ?', '*CHI: <yeah I> [>] +/.', "*UNC: <I> [<] [/] I'm not a bad boy [>] .", '*CHI: <Mom> [<] I want some of this xxx .', '*MOT: you want some more ?', "*UNC: how come <I'm a bad boy> [>] ?", '*MOT: <okay eat a little> [<] more potatoes okay ?', "*UNC: I'll pinch your butt .", '*GRM: do you want some gravy on your potatoes ?', "*UNC: I'll pinch your butt .", '*AUN: I thought Darlene would be here .', "*UNC: hey don't talk with you mouth full .", '*UNC: Darlene ?', "*UNC: she's getting ready .", '*MOT: getting <ready xxx> [>] +/.', "*UNC: <no I mean> [<] she's shopping .", '*UNC: oh .', "*UNC: she [/] she's still shopping .", "*GRM: she's shopping for what ?", "*UNC: I don't know .", '*UNC: just to go shopping and spend money .', '*GRM: good she gonna get a new cabinet .', "*UNC: xxx she's picking up a card and all that .", '*GRM: oh .', '*GRM: I thought you <meant like xxx> [>] .', '*UNC: <wow look at this> [<] !', '*UNC: 0 [=! gasp of astonishment] !', '*UNC: look what youse eating !', '*UNC: who did that ?', '*GRF: can Uncle have some of your turkey ?', '*GRF: xxx have more turkey ?', '*UNC: so what do you want [>] +/.', '*CHI: you [<] already have some .', '*GRF: oh you already got some ?', '*UNC: yeah but you stole my gravy .', "*CHI: no I didn't .", '*UNC: yes you did .', '*MOT: who spilled it ?', '*MOT: he did it himself ?', "*UNC: <I ate> [//] hey don't point to me I have a name .", '*CHI: Uncle you did it .', "*UNC: no I didn't do it you [!] did it .", '*UNC: <I seen> [>] you do it !', "*CHI: <you're the one> [<] you xxx +/.", "*UNC: hey don't talk to me with a fork in your hand .", '*UNC: you crazy or something ?', '*CHI: no .', '*UNC: yeah !', '*UNC: yeah yeah you [!] did it and I &s +/.', "*CHI: that's a bad word .", '*UNC: what ?', '*CHI: crazy .', "*UNC: crazy is a bad [//] you [//] that's (be)cause you're a crazy lady .", "*CHI: no I'm not .", '*CHI: you know better .', '*UNC: oh boy &=laughing !', '*GRF: &=laughs .', '*UNC: you gonna put me in my place ?', '*CHI: yeah .', '*UNC: yeah ?', '*UNC: <let me tell you something> [>] .', '*UNC: you got_to get a lot bigger than you are now .', "*CHI: no I'm not .", '*UNC: I gonna beat your butt when we get done eating .', "*MOT: no he's not .", "*UNC: <I'm gonna> [/] I'm gonna beat your butt !", '*CHI: no &=whining .', '*MOT: because then +/.', '*UNC: oh come on .', "*MOT: you're gonna beat his .", '*AUN: xxx upstairs .', '*MOT: oh xxx he left .', '*MOT: xxx .', '*CHI: &=shouts .', '*AUN: www .', "*UNC: (I'll) beat you anyways .", '*CHI: xxx eat all of that .', "*UNC: I'm gonna beat you I'm gonna get done eating before you are .", '*UNC: mm .', '*GRF: no wings ?', '*UNC: mm .', "*UNC: I'm xxx +/.", '*CHI: xxx .', "*UNC: I'm almost done now .", "*CHI: don't stuff your mouth xxx .", "*CHI: don't stuff your mouth (be)cause you will choke !", '*MOT: yeah .', "*UNC: I'll choke if I stuff my mouth ?", '*CHI: yeah .', '*UNC: yeah alright (.) you gotta chew your food too you know .', '*GRF: say I chew my food .', '*CHI: I chew my food .', '*GRF: good .', "*UNC: don't look like it to me .", '*UNC: listen I can do that too .', '*CHI: you stop .', "*CHI: you're not a xxx know better .", '*UNC: I know better than that ?', '*CHI: yeah .', '*UNC: okay .', '*MOT: tell him .', "*CHI: now don't be like a baby [!] .", '*UNC: okay .', '*CHI: and if +/.', "*UNC: <there's> [/] there's only one baby in the house and you're it .", '*UNC: right ?', "*CHI: I'm not the baby Bryan's the baby .", '*UNC: oh Bryan is the baby .', "*UNC: but don't you act like a baby sometime when you cry all the time ?", '*CHI: no &=shouts !', '*UNC: hey &=laughs !', '*GRF: &=laughs .', '*UNC: <you keep chucking potatoes at me on your fork knock it off> [=! laughing] !', "*MOT: don't point your fork honey (be)cause it could slip and it could xxx [>] .", '*UNC: your [<] potatoes are slipping off and hitting me .', "*UNC: I just took a nice shower I'm all clean .", '*CHI: &=laughs .', '*UNC: 0 [=! mock laughs] .', '*CHI: &=laughs .', '*UNC: who comes to get you in school I pick you up from school all the time .', '*UNC: I let you drive my car .', '*CHI: now the school bus does huh ?', '*UNC: yeah .', "*CHI: <(be)cause I'm a big girl> [>] .", '*UNC: <but [/] but> [<] when I take you out when we hit the street who gets in the steering wheel who drives the car ?', "*UNC: who's me ?", '*UNC: you [!] do .', '*MOT: <oh > [>] .', "*UNC: <you know> [<] you'd better never smash Unky Johnny's car (be)cause if you smash my car you'd better not come home .", '*MOT: Uncle is gonna be in big trouble .', '*GRF: xxx Uncle xxx .', "*UNC: we don't care do we huh ?", '*CHI: right .', '*UNC: right .', '*UNC: we like to drive huh ?', "*UNC: I'm teaching you how to drive .", '*UNC: what do you do at a stop sign ?', "*UNC: I know but what's that mean ?", '*CHI: stop !', '*UNC: right .', "*GRM: Chi why don't you tell Uncle to buy you your own car <in a few years> [>] .", '*CHI: <buy me my own car> [<] .', '*UNC: buy you your own car ?', '*GRM: and you can park xxx right next to his .', "*UNC: you got a driver's license ?", '*GRM: yes .', '*CHI: mhm .', '*UNC: oh okay .', '*CHI: here you can have my fork .', '*GRM: xxx [>] .', "*UNC: <I don't want no fork> [<] I got my own fork .", "*GRM: tell him it'll be a lot cheaper too .", "*CHI: it'll be a lot cheaper too .", '*UNC: what are you a little parrot you say whatever Grm tells you to say ?', '*CHI: &-uh .', '*UNC: 0 [=! makes strange noise] .', '*UNC: Polly want a cracker ?', '*GRF: xxx .', '*MOT: uhoh .', '*CHI: xxx .', '*CHI: no it was Jessie .', '*GRF: Jessie ?', '*UNC: little Jessie ?', "*MOT: I don't think <she should talk> [>] .", '*UNC: xxx [<] .', '*GRF: xxx going back out again .', '*CHI: me xxx tall huh ?', "*MOT: <you're getting tall> [>] .", '*UNC: mhm [<] .', "*UNC: you know what's on today ?", '*CHI: what ?', '*UNC: football .', '*UNC: we like football .', '*GRM: <&=laughs > [>] !', '*GRF: <&=laughs > [<] !', '*UNC: we like to tackle you .', '*CHI: you stop it and you stop it .', '*UNC: uhoh .', "*GRF: why what'd we do ?", "*UNC: you know that's my chair you're sitting in .", '*UNC: oh yes it is .', '*UNC: oh yeah they are .', "*UNC: don't shake your head no at me .", "*UNC: yeah you wait xxx I'm gonna jump in your seat and it's gonna be my [!] seat .", '*MOT: xxx tonight .', '*CHI: xxx Mr Bundy tonight .', "*UNC: Al Bundy I'm gonna have Uncle Fitzy tape it for me .", '*MOT: oh are you ?', '*MOT: he might not be home .', '*UNC: well you can .', '*MOT: &=laughs .', '*CHI: oh no <you are> [>] .', '*MOT: <I could> [<] .', '*MOT: &=laughs .', "*UNC: oh [//] you're [!] gonna tape it for me you know how to work the V C R .", "*MOT: tell Unc be nice to me and we'll tape it for you .", "*CHI: be nice to me and we'll tape <for you> [>] .", "*UNC: <I'm always nice> [<] to you .", '*MOT: no he teases you .', '*CHI: you teases me .', "*UNC: no I don't .", "*UNC: you're a bad girl .", "*MOT: no she's not .", '*CHI: you know better than that .', '*UNC: okay .', '*GRF: &=laughs .', '*UNC: you called me a bad boy !', "*MOT: say that's different .", "*CHI: that's different .", "*UNC: why's that different ?", '*MOT: <(be)cause you are [!] > [>] .', '*GRF: <(be)cause you are [!] > [<] .', '*MOT: &=laughs .', '*CHI: (be)cause you are [!] .', '*UNC: oh .', "*MOT: he's a fresh boy .", "*UNC: yeah but I'm your [!] bad boy .", '*AUN: xxx [>] .', '*GRF: <xxx pictures home again> [<] .', '*UNC: xxx said that somebody had already picked up the copies xxx .', '*GRF: &=laughs .', '*UNC: so (.) me and Auntie Darlene are getting married .', '*CHI: and I am too .', "*UNC: you are too you're gonna get married you're gonna [: going to] marry me too ?", "*UNC: and I'm gonna have you and Auntie Darlene ?", '*UNC: &-uh .', "*UNC: I'm gonna have_to live with the both of youse ?", '*CHI: uhhuh .', '*UNC: oh my god .', '*GRF: tell him you can do better .', '*CHI: you can do better .', '*GRF: no you [!] can do better .', '*GRF: say +/.', '*UNC: so me and you will have_to go shopping with Auntie Darlene all the time and spend twice as much money ?', "*CHI: I don't want no more .", '*UNC: you got your <own charge card> [>] ?', '*MOT: <you ate good> [<] huh you ate +...', '*UNC: hey you got your own charge card ?', '*CHI: yep .', "*UNC: <oh boy then you're all set> [>] .", '*GRM: <&=laughs > [<] .', '*UNC: whose name is it under ?', '*MOT: tell Unc yours [!] .', '*CHI: yours .', '*UNC: so I gotta pay for all the stuff you buy ?', '*CHI: yep .', '*UNC: oh boy .', '*GRF: xxx .', '*CHI: you got it .', '*GRF: right .', '*MOT: xxx go back outside and play with Jessie and Richie ?', '*UNC: good .', '*UNC: scram .', '*UNC: ow look at all those mosquito bites on your back .', '*UNC: wow [!] come here .', '*UNC: let me see .', '*UNC: wow !', '*UNC: they like you huh ?', '*CHI: mhm .', '*UNC: how many times look one two three (.) four five six [!] mosquito bites !', '*UNC: what are we gonna do to the mosquitos ?', '*CHI: 0 .', '*GRF: squish them .', "*UNC: we're gonna what ?", "*GRF: we're gonna <squish them> [>] .", "*UNC: <we're gonna> [<] xxx them up .", '*UNC: alright .', '*UNC: (.) see you .', '*CHI: see you .', '*UNC: bye bye .', '*CHI: bye bye !', '*UNC: see you later alligator .', '*CHI: see you later alligator .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//melmt1.cha
HSLLD/HV1/MT//tommt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: why don't you climb up on the chair and I'll get your potatoes for you .", '*MOT: okay ?', '*CHI: is enough +...', '*CHI: can I have some lamb chop ?', '*MOT: what would you like ?', '*CHI: lamb [>] +/.', '*MOT: lamb [<] chop ?', '*MOT: yes !', '*MOT: let me just get you potatoes .', "*CHI: I didn't have no lamb chop .", '*MOT: not yet no .', "*CHI: I don't know what they do .", '*MOT: and look_it what else we have .', '*MOT: your favorite .', "*CHI: we're having potatoes .", '*MOT: yeah .', '*MOT: mashed potatoes .', '*MOT: <we did have mashed potatoes> [>] .', '*CHI: <mashed potatoes> [<] !', '*MOT: are you gonna try to eat your corn off the cob tonight ?', '*CHI: yeah [>] .', '*MOT: <or you> [<] gonna just have it cut off ?', "*CHI: I'm gonna have it cut off .", '*MOT: okay .', '*MOT: you might wanna try it on the cob .', "*MOT: I know it's hard without your front teeth but (..) you can give it a try if <you like> [>] .", '*CHI: Ma you [<] like that tea you have over there on (..) the table .', '*MOT: alright .', "*MOT: I'll cut it off .", "*CHI: where's my fork ?", "*CHI: where's my +/.", '*MOT: you have a fork .', "*CHI: I don't <want a fork> [>] .", "*MOT: <that's okay would you like a spoon> [<] ?", '*MOT: there you go .', '*CHI: thank you .', '*CHI: now xxx .', "*MOT: that's +...", "*MOT: wait &-um it's much easier to eat lamb chops (.) with a fork .", "*CHI: I'm gonna say hi .", '*CHI: hi Mom .', "*CHI: supper's all ready .", '*CHI: supper Chie !', "*CHI: I said hi Mom (.) supper's all ready .", '*CHI: sit down .', "*MOT: (..) here's your milk .", '*MOT: would you like a little butter on your mashed potatoes honey ?', '*CHI: mhm .', '*MOT: how are they\xe2\x86\x91 are they yummy ?', '*CHI: yeah .', '*MOT: <okay xxx> [>] +/.', '*CHI: you [: got] gotta [: to] [<] mix it up huh ?', '*MOT: well xxx .', '*MOT: hi sweetie .', '*CHI: I smell corn [?] in the cob !', '*MOT: do you smell it ?', '*MOT: it smells pretty yummy huh ?', '*CHI: what do you do with that ?', '*CHI: do you eat that without teeth ?', '*MOT: &-um with teeth .', '*CHI: oh .', '*CHI: is it hot ?', "*MOT: no it's cooled off now .", '*CHI: I want some .', '*MOT: nuhhuh .', '*CHI: why ?', '*MOT: because I said so .', '*CHI: why ?', '*MOT: (be)cause I poured you some delicious milk .', '*CHI: xxx for me .', '*MOT: sure [>] +/.', '*CHI: <will you put> [<] some in my hand for me ?', "*MOT: well it's very hot honey but does <anyone in particular> [>] +/.", '*CHI: <no some of> [<] that in my hand .', "*MOT: no (be)cause you'll put it on the floor .", '*MOT: listen to me .', "*MOT: is there any special corn on the cob you'd like here ?", '*MOT: want one <of these guys> [>] ?', '*CHI: <&-um I> [<] want two .', '*MOT: alright .', "*MOT: well (.) we'll have one at a Chie though is that okay [>] ?", '*CHI: <I want> [<] some +...', '*CHI: I want one with &-um (.) that one <on the end> [>] .', '*MOT: <this guy here> [<] ?', '*CHI: yeah .', '*MOT: the one on the end .', '*MOT: okay .', '*MOT: how about you give me your plate .', '*MOT: you want it cut off\xe2\x86\x91 or do you want it on the cob ?', '*CHI: until I have my fake tooth .', '*MOT: okay .', "*MOT: and then we'll leave it on the cob .", '*MOT: xxx .', '*MOT: how was your day today ?', '*CHI: pretty good .', '*MOT: yeah did you have a nice visit with Papa ?', '*CHI: yep .', "*MOT: how's he doing today [>] ?", '*CHI: <I had to> [<] jump good .', '*MOT: what ?', '*CHI: I had to jump good .', "*MOT: I'd like you to sit in the chair please Chi .", "*CHI: I didn't know how to jump good .", "*MOT: yeah why\xe2\x86\x91 were you jumping at Papa's house ?", '*CHI: no .', '*MOT: no [>] ?', '*CHI: xxx [<] .', '*MOT: no ?', '*MOT: so what was it that you saw at the park ?', '*CHI: a bus .', '*MOT: <a what> [>] ?', '*CHI: <I mean a> [<] fire engine .', '*MOT: no what else ?', '*MOT: what kind of animal did you see there that you mentioned to me ?', '*CHI: a bird .', '*MOT: what else ?', "*CHI: I don't know .", "*MOT: Chi you don't remember what you said you saw at the park ?", '*CHI: oh yeah .', '*MOT: what ?', '*CHI: &-um (.) a +...', "*CHI: I don't know .", "*MOT: you don't remember the word ?", '*CHI: no .', '*MOT: an [<] iguana .', '*CHI: oh an iguana my dad xxx .', '*MOT: yeah !', '*MOT: did its owner let [/] let you pat him ?', '*CHI: (.) no (.) no +/.', '*MOT: was he walking around all by himself ?', '*CHI: mhm .', '*MOT: yeah ?', '*CHI: Mommy xxx I see more .', '*MOT: well I pretty much gave you a lot there kiddo .', '*MOT: not much left okay ?', '*CHI: xxx .', '*MOT: want more yummy butter on there ?', '*CHI: no .', '*CHI: ew .', "*CHI: I don't want butter on anything .", '*MOT: okay .', '*CHI: <Mommy> [>] +/.', "*MOT: <there's butter> [<] on your potatoes +...", '*CHI: Mommy +/.', '*MOT: butter on your corn +...', '*MOT: yeah ?', '*CHI: &-um can I have some steak ?', "*MOT: yeah well it's lamb chop .", '*CHI: can I have some bread ?', '*MOT: yes .', '*CHI: lamb chop chop chop .', '*CHI: how much wood does a woodchuck (.) if a woodchuck could chuck chuck (.) .', '*CHI: &-um !', '*CHI: hm: .', '*CHI: I like corn on the cob .', '*MOT: yes !', "*MOT: isn't it delicious even if it's not on the cob ?", "*MOT: that's (be)cause it's corn Chie .", '*CHI: mhm .', '*CHI: (.) what makes corn ?', '*MOT: corn grows !', '*MOT: in a great big tall stalks .', '*MOT: like we see at Allendale farm ?', '*MOT: great big tall stalks .', '*MOT: and then this is the Chie o(f) year it grows all summer long and this Chie o(f) year you get to pick it .', "*CHI: mommy next Chie you'll have_to take me to pick it .", "*MOT: well we're gonna have a ride in the country this weekend .", "*MOT: I bet we'll see some corn fields .", "*MOT: (.) and I'll show you .", "*MOT: they're real nice .", "*MOT: they're great big tall stalks that grow way up high .", '*CHI: hm: !', '*CHI: I xxx .', '*CHI: turn the T@l V@l up !', '*MOT: (.) the sports .', '*CHI: sports yeah .', '*MOT: what are they playing ?', '*CHI: baseball !', '*MOT: would you like to be moved up to the table +/.', '*CHI: mhm .', '*MOT: +, a little bit ?', '*CHI: right here I need a little xxx .', '*MOT: yeah !', '*CHI: thanks .', '*MOT: is that a little better ?', '*CHI: yeah .', "*MOT: you're welcome honey .", "*CHI: I'm putting some more corns .", "*CHI: Mommy you know I'm putting some corn on my butter .", '*MOT: yeah ?', '*CHI: that way it will melt xxx .', "*MOT: please don't spill your milk .", "*MOT: it's right under your hand there .", '*CHI: then put it somewhere else .', '*MOT: well I think that you &=chuckles could possibly put it somewhere else .', '*CHI: just put it right there xxx .', "*CHI: mommy I'm putting it by the [///] near the xxx .", "*CHI: mommy I'm putting it xxx .", '*MOT: see the helicopter ?', '*CHI: sounds like a missile xxx .', '*MOT: that would be terrible if it was a missile .', '*MOT: what could happen if it was a missile ?', '*CHI: it would fall on our house .', "*MOT: oh well that's a scary thought .", '*CHI: and it would blow !', "*MOT: I'm sure happy it was just a helicopter .", '*CHI: are you doing xxx ?', "*MOT: I'm buttering my corn .", '*MOT: I like mine on the cob (be)cause I have my teeth !', '*CHI: can I ?', '*CHI: can I <bite yours> [>] ?', "*MOT: <you'd like to try> [<] to bite\xe2\x86\x91 well it's still pretty hot how about when it cools down a little ?", '*CHI: xxx .', '*MOT: okay\xe2\x86\x91 in the meanchie@wp you can eat yours .', '*MOT: you can xxx right about xxx .', "*CHI: but see if [?] my butter's in there .", '*CHI: mm mm !', '*MOT: mm ?', '*MOT: how is it ?', '*CHI: xxx said that .', '*MOT: how is it ?', '*CHI: mm !', '*MOT: how is it ?', '*CHI: pretty good .', "*MOT: just pretty good\xe2\x86\x91 isn't it great or maybe even delicious ?", '*CHI: delicious !', '*MOT: mm ?', "*CHI: and you're a good cooker .", '*MOT: well thank you honey .', '*CHI: xxx .', "*MOT: you're a good son .", '*CHI: &=laughs .', '*CHI: oh you put (.) xxx on my xxx .', '*MOT: well I think Nelson likes lamb chops too but the kitty has his own food .', '*CHI: hm: ?', '*CHI: mommy ?', '*MOT: what darling ?', '*CHI: xxx put your [//] my [/] my [//] your finger all the way into my ear and you will pull my mouth through it ?', "*MOT: well that's your jaw going up and down but no thank you <I> [//] I'd rather not put my finger in your ear .", "*MOT: I'd like to eat my dinner I know you're chewing very good come on !", '*MOT: I want you to <chew please> [>] .', '*CHI: <mom xxx> [<] xxx ?', "*MOT: no not particularly I'd like you to get in the chair though .", '*CHI: (.) can I eat +/.', "*MOT: that's your jaw moving (.) inside your ear .", '*CHI: mommy ?', '*CHI: &-um xxx Chie for the bug to come out .', '*CHI: see ?', "*MOT: he's on the other side of the screen that's a pretty big bee though huh ?", '*CHI: mhm .', '*CHI: <he was in> [//] he will make a hole in the screen .', '*CHI: and he was in this house !', '*CHI: he was in this house mommy .', "*MOT: I think we'd probably get him first but we're not bothering him so I think we're just gonna xxx him .", '*CHI: yea(h) go away you xxx .', "*CHI: he won't go away .", '*CHI: I think he likes us .', '*MOT: would you eat some [>] dinner please ?', '*CHI: mommy [<] (.) I think he likes some of our food .', '*MOT: well (.) I think that bees kind of like honey .', '*CHI: mommy ?', '*MOT: what ?', '*CHI: can I try some of your corn ?', '*MOT: over your plate please .', '*CHI: hot !', '*MOT: yeah I told you it was hot .', "*MOT: I wasn't kiddin(g) huh ?", "*MOT: it's good though .", '*MOT: try the end the end is [/] is a little cooler .', '*CHI: the end ?', '*MOT: yeah the end right here .', '*CHI: xxx can I have a little bite ?', '*MOT: how about I save you some and in the meanchie@wp you eat some of yours too .', '*CHI: xxx lamb chops and my mashed potatoes but xxx .', "*CHI: the butter's all gone !", '*CHI: it +/.', "*MOT: well it's not all gone it just melted onto your corn honey and now your corn's all buttery .", '*CHI: it exploded !', '*MOT: it exploded\xe2\x86\x91 where ?', '*CHI: it disappeared I mean .', '*MOT: disappeared ?', '*CHI: mhm .', '*CHI: now xxx touch him .', '*MOT: no honey .', "*MOT: kitty's not supposed to bother us at the supper table .", '*CHI: oh mommy I can see your car but nobody locked it .', '*MOT: nobody locked it ?', '*MOT: xxx must have locked it .', '*CHI: xxx borrowed it ten days .', '*MOT: hey so did you have breakfast with papa today ?', '*CHI: yep !', '*MOT: what did you have ?', '*CHI: &-um (.) I had butter and bread .', '*MOT: yeah ?', '*CHI: and &-um (.) I had bacon and I ate +...', '*MOT: yeah ?', '*CHI: xxx .', '*MOT: sounds like a good size breakfast to me .', '*MOT: papa cooks breakfast real good huh ?', '*CHI: mhm .', '*CHI: &=laughs .', '*CHI: mommy ?', '*MOT: hm: ?', "*CHI: I didn't know Nelson [?] can do that .", '*MOT: could [//] can do what ?', '*CHI: can xxx go up there .', '*CHI: I think [?] he jumped right over +/.', "*MOT: xxx <he's> [/] he's on the ledge so he's okay .", '*CHI: mommy look .', '*CHI: me and daddy played xxx .', '*CHI: and he can do it with you in a room .', '*CHI: I can do it with you in a room .', '*CHI: how .', '*CHI: I can spray it in your window .', '*MOT: oh yeah I remember that .', '*CHI: we can xxx yeah we can show you xxx .', "*MOT: I don't think so .", '*MOT: daddy just did that that one Chie because he was being funny .', '*CHI: <but we> [/] but we can be funny too huh ?', '*CHI: we can [>] +/.', '*MOT: <I know> [<] but I think it might get messy honey no spraying water in my bed+room window please .', '*CHI: maybe we can do it down there .', '*MOT: know what I use that for ?', '*CHI: what ?', "*MOT: that's for when you cook the lamb chops on the barbecue somechies@wp the fire gets real &-um strong and burns them so I spray the fire with that and it's gone .", "*MOT: and they don't get too burnt .", '*CHI: <and they> [/] (.) and they &-um make it xxx and make it the fire get gone .', "*MOT: yeah that's right .", '*CHI: mommy [>] ?', '*MOT: <fire go right out> [<] .', '*CHI: mommy !', '*MOT: what ?', '*CHI: we can play firemen in your car !', '*CHI: we can do this .', '*CHI: we can blow water on your window .', '*CHI: <we can &-um> [/] <we can &-um> [//] (.) and then we can xxx it !', '*CHI: and then your car will be nice and clean xxx .', '*MOT: yeah .', '*MOT: (..) you having trouble getting the corn on your spoon ?', '*CHI: nope .', "*MOT: you're doing pretty good at xxx +/.", '*CHI: mommy watch !', '*CHI: xxx my dad .', "*MOT: yeah that's okay .", '*MOT: you know what else might be easier ?', "*MOT: if you just do it sideways and make it crash into your mashed potatoes (.) and you won't chase them all over .", '*CHI: mommy look !', '*CHI: (..) mommy (.) I told you I needed to &-um +...', '*MOT: to what ?', '*CHI: to (.) to &-um +/.', '*MOT: fork and a spoon xxx okay ?', '*MOT: how do you like eating on the back porch ?', '*CHI: pretty good .', "*MOT: we haven't done this in a while huh ?", '*CHI: nuhhuh .', '*MOT: know what made me remember ?', '*CHI: hm: ?', "*MOT: you mentioned it last night that you'd like to eat on the back porch .", '*CHI: mhm .', '*MOT: and that gave me an idea !', '*CHI: mhm .', '*MOT: think maybe you need to drink your milk honey .', '*MOT: (..) what tape were you watching in the living room before dinner ?', '*CHI: superman !', '*MOT: mhm .', '*CHI: he xxx tape with three xxx on it .', '*MOT: three things are yeah ?', '*CHI: yep .', "*MOT: I <didn't know that> [>] .", '*CHI: <one> [<] [/] one video two video three video !', '*MOT: oh (.) really ?', '*CHI: three xxx .', '*MOT: have you watched your new Mighty Mouse tape yet ?', '*CHI: mhm .', '*MOT: was it any good ?', '*CHI: mhm .', '*CHI: he sang mighty mouse !', '*CHI: mhm [>] .', '*MOT: yeah [<] .', '*MOT: is that just one story ?', '*CHI: mhm (.) I have three packets .', '*MOT: oh is there three xxx ?', '*CHI: (.) mommy ?', '*CHI: (.) mommy know what I xxx ?', '*CHI: mommy know what I xxx ?', '*CHI: I put those !', '*MOT: yeah ?', '*CHI: yeah .', '*CHI: &-um I made the xxx <and &-um> [/] and &-um I xxx .', '*CHI: I thought of that !', '*MOT: you thought of being a cooker at a restaurant ?', '*CHI: mhm .', '*MOT: I thought last night you were gonna build buildings .', "*CHI: but &-um [//] but I thought of that at daddy's .", '*MOT: yeah ?', "*CHI: mommy I'm almost all done huh ?", "*CHI: but you aren't .", "*MOT: I'm almost all done !", '*CHI: can I have some ?', "*CHI: (.) (be)cause it's not all hot ?", '*MOT: yep .', "*MOT: it's just right now .", '*MOT: you can hold it .', '*CHI: xxx two hands .', '*MOT: xxx .', "*CHI: I can't bite it !", '*MOT: try to bite up with your bottom teeth .', '*MOT: any better ?', '*CHI: nope .', '*CHI: butter .', "*CHI: I'm eating now .", '*MOT: xxx .', '*CHI: mommy ?', "*CHI: why don't you put this in a pin ?", '*MOT: what ?', '*CHI: you put this in the pin ?', '*MOT: what the end things ?', '*CHI: yep .', '*CHI: <no no the> [//] no the middle [!] thing .', '*CHI: the middle !', '*CHI: the corn .', '*CHI: (.) okay and do you make some butter ?', '*MOT: do I make butter ?', '*MOT: not with [!] butter .', '*MOT: you just put it in the pan all by yourself (.) cover it up and then cook it for about eight minutes +/.', "*CHI: look [!] I'm all done with it .", '*MOT: good .', '*CHI: I ate it .', '*MOT: what about xxx can you get it ?', "*MOT: but no you don't add anything to it .", '*MOT: comes out pretty yummy too .', '*CHI: <all done> [>] !', '*MOT: <good job> [<] .', '*MOT: good job honey .', '*CHI: I wanna do another one of those on the cob okay ?', '*MOT: alright but first I would like you to xxx .', '*CHI: xxx I only want to eat corn like yours xxx .', "*CHI: (.) mommy that one's mine !", '*MOT: want to share one at a Chie ?', '*CHI: yeah [>] !', '*MOT: <so that> [<] they that get xxx ?', '*CHI: mhm .', '*CHI: mommy we can xxx [!] take the bite .', '*CHI: can I have bite ?', '*CHI: can I have a bite now ?', '*CHI: <can I have a bite> [=! whining] ?', "*MOT: yes you can have a bite Chi but I told you I'd like you to eat the corn on your plate .", '*CHI: (..) I liked [!] it !', '*MOT: good .', '*CHI: mommy ?', "*CHI: &-um (.) am I in xxx in the xxx (.) but don't eat the one on the end .", "*MOT: okay that one's yours .", '*CHI: because then I will be sad .', '*MOT: alright .', '*MOT: I promise .', '*CHI: if you eat one tomorrow without me tomorrow I eat xxx one .', "*CHI: the first thing that I'm gonna do is (.) xxx the whole [!] night okay ?", "*MOT: you're gonna stay in bed the whole night ?", "*MOT: that's the first thing you're gonna do ?", "*CHI: I said that's what I'm gonna do .", '*MOT: uhhuh .', '*CHI: is wake up early in the morning .', '*MOT: yeah ?', '*CHI: mhm !', '*CHI: but &-um (.) late in the morning okay ?', "*MOT: late in the morning\xe2\x86\x91 does that mean you're not gonna wave goodbye to me out the window ?", '*CHI: I am .', '*CHI: (.) only when xxx +/.', "*MOT: that's pretty early !", "*MOT: that's seven thirty .", "*CHI: xxx for one more minute I'm done eating .", '*MOT: oh okay .', '*MOT: so you know what you could do ?', '*MOT: you could get up and wave to me out the window and then go back to bed .', '*CHI: no .', '*MOT: xxx .', '*CHI: no no no no .', '*MOT: why ?', "*CHI: then I'm gonna play [!] with something and xxx .", '*MOT: I see .', '*CHI: who you gonna call\xe2\x86\x91 Ghostbusters [!] and I play Ghostbusters with the fire engine .', '*CHI: Ghostbusters go in the fire engine .', '*MOT: mhm .', '*MOT: I would bet .', '*MOT: you know why ?', '*MOT: remember what their house is made out of\xe2\x86\x91 their fort ?', '*CHI: no .', '*MOT: do you remember what it was ?', '*CHI: firemen .', "*MOT: uhoh it was a firehouse yeah that's right .", '*CHI: it was xxx firehouse .', '*MOT: not a new one an old one remember when they &-um (.) remember they went to see it it was a mess ?', '*MOT: (re)member ?', '*CHI: no no that was &-um a new type one okay ?', '*MOT: that was in the movie .', '*CHI: no that was when they just moved in .', '*MOT: yeah .', "*MOT: and it was real messy wasn't it ?", "*MOT: so I'd say it was messy because it was an old [!] firehouse xxx .", "*CHI: but &-um when it's new they find a new one on a Ghostbusters xxx <that will be a> [/] that will be a &-um one with &-um since they open the door and it goes ooo@o [=! makes beeping noise] like that .", '*MOT: electronic doors ?', '*CHI: uhhuh .', '*MOT: can you say that word ?', '*CHI: goes down .', '*MOT: say electronic .', '*CHI: electronic door .', "*MOT: that's right .", '*CHI: and it close the door like this and xxx like this .', '*MOT: very good .', '*MOT: how about you eat some supper ?', '*CHI: and on Ghostbusters they throw xxx something that punches .', "*MOT: there's gonna be something that punches ?", '*CHI: mhm [>] .', '*MOT: <like what> [<] ?', "*CHI: &-um like the boxer man but it's gonna be a ghost one .", "*CHI: and on Ghostbusters &-um xxx lady there ain't no more Ghostbusters comes .", '*CHI: no you can &-um just cut it one Chie .', '*CHI: then the xxx can see you I xxx (.) and I xxx .', '*MOT: no leave Nelson alone honey please eat your supper .', '*CHI: it is xxx <Nelson Nelson Nelson> [=! singing] .', '*MOT: Chi &=singing .', '*MOT: come on .', '*CHI: &=laughs .', "*MOT: didn't eat much of your mashed potatoes there .", '*CHI: xxx .', '*MOT: whatcha [: what are you] doing ?', "*CHI: you're a good cooker .", '*MOT: thank you .', "*MOT: you're a good son honey .", '*MOT: would you please get in your chair ?', '*MOT: yeah those are sparklers for when it gets darker .', '*MOT: that one right there <xxx that one there> [>] .', '*CHI: <and I can hold one> [<] .', '*MOT: Chi could you please come around and get in your chair ?', '*MOT: are you gonna hold one tonight ?', '*CHI: xxx [>] .', '*MOT: <you always say that> [<] you know with long pants on .', '*CHI: it will hurt my skin .', "*MOT: honey they don't hurt your skin honestly .", '*CHI: and I need mittens !', "*MOT: you don't need mittens they don't hurt your skin they're just little sparklers .", '*CHI: xxx boom boom boom !', '*CHI: they hurt me .', '*MOT: <please come on up in your chair> [>] .', "*CHI: <(be)cause I'm only that many> [<] .", "*MOT: I know you're only that many but you know what ?", '*CHI: what ?', "*MOT: they don't [!] hurt you yes you can feel the sparks but no they don't hurt .", "*MOT: you just can feel [!] them but they don't hurt .", '*CHI: mommy ?', '*MOT: and you know what else ?', '*CHI: mommy know what ?', "*MOT: can I just ask you something\xe2\x86\x91 you know honey I wouldn't give you anything that would hurt you xxx .", '*CHI: mommy ?', '*MOT: what ?', '*MOT: know what ?', '*CHI: what was I going to say ?', "*MOT: I don't know but you know what ?", '*MOT: you look so sleepy .', '*MOT: are you still sleepy ?', '*CHI: &=babbling .', '*CHI: I said xxx doodoo@c head .', "*MOT: I don't like doodoo@c head .", "*MOT: I don't like name calling .", "*CHI: xxx I don't like this banana .", "*MOT: I think it's the doggie next door .", "*MOT: he's pulling on his chain .", '*CHI: doggie xxx huh ?', '*MOT: yes they do .', '*CHI: somechies@wp they bite [!] you .', '*MOT: well somechies@wp they do .', "*MOT: but we're so lucky we have a cat and we don't need a dog .", '*CHI: know what dogs do ?', '*MOT: what ?', '*CHI: 0 [=! makes barking sounds] .', '*MOT: very good .', '*CHI: know what kitties do ?', '*MOT: what ?', '*CHI: &=meows .', "*CHI: when they're sad .", '*MOT: that sounds like a very sad cat .', '*CHI: mom xxx .', '*MOT: yeah .', '*CHI: xxx .', "*MOT: &aw that's a sad quiet cat .", '*CHI: no .', "*CHI: he's wicked shy .", '*MOT: yeah ?', '*CHI: mhm .', '*CHI: you want to hear a little shy cat ?', '*MOT: I want to hear a happy cat .', '*CHI: 0 [=! loud meows] .', '*CHI: want to hear a loud loud one ?', '*CHI: 0 [=! screaming meows] .', "*MOT: whoa that's a good one .", '*CHI: that one did up to [/] to [///] mommy what +...', '*CHI: this is breaked see ?', "*MOT: yeah it is it's kind of +...", '*CHI: need a new one [>] !', '*MOT: <I think you> [<] need a new basketball hoop yes .', '*CHI: xxx Ghostbuster xxx .', '*MOT: Ghostbuster cat ?', "*MOT: I've never seen a Ghostbusters basketball hoop .", "*MOT: I've seen Larry Bird ones because Larry Bird plays for what team ?", '*MOT: do you remember ?', '*MOT: yeah he plays basketball but do you remember for who the name of the team ?', '*CHI: Boston Red Sox .', '*MOT: 0 [=! gentle laugh] .', '*MOT: Boston Celtics .', '*MOT: Boston Red Sox play what ?', '*CHI: baseball .', "*MOT: that's right .", '*CHI: but in the Red Sox xxx with the xxx .', '*MOT: yeah yep xxx .', '*MOT: he hits lots_of home runs somechies@wp .', '*CHI: mhm .', '*CHI: mommy how are we get a big towel xxx and I said xxx it up .', '*MOT: a big towel for where ?', '*CHI: no a big one of these so I can punch the ball up .', '*CHI: yeah !', "*CHI: yeah that's a good idea .", "*MOT: well you know what we'll do we'll get a new one of those but we won't let it be outside and then it won't get &-um (.) wrecked so fast and then we'll make it taller because we can make that taller .", '*CHI: is it going down ?', '*MOT: nope leave it alone please honey and finish your dinner .', '*CHI: &=outcry .', '*MOT: uhoh what ?', '*MOT: you have xxx lamb chop ?', '*MOT: xxx eat up .', "*CHI: I don't have any .", '*CHI: mommy\xe2\x86\x91 I wanna see how cold this is .', '*MOT: how cold it is ?', '*CHI: mhm xxx .', "*MOT: oh that's the xxx .", '*CHI: xxx on the floor .', '*MOT: okay put it on the floor .', "*MOT: how's that xxx [>] .", '*CHI: <&=coughing > [<] .', '*MOT: oh you okay ?', '*CHI: &=coughs .', '*MOT: do you need a drink of milk ?', '*CHI: no .', '*MOT: no what ?', '*CHI: no thank you .', '*CHI: mommy ?', '*CHI: this is volleyball ?', '*MOT: mhm .', '*CHI: hm: .', "*CHI: mommy I'm [/] I'm gonna sleep there .", '*MOT: gonna sleep there ?', "*MOT: think you'd &-uh be able to stay out there all night by yourself ?", '*CHI: mhm .', '*MOT: are you sure ?', '*CHI: I think so (.) mhm .', '*CHI: &=coughs .', '*MOT: well some Chie if you want maybe you can a little friend over and you can camp out on the back porch .', '*CHI: yeah !', '*CHI: yeah and we can &=coughs +...', '*MOT: you okay ?', '*CHI: I have a bad cold .', "*MOT: <no you> [//] I think you're choking on your food a little bit I think you have little xxx .", '*CHI: nuhhuh .', '*CHI: &=coughs .', '*CHI: I just have a cold .', '*CHI: from winter Chie .', '*MOT: from winter Chie ?', '*CHI: mom ?', '*MOT: what ?', '*CHI: <is you xxx> [//] is you come and do a (.) and camp in the woods with me I will be so excited .', '*MOT: well !', "*MOT: I'm sure you would be excited but momma does not like to camp in the woods .", '*MOT: your daddy likes to camp in the woods .', "*CHI: no he doesn't .", '*MOT: he does !', "*MOT: he's a [/] a great outdoors man he has lots_of camping equipment .", '*MOT: I think you ought_to get on him to bring you camping the woods .', '*CHI: <well mom> [>] +/.', '*MOT: <I figure he would> [<] he would love that .', '*CHI: mom ?', '*MOT: what ?', '*CHI: if we go under a tree +...', '*MOT: mhm ?', "*CHI: when it's night Chie +...", '*MOT: yeah ?', '*CHI: we can have our own little cook+out .', '*MOT: yes we could have a cook+out .', '*CHI: and a picnic right under [/] under those trees okay ?', '*MOT: well I rather like our picnics on the back porch .', '*CHI: mom ?', '*MOT: what ?', '*CHI: the xxx had a flashlight out here and picked it up .', '*MOT: mhm .', '*CHI: we can see animals with it .', '*MOT: yeah .', "*MOT: there aren't a real [!] lot of wild animals here .", '*CHI: no (.) but if we see a whole bunch [!] &-um I would waked up .', '*CHI: and when I waked up there will still be there .', '*MOT: think so ?', '*CHI: mhm .', "*CHI: because I see them <when I'm asleep> [//] when I was asleep .", '*CHI: I [//] my dreams was full .', '*MOT: yeah .', "*MOT: when you're asleep somechies@wp your dreams are very real .", "*MOT: but it's just your imagination working <while the rest> [>] of you sleeps .", '*CHI: <mommy mommy> [<] ?', '*CHI: mommy [>] ?', '*MOT: what [<] ?', '*CHI: my dreams did come true .', '*MOT: no ?', '*CHI: it did .', '*MOT: it did what was your dream about ?', '*CHI: it was a monster and I was xxx with his tongue it (.) mom his [/] his whole xxx and he dropped me on my neck .', "*MOT: the monster grabbed you on your head\xe2\x86\x91 but that didn't come true no monster really grabbed you on your neck .", '*CHI: it did [!] come true .', '*MOT: it did ?', '*MOT: when ?', '*CHI: a long Chie ago .', '*MOT: yeah ?', "*MOT: come on I'd just <like you to finish it> [>] .", '*CHI: <and it jabbed me in the eye> [<] .', '*MOT: it did ?', '*CHI: mhm .', "*MOT: no honey it didn't come true .", '*CHI: mhm .', '*MOT: you know I would never let any monsters get you .', '*MOT: besides what did I tell you about monsters ?', '*CHI: what ?', "*MOT: they're only make believe and they only live in movies because somebody with a wonderful imagination makes up monsters .", '*MOT: and all other sort of special effects to make the really scary monsters you know like how you watch Michael Jackson ?', '*MOT: and they show him putting his makeup on for Thriller ?', "*MOT: that's just because somebody had a great imagination .", '*CHI: mhm .', "*MOT: but no there's no such things as monsters .", '*CHI: xxx mommy +/.', "*MOT: there's some scary creatures like lions very fierce and scary +/.", '*CHI: mhm .', '*MOT: but &-um [>] +/.', '*CHI: <you know> [<] what [>] ?', "*MOT: +, <we're safe> [<] from them .", '*MOT: what ?', "*CHI: xxx I'm gonna stick it in his eye .", '*MOT: excuse me ?', '*CHI: &=laughs .', "*CHI: what's he wanna do ?", '*MOT: Nelson please get down .', '*CHI: &=laughs .', "*MOT: Chi our house isn't gonna come alive .", '*CHI: it might eat people .', "*MOT: well but that's just make believe sweetheart .", '*CHI: mom ?', '*CHI: xxx (.) people xxx the xxx in (.) people (.) people that come alive .', '*CHI: &=babbling .', "*MOT: nope no toys honey please put your toy down <until after we're all done> [>] .", '*CHI: xxx [<] .', '*MOT: yeah .', '*CHI: &-um .', '*MOT: you [/] you were starting to tell me something and I was interested .', '*CHI: &-um (.) what they found out where the dinosaur and they shot it .', '*CHI: and then they [//] it would stop it and that what I mean .', '*CHI: and then they made it into this dinosaur .', "*MOT: no that [/] that's just plastic mold honey just like your Playdough okay ?", "*MOT: if somebody found a dinosaur they wouldn't shoot it .", "*CHI: but if we xxx found a dinosaur we wouldn't shoot it .", '*MOT: no we would never shoot it .', '*CHI: the bad people made it .', "*MOT: no that was made by good people that's just a mold like the molds with your Playdough ?", '*CHI: oh I xxx !', '*CHI: &=laughs .', '*CHI: mommy watch !', '*MOT: <Chi> [>] !', '*CHI: <I> [<] xxx on my xxx .', '*MOT: honey you had two bites on your plate .', "*MOT: I'd like you to finish them .", '*CHI: &=gurgling no .', '*MOT: alright but you can just have a little corn and a little mashed potato .', '*MOT: please open up .', '*MOT: lean forward please Chi .', '*MOT: please !', '*MOT: thank you .', "*MOT: (.) you're doing pretty good I'd like you to just finish .", '*CHI: is it going high or low ?', "*MOT: so you're thinking of having this last ear of corn here ?", '*MOT: would you like it ?', '*CHI: mhm .', "*MOT: there you go you did pretty good I'd just like you to eat what's on your spoon but you can have that corn too .", '*CHI: I want one of these on .', '*MOT: okay .', '*CHI: I want both [!] <two on> [>] .', '*MOT: corn holders [<] .', '*CHI: I want two on .', '*CHI: put them on all the way .', '*CHI: okay ?', '*CHI: (.) is it hot ?', "*MOT: nope [!] it's not hot .", '*MOT: pick it up please .', '*CHI: can I eat it ?', '*MOT: mhm clean up your plate .', "*MOT: that's good .", '*CHI: mommy you can have some .', '*CHI: mommy ?', '*MOT: what darling ?', '*CHI: you can have some with me .', '*MOT: can I have some with you sharing it ?', '*CHI: mommy you can help me eat it .', '*CHI: mommy you can have a bite .', '*MOT: thank you .', '*CHI: and then I can and then you can .', '*CHI: mommy ?', "*CHI: no you can't have a big bite .", '*CHI: only can have one bite and then I have one and then you have one okay ?', '*MOT: okay go around in a circle .', "*CHI: (.) now it's your turn .", '*CHI: (..) help xxx .', '*MOT: put it on your plate sweetie .', '*CHI: mommy put that up !', '*CHI: mom\xe2\x86\x91 (.) mom &-um (.) now you can have a bite .', '*MOT: okay thank you .', '*CHI: xxx serving !', '*MOT: (..) I went around in a circle .', "*MOT: why don't you try that .", "*MOT: but bite up with your bottom teeth honey <and then> [/] and then you'll bite them off bite up (.) like that .", '*MOT: pick it up and try biting it .', "*MOT: (..) have you thought about what you're gonna have for dessert ?", '*MOT: hm: ?', '*CHI: &=squeaks .', '*CHI: the invisible man !', '*MOT: yes &=laughing the invisible man .', "*CHI: that's scary huh ?", "*MOT: yeah but it's make believe .", '*CHI: how is he talking ?', '*MOT: what ?', '*CHI: how is he talking ?', '*MOT: somebody with a great imagination did that (.) made the invisible man talk .', '*CHI: mhm .', "*MOT: I don't know how he was talking .", '*CHI: I think he &-um has a body inside .', '*MOT: he might .', '*CHI: 0 [=! makes eating noises] .', "*MOT: isn't that just delicious ?", '*CHI: mhm .', '*MOT: (.) doing a lot of spinning around there .', '*CHI: you can have some .', '*MOT: thank you honey !', '*CHI: (.) mommy ?', "*CHI: &-um when you're done I'm gonna sit down on my xxx .", "*CHI: I'm tired as a baby .", '*MOT: are you tired as a baby ?', "*CHI: mhm I'm tired as people .", "*MOT: you're tired as people ?", "*CHI: I mean I'm tired as a +/.", "*MOT: I'm pretty tired tonight maybe we'll just try to get to sleep real early .", '*CHI: oh yeah .', '*CHI: xxx both of my xxx .', "*MOT: well I don't know about that .", '*CHI: mommy ?', '*MOT: what ?', "*CHI: you didn't see all my tapes .", "*MOT: no I didn't see all your tapes and I don't know really if you're gonna see them tonight either .", '*MOT: but you know what you can do tonight\xe2\x86\x91 remember what I promised you last night you could start doing ?', '*CHI: what ?', '*MOT: do you remember what it was ?', '*CHI: no .', '*MOT: feed your +...', '*CHI: ++ thing !', '*MOT: your fishies !', '*CHI: why ?', '*MOT: you could start feeding fishies tonight .', '*MOT: have you thought about what you want for dessert ?', '*CHI: know what ?', '*MOT: what ?', '*CHI: you can make the same xxx that I made xxx .', '*MOT: yeah .', '*CHI: that I made it in a xxx that Steven get me .', '*CHI: the big man Steven .', '*MOT: with the alligator ?', '*CHI: no .', '*MOT: say that again .', '*CHI: the elevator .', '*MOT: the elevator ?', "*MOT: oh the car thing no we're not gonna play with that tonight .", '*CHI: mommy ?', '*MOT: what ?', '*CHI: maybe I can make a house [!] out of it .', '*MOT: what are you gonna have for dessert ?', '*MOT: we have hoodsies (.) cupcakes +...', '*CHI: I want a cupcake .', '*MOT: okay .', "*CHI: but you don't want no more xxx .", '*MOT: you liked that lamb chop tonight huh ?', "*MOT: must be because it's cooked on the grill you love that grill .", '*CHI: will you do that again ?', '*MOT: what darling ?', '*CHI: will you cook this xxx tomorrow night ?', "*MOT: tomorrow night you're gonna go to your daddy's house .", "*CHI: hey don't do that xxx .", '*MOT: excuse me ?', "*CHI: you're not cooking good .", "*MOT: I'm not cooking good ?", '*MOT: I thought you loved that stuff xxx .', '*CHI: xxx &-um (.) nope (be)cause &-um (be)cause you pushed Nelson .', "*MOT: well honey he jumped up on the dinner table he's just being a bad kitty tonight I gave him a whole bunch of treats and he's not letting us eat our dinner .", '*CHI: but he just wanted to see us .', '*MOT: I know [!] &=laughingly but I <guess he has> [>] +/.', '*CHI: <and he just> [<] wanted to eat everything .', "*MOT: I know [!] he wants to eat everything that's why he got pushed on the floor .", '*CHI: why ?', "*MOT: and if he wants to see us I guess he'll just have_to sit on the floor and look up .", '*CHI: nope xxx .', "*MOT: that's nice of you to be so concerned about him .", "*CHI: (..) <I'm> [/] <I'm> [/] I'm a good son .", "*MOT: you're a wonderful son .", "*MOT: you're the best little guy in the whole wide world .", '*CHI: I xxx it .', '*MOT: yeah you all done ?', '*MOT: gonna have anymore potatoes ?', "*CHI: I'm gonna have a cupcake .", '*MOT: okay you done with your supper ?', '*CHI: mhm .', "*MOT: well you're <a good boy> [>] .", "*CHI: <and I> [<] [/] and I'm gonna eat my cupcake and I blow myself up .", '*MOT: you do ?', '*MOT: let me feel your muscle .', '*MOT: &=gasps big and strong !', '*CHI: mommy ?', '*MOT: what ?', '*CHI: do you wanna feel my other one ?', '*MOT: yes .', "*MOT: &=gasps that one's big and strong too .", "*MOT: <that's> [//] that supper goes right to those muscles .", "*CHI: <it's> [//] <and &-um> [//] and the muscles xxx punch [!] you into the house .", '*MOT: well muscles are more important they help me in lifting things and keeping healthy .', '*CHI: hm: ?', "*MOT: we don't think about punching .", "*MOT: I know you see punching a lot on T@l V@l but you still don't punch .", '*CHI: mommy\xe2\x86\x91 watch !', '*CHI: &=grunts .', '*MOT: wow [!] you are [!] strong honey .', '*MOT: wow .', '*CHI: and watch how hard I can put this down .', '*MOT: okay be careful please put it down very gently .', '*MOT: thank you .', '*CHI: watch I can pick the big one up .', '*MOT: okay ready for your cupcake ?', '*CHI: you wanna see if I can pick the big one up ?', "*MOT: &-uh no I'd rather not see if you can pick the big one up honey .", '*MOT: Chi !', '*CHI: watch this [=! grunting with effort] .', '*MOT: please .', '*MOT: excuse me .', '*CHI: &=grunting see I can !', "*MOT: oh yes you're so strong .", '*MOT: I knew you could do that .', '*MOT: okay .', '*MOT: <thank you> [>] .', '*CHI: see [<] I know that I can too .', '*MOT: alrighty [: right] .', "*CHI: (be)cause I'm xxx lift the xxx like He_man !", '*MOT: yeah just like He_man .', '*CHI: uhhuh .', "*MOT: that's right .", '*CHI: when &-um when I grow up &-um xxx He_man xxx .', "*CHI: and when I grow up I'm gonna +/.", '*MOT: honey start fixing that the way it was .', '*CHI: xxx .', '*MOT: your what ?', '*CHI: my xxx .', '*MOT: your doll ?', '*CHI: no my golf xxx where I play golf .', '*MOT: oh your golf !', '*CHI: mhm .', "*MOT: okay I'm sorry .", '*MOT: &=chuckles .', "*MOT: oh did you notice that's running ?", '*MOT: okay .', "*MOT: it's not anymore .", '*MOT: say bye !', '*CHI: bye !']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//tommt1.cha
HSLLD/HV1/MT//joemt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: hot (12.) .', '*MOT: what do you want to drink ?', '*CHI: milk [!] .', '*CHI: <&m> [//] juice .', '*MOT: okay .', '*FAT: milk .', '*MOT: milk juice milk .', '*CHI: milk juice milk zzz .', '*FAT: milk juice milk .', '*CHI: milk (.) juice (.) milk juice milk juice milk juice milk juice milk .', '*MOT: oops .', '*MOT: xxx Chi wants xxx <xxx supper> [>] .', '*CHI: <no juice> [<] .', "*MOT: I shouldn't have asked you .", "*MOT: I shouldn't have offered .", '*CHI: all done .', '*MOT: oh_my_goodness !', '*MOT: well you eat some supper now before I give you more okay (11.) ?', "*CHI: Mama I can't see the T@l V@l .", '*MOT: oh God xxx terrible huh ?', "*CHI: Cal's by the T@l V@l that's not fair .", '*MOT: I know [?] .', "*MOT: I'll go turn it off because Chi's missing it anyway .", '*CHI: no .', "*FAT: we'll watch it after <you eat> [>] .", "*MOT: <you won't miss it> [<] !", '*FAT: and then you can turn it right back on .', "*FAT: it doesn't go over it's a tape .", '*CHI: we gonna miss it on xxx or it stay on all day .', "*FAT: no you'll see it right where she shut it off it'll go right <back on> [>] .", "*MOT: <that's the> [<] good thing about [!] it .", "*CHI: yeah (.) Chi because <Mama's> [>] +/.", "*MOT: <you don't> [<] miss any .", '*MOT: if you have_to go out you just turn it off and when you come back you pick up from where it was on before .', '*CHI: yeah .', "*FAT: I'll tell you this xxx .", '*MOT: xxx alright (.) .', "*MOT: I don't believe May's not home .", '*MOT: should go chasing after her .', '*CHI: I put the medicine there because I have_to xxx .', '*FAT: is Jessie coming back <there with her> [>] ?', '*MOT: xxx [<] .', "*MOT: well Jessie's mother was gonna either pick her up here or at the park .", '*MOT: and &-uh she was gonna pick her up at five thirty .', "*MOT: so I imagine her mom's gonna give May a ride home and I imagine she must be picking her up about now otherwise it's all screwed up (.) .", '*MOT: xxx have_to have a talk with her about not coming home .', "*MOT: she doesn't have a watch on but still an hour's a big difference from a half an hour .", '*FAT: what ?', '*MOT: I told her I was there at quarter of five and I said come home at five [///] I mean in a half an hour .', "*FAT: yeah well she don't know a half hour .", '*FAT: she ought_to carry a watch around with her .', '*MOT: she has a watch .', '*MOT: Chi !', '*MOT: you like it (.) ?', '*MOT: is it your favorite ?', '*MOT: huh ?', '*CHI: more milk (.) .', '*MOT: hm: .', '*MOT: say can I have more milk please .', '*CHI: can I have more milk please .', '*MOT: xxx .', '*CHI: whoop .', '*CHI: xxx .', '*MOT: boy I think I gave you guys too much .', '*MOT: I hope you can eat that all .', "*MOT: that's good for you you know .", '*MOT: you gonna try to eat it all up ?', '*CHI: zzz .', '*CHI: yeah .', "*CHI: I don't like the xxx ones .", '*CHI: the xxx .', '*MOT: the what ?', '*MOT: the <shells [!]> [>] .', '*CHI: xxx [<] <&th> [/] these ones right here .', '*CHI: <just like the shells> [>] .', '*MOT: xxx [<] .', "*SIS: xxx just a quick glass of water and we're gonna go back .", '*SIS: xxx .', "*MOT: yeah &-um what [//] what's this business of an hour ?", '*MOT: I said an half an hour .', '*SIS: <well we> [//] <I had to> [//] we [//] <ready to> [/] ready to pick her up and what the heck is xxx stuff .', "*MOT: that's that coffee I made by mistake .", '*SIS: shoot !', '*SIS: this dumb [?] coffee mix .', '*SIS: hold on .', "*MOT: there's &-um fruit punch in the yellow jug (10.) .", '*CHI: little milk ?', '*CHI: milk Mama ?', "*MOT: May go [/] go wash up and I'll get your plate ready .", '*SIS: okay let me drink this .', '*MOT: here (.) .', '*CHI: Chi not eating .', '*JES: bye !', '*CHI: bye [>] !', '*MOT: <bye Jessie> [<] .', '*MOT: you want that [>] ?', "*MOT: I'll get it for you .", "*FAT: <what's that> [<] ?", "*FAT: what's that ?", '*MOT: spaghetti on his shirt .', '*CHI: zzz .', '*CHI: try to eat my belly button .', '*CHI: zzz .', "*MOT: come on you guys don't fool at the table !", '*CHI: zzz .', '*FAT: hey !', '*CHI: zzz .', '*FAT: stop it !', '*FAT: zzz .', "*SIS: you didn't buy xxx diet soda ?", '*MOT: yes I did !', '*MOT: behind the peaches .', '*CHI: look at Chi I did on your arm .', '*CHI: right there .', '*CHI: Mama !', '*CHI: &-uh my belly hurts .', '*MOT: well then go slower .', "*CHI: no I don't wan(t) (t)a .", '*MOT: well take a little rest (.) and then eat more .', "*CHI: I don't want it !", '*CHI: xxx [>] .', "*MOT: xxx [<] because you drank all of that milk so fast that's probably why .", '*CHI: you drank all that milk [>] up .', '*CHI: no [<] .', '*SIS: thank you .', "*MOT: you're welcome .", '*CHI: zzz .', '*MOT: is it hot ?', '*MOT: is it good ?', '*SIS: mhm .', "*MOT: that's on May's diet .", '*CHI: yep .', "*SIS: I'm being good .", '*SIS: xxx favorite thing was shells [!] (9.) .', '*CHI: whoa !', '*CHI: those shells are +/.', '*MOT: here have a tomato .', '*CHI: <Mama> [>] !', '*MOT: <no no no> [<] no no .', '*CHI: <&wh> [/] where you found these ?', '*MOT: at the grocery store .', '*MOT: zzz .', '*CHI: no what .', '*MOT: they fit on your thumb huh ?', '*CHI: yeah .', '*CHI: like on me too but +...', '*MOT: fit on your tongue .', "*MOT: oh good well it's a good thing they fit on your tongue .", '*CHI: zzz .', '*CHI: look I want xxx .', '*MOT: you what ?', '*CHI: I want a bowl .', '*MOT: oh .', "*MOT: don't talk with food in your mouth .", '*CHI: zzz .', '*CHI: give me some xxx .', '*MOT: you want more right ?', '*MOT: another tomato ?', '*MOT: cucumber ?', '*CHI: no .', '*CHI: more cucum(ber) .', '*MOT: some lettuce .', '*MOT: lettuce ?', '*CHI: I like lettuce !', '*MOT: alright hold on .', '*CHI: <the doctor come [?]> [>] .', "*SIS: <there's a whole bowl> [<] with two tomatoes and a piece of lettuce .", '*CHI: ah yum yum .', "*MOT: don't use your hands .", '*MOT: you gonna &-um +...', '*MOT: hold on .', '*MOT: Chi do you want lettuce ?', '*CHI: I [!] do it .', '*MOT: and do you want tomatoes too ?', '*CHI: no just lettuce .', '*CHI: no (to)matoes !', '*MOT: alright !', "*CHI: that's all .", "*CHI: that's all that's all that all .", "*CHI: that's all (.) .", '*CHI: I love you .', "*MOT: I don't have any diet dressing for you May .", '*CHI: why ?', '*MOT: what is that ?', "*MOT: oh you can't have dressing <on your> [>] salad ?", '*SIS: uhuh [<] .', '*SIS: a [<] ?', '*SIS: put your finger [?] dressing .', '*MOT: yeah but it defeats the purpose to +...', '*SIS: there was one page in here .', '*MOT: huh ?', '*SIS: there was one piece of paper in here with the diet .', "*MOT: it's right there .", '*SIS: there .', '*CHI: zzz .', '*CHI: like that .', "*CHI: I don't like that one Mom .", "*CHI: you didn't you put <&th> [/] &th xxx .", "*CHI: I don't want it .", "*MOT: oh you didn't want the dressing ?", "*CHI: no I didn't <wanted it> [>] .", '*MOT: <you just> [<] want the lettuce ?', '*CHI: yeah .', '*CHI: <&w> [/] <&w> [/] <with salad> [>] .', '*MOT: <oh come on> [<] !', '*CHI: with salad .', '*MOT: sit !', '*CHI: with salad with some more (to)matoes .', '*MOT: okay [>] !', '*CHI: no [<] !', '*CHI: no no no no .', '*CHI: no !', '*CHI: one more .', '*CHI: two mores@c .', '*CHI: xxx .', '*CHI: xxx lettuce lettuce .', '*MOT: you hurt me .', "*CHI: I'm sorry .", '*CHI: I want two more the lettuce .', '*MOT: okay Chi ?', '*MOT: okay Chi ?', '*MOT: you like the lettuce ?', '*MOT: you like a little bunny rabbit ?', '*CHI: no zzz .', '*MOT: you have plenty of dressing there .', '*CHI: I know that but I want more (.) .', "*CHI: <I>[/] <I> [/] I don't like that on +...", '*MOT: oh you got it all over you (.) !', "*CHI: I'm a fat cow !", "*MOT: that's sweet and spicy .", '*CHI: and spicy yes .', '*CHI: spicy for your tongue ?', '*MOT: little bit .', '*CHI: and this is spicy .', '*SIS: do you know where the other part of the &-um paper of my diet is ?', '*MOT: xxx .', '*SIS: xxx .', '*MOT: xxx full ?', '*SIS: yeah I had that little piece xxx my lunch and when I got_to my drink and when I got_to the end of the salad I was full .', '*MOT: your stomach is shrinking .', '*SIS: I know .', "*MOT: shrinking on the inside and then after it shrinks on the inside it'll shrink on the outside .", '*SIS: good !', "*CHI: I'm all done !", "*CHI: I don't want this .", "*CHI: I don't want this .", '*MOT: yes you can eat some more .', '*CHI: hunhunh .', "*CHI: I don't wan(t) (t)a .", "*MOT: you did alright but couldn't you eat a little more ?", '*CHI: no .', '*MOT: a couple more bites (.) ?', "*CHI: I don't want more .", '*CHI: could I <have a> [>] +/.', '*MOT: <alright> [<] Chi go wash up then .', "*CHI: I don't want mine Ma I don't want it .", "*CHI: Chi you <didn't eat salad> [>] .", '*MOT: <this is a big tomato> [<] .', '*CHI: I did a <I eat the> [/] <I eat the> [//] I eat that right here .', '*CHI: xxx .', '*CHI: <I eat that right there> [>] .', '*MOT: <xxx you have_to eat some more> [<] .', '*CHI: xxx no !', '*CHI: yeah [>] !', '*CHI: <no but I have> [<] a belly ache !', "*MOT: why don't you go blow your nose .", "*CHI: I'm all done !", "*CHI: no you're not .", '*CHI: yes am !', '*MOT: Chi you stay out of this .', "*MOT: Chi go blow your nose and we'll see maybe your belly will have more room after that .", '*CHI: no !', '*CHI: no !', "*SIS: you haven't eat anything .", '*MOT: did you wash your face <Chi> [>] ?', '*CHI: <yeah I did [!]> [<] I eat one right here and one right there and <one right here> [>] .', '*SIS: xxx [<] I got xxx eat on your face Jak .', '*SIS: one right here one right here and one right here .', '*CHI: no .', '*CHI: one right here and one right here and one right here !', '*MOT: how many does that make ?', '*CHI: three .', "*CHI: that's all [>] .", '*MOT: <how about> [<] three more then ?', "*CHI: don't wan(t) (t)a !", '*CHI: one more !', '*CHI: one more !', '*MOT: <three more> [>] .', '*CHI: <one more> [<] !', '*MOT: one more then go blow your nose and come back and have three more .', '*CHI: no .', '*CHI: zzz .', '*CHI: pretend crying .', '*MOT: Jak !', '*MOT: alright eat one more and go blow your nose .', "*CHI: xxx I don't want to eat no more .", "*MOT: well then I'm gonna save it for lunch tomorrow .", '*CHI: okay .', '*MOT: wash your hands and face too .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//joemt1.cha
HSLLD/HV1/MT//emimt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*SIS: zzz .', '*MOT: <okay guys> [>] .', '*BR2: xxx [<] .', '*MOT: huh ?', '*BR2: xxx .', '*MOT: no .', "*MOT: he didn't no .", '*BR2: why are you xxx ?', '*MOT: ouch !', "*MOT: for &-um (be)cause we have_to for Emily's thing .", '*MOT: well you [/] you know how the people were here the other day ?', '*MOT: did I tell you about them ?', '*BR1: no [>] .', '*BR3: nope [<] .', "*MOT: oh well <they're doing a study on language> [>] .", '*SIS: zzz [<] .', "*CHI: it's on language .", "*MOT: on Chi's [!] language .", '*CHI: yep .', '*MOT: what do you need ?', '*MOT: xxx .', "*MOT: that's what I said they're doing a study on xxx .", '*CHI: what do they have ?', "*CHI: that's <on the> [//] on that yellow thing ?", '*MOT: yup .', '*MOT: they had toys huh ?', '*CHI: what yellow things ?', '*BR2: Ma look at <Heather> [>] !', "*MOT: <I don't know wha(t)> [<] [///] oh [!] no [!] Heather !", '*MOT: what yellow thing ?', "*MOT: I have no idea what you're talking about .", '*CHI: the yellow thing that &-um (.) Susan had .', '*MOT: that that girl Susan had ?', '*CHI: yeah .', '*MOT: what yellow thing ?', '*MOT: oh the cups ?', '*CHI: no [>] !', '*MOT: <you mean> [<] the cups and +...', '*BR2: xxx .', "*MOT: I don't know what [!] yellow thing you're talking about Emily .", '*CHI: ashtray .', '*SIS: zzz .', '*SIS: zzz [>] .', '*MOT: <Susan who> [<] ?', '*CHI: <Susan> [>] !', '*MOT: <not that lady> [<] that came to visit you the other day with that lady Jean where we played toys ?', '*CHI: <oh yeah> [>] .', '*MOT: not [<] her[>] ?', '*CHI: <Jean> [<] .', '*CHI: yeah Jean .', "*MOT: I don't remember yellow things .", '*BR2: xxx .', '*MOT: that she had .', '*MOT: do you remember a yellow thing that she had ?', '*CHI: no .', "*MOT: you don't remember a yellow thing either ?", '*CHI: zzz .', '*CHI: &a:h .', '*MOT: your mouth is white .', '*MOT: did you have fun ?', "*MOT: it's very hot Pat !", '*MOT: very hot .', "*BR2: where's the xxx Mom .", '*MOT: here .', '*MOT: butter .', '*BR2: yup .', '*BR2: xxx .', '*MOT: Heather .', '*MOT: Heather must like to eat off the &-um table more than she likes to eat off the dish .', '*BR2: xxx .', "*BR2: she's eating Emily's !", "*BR1: she's eating Emily's .", "*BR1: Ma she's eating Emily's .", '*BR1: xxx [>] .', '*MOT: <eat your own baby> [<] !', '*BR2: haha [>] .', '*BR1: haha [<] .', '*CHI: no she can eat mine too .', '*MOT: no [!] (.) .', "*MOT: <she can't> [>] .", '*BR2: xxx [>] .', '*BR3: <Ma> [<] (.) !', "*BR3: Ma I can't <eat xxx> [>] .", '*CHI: <Mom> [<] !', '*CHI: <you forgot> [<][>] !', '*MOT: no [<] .', '*MOT: there is no more .', '*BR3: xxx [>] .', '*MOT: <do you want> [<] some broccoli ?', '*BR3: no .', '*BR3: I hate broccoli .', '*CHI: <Mom> [>] !', '*SIS: zzz [<][>] .', '*BR2: <Mom> [<] !', '*BR2: <any more porkchops> [<] ?', '*MOT: no .', '*BR2: but I only got one .', '*BR2: Mom I only got one pork chop .', '*CHI: xxx [>] .', '*BR2: <and I was starting> [<] to love them too mom [>] .', '*SIS: <baba@b> [<][>] .', '*MOT: <alright xxx> [<] .', "*MOT: let's see if Dad wants any more .", "*MOT: there's one left xxx .", '*MOT: do you want another porkchop ?', '*FAT: xxx .', "*MOT: no there isn't xxx .", "*MOT: there's only one left and two kids want one .", '*FAT: xxx .', '*MOT: alright guys .', "*MOT: this is what we're gonna have_to do .", '*CHI: what ?', '*BR2: hot .', "*MOT: it's very hot .", '*CHI: what ?', '*BR2: I knew it Mom .', "*MOT: there's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .", '*CHI: <Mom> [<] !', '*CHI: <Heather gave me her> [<] spoon .', '*MOT: <she did> [>] ?', '*BR2: <xxx corn on the cob> [<] ?', "*MOT: and she's using your fork ?", '*CHI: no this is mine .', '*MOT: whose fork is she using ?', "*BR1: Pat's .", '*BR2: nope .', "*BR2: mine's right there (.) .", '*CHI: oh guess I am too [!] .', '*MOT: I guess so .', '*BR3: Mom [!] .', '*MOT: what ?', '*BR3: when I stuck my tooth on it (.) it burned [!] .', '*MOT: well wait until it cools down .', "*BR3: Ma I like it when it's hot .", '*MOT: yeah .', '*MOT: wait (un)til it cools down a little Brian .', '*MOT: xxx .', '*CHI: Mom !', '*CHI: you forgot to cut it !', '*MOT: oh .', "*MOT: you're right !", '*SIS: zzz !', '*MOT: no [!] leave it !', '*MOT: Heather [!] +...', '*CHI: can I have some more applesauce [>] ?', '*MOT: <did Heather eat> [<] her porkchops ?', "*BR2: I don't know .", '*MOT: where is it ?', '*BR2: xxx [>] .', '*SIS: <zzz zzz> [<] .', '*MOT: here .', '*MOT: it this what you want .', '*MOT: you like porkchops ?', '*SIS: zzz .', '*BR2: do you want this one ?', '*BR2: xxx .', '*BR3: yeah .', '*MOT: oh you want the corn on the cob .', '*MOT: oh .', "*MOT: you're too little to eat corn on the cob Heather .", '*BR2: haha .', '*MOT: no .', '*MOT: she wants the porkchops .', '*BR2: why ?', '*BR2: why ?', '*MOT: why ?', '*MOT: Pat .', '*MOT: grab me some napkins over there please .', '*BR2: where ?', "*BR1: give me some more while you're up .", '*CHI: up there .', "*CHI: it's up there .", "*CHI: they're up there .", "*CHI: <they're up there> [>] .", '*BR2: nobody [<] takes my corn Heather .', "*CHI: &a:h they're up there !", '*CHI: <the napkins are> [>] up there .', '*BR2: xxx [<] .', '*BR2: paper napkins ?', '*CHI: heehee .', '*MOT: here ?', '*CHI: heehee .', '*MOT: Heather .', '*MOT: on your bum !', '*BR2: xxx ?', '*BR1: yeah [>] .', '*MOT: <good girl>[<] .', '*CHI: the napkins ?', '*BR2: a whole year supply Mommy .', '*MOT: uhhuh .', "*BR2: <there's a year> [//] a whole year supply .", '*MOT: oh thank you .', '*BR1: xxx .', '*BR2: water Mommy .', '*BR2: Mommy I have_to xxx .', '*BR3: I need it [!] .', '*MOT: hey [!] .', '*BR1: is there any more corn on the cob ?', '*MOT: no .', "*MOT: there's more broccoli .", '*MOT: <eat broccoli> [>] .', "*BR1: <I don't want broccoli> [<] .", "*MOT: broccoli's good for you .", '*BR3: xxx .', "*BR1: what's dessert ?", '*MOT: what did he say ?', '*MOT: honey+dew .', '*BR2: honey+dew [>] ?', '*BR1: <Ma> [<] .', '*BR1: <Ma> [<] .', '*BR1: xxx [<] .', '*BR1: <fruit salad> [<] ?', '*MOT: alright .', "*MOT: I don't have enough stuff for a fruit salad .", '*CHI: Mom !', '*MOT: yeah [>] ?', '*CHI: <I want> [<] more applesauce .', '*BR2: Mom ?', '*BR2: what about the Fudgesicles [>] ?', "*MOT: <eat what's> [<] in your xxx first [>] .", '*BR2: <you said> [<] we were gonna have Fudgesicles .', '*MOT: yup .', '*MOT: you can have Fudgesicles too .', '*MOT: is it hot ?', '*CHI: no [>] .', '*MOT: <I have> [<] a corn for you <if you want> [>] .', '*FAT: no [<] .', '*MOT: thank you .', '*CHI: Daddy you were on here ?', "*MOT: you don't want corn on the cob ?", '*CHI: Daddy you were on here ?', '*CHI: on the radio ?', '*MOT: on your player .', '*CHI: he was on the radio .', '*BR2: a long time ago I [!] was Amanda .', '*CHI: I know .', '*CHI: can I have some more applesauce .', '*CHI: <it tastes the best> [>] .', '*BR1: <while you were on the> [<] [/] while you were on the xxx [>] +/.', '*MOT: <finish everything> [<] in your dish .', '*CHI: I ate <my broccoli> [>] .', '*BR2: mommy [<] ?', '*BR2: Mom !', '*BR2: Mom !', '*MOT: what [>] ?', '*BR2: are [<] we going to &-um (.) radio ?', "*BR1: we're gonna go out and make a tape .", '*BR1: all of us could make the tape ?', '*MOT: yup .', '*BR1: <see > [>] ?', '*BR2: <you sure> [<] ?', '*BR1: yup .', '*BR1: xxx [>] .', '*BR2: xxx [<] .', '*BR2: this summer ?', '*MOT: Christmas time .', '*BR2: you got them over the summer .', '*MOT: no this year .', '*MOT: guys hurry up .', '*MOT: we got_to go soon .', '*BR2: where ?', '*BR1: what time ?', '*MOT: I have_to leave in twenty minutes .', '*CHI: where[>] ?', '*MOT: <and I have> [<] to take a shower yet .', "*MOT: we're going to church !", '*BR1: twenty minutes ?', '*SIS: zzz [>] !', '*SIS: zzz [>] !', '*MOT: uhhum [<] .', '*MOT: <hurry up> [<] .', "*BR1: I don't think we're going to make it Mom .", '*MOT: well hurry up !', '*BR3: can I have some corn ?', '*BR2: I asked first .', '*BR3: why ?', '*BR3: why [>] ?', '*BR2: <I asked> [<] first [!] Brian .', '*BR3: xxx ?', "*BR3: I'm coming (.) .", '*MOT: are you going to church ?', '*MOT: gi(ve) me the butter please .', '*CHI: I need the butter !', '*MOT: are you done eating ?', '*BR1: no .', '*BR1: can I have another one ?', '*MOT: another what ?', "*MOT: there's only one more corn on the cob and three of you guys .", '*BR1: can I have <half of it> [>] ?', '*MOT: <what do you want> [<] ?', '*MOT: you still have some in your dish Heather !', '*BR2: I asked first .', "*BR1: I'm having half of it .", '*BR2: I asked first .', '*MOT: &-uh guys !', "*MOT: nobody's gonna (be)cause we don't have time .", '*MOT: we have_to go .', "*MOT: you guys while I'm in the shower are cleaning off this table .", '*BR1: what about (.) &-um honey+dew ?', '*MOT: &-uh .', "*MOT: you're just gonna have_to wait until we come [///] &-uh .", '*MOT: you have the Fudgesicles .', '*MOT: xxx [>] .', '*CHI: <Ma> [<] !', '*BR2: xxx can I do it when we get home ?', "*MOT: it'll be ten o'clock .", '*BR2: I know .', '*MOT: when we get home [>] .', '*BR1: ten [<] ?', '*MOT: yeah .', '*MOT: &-uh (.) if you guys want you can stay here and play with your friends .', '*BR1: mom <can I have> [/] can I have <the ice cream now> [>] .', '*MOT: <and stay out> [<] until like nine .', "*BR2: we're gonna be back [!] at ten ?", '*SIS: zzz .', '*CHI: what church are we going to ?', '*BR1: Parkway .', '*SIS: zzz !', '*MOT: what <do you want> [>] ?', '*BR2: <Mom> [<] Mom ?', '*MOT: what ?', '*MOT: what [>] ?', '*MOT: <eat this> [>] !', '*BR2: <do we have_to go upstairs> [<] ?', '*MOT: eat this .', '*BR1: no .', "*BR1: we don't go upstairs .", '*BR2: Mom .', '*BR2: do we go upstairs [>] ?', "*MOT: <I don't know> [<] !", "*MOT: you're gon(t)a [: going to] be with the baby+sitter .", '*MOT: this is a meeting .', '*MOT: this is not &-um +...', '*BR2: ketchup .', '*MOT: regular church .', '*CHI: Mommy I want some .', '*MOT: give her her spoon right now .', '*BR2: ketchup please Mom .', '*MOT: give her [///] Heather her spoon Emily !', '*MOT: use a fork !', "*CHI: where's my fork then [>] ?", "*MOT: <I don't know> [<] .", "*MOT: it's right here .", "*BR2: xxx Heather's [!] spoon .", '*CHI: no !', "*BR2: <I don't have a spoon> [>] .", '*MOT: <use that fork> [<] .', '*MOT: <I know I just> [>] gave it to her .', "*BR2: <I don't have a spoon> [<] .", '*BR2: salt and pepper Mom .', '*MOT: Freddy give me the salt please .', '*CHI: Ma I need the butter !', '*MOT: Emily .', "*MOT: where's the butter ?", "*MOT: where's the butter ?", '*MOT: <Chi> [>] .', '*CHI: <I> [<] +/.', "*MOT: you're not gon(t)a [: going to] be able to finish this corn .", "*MOT: why don't we save this corn for you for later ?", '*CHI: no !', '*MOT: yeah .', '*MOT: eat everything else <in your dish> [>] .', "*BR1: <I'll eat it> [<] .", '*MOT: no !', '*MOT: Freddy .', "*BR1: but I'm hungry [!] (.) .", '*BR3: Mom is my mouth bigger than yours ?', '*MOT: hm: ?', "*BR3: my mouth's bigger than yours ?", '*BR2: no .', "*MOT: I don't think so Pat (.) &-uh Brian .", "*BR2: I'm Pat not Brian .", '*BR2: Pat .', '*MOT: finish eating .', '*CHI: &a:h (.) !', '*CHI: Mom ?', '*CHI: is she xxx food .', '*CHI: haha .', "*CHI: she's taking my food !", "*BR3: don't let [!] her .", '*MOT: Heather !', "*BR1: I'm still hungry !", '*MOT: have potato salad .', '*BR1: I hate potato salad .', '*BR1: xxx .', '*MOT: xxx broccoli .', "*BR1: I don't like it .", '*BR2: a Fudgesicle !', '*SIS: zzz !', '*SIS: zzz !', '*CHI: Fudgesicle !', '*MOT: have more applesauce .', "*MOT: Emily don't do that to your chair .", '*BR1: Heather !', '*SIS: zzz !', '*BR3: wan(t) (t)a see how big my mouth is ?', '*MOT: no !', '*BR2: look [?] Brian .', '*MOT: keep [!] your mouth shut [!] when you have food in it .', "*MOT: If you open it again (.) you're going in your room .", '*BR1: xxx .', '*CHI: oh .', '*SIS: zzz (.) .', '*BR1: do you know what happens xxx ?', '*MOT: hm: ?', '*BR1: xxx .', '*CHI: zzz .', '*MOT: no if you guys are done +...', '*MOT: finish eating (.) &-um go get washed .', '*CHI: zzz .', "*BR1: what's the matter ?", "*BR2: I don't know .", '*BR1: xxx .', "*MOT: I can't help it if you hate half of what we got .", '*MOT: you have_to learn (.) to eat it .', '*BR1: <I always hate xxx> [>] .', '*BR2: xxx [<] .', '*BR2: washed again .', '*MOT: xxx [>] .', '*SIS: zzz [<] .', '*MOT: Heather what do you want ?', "*BR1: xxx [>] Brian's teasing xxx .", '*CHI: xxx [<] .', '*MOT: oh he is huh ?', "*MOT: didn't &-uh Tim just yell at somebody for doing that ?", "*BR1: I don't know .", '*SIS: zzz .', '*BR2: Mom !', '*BR2: xxx [>] .', '*SIS: zzz [<] .', '*MOT: hey !', '*BR1: I am not .', '*FAT: xxx did !', '*BR2: xxx .', '*MOT: alright guys .', '*BR1: ow .', '*MOT: Heather .', '*MOT: here .', '*SIS: zzz .', '*MOT: here give that to Heather .', "*MOT: alright Freddie if you're done please go get washed .", "*CHI: this is <Heather's plate> [>] .", '*MOT: xxx [<] .', '*MOT: one pork chop .', "*MOT: I'll [!] get it .", "*BR2: I'm gonna get more .", '*CHI: I want some water [>] !', '*MOT: xxx [<] .', "*CHI: this is Heather's plate .", "*BR2: and you're not close to her .", '*CHI: and this is xxx [>] +/.', '*BR1: <this is dirty> [<] anyway .', '*BR1: xxx the popsicle .', '*CHI: here Heather .', '*MOT: xxx here .', '*CHI: I want some more &-um (.) applesauce .', '*MOT: here .', '*CHI: good .', "*CHI: there's a lot more left .", '*MOT: Frank !', '*BR1: what ?', '*MOT: and [!] Pat and [!] Brian .', '*BR2: yeah ?', '*BR2: xxx .', "*BR2: you're gonna get dirty with the Fudgesicle anyway (.) .", '*BR2: xxx feel it .', '*BR1: xxx [>] .', '*MOT: xxx [<] (.) .', '*MOT: leave it alone Emily !', '*BR1: xxx this one .', '*MOT: <are you all done eating> [>] ?', '*CHI: xxx [<] yeah .', '*CHI: Mom I have_to get off .', "*MOT: it's on the counter (.) .", '*MOT: huh ?', '*MOT: alright .', '*MOT: get up .', '*MOT: get up .', '*MOT: go find clothes to wear .']
loading solution set
LINE NO ->  18
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  23
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  26
LINE NO ->  27
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  30
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  31
LINE NO ->  34
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  39
LINE NO ->  42
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  46
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  51
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0})
LINE NO ->  57
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  60
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  63
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  66
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  71
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  75
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  78
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  81
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  84
LINE NO ->  89
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  97
LINE NO ->  102
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453f2170>)
[('that', 'DT'), ('s', 'VBZ'), ('on', 'IN'), ('the', 'DT'), ('on', 'IN'), ('that', 'DT'), ('yellow', 'JJ'), ('thing', 'NN')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0})
LINE NO ->  108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  111
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  115
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fd5a70>)
[('what', 'WP'), ('yellow', 'JJ'), ('things', 'NNS')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  119
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  122
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  126
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453e3e60>)
[('what', 'WP'), ('yellow', 'JJ'), ('thing', 'NN')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  130
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  135
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94726a098>)
[('the', 'DT'), ('yellow', 'JJ'), ('thing', 'NN'), ('that', 'WDT'), ('um', 'JJ'), ('susan', 'NN'), ('had', 'VBD')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  139
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  146
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94728f710>)
[('what', 'WP'), ('yellow', 'JJ'), ('thing', 'NN')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  150
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  157
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  160
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  161
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453e37a0>)
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NN'), ('know', 'VBP'), ('what', 'WP'), ('yellow', 'JJ'), ('thing', 'NN'), ('you', 'PRP'), ('re', 'VBP'), ('talking', 'VBG'), ('about', 'IN'), ('emily', 'RB')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, -1: 1})
LINE NO ->  166
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  172
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  176
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  183
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, -1: 1})
LINE NO ->  191
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  194
LINE NO ->  198
LINE NO ->  201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  204
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94728f710>)
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('remember', 'VB'), ('yellow', 'JJ'), ('things', 'NNS')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  208
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  211
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472893f8>)
[('do', 'VB'), ('you', 'PRP'), ('remember', 'VB'), ('a', 'DT'), ('yellow', 'JJ'), ('thing', 'NN'), ('that', 'IN'), ('she', 'PRP'), ('had', 'VBD')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  218
LINE NO ->  221
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94728f2d8>)
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('remember', 'VB'), ('a', 'DT'), ('yellow', 'JJ'), ('thing', 'NN'), ('either', 'CC')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  231
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  232
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  237
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  242
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  246
LINE NO ->  249
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  253
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  256
butter
butter butter 499
[('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  259
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  262
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  263
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  266
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453d0e60>)
[('heather', 'RB'), ('must', 'MD'), ('like', 'VB'), ('to', 'TO'), ('eat', 'VB'), ('off', 'RP'), ('the', 'DT'), ('um', 'NN'), ('table', 'NN'), ('more', 'JJR'), ('than', 'IN'), ('she', 'PRP'), ('likes', 'VBZ'), ('to', 'TO'), ('eat', 'VB'), ('off', 'RP'), ('the', 'DT'), ('dish', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 1, 86: 1, 87: 1, 88: 1, 89: 0, 90: 0, 91: 0, -1: 1})
LINE NO ->  273
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  274
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  277
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  284
LINE NO ->  285
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453964d0>)
[('eat', 'VB'), ('your', 'PRP$'), ('own', 'JJ'), ('baby', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  288
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  291
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  294
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  297
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  303
LINE NO ->  304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  308
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  312
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  316
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  320
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  323
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  326
LINE NO ->  328
broccoli
broccoli broccoli 30
[('do', 'VBP'), ('you', 'PRP'), ('want', 'VB'), ('some', 'DT'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  331
LINE NO ->  334
broccoli
broccoli broccoli 30
[('i', 'JJ'), ('hate', 'VBP'), ('broccoli', 'NNS')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  338
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  341
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0})
LINE NO ->  345
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  349
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  352
LINE NO ->  355
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  358
pork
pork pork 541
[('mom', 'NN'), ('i', 'VBZ'), ('only', 'RB'), ('got', 'VBD'), ('one', 'CD'), ('pork', 'NN'), ('chop', 'NN')]
['pork']
('food -> ', [['pork', 'Pork Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  362
LINE NO ->  363
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0})
LINE NO ->  369
LINE NO ->  372
LINE NO ->  375
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  380
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  383
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  388
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  390
LINE NO ->  393
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  398
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  399
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  402
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  407
LINE NO ->  411
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  414
LINE NO ->  417
LINE NO ->  421
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  424
broccoli
broccoli broccoli 30
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946eed200>)
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['potato']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
potato salad
potato salad potato salad 143
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['potato', 'salad']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products'], ['potato salad', 'Vegetables and Vegetable Products']])
corn
corn corn 419
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS'), ('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('potato', 'JJ'), ('salad', 'NN'), ('and', 'CC'), ('there', 'EX'), ('is', 'VBZ'), ('uh', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products'], ['potato salad', 'Vegetables and Vegetable Products'], ['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 1, 94: 1, 95: 1, 96: 1, 97: 0, 98: 1, 99: 1, 100: 1, 101: 0, 102: 0, 103: 0})
LINE NO ->  431
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  434
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  437
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  441
corn
corn corn 419
[('xxx', 'JJ'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  444
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  449
LINE NO ->  452
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  456
LINE NO ->  459
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  462
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  465
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  469
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  472
LINE NO ->  475
LINE NO ->  478
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  483
LINE NO ->  486
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  491
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  494
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  499
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  500
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  503
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  506
LINE NO ->  509
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  512
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  516
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  519
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  522
applesauce
applesauce applesauce 76
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  526
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  529
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  532
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  535
LINE NO ->  536
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  540
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  543
LINE NO ->  546
LINE NO ->  549
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  554
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  557
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  558
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  562
corn
corn corn 419
[('oh', 'IN'), ('you', 'PRP'), ('want', 'VBP'), ('the', 'DT'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  568
LINE NO ->  572
corn
corn corn 419
[('you', 'PRP'), ('re', 'VBP'), ('too', 'RB'), ('little', 'JJ'), ('to', 'TO'), ('eat', 'VB'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN'), ('heather', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0})
LINE NO ->  578
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  581
LINE NO ->  585
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  588
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  591
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  594
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  598
LINE NO ->  601
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  606
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  609
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  614
LINE NO ->  617
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  620
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  623
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  626
corn
corn corn 419
[('nobody', 'NN'), ('takes', 'VBZ'), ('my', 'PRP$'), ('corn', 'NN'), ('heather', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  629
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  632
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  635
LINE NO ->  636
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  639
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  642
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  645
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  648
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  651
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  654
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  655
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  658
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  661
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  665
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0})
LINE NO ->  668
LINE NO ->  671
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  674
LINE NO ->  677
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  678
water
water water 18
[('water', 'NN'), ('mommy', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  681
LINE NO ->  684
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  687
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  690
corn
corn corn 419
[('is', 'VBZ'), ('there', 'EX'), ('any', 'DT'), ('more', 'JJR'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  695
LINE NO ->  699
broccoli
broccoli broccoli 30
[('there', 'RB'), ('s', 'VBZ'), ('more', 'JJR'), ('broccoli', 'NNS')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  702
broccoli
broccoli broccoli 30
[('eat', 'NN'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  705
broccoli
broccoli broccoli 30
[('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  708
broccoli
broccoli broccoli 30
[('broccoli', 'NN'), ('s', 'NN'), ('good', 'NN'), ('for', 'IN'), ('you', 'PRP')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  712
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  714
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fb4488>)
[('what', 'WP'), ('s', 'VBD'), ('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  717
LINE NO ->  720
honey
honey honey 304
[('honey', 'NN'), ('dew', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  723
honey
honey honey 304
[('honey', 'NN'), ('dew', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  726
LINE NO ->  729
LINE NO ->  732
LINE NO ->  733
fruit salad
fruit salad fruit salad 86
[('fruit', 'NN'), ('salad', 'NN')]
['fruit', 'salad']
('food -> ', [['fruit salad', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  736
LINE NO ->  739
fruit salad
fruit salad fruit salad 86
[('i', 'JJ'), ('don', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('enough', 'JJ'), ('stuff', 'NN'), ('for', 'IN'), ('a', 'DT'), ('fruit', 'NN'), ('salad', 'NN')]
['fruit', 'salad']
('food -> ', [['fruit salad', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  745
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  752
applesauce
applesauce applesauce 76
[('i', 'NN'), ('want', 'VBP'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  758
LINE NO ->  761
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  764
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  768
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  771
LINE NO ->  775
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  779
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  782
corn
corn corn 419
[('i', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('corn', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('if', 'IN'), ('you', 'PRP'), ('want', 'VBP')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  787
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  790
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  793
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  797
corn
corn corn 419
[('you', 'PRP'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  802
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  805
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  809
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  812
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  815
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  819
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  822
applesauce
applesauce applesauce 76
[('can', 'MD'), ('i', 'VB'), ('have', 'VB'), ('some', 'DT'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  826
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  829
LINE NO ->  832
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  835
broccoli
broccoli broccoli 30
[('i', 'NN'), ('ate', 'VBP'), ('my', 'PRP$'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  838
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  841
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  844
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  847
LINE NO ->  850
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  853
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  858
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  862
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  865
LINE NO ->  868
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  871
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  874
LINE NO ->  875
LINE NO ->  876
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  879
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  882
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  886
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  889
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  893
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  896
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  899
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  902
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  906
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  910
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0})
LINE NO ->  915
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  918
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  921
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  924
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  928
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  931
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  934
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  939
LINE NO ->  942
corn
corn corn 419
[('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('some', 'DT'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  945
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  948
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  951
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  954
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  958
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  959
LINE NO ->  962
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  965
butter
butter butter 499
[('gi', 'NN'), ('ve', 'IN'), ('me', 'PRP'), ('the', 'DT'), ('butter', 'NN'), ('please', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  968
butter
butter butter 499
[('i', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  971
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  974
LINE NO ->  977
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  980
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  983
corn
corn corn 419
[('there', 'RB'), ('s', 'VBZ'), ('only', 'RB'), ('one', 'CD'), ('more', 'JJR'), ('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN'), ('and', 'CC'), ('three', 'CD'), ('of', 'IN'), ('you', 'PRP'), ('guys', 'VBP')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  990
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  993
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  996
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  1001
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1004
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1007
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1010
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1014
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0})
LINE NO ->  1019
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1023
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94714d050>)
[('you', 'PRP'), ('guys', 'VBP'), ('while', 'IN'), ('i', 'JJ'), ('m', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('shower', 'NN'), ('are', 'VBP'), ('cleaning', 'VBG'), ('off', 'RP'), ('this', 'DT'), ('table', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 0, 67: 0, 68: 0, -1: 1})
LINE NO ->  1029
honey
honey honey 304
[('what', 'WP'), ('about', 'IN'), ('um', 'JJ'), ('honey', 'NN'), ('dew', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1033
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1034
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0})
LINE NO ->  1039
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1042
LINE NO ->  1043
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1047
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  1052
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1055
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1058
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1061
LINE NO ->  1064
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1068
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0})
LINE NO ->  1073
cream
cream cream 72
[('mom', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('now', 'RB')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('mom', 'NN'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('can', 'MD'), ('i', 'VB'), ('have', 'VBP'), ('the', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('now', 'RB')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0})
LINE NO ->  1077
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1080
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  1084
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1088
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1092
LINE NO ->  1095
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1099
LINE NO ->  1103
LINE NO ->  1106
LINE NO ->  1109
LINE NO ->  1112
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1115
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  1118
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  1121
LINE NO ->  1124
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1127
LINE NO ->  1131
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1134
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1137
baby
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fb4a28>)
[('you', 'PRP'), ('re', 'VBP'), ('gon', 'VB'), ('t', 'VB'), ('a', 'DT'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('with', 'IN'), ('the', 'DT'), ('baby', 'NN'), ('sitter', 'NN')]
['baby']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0})
LINE NO ->  1142
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1145
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1148
LINE NO ->  1151
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1155
LINE NO ->  1158
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1161
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1164
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0})
LINE NO ->  1167
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  1170
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1174
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  1177
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1183
LINE NO ->  1187
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1190
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1193
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1199
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1202
salt
salt salt 0
[('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN'), ('mom', 'NN')]
['salt']
('food -> ', [['salt', 'Spices and Herbs']])
pepper
pepper pepper 27
[('salt', 'NN'), ('and', 'CC'), ('pepper', 'NN'), ('mom', 'NN')]
['pepper']
('food -> ', [['salt', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1205
salt
salt salt 0
[('freddy', 'RB'), ('give', 'VB'), ('me', 'PRP'), ('the', 'DT'), ('salt', 'NN'), ('please', 'NN')]
['salt']
('food -> ', [['salt', 'Spices and Herbs']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  1208
butter
butter butter 499
[('ma', 'NN'), ('i', 'NNS'), ('need', 'VBP'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1211
LINE NO ->  1214
butter
butter butter 499
[('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1217
butter
butter butter 499
[('where', 'WRB'), ('s', 'PDT'), ('the', 'DT'), ('butter', 'NN')]
['butter']
('food -> ', [['butter', 'Fats and Oils']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  1220
LINE NO ->  1223
LINE NO ->  1227
corn
corn corn 419
[('you', 'PRP'), ('re', 'VBP'), ('not', 'RB'), ('gon', 'VB'), ('t', 'VB'), ('a', 'DT'), ('going', 'VBG'), ('to', 'TO'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('finish', 'VB'), ('this', 'DT'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, -1: 1})
LINE NO ->  1232
corn
corn corn 419
[('why', 'WRB'), ('don', 'JJ'), ('t', 'NN'), ('we', 'PRP'), ('save', 'VBP'), ('this', 'DT'), ('corn', 'NN'), ('for', 'IN'), ('you', 'PRP'), ('for', 'IN'), ('later', 'JJR')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0})
LINE NO ->  1238
LINE NO ->  1241
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1244
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0})
LINE NO ->  1247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  1250
LINE NO ->  1254
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1258
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  1261
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1266
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1269
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  1272
LINE NO ->  1275
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1278
LINE NO ->  1281
LINE NO ->  1284
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1287
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1288
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1292
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1295
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1298
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  1301
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  1304
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1307
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1310
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94714d488>)
[('have', 'VB'), ('potato', 'NN'), ('salad', 'NN')]
['potato']
('food -> ', [])
potato salad
potato salad potato salad 143
[('have', 'VB'), ('potato', 'NN'), ('salad', 'NN')]
['potato', 'salad']
('food -> ', [['potato salad', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1313
potato
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94726a098>)
[('i', 'JJ'), ('hate', 'VBP'), ('potato', 'NN'), ('salad', 'NN')]
['potato']
('food -> ', [])
potato salad
potato salad potato salad 143
[('i', 'JJ'), ('hate', 'VBP'), ('potato', 'NN'), ('salad', 'NN')]
['potato', 'salad']
('food -> ', [['potato salad', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1316
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1317
broccoli
broccoli broccoli 30
[('xxx', 'NN'), ('broccoli', 'NN')]
['broccoli']
('food -> ', [['broccoli', 'Vegetables and Vegetable Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1320
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1323
LINE NO ->  1326
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1329
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1333
LINE NO ->  1336
applesauce
applesauce applesauce 76
[('have', 'VB'), ('more', 'JJR'), ('applesauce', 'NNS')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1339
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  1344
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1347
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1351
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  1356
LINE NO ->  1359
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1362
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  1368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, -1: 1})
LINE NO ->  1373
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1374
LINE NO ->  1377
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1381
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1384
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1387
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1388
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1392
LINE NO ->  1395
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0})
LINE NO ->  1398
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1402
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1405
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1408
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1409
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  1414
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1417
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1420
LINE NO ->  1421
LINE NO ->  1424
LINE NO ->  1425
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1429
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  1432
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  1435
LINE NO ->  1436
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1439
LINE NO ->  1444
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1447
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1451
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1454
LINE NO ->  1455
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1459
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1462
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1465
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0})
LINE NO ->  1468
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1469
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1472
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  1476
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  1479
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1482
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1486
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1489
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0})
LINE NO ->  1494
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1497
LINE NO ->  1498
pork
pork pork 541
[('one', 'CD'), ('pork', 'NN'), ('chop', 'NN')]
['pork']
('food -> ', [['pork', 'Pork Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1501
LINE NO ->  1504
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  1507
water
water water 18
[('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('water', 'NN')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1510
LINE NO ->  1511
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1514
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1521
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1524
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1527
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1530
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1533
applesauce
applesauce applesauce 76
[('i', 'NN'), ('want', 'VBP'), ('some', 'DT'), ('more', 'RBR'), ('um', 'JJ'), ('applesauce', 'NN')]
['applesauce']
('food -> ', [['applesauce', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1536
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1539
LINE NO ->  1543
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1546
LINE NO ->  1549
LINE NO ->  1552
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  1555
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  1559
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1560
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  1565
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1568
LINE NO ->  1569
LINE NO ->  1570
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1574
LINE NO ->  1577
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  1580
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  1583
LINE NO ->  1586
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1589
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  1593
LINE NO ->  1596
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1599
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1602
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
loading solution set
calculating
set([(1324, (8, 18)), (1218, (18, 24)), (706, (20, 28)), (1534, (32, 42)), (966, (20, 26)), (823, (27, 37)), (523, (27, 37)), (335, (13, 21)), (1334, (6, 16)), (765, (40, 51)), (1203, (6, 10)), (772, (19, 30)), (1508, (18, 23)), (425, (19, 27)), (627, (26, 30)), (691, (24, 39)), (740, (38, 49)), (586, (20, 29)), (783, (21, 25)), (425, (81, 96)), (721, (6, 15)), (1228, (61, 65)), (984, (28, 43)), (700, (19, 27)), (1337, (16, 26)), (759, (21, 32)), (798, (21, 36)), (1074, (43, 52)), (442, (11, 26)), (709, (6, 14)), (527, (32, 41)), (384, (26, 34)), (734, (7, 18)), (359, (25, 34)), (573, (31, 46)), (563, (22, 37)), (969, (17, 23)), (943, (22, 26)), (724, (6, 15)), (836, (16, 24)), (1030, (26, 35)), (1206, (25, 29)), (1311, (11, 23)), (679, (6, 11)), (350, (16, 25)), (1203, (15, 21)), (703, (11, 19)), (257, (6, 12)), (1314, (13, 25)), (329, (29, 37)), (1040, (19, 30)), (1215, (18, 24)), (1499, (10, 19)), (425, (45, 57)), (1149, (6, 13)), (753, (24, 34)), (1525, (14, 22)), (1318, (10, 18)), (1561, (38, 48)), (547, (15, 24)), (1233, (29, 33)), (1209, (20, 26))])
[((257, (6, 12)), '*MOT:\tbutter .\n'), ((329, (29, 37)), '*MOT:\t<do you want> [<] some broccoli ?\n'), ((335, (13, 21)), '*BR3:\tI hate broccoli .\n'), ((350, (16, 25)), '*BR2:\t<any more porkchops> [<] ?\n'), ((359, (25, 34)), '*BR2:\tMom I only got one pork chop .\n'), ((384, (26, 34)), '*MOT:\tdo you want another porkchop ?\n'), ((425, (19, 27)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (45, 57)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (81, 96)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((442, (11, 26)), '*BR2:\t<xxx corn on the cob> [<] ?\n'), ((523, (27, 37)), '*CHI:\tcan I have some more applesauce [>] ?\n'), ((527, (32, 41)), '*MOT:\t<did Heather eat> [<] her porkchops ?\n'), ((547, (15, 24)), '*MOT:\tyou like porkchops ?\n'), ((563, (22, 37)), '*MOT:\toh you want the corn on the cob .\n'), ((573, (31, 46)), "*MOT:\tyou're too little to eat corn on the cob Heather .\n"), ((586, (20, 29)), '*MOT:\tshe wants the porkchops .\n'), ((627, (26, 30)), '*BR2:\tnobody [<] takes my corn Heather .\n'), ((679, (6, 11)), '*BR2:\twater Mommy .\n'), ((691, (24, 39)), '*BR1:\tis there any more corn on the cob ?\n'), ((700, (19, 27)), "*MOT:\tthere's more broccoli .\n"), ((703, (11, 19)), '*MOT:\t<eat broccoli> [>] .\n'), ((706, (20, 28)), "*BR1:\t<I don't want broccoli> [<] .\n"), ((709, (6, 14)), "*MOT:\tbroccoli's good for you .\n"), ((721, (6, 15)), '*MOT:\thoney+dew .\n'), ((724, (6, 15)), '*BR2:\thoney+dew [>] ?\n'), ((734, (7, 18)), '*BR1:\t<fruit salad> [<] ?\n'), ((740, (38, 49)), "*MOT:\tI don't have enough stuff for a fruit salad .\n"), ((753, (24, 34)), '*CHI:\t<I want> [<] more applesauce .\n'), ((759, (21, 32)), '*BR2:\twhat about the Fudgesicles [>] ?\n'), ((765, (40, 51)), '*BR2:\t<you said> [<] we were gonna have Fudgesicles .\n'), ((772, (19, 30)), '*MOT:\tyou can have Fudgesicles too .\n'), ((783, (21, 25)), '*MOT:\t<I have> [<] a corn for you <if you want> [>] .\n'), ((798, (21, 36)), "*MOT:\tyou don't want corn on the cob ?\n"), ((823, (27, 37)), '*CHI:\tcan I have some more applesauce .\n'), ((836, (16, 24)), '*CHI:\tI ate <my broccoli> [>] .\n'), ((943, (22, 26)), '*BR3:\tcan I have some corn ?\n'), ((966, (20, 26)), '*MOT:\tgi(ve) me the butter please .\n'), ((969, (17, 23)), '*CHI:\tI need the butter !\n'), ((984, (28, 43)), "*MOT:\tthere's only one more corn on the cob and three of you guys .\n"), ((1030, (26, 35)), '*BR1:\twhat about (.) &-um honey+dew ?\n'), ((1040, (19, 30)), '*MOT:\tyou have the Fudgesicles .\n'), ((1074, (43, 52)), '*BR1:\tmom <can I have> [/] can I have <the ice cream now> [>] .\n'), ((1149, (6, 13)), '*BR2:\tketchup .\n'), ((1203, (6, 10)), '*BR2:\tsalt and pepper Mom .\n'), ((1203, (15, 21)), '*BR2:\tsalt and pepper Mom .\n'), ((1206, (25, 29)), '*MOT:\tFreddy give me the salt please .\n'), ((1209, (20, 26)), '*CHI:\tMa I need the butter !\n'), ((1215, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1218, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1228, (61, 65)), "*MOT:\tyou're not gon(t)a [: going to] be able to finish this corn .\n"), ((1233, (29, 33)), "*MOT:\twhy don't we save this corn for you for later ?\n"), ((1311, (11, 23)), '*MOT:\thave potato salad .\n'), ((1314, (13, 25)), '*BR1:\tI hate potato salad .\n'), ((1318, (10, 18)), '*MOT:\txxx broccoli .\n'), ((1324, (8, 18)), '*BR2:\ta Fudgesicle !\n'), ((1334, (6, 16)), '*CHI:\tFudgesicle !\n'), ((1337, (16, 26)), '*MOT:\thave more applesauce .\n'), ((1499, (10, 19)), '*MOT:\tone pork chop .\n'), ((1508, (18, 23)), '*CHI:\tI want some water [>] !\n'), ((1525, (14, 22)), '*BR1:\txxx the popsicle .\n'), ((1534, (32, 42)), '*CHI:\tI want some more &-um (.) applesauce .\n'), ((1561, (38, 48)), "*BR2:\tyou're gonna get dirty with the Fudgesicle anyway (.) .\n")]
set([(470, (-1, 4)), (1327, (6, 9)), (640, (6, 12)), (1005, (17, 21)), (959, (6, 9)), (1597, (-1, 4)), (573, (31, 35)), (1308, (-1, 4)), (1544, (16, 19)), (1426, (10, 13)), (264, (-1, 4)), (158, (11, 16)), (79, (-1, 4)), (1245, (41, 44)), (813, (20, 25)), (925, (10, 13)), (688, (6, 9)), (919, (13, 20)), (602, (19, 26)), (827, (6, 9)), (173, (10, 13)), (329, (-1, 4)), (1178, (-1, 4)), (24, (12, 17)), (721, (6, 15)), (274, (6, 9)), (966, (27, 33)), (91, (41, 46)), (120, (27, 30)), (140, (16, 20)), (666, (19, 25)), (1480, (-1, 4)), (1314, (13, 25)), (527, (19, 23)), (1024, (-1, 4)), (672, (30, 40)), (1314, (-1, 4)), (1053, (-1, 4)), (1385, (-1, 4)), (1267, (-1, 4)), (162, (28, 34)), (162, (35, 40)), (233, (11, 16)), (842, (-1, 2)), (72, (6, 9)), (1015, (45, 49)), (762, (31, 34)), (880, (16, 20)), (523, (27, 37)), (966, (-1, 4)), (762, (6, 10)), (765, (-1, 4)), (798, (16, 25)), (1590, (-1, 4)), (131, (-1, 4)), (309, (27, 30)), (1317, (6, 9)), (633, (11, 18)), (656, (11, 14)), (422, (-1, 4)), (1011, (11, 15)), (836, (-1, 4)), (610, (30, 36)), (123, (9, 14)), (222, (-1, 4)), (1508, (18, 23)), (1138, (46, 50)), (1590, (6, 9)), (463, (6, 12)), (851, (35, 40)), (425, (6, 13)), (1048, (6, 9)), (267, (-1, 4)), (602, (38, 44)), (67, (-1, 4)), (192, (16, 19)), (394, (36, 40)), (765, (29, 34)), (1499, (15, 19)), (972, (-1, 4)), (350, (27, 30)), (806, (13, 18)), (753, (9, 14)), (162, (-1, 4)), (1008, (-1, 4)), (1188, (22, 28)), (749, (6, 10)), (1571, (-1, 4)), (289, (11, 14)), (1534, (32, 42)), (432, (12, 15)), (403, (-1, 4)), (1410, (-1, 4)), (1603, (-1, 4)), (630, (6, 10)), (67, (50, 53)), (1466, (6, 9)), (1069, (11, 14)), (656, (6, 10)), (1034, (6, 10)), (1218, (18, 24)), (1519, (-1, 4)), (652, (-1, 4)), (1456, (6, 9)), (28, (6, 9)), (883, (-1, 4)), (278, (6, 11)), (984, (28, 32)), (688, (-1, 4)), (243, (-1, 2)), (517, (9, 12)), (959, (-1, 4)), (1089, (11, 17)), (1363, (11, 14)), (425, (98, 101)), (1330, (6, 9)), (1544, (25, 29)), (1020, (-1, 4)), (346, (12, 15)), (1469, (6, 9)), (209, (-1, 4)), (1288, (11, 14)), (1418, (26, 29)), (966, (20, 26)), (1188, (9, 14)), (1399, (6, 9)), (1473, (6, 8)), (453, (-1, 4)), (1495, (32, 35)), (1378, (10, 13)), (1191, (22, 25)), (1389, (6, 9)), (877, (11, 17)), (1352, (33, 38)), (1267, (6, 9)), (678, (6, 9)), (827, (21, 26)), (863, (6, 9)), (555, (-1, 4)), (794, (-1, 4)), (1352, (6, 12)), (1403, (17, 23)), (205, (30, 36)), (791, (6, 11)), (394, (-1, 4)), (703, (11, 20)), (706, (30, 33)), (1040, (-1, 4)), (445, (-1, 4)), (1448, (6, 9)), (655, (-1, 4)), (47, (48, 53)), (381, (6, 13)), (691, (-1, 4)), (1081, (33, 36)), (1245, (35, 40)), (313, (12, 15)), (1159, (19, 24)), (833, (38, 42)), (991, (26, 29)), (1059, (23, 26)), (1534, (28, 31)), (586, (-1, 4)), (935, (-1, 4)), (267, (85, 89)), (1030, (26, 35)), (381, (-1, 4)), (1369, (52, 56)), (1233, (10, 15)), (776, (-1, 4)), (652, (14, 17)), (1206, (-1, 4)), (746, (-1, 2)), (1200, (9, 14)), (222, (27, 33)), (1069, (69, 76)), (238, (-1, 4)), (1171, (17, 21)), (103, (6, 12)), (627, (-1, 4)), (1242, (6, 10)), (1228, (61, 65)), (479, (22, 27)), (1044, (11, 14)), (466, (-1, 4)), (47, (-1, 4)), (943, (22, 26)), (192, (10, 15)), (925, (6, 9)), (916, (6, 11)), (260, (6, 9)), (679, (6, 11)), (1477, (-1, 4)), (1035, (6, 12)), (399, (6, 9)), (911, (6, 10)), (887, (14, 18)), (1002, (-1, 4)), (969, (-1, 4)), (1113, (11, 16)), (1340, (12, 17)), (425, (81, 85)), (740, (-1, 4)), (798, (-1, 4)), (389, (6, 9)), (706, (9, 14)), (64, (11, 14)), (997, (-1, 6)), (364, (6, 10)), (1508, (24, 27)), (1175, (15, 20)), (935, (20, 25)), (510, (-1, 4)), (1299, (22, 26)), (170, (6, 9)), (1078, (11, 15)), (643, (-1, 4)), (52, (63, 66)), (463, (-1, 4)), (713, (6, 9)), (877, (-1, 4)), (72, (10, 13)), (1228, (25, 27)), (1065, (6, 10)), (854, (36, 40)), (123, (41, 44)), (1587, (26, 29)), (1248, (20, 23)), (859, (31, 35)), (1168, (12, 16)), (90, (6, 9)), (984, (-1, 4)), (1200, (22, 28)), (19, (6, 9)), (1560, (6, 9)), (1218, (-1, 4)), (836, (16, 25)), (1285, (13, 19)), (250, (-1, 4)), (666, (8, 18)), (1289, (-1, 4)), (537, (16, 19)), (753, (24, 34)), (839, (12, 15)), (120, (9, 13)), (1437, (-1, 4)), (1259, (-1, 4)), (839, (6, 11)), (649, (-1, 4)), (703, (6, 10)), (35, (-1, 4)), (1293, (-1, 4)), (903, (32, 39)), (329, (29, 37)), (267, (44, 49)), (147, (11, 17)), (155, (9, 12)), (1406, (-1, 4)), (869, (-1, 4)), (1096, (6, 9)), (520, (-1, 4)), (144, (6, 10)), (1600, (-1, 4)), (1578, (-1, 4)), (1553, (-1, 4)), (1215, (-1, 4)), (637, (12, 19)), (1276, (-1, 4)), (1430, (-1, 4)), (61, (9, 12)), (523, (38, 41)), (208, (6, 9)), (969, (17, 23)), (851, (-1, 4)), (1146, (-1, 4)), (1495, (-1, 4)), (685, (-1, 4)), (1531, (-1, 4)), (932, (17, 20)), (136, (10, 16)), (1143, (16, 23)), (1248, (16, 19)), (82, (6, 9)), (67, (31, 36)), (1270, (9, 16)), (851, (31, 34)), (607, (-1, 4)), (592, (-1, 4)), (286, (20, 25)), (254, (-1, 4)), (1363, (26, 30)), (364, (52, 55)), (621, (-1, 4)), (504, (-1, 4)), (495, (6, 10)), (445, (27, 31)), (205, (23, 29)), (500, (6, 9)), (1035, (57, 61)), (112, (20, 23)), (810, (14, 20)), (1508, (-1, 4)), (1311, (-1, 4)), (523, (-1, 4)), (1293, (17, 21)), (715, (6, 12)), (1228, (-1, 4)), (184, (-1, 4)), (646, (6, 12)), (724, (6, 15)), (212, (31, 36)), (706, (20, 29)), (803, (-1, 4)), (1587, (18, 25)), (1152, (14, 20)), (890, (6, 10)), (479, (-1, 4)), (127, (11, 17)), (709, (6, 16)), (929, (12, 15)), (400, (14, 18)), (329, (6, 9)), (903, (-1, 4)), (1534, (-1, 4)), (715, (13, 20)), (1262, (16, 21)), (1181, (24, 29)), (161, (6, 9)), (1119, (6, 9)), (978, (-1, 4)), (1483, (6, 9)), (1311, (11, 23)), (595, (-1, 4)), (116, (18, 24)), (1113, (17, 20)), (827, (27, 30)), (1270, (29, 34)), (1024, (61, 66)), (1135, (21, 24)), (301, (18, 21)), (624, (25, 28)), (112, (-1, 4)), (1081, (6, 11)), (158, (25, 29)), (756, (-1, 4)), (734, (6, 19)), (788, (9, 12)), (295, (-1, 4)), (740, (38, 49)), (356, (-1, 4)), (425, (93, 97)), (991, (30, 33)), (184, (6, 10)), (425, (58, 62)), (1587, (6, 10)), (783, (48, 51)), (151, (-1, 4)), (769, (6, 9)), (212, (-1, 4)), (151, (13, 17)), (709, (17, 21)), (1074, (43, 57)), (1203, (6, 10)), (955, (9, 15)), (286, (26, 29)), (460, (6, 10)), (127, (18, 23)), (1248, (12, 15)), (1409, (6, 9)), (91, (50, 53)), (633, (6, 10)), (1460, (-1, 4)), (637, (6, 11)), (672, (-1, 4)), (573, (43, 46)), (1566, (-1, 4)), (749, (11, 14)), (1525, (-1, 4)), (1360, (6, 10)), (916, (-1, 4)), (131, (16, 20)), (1305, (-1, 4)), (559, (6, 10)), (1382, (-1, 4)), (854, (6, 11)), (1578, (32, 35)), (158, (-1, 4)), (435, (32, 37)), (981, (-1, 4)), (487, (29, 32)), (1374, (6, 9)), (1578, (6, 10)), (116, (11, 17)), (691, (24, 28)), (232, (6, 10)), (212, (24, 30)), (823, (27, 37)), (922, (6, 9)), (1378, (6, 9)), (783, (21, 25)), (28, (-1, 4)), (442, (11, 15)), (438, (-1, 4)), (64, (-1, 4)), (181, (14, 17)), (1302, (6, 11)), (184, (16, 20)), (147, (18, 23)), (1515, (-1, 4)), (275, (6, 11)), (897, (-1, 4)), (798, (33, 36)), (1385, (6, 9)), (1340, (34, 39)), (1363, (20, 25)), (1337, (16, 26)), (1168, (-1, 4)), (1191, (6, 10)), (453, (12, 16)), (364, (27, 30)), (963, (-1, 4)), (655, (6, 9)), (359, (25, 29)), (52, (36, 42)), (765, (11, 16)), (136, (17, 22)), (298, (13, 16)), (103, (42, 47)), (301, (-1, 4)), (1132, (24, 27)), (558, (6, 9)), (445, (10, 15)), (1463, (-1, 4)), (1138, (6, 12)), (1460, (6, 9)), (700, (6, 13)), (103, (35, 41)), (1116, (34, 37)), (442, (28, 31)), (513, (6, 9)), (1603, (14, 21)), (1035, (32, 36)), (403, (25, 30)), (1369, (-1, 4)), (1470, (14, 18)), (994, (-1, 4)), (563, (22, 26)), (222, (34, 39)), (425, (19, 27)), (589, (-1, 4)), (1255, (-1, 4)), (833, (26, 29)), (1206, (25, 29)), (257, (6, 12)), (301, (11, 17)), (1318, (10, 18)), (1125, (-1, 4)), (339, (12, 15)), (1415, (-1, 4)), (1512, (24, 29)), (854, (12, 17)), (1175, (21, 24)), (1363, (49, 53)), (530, (-1, 4)), (1388, (6, 9)), (1171, (-1, 4)), (305, (15, 18)), (991, (-1, 4)), (952, (10, 13)), (442, (23, 27)), (162, (41, 47)), (412, (6, 9)), (1005, (-1, 4)), (810, (-1, 4)), (1321, (-1, 4)), (550, (6, 9)), (292, (11, 14)), (76, (6, 10)), (103, (17, 21)), (228, (6, 9)), (984, (40, 43)), (1512, (-1, 4)), (520, (14, 17)), (1132, (-1, 4)), (1188, (29, 32)), (1168, (6, 9)), (932, (-1, 4)), (1382, (31, 34)), (317, (-1, 4)), (907, (-1, 4)), (321, (9, 12)), (1203, (15, 21)), (1113, (6, 10)), (1556, (-1, 4)), (946, (-1, 4)), (527, (-1, 4)), (1074, (6, 9)), (563, (-1, 4)), (31, (6, 9)), (783, (9, 14)), (541, (-1, 4)), (602, (-1, 4)), (1194, (-1, 1)), (1369, (31, 37)), (1561, (13, 18)), (740, (26, 31)), (1024, (32, 38)), (492, (6, 10)), (703, (21, 24)), (894, (-1, 4)), (58, (-1, 4)), (1078, (-1, 4)), (109, (6, 9)), (872, (6, 9)), (1487, (-1, 4)), (1162, (14, 20)), (691, (36, 39)), (324, (-1, 4)), (700, (19, 27)), (1143, (-1, 4)), (659, (6, 11)), (533, (-1, 4)), (1537, (-1, 4)), (943, (-1, 4)), (1515, (10, 16)), (1337, (-1, 4)), (869, (17, 20)), (624, (-1, 4)), (177, (18, 21)), (1074, (58, 61)), (342, (6, 9)), (202, (6, 10)), (1522, (-1, 4)), (281, (9, 14)), (1215, (18, 24)), (384, (-1, 4)), (813, (-1, 4)), (1015, (15, 20)), (1233, (29, 33)), (435, (-1, 4)), (1085, (6, 9)), (501, (-1, 2)), (780, (9, 12)), (1059, (-1, 4)), (1456, (10, 13)), (91, (-1, 4)), (1556, (6, 10)), (335, (13, 21)), (1200, (29, 32)), (1544, (-1, 4)), (949, (-1, 4)), (335, (-1, 4)), (91, (25, 32)), (140, (-1, 4)), (579, (6, 10)), (1490, (37, 43)), (806, (-1, 4)), (922, (10, 13)), (1522, (6, 11)), (845, (-1, 2)), (816, (13, 17)), (820, (-1, 4)), (1452, (-1, 2)), (205, (-1, 4)), (734, (20, 23)), (24, (18, 21)), (672, (41, 47)), (1056, (-1, 4)), (765, (17, 20)), (184, (59, 62)), (167, (6, 13)), (836, (26, 29)), (672, (17, 22)), (563, (34, 37)), (1415, (24, 27)), (1116, (6, 9)), (900, (11, 15)), (1165, (33, 38)), (1581, (14, 18)), (1299, (6, 11)), (1345, (-1, 4)), (1505, (10, 15)), (466, (9, 14)), (425, (45, 57)), (381, (23, 26)), (1245, (6, 9)), (1262, (34, 39)), (662, (10, 17)), (177, (13, 17)), (263, (6, 9)), (724, (16, 19)), (1206, (30, 36)), (627, (26, 30)), (883, (28, 34)), (1499, (10, 14)), (1396, (29, 31)), (1437, (6, 8)), (1528, (-1, 4)), (1445, (-1, 4)), (1203, (-1, 4)), (292, (6, 10)), (1081, (12, 17)), (1348, (6, 9)), (359, (30, 34)), (43, (-1, 4)), (1426, (6, 9)), (1296, (6, 10)), (1191, (-1, 4)), (376, (6, 11)), (1561, (6, 12)), (1209, (20, 26)), (289, (6, 10)), (173, (6, 9)), (1403, (-1, 4)), (537, (11, 15)), (618, (-1, 4)), (869, (11, 16)), (1178, (6, 10)), (1433, (6, 9)), (1531, (6, 9)), (823, (-1, 4))])
[((19, (6, 9)), '*SIS:\tzzz .\n'), ((24, (12, 17)), '*MOT:\t<okay guys> [>] .\n'), ((24, (18, 21)), '*MOT:\t<okay guys> [>] .\n'), ((28, (-1, 4)), '*MOT:\thuh ?\n'), ((28, (6, 9)), '*MOT:\thuh ?\n'), ((31, (6, 9)), '*BR2:\txxx .\n'), ((35, (-1, 4)), "*MOT:\the didn't no .\n"), ((43, (-1, 4)), '*MOT:\touch !\n'), ((47, (-1, 4)), "*MOT:\tfor &-um (be)cause we have_to for Emily's thing .\n"), ((47, (48, 53)), "*MOT:\tfor &-um (be)cause we have_to for Emily's thing .\n"), ((52, (36, 42)), '*MOT:\twell you [/] you know how the people were here the other day ?\n'), ((52, (63, 66)), '*MOT:\twell you [/] you know how the people were here the other day ?\n'), ((58, (-1, 4)), '*MOT:\tdid I tell you about them ?\n'), ((61, (9, 12)), '*BR1:\tno [>] .\n'), ((64, (-1, 4)), '*BR3:\tnope [<] .\n'), ((64, (11, 14)), '*BR3:\tnope [<] .\n'), ((67, (-1, 4)), "*MOT:\toh well <they're doing a study on language> [>] .\n"), ((67, (31, 36)), "*MOT:\toh well <they're doing a study on language> [>] .\n"), ((67, (50, 53)), "*MOT:\toh well <they're doing a study on language> [>] .\n"), ((72, (6, 9)), '*SIS:\tzzz [<] .\n'), ((72, (10, 13)), '*SIS:\tzzz [<] .\n'), ((76, (6, 10)), "*CHI:\tit's on language .\n"), ((79, (-1, 4)), "*MOT:\ton Chi's [!] language .\n"), ((82, (6, 9)), '*CHI:\tyep .\n'), ((90, (6, 9)), '*MOT:\txxx .\n'), ((91, (-1, 4)), "*MOT:\tthat's what I said they're doing a study on xxx .\n"), ((91, (25, 32)), "*MOT:\tthat's what I said they're doing a study on xxx .\n"), ((91, (41, 46)), "*MOT:\tthat's what I said they're doing a study on xxx .\n"), ((91, (50, 53)), "*MOT:\tthat's what I said they're doing a study on xxx .\n"), ((103, (6, 12)), "*CHI:\tthat's <on the> [//] on that yellow thing ?\n"), ((103, (17, 21)), "*CHI:\tthat's <on the> [//] on that yellow thing ?\n"), ((103, (35, 41)), "*CHI:\tthat's <on the> [//] on that yellow thing ?\n"), ((103, (42, 47)), "*CHI:\tthat's <on the> [//] on that yellow thing ?\n"), ((109, (6, 9)), '*MOT:\tyup .\n'), ((112, (-1, 4)), '*MOT:\tthey had toys huh ?\n'), ((112, (20, 23)), '*MOT:\tthey had toys huh ?\n'), ((116, (11, 17)), '*CHI:\twhat yellow things ?\n'), ((116, (18, 24)), '*CHI:\twhat yellow things ?\n'), ((120, (9, 13)), '*BR2:\tMa look at <Heather> [>] !\n'), ((120, (27, 30)), '*BR2:\tMa look at <Heather> [>] !\n'), ((123, (9, 14)), "*MOT:\t<I don't know wha(t)> [<] [///] oh [!] no [!] Heather !\n"), ((123, (41, 44)), "*MOT:\t<I don't know wha(t)> [<] [///] oh [!] no [!] Heather !\n"), ((127, (11, 17)), '*MOT:\twhat yellow thing ?\n'), ((127, (18, 23)), '*MOT:\twhat yellow thing ?\n'), ((131, (-1, 4)), "*MOT:\tI have no idea what you're talking about .\n"), ((131, (16, 20)), "*MOT:\tI have no idea what you're talking about .\n"), ((136, (10, 16)), '*CHI:\tthe yellow thing that &-um (.) Susan had .\n'), ((136, (17, 22)), '*CHI:\tthe yellow thing that &-um (.) Susan had .\n'), ((140, (-1, 4)), '*MOT:\tthat that girl Susan had ?\n'), ((140, (16, 20)), '*MOT:\tthat that girl Susan had ?\n'), ((144, (6, 10)), '*CHI:\tyeah .\n'), ((147, (11, 17)), '*MOT:\twhat yellow thing ?\n'), ((147, (18, 23)), '*MOT:\twhat yellow thing ?\n'), ((151, (-1, 4)), '*MOT:\toh the cups ?\n'), ((151, (13, 17)), '*MOT:\toh the cups ?\n'), ((155, (9, 12)), '*CHI:\tno [>] !\n'), ((158, (-1, 4)), '*MOT:\t<you mean> [<] the cups and +...\n'), ((158, (11, 16)), '*MOT:\t<you mean> [<] the cups and +...\n'), ((158, (25, 29)), '*MOT:\t<you mean> [<] the cups and +...\n'), ((161, (6, 9)), '*BR2:\txxx .\n'), ((162, (-1, 4)), "*MOT:\tI don't know what [!] yellow thing you're talking about Emily .\n"), ((162, (28, 34)), "*MOT:\tI don't know what [!] yellow thing you're talking about Emily .\n"), ((162, (35, 40)), "*MOT:\tI don't know what [!] yellow thing you're talking about Emily .\n"), ((162, (41, 47)), "*MOT:\tI don't know what [!] yellow thing you're talking about Emily .\n"), ((167, (6, 13)), '*CHI:\tashtray .\n'), ((170, (6, 9)), '*SIS:\tzzz .\n'), ((173, (6, 9)), '*SIS:\tzzz [>] .\n'), ((173, (10, 13)), '*SIS:\tzzz [>] .\n'), ((177, (13, 17)), '*MOT:\t<Susan who> [<] ?\n'), ((177, (18, 21)), '*MOT:\t<Susan who> [<] ?\n'), ((181, (14, 17)), '*CHI:\t<Susan> [>] !\n'), ((184, (-1, 4)), '*MOT:\t<not that lady> [<] that came to visit you the other day with that lady Jean where we played toys ?\n'), ((184, (6, 10)), '*MOT:\t<not that lady> [<] that came to visit you the other day with that lady Jean where we played toys ?\n'), ((184, (16, 20)), '*MOT:\t<not that lady> [<] that came to visit you the other day with that lady Jean where we played toys ?\n'), ((184, (59, 62)), '*MOT:\t<not that lady> [<] that came to visit you the other day with that lady Jean where we played toys ?\n'), ((192, (10, 15)), '*CHI:\t<oh yeah> [>] .\n'), ((192, (16, 19)), '*CHI:\t<oh yeah> [>] .\n'), ((202, (6, 10)), '*CHI:\tyeah Jean .\n'), ((205, (-1, 4)), "*MOT:\tI don't remember yellow things .\n"), ((205, (23, 29)), "*MOT:\tI don't remember yellow things .\n"), ((205, (30, 36)), "*MOT:\tI don't remember yellow things .\n"), ((208, (6, 9)), '*BR2:\txxx .\n'), ((209, (-1, 4)), '*MOT:\tthat she had .\n'), ((212, (-1, 4)), '*MOT:\tdo you remember a yellow thing that she had ?\n'), ((212, (24, 30)), '*MOT:\tdo you remember a yellow thing that she had ?\n'), ((212, (31, 36)), '*MOT:\tdo you remember a yellow thing that she had ?\n'), ((222, (-1, 4)), "*MOT:\tyou don't remember a yellow thing either ?\n"), ((222, (27, 33)), "*MOT:\tyou don't remember a yellow thing either ?\n"), ((222, (34, 39)), "*MOT:\tyou don't remember a yellow thing either ?\n"), ((228, (6, 9)), '*CHI:\tzzz .\n'), ((232, (6, 10)), '*CHI:\t&a:h .\n'), ((233, (11, 16)), '*MOT:\tyour mouth is white .\n'), ((238, (-1, 4)), '*MOT:\tdid you have fun ?\n'), ((243, (-1, 2)), "*MOT:\tit's very hot Pat !\n"), ((250, (-1, 4)), "*BR2:\twhere's the xxx Mom .\n"), ((254, (-1, 4)), '*MOT:\there .\n'), ((257, (6, 12)), '*MOT:\tbutter .\n'), ((260, (6, 9)), '*BR2:\tyup .\n'), ((263, (6, 9)), '*BR2:\txxx .\n'), ((264, (-1, 4)), '*MOT:\tHeather .\n'), ((267, (-1, 4)), '*MOT:\tHeather must like to eat off the &-um table more than she likes to eat off the dish .\n'), ((267, (44, 49)), '*MOT:\tHeather must like to eat off the &-um table more than she likes to eat off the dish .\n'), ((267, (85, 89)), '*MOT:\tHeather must like to eat off the &-um table more than she likes to eat off the dish .\n'), ((274, (6, 9)), '*BR2:\txxx .\n'), ((275, (6, 11)), "*BR2:\tshe's eating Emily's !\n"), ((278, (6, 11)), "*BR1:\tshe's eating Emily's .\n"), ((281, (9, 14)), "*BR1:\tMa she's eating Emily's .\n"), ((286, (20, 25)), '*MOT:\t<eat your own baby> [<] !\n'), ((286, (26, 29)), '*MOT:\t<eat your own baby> [<] !\n'), ((289, (6, 10)), '*BR2:\thaha [>] .\n'), ((289, (11, 14)), '*BR2:\thaha [>] .\n'), ((292, (6, 10)), '*BR1:\thaha [<] .\n'), ((292, (11, 14)), '*BR1:\thaha [<] .\n'), ((295, (-1, 4)), '*CHI:\tno she can eat mine too .\n'), ((298, (13, 16)), '*MOT:\tno [!] (.) .\n'), ((301, (-1, 4)), "*MOT:\t<she can't> [>] .\n"), ((301, (11, 17)), "*MOT:\t<she can't> [>] .\n"), ((301, (18, 21)), "*MOT:\t<she can't> [>] .\n"), ((305, (15, 18)), '*BR3:\t<Ma> [<] (.) !\n'), ((309, (27, 30)), "*BR3:\tMa I can't <eat xxx> [>] .\n"), ((313, (12, 15)), '*CHI:\t<Mom> [<] !\n'), ((317, (-1, 4)), '*CHI:\t<you forgot> [<][>] !\n'), ((321, (9, 12)), '*MOT:\tno [<] .\n'), ((324, (-1, 4)), '*MOT:\tthere is no more .\n'), ((329, (-1, 4)), '*MOT:\t<do you want> [<] some broccoli ?\n'), ((329, (6, 9)), '*MOT:\t<do you want> [<] some broccoli ?\n'), ((329, (29, 37)), '*MOT:\t<do you want> [<] some broccoli ?\n'), ((335, (-1, 4)), '*BR3:\tI hate broccoli .\n'), ((335, (13, 21)), '*BR3:\tI hate broccoli .\n'), ((339, (12, 15)), '*CHI:\t<Mom> [>] !\n'), ((342, (6, 9)), '*SIS:\tzzz [<][>] .\n'), ((346, (12, 15)), '*BR2:\t<Mom> [<] !\n'), ((350, (27, 30)), '*BR2:\t<any more porkchops> [<] ?\n'), ((356, (-1, 4)), '*BR2:\tbut I only got one .\n'), ((359, (25, 29)), '*BR2:\tMom I only got one pork chop .\n'), ((359, (30, 34)), '*BR2:\tMom I only got one pork chop .\n'), ((364, (6, 10)), '*BR2:\t<and I was starting> [<] to love them too mom [>] .\n'), ((364, (27, 30)), '*BR2:\t<and I was starting> [<] to love them too mom [>] .\n'), ((364, (52, 55)), '*BR2:\t<and I was starting> [<] to love them too mom [>] .\n'), ((376, (6, 11)), "*MOT:\tlet's see if Dad wants any more .\n"), ((381, (-1, 4)), "*MOT:\tthere's one left xxx .\n"), ((381, (6, 13)), "*MOT:\tthere's one left xxx .\n"), ((381, (23, 26)), "*MOT:\tthere's one left xxx .\n"), ((384, (-1, 4)), '*MOT:\tdo you want another porkchop ?\n'), ((389, (6, 9)), '*FAT:\txxx .\n'), ((394, (-1, 4)), "*MOT:\tthere's only one left and two kids want one .\n"), ((394, (36, 40)), "*MOT:\tthere's only one left and two kids want one .\n"), ((399, (6, 9)), '*FAT:\txxx .\n'), ((400, (14, 18)), '*MOT:\talright guys .\n'), ((403, (-1, 4)), "*MOT:\tthis is what we're gonna have_to do .\n"), ((403, (25, 30)), "*MOT:\tthis is what we're gonna have_to do .\n"), ((412, (6, 9)), '*BR2:\thot .\n'), ((422, (-1, 4)), '*BR2:\tI knew it Mom .\n'), ((425, (6, 13)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (19, 27)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (45, 57)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (58, 62)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (81, 85)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (93, 97)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((425, (98, 101)), "*MOT:\tthere's more broccoli (.) there's more potato salad <and there is &-uh (.) corn on the cob> [>] .\n"), ((432, (12, 15)), '*CHI:\t<Mom> [<] !\n'), ((435, (-1, 4)), '*CHI:\t<Heather gave me her> [<] spoon .\n'), ((435, (32, 37)), '*CHI:\t<Heather gave me her> [<] spoon .\n'), ((438, (-1, 4)), '*MOT:\t<she did> [>] ?\n'), ((442, (11, 15)), '*BR2:\t<xxx corn on the cob> [<] ?\n'), ((442, (23, 27)), '*BR2:\t<xxx corn on the cob> [<] ?\n'), ((442, (28, 31)), '*BR2:\t<xxx corn on the cob> [<] ?\n'), ((445, (-1, 4)), "*MOT:\tand she's using your fork ?\n"), ((445, (10, 15)), "*MOT:\tand she's using your fork ?\n"), ((445, (27, 31)), "*MOT:\tand she's using your fork ?\n"), ((453, (-1, 4)), '*MOT:\twhose fork is she using ?\n'), ((453, (12, 16)), '*MOT:\twhose fork is she using ?\n'), ((460, (6, 10)), '*BR2:\tnope .\n'), ((463, (-1, 4)), "*BR2:\tmine's right there (.) .\n"), ((463, (6, 12)), "*BR2:\tmine's right there (.) .\n"), ((466, (-1, 4)), '*CHI:\toh guess I am too [!] .\n'), ((466, (9, 14)), '*CHI:\toh guess I am too [!] .\n'), ((470, (-1, 4)), '*MOT:\tI guess so .\n'), ((479, (-1, 4)), '*BR3:\twhen I stuck my tooth on it (.) it burned [!] .\n'), ((479, (22, 27)), '*BR3:\twhen I stuck my tooth on it (.) it burned [!] .\n'), ((487, (29, 32)), "*BR3:\tMa I like it when it's hot .\n"), ((492, (6, 10)), '*MOT:\tyeah .\n'), ((495, (6, 10)), '*MOT:\twait (un)til it cools down a little Brian .\n'), ((500, (6, 9)), '*MOT:\txxx .\n'), ((501, (-1, 2)), '*CHI:\tMom !\n'), ((504, (-1, 4)), '*CHI:\tyou forgot to cut it !\n'), ((510, (-1, 4)), "*MOT:\tyou're right !\n"), ((513, (6, 9)), '*SIS:\tzzz !\n'), ((517, (9, 12)), '*MOT:\tno [!] leave it !\n'), ((520, (-1, 4)), '*MOT:\tHeather [!] +...\n'), ((520, (14, 17)), '*MOT:\tHeather [!] +...\n'), ((523, (-1, 4)), '*CHI:\tcan I have some more applesauce [>] ?\n'), ((523, (27, 37)), '*CHI:\tcan I have some more applesauce [>] ?\n'), ((523, (38, 41)), '*CHI:\tcan I have some more applesauce [>] ?\n'), ((527, (-1, 4)), '*MOT:\t<did Heather eat> [<] her porkchops ?\n'), ((527, (19, 23)), '*MOT:\t<did Heather eat> [<] her porkchops ?\n'), ((530, (-1, 4)), "*BR2:\tI don't know .\n"), ((533, (-1, 4)), '*MOT:\twhere is it ?\n'), ((537, (11, 15)), '*SIS:\t<zzz zzz> [<] .\n'), ((537, (16, 19)), '*SIS:\t<zzz zzz> [<] .\n'), ((541, (-1, 4)), '*MOT:\there .\n'), ((550, (6, 9)), '*SIS:\tzzz .\n'), ((555, (-1, 4)), '*BR2:\tdo you want this one ?\n'), ((558, (6, 9)), '*BR2:\txxx .\n'), ((559, (6, 10)), '*BR3:\tyeah .\n'), ((563, (-1, 4)), '*MOT:\toh you want the corn on the cob .\n'), ((563, (22, 26)), '*MOT:\toh you want the corn on the cob .\n'), ((563, (34, 37)), '*MOT:\toh you want the corn on the cob .\n'), ((573, (31, 35)), "*MOT:\tyou're too little to eat corn on the cob Heather .\n"), ((573, (43, 46)), "*MOT:\tyou're too little to eat corn on the cob Heather .\n"), ((579, (6, 10)), '*BR2:\thaha .\n'), ((586, (-1, 4)), '*MOT:\tshe wants the porkchops .\n'), ((589, (-1, 4)), '*BR2:\twhy ?\n'), ((592, (-1, 4)), '*BR2:\twhy ?\n'), ((595, (-1, 4)), '*MOT:\twhy ?\n'), ((602, (-1, 4)), '*MOT:\tgrab me some napkins over there please .\n'), ((602, (19, 26)), '*MOT:\tgrab me some napkins over there please .\n'), ((602, (38, 44)), '*MOT:\tgrab me some napkins over there please .\n'), ((607, (-1, 4)), '*BR2:\twhere ?\n'), ((610, (30, 36)), "*BR1:\tgive me some more while you're up .\n"), ((618, (-1, 4)), "*CHI:\tit's up there .\n"), ((621, (-1, 4)), "*CHI:\tthey're up there .\n"), ((624, (-1, 4)), "*CHI:\t<they're up there> [>] .\n"), ((624, (25, 28)), "*CHI:\t<they're up there> [>] .\n"), ((627, (-1, 4)), '*BR2:\tnobody [<] takes my corn Heather .\n'), ((627, (26, 30)), '*BR2:\tnobody [<] takes my corn Heather .\n'), ((630, (6, 10)), "*CHI:\t&a:h they're up there !\n"), ((633, (6, 10)), '*CHI:\t<the napkins are> [>] up there .\n'), ((633, (11, 18)), '*CHI:\t<the napkins are> [>] up there .\n'), ((637, (6, 11)), '*BR2:\tpaper napkins ?\n'), ((637, (12, 19)), '*BR2:\tpaper napkins ?\n'), ((640, (6, 12)), '*CHI:\theehee .\n'), ((643, (-1, 4)), '*MOT:\there ?\n'), ((646, (6, 12)), '*CHI:\theehee .\n'), ((649, (-1, 4)), '*MOT:\tHeather .\n'), ((652, (-1, 4)), '*MOT:\ton your bum !\n'), ((652, (14, 17)), '*MOT:\ton your bum !\n'), ((655, (-1, 4)), '*BR2:\txxx ?\n'), ((655, (6, 9)), '*BR2:\txxx ?\n'), ((656, (6, 10)), '*BR1:\tyeah [>] .\n'), ((656, (11, 14)), '*BR1:\tyeah [>] .\n'), ((659, (6, 11)), '*MOT:\t<good girl>[<] .\n'), ((662, (10, 17)), '*CHI:\tthe napkins ?\n'), ((666, (8, 18)), '*BR2:\ta whole year supply Mommy .\n'), ((666, (19, 25)), '*BR2:\ta whole year supply Mommy .\n'), ((672, (-1, 4)), "*BR2:\t<there's a year> [//] a whole year supply .\n"), ((672, (17, 22)), "*BR2:\t<there's a year> [//] a whole year supply .\n"), ((672, (30, 40)), "*BR2:\t<there's a year> [//] a whole year supply .\n"), ((672, (41, 47)), "*BR2:\t<there's a year> [//] a whole year supply .\n"), ((678, (6, 9)), '*BR1:\txxx .\n'), ((679, (6, 11)), '*BR2:\twater Mommy .\n'), ((685, (-1, 4)), '*BR3:\tI need it [!] .\n'), ((688, (-1, 4)), '*MOT:\they [!] .\n'), ((688, (6, 9)), '*MOT:\they [!] .\n'), ((691, (-1, 4)), '*BR1:\tis there any more corn on the cob ?\n'), ((691, (24, 28)), '*BR1:\tis there any more corn on the cob ?\n'), ((691, (36, 39)), '*BR1:\tis there any more corn on the cob ?\n'), ((700, (6, 13)), "*MOT:\tthere's more broccoli .\n"), ((700, (19, 27)), "*MOT:\tthere's more broccoli .\n"), ((703, (6, 10)), '*MOT:\t<eat broccoli> [>] .\n'), ((703, (11, 20)), '*MOT:\t<eat broccoli> [>] .\n'), ((703, (21, 24)), '*MOT:\t<eat broccoli> [>] .\n'), ((706, (9, 14)), "*BR1:\t<I don't want broccoli> [<] .\n"), ((706, (20, 29)), "*BR1:\t<I don't want broccoli> [<] .\n"), ((706, (30, 33)), "*BR1:\t<I don't want broccoli> [<] .\n"), ((709, (6, 16)), "*MOT:\tbroccoli's good for you .\n"), ((709, (17, 21)), "*MOT:\tbroccoli's good for you .\n"), ((713, (6, 9)), '*BR3:\txxx .\n'), ((715, (6, 12)), "*BR1:\twhat's dessert ?\n"), ((715, (13, 20)), "*BR1:\twhat's dessert ?\n"), ((721, (6, 15)), '*MOT:\thoney+dew .\n'), ((724, (6, 15)), '*BR2:\thoney+dew [>] ?\n'), ((724, (16, 19)), '*BR2:\thoney+dew [>] ?\n'), ((734, (6, 19)), '*BR1:\t<fruit salad> [<] ?\n'), ((734, (20, 23)), '*BR1:\t<fruit salad> [<] ?\n'), ((740, (-1, 4)), "*MOT:\tI don't have enough stuff for a fruit salad .\n"), ((740, (26, 31)), "*MOT:\tI don't have enough stuff for a fruit salad .\n"), ((740, (38, 49)), "*MOT:\tI don't have enough stuff for a fruit salad .\n"), ((746, (-1, 2)), '*CHI:\tMom !\n'), ((749, (6, 10)), '*MOT:\tyeah [>] ?\n'), ((749, (11, 14)), '*MOT:\tyeah [>] ?\n'), ((753, (9, 14)), '*CHI:\t<I want> [<] more applesauce .\n'), ((753, (24, 34)), '*CHI:\t<I want> [<] more applesauce .\n'), ((756, (-1, 4)), '*BR2:\tMom ?\n'), ((762, (6, 10)), "*MOT:\t<eat what's> [<] in your xxx first [>] .\n"), ((762, (31, 34)), "*MOT:\t<eat what's> [<] in your xxx first [>] .\n"), ((765, (-1, 4)), '*BR2:\t<you said> [<] we were gonna have Fudgesicles .\n'), ((765, (11, 16)), '*BR2:\t<you said> [<] we were gonna have Fudgesicles .\n'), ((765, (17, 20)), '*BR2:\t<you said> [<] we were gonna have Fudgesicles .\n'), ((765, (29, 34)), '*BR2:\t<you said> [<] we were gonna have Fudgesicles .\n'), ((769, (6, 9)), '*MOT:\tyup .\n'), ((776, (-1, 4)), '*MOT:\tis it hot ?\n'), ((780, (9, 12)), '*CHI:\tno [>] .\n'), ((783, (9, 14)), '*MOT:\t<I have> [<] a corn for you <if you want> [>] .\n'), ((783, (21, 25)), '*MOT:\t<I have> [<] a corn for you <if you want> [>] .\n'), ((783, (48, 51)), '*MOT:\t<I have> [<] a corn for you <if you want> [>] .\n'), ((788, (9, 12)), '*FAT:\tno [<] .\n'), ((791, (6, 11)), '*MOT:\tthank you .\n'), ((794, (-1, 4)), '*CHI:\tDaddy you were on here ?\n'), ((798, (-1, 4)), "*MOT:\tyou don't want corn on the cob ?\n"), ((798, (16, 25)), "*MOT:\tyou don't want corn on the cob ?\n"), ((798, (33, 36)), "*MOT:\tyou don't want corn on the cob ?\n"), ((803, (-1, 4)), '*CHI:\tDaddy you were on here ?\n'), ((806, (-1, 4)), '*CHI:\ton the radio ?\n'), ((806, (13, 18)), '*CHI:\ton the radio ?\n'), ((810, (-1, 4)), '*MOT:\ton your player .\n'), ((810, (14, 20)), '*MOT:\ton your player .\n'), ((813, (-1, 4)), '*CHI:\the was on the radio .\n'), ((813, (20, 25)), '*CHI:\the was on the radio .\n'), ((816, (13, 17)), '*BR2:\ta long time ago I [!] was Amanda .\n'), ((820, (-1, 4)), '*CHI:\tI know .\n'), ((823, (-1, 4)), '*CHI:\tcan I have some more applesauce .\n'), ((823, (27, 37)), '*CHI:\tcan I have some more applesauce .\n'), ((827, (6, 9)), '*CHI:\t<it tastes the best> [>] .\n'), ((827, (21, 26)), '*CHI:\t<it tastes the best> [>] .\n'), ((827, (27, 30)), '*CHI:\t<it tastes the best> [>] .\n'), ((833, (26, 29)), '*MOT:\t<finish everything> [<] in your dish .\n'), ((833, (38, 42)), '*MOT:\t<finish everything> [<] in your dish .\n'), ((836, (-1, 4)), '*CHI:\tI ate <my broccoli> [>] .\n'), ((836, (16, 25)), '*CHI:\tI ate <my broccoli> [>] .\n'), ((836, (26, 29)), '*CHI:\tI ate <my broccoli> [>] .\n'), ((839, (6, 11)), '*BR2:\tmommy [<] ?\n'), ((839, (12, 15)), '*BR2:\tmommy [<] ?\n'), ((842, (-1, 2)), '*BR2:\tMom !\n'), ((845, (-1, 2)), '*BR2:\tMom !\n'), ((851, (-1, 4)), '*BR2:\tare [<] we going to &-um (.) radio ?\n'), ((851, (31, 34)), '*BR2:\tare [<] we going to &-um (.) radio ?\n'), ((851, (35, 40)), '*BR2:\tare [<] we going to &-um (.) radio ?\n'), ((854, (6, 11)), "*BR1:\twe're gonna go out and make a tape .\n"), ((854, (12, 17)), "*BR1:\twe're gonna go out and make a tape .\n"), ((854, (36, 40)), "*BR1:\twe're gonna go out and make a tape .\n"), ((859, (31, 35)), '*BR1:\tall of us could make the tape ?\n'), ((863, (6, 9)), '*MOT:\tyup .\n'), ((869, (-1, 4)), '*BR2:\t<you sure> [<] ?\n'), ((869, (11, 16)), '*BR2:\t<you sure> [<] ?\n'), ((869, (17, 20)), '*BR2:\t<you sure> [<] ?\n'), ((872, (6, 9)), '*BR1:\tyup .\n'), ((877, (-1, 4)), '*BR2:\tthis summer ?\n'), ((877, (11, 17)), '*BR2:\tthis summer ?\n'), ((880, (16, 20)), '*MOT:\tChristmas time .\n'), ((883, (-1, 4)), '*BR2:\tyou got them over the summer .\n'), ((883, (28, 34)), '*BR2:\tyou got them over the summer .\n'), ((887, (14, 18)), '*MOT:\tno this year .\n'), ((890, (6, 10)), '*MOT:\tguys hurry up .\n'), ((894, (-1, 4)), '*MOT:\twe got_to go soon .\n'), ((897, (-1, 4)), '*BR2:\twhere ?\n'), ((900, (11, 15)), '*BR1:\twhat time ?\n'), ((903, (-1, 4)), '*MOT:\tI have_to leave in twenty minutes .\n'), ((903, (32, 39)), '*MOT:\tI have_to leave in twenty minutes .\n'), ((907, (-1, 4)), '*CHI:\twhere[>] ?\n'), ((911, (6, 10)), '*MOT:\t<and I have> [<] to take a shower yet .\n'), ((916, (-1, 4)), "*MOT:\twe're going to church !\n"), ((916, (6, 11)), "*MOT:\twe're going to church !\n"), ((919, (13, 20)), '*BR1:\ttwenty minutes ?\n'), ((922, (6, 9)), '*SIS:\tzzz [>] !\n'), ((922, (10, 13)), '*SIS:\tzzz [>] !\n'), ((925, (6, 9)), '*SIS:\tzzz [>] !\n'), ((925, (10, 13)), '*SIS:\tzzz [>] !\n'), ((929, (12, 15)), '*MOT:\tuhhum [<] .\n'), ((932, (-1, 4)), '*MOT:\t<hurry up> [<] .\n'), ((932, (17, 20)), '*MOT:\t<hurry up> [<] .\n'), ((935, (-1, 4)), "*BR1:\tI don't think we're going to make it Mom .\n"), ((935, (20, 25)), "*BR1:\tI don't think we're going to make it Mom .\n"), ((943, (-1, 4)), '*BR3:\tcan I have some corn ?\n'), ((943, (22, 26)), '*BR3:\tcan I have some corn ?\n'), ((946, (-1, 4)), '*BR2:\tI asked first .\n'), ((949, (-1, 4)), '*BR3:\twhy ?\n'), ((952, (10, 13)), '*BR3:\twhy [>] ?\n'), ((955, (9, 15)), '*BR2:\t<I asked> [<] first [!] Brian .\n'), ((959, (-1, 4)), '*BR3:\txxx ?\n'), ((959, (6, 9)), '*BR3:\txxx ?\n'), ((963, (-1, 4)), '*MOT:\tare you going to church ?\n'), ((966, (-1, 4)), '*MOT:\tgi(ve) me the butter please .\n'), ((966, (20, 26)), '*MOT:\tgi(ve) me the butter please .\n'), ((966, (27, 33)), '*MOT:\tgi(ve) me the butter please .\n'), ((969, (-1, 4)), '*CHI:\tI need the butter !\n'), ((969, (17, 23)), '*CHI:\tI need the butter !\n'), ((972, (-1, 4)), '*MOT:\tare you done eating ?\n'), ((978, (-1, 4)), '*BR1:\tcan I have another one ?\n'), ((981, (-1, 4)), '*MOT:\tanother what ?\n'), ((984, (-1, 4)), "*MOT:\tthere's only one more corn on the cob and three of you guys .\n"), ((984, (28, 32)), "*MOT:\tthere's only one more corn on the cob and three of you guys .\n"), ((984, (40, 43)), "*MOT:\tthere's only one more corn on the cob and three of you guys .\n"), ((991, (-1, 4)), '*BR1:\tcan I have <half of it> [>] ?\n'), ((991, (26, 29)), '*BR1:\tcan I have <half of it> [>] ?\n'), ((991, (30, 33)), '*BR1:\tcan I have <half of it> [>] ?\n'), ((994, (-1, 4)), '*MOT:\t<what do you want> [<] ?\n'), ((997, (-1, 6)), '*MOT:\tyou still have some in your dish Heather !\n'), ((1002, (-1, 4)), '*BR2:\tI asked first .\n'), ((1005, (-1, 4)), "*BR1:\tI'm having half of it .\n"), ((1005, (17, 21)), "*BR1:\tI'm having half of it .\n"), ((1008, (-1, 4)), '*BR2:\tI asked first .\n'), ((1011, (11, 15)), '*MOT:\t&-uh guys !\n'), ((1015, (15, 20)), "*MOT:\tnobody's gonna (be)cause we don't have time .\n"), ((1015, (45, 49)), "*MOT:\tnobody's gonna (be)cause we don't have time .\n"), ((1020, (-1, 4)), '*MOT:\twe have_to go .\n'), ((1024, (-1, 4)), "*MOT:\tyou guys while I'm in the shower are cleaning off this table .\n"), ((1024, (32, 38)), "*MOT:\tyou guys while I'm in the shower are cleaning off this table .\n"), ((1024, (61, 66)), "*MOT:\tyou guys while I'm in the shower are cleaning off this table .\n"), ((1030, (26, 35)), '*BR1:\twhat about (.) &-um honey+dew ?\n'), ((1034, (6, 10)), '*MOT:\t&-uh .\n'), ((1035, (6, 12)), "*MOT:\tyou're just gonna have_to wait until we come [///] &-uh .\n"), ((1035, (32, 36)), "*MOT:\tyou're just gonna have_to wait until we come [///] &-uh .\n"), ((1035, (57, 61)), "*MOT:\tyou're just gonna have_to wait until we come [///] &-uh .\n"), ((1040, (-1, 4)), '*MOT:\tyou have the Fudgesicles .\n'), ((1044, (11, 14)), '*CHI:\t<Ma> [<] !\n'), ((1048, (6, 9)), '*BR2:\txxx can I do it when we get home ?\n'), ((1053, (-1, 4)), "*MOT:\tit'll be ten o'clock .\n"), ((1056, (-1, 4)), '*BR2:\tI know .\n'), ((1059, (-1, 4)), '*MOT:\twhen we get home [>] .\n'), ((1059, (23, 26)), '*MOT:\twhen we get home [>] .\n'), ((1065, (6, 10)), '*MOT:\tyeah .\n'), ((1069, (11, 14)), '*MOT:\t&-uh (.) if you guys want you can stay here and play with your friends .\n'), ((1069, (69, 76)), '*MOT:\t&-uh (.) if you guys want you can stay here and play with your friends .\n'), ((1074, (6, 9)), '*BR1:\tmom <can I have> [/] can I have <the ice cream now> [>] .\n'), ((1074, (43, 57)), '*BR1:\tmom <can I have> [/] can I have <the ice cream now> [>] .\n'), ((1074, (58, 61)), '*BR1:\tmom <can I have> [/] can I have <the ice cream now> [>] .\n'), ((1078, (-1, 4)), '*MOT:\t<and stay out> [<] until like nine .\n'), ((1078, (11, 15)), '*MOT:\t<and stay out> [<] until like nine .\n'), ((1081, (6, 11)), "*BR2:\twe're gonna be back [!] at ten ?\n"), ((1081, (12, 17)), "*BR2:\twe're gonna be back [!] at ten ?\n"), ((1081, (33, 36)), "*BR2:\twe're gonna be back [!] at ten ?\n"), ((1085, (6, 9)), '*SIS:\tzzz .\n'), ((1089, (11, 17)), '*CHI:\twhat church are we going to ?\n'), ((1096, (6, 9)), '*SIS:\tzzz !\n'), ((1113, (6, 10)), '*MOT:\t<eat this> [>] !\n'), ((1113, (11, 16)), '*MOT:\t<eat this> [>] !\n'), ((1113, (17, 20)), '*MOT:\t<eat this> [>] !\n'), ((1116, (6, 9)), '*BR2:\t<do we have_to go upstairs> [<] ?\n'), ((1116, (34, 37)), '*BR2:\t<do we have_to go upstairs> [<] ?\n'), ((1119, (6, 9)), '*MOT:\teat this .\n'), ((1125, (-1, 4)), "*BR1:\twe don't go upstairs .\n"), ((1132, (-1, 4)), '*BR2:\tdo we go upstairs [>] ?\n'), ((1132, (24, 27)), '*BR2:\tdo we go upstairs [>] ?\n'), ((1135, (21, 24)), "*MOT:\t<I don't know> [<] !\n"), ((1138, (6, 12)), "*MOT:\tyou're gon(t)a [: going to] be with the baby+sitter .\n"), ((1138, (46, 50)), "*MOT:\tyou're gon(t)a [: going to] be with the baby+sitter .\n"), ((1143, (-1, 4)), '*MOT:\tthis is a meeting .\n'), ((1143, (16, 23)), '*MOT:\tthis is a meeting .\n'), ((1146, (-1, 4)), '*MOT:\tthis is not &-um +...\n'), ((1152, (14, 20)), '*MOT:\tregular church .\n'), ((1159, (19, 24)), '*MOT:\tgive her her spoon right now .\n'), ((1162, (14, 20)), '*BR2:\tketchup please Mom .\n'), ((1165, (33, 38)), '*MOT:\tgive her [///] Heather her spoon Emily !\n'), ((1168, (-1, 4)), '*MOT:\tuse a fork !\n'), ((1168, (6, 9)), '*MOT:\tuse a fork !\n'), ((1168, (12, 16)), '*MOT:\tuse a fork !\n'), ((1171, (-1, 4)), "*CHI:\twhere's my fork then [>] ?\n"), ((1171, (17, 21)), "*CHI:\twhere's my fork then [>] ?\n"), ((1175, (15, 20)), "*MOT:\t<I don't know> [<] .\n"), ((1175, (21, 24)), "*MOT:\t<I don't know> [<] .\n"), ((1178, (-1, 4)), "*MOT:\tit's right here .\n"), ((1178, (6, 10)), "*MOT:\tit's right here .\n"), ((1181, (24, 29)), "*BR2:\txxx Heather's [!] spoon .\n"), ((1188, (9, 14)), "*BR2:\t<I don't have a spoon> [>] .\n"), ((1188, (22, 28)), "*BR2:\t<I don't have a spoon> [>] .\n"), ((1188, (29, 32)), "*BR2:\t<I don't have a spoon> [>] .\n"), ((1191, (-1, 4)), '*MOT:\t<use that fork> [<] .\n'), ((1191, (6, 10)), '*MOT:\t<use that fork> [<] .\n'), ((1191, (22, 25)), '*MOT:\t<use that fork> [<] .\n'), ((1194, (-1, 1)), '*MOT:\t<I know I just> [>] gave it to her .\n'), ((1200, (9, 14)), "*BR2:\t<I don't have a spoon> [<] .\n"), ((1200, (22, 28)), "*BR2:\t<I don't have a spoon> [<] .\n"), ((1200, (29, 32)), "*BR2:\t<I don't have a spoon> [<] .\n"), ((1203, (-1, 4)), '*BR2:\tsalt and pepper Mom .\n'), ((1203, (6, 10)), '*BR2:\tsalt and pepper Mom .\n'), ((1203, (15, 21)), '*BR2:\tsalt and pepper Mom .\n'), ((1206, (-1, 4)), '*MOT:\tFreddy give me the salt please .\n'), ((1206, (25, 29)), '*MOT:\tFreddy give me the salt please .\n'), ((1206, (30, 36)), '*MOT:\tFreddy give me the salt please .\n'), ((1209, (20, 26)), '*CHI:\tMa I need the butter !\n'), ((1215, (-1, 4)), "*MOT:\twhere's the butter ?\n"), ((1215, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1218, (-1, 4)), "*MOT:\twhere's the butter ?\n"), ((1218, (18, 24)), "*MOT:\twhere's the butter ?\n"), ((1228, (-1, 4)), "*MOT:\tyou're not gon(t)a [: going to] be able to finish this corn .\n"), ((1228, (25, 27)), "*MOT:\tyou're not gon(t)a [: going to] be able to finish this corn .\n"), ((1228, (61, 65)), "*MOT:\tyou're not gon(t)a [: going to] be able to finish this corn .\n"), ((1233, (10, 15)), "*MOT:\twhy don't we save this corn for you for later ?\n"), ((1233, (29, 33)), "*MOT:\twhy don't we save this corn for you for later ?\n"), ((1242, (6, 10)), '*MOT:\tyeah .\n'), ((1245, (6, 9)), '*MOT:\teat everything else <in your dish> [>] .\n'), ((1245, (35, 40)), '*MOT:\teat everything else <in your dish> [>] .\n'), ((1245, (41, 44)), '*MOT:\teat everything else <in your dish> [>] .\n'), ((1248, (12, 15)), "*BR1:\t<I'll eat it> [<] .\n"), ((1248, (16, 19)), "*BR1:\t<I'll eat it> [<] .\n"), ((1248, (20, 23)), "*BR1:\t<I'll eat it> [<] .\n"), ((1255, (-1, 4)), '*MOT:\tFreddy .\n'), ((1259, (-1, 4)), "*BR1:\tbut I'm hungry [!] (.) .\n"), ((1262, (16, 21)), '*BR3:\tMom is my mouth bigger than yours ?\n'), ((1262, (34, 39)), '*BR3:\tMom is my mouth bigger than yours ?\n'), ((1267, (-1, 4)), '*MOT:\thm: ?\n'), ((1267, (6, 9)), '*MOT:\thm: ?\n'), ((1270, (9, 16)), "*BR3:\tmy mouth's bigger than yours ?\n"), ((1270, (29, 34)), "*BR3:\tmy mouth's bigger than yours ?\n"), ((1276, (-1, 4)), "*MOT:\tI don't think so Pat (.) &-uh Brian .\n"), ((1285, (13, 19)), '*MOT:\tfinish eating .\n'), ((1288, (11, 14)), '*CHI:\t&a:h (.) !\n'), ((1289, (-1, 4)), '*CHI:\tMom ?\n'), ((1293, (-1, 4)), '*CHI:\tis she xxx food .\n'), ((1293, (17, 21)), '*CHI:\tis she xxx food .\n'), ((1296, (6, 10)), '*CHI:\thaha .\n'), ((1299, (6, 11)), "*CHI:\tshe's taking my food !\n"), ((1299, (22, 26)), "*CHI:\tshe's taking my food !\n"), ((1302, (6, 11)), "*BR3:\tdon't let [!] her .\n"), ((1305, (-1, 4)), '*MOT:\tHeather !\n'), ((1308, (-1, 4)), "*BR1:\tI'm still hungry !\n"), ((1311, (-1, 4)), '*MOT:\thave potato salad .\n'), ((1311, (11, 23)), '*MOT:\thave potato salad .\n'), ((1314, (-1, 4)), '*BR1:\tI hate potato salad .\n'), ((1314, (13, 25)), '*BR1:\tI hate potato salad .\n'), ((1317, (6, 9)), '*BR1:\txxx .\n'), ((1318, (10, 18)), '*MOT:\txxx broccoli .\n'), ((1321, (-1, 4)), "*BR1:\tI don't like it .\n"), ((1327, (6, 9)), '*SIS:\tzzz !\n'), ((1330, (6, 9)), '*SIS:\tzzz !\n'), ((1337, (-1, 4)), '*MOT:\thave more applesauce .\n'), ((1337, (16, 26)), '*MOT:\thave more applesauce .\n'), ((1340, (12, 17)), "*MOT:\tEmily don't do that to your chair .\n"), ((1340, (34, 39)), "*MOT:\tEmily don't do that to your chair .\n"), ((1345, (-1, 4)), '*BR1:\tHeather !\n'), ((1348, (6, 9)), '*SIS:\tzzz !\n'), ((1352, (6, 12)), '*BR3:\twan(t) (t)a see how big my mouth is ?\n'), ((1352, (33, 38)), '*BR3:\twan(t) (t)a see how big my mouth is ?\n'), ((1360, (6, 10)), '*BR2:\tlook [?] Brian .\n'), ((1363, (11, 14)), '*MOT:\tkeep [!] your mouth shut [!] when you have food in it .\n'), ((1363, (20, 25)), '*MOT:\tkeep [!] your mouth shut [!] when you have food in it .\n'), ((1363, (26, 30)), '*MOT:\tkeep [!] your mouth shut [!] when you have food in it .\n'), ((1363, (49, 53)), '*MOT:\tkeep [!] your mouth shut [!] when you have food in it .\n'), ((1369, (-1, 4)), "*MOT:\tIf you open it again (.) you're going in your room .\n"), ((1369, (31, 37)), "*MOT:\tIf you open it again (.) you're going in your room .\n"), ((1369, (52, 56)), "*MOT:\tIf you open it again (.) you're going in your room .\n"), ((1374, (6, 9)), '*BR1:\txxx .\n'), ((1378, (6, 9)), '*SIS:\tzzz (.) .\n'), ((1378, (10, 13)), '*SIS:\tzzz (.) .\n'), ((1382, (-1, 4)), '*BR1:\tdo you know what happens xxx ?\n'), ((1382, (31, 34)), '*BR1:\tdo you know what happens xxx ?\n'), ((1385, (-1, 4)), '*MOT:\thm: ?\n'), ((1385, (6, 9)), '*MOT:\thm: ?\n'), ((1388, (6, 9)), '*BR1:\txxx .\n'), ((1389, (6, 9)), '*CHI:\tzzz .\n'), ((1396, (29, 31)), '*MOT:\tfinish eating (.) &-um go get washed .\n'), ((1399, (6, 9)), '*CHI:\tzzz .\n'), ((1403, (-1, 4)), "*BR1:\twhat's the matter ?\n"), ((1403, (17, 23)), "*BR1:\twhat's the matter ?\n"), ((1406, (-1, 4)), "*BR2:\tI don't know .\n"), ((1409, (6, 9)), '*BR1:\txxx .\n'), ((1410, (-1, 4)), "*MOT:\tI can't help it if you hate half of what we got .\n"), ((1415, (-1, 4)), '*MOT:\tyou have_to learn (.) to eat it .\n'), ((1415, (24, 27)), '*MOT:\tyou have_to learn (.) to eat it .\n'), ((1418, (26, 29)), '*BR1:\t<I always hate xxx> [>] .\n'), ((1426, (6, 9)), '*SIS:\tzzz [<] .\n'), ((1426, (10, 13)), '*SIS:\tzzz [<] .\n'), ((1430, (-1, 4)), '*MOT:\tHeather what do you want ?\n'), ((1433, (6, 9)), "*BR1:\txxx [>] Brian's teasing xxx .\n"), ((1437, (-1, 4)), '*MOT:\toh he is huh ?\n'), ((1437, (6, 8)), '*MOT:\toh he is huh ?\n'), ((1445, (-1, 4)), "*BR1:\tI don't know .\n"), ((1448, (6, 9)), '*SIS:\tzzz .\n'), ((1452, (-1, 2)), '*BR2:\tMom !\n'), ((1456, (6, 9)), '*SIS:\tzzz [<] .\n'), ((1456, (10, 13)), '*SIS:\tzzz [<] .\n'), ((1460, (-1, 4)), '*MOT:\they !\n'), ((1460, (6, 9)), '*MOT:\they !\n'), ((1463, (-1, 4)), '*BR1:\tI am not .\n'), ((1466, (6, 9)), '*FAT:\txxx did !\n'), ((1469, (6, 9)), '*BR2:\txxx .\n'), ((1470, (14, 18)), '*MOT:\talright guys .\n'), ((1473, (6, 8)), '*BR1:\tow .\n'), ((1477, (-1, 4)), '*MOT:\tHeather .\n'), ((1480, (-1, 4)), '*MOT:\there .\n'), ((1483, (6, 9)), '*SIS:\tzzz .\n'), ((1487, (-1, 4)), '*MOT:\there give that to Heather .\n'), ((1490, (37, 43)), "*MOT:\talright Freddie if you're done please go get washed .\n"), ((1495, (-1, 4)), "*CHI:\tthis is <Heather's plate> [>] .\n"), ((1495, (32, 35)), "*CHI:\tthis is <Heather's plate> [>] .\n"), ((1499, (10, 14)), '*MOT:\tone pork chop .\n'), ((1499, (15, 19)), '*MOT:\tone pork chop .\n'), ((1505, (10, 15)), "*BR2:\tI'm gonna get more .\n"), ((1508, (-1, 4)), '*CHI:\tI want some water [>] !\n'), ((1508, (18, 23)), '*CHI:\tI want some water [>] !\n'), ((1508, (24, 27)), '*CHI:\tI want some water [>] !\n'), ((1512, (-1, 4)), "*CHI:\tthis is Heather's plate .\n"), ((1512, (24, 29)), "*CHI:\tthis is Heather's plate .\n"), ((1515, (-1, 4)), "*BR2:\tand you're not close to her .\n"), ((1515, (10, 16)), "*BR2:\tand you're not close to her .\n"), ((1519, (-1, 4)), '*CHI:\tand this is xxx [>] +/.\n'), ((1522, (-1, 4)), '*BR1:\t<this is dirty> [<] anyway .\n'), ((1522, (6, 11)), '*BR1:\t<this is dirty> [<] anyway .\n'), ((1525, (-1, 4)), '*BR1:\txxx the popsicle .\n'), ((1528, (-1, 4)), '*CHI:\there Heather .\n'), ((1531, (-1, 4)), '*MOT:\txxx here .\n'), ((1531, (6, 9)), '*MOT:\txxx here .\n'), ((1534, (-1, 4)), '*CHI:\tI want some more &-um (.) applesauce .\n'), ((1534, (28, 31)), '*CHI:\tI want some more &-um (.) applesauce .\n'), ((1534, (32, 42)), '*CHI:\tI want some more &-um (.) applesauce .\n'), ((1537, (-1, 4)), '*MOT:\there .\n'), ((1544, (-1, 4)), "*CHI:\tthere's a lot more left .\n"), ((1544, (16, 19)), "*CHI:\tthere's a lot more left .\n"), ((1544, (25, 29)), "*CHI:\tthere's a lot more left .\n"), ((1553, (-1, 4)), '*MOT:\tand [!] Pat and [!] Brian .\n'), ((1556, (-1, 4)), '*BR2:\tyeah ?\n'), ((1556, (6, 10)), '*BR2:\tyeah ?\n'), ((1560, (6, 9)), '*BR2:\txxx .\n'), ((1561, (6, 12)), "*BR2:\tyou're gonna get dirty with the Fudgesicle anyway (.) .\n"), ((1561, (13, 18)), "*BR2:\tyou're gonna get dirty with the Fudgesicle anyway (.) .\n"), ((1566, (-1, 4)), '*BR2:\txxx feel it .\n'), ((1571, (-1, 4)), '*MOT:\tleave it alone Emily !\n'), ((1578, (-1, 4)), '*MOT:\t<are you all done eating> [>] ?\n'), ((1578, (6, 10)), '*MOT:\t<are you all done eating> [>] ?\n'), ((1578, (32, 35)), '*MOT:\t<are you all done eating> [>] ?\n'), ((1581, (14, 18)), '*CHI:\txxx [<] yeah .\n'), ((1587, (6, 10)), "*MOT:\tit's on the counter (.) .\n"), ((1587, (18, 25)), "*MOT:\tit's on the counter (.) .\n"), ((1587, (26, 29)), "*MOT:\tit's on the counter (.) .\n"), ((1590, (-1, 4)), '*MOT:\thuh ?\n'), ((1590, (6, 9)), '*MOT:\thuh ?\n'), ((1597, (-1, 4)), '*MOT:\tget up .\n'), ((1600, (-1, 4)), '*MOT:\tget up .\n'), ((1603, (-1, 4)), '*MOT:\tgo find clothes to wear .\n'), ((1603, (14, 21)), '*MOT:\tgo find clothes to wear .\n')]
calculating accuracy and recall
correct labels:
set(['butter', 'porkchop', 'porkchops', 'applesauce', 'fruit salad', 'pork chop', 'corn', 'fudgesicle', 'pepper', 'potato salad', 'ketchup', 'water', 'corn on the cob', 'honey+dew', 'fudgesicles', 'salt', 'broccoli', 'ice cream', 'popsicle'])
predicted labels:
set(['', 'summer', "don't", 'mean>', 'yellow', 'the>', 'paper', 'radio', 'dish', 'yep', 'chair', 'thank', '<use', 'know>', 'applesauce', 'tape', 'plate', 'year>', 'good', 'food', 'dessert', 'gonna', 'have>', 'it>', 'spoon', '[>]', '[!]', 'mom', 'half', 'lady', 'day', 'room', '<good', 'ashtray', 'ice cream now>', 'stuff', 'best>', '&-uh', 'clothes', 'pork', 'ten', 'people', 'broccoli>', 'whole year', 'idea', 'potato salad', 'go', '<the', 'girl', '<it', '(.)', 'please', "there's", 'nope', 'pepper', 'eating', 'zzz', 'corn', 'use', 'water', '<and', 'wait', 'asked>', 'kids', 'oh', 'yup', 'study', 'chop', 'thing', 'cob', 'ow', 'spoon>', '<this', 'hm:', 'supply', '<fruit salad>', 'mommy', 'want>', '<not', 'church', 'table', 'cups', '<do', "you're", 'guess', "it's", 'hey', 'sure>', 'baby>', "we're", 'lot', 'meeting', 'fork', 'yeah>', "what's", 'xxx', 'haha', 'yeah', 'bum', 'baby', 'eat', "they're", 'who>', 'look', '[:', 'dish>', 'shower', 'matter', 'napkins', 'wan(t)', 'minutes', 'cob>', 'this>', "mine's", '<eat', "can't>", 'year', 'said>', 'player', 'shut', 'want corn', 'eat>', 'things', "broccoli's", 'hot', 'guys>', 'honey+dew', '<are', "mouth's", 'huh', 'friends', 'stay', "let's", 'mouth', '[<]', 'guys', 'broccoli', 'butter', '&a:h', 'fruit salad', 'zzz>', 'counter', 'tooth', 'time', "she's", 'left', 'salt', 'yours', 'heehee', "that's"])
file:HSLLD/HV1/MT//emimt1.cha
precision: 0.0666666666667
recall: 0.526315789474
true positives:['applesauce', 'broccoli', 'butter', 'corn', 'fruit salad', 'honey+dew', 'pepper', 'potato salad', 'salt', 'water']
false positives: ['', '&-uh', '&a:h', '(.)', '<and', '<are', '<do', '<eat', '<fruit salad>', '<good', '<it', '<not', '<the', '<this', '<use', '[!]', '[:', '[<]', '[>]', 'ashtray', 'asked>', 'baby', 'baby>', 'best>', "broccoli's", 'broccoli>', 'bum', "can't>", 'chair', 'chop', 'church', 'clothes', 'cob', 'cob>', 'counter', 'cups', 'day', 'dessert', 'dish', 'dish>', "don't", 'eat', 'eat>', 'eating', 'food', 'fork', 'friends', 'girl', 'go', 'gonna', 'good', 'guess', 'guys', 'guys>', 'haha', 'half', 'have>', 'heehee', 'hey', 'hm:', 'hot', 'huh', 'ice cream now>', 'idea', "it's", 'it>', 'kids', 'know>', 'lady', 'left', "let's", 'look', 'lot', 'matter', 'mean>', 'meeting', "mine's", 'minutes', 'mom', 'mommy', 'mouth', "mouth's", 'napkins', 'nope', 'oh', 'ow', 'paper', 'people', 'plate', 'player', 'please', 'pork', 'radio', 'room', 'said>', "she's", 'shower', 'shut', 'spoon', 'spoon>', 'stay', 'study', 'stuff', 'summer', 'supply', 'sure>', 'table', 'tape', 'ten', 'thank', "that's", 'the>', "there's", "they're", 'thing', 'things', 'this>', 'time', 'tooth', 'use', 'wait', 'wan(t)', 'want corn', 'want>', "we're", "what's", 'who>', 'whole year', 'xxx', 'yeah', 'yeah>', 'year', 'year>', 'yellow', 'yep', "you're", 'yours', 'yup', 'zzz', 'zzz>']
false negatives: ['corn on the cob', 'fudgesicle', 'fudgesicles', 'ice cream', 'ketchup', 'popsicle', 'pork chop', 'porkchop', 'porkchops']
# true pos: 10
# false pos: 140
# false neg: 9
HSLLD/HV1/MT//tammt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*SIS: what does the message mean on this ?', '*CHI: Mommy ?', '*CHI: what is that smell thing ?', '*SIS: hot dog .', "*MOT: that's your hot dogs an(d) hamburgers .", '*SIS: Mom can <we play> [>] ball outside ?', '*MOT: <cookin(g)> [<] .', '*MOT: gonna be eating now .', '*MOT: come on .', "*MOT: it's <eating time> [>] .", '*CHI: <where are we goin(g) to> [<] eat (.) ?', '*SIS: are we gonna eat outside or in (.) ?', '*CHI: shoot .', '*CHI: I hear that noise .', "*CHI: <that's me> [>] .", '*SIS: zzz [<] .', '*SIS: then me .', '*SIS: xxx [>] .', '*CHI: <then me> [<][>] .', '*MOT: <put it near Tanya> [<] where she sits .', '*CHI: then me .', '*MOT: (o)kay go back <there an(d) sit> [>] .', '*SIS: xxx [<] .', '*CHI: wait (un)til I put my pony away .', "*SIS: Tanya don't took a ball .", '*MOT: xxx chair .', '*MOT: it should be around the bottom of that .', '*FAT: John [?] hey !', '*FAT: stop !', '*FAT: get out o(f) the way .', '*MOT: xxx sittin(g) there .', '*MOT: shut it off whenever you want .', '*SIS: know what ?', '*SIS: I <wan(t) (t)a sit right here> [>] .', "*MOT: <Honey sit back there we're gonna> [<] give you your supper .", '*MOT: (o)kay Johnny sit there .', "*MOT: Tanya's there .", '*MOT: you want a hot dog or hamburger (.) .', '*SIS: hamburger .', '*MOT: Tanya ?', '*CHI: <I want a> [>] .', '*BRO: mm [<] .', '*CHI: <hot dog> [>] .', '*BRO: <hot dog> [<][>] .', "*SIS: <I'll have a> [<] hot dog I mean .", '*MOT: please .', '*SIS: please [>] .', '*BRO: <I want a> [<] .', '*BRO: hot dog [>] .', '*CHI: please [<] ?', '*MOT: please .', '*CHI: please ?', '*SIS: thank you [>] .', '*CHI: please [<] ?', '*SIS: <Mommy> [>] .', '*CHI: <Ma thank you> [<] .', '*CHI: zzz .', '*CHI: <Mommy> [>] !', '*SIS: <thank you> [<] .', '*CHI: thank you [>] .', '*SIS: zzz [<] .', '*MOT: do you want ketchup [>] ?', '*CHI: zzz [<] .', '*CHI: zzz [>] .', '*SIS: yes [<] (.) .', '*SIS: xxx (.) .', '*MOT: wha(t) d(o) you want Tanya ketchup ?', '*CHI: nope .', '*CHI: zzz .', '*MOT: <want ketchup Michele> [>] ?', '*SIS: <I want some> [<] .', '*SIS: ketchup please [>] .', '*CHI: <I want> [<] ketchup .', '*SIS: zzz .', '*SIS: zzz [>] .', '*FAT: xxx [<] .', '*FAT: please [>] .', '*CHI: zzz [<] .', '*CHI: zzz [>] .', '*MOT: please [<] .', '*SIS: please .', '*CHI: please (.) .', '*SIS: oh [!] I got a lot [!] .', '*MOT: yep .', '*SIS: (y)um .', '*MOT: ketchup for Johnny .', '*CHI: there is no more .', '*MOT: sorry (.) .', '*MOT: they have more up in that machine [>] .', "*CHI: <we're gonna> [<] be at Jennifer's tomorrow .", '*CHI: night [>] .', '*SIS: yeah [<] !', '*MOT: wow !', '*MOT: what do you do you <do there> [>] ?', '*SIS: yeah [<] [?] .', '*SIS: an(d) [///] when Mommy ?', '*SIS: when Daddy babysitted@n on he (.) Johnny and &-uh Mom .', "*MOT: an(d) tell me what you do at Jennifer's .", '*MOT: <<let Tanya> [/] let Tanya> [>] tell me .', '*SIS: <we went upstairs> [<] .', '*MOT: an(d) wha(t) do you do .', '*CHI: we went upstairs .', '*CHI: we sleep on the floor .', '*MOT: an(d) what else ?', '*CHI: we went in the pool .', '*MOT: yeah .', '*BRO: hey .', '*BRO: <in the> [>] pool .', '*MOT: <knock it off> [<] .', '*BRO: hey .', '*BRO: xxx at the pool ?', '*BRO: zzz .', '*MOT: you go in the pool ?', '*CHI: <we go upstairs> [>] .', '*BRO: zzz [<] .', '*BRO: zzz [>] .', '*MOT: <you go in the pool an(d) the> [<] hot tub ?', '*BRO: yeah [>] ?', '*BRO: <hot tub> [>] ?', '*SIS: <hey Ma we sleep> [<] downstairs [!] .', '*BRO: zzz .', '*MOT: downstairs [<] [>] ?', '*SIS: no we sleep down cellar .', '*BRO: zzz .', '*MOT: everybody <can start eating> [>] .', '*BRO: zzz [<][>] .', '*MOT: now [<][>] .', '*SIS: they [<] sleep down .', '*SIS: cellar [>] .', '*BRO: zzz [<][>] .', '*MOT: <start eating> [<] Johnny .', '*MOT: here [>] you go .', '*BRO: zzz [<] .', '*CHI: we [/] we can <Mommy ask (A)manda> [//] Mommy ask (A)manda if she can come see us .', '*MOT: oh yeah ?', '*MOT: okay start eating (.) .', "*CHI: it's hot .", '*CHI: ow .', '*CHI: ow .', '*CHI: ow [>] .', '*BRO: ow [<] .', '*SIS: ow .', '*MOT: no .', '*MOT: <le(t) me see> [>] .', '*CHI: ow [<] .', '*MOT: would you get the relish please (.) ?', "*SIS: Mama <I got> [//] I can't have ketchup .", '*MOT: oh alright just you eat it plain then .', '*CHI: I want some o(f) that on please .', '*MOT: you like this ?', '*MOT: yep .', "*MOT: no that's gonna be the same thing Michele .", "*MOT: it's gonna be too much for you [>] +...", '*CHI: yyy [<] .', '*SIS: <me> [/] [>] .', "*MOT: <it's gonna be> [<] too much for .", '*MOT: <your xxx> [>] .', '*SIS: <me a> [<] little .', '*MOT: just a little bit ?', '*SIS: yeah .', '*SIS: like that much .', '*MOT: Tanya what did you do today ?', '*CHI: what ?', '*MOT: what did you do today ?', '*CHI: at Jennifer house ?', '*SIS: no [>] .', '*MOT: no [<] .', '*MOT: here .', '*MOT: (di)d you go in your sprinkler ?', '*CHI: yeah .', '*MOT: an(d) what else did you play with down cellar .', '*CHI: with bats .', '*CHI: pony pony pony [>] .', '*MOT: <an(d) with ponies> [<] ?', '*MOT: <an(d)> [>] did you play house (.) ?', '*CHI: <an(d) ponies> [<][>] .', '*SIS: yeah [<] .', '*MOT: you <play house> [>] ?', '*SIS: <&-uh no> [<] .', '*CHI: yep .', '*MOT: no ?', "*SIS: no you didn't .", '*MOT: did you read any books ?', '*CHI: no .', '*SIS: mm I did (.) .', '*SIS: I did .', '*CHI: an(d) me .', '*SIS: get out of here .', '*SIS: I read (th)em to (h)er .', '*SIS: zzz .', '*MOT: you did ?', '*MOT: you read (th)em to (h)er ?', '*SIS: Mommy <is this> [/] is this from the stove or are these like burned ?', "*MOT: no that's from the grill .", '*SIS: oh .', "*MOT: that's not burned it's the (.) somethin(g) from the grill .", '*CHI: you like it (.) ?', '*CHI: you like it Michele ?', '*SIS: (y)um (.) !', '*SIS: (y)um !', "*MOT: you like it don't you <Tanya> [>] ?", '*BRO: zzz [<] .', '*CHI: no [>] .', '*BRO: zzz [<] .', '*BRO: Mommy .', '*CHI: I like pepper .', "*MOT: start eatin(g) they're not <gon(t)a [: going to] xxx> [>] .", '*MOT: <come on> [>] .', '*BRO: <I do Mama> [<] .', '*BRO: I do .', '*MOT: okay you do ?', '*BRO: yeah [>] .', "*MOT: xxx [<] time you can't eat something .", '*BRO: xxx [>] .', "*MOT: <your supper's here> [<] .", '*FAT: holy shit .', "*MOT: oh they'll probably hear you .", "*CHI: no don't <put that> [>] near me .", '*MOT: good [<] ?', '*BRO: zzz .', '*SIS: Ma what is that stuff [<] [>] ?', '*MOT: xxx [>] .', '*SIS: <stickin(g)> [<] inside [?] ?', '*MOT: zzz .', '*MOT: I <already xxx or> [>] +...', '*BRO: xxx [<] man ?', '*CHI: zzz .', '*MOT: Tanya how high can you count up to (.) ?', '*MOT: can you count ?', '*MOT: alright please do it .', '*CHI: one three four [>] .', '*MOT: two [<] .', '*CHI: you forgot five [>] .', '*MOT: nope [<] .', '*MOT: you skipped two (.) .', '*MOT: one .', '*MOT: start again .', '*MOT: one .', '*CHI: one .', '*BRO: zzz .', '*BRO: zzz [>] .', '*CHI: one [<][>] .', '*MOT: two [<] .', '*CHI: two [>] .', '*BRO: zzz [<] .', '*MOT: three [>] .', '*CHI: three [<] .', '*MOT: go (a)head .', '*MOT: <<I wan(t) (t)a> [>] see> [//] I wan(t) (t)a have her do it (.) .', '*CHI: four [<] .', "*MOT: don't .", '*MOT: go (a)head Tanya .', '*CHI: six .', '*MOT: you skip five ?', '*CHI: five .', '*MOT: six .', '*MOT: go (a)head .', '*CHI: six .', '*MOT: go (a)head .', '*CHI: seven eight nine ten eleven [/] [>] .', '*MOT: talk <a little louder> [<] .', '*CHI: what ?', '*MOT: talk a little louder (.) .', '*CHI: one three .', '*MOT: nope .', '*MOT: one .', '*CHI: one .', '*MOT: two .', '*CHI: two .', '*MOT: talk a little louder .', '*CHI: what (.) ?', '*SIS: talk [/] talk [>] .', '*CHI: what [<] ?', '*SIS: a little louder .', '*MOT: alright .', "*MOT: why don't you do your A_B_Cs .", '*MOT: can you say your A_B_Cs for me ?', "*CHI: (I')m gonna do it fast .", '*MOT: go (a)head (.) .', '*MOT: sing it .', '*MOT: <a@l b@l c@l> [>] .', '*CHI: what [<] ?', '*MOT: sing your A_B_Cs .', '*MOT: <Dad wants to hear> [>] you .', '*CHI: I <can do it fast> [<] .', '*MOT: <Dad wants to hear you> [>] .', '*CHI: <wan(t) me do it fast> [<] ?', '*MOT: yep .', '*CHI: (o)kay .', '*MOT: go (a)head .', '*CHI: one three four five six <seven eight> [>] nine ten eleven thirteen .', '*CHI: twelve [<] .', '*SIS: no [>] .', '*MOT: no [<] .', "*MOT: it's twelve thirteen .", '*CHI: thirteen ?', '*MOT: get out o(f) there get out o(f) there (.) .', '*MOT: c(o)me on eat your supper .', '*MOT: okay keep eating (.) .', '*MOT: that good (.) ?', "*MOT: you gonna go to Daddy's game tonight ?", '*CHI: no .', '*SIS: no .', '*MOT: why ?', '*CHI: stay <with (A)manda> [>] .', "*SIS: <because it> [<] ain't no park .", "*MOT: (be)cause it <isn't a park> [>] ?", "*SIS: <I hate it when it> [<] ain't a park (.) .", '*CHI: ouch .', '*BRO: xxx .', '*BRO: xxx .', '*BRO: next to the stove [?] .', '*BRO: xxx .', '*CHI: hm: [?] ?', '*CHI: hm: ?', '*CHI: zzz [>] .', '*MOT: <Tanya you gonna go to> [<] school pretty soon ?', '*SIS: <put this down> [<] [>] .', '*MOT: hm: ?', '*CHI: what ?', '*CHI: huh ?', '*MOT: your Dad had wanted you to say [?] some(th)in(g) for after dinner .', "*MOT: it's getting too long .", "*MOT: I don't know how long it takes xxx [>] .", '*BRO: xxx [<] .', '*BRO: xxx [>] ?', '*SIS: what [<] ?', '*BRO: xxx ?', "*MOT: I'm talkin(g) to Daddy .", '*SIS: oh .', '*MOT: he has to ask [>] her some questions or somethin(g) .', '*BRO: zzz [<] .', '*FAT: Tanya <count to> [/] count to ten .', "*CHI: I can't .", '*FAT: you can .', '*MOT: tell Daddy .', '*MOT: <Daddy wants> [>] to listen .', '*FAT: <count to ten> [<] .', '*CHI: huh ?', '*FAT: <le(t) me hear you count> [>] .', '*MOT: <Daddy wants to> [<] hear you .', '*FAT: count to ten (.) .', '*FAT: <an(d) slow> [>] [//] slow down when you count .', '*CHI: zzz [<] .', "*CHI: don't wan(t) (t)a do it .", '*MOT: alright .', '*MOT: one one +...', '*CHI: one .', '*MOT: two +...', '*FAT: speak louder .', '*MOT: speak up a little louder .', '*CHI: three .', "*FAT: I can't hear [>] .", '*MOT: three [<] .', '*MOT: four .', '*MOT: speak loud like you always do .', '*CHI: three .', '*MOT: three .', '*CHI: four .', '*MOT: five .', '*CHI: five .', '*MOT: go (a)head six [>] .', '*CHI: six [<] .', '*MOT: seven [>] .', '*CHI: seven [<] [>] eight nine .', '*MOT: go (a)head .', '*CHI: ten [>] +...', '*BRO: <Mommy> [<] .', '*BRO: Mommy .', '*MOT: eleven [>] twelve .', '*SIS: eleven [<] .', '*CHI: twelve .', '*MOT: thirteen .', '*SIS: thirteen [>] .', '*CHI: <thirteen > [<] (.) .', '*FAT: say your A_B_Cs (.) .', '*BRO: c@l .', '*MOT: a@l .', '*BRO: a@l .', '*CHI: a@l .', '*MOT: right .', '*MOT: can you sing (th)em ?', '*MOT: you [//] let us hear how you can sing [<] .', '*CHI: what [<] ?', '*MOT: <your A_B_Cs> [>] .', '*FAT: zzz [<] .', '*CHI: <a@l b@l c@l> [>] .', '*BRO: <Mommy> [<] .', '*MOT: no [>] .', '*BRO: xxx [<] .', '*BRO: xxx [>] .', '*MOT: <take your finger out o(f)> [<] [>] your mouth here .', '*CHI: <d@l e@l> [<] .', '*MOT: loud .', '*MOT: <loud Tanya a@l> [>] .', '*CHI: <a@l b@l> [<] c@l d@l f@l g@l (.) h@l i@l j@l k@l l@l o@l p@l (.) .', '*MOT: q@l r@l +...', '*CHI: q@l r@l s@l .', '*MOT: t@l u@l v@l .', '*SIS: I hate you .', '*FAT: shut up !', '*SIS: zzz [>] .', "*MOT: doesn't know (th)em .", '*SIS: zzz .', '*FAT: you got (t)a open your mouth .', '*MOT: open your mouth an(d) say it louder .', '*MOT: a@l go (a)head (.) .', "*MOT: we're only listenin(g) to you that's all .", '*MOT: a@l b@l +...', '*CHI: c@l .', '*FAT: <open your> [>] mouth .', '*MOT: <e@l> [<] .', '*CHI: e@l .', '*MOT: <f@l g@l> [>] .', "*FAT: <I can't hear you> [<] .", '*FAT: yell it out .', '*CHI: a@l (.) .', '*FAT: yell it out .', '*CHI: what ?', "*FAT: I <can't hear you> [>] .", "*MOT: <alright we'll say it> [<] together .", '*MOT: a@l +...', '*CHI: a@l .', '*MOT: b@l .', '*CHI: c@l .', '*MOT: b@l .', '*CHI: b@l .', '*MOT: c@l .', '*CHI: c@l .', '*MOT: d@l .', '*CHI: d@l .', '*MOT: e@l .', '*CHI: e@l .', '*MOT: f@l .', '*CHI: f@l .', '*MOT: g@l .', '*CHI: g@l .', '*MOT: h@l .', '*CHI: h@l .', '*MOT: i@l (.) louder .', '*CHI: huh ?', '*MOT: i@l .', '*CHI: i@l .', '*MOT: j@l .', '*CHI: j@l .', '*MOT: k@l .', '*CHI: k@l .', '*MOT: l@l .', '*CHI: l@l .', '*MOT: m@l .', '*CHI: m@l .', '*MOT: n@l .', '*CHI: n@l .', '*MOT: o@l .', '*CHI: o@l .', '*MOT: p@l .', '*CHI: p@l .', '*MOT: q@l .', '*CHI: q@l .', '*MOT: r@l .', '*CHI: r@l .', '*MOT: s@l .', '*CHI: s@l .', '*MOT: t@l .', '*CHI: t@l .', '*MOT: u@l .', '*CHI: u@l .', '*MOT: v@l .', '*CHI: v@l .', '*MOT: w@l .', '*CHI: w@l .', '*MOT: x@l .', '*CHI: x@l .', '*MOT: y@l .', '*CHI: y@l .', '*MOT: z@l .', '*CHI: z@l .', '*FAT: now you say it by yourself .', '*FAT: sing it (.) .', "*CHI: I don't wan(t) (t)o .", '*MOT: she already did .', '*MOT: &-um how old are you (.) .', '*MOT: say it .', '*MOT: four ?', '*CHI: four .', '*MOT: years old (.) .', '*MOT: where (di)d <you have your> [>] birthday party ?', '*CHI: <years old> [<] .', "*CHI: McDonald's (.) .", '*SIS: and xxx .', "*MOT: wha(t) (di)d you see at McDonald's (.) ?", "*MOT: wha(t) di(d) you see at McDonald's .", '*CHI: pop .', '*MOT: (a)n(d) what else .', '*MOT: where (di)d they bring you (.) ?', '*MOT: in the +...', '*CHI: what ?', "*MOT: where (di)d they bring you <in the> [/] in the McDonald's ?", '*MOT: what (di)d you see ?', '*MOT: the freezer ?', '*FAT: xxx .', '*FAT: xxx [>] .', '*MOT: <an(d) wha(t) (di)d they have in the freezer> [<] .', '*CHI: my cake .', '*MOT: your cake .', '*MOT: oh (.) .', '*MOT: <an(d) what> [>] did you get for your birthday (.) ?', '*BRO: <Mommy> [<] ?', '*BRO: Mommy ?', '*MOT: <(re)member> [>] ?', '*CHI: xxx [<] .', '*BRO: <Mommy> [>] ?', '*MOT: what [<][>] ?', '*MOT: kind [<][>] .', '*CHI: <yep [?]> [<] .', '*CHI: brownies .', '*MOT: (di)d you get a Cookie Monster wagon ?', '*CHI: yeah .', '*MOT: you say it (.) .', '*CHI: and it +/.', '*SIS: Mom .', '*MOT: hm: .', '*SIS: tell (h)er going in [!] the freezer too .', '*MOT: yeah .', '*MOT: did you go in the freezer (.) ?', '*MOT: (di)d you get your cake ?', '*CHI: Michele did .', '*MOT: Michele did ?', '*MOT: <you did> [>] too .', '*FAT: xxx [<] .', '*MOT: not <just Michele> [>] .', '*SIS: <know what> [<] Mom ?', '*SIS: once <I went i(n)> [//] when I went in there I was by myself .', '*MOT: oh yeah (.) .', "*SIS: Ma I can't get any beer [?] .", '*MOT: mm [>] .', '*FAT: mm [<][>] .', '*SIS: what [<] (.) ?', '*MOT: Tanya you wan(t) (t)a &s tell a story (a)bout school or somethin(g) (.) ?', '*MOT: wan(t) (t)a tell Daddy a story about school or somethin(g) ?', '*CHI: hey .', '*MOT: maybe we should speed it along (.) .', '*CHI: that mine .', '*MOT: how was your supper ?', '*CHI: yeah .', '*MOT: your supper good (.) ?', '*MOT: gonna eat it all ?', '*FAT: where you goin(g) next year .', '*CHI: camp Florida .', '*FAT: where ?', '*CHI: Florida .', '*FAT: what are you gonna see ?', '*CHI: Mickey Mouse an(d) Donald .', '*MOT: oh wow (.) .', '*MOT: what are you gonna do there (.) ?', '*MOT: gonna go to the beach ?', '*CHI: yeah .', '*MOT: yeah ?', '*CHI: yep .', "*MOT: you've got_to answer (.) .", "*FAT: <who's i(n)> [/] who's in Florida .", '*CHI: hm: ?', "*FAT: who's in Florida (.) .", '*MOT: get the fork out o(f) your mouth an(d) talk .', "*FAT: who's in Florida .", '*MOT: say it loud .', '*CHI: what ?', "*MOT: who's in Florida (.) ?", "*CHI: I don't know .", '*FAT: who you gonna go see .', '*MOT: Mickey +...', '*MOT: Mickey an(d) Donald .', '*FAT: who else .', '*CHI: Minnie Mouse .', '*FAT: who else .', '*CHI: Donald .', '*FAT: who ?', '*MOT: Goofy .', '*CHI: Goofy .', '*FAT: yeah ?', '*FAT: who else ?', '*SIS: Pluto .', '*MOT: Pluto .', '*CHI: <Pluto> [>] .', '*SIS: xxx [<] .', '*MOT: Chip_n_Dale .', '*CHI: <<Plu(to)> [//] Pluto> [<] .', '*FAT: Three Little Pigs (.) ?', '*MOT: oh <(re)member> [/] [>] .', '*CHI: <Three Little> [<] Pigs .', '*MOT: Cinderella .', '*CHI: <Cinderella> [>] .', '*SIS: <Tanya (re)member> [<] .', '*SIS: <Goofy> [>] .', '*MOT: <Snow White> [<] .', '*CHI: Snow <White> [>] .', '*SIS: <Goofy> [<] ?', '*MOT: &-um Dumbo [!] .', '*CHI: Dumbo (.) .', '*CHI: an(d) Mickey !', '*MOT: mm .', "*MOT: okay we're gonna finish eating now (.) .", '*FAT: zzz [>] .', "*CHI: <(o)kay I'm through> [<] .", '*SIS: milk .', '*CHI: I have some milk Mommy .', '*FAT: where you goin(g) to school next year ?', '*MOT: xxx .', '*CHI: huh ?', '*FAT: where you gonna go to school next year (.) .', "*CHI: I don't know .", '*MOT: Head Start ?', '*CHI: Head Start .', "*FAT: who's your teacher .", '*CHI: what (.) ?', "*FAT: who's your teacher gonna be ?", "*MOT: say I don't know yet (.) .", '*CHI: Jane ?', '*FAT: Jane ?', '*SIS: no [>] .', '*MOT: had [<] Jane last year .', '*CHI: yeah Jane .', "*MOT: you'll have a different one this year .", '*SIS: <Rhoda an(d) Mary xxx> [>] .', "*FAT: <won't have Jane this year> [<] .", '*SIS: xxx [>] .', "*CHI: <I'll have Rhoda> [<] .", '*FAT: <gonna have> [>] Rhoda ?', '*SIS: <Rho(da)> [<] .', '*CHI: yep [>] .', '*SIS: <Rhoda> [<] an(d) Mary .', '*CHI: I have Rhoda an(d) Mary (.) .', '*MOT: you like Head Start ?', "*CHI: what's that ?", '*MOT: huh ?', '*MOT: <did Head Start> [>] teach you .', '*MOT: <did Head Start> [>] teach you .', '*CHI: oh [<] .', '*CHI: wow [<] .', '*MOT: <a lot of things> [>] ?', "*MOT: <they're> [>] gonna hear that xxx +...", '*SIS: <Dad you got me> [<] .', '*SIS: you got another one .', '*MOT: Tanya (.) .', '*MOT: did Head Start teach you a lot o(f) things (.) ?', "*MOT: (i)t's a good school huh ?", '*CHI: yeah [>] .', '*FAT: <wha(t) do you do> [<] when you go to school ?', '*FAT: go on field trips ?', '*CHI: paint .', '*MOT: paint [>] ?', '*FAT: paint [<] ?', '*FAT: an(d) what else ?', '*MOT: color ?', '*CHI: color .', '*MOT: what else .', '*MOT: d(o) <you make> [/] you make things ?', '*CHI: xxx [>] .', '*FAT: <what can you write> [<] ?', '*FAT: papers [>] ?', '*MOT: numbers [<][>] ?', '*CHI: xxx [<] play .', '*FAT: you write your name ?', '*CHI: mhm .', '*CHI: yeah .', '*CHI: <an(d) I> [>] +...', '*FAT: what [<] else .', "*MOT: let's see what else .", '*MOT: play .', '*CHI: play .', '*MOT: play ground .', '*CHI: play ground [>] .', '*SIS: field [<] .', '*CHI: make [>] (.) .', '*MOT: puzzles [<] ?', '*CHI: <things I want> [>] .', '*BRO: zzz [<] .', '*BRO: zzz [>] .', '*MOT: makes puzzles ?', '*CHI: yeah .', '*CHI: xxx .', '*MOT: an(d) she takes walks .', '*MOT: huh ?', '*CHI: we go on the school bus .', '*MOT: wha(t) (di)d you say ?', '*MOT: you ride on the school bus ?', '*CHI: yeah .', '*MOT: mm .', '*MOT: <you like that> [>] ?', '*SIS: <tell her> [<] [/] tell her your nickname .', '*SIS: xxx .', "*MOT: what was your school bus driver's name .", '*CHI: hm: ?', "*MOT: what was your <b(us)> [//] school bus driver's name (.) .", '*MOT: <Lilly Ann> [>] ?', '*CHI: <Lilly Ann> [<] ?', '*MOT: mhm .', '*CHI: can I have a drink ?', '*MOT: yep .', '*SIS: one two three .', '*MOT: you want milk ?', '*CHI: water .', '*MOT: please ?', '*SIS: water please .', '*CHI: please (.) .', '*SIS: hi Mom .', '*SIS: xxx [>] .', '*CHI: <Mama> [<] ?', '*SIS: zzz .', '*CHI: zzz .', '*MOT: zzz .', '*CHI: xxx [>] .', "*MOT: <oh Tanya you're> [<] almost all done with your supper .", '*MOT: look at that !', '*MOT: one more to go .', '*MOT: couple more .', '*BRO: zzz .', '*MOT: good .', '*SIS: Mom look [>] .', '*MOT: couple [<] more .', "*SIS: I'm done .", '*MOT: open (.) .', "*MOT: it's gonna cry [?] in your mouth a lot quicker (.) .", "*MOT: you're done ?", '*FAT: d(o) you wan(t) another one ?', '*MOT: oh you ate <another huh> [>] ?', '*SIS: no [<] (.) .', '*SIS: ow (.) .', '*MOT: wait [?] (.) .', "*MOT: what else do you do at Jennifer's besides do [//] <go in the pool> [>] Tanya .", '*CHI: hm: [<] ?', '*MOT: d(o) you play ?', '*SIS: can I talk ?', '*MOT: in a play room (.) ?', '*CHI: <we pick> [/] we +/.', '*SIS: we read books .', '*MOT: huh ?', '*SIS: we read books [>] .', '*MOT: read [<] books ?', '*MOT: what else .', '*MOT: play games ?', '*CHI: <n(o)> [/] no xxx .', '*MOT: oh .', "*MOT: what's your favorite thing you got for your birthday (.) ?", '*MOT: you <have a favorite thing> [>] ?', '*CHI: <Cookie Monster> [<] ?', '*MOT: Cookie Monster ?', '*MOT: oh your Cookie Monster wagon ?', '*MOT: do you watch Sesame Street Tanya ?', '*CHI: hm: ?', '*MOT: do you watch Sesame Street ?', '*MOT: what else .', '*MOT: Disney (.) ?', '*CHI: yeah [>] .', '*SIS: xxx [<] xxx there (.) .', '*BRO: mm I want that .', '*BRO: Mommy I <want that> [>] .', '*MOT: <you want> [<] that ?', '*FAT: sit down .', "*CHI: zzz you're all done [!] (.) ?", '*CHI: good boy .', '*MOT: zzz (.) .', '*MOT: are you a good girl Tanya an(d) a bad girl sometimes ?', '*MOT: what are you a good girl or bad girl (.) .', '*MOT: huh ?', '*MOT: do you know (.) ?', "*MOT: y(ou) don't know (.) ?", '*MOT: good girl most o(f) the time an(d) a bad girl a little bit o(f) the time .', '*MOT: (i)s that right (.) ?', "*CHI: I'm done .", '*CHI: all [>] done .', '*SIS: <me too> [<] .', '*CHI: Matthew sit in the corner .', '*MOT: Matthew did (.) ?', '*CHI: at home .', '*MOT: oh tell me a story about school (.) .', '*MOT: what happened ?', '*FAT: wha(t) do you wan(t) out there .', '*MOT: why did Matthew used to sit in the corner (.) .', '*MOT: why did Matthew used to sit in the corner .', '*CHI: (be)cause he said bad word .', "*MOT: oh an(d) you're not s(up)posed to say bad words right ?", "*MOT: you don't say bad words do you ?", '*CHI: no .', '*MOT: no .', '*CHI: know if I did ?', '*CHI: <I mean [?] sit in a corner> [>] .', '*SIS: xxx [<] (.) .', '*MOT: huh Tanya ?', '*CHI: <I xxx [/] > [>] .', '*SIS: <Tanya tell (h)er> [<] [//] tell (h)er you put the sprinkler on .', '*CHI: Mom is the sprinkler still on ?', '*MOT: you want me to put the sprinkler on ?', '*CHI: yeah .', '*SIS: yeah .', '*CHI: (be)cause I wan(t) (t)a get wet .', '*MOT: you want dessert now or later ?', '*SIS: later .', '*SIS: xxx [>] .', '*MOT: later [<] ?', '*SIS: xxx [>] .', '*CHI: Mommy <take it away> [<] .', "*MOT: <okay we're all done> [>] .", "*CHI: <I can't get out> [<] .", '*BRO: <then me> [>] .', '*SIS: <another fly> [<] .', "*CHI: <le(t)'s see> [>] .", '*SIS: <is in here> [<] ?', '*MOT: mhm .', '*SIS: you got one .', '*SIS: now you got [/] [>] .', '*CHI: <Mommy> [<] see ?', "*CHI: somebody's goin(g) (ta) s(teal) take that shovel an(d) .", "*MOT: an(d) we're <gonna bring it> [<] in .", "*MOT: don't worry about it .", "*MOT: we're gonna go out now .", '*MOT: leave that alone !', '*CHI: xxx [<] .', '*CHI: but I <wan(t) (t)a put it [= tape recorder]> [>] on .', "*MOT: <we're gonna go out now> [<] .", '*MOT: it is .', "*MOT: <we're gonna bring it outside> [<] .", '*CHI: no <I want it outside> [>] .', "*MOT: <we're gonna bring it outside> [<] .", '*MOT: bring it outside an(d) when you go in the sprinkler .', "*SIS: but you can't get that wet .", '*CHI: nope .', '*MOT: no .', '*CHI: Mom .', '*CHI: xxx .', '*MOT: wait a minute Michele .', "*CHI: <don't put> [///] my xxx you share your pan .", "*CHI: xxx you didn't .", '*CHI: somebody near(ly) punched my Mommy in the face .', '*MOT: hey (.) .', '*MOT: no .', "*MOT: don't say that .", '*CHI: (h)ey xxx away .', '*MOT: say bye bye for now (.) .', '*MOT: say bye .', '*CHI: no .', '*MOT: <say bye> [>] .', '*CHI: <put it> [<][>] .', '*SIS: <I wan(t) (t)a say> [<] .', '*CHI: on [>] .', '*SIS: <bye bye> [>] .', '*MOT: <you want it> [<] on ?', '*CHI: yeah .', '*SIS: <put it xxx say bye bye> [>] .', '*MOT: no [<] .', "*MOT: alright we'll just leave it there .", "*CHI: you didn't put it on [>] .", '*MOT: <say bye bye> [<][>] .', '*SIS: <bye bye> [<] .', '*MOT: you say bye Tanya .', '*MOT: say bye bye (.) .', "*MOT: you're not leavin(g) xxx [>] .", "*SIS: <Mom that's> [<] stayin(g) on xxx .", '*MOT: Tanya !', '*MOT: leave it alone .', '*CHI: I wan(t) (t)a put this on .', '*MOT: no Michele .', "*MOT: let's see .", "*MOT: I think it'll be alright though xxx (.) .", "*MOT: see its on it's workin(g) don't touch it .", '*CHI: <Mom put it> [/] [>] .', '*SIS: <Mom try> [<] .', '*SIS: to untangle it .', '*CHI: zzz [<][>] .', '*MOT: <(o)kay> [<] ?', "*MOT: that's on .", '*CHI: no put it <on [!]> [>] .', '*SIS: <try to untangle> [<] .', '*MOT: oh shit !', '*MOT: oh shoot .', '*MOT: oh I think I just +...', '*MOT: shoot .', '*MOT: okay wait a minute .', '*MOT: I have_to fix this (.) .', '*MOT: no I think it was alright .', '*MOT: it just made it .', '*MOT: oh (.) .', '*MOT: think I just made it .', '*SIS: not gonna get tape recorder [?] xxx wet (.) ?', "*MOT: no I'm not puttin(g) it up very high .", '*MOT: right now okay ?', '*MOT: zzz oh [!] I did .', '*MOT: oh .', "*MOT: I can't do it right now Michele .", '*SIS: alright .', "*MOT: won't go right .", '*MOT: can you push it up near where the pail is ?', '*SIS: huh ?', '*MOT: go push it up near where the pail is ?', '*MOT: push it up for me where the pail is .', '*MOT: back .', '*MOT: can you push it back a little ?', '*MOT: like I had it before (.) ?', "*MOT: that's it (.) .", '*MOT: <try right there> [>] .', '*SIS: <here [?] > [<] ?', "*MOT: yeah let's try that .", '*MOT: (o)kay Tanya come on .', '*MOT: you gonna go in the sprinkler ?', '*MOT: come on .', '*MOT: oh .', "*MOT: okay we'll leave it right there .", "*MOT: that's okay .", "*MOT: long as it's down .", "*MOT: that's not that high so it'll be alright .", '*MOT: okay ?', '*MOT: just kind of have_to go .', '*MOT: <(a)round it like> [<] [>] that .', '*MOT: go (a)head Tan [>] .', '*CHI: <its too high> [<] .', '*MOT: gonna go in the sprinkler [>] ?', "*CHI: <it's> [<] too high .", '*MOT: say bye bye .', '*SIS: Tanya watch this xxx [>] .', '*CHI: <put it on [!]> [<] I wan(t) (t)a say .', '*CHI: <bye bye> [>] .', '*MOT: <it is on> [<] [>] .', '*MOT: say alright say bye now .', '*MOT: say bye [<] .', '*MOT: <you have_to say bye> [<] [>] .', "*MOT: I'll let you hear it in a minute .", '*MOT: say bye (.) .', '*MOT: say bye .', '*CHI: uhuh [<] .', '*CHI: no first put it on (.) .', '*CHI: no put it on .', '*MOT: okay .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//tammt1.cha
HSLLD/HV1/MT//kevmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: how's your supper Chi ?", '*CHI: good .', '*MOT: is it good ?', "*MOT: how's your supper Matthew ?", '*CHI: I <put more> [>] xxx on mine .', '*BRO: good [<] .', '*MOT: okay .', '*CHI: xxx better .', '*MOT: what are you gonna do after supper boys ?', '*BRO: play outside before it even gets dark .', '*MOT: what ?', '*BRO: play outside before it even gets dark (.) .', "*BRO: when's it [= tape recorder] gonna go on ?", "*MOT: it's on !", '*BRO: then when is it gonna talk ?', "*MOT: it's recording what you're saying .", '*BRO: oh (.) .', "*CHI: I don't know why .", '*MOT: just eat (.) normally (.) .', '*BRO: zzz (.) .', '*BRO: Mom can I go get some more ketchup ?', "*MOT: can't hear you .", "*MOT: <don't> [//] <you're> [>] talking with food in your mouth .", '*BRO: <hey [/] > [<][>] .', "*MOT: clear your mouth out and then I'll hear you (.) .", '*BRO: can I go get some more &-um (.) ketchup ?', '*MOT: yes .', '*CHI: why ?', '*BRO: (be)cause I need some more .', '*CHI: what for ?', '*BRO: for my (.) fish .', '*CHI: xxx (.) .', '*CHI: xxx .', "*BRO: didn't watch that xxx .", '*CHI: zzz (.) .', "*CHI: I think he's gonna dip it .", '*BRO: fish sticks .', '*MOT: what ?', '*BRO: give [?] fish sticks to Chi .', '*CHI: thanks Mom .', '*MOT: good boy .', '*CHI: thank you (.) .', '*CHI: zzz .', '*CHI: Mama ?', '*MOT: what babe ?', '*CHI: &-um (.) after what [?] I been eating you could come and xxx (.) &-um +/.', "*MOT: <we'll see [/]> [>] .", "*BRO: <I'm not xxx> [<] there .", "*MOT: we'll see how good you behave .", '*CHI: no .', '*CHI: <that way [/]> [>] ?', "*BRO: <I'm playing> [<] cards .", '*BRO: yes .', "*BRO: that's what I meant .", '*CHI: not playing cards .', '*BRO: I wan(t) (t)a play cards [!] .', '*CHI: I want one of that .', '*BRO: playing cards is better .', '*CHI: no (12.) .', '*CHI: zzz .', '*CHI: let me be in xxx .', "*CHI: I wouldn't care if nobody xxx .", "*CHI: I wouldn't try it .", '*BRO: now take it off .', '*CHI: with what (.) ?', "*CHI: won't Mom get mad ?", "*MOT: don't talk with your food in your mouth (.) .", '*CHI: wink .', '*CHI: zzz .', '*BRO: I need more ketchup .', '*CHI: I get xxx .', '*CHI: zzz .', "*MOT: a little bit more ketchup and that's it .", '*CHI: green plates ?', "*MOT: it's just your placemat showing through .", '*BRO: hm: ?', "*MOT: that's enough .", '*MOT: no more ketchup .', '*BRO: green plates !', "*MOT: what's in your mouth ?", '*MOT: are you talking with it in your mouth ?', '*BRO: zzz .', "*MOT: chew what's <in your> [>] mouth first .", '*CHI: <Mama> [<] ?', '*MOT: what hon(ey) ?', "*MOT: you're doing very good you like those huh ?", "*MOT: I'll have_to buy them again .", '*CHI: what ?', '*MOT: what ?', '*CHI: what arch [?] .', '*MOT: for you [!] yeah .', '*CHI: I <do too> [>] .', "*BRO: <they're> [<] joined [?] .", "*MOT: I don't like (th)em .", '*BRO: oh .', '*CHI: why ?', "*BRO: I don't <like (th)em either> [>] .", "*MOT: <I don't like fish> [<] .", "*BRO: I don't like (th)em either but I'm eating them .", "*MOT: well you have_to let me know (be)cause if you don't like (th)em I'm not gonna buy (th)em again [>] .", "*BRO: <I don't> [<] like them but I know Chi likes them .", "*MOT: so I'll buy (th)em for Chi (.) .", '*CHI: Grandma likes them .', '*MOT: Grandma likes (th)em yeah .', "*CHI: then why don't go Mama's too ?", '*MOT: yeah .', '*MOT: you and Grandma can have (th)em .', '*CHI: yep .', '*CHI: and me .', '*BRO: eat that [>] .', '*MOT: what [<] ?', "*MOT: you don't have_to eat (th)em if you don't like (th)em .", '*BRO: I like (th)em a little bit .', '*MOT: oh .', '*MOT: if you drown [!] (th)em in ketchup ?', "*BRO: no I like what's drowned in the ketchup .", "*BRO: xxx you can't even drowneded@n it .", '*BRO: (ex)cuse me !', '*MOT: guess what Chi (20.) .', '*CHI: hm: ?', '*BRO: was that the kid gets off (be)cause Mom wants the [/] the zero and the [/] (.) the [>] thing goes like that ?', "*BRO: I'll be all done then .", "*MOT: don't rush [>] .", '*CHI: <drown [?]> [<] .', '*BRO: how cute cute cute cute (.) .', '*BRO: Chi move over (22.) .', '*CHI: hm: (10.) ?', '*MOT: please sit at the table the right way (10.) .', '*CHI: right (.) .', "*MOT: it's time to eat .", '*CHI: I wan(t) (t)a xxx .', "*MOT: Chi [!] Chi [!] you didn't put all that in your mouth ?", '*BRO: he did .', '*MOT: no !', '*MOT: two or three bites .', "*MOT: you don't shove that whole thing in your mouth .", '*MOT: does it taste good from the garden ?', '*BRO: mhm .', '*CHI: yu(p) .', '*CHI: uhhuh .', '*MOT: you can shake your head when your mouth is full .', '*BRO: yuck .', '*MOT: finish up .', "*MOT: you're the one who wanted more than <Chi> [>] remember .", '*BRO: <this is> [<] black !', '*MOT: what hon(ey) ?', "*BRO: it's black .", "*MOT: that's part of the fish .", '*MOT: you want that one Chi (.) ?', '*MOT: would you like that one Chi ?', '*MOT: no ?', '*MOT: ouch !', '*BRO: come here kitty .', '*MOT: kitty just bit me .', '*BRO: bit me (.) ?', '*BRO: uhhum .', "*MOT: he's playful [!] today huh (.) ?", '*MOT: ouch !', "*BRO: don't fight .", "*MOT: don't talk with food [!] in your mouth .", "*BRO: I just have one more to go then I'm all done .", '*MOT: excellent [!] Chi come on drink up your milk .', '*MOT: are you still hungry honey ?', "*MOT: why don't you xxx good ?", '*BRO: me too .', '*MOT: good .', '*CHI: xxx a little bit hungry .', '*MOT: xxx a little bit hungry ?', '*CHI: a little bit hungry .', "*MOT: you'll have [>] a nice snack how's that ?", '*CHI: yeah [<][>] .', '*MOT: okay [>] ?', '*CHI: <are you going> [<] to bring the ice cream home ?', "*MOT: no I'm not going [///] oh I forgot to bring it home .", '*BRO: what ?', "*MOT: the ice cream from Grandma's .", '*MOT: sorry .', '*BRO: I told you to remind her .', "*MOT: maybe we'll go for an ice cream tomorrow .", '*CHI: goo (.) yyy .', '*MOT: good boy .', '*BRO: <oh my> [/] oh my god .', "*BRO: I've had <that one [?]> [>] .", '*MOT: eat [<] that last one Mat .', '*MOT: pick the black out if it bothers you .', '*MOT: Matthew ?', '*BRO: memem@b .', '*BRO: water <water water> [>] .', '*MOT: <eat the last one> [<] .', '*MOT: pick the piece of black out if it bothers you .', '*MOT: before [>] .', "*BRO: <it's a huge> [<] one .", '*MOT: le(t) me see it .', '*CHI: my finger will +/.', '*MOT: you can pick that out with your fork .', '*MOT: put it over your plate .', '*BRO: is that a blueberry ?', '*MOT: no .', "*MOT: blueberries don't go in fish sticks .", '*BRO: well it looks like it grew up there .', "*MOT: it's probably just part of the fish .", '*CHI: zzz .', '*MOT: you know fish have different colors .', '*MOT: le(t) me see it !', '*MOT: pick it out .', "*MOT: it's fine .", '*MOT: drink up your [>] milk Chi .', '*CHI: &-uh [<] Mama ?', '*CHI: &-um some fish have black .', '*MOT: <some fish have black yup> [>] .', '*BRO: <can you get it out for me> [<] ?', '*BRO: can you get it out for me ?', '*MOT: just cut it off !', '*MOT: put it on the plate and just cut that section <right off> [>] .', '*CHI: &-um [<] water drip .', '*MOT: yeah .', "*MOT: that's because it's so hot huh ?", '*MOT: before you go out I wan(t) (t)a cut your fingernails and your toenails .', '*MOT: (o)kay ?', '*CHI: xxx I go on in bobebe@b like a dog [>] .', "*MOT: well [<] [>] overlap [<] [>] if I sit on the footstool and you sit on the sofa that's better .", '*MOT: I can get (th)em better .', '*CHI: <I> [/] [>] .', '*MOT: are [<] you all done ?', '*MOT: pick that black out of there Matthew (.) !', '*MOT: oh you already ate half of it (.) ?', '*MOT: oh okay .', '*MOT: go ahead and throw your plate away .', '*BRO: <alright> [>] .', '*MOT: <and your fork> [<] in the (.) sink .', "*CHI: down the xxx xxx xxx (.) he can't age [?] you done with the xxx .", '*MOT: you all done with your milk ?', '*MOT: Chi ?', "*MOT: where's your milk ?", "*CHI: I'm not &-uh I'm not good [?] for milk .", "*MOT: okay why don't you put it in the refrigerator it'll stay cold for you .", "*MOT: you'll finish it (be)fore you go to bed .", '*CHI: (o)kay .', '*MOT: make sure you put yours on one side .', '*MOT: <now remember which> [/] [>] .', "*BRO: <xxx Mommy> [<] there's no more ice in there .", '*MOT: remember <which way you put> [//] which side you put it on .', "*BRO: Mom there's no more ice in there .", '*MOT: sometimes the ice goes away and turns to water it melts .', '*MOT: it turns to water .', '*BRO: if it turns back <to ice> [>] again +/.', "*MOT: <later on> [<] [/] later on there'll be ice in there .", '*MOT: shut the door please Chi .', '*BRO: zzz [>] .', '*MOT: <plates forks and> [<] and napkins .', '*BRO: <plates forks and napkins> [>] .', '*CHI: whoa [<] .', "*BRO: I don't have any .", '*MOT: Chi could you take your <napkin and wipe the ketchup> [>] bottle ?', '*BRO: <zzz excuse me> [<] .', '*BRO: zzz .', '*MOT: you better say excuse me .', '*BRO: I did !', '*MOT: I know you did .', '*MOT: wipe it [= ketchup bottle] off nice .', '*MOT: nice and clean .', '*BRO: zzz .', '*CHI: nice and clean .', "*BRO: hey you're <the xxx in the world> [>] .", '*MOT: <perfect thank you> [<] .', '*BRO: Matthew could you do the salt shaker ?', "*BRO: I'm going .", "*MOT: oh go (to) the bath+room hon(ey) that's more important .", '*CHI: no .', "*MOT: when you come back I'm gonna do your fingernails and toenails .", "*CHI: I can't hear .", '*CHI: zzz .', "*MOT: you're still here Chi ?", '*CHI: yeah .', '*MOT: well you could be first !', '*MOT: okay ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//kevmt1.cha
HSLLD/HV1/MT//jenmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: get up to the table and eat breakfast .', "*CHI: what's that [= recorder] for ?", "*MOT: it's recording [?] .", '*CHI: right now ?', '*MOT: mhm .', '*CHI: okay &=singing .', '*MOT: so what are you gonna do in school today ?', '*CHI: (..) I xxx (.) we goin(g) to a park .', '*CHI: right ?', '*MOT: mhm .', '*CHI: and (.) you know what else ?', "*CHI: we're goin(g) shoppin(g) .", '*MOT: shoppin(g) ?', '*CHI: yup .', '*MOT: sure ?', '*CHI: xxx (.) my friends .', '*MOT: mm .', '*CHI: goin(g) shoppin(g) with (..) xxx .', '*CHI: (.) you can give me it .', '*MOT: just about fifteen minutes .', '*CHI: two (.) Mommy .', '*MOT: what ?', '*CHI: are you going down to the garage ?', '*MOT: xxx .', '*CHI: really ?', '*CHI: &=gasp !', '*CHI: (..) you proud of me ?', "*MOT: I'm proud o(f) you .", '*CHI: Stephen you proud of me because you going to school today !', '*CHI: you going to school !', '*CHI: and you can go to school tomorrow and you get bigger too .', '*CHI: go to my [!] school right ?', '*MOT: mhm .', '*CHI: and not (.) my old school ?', '*MOT: mhm .', '*CHI: me not go to my old school xxx .', "*MOT: you know your bus driver's name is Miss Paula ?", '*CHI: mhm .', "*CHI: I learned my friend's name .", '*MOT: I know we gonna wait +/.', '*CHI: xxx ?', '*MOT: what ?', "*CHI: Mom I'm gonna call him .", '*CHI: you know me have boys in my class ?', '*MOT: yeah ?', '*CHI: me have boy named Waverly .', '*MOT: yeah ?', '*CHI: and (.) he sits next to me and you know what else ?', '*MOT: what ?', '*CHI: he does to me ?', '*CHI: he likes to play with me every time with my toys .', '*MOT: yeah ?', '*CHI: yup .', '*CHI: he friendly .', "*MOT: and your teachers' names are Miss Doris and Miss (.) Janine .", '*CHI: Miss Janine ?', '*MOT: mhm .', "*CHI: <that's &-um> [/] that's &-um xxx .", '*MOT: <can you try to say her name> [>] ?', '*CHI: Janine [<] ?', '*MOT: mhm .', "*CHI: me like what me (.) Janine's name .", '*MOT: what about Miss Doris .', '*MOT: you like that name too ?', "*CHI: who's that ?", "*MOT: that's your other teacher .", '*CHI: oh !', '*MOT: do you wanna wear your new jeans to school today ?', '*CHI: yes !', '*CHI: and my new shoes [!] and +...', "*CHI: xxx didn't buy me new shoes .", "*MOT: well (.) we'll buy you new shoes .", '*CHI: (.) Mom .', '*MOT: what ?', '*CHI: &-um (.) you sit right here .', '*CHI: (.) Mom I talk about my friends ?', '*MOT: mhm .', '*CHI: Mom you know <me have all> [/] me have all &-um toys here right ?', '*MOT: mhm .', '*CHI: oh (.) oops .', '*CHI: excuse <me Mom> [>] .', '*MOT: yes [<] .', '*MOT: you burped ?', '*CHI: yuck [/] yuck [/] yuck .', '*CHI: yuck [/] yuck [/] yuck .', "*CHI: that's not poached .", '*MOT: yeah it is .', "*MOT: it's stuck .", '*CHI: okay is it +...', '*CHI: oh .', '*CHI: mm .', '*CHI: (..) Mommy what is that ?', '*CHI: Mom what is that ?', '*CHI: huh ?', "*MOT: it's a tape recorder .", '*MOT: xxx get out .', '*BRO: (..) xxx !', '*MOT: <what else> [>] you gonna do in school today ?', '*SIS: xxx [<] .', '*CHI: &-um (..) bring my toys .', "*MOT: no you can't bring toys to school .", '*CHI: <only [?] want my> [//] I wanna bring my dog dog .', '*MOT: huh ?', '*CHI: I wanna bring my doggie .', "*MOT: you can't bring (.) dolls hon(ey) .", '*MOT: they have dollies there .', "*CHI: no they don't .", '*MOT: yes they do you gotta wait and see .', "*MOT: they've got a whole new class+room Jenny .", '*CHI: our own class+room ?', '*MOT: mhm .', '*CHI: for us ?', '*MOT: mhm .', '*CHI: yeah &=shouts !', "*CHI: (.) I'm gonna get it there .", '*MOT: Jenny you sit down and eat .', '*CHI: xxx .', '*MOT: soon [?] .', '*CHI: &=sighs .', '*CHI: &-um (.) I I xxx +...', '*MOT: hm: ?', '*CHI: I can finish it later ?', '*MOT: I want you to eat somethin(g) before you go to school .', '*CHI: okay .', '*CHI: do you want ?', '*MOT: mhm .', '*MOT: (..) are you nervous ?', '*CHI: mhm .', '*MOT: yeah .', '*CHI: me know how to cross .', '*CHI: (..) me not nervous .', "*MOT: you're not nervous ?", '*CHI: no .', '*MOT: you know when Mommy used to go to school Mommy was nervous .', "*CHI: you didn't cry [>] .", '*MOT: no [<] .', '*MOT: I remember I used to get (.) butterflies in my stomach .', '*CHI: butterflies &=laughs !', "*MOT: you like that you think that's funny huh ?", '*MOT: (.) you want some ?', '*CHI: xxx .', '*MOT: oh (.) gimme [: give me] that (.) Jenny +...', '*BRO: &=whining .', '*MOT: what ?', '*BRO: &=babbling .', '*MOT: yyy .', '*CHI: now do that for xxx .', '*MOT: can you wait for a minute ?', '*MOT: xxx yuck .', "*CHI: they're on my foot .", '*CHI: Mommy xxx for baby .', '*MOT: right .', '*CHI: xxx want to ?', '*MOT: (..) you gonna wear a [/] (.) a necklace with a thing today ?', '*CHI: mhm .', '*CHI: oh .', '*CHI: that looks beautiful .', '*MOT: mhm [>] .', '*CHI: gray [<] [?] .', '*MOT: says your name ?', '*CHI: mhm .', '*MOT: class .', '*CHI: it does ?', '*MOT: your bus driver .', '*CHI: yep .', '*MOT: school time .', '*CHI: yes .', '*MOT: and your teachers .', '*CHI: oh [=! little yelp] !', '*MOT: oh [=! little yelp imitating Chi] .', '*CHI: &-uh let me see .', '*MOT: Jenny Lastname .', '*CHI: I wear it ?', "*MOT: when we get you dressed you'll wear it yup .", '*CHI: oh that looks beautiful .', '*CHI: xxx that my name right up here ?', "*MOT: that's your name .", '*MOT: J@l E@l N@l N@l Y@l .', '*MOT: Lastname .', '*CHI: Lastname !', '*CHI: (..) Stephen look what we can wear to school today !', '*CHI: a sign !', '*CHI: &=giggles .', "*CHI: it's a sign !", "*CHI: nope [!] you can't have it .", '*CHI: when you go to school you can have it .', '*MOT: yep (.) and his will say Stephen [!] Lastname .', '*CHI: yours will say Stephen [!] Last(name) +...', '*CHI: what ?', "*CHI: he ain't five !", '*CHI: oh (.) poor Stephen .', '*MOT: &=chuckles .', '*CHI: Mommy .', '*MOT: what ?', '*CHI: xxx first bite ?', '*MOT: mhm .', '*CHI: was anybody outside ?', "*MOT: we'll see what time (.) okay ?", '*CHI: mhm .', '*MOT: alright\xe2\x86\x91 alright ?', '*MOT: (..) super woman ?', '*CHI: what are you shaking &=laughs .', '*MOT: mm shakin(g) ?', "*MOT: I'm just stretchin(g) .", '*CHI: yep [/] yep [/] yep people do right ?', '*MOT: mhm .', '*CHI: they make good xxx .', "*CHI: (..) Mom I'm xxx .", "*MOT: it's okay honey .", '*CHI: <I feel xxx [>]> [/] I feel the whole thing xxx .', '*BRO: <&=fusses > [<] .', '*MOT: would you like some milk ?', '*CHI: (.) milk ?', '*MOT: milk ?', '*CHI: yep xxx there .', "*CHI: how's he done .", '*CHI: xxx .', '*CHI: oh wait a minute xxx take my [!] xxx one .', '*BRO: yyy .', '*MOT: yyy .', '*BRO: &=giggles .', '*MOT: 0 [=! giggles imitating Bro] .', "*MOT: think that's funny huh ?", "*CHI: Daddy I'm gonna show Daddy okay ?", '*MOT: yeah ?', "*CHI: I'm gonna show Daddy my sign .", '*CHI: okay ?', "*MOT: tell Daddy it's time to get up for work .", '*FAT: anybody call me for work ?', '*CHI: no [!] not my [!] sign !', '*MOT: not your [!] sign huh ?', '*CHI: mm .', '*CHI: me love it .', '*MOT: you &=laughs love your sign ?', '*CHI: yep .', '*CHI: I keep it ?', '*MOT: sure .', '*MOT: (..) lick your mouth .', '*CHI: do you know who got me that ?', '*CHI: that circus xxx [>] .', '*MOT: xxx [<] circus ?', '*CHI: yep .', '*CHI: Mom <you were> [/] you were with the clown xxx &=laughs !', '*MOT: &=laughs yeah the clown sat with us huh ?', '*CHI: yep &=laughs .', "*CHI: that's funny &=laughs .", "*MOT: yeah that's funny .", '*CHI: you (re)member (.) how [!] he did that ?', '*MOT: he climbed over the railing huh ?', '*CHI: yeah &=laughs .', '*CHI: and we got xxx we got popcorn and (.) everything !', '*CHI: right ?', '*CHI: <and we got> [//] (..) &-um (.) you know &-um that &-um thing ?', "*MOT: the flashlight we got didn't we\xe2\x86\x91 or something ?", '*CHI: yeah we got a flashlight ?', '*MOT: mhm .', "*CHI: <then we got> [//] where [//] where's our [!] flashlight ?", "*MOT: I think they're all gone .", '*CHI: oh .', '*CHI: we go there again ?', '*MOT: sure .', '*CHI: thanks .', '*CHI: you know where it is ?', '*MOT: mhm .', '*MOT: same place it was last time .', "*CHI: (.) what's that thing ?", '*MOT: its your school time .', '*MOT: eight thirty to one thirty Tuesday through Friday .', '*CHI: and (.) after that (.) me still goin(g) to school ?', '*CHI: xxx me still goin(g) to school ?', '*MOT: mhm .', "*MOT: not tomorrow you don't have school Tuesday .", '*CHI: Tuesday ?', '*MOT: mhm .', '*CHI: me [//] (.) xxx me have a day off ?', '*MOT: mhm .', '*CHI: oh my teacher thanks teacher .', '*CHI: me proud o(f) you teacher .', '*MOT: you have Saturday Sunday and Monday off .', '*CHI: oh good !', '*MOT: you like that huh ?', '*CHI: (..) thank you .', "*MOT: you're welcome .", '*CHI: (.) Mom (.) put my sign on .', '*FAT: oh [>] .', '*MOT: oops [<] .', '*CHI: caught it !', '*CHI: xxx .', '*CHI: Dad come here !', '*CHI: Daddy come here !', '*CHI: Daddy come here !', '*CHI: (.) let me go .', "*CHI: I'll miss you .", '*CHI: me goin(g) to school today +...']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jenmt1.cha
HSLLD/HV1/MT//karmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: we have breakfast !', '*CHI: I meant we have xxx .', '*MOT: what do you want ?', '*CHI: I want this .', '*MOT: no !', '*MOT: Rice_Crispies (.) Cheerios +...', '*CHI: can we have that ?', '*MOT: Rice_Crispies or Cheerios ?', '*CHI: give me these [?] +/.', '*MOT: Chi !', '*MOT: what do you want ?', '*CHI: give me it !', "*MOT: I don't wan(t) (t)a talk about that .", '*MOT: I already told you why .', '*MOT: now what do you want (.) ?', '*MOT: what do you want ?', '*SIS: can I have Fruit_Loops ?', '*MOT: no .', '*MOT: what do you want ?', '*CHI: zzz .', '*SIS: xxx [>] .', '*CHI: <I want xxx> [<] +/.', "*MOT: you didn't eat too good either .", '*MOT: xxx [/] Cheerios Rice_Crispies [>] .', '*SIS: mommy [<] !', '*SIS: <I> [//] you said xxx [>] could .', '*MOT: <Kerri> [<] !', '*MOT: Kerri .', '*MOT: Cheerios Rice_Crispies .', '*MOT: pick it now .', '*SIS: I want Rice_Crispies .', '*MOT: what ?', '*SIS: Rice_Crispies .', '*MOT: what do you want Chi ?', '*CHI: I want <&s> [/] some Honey_Nut_Cheerios .', '*CHI: Honey_Nut_Cheerios .', '*MOT: what (.) ?', '*MOT: give that [= cereal bowl] to Chi .', "*SIS: now I'll get my blocks .", '*CHI: I wan(t) (t)a look at my book .', '*CHI: I wan(t) (t)a <look at my book> [>] +...', '*MOT: <yes I heard> [<] you [>] .', "*SIS: <if> [<] [/] if you don't eat good today Chi you don't get no Fruit_Loops tomorrow .", '*CHI: Ma !', '*CHI: <she said> [//] <I said> [//] I want all the things today .', "*SIS: tomorrow &-um you're gonna have juice .", '*CHI: no .', '*SIS: yes .', '*MOT: knock it off .', '*CHI: because I want +...', '*CHI: my my my +...', "*SIS: no because <I> [/] I'm having orange juice .", "*CHI: I'm not [?] .", '*CHI: xxx .', '*SIS: I am .', "*CHI: I'm not .", '*SIS: I am .', "*CHI: I'm not .", '*SIS: I am .', '*SIS: <I am> [>] .', '*MOT: <Kerri> [<] !', '*MOT: stop [!] fighting with her (.) .', '*CHI: zzz .', '*MOT: alright start eating guys .', '*CHI: I keep push xxx away (.) !', '*CHI: Ma , I pushed the thing on the phone (.) .', "*SIS: you didn't do that one .", '*CHI: (.) Ma , I was at &-um xxx show .', '*CHI: I was also over here .', '*CHI: I was being captain +...', '*CHI: mama mama I love my mother [!] .', '*CHI: I love my mother (.) !', '*CHI: I love my mother [!] .', '*CHI: I love my mother +...', '*SIS: xxx .', '*CHI: <I love> [/] I love my march .', '*CHI: I love my mother .', '*CHI: brush my teeth (.) .', '*SIS: xxx .', '*SIS: are you done ?', '*CHI: no (.) .', '*CHI: that was yyy !', '*CHI: zzz .', '*SIS: xxx .', '*CHI: zzz .', '*SIS: xxx (.) .', '*SIS: xxx .', '*CHI: zzz .', '*CHI: zzz .', "*CHI: Ma , I'm done .", "*MOT: you're all done ?", '*CHI: yeah .', '*SIS: Ma !']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//karmt1.cha
HSLLD/HV1/MT//jacmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: zzz .', '*BRO: Sergeant Lee Seymore .', '*MOT: zzz .', '*CHI: zzz [>] .', "*BRO: <what's that thing> [<] ?", "*CHI: what's that thing ?", '*CHI: that [/] that thing [>] ?', "*MOT: <I'm> [<] rewinding it .", '*CHI: <and the Howard the Duck [/]> [>] .', '*MOT: <just finish eating> [<] okay ?', '*CHI: was that the Howard the Duck tape ?', "*MOT: no it's not (.) .", '*MOT: so what did you do in school today ?', '*CHI: Mama first we [>] did the papers in the other room and then we played .', '*CHI: <I [/]> [<] .', '*MOT: what did [>] you do ?', '*CHI: <and[/]> [<] and then we [/] we made a funky monkey .', '*MOT: you made a funky monkey ?', '*MOT: oh the monkey that you made huh (.) ?', "*MOT: that's a cute monkey .", '*MOT: where is it anyway (.) ?', "*MOT: I think we left it in Roy's <by &m> [//] by accident when we were there .", "*CHI: &-uh Mommy <it's under> [//] it [//] it's under your coat .", "*MOT: <it's> [///] I know but I think I left it at the store .", "*MOT: we'll have_to get it tomorrow (be)cause Roy's is closed now .", '*MOT: I think I left it on the counter by accident .', '*CHI: m(aybe) [/] maybe they already threw it away .', "*MOT: no [!] I don't think so .", "*MOT: I'm sure they'll save it and give it to us tomorrow .", '*MOT: okay ?', '*MOT: Jeff that was a beautiful monkey .', '*MOT: I want to hang him up on the wall .', '*BRO: we need some xxx .', '*CHI: M(ommy) [/] Mommy you had to have it stapled .', "*MOT: okay well I'll get it stapled .", '*MOT: we can hang it up with tape .', '*MOT: put it on the bath+room door .', '*MOT: okay ?', '*CHI: no on the ceiling .', '*MOT: on the ceiling ?', '*CHI: yeah !', '*MOT: why do you want to put it on the ceiling ?', '*CHI: <because I> [//] so I can see up there .', "*CHI: I can do a dance and see if it's on the ceiling .", '*MOT: oh yeah ?', '*BRO: Jeffrey it might fall off .', '*CHI: no .', '*MOT: come on eat .', '*CHI: where is Howard the Duck ?', "*MOT: don't worry when you're done eating +...", '*MOT: zzz (.) .', '*MOT: did you color in school today ?', '*BRO: I did .', '*MOT: did you Jeff ?', '*MOT: what cha [: you] do (.) ?', "*MOT: you didn't do anything at all ?", "*CHI: I don't know [!] what we did .", '*MOT: did you read [!] today in school ?', '*MOT: did Rhonda read a book to you ?', '*BRO: <Mama> [>] .', '*CHI: <Mom I> [<] .', '*CHI: was not in school [>] today .', '*BRO: Mama .', '*BRO: &-um [/] [<] .', '*MOT: well where were you ?', '*CHI: at school .', "*MOT: well you just said you weren't in school .", '*MOT: where were you ?', '*CHI: I was at school !', '*MOT: oh okay (.) .', '*MOT: did you paint ?', '*CHI: not today Maggie said no .', "*CHI: I'll tomorrow ask Maggie to paint .", '*MOT: okay (.) .', '*MOT: want me to make brownies for dessert ?', '*CHI: yippee !', '*BRO: yeah !', '*MOT: yeah ?', '*CHI: yeah goodie !', '*MOT: did you eat all of your (.) spaghetti [>] ?', '*CHI: yummy [<] .', '*CHI: yummy in my cocky@c !', "*BRO: <I'm almost done> [<] .", "*MOT: that's not nice !", "*MOT: I don't like that talk .", '*CHI: zzz [<] .', '*CHI: well that was nonsense [>] .', "*MOT: <I don't like that> [<] .", '*MOT: that is [!] nonsense .', '*BRO: Ma look_it .', '*MOT: mhm (.) .', '*MOT: what happened to your book where the wild things are ?', "*MOT: it's all ripped up !", '*MOT: who ripped it ?', '*BRO: Jeffrey .', "*MOT: Jeffrey I'm gonna take all the books out of there if you're goin(g) (t)a rip them .", '*MOT: okay ?', '*MOT: <I may just have> [<] to put them all up .', "*MOT: (be)cause they're getting ripped up [>] .", '*CHI: <Mama> [<] !', '*CHI: Mama .', "*CHI: I don't have [!] a book .", '*MOT: what about all the books in there that you ripped up ?', '*BRO: he ripped up my +/.', '*MOT: did cha [: you] know Paul paid a lot of money for those Doctor Seuss books and you ripped in them and scribbled in them .', "*MOT: he's not going to buy you any more .", '*CHI: zzz .', "*MOT: well then d(o) you promise me you willn't rip them anymore ?", '*CHI: mhm [?] .', '*MOT: okay .', "*MOT: next time one of those books gets ripped Chi I'm gonna have_to put them all up .", '*BRO: uhhuh .', '*CHI: right Mama ?', '*MOT: yep (.) .', '*MOT: tomorrow is show and tell Bro .', '*BRO: I know .', '*CHI: zzz .', '*BRO: the bus driver told me that .', '*BRO: the other day .', '*CHI: Mama my teacher said no .', '*MOT: your teacher said no ?', '*CHI: <she said> [/] <sh(e)> [/] she said show and tell was [///] the bus man says Friday [!] .', '*MOT: Friday ?', '*MOT: oh .', '*MOT: who said that Joe ?', '*CHI: xxx [/] .', '*BRO: no Tony .', '*MOT: Tony ?', '*BRO: right Chi Tony ?', "*BRO: Mama Tony's <the b(us)> [>] +/.", "*MOT: I thought Joe was the [/] the bus driver's name .", '*BRO: zzz .', '*BRO: &-um the different <bus driver> [>] .', '*MOT: <what do you say> [<] ?', "*CHI: but Tony's the bus driving Joe .", '*BRO: <excuse me> [<] .', '*MOT: oh .', '*BRO: both of them are .', '*MOT: did you drink all your drink (.) ?', '*MOT: are you done ?', "*BRO: there's yellow .", '*BRO: I mean red yellow green blue .', '*MOT: right .', "*MOT: what color's that Jeff ?", '*CHI: blue .', '*MOT: no .', '*MOT: what color is that (.) ?', '*MOT: so was Rhonda in today Jeff ?', '*CHI: no .', '*MOT: no ?', "*CHI: she's sick .", "*MOT: she's sick .", "*MOT: what's wrong with her ?", '*CHI: she [/] she [//] her back was hurting her .', '*MOT: her back was hurting her ?', "*CHI: like Ronnie's .", "*MOT: like Ronnie's ?", '*MOT: why what happened to Ronnie ?', '*CHI: a cat opened her back .', '*MOT: a cat opened [!] her back ?', '*CHI: yeah .', '*CHI: yeah .', '*CHI: (be)cause she had a cat .', '*MOT: oh .', '*BRO: <y(ou)> [/] <y(ou)> [/] you mean broke him in half ?', '*CHI: just a little bit .', '*MOT: so did everyone like your hair+cut ?', '*CHI: no girl kissed me .', '*MOT: who did ?', '*MOT: <no [/]> [>] .', '*CHI: no [!] girls !', '*MOT: no girls kissed you !', "*CHI: &-uh <I don't care [/]> [>] .", '*MOT: <why are they supposed to kiss you> [<] ?', '*CHI: no .', '*MOT: zzz .', '*CHI: Ma can I have <some more> [>] .', '*MOT: <did any girls kiss you Eddie >[<] ?', '*BRO: yeah .', '*MOT: who ?', '*BRO: oh Lisa !', '*MOT: zzz .', '*MOT: why she thinks you look handsome ?', '*MOT: you <are handsome> [>] .', '*CHI: Mama can I have some more ?', "*MOT: there [//] it's all gone .", '*CHI: zzz .', "*MOT: I'm gonna make some brownies anyway .", "*MOT: don't you want some brownies ?", '*CHI: yeah !', '*CHI: yeah !', '*CHI: yeah !', '*CHI: yeah !', '*MOT: okay you guys done ?', '*MOT: put your bowls in <the sink> [>] .', '*BRO: <Mama put candles in them> [<] .', '*MOT: what ?', '*BRO: put candles in them (be)cause we like to blow (.) .', '*BRO: okay [>] ?', '*MOT: candles in the brownies ?', '*MOT: why ?', '*BRO: (be)cause &d we like to blow .', '*MOT: okay .', '*BRO: you promise .', '*BRO: <you promise> [>] ?', '*MOT: <good boy> [<] Jeff .', "*MOT: We'll see .", "*MOT: I don't even know if I have any candles Bro .", '*MOT: I think we used them all at your birthday party .', '*CHI: no [//] yeah we did .', '*BRO: <no we> [//] no no Jeff but we put (.) five of them in .', '*CHI: we put five [!] of them in .', "*BRO: Mom it's doing it again !", '*MOT: you all done ?', '*MOT: Bro put your bowl in the sink please !', "*CHI: I'm all done drinking .", "*MOT: <where's your bowl go> [>] (.) ?", '*MOT: <and your cup please> [>] .', '*BRO: zzz [<] .', '*MOT: Bro !', '*MOT: your bowl and your cup in the sink .', '*BRO: I can only take <one at> [>] a time .', '*MOT: <thank you> [<] .', '*MOT: well then do that .', '*BRO: <I like it> [>] .', '*MOT: <good boy> [<] .', '*BRO: mama xxx I like it xxx (.) .', '*BRO: now will you set out the xxx [>] .', '*MOT: yes (.) .', '*MOT: thank you guys [<] .']
loading solution set
LINE NO ->  14
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  19
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  23
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  27
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  34
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  38
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  42
LINE NO ->  45
duck
duck duck 84
[('and', 'CC'), ('the', 'DT'), ('howard', 'NN'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  48
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  52
duck
duck duck 84
[('was', 'VBD'), ('that', 'IN'), ('the', 'DT'), ('howard', 'NN'), ('the', 'DT'), ('duck', 'NN'), ('tape', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  57
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  61
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  67
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, -1: 1})
LINE NO ->  73
LINE NO ->  74
LINE NO ->  78
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 1, 56: 1, 57: 0, 58: 0, 59: 0})
LINE NO ->  82
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  86
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  92
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  97
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  101
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, -1: 1})
LINE NO ->  107
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 0, 64: 0, 65: 0})
LINE NO ->  110
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0})
LINE NO ->  116
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0})
LINE NO ->  123
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, -1: 1})
LINE NO ->  128
LINE NO ->  132
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  135
LINE NO ->  141
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  145
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  150
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  155
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  158
LINE NO ->  163
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  167
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  170
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  173
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  177
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  180
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  184
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  188
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, -1: 1})
LINE NO ->  194
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  197
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  202
LINE NO ->  206
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  210
LINE NO ->  214
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  217
duck
duck duck 84
[('where', 'WRB'), ('is', 'VBZ'), ('howard', 'PDT'), ('the', 'DT'), ('duck', 'NN')]
['duck']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  221
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  226
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  229
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  233
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  236
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  240
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  244
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  249
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  252
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  261
LINE NO ->  264
LINE NO ->  267
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  270
LINE NO ->  273
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  274
LINE NO ->  278
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  281
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0})
LINE NO ->  286
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  290
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  293
LINE NO ->  296
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  300
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  303
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0})
LINE NO ->  307
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  310
brownies
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94726ab90>)
[('want', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('make', 'VB'), ('brownies', 'NNS'), ('for', 'IN'), ('dessert', 'NN')]
['brownies']
('food -> ', [])
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453c43f8>)
[('want', 'VB'), ('me', 'PRP'), ('to', 'TO'), ('make', 'VB'), ('brownies', 'NNS'), ('for', 'IN'), ('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  315
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  318
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  321
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  325
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  328
spaghetti
spaghetti spaghetti 100
[('did', 'VBD'), ('you', 'PRP'), ('eat', 'VB'), ('all', 'DT'), ('of', 'IN'), ('your', 'PRP$'), ('spaghetti', 'NNS')]
['spaghetti']
('food -> ', [['spaghetti', 'Meals, Entrees, and Side Dishes']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  333
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  336
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  339
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  342
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  345
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  349
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  352
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  356
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  359
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  362
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  365
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  368
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  373
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0})
LINE NO ->  376
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  379
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  382
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, -1: 1})
LINE NO ->  389
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  393
LINE NO ->  398
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  402
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  405
LINE NO ->  408
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  411
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0})
LINE NO ->  417
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  420
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 1, 76: 1, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, -1: 1})
LINE NO ->  429
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  434
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  438
LINE NO ->  444
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  447
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  450
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0})
LINE NO ->  458
LINE NO ->  461
LINE NO ->  465
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  468
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  471
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  474
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  478
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  482
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  485
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  488
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0})
LINE NO ->  492
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 1, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 1, 71: 1, 72: 1, 73: 1, 74: 1, 75: 1, 76: 1, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, -1: 1})
LINE NO ->  497
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  501
LINE NO ->  504
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  508
LINE NO ->  509
LINE NO ->  512
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  515
LINE NO ->  518
LINE NO ->  521
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  526
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  530
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  533
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  537
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  541
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  544
LINE NO ->  547
LINE NO ->  551
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  554
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  557
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fa13f8>)
[('there', 'RB'), ('s', 'RB'), ('yellow', 'VB')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  560
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe945408830>)
[('i', 'JJ'), ('mean', 'VBP'), ('red', 'JJ'), ('yellow', 'NN'), ('green', 'NN'), ('blue', 'NN')]
['yellow']
('food -> ', [])
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fa13f8>)
[('i', 'JJ'), ('mean', 'VBP'), ('red', 'JJ'), ('yellow', 'NN'), ('green', 'NN'), ('blue', 'NN')]
['green']
('food -> ', [])
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9454085a8>)
[('i', 'JJ'), ('mean', 'VBP'), ('red', 'JJ'), ('yellow', 'NN'), ('green', 'NN'), ('blue', 'NN')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  563
LINE NO ->  566
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  570
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453c49e0>)
[('blue', 'NN')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  573
LINE NO ->  576
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  580
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  585
LINE NO ->  588
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  592
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  595
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  598
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  602
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  605
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  609
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  612
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  616
LINE NO ->  620
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  623
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  627
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  630
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  633
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  636
LINE NO ->  640
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 1, 56: 0, 57: 0, 58: 0})
LINE NO ->  643
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  646
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  651
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  654
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  658
LINE NO ->  659
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  662
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  666
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  669
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  674
LINE NO ->  677
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  681
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  685
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  688
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  691
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  694
LINE NO ->  698
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  702
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  706
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  709
LINE NO ->  713
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  716
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  720
brownies
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947264710>)
[('i', 'JJ'), ('m', 'NN'), ('gon', 'NN'), ('na', 'TO'), ('make', 'VB'), ('some', 'DT'), ('brownies', 'NNS'), ('anyway', 'VBP')]
['brownies']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0})
LINE NO ->  724
brownies
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9470da200>)
[('don', 'NN'), ('t', 'NN'), ('you', 'PRP'), ('want', 'VBP'), ('some', 'DT'), ('brownies', 'NNS')]
['brownies']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  728
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  732
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  735
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  738
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  741
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  745
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0})
LINE NO ->  748
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  751
LINE NO ->  754
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  759
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  762
brownies
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453e34d0>)
[('candles', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('brownies', 'NNS')]
['brownies']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  765
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  768
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  771
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  774
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  777
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  780
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  783
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  786
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  791
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  796
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  799
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0})
LINE NO ->  804
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  807
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  812
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  817
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0})
LINE NO ->  822
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  825
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0})
LINE NO ->  828
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0})
LINE NO ->  831
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  835
LINE NO ->  838
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0})
LINE NO ->  844
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  849
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  853
LINE NO ->  856
dic
defaultdict(<type 'int'>, {0: 1, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  860
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  864
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  867
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, -1: 1})
LINE NO ->  871
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  874
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
loading solution set
calculating
set([(725, (26, 34)), (311, (22, 30)), (329, (34, 43)), (721, (26, 34))])
[((311, (22, 30)), '*MOT:\twant me to make brownies for dessert ?\n'), ((329, (34, 43)), '*MOT:\tdid you eat all of your (.) spaghetti [>] ?\n'), ((721, (26, 34)), "*MOT:\tI'm gonna make some brownies anyway .\n"), ((725, (26, 34)), "*MOT:\tdon't you want some brownies ?\n")]
set([(755, (52, 55)), (725, (-1, 4)), (185, (6, 10)), (466, (6, 9)), (875, (6, 11)), (322, (6, 10)), (222, (6, 11)), (763, (21, 29)), (39, (20, 25)), (868, (35, 38)), (268, (28, 33)), (49, (-1, 4)), (567, (11, 18)), (374, (6, 10)), (775, (-1, 4)), (829, (16, 19)), (805, (-1, 4)), (279, (-1, 4)), (174, (6, 10)), (181, (-1, 4)), (340, (-1, 4)), (230, (30, 35)), (755, (10, 17)), (421, (-1, 4)), (493, (-1, 4)), (725, (26, 34)), (350, (6, 9)), (108, (59, 63)), (857, (18, 21)), (357, (26, 29)), (755, (-1, 4)), (839, (36, 40)), (479, (10, 13)), (778, (20, 23)), (53, (30, 34)), (346, (24, 28)), (279, (9, 15)), (421, (46, 51)), (868, (31, 34)), (663, (9, 14)), (181, (13, 20)), (311, (22, 30)), (466, (10, 13)), (35, (18, 23)), (369, (48, 54)), (778, (-1, 4)), (291, (15, 21)), (451, (55, 60)), (421, (39, 42)), (808, (10, 14)), (83, (-1, 4)), (634, (-1, 4)), (409, (25, 29)), (322, (-1, 4)), (493, (42, 46)), (268, (24, 27)), (721, (10, 15)), (850, (18, 21)), (489, (11, 18)), (297, (-1, 4)), (412, (25, 30)), (326, (11, 17)), (357, (9, 14)), (195, (-1, 4)), (20, (-1, 4)), (308, (11, 14)), (58, (9, 13)), (634, (26, 29)), (274, (11, 14)), (380, (-1, 4)), (174, (-1, 4)), (763, (-1, 4)), (409, (-1, 4)), (733, (6, 10)), (222, (23, 29)), (326, (6, 10)), (435, (6, 9)), (538, (21, 24)), (189, (39, 46)), (383, (-1, 4)), (644, (20, 23)), (483, (16, 19)), (599, (6, 12)), (577, (25, 28)), (151, (35, 39)), (493, (70, 77)), (319, (6, 10)), (337, (6, 11)), (818, (31, 35)), (805, (18, 21)), (311, (35, 42)), (253, (32, 38)), (865, (29, 32)), (304, (20, 23)), (850, (13, 17)), (87, (13, 19)), (93, (20, 26)), (531, (38, 41)), (707, (-1, 4)), (868, (-1, 4)), (832, (10, 13)), (531, (30, 37)), (596, (6, 11)), (857, (-1, 1)), (253, (-1, 4)), (577, (11, 16)), (839, (11, 15)), (156, (-1, 4)), (151, (-1, 4)), (53, (-1, 4)), (596, (12, 16)), (366, (10, 13)), (875, (21, 24)), (872, (10, 13)), (124, (31, 38)), (46, (26, 30)), (493, (51, 55)), (268, (-1, 4)), (729, (6, 10)), (760, (6, 10)), (686, (15, 20)), (823, (19, 27)), (797, (14, 18)), (739, (6, 10)), (787, (38, 45)), (589, (-1, 4)), (667, (14, 19)), (79, (51, 57)), (222, (-1, 4)), (334, (12, 15)), (360, (-1, 4)), (555, (-1, 4)), (538, (-1, 4)), (522, (36, 39)), (133, (9, 12)), (53, (35, 39)), (534, (-1, 4)), (542, (18, 21)), (513, (-1, 4)), (282, (40, 46)), (749, (33, 36)), (845, (-1, 4)), (178, (16, 23)), (451, (29, 34)), (357, (20, 25)), (707, (25, 28)), (689, (6, 10)), (472, (-1, 4)), (49, (31, 35)), (198, (46, 53)), (189, (-1, 4)), (363, (9, 16)), (813, (-1, 4)), (316, (6, 12)), (667, (-1, 1)), (250, (-1, 4)), (87, (-1, 4)), (68, (52, 56)), (274, (15, 18)), (171, (30, 34)), (818, (19, 23)), (399, (-1, 4)), (403, (13, 16)), (222, (12, 17)), (46, (-1, 4)), (542, (14, 17)), (448, (6, 10)), (215, (14, 17)), (865, (6, 10)), (839, (25, 28)), (581, (23, 28)), (552, (35, 38)), (792, (48, 53)), (760, (11, 14)), (670, (-1, 4)), (845, (22, 26)), (766, (-1, 4)), (24, (6, 9)), (552, (-1, 4)), (469, (-1, 4)), (35, (-1, 4)), (717, (6, 9)), (857, (14, 17)), (366, (6, 9)), (749, (16, 23)), (603, (-1, 4)), (561, (-1, 4)), (156, (19, 22)), (399, (42, 45)), (599, (-1, 4)), (581, (-1, 4)), (624, (8, 11)), (628, (6, 10)), (714, (-1, 4)), (641, (52, 56)), (606, (10, 14)), (861, (17, 20)), (746, (15, 20)), (475, (6, 9)), (227, (6, 9)), (746, (35, 38)), (505, (-1, 4)), (498, (-1, 4)), (561, (24, 34)), (237, (-1, 4)), (603, (27, 31)), (146, (32, 38)), (647, (-1, 4)), (28, (6, 9)), (736, (6, 10)), (826, (25, 28)), (829, (28, 31)), (98, (-1, 4)), (257, (24, 28)), (829, (20, 27)), (93, (-1, 4)), (171, (-1, 4)), (832, (6, 9)), (746, (29, 34)), (644, (-1, 4)), (558, (6, 13)), (865, (11, 14)), (610, (-1, 4)), (845, (37, 41)), (32, (-1, 4)), (227, (10, 13)), (479, (14, 20)), (117, (6, 11)), (781, (12, 16)), (826, (20, 24)), (241, (11, 17)), (111, (55, 60)), (571, (6, 10)), (421, (75, 80)), (369, (28, 32)), (624, (27, 31)), (383, (59, 65)), (62, (-1, 4)), (742, (-1, 4)), (329, (34, 43)), (800, (10, 13)), (451, (11, 15)), (652, (9, 13)), (527, (6, 9)), (253, (23, 28)), (670, (6, 10)), (631, (6, 10)), (430, (-1, 4)), (353, (29, 32)), (198, (-1, 4)), (234, (-1, 4)), (329, (-1, 4)), (291, (-1, 4)), (198, (17, 22)), (230, (-1, 4)), (241, (18, 22)), (445, (6, 9)), (772, (6, 10)), (301, (-1, 4)), (222, (35, 41)), (542, (-1, 4)), (334, (6, 11)), (346, (-1, 4)), (703, (-1, 4)), (593, (6, 11)), (660, (13, 18)), (337, (18, 25)), (230, (14, 19)), (146, (-1, 4)), (28, (10, 13)), (142, (-1, 4)), (68, (32, 38)), (377, (-1, 4)), (670, (37, 41)), (39, (-1, 4)), (792, (-1, 4)), (667, (20, 24)), (62, (28, 34)), (787, (-1, 4)), (62, (35, 40)), (621, (23, 27)), (268, (17, 23)), (818, (36, 42)), (83, (23, 29)), (763, (6, 13)), (845, (27, 30)), (769, (-1, 4)), (522, (49, 53)), (207, (-1, 4)), (390, (6, 10)), (784, (12, 15)), (725, (6, 11)), (593, (12, 16)), (383, (37, 42)), (340, (24, 27)), (678, (6, 9)), (68, (-1, 4)), (699, (6, 9)), (168, (29, 33)), (383, (18, 23)), (124, (-1, 4)), (861, (12, 16)), (142, (6, 10)), (692, (-1, 4)), (257, (-1, 4)), (421, (17, 21)), (558, (14, 20)), (561, (17, 23)), (445, (10, 13)), (301, (10, 15)), (390, (-1, 4)), (350, (10, 13)), (522, (-1, 4)), (287, (-1, 4)), (418, (-1, 4)), (682, (32, 35)), (343, (-1, 4)), (670, (42, 45)), (245, (-1, 4)), (35, (6, 12)), (714, (17, 21)), (15, (6, 9)), (655, (-1, 4)), (230, (23, 29)), (621, (8, 11)), (308, (6, 10)), (613, (-1, 4)), (102, (-1, 4)), (552, (14, 19)), (39, (26, 29)), (486, (14, 21)), (164, (-1, 4)), (721, (26, 34)), (218, (26, 30)), (218, (-1, 4)), (311, (-1, 4))])
[((15, (6, 9)), '*CHI:\tzzz .\n'), ((20, (-1, 4)), '*BRO:\tSergeant Lee Seymore .\n'), ((24, (6, 9)), '*MOT:\tzzz .\n'), ((28, (6, 9)), '*CHI:\tzzz [>] .\n'), ((28, (10, 13)), '*CHI:\tzzz [>] .\n'), ((32, (-1, 4)), "*BRO:\t<what's that thing> [<] ?\n"), ((35, (-1, 4)), "*CHI:\twhat's that thing ?\n"), ((35, (6, 12)), "*CHI:\twhat's that thing ?\n"), ((35, (18, 23)), "*CHI:\twhat's that thing ?\n"), ((39, (-1, 4)), '*CHI:\tthat [/] that thing [>] ?\n'), ((39, (20, 25)), '*CHI:\tthat [/] that thing [>] ?\n'), ((39, (26, 29)), '*CHI:\tthat [/] that thing [>] ?\n'), ((46, (-1, 4)), '*CHI:\t<and the Howard the Duck [/]> [>] .\n'), ((46, (26, 30)), '*CHI:\t<and the Howard the Duck [/]> [>] .\n'), ((49, (-1, 4)), '*MOT:\t<just finish eating> [<] okay ?\n'), ((49, (31, 35)), '*MOT:\t<just finish eating> [<] okay ?\n'), ((53, (-1, 4)), '*CHI:\twas that the Howard the Duck tape ?\n'), ((53, (30, 34)), '*CHI:\twas that the Howard the Duck tape ?\n'), ((53, (35, 39)), '*CHI:\twas that the Howard the Duck tape ?\n'), ((58, (9, 13)), "*MOT:\tno it's not (.) .\n"), ((62, (-1, 4)), '*MOT:\tso what did you do in school today ?\n'), ((62, (28, 34)), '*MOT:\tso what did you do in school today ?\n'), ((62, (35, 40)), '*MOT:\tso what did you do in school today ?\n'), ((68, (-1, 4)), '*CHI:\tMama first we [>] did the papers in the other room and then we played .\n'), ((68, (32, 38)), '*CHI:\tMama first we [>] did the papers in the other room and then we played .\n'), ((68, (52, 56)), '*CHI:\tMama first we [>] did the papers in the other room and then we played .\n'), ((79, (51, 57)), '*CHI:\t<and[/]> [<] and then we [/] we made a funky monkey .\n'), ((83, (-1, 4)), '*MOT:\tyou made a funky monkey ?\n'), ((83, (23, 29)), '*MOT:\tyou made a funky monkey ?\n'), ((87, (-1, 4)), '*MOT:\toh the monkey that you made huh (.) ?\n'), ((87, (13, 19)), '*MOT:\toh the monkey that you made huh (.) ?\n'), ((93, (-1, 4)), "*MOT:\tthat's a cute monkey .\n"), ((93, (20, 26)), "*MOT:\tthat's a cute monkey .\n"), ((98, (-1, 4)), '*MOT:\twhere is it anyway (.) ?\n'), ((102, (-1, 4)), "*MOT:\tI think we left it in Roy's <by &m> [//] by accident when we were there .\n"), ((108, (59, 63)), "*CHI:\t&-uh Mommy <it's under> [//] it [//] it's under your coat .\n"), ((111, (55, 60)), "*MOT:\t<it's> [///] I know but I think I left it at the store .\n"), ((117, (6, 11)), "*MOT:\twe'll have_to get it tomorrow (be)cause Roy's is closed now .\n"), ((124, (-1, 4)), '*MOT:\tI think I left it on the counter by accident .\n'), ((124, (31, 38)), '*MOT:\tI think I left it on the counter by accident .\n'), ((133, (9, 12)), "*MOT:\tno [!] I don't think so .\n"), ((142, (-1, 4)), '*MOT:\tokay ?\n'), ((142, (6, 10)), '*MOT:\tokay ?\n'), ((146, (-1, 4)), '*MOT:\tJeff that was a beautiful monkey .\n'), ((146, (32, 38)), '*MOT:\tJeff that was a beautiful monkey .\n'), ((151, (-1, 4)), '*MOT:\tI want to hang him up on the wall .\n'), ((151, (35, 39)), '*MOT:\tI want to hang him up on the wall .\n'), ((156, (-1, 4)), '*BRO:\twe need some xxx .\n'), ((156, (19, 22)), '*BRO:\twe need some xxx .\n'), ((164, (-1, 4)), "*MOT:\tokay well I'll get it stapled .\n"), ((168, (29, 33)), '*MOT:\twe can hang it up with tape .\n'), ((171, (-1, 4)), '*MOT:\tput it on the bath+room door .\n'), ((171, (30, 34)), '*MOT:\tput it on the bath+room door .\n'), ((174, (-1, 4)), '*MOT:\tokay ?\n'), ((174, (6, 10)), '*MOT:\tokay ?\n'), ((178, (16, 23)), '*CHI:\tno on the ceiling .\n'), ((181, (-1, 4)), '*MOT:\ton the ceiling ?\n'), ((181, (13, 20)), '*MOT:\ton the ceiling ?\n'), ((185, (6, 10)), '*CHI:\tyeah !\n'), ((189, (-1, 4)), '*MOT:\twhy do you want to put it on the ceiling ?\n'), ((189, (39, 46)), '*MOT:\twhy do you want to put it on the ceiling ?\n'), ((195, (-1, 4)), '*CHI:\t<because I> [//] so I can see up there .\n'), ((198, (-1, 4)), "*CHI:\tI can do a dance and see if it's on the ceiling .\n"), ((198, (17, 22)), "*CHI:\tI can do a dance and see if it's on the ceiling .\n"), ((198, (46, 53)), "*CHI:\tI can do a dance and see if it's on the ceiling .\n"), ((207, (-1, 4)), '*BRO:\tJeffrey it might fall off .\n'), ((215, (14, 17)), '*MOT:\tcome on eat .\n'), ((218, (-1, 4)), '*CHI:\twhere is Howard the Duck ?\n'), ((218, (26, 30)), '*CHI:\twhere is Howard the Duck ?\n'), ((222, (-1, 4)), "*MOT:\tdon't worry when you're done eating +...\n"), ((222, (6, 11)), "*MOT:\tdon't worry when you're done eating +...\n"), ((222, (12, 17)), "*MOT:\tdon't worry when you're done eating +...\n"), ((222, (23, 29)), "*MOT:\tdon't worry when you're done eating +...\n"), ((222, (35, 41)), "*MOT:\tdon't worry when you're done eating +...\n"), ((227, (6, 9)), '*MOT:\tzzz (.) .\n'), ((227, (10, 13)), '*MOT:\tzzz (.) .\n'), ((230, (-1, 4)), '*MOT:\tdid you color in school today ?\n'), ((230, (14, 19)), '*MOT:\tdid you color in school today ?\n'), ((230, (23, 29)), '*MOT:\tdid you color in school today ?\n'), ((230, (30, 35)), '*MOT:\tdid you color in school today ?\n'), ((234, (-1, 4)), '*BRO:\tI did .\n'), ((237, (-1, 4)), '*MOT:\tdid you Jeff ?\n'), ((241, (11, 17)), '*MOT:\twhat cha [: you] do (.) ?\n'), ((241, (18, 22)), '*MOT:\twhat cha [: you] do (.) ?\n'), ((245, (-1, 4)), "*MOT:\tyou didn't do anything at all ?\n"), ((250, (-1, 4)), "*CHI:\tI don't know [!] what we did .\n"), ((253, (-1, 4)), '*MOT:\tdid you read [!] today in school ?\n'), ((253, (23, 28)), '*MOT:\tdid you read [!] today in school ?\n'), ((253, (32, 38)), '*MOT:\tdid you read [!] today in school ?\n'), ((257, (-1, 4)), '*MOT:\tdid Rhonda read a book to you ?\n'), ((257, (24, 28)), '*MOT:\tdid Rhonda read a book to you ?\n'), ((268, (-1, 4)), '*CHI:\twas not in school [>] today .\n'), ((268, (17, 23)), '*CHI:\twas not in school [>] today .\n'), ((268, (24, 27)), '*CHI:\twas not in school [>] today .\n'), ((268, (28, 33)), '*CHI:\twas not in school [>] today .\n'), ((274, (11, 14)), '*BRO:\t&-um [/] [<] .\n'), ((274, (15, 18)), '*BRO:\t&-um [/] [<] .\n'), ((279, (-1, 4)), '*CHI:\tat school .\n'), ((279, (9, 15)), '*CHI:\tat school .\n'), ((282, (40, 46)), "*MOT:\twell you just said you weren't in school .\n"), ((287, (-1, 4)), '*MOT:\twhere were you ?\n'), ((291, (-1, 4)), '*CHI:\tI was at school !\n'), ((291, (15, 21)), '*CHI:\tI was at school !\n'), ((297, (-1, 4)), '*MOT:\tdid you paint ?\n'), ((301, (-1, 4)), '*CHI:\tnot today Maggie said no .\n'), ((301, (10, 15)), '*CHI:\tnot today Maggie said no .\n'), ((304, (20, 23)), "*CHI:\tI'll tomorrow ask Maggie to paint .\n"), ((308, (6, 10)), '*MOT:\tokay (.) .\n'), ((308, (11, 14)), '*MOT:\tokay (.) .\n'), ((311, (-1, 4)), '*MOT:\twant me to make brownies for dessert ?\n'), ((311, (22, 30)), '*MOT:\twant me to make brownies for dessert ?\n'), ((311, (35, 42)), '*MOT:\twant me to make brownies for dessert ?\n'), ((316, (6, 12)), '*CHI:\tyippee !\n'), ((319, (6, 10)), '*BRO:\tyeah !\n'), ((322, (-1, 4)), '*MOT:\tyeah ?\n'), ((322, (6, 10)), '*MOT:\tyeah ?\n'), ((326, (6, 10)), '*CHI:\tyeah goodie !\n'), ((326, (11, 17)), '*CHI:\tyeah goodie !\n'), ((329, (-1, 4)), '*MOT:\tdid you eat all of your (.) spaghetti [>] ?\n'), ((329, (34, 43)), '*MOT:\tdid you eat all of your (.) spaghetti [>] ?\n'), ((334, (6, 11)), '*CHI:\tyummy [<] .\n'), ((334, (12, 15)), '*CHI:\tyummy [<] .\n'), ((337, (6, 11)), '*CHI:\tyummy in my cocky@c !\n'), ((337, (18, 25)), '*CHI:\tyummy in my cocky@c !\n'), ((340, (-1, 4)), "*BRO:\t<I'm almost done> [<] .\n"), ((340, (24, 27)), "*BRO:\t<I'm almost done> [<] .\n"), ((343, (-1, 4)), "*MOT:\tthat's not nice !\n"), ((346, (-1, 4)), "*MOT:\tI don't like that talk .\n"), ((346, (24, 28)), "*MOT:\tI don't like that talk .\n"), ((350, (6, 9)), '*CHI:\tzzz [<] .\n'), ((350, (10, 13)), '*CHI:\tzzz [<] .\n'), ((353, (29, 32)), '*CHI:\twell that was nonsense [>] .\n'), ((357, (9, 14)), "*MOT:\t<I don't like that> [<] .\n"), ((357, (20, 25)), "*MOT:\t<I don't like that> [<] .\n"), ((357, (26, 29)), "*MOT:\t<I don't like that> [<] .\n"), ((360, (-1, 4)), '*MOT:\tthat is [!] nonsense .\n'), ((363, (9, 16)), '*BRO:\tMa look_it .\n'), ((366, (6, 9)), '*MOT:\tmhm (.) .\n'), ((366, (10, 13)), '*MOT:\tmhm (.) .\n'), ((369, (28, 32)), '*MOT:\twhat happened to your book where the wild things are ?\n'), ((369, (48, 54)), '*MOT:\twhat happened to your book where the wild things are ?\n'), ((374, (6, 10)), "*MOT:\tit's all ripped up !\n"), ((377, (-1, 4)), '*MOT:\twho ripped it ?\n'), ((380, (-1, 4)), '*BRO:\tJeffrey .\n'), ((383, (-1, 4)), "*MOT:\tJeffrey I'm gonna take all the books out of there if you're goin(g) (t)a rip them .\n"), ((383, (18, 23)), "*MOT:\tJeffrey I'm gonna take all the books out of there if you're goin(g) (t)a rip them .\n"), ((383, (37, 42)), "*MOT:\tJeffrey I'm gonna take all the books out of there if you're goin(g) (t)a rip them .\n"), ((383, (59, 65)), "*MOT:\tJeffrey I'm gonna take all the books out of there if you're goin(g) (t)a rip them .\n"), ((390, (-1, 4)), '*MOT:\tokay ?\n'), ((390, (6, 10)), '*MOT:\tokay ?\n'), ((399, (-1, 4)), "*MOT:\t(be)cause they're getting ripped up [>] .\n"), ((399, (42, 45)), "*MOT:\t(be)cause they're getting ripped up [>] .\n"), ((403, (13, 16)), '*CHI:\t<Mama> [<] !\n'), ((409, (-1, 4)), "*CHI:\tI don't have [!] a book .\n"), ((409, (25, 29)), "*CHI:\tI don't have [!] a book .\n"), ((412, (25, 30)), '*MOT:\twhat about all the books in there that you ripped up ?\n'), ((418, (-1, 4)), '*BRO:\the ripped up my +/.\n'), ((421, (-1, 4)), '*MOT:\tdid cha [: you] know Paul paid a lot of money for those Doctor Seuss books and you ripped in them and scribbled in them .\n'), ((421, (17, 21)), '*MOT:\tdid cha [: you] know Paul paid a lot of money for those Doctor Seuss books and you ripped in them and scribbled in them .\n'), ((421, (39, 42)), '*MOT:\tdid cha [: you] know Paul paid a lot of money for those Doctor Seuss books and you ripped in them and scribbled in them .\n'), ((421, (46, 51)), '*MOT:\tdid cha [: you] know Paul paid a lot of money for those Doctor Seuss books and you ripped in them and scribbled in them .\n'), ((421, (75, 80)), '*MOT:\tdid cha [: you] know Paul paid a lot of money for those Doctor Seuss books and you ripped in them and scribbled in them .\n'), ((430, (-1, 4)), "*MOT:\the's not going to buy you any more .\n"), ((435, (6, 9)), '*CHI:\tzzz .\n'), ((445, (6, 9)), '*CHI:\tmhm [?] .\n'), ((445, (10, 13)), '*CHI:\tmhm [?] .\n'), ((448, (6, 10)), '*MOT:\tokay .\n'), ((451, (11, 15)), "*MOT:\tnext time one of those books gets ripped Chi I'm gonna have_to put them all up .\n"), ((451, (29, 34)), "*MOT:\tnext time one of those books gets ripped Chi I'm gonna have_to put them all up .\n"), ((451, (55, 60)), "*MOT:\tnext time one of those books gets ripped Chi I'm gonna have_to put them all up .\n"), ((466, (6, 9)), '*MOT:\tyep (.) .\n'), ((466, (10, 13)), '*MOT:\tyep (.) .\n'), ((469, (-1, 4)), '*MOT:\ttomorrow is show and tell Bro .\n'), ((472, (-1, 4)), '*BRO:\tI know .\n'), ((475, (6, 9)), '*CHI:\tzzz .\n'), ((479, (10, 13)), '*BRO:\tthe bus driver told me that .\n'), ((479, (14, 20)), '*BRO:\tthe bus driver told me that .\n'), ((483, (16, 19)), '*BRO:\tthe other day .\n'), ((486, (14, 21)), '*CHI:\tMama my teacher said no .\n'), ((489, (11, 18)), '*MOT:\tyour teacher said no ?\n'), ((493, (-1, 4)), '*CHI:\t<she said> [/] <sh(e)> [/] she said show and tell was [///] the bus man says Friday [!] .\n'), ((493, (42, 46)), '*CHI:\t<she said> [/] <sh(e)> [/] she said show and tell was [///] the bus man says Friday [!] .\n'), ((493, (51, 55)), '*CHI:\t<she said> [/] <sh(e)> [/] she said show and tell was [///] the bus man says Friday [!] .\n'), ((493, (70, 77)), '*CHI:\t<she said> [/] <sh(e)> [/] she said show and tell was [///] the bus man says Friday [!] .\n'), ((498, (-1, 4)), '*MOT:\tFriday ?\n'), ((505, (-1, 4)), '*MOT:\twho said that Joe ?\n'), ((513, (-1, 4)), '*MOT:\tTony ?\n'), ((522, (-1, 4)), "*MOT:\tI thought Joe was the [/] the bus driver's name .\n"), ((522, (36, 39)), "*MOT:\tI thought Joe was the [/] the bus driver's name .\n"), ((522, (49, 53)), "*MOT:\tI thought Joe was the [/] the bus driver's name .\n"), ((527, (6, 9)), '*BRO:\tzzz .\n'), ((531, (30, 37)), '*BRO:\t&-um the different <bus driver> [>] .\n'), ((531, (38, 41)), '*BRO:\t&-um the different <bus driver> [>] .\n'), ((534, (-1, 4)), '*MOT:\t<what do you say> [<] ?\n'), ((538, (-1, 4)), "*CHI:\tbut Tony's the bus driving Joe .\n"), ((538, (21, 24)), "*CHI:\tbut Tony's the bus driving Joe .\n"), ((542, (-1, 4)), '*BRO:\t<excuse me> [<] .\n'), ((542, (14, 17)), '*BRO:\t<excuse me> [<] .\n'), ((542, (18, 21)), '*BRO:\t<excuse me> [<] .\n'), ((552, (-1, 4)), '*MOT:\tdid you drink all your drink (.) ?\n'), ((552, (14, 19)), '*MOT:\tdid you drink all your drink (.) ?\n'), ((552, (35, 38)), '*MOT:\tdid you drink all your drink (.) ?\n'), ((555, (-1, 4)), '*MOT:\tare you done ?\n'), ((558, (6, 13)), "*BRO:\tthere's yellow .\n"), ((558, (14, 20)), "*BRO:\tthere's yellow .\n"), ((561, (-1, 4)), '*BRO:\tI mean red yellow green blue .\n'), ((561, (17, 23)), '*BRO:\tI mean red yellow green blue .\n'), ((561, (24, 34)), '*BRO:\tI mean red yellow green blue .\n'), ((567, (11, 18)), "*MOT:\twhat color's that Jeff ?\n"), ((571, (6, 10)), '*CHI:\tblue .\n'), ((577, (11, 16)), '*MOT:\twhat color is that (.) ?\n'), ((577, (25, 28)), '*MOT:\twhat color is that (.) ?\n'), ((581, (-1, 4)), '*MOT:\tso was Rhonda in today Jeff ?\n'), ((581, (23, 28)), '*MOT:\tso was Rhonda in today Jeff ?\n'), ((589, (-1, 4)), '*MOT:\tno ?\n'), ((593, (6, 11)), "*CHI:\tshe's sick .\n"), ((593, (12, 16)), "*CHI:\tshe's sick .\n"), ((596, (6, 11)), "*MOT:\tshe's sick .\n"), ((596, (12, 16)), "*MOT:\tshe's sick .\n"), ((599, (-1, 4)), "*MOT:\twhat's wrong with her ?\n"), ((599, (6, 12)), "*MOT:\twhat's wrong with her ?\n"), ((603, (-1, 4)), '*CHI:\tshe [/] she [//] her back was hurting her .\n'), ((603, (27, 31)), '*CHI:\tshe [/] she [//] her back was hurting her .\n'), ((606, (10, 14)), '*MOT:\ther back was hurting her ?\n'), ((610, (-1, 4)), "*CHI:\tlike Ronnie's .\n"), ((613, (-1, 4)), "*MOT:\tlike Ronnie's ?\n"), ((621, (8, 11)), '*CHI:\ta cat opened her back .\n'), ((621, (23, 27)), '*CHI:\ta cat opened her back .\n'), ((624, (8, 11)), '*MOT:\ta cat opened [!] her back ?\n'), ((624, (27, 31)), '*MOT:\ta cat opened [!] her back ?\n'), ((628, (6, 10)), '*CHI:\tyeah .\n'), ((631, (6, 10)), '*CHI:\tyeah .\n'), ((634, (-1, 4)), '*CHI:\t(be)cause she had a cat .\n'), ((634, (26, 29)), '*CHI:\t(be)cause she had a cat .\n'), ((641, (52, 56)), '*BRO:\t<y(ou)> [/] <y(ou)> [/] you mean broke him in half ?\n'), ((644, (-1, 4)), '*CHI:\tjust a little bit .\n'), ((644, (20, 23)), '*CHI:\tjust a little bit .\n'), ((647, (-1, 4)), '*MOT:\tso did everyone like your hair+cut ?\n'), ((652, (9, 13)), '*CHI:\tno girl kissed me .\n'), ((655, (-1, 4)), '*MOT:\twho did ?\n'), ((660, (13, 18)), '*CHI:\tno [!] girls !\n'), ((663, (9, 14)), '*MOT:\tno girls kissed you !\n'), ((667, (-1, 1)), "*CHI:\t&-uh <I don't care [/]> [>] .\n"), ((667, (14, 19)), "*CHI:\t&-uh <I don't care [/]> [>] .\n"), ((667, (20, 24)), "*CHI:\t&-uh <I don't care [/]> [>] .\n"), ((670, (-1, 4)), '*MOT:\t<why are they supposed to kiss you> [<] ?\n'), ((670, (6, 10)), '*MOT:\t<why are they supposed to kiss you> [<] ?\n'), ((670, (37, 41)), '*MOT:\t<why are they supposed to kiss you> [<] ?\n'), ((670, (42, 45)), '*MOT:\t<why are they supposed to kiss you> [<] ?\n'), ((678, (6, 9)), '*MOT:\tzzz .\n'), ((682, (32, 35)), '*CHI:\tMa can I have <some more> [>] .\n'), ((686, (15, 20)), '*MOT:\t<did any girls kiss you Eddie >[<] ?\n'), ((689, (6, 10)), '*BRO:\tyeah .\n'), ((692, (-1, 4)), '*MOT:\twho ?\n'), ((699, (6, 9)), '*MOT:\tzzz .\n'), ((703, (-1, 4)), '*MOT:\twhy she thinks you look handsome ?\n'), ((707, (-1, 4)), '*MOT:\tyou <are handsome> [>] .\n'), ((707, (25, 28)), '*MOT:\tyou <are handsome> [>] .\n'), ((714, (-1, 4)), "*MOT:\tthere [//] it's all gone .\n"), ((714, (17, 21)), "*MOT:\tthere [//] it's all gone .\n"), ((717, (6, 9)), '*CHI:\tzzz .\n'), ((721, (10, 15)), "*MOT:\tI'm gonna make some brownies anyway .\n"), ((721, (26, 34)), "*MOT:\tI'm gonna make some brownies anyway .\n"), ((725, (-1, 4)), "*MOT:\tdon't you want some brownies ?\n"), ((725, (6, 11)), "*MOT:\tdon't you want some brownies ?\n"), ((725, (26, 34)), "*MOT:\tdon't you want some brownies ?\n"), ((729, (6, 10)), '*CHI:\tyeah !\n'), ((733, (6, 10)), '*CHI:\tyeah !\n'), ((736, (6, 10)), '*CHI:\tyeah !\n'), ((739, (6, 10)), '*CHI:\tyeah !\n'), ((742, (-1, 4)), '*MOT:\tokay you guys done ?\n'), ((746, (15, 20)), '*MOT:\tput your bowls in <the sink> [>] .\n'), ((746, (29, 34)), '*MOT:\tput your bowls in <the sink> [>] .\n'), ((746, (35, 38)), '*MOT:\tput your bowls in <the sink> [>] .\n'), ((749, (16, 23)), '*BRO:\t<Mama put candles in them> [<] .\n'), ((749, (33, 36)), '*BRO:\t<Mama put candles in them> [<] .\n'), ((755, (-1, 4)), '*BRO:\tput candles in them (be)cause we like to blow (.) .\n'), ((755, (10, 17)), '*BRO:\tput candles in them (be)cause we like to blow (.) .\n'), ((755, (52, 55)), '*BRO:\tput candles in them (be)cause we like to blow (.) .\n'), ((760, (6, 10)), '*BRO:\tokay [>] ?\n'), ((760, (11, 14)), '*BRO:\tokay [>] ?\n'), ((763, (-1, 4)), '*MOT:\tcandles in the brownies ?\n'), ((763, (6, 13)), '*MOT:\tcandles in the brownies ?\n'), ((763, (21, 29)), '*MOT:\tcandles in the brownies ?\n'), ((766, (-1, 4)), '*MOT:\twhy ?\n'), ((769, (-1, 4)), '*BRO:\t(be)cause &d we like to blow .\n'), ((772, (6, 10)), '*MOT:\tokay .\n'), ((775, (-1, 4)), '*BRO:\tyou promise .\n'), ((778, (-1, 4)), '*BRO:\t<you promise> [>] ?\n'), ((778, (20, 23)), '*BRO:\t<you promise> [>] ?\n'), ((781, (12, 16)), '*MOT:\t<good boy> [<] Jeff .\n'), ((784, (12, 15)), "*MOT:\tWe'll see .\n"), ((787, (-1, 4)), "*MOT:\tI don't even know if I have any candles Bro .\n"), ((787, (38, 45)), "*MOT:\tI don't even know if I have any candles Bro .\n"), ((792, (-1, 4)), '*MOT:\tI think we used them all at your birthday party .\n'), ((792, (48, 53)), '*MOT:\tI think we used them all at your birthday party .\n'), ((797, (14, 18)), '*CHI:\tno [//] yeah we did .\n'), ((800, (10, 13)), '*BRO:\t<no we> [//] no no Jeff but we put (.) five of them in .\n'), ((805, (-1, 4)), '*CHI:\twe put five [!] of them in .\n'), ((805, (18, 21)), '*CHI:\twe put five [!] of them in .\n'), ((808, (10, 14)), "*BRO:\tMom it's doing it again !\n"), ((813, (-1, 4)), '*MOT:\tyou all done ?\n'), ((818, (19, 23)), '*MOT:\tBro put your bowl in the sink please !\n'), ((818, (31, 35)), '*MOT:\tBro put your bowl in the sink please !\n'), ((818, (36, 42)), '*MOT:\tBro put your bowl in the sink please !\n'), ((823, (19, 27)), "*CHI:\tI'm all done drinking .\n"), ((826, (20, 24)), "*MOT:\t<where's your bowl go> [>] (.) ?\n"), ((826, (25, 28)), "*MOT:\t<where's your bowl go> [>] (.) ?\n"), ((829, (16, 19)), '*MOT:\t<and your cup please> [>] .\n'), ((829, (20, 27)), '*MOT:\t<and your cup please> [>] .\n'), ((829, (28, 31)), '*MOT:\t<and your cup please> [>] .\n'), ((832, (6, 9)), '*BRO:\tzzz [<] .\n'), ((832, (10, 13)), '*BRO:\tzzz [<] .\n'), ((839, (11, 15)), '*MOT:\tyour bowl and your cup in the sink .\n'), ((839, (25, 28)), '*MOT:\tyour bowl and your cup in the sink .\n'), ((839, (36, 40)), '*MOT:\tyour bowl and your cup in the sink .\n'), ((845, (-1, 4)), '*BRO:\tI can only take <one at> [>] a time .\n'), ((845, (22, 26)), '*BRO:\tI can only take <one at> [>] a time .\n'), ((845, (27, 30)), '*BRO:\tI can only take <one at> [>] a time .\n'), ((845, (37, 41)), '*BRO:\tI can only take <one at> [>] a time .\n'), ((850, (13, 17)), '*MOT:\t<thank you> [<] .\n'), ((850, (18, 21)), '*MOT:\t<thank you> [<] .\n'), ((857, (-1, 1)), '*BRO:\t<I like it> [>] .\n'), ((857, (14, 17)), '*BRO:\t<I like it> [>] .\n'), ((857, (18, 21)), '*BRO:\t<I like it> [>] .\n'), ((861, (12, 16)), '*MOT:\t<good boy> [<] .\n'), ((861, (17, 20)), '*MOT:\t<good boy> [<] .\n'), ((865, (6, 10)), '*BRO:\tmama xxx I like it xxx (.) .\n'), ((865, (11, 14)), '*BRO:\tmama xxx I like it xxx (.) .\n'), ((865, (29, 32)), '*BRO:\tmama xxx I like it xxx (.) .\n'), ((868, (-1, 4)), '*BRO:\tnow will you set out the xxx [>] .\n'), ((868, (31, 34)), '*BRO:\tnow will you set out the xxx [>] .\n'), ((868, (35, 38)), '*BRO:\tnow will you set out the xxx [>] .\n'), ((872, (10, 13)), '*MOT:\tyes (.) .\n'), ((875, (6, 11)), '*MOT:\tthank you guys [<] .\n'), ((875, (21, 24)), '*MOT:\tthank you guys [<] .\n')]
calculating accuracy and recall
correct labels:
set(['spaghetti', 'brownies'])
predicted labels:
set(['', "don't", 'dance', 'money', '[!]', 'yep', '<one', 'drinking', 'yummy', 'thank', 'cup', 'show', 'color', 'tape', 'please>', 'dessert', 'school', 'gonna', 'it>', '[>]', 'yellow', 'half', 'bit', 'day', "we'll", 'mhm', 'name', 'we>', 'sink>', 'yeah', 'bowls', 'see', 'books', 'yippee', 'me>', 'spaghetti', 'zzz', 'blue', 'look_it', '(.)', 'please', 'that>', "there's", "color's", 'at>', 'eating', 'bus man', 'green blue', 'sink', 'ask', 'teacher', 'care', 'thing', 'go>', 'wall', 'duck', 'boy>', '<why', "you're", 'monkey', "it's", 'girls', 'you]', 'tell', 'lot', 'mama', 'cocky@c', 'store', 'ceiling', 'door', 'bus', "what's", 'xxx', 'back', 'you>', 'brownies', 'eat', 'room', 'cha [:', 'cat', 'today', 'candles', '[?]', 'goodie', 'girl', 'worry', '[/]', 'things', 'bowl', 'book', 'sick', 'papers', 'party', 'okay', 'drink', 'driver', '[<]', 'driver>', 'coat', 'counter', 'time', "she's", 'talk'])
file:HSLLD/HV1/MT//jacmt1.cha
precision: 0.0194174757282
recall: 1.0
true positives:['brownies', 'spaghetti']
false positives: ['', '(.)', '<one', '<why', '[!]', '[/]', '[<]', '[>]', '[?]', 'ask', 'at>', 'back', 'bit', 'blue', 'book', 'books', 'bowl', 'bowls', 'boy>', 'bus', 'bus man', 'candles', 'care', 'cat', 'ceiling', 'cha [:', 'coat', 'cocky@c', 'color', "color's", 'counter', 'cup', 'dance', 'day', 'dessert', "don't", 'door', 'drink', 'drinking', 'driver', 'driver>', 'duck', 'eat', 'eating', 'girl', 'girls', 'go>', 'gonna', 'goodie', 'green blue', 'half', "it's", 'it>', 'look_it', 'lot', 'mama', 'me>', 'mhm', 'money', 'monkey', 'name', 'okay', 'papers', 'party', 'please', 'please>', 'room', 'school', 'see', "she's", 'show', 'sick', 'sink', 'sink>', 'store', 'talk', 'tape', 'teacher', 'tell', 'thank', 'that>', "there's", 'thing', 'things', 'time', 'today', 'wall', "we'll", 'we>', "what's", 'worry', 'xxx', 'yeah', 'yellow', 'yep', 'yippee', "you're", 'you>', 'you]', 'yummy', 'zzz']
false negatives: []
# true pos: 2
# false pos: 101
# false neg: 0
HSLLD/HV1/MT//deamt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: tape out .', '*CHI: &a:h .', '*BRO: 0 [=! makes loud growling sounds] .', '*MOT: (..) want a piece ?', '*CHI: okay .', '*BRO: <Mom> [>] !', '*MOT: xxx [<] .', '*MOT: you wanna put your glass xxx [>] .', '*FR1: <Jessie> [<] !', "*MOT: xxx it's all down your arm .", '*FR1: xxx .', '*MOT: Chi you better eat all that .', '*CHI: I am .', '*MOT: alright as long as you am .', '*BRO: who did that ?', '*MOT: who did what ?', '*BRO: who spilled it ?', '*MOT: who spilled what ?', '*BRO: xxx (.) huh [>] .', '*MOT: who [<] spilled what ?', '*BRO: Dad !', '*BRO: xxx [>] .', '*CHI: <iced tea> [<] .', '*BRO: Dad !', '*FR1: xxx .', '*MOT: Billy you want some milk ?', '*FR1: uhhuh .', '*CHI: Mom I want some +/.', "*MOT: I'll get you a glass .", '*CHI: Mom +/.', '*MOT: no you got iced tea Chi .', "*MOT: that's what +/.", '*CHI: Mom .', '*MOT: what ?', '*CHI: &-um .', '*BRO: come back !', '*FR1: what are you doing <with them glasses> [>] ?', '*MOT: okay xxx [<] .', '*MOT: where am I going <with these glasses> [>] ?', '*BRO: <come back> [<] !', "*MOT: it's to get <some sodas for me and> [>] Billy .", '*BRO: xxx [<] .', '*MOT: no you have that after [/] after you eat .', '*MOT: you can have it after .', '*CHI: I ate [!] mine !', "*MOT: you didn't eat all yours yet .", '*CHI: no .', '*MOT: yeah .', '*CHI: no .', '*MOT: come on eat up what ?', '*CHI: I ate all my gum .', '*MOT: I know .', '*MOT: do you see a xxx for me ?', '*CHI: (.) Mot can you xxx ?', '*MOT: no [///] up [///] yeah [///] no no no no .', "*MOT: that's up to Billie's mommy .", '*MOT: I want you up at the table so you can eat .', '*MOT: come on .', '*MOT: <do you have_to pee Chi> [>] ?', "*CHI: <Mom I'm cutting> [<] this off .", '*MOT: huh ?', '*MOT: alright fine throw it away I want you up at the table so you can eat .', '*MOT: Jess !', '*MOT: no &m no sit [!] Jessie !', '*MOT: good girl [>] .', '*BRO: xxx [<] .', '*MOT: the pizza is fine xxx .', '*BRO: ah !', "*MOT: what's the matter Kenny ?", '*BRO: ah .', "*MOT: what's the matter Bro ?", '*BRO: &h &h hot [>] hot !', '*CHI: hot [<] !', "*MOT: it's not hot .", '*BRO: ah (.) &a:h !', '*CHI: xxx .', '*BRO: ah .', '*CHI: xxx .', '*BRO: &a:h ah .', '*CHI: &=coughs .', "*CHI: that's not hot .", "*CHI: that's not hot .", '*BRO: yeah it is .', '*BRO: &a:h !', '*FR2: ah !', '*MOT: xxx down .', '*BRO: ah !', '*CHI: (.) Mot .', '*MOT: Mom what ?', '*CHI: I did one .', "*MOT: I didn't cut two pieces you better eat two pieces .", '*MOT: (be)cause you wanted (th)em .', '*FR1: xxx .', '*MOT: here it is .', '*BRO: &-um !', '*FR2: xxx .', '*MOT: no you got iced tea Jessie .', '*MOT: here Jessie .', "*FR1: that's all I'm not hungry .", '*MOT: fine !', '*FR1: &=laughs .', "*MOT: I ain't gonna argue with you .", '*FR1: soda gives me the farts .', '*MOT: xxx .', '*CHI: grow up Mot .', '*MOT: what honey ?', '*CHI: grow up .', '*BRO: 0 [=! makes farting sound] .', '*FR1: (.) xxx .', '*BRO: ah !', '*CHI: Mom .', '*MOT: wait a minute honey .', '*FR1: you shouldnta [: should not have] done that .', '*FR1: <&=laughs > [>] .', '*MOT: <&=laughs > [<] .', '*FR1: oh well .', "*FR1: they don't know who [>] I am .", '*MOT: what [<] ?', '*MOT: what Bro ?', '*BRO: I have some milk ?', '*FR1: &=laughs .', '*CHI: soda (.) soda .', '*MOT: no you drink your iced tea .', '*FR2: xxx .', '*MOT: what are you doing ?', '*CHI: nothing .', '*FR2: xxx .', '*FR1: what ?', "*CHI: that's Bro's .", "*MOT: what's Bro's ?", '*CHI: the frog .', "*MOT: (.) no not at the table give it to him after you're done eating !", '*MOT: get up there and eat .', '*BRO: xxx (.) go (.) !', '*BRO: xxx [>] .', '*CHI: <that one> [<] rolled down .', "*MOT: he's picking this tape up at two thirty .", '*BRO: xxx .', "*MOT: hey you guys want to go downtown after you're done eatin(g) ?", '*CHI: yep .', '*FR1: xxx you want one ?', '*MOT: whaddya [: what do you] guys want to do down there ?', '*MOT: go get balloons ?', '*FR1: sounds good to me .', "*FR1: I was just about to accept your ride [>] but I don't think xxx .", '*CHI: <yeah yeah> [<] !', '*FR1: &=laughs .', '*CHI: where the balloons are ?', "*FR1: no I wasn't xxx today .", '*MOT: oh I know but I +/.', '*CHI: Mom !', '*CHI: where the birds are and the fishie(s) are ?', '*MOT: huh ?', '*MOT: what ?', '*BRO: &=mumbling .', '*MOT: whatchu [: what did you] just say ?', '*BRO: &=mumbling .', "*MOT: I didn't hear you .", '*MOT: what about the birds and fishies ?', '*MOT: where the birds and fishes are ?', "*MOT: they don't have <the pet show in> [//] <the pet> [//] <they don't have the pet show> [//] &s blah !", '*MOT: 0 [=! small laugh] .', "*MOT: they don't have the pet shop in there no more Chi .", '*FR1: could I have that ashtray ?', "*MOT: <what's the mat> [//] what Jessie ?", '*FR1: she wants her cup of wheat .', '*MOT: oh !', '*MOT: yeah .', "*MOT: no I'm <gonna xxx pair of sneakers> [>] .", '*CHI: xxx [<] .', "*MOT: that's why <I want to go downtown> [>] .", '*CHI: no [<] !', "*MOT: tomorrow I'm going to xxx that's the first thing in the morning .", "*FR1: isn't that down on Route nine ?", '*MOT: uhhuh .', "*FR1: I heard of that place before but I ain't never been there .", '*MOT: totally awesome .', '*MOT: completely awesome .', '*MOT: best buys ever .', '*BRO: Mom !', "*FR1: that's what I heard they got nice stuff there [>] .", '*MOT: <that sweater right there> [<] .', '*BRO: Mom .', '*MOT: Chi up at the table and eat (.) come on .', '*CHI: pizza .', '*MOT: never mind about her .', '*MOT: you eat !', '*MOT: but &-uh +...', '*BRO: xxx [>] .', '*CHI: xxx [<] .', '*MOT: you want another piece ?', '*CHI: my (s)poon .', '*BRO: my spoon .', "*MOT: but that's <where the xxx belong> [>] .", '*BRO: my spoon [<] .', '*MOT: xxx .', '*FR1: really ?', '*CHI: xxx xxx [>] .', '*FR1: how far <on Route_Nine is it> [<] ?', '*MOT: xxx <do you know where the Christmas shop tree is> [>] ?', '*CHI: xxx [<] .', '*BRO: xxx .', '*CHI: xxx xxx [>] .', "*MOT: <you keep going straight and> [<] it's like (.) right there it's like maybe two three more miles after <the Christmas tree shop> [>] .", '*BRO: <my xxx> [<] !', "*CHI: it's my xxx !", '*FR1: is there a bus that goes out to the <Christmas tree shop> [>] ?', '*BRO: uhuh [<] .', "*CHI: it's my spoon !", '*BRO: xxx !', '*MOT: hey .', '*CHI: my xxx !', '*MOT: hey !', '*MOT: <shush (.) eat> [>] !', '*BRO: xxx .', '*CHI: <xxx my spoon> [<] ?', '*MOT: but &-um I know that the bus goes out near the Christmas tree shop .', '*MOT: (be)cause (.) actually I was thinking about taking a bus [>] xxx .', '*BRO: xxx [<] .', '*CHI: uhuh [>] .', '*BRO: xxx [<] .', '*CHI: Mom !', '*BRO: xxx .', '*CHI: xxx .', '*MOT: <you used to walk to the Christmas tree store> [>] ?', '*BRO: <my xxx> [>] .', '*CHI: <my xxx> [<] .', '*FR1: I used to work there I used to get a ride .', '*MOT: oh .', '*BRO: xxx .', '*MOT: xxx like going from the Christmas tree shop in the snow .', '*BRO: xxx .', '*CHI: xxx .', '*FR1: the Christmas trees stop [/] the Christmas tree shop xxx [>] .', '*CHI: xxx [<] .', "*MOT: I didn't think they had clothes there .", "*FR1: no I'm just saying they got nice belts there for cheap prices .", '*MOT: &-uh .', '*BRO: xxx .', '*CHI: nuhhuh xxx this one .', '*FR1: &=laughs .', '*FR1: you got something +/.', "*MOT: oh you're gonna lose that <right off your cheese xxx> [>] !", "*FR1: <you're gonna lose the cheese> [<] (.) you're gonna [: going to] lose it !", '*CHI: nuhhuh .', '*FR1: mhm (.) mhm .', '*CHI: nuhhuh .', '*FR1: mhm .', '*CHI: nuhhuh .', '*BRO: Mom xxx .', '*MOT: no you have your xxx xxx .', '*BRO: xxx !', '*MOT: nuhhuh .', '*CHI: I pulled it off .', '*BRO: <Mom xxx> [>] !', '*MOT: <no get off his case> [<] .', '*BRO: xxx .', '*MOT: (..) Chi sit down .', '*MOT: Chi pick it up !', '*MOT: (..) look !', '*MOT: give it to me !', '*MOT: Chi !', '*FR1: here .', '*MOT: eat !', '*MOT: get up there and eat .', "*CHI: that's yucky .", '*MOT: not too xxx .', "*CHI: it's dirty .", '*MOT: then throw it away !', '*CHI: look .', '*FR1: &-um excuse me .', '*MOT: throw it away then !', '*CHI: (.) xxx .', "*FR1: Tuesday I'm gonna go to the Auburn Mall and I'm spendin(g) all day there .", '*MOT: &=laughs .', '*FR1: I only been there once since I been living in this area .', '*BRO: I got <a xxx Mot> [>] .', '*FR1: <xxx two years> [<] .', '*MOT: &=laughs .', '*FR1: &=laughs .', '*FR1: I like the xxx mall .', '*BRO: want a soda Mot .', '*MOT: hm: ?', '*BRO: I want a soda .', '*MOT: no soda Bro .', '*MOT: you done with your iced tea ?', '*MOT: no [>] .', '*FR1: <I never> [<] been to the Greendale mall .', '*BRO: xxx !', '*MOT: xxx .', '*FR1: I want to go to the Auburn mall .', "*MOT: what's so great about the Auburn mall ?", "*FR1: I just want to go there (be)cause it's so big and I want to go to the &-uh Sears <and get me and child's name picture done again> [>] .", '*BRO: xxx [>] ?', '*CHI: yep [<] .', '*MOT: alright .', '*FR1: &-um and I want to go to the pet shop +/.', "*MOT: then that's why you want to go to Auburn .", '*MOT: <I used to go to the pet shop> [>] .', '*BRO: xxx [<] .', '*FR1: hey <you want to go> [/] you want to go to the pet shop ?', '*FR1: <they going xxx> [>] .', "*MOT: <that's what I should do> [<] .", '*FR1: they probably have a pet shop at Greenville huh ?', "*MOT: that's what I should do .", '*MOT: I should take these kids to the Auburn mall .', '*MOT: get on the bus go out there .', '*MOT: go to the pet shop and buy some fish .', '*FR1: &=laughs .', '*CHI: xxx [>] !', '*FR1: <xxx buy a rabbit or a hampster@d> [<] .', '*MOT: no no no forget rabbits forget hampsters@d not in my house .', "*MOT: (.) anything that's small or that's caged +...", '*MOT: fishies sound good .', '*MOT: do you want a fishy Chi ?', '*MOT: <Bro> [>] ?', '*CHI: no [<] .', '*MOT: ah you would say no .', '*MOT: hey Bro you want a fishy ?', '*MOT: yeah [!] huh ?', "*MOT: <you'd try> [/] you'd try to catch it from the bowl .", '*MOT: &=laughs .', '*MOT: can you see it ?', "*BRO: Mom and I'm gonna take it out and eat [!] it !", "*MOT: no you're not .", "*MOT: <why don't you> [/] <why don't you> [/] why don't you eat your pizza ?", '*FR1: last Christmas .', '*CHI: no .', "*CHI: that's Jessica's .", '*MOT: get up there and eat your pizza .', '*BRO: mine .', '*FR1: once <I &w> [//] when I was friends with that girl Darlene ?', '*MOT: mhm .', '*FR1: I had brought her daughter a whole bunch <of little> [>] fish for Christmas for two bucks and they all died within a week .', '*BRO: mom [<] !', '*MOT: did she feed (th)em ?', '*MOT: &=laughs .', "*FR1: I don't know I don't understand how they all died .", "*MOT: she didn't take care of (th)em .", '*BRO: &=cries .', "*MOT: what's the matter now ?", '*BRO: &=sigh .', '*CHI: what [>] ?', '*FR1: <that must> [<] be it .', '*BRO: 0 [=! gutteral grunt] .', '*CHI: 0 [=! small sound of disgust] .', '*BRO: &=yells !', "*FR1: they're supposed to be twenty for two dollars but they just scoop out a whole bunch of them and probably xxx .", '*BRO: xxx xxx [>] .', '*MOT: <they were polliwogs@wp> [<] .', '*FR1: no not polliwogs@wp .', '*CHI: Mom ?', '*MOT: then what are they ?', '*CHI: <over there> [>] .', "*FR1: <I don't know> [<] what I forget what they are .", '*CHI: xxx [>] .', "*FR1: <but they're only> [<] like this big .", '*MOT: mhm .', "*FR1: I dunno [: don't know] what they are .", '*MOT: Chi get up here and finish eatin(g) .', '*CHI: I was showing her where the garbage was .', '*MOT: alright just get up here and finish eatin(g) (.) please .', '*FR1: oh she loves fish so I thought oh wow .', '*BRO: <0 [= high pitched sound]> [>] .', "*FR1: xxx [<] I'll get her some fish .", '*FR1: <&=laughs > [>] .', '*MOT: <&=laughs > [<] .', '*MOT: tee hee !', '*FR1: well she liked (th)em .', "*FR1: so actually that's all that counts .", "*FR1: I mean I could go get her something <that she wouldn't enjoy> [>] .", "*MOT: <Jessie where's my Jessie> [<] Jessie baby .", '*FR2: xxx .', '*MOT: you want some more pizza ?', '*FR1: no .', '*MOT: &=singing .', '*CHI: Mom I want to save this .', '*BRO: Mom !', '*MOT: what what what ?', '*CHI: Mom .', "*MOT: I don't know where it went .", '*CHI: Mom is [/] is xxx +/.', "*MOT: no you're not saving that Chi you're gonna sit there and you're gonna eat it .", '*CHI: I want to save the soda .', '*MOT: oh yeah fine [!] save the soda but <you eat the rest> [/] you eat the rest of your lunch .', "*CHI: I'm gonna go put it in the fridge (.) &-um .", '*MOT: put it in the fridge Chi then get back up here and finish eatin(g) .', '*CHI: &=burps .', '*CHI: excuse me .', '*CHI: &=burps .', '*MOT: excuse yourself please .', '*MOT: Chi .', '*CHI: I said excuse me !', "*MOT: alright that's better .", '*BRO: &-um <xxx bad> [>] .', '*MOT: <you know what it> [<] sounded like you said ?', '*FR1: no what did it sound like he said ?', '*MOT: screw me .', '*MOT: <&=laughs > [>] .', '*FR1: <&=laughs > [<] .', "*MOT: cute adult's name .", '*BRO: xxx .', '*MOT: huh ?', '*BRO: excuse me .', "*MOT: you didn't burp did you ?", '*MOT: want some more pizza Bro ?', "*FR1: well I haven't been gettin(g) that lately so it's been on my mind &=laughs .", '*MOT: &=laughs .', '*FR1: I was reading a dirty book last night when you came in .', '*MOT: &=laughs .', '*CHI: xxx .', '*FR1: it has a story to it <but whenever they get in bed with each other they have details (.) very explicit details> [>] .', '*CHI: xxx [<] .', '*FR1: &=laughs .', '*FR2: xxx .', '*MOT: Chi come on (.) eat please ?', '*CHI: 0 [=! long monotone hum] .', '*FR2: xxx .', '*CHI: &=humming .', '*MOT: Bro Chi can you please eat (.) please (.) Bro .', '*MOT: what are you doing ?', '*MOT: hey xxx hey hey hey [!] (.) hey [!] gimme [: give me] that !', '*CHI: whaddya [: what are you] doing ?', '*MOT: give it to me !', '*CHI: let me see .', '*MOT: Bro !', '*CHI: &=laughs .', '*FR1: give it to me .', '*MOT: hey !', '*MOT: give it to me .', '*CHI: xxx .', "*MOT: adult's name where's the ash tray ?", '*BRO: xxx .', '*FR1: way over there .', '*CHI: xxx .', '*FR1: could you not call me Bill ?', '*MOT: xxx [>] .', '*CHI: xxx [<] .', '*MOT: &-um Chi (.) Chi ?', '*CHI: what ?', '*MOT: can you please eat ?', '*MOT: I said please .', '*CHI: no .', '*MOT: yes !', '*MOT: I think you should (.) really .', '*MOT: you want to be skinny all your life ?', '*CHI: no .', "*MOT: you're nothin(g) but a little stack of bones .", "*MOT: then eat [!] and maybe you'll gain some weight xxx .", '*BRO: my xxx .', '*CHI: xxx .', '*MOT: Bro !', "*MOT: stop [!] don't !", '*MOT: xxx you want to go in your bed+room ?', '*BRO: &=laughs .', "*MOT: then stop don't spit .", '*BRO: 0 [=! makes spitting sounds] .', '*MOT: Brp !', '*MOT: <no more iced tea> [>] for Bro .', '*BRO: xxx [<] .', '*BRO: no .', '*MOT: okay .', '*CHI: &=babbling .', '*MOT: excuse me [!] (.) Bro .', '*CHI: just smack him .', '*MOT: hey !', '*CHI: smack him .', "*MOT: no I'm not gonna smack [!] him .", '*CHI: yeah .', "*MOT: I'm gonna smack you .", '*CHI: smack you .', "*MOT: yeah right you're dreaming boy .", '*CHI: smack you .', "*MOT: no you won't .", '*CHI: <yeah I am> [>] .', '*BRO: <smack you> [<] .', '*MOT: &=laughs .', '*BRO: <smack you> [>] .', '*CHI: <smack your head> [<] .', '*MOT: yeah , right .', '*MOT: you think .', '*BRO: (.) done .', '*BRO: &=laughs .', '*BRO: xxx .', '*MOT: you are [!] huh ?', "*MOT: you're all done Bro ?", '*BRO: xxx your head .', '*MOT: no sir .', '*MOT: will you eat your pizza ?', '*BRO: &=cries .', '*CHI: no .', '*MOT: yes [>] .', '*BRO: <Mom> [<] .', '*CHI: please no .', '*MOT: please yes .', '*CHI: no [>] (.) please no !', '*BRO: &=cries .', '*MOT: please yes .', '*CHI: no !', '*MOT: yes !', '*CHI: please no !', '*MOT: please yes !', '*CHI: please no !', '*MOT: xxx come wash your hands .', '*BRO: &=cries .', '*MOT: xxx .', '*BRO: &=laughs .', '*MOT: go to the bath+room and wash your hands .', '*CHI: please no !', '*MOT: please yes two more bites .', '*CHI: please no !', '*MOT: please yes two more bites .', '*BRO: xxx .', '*CHI: please no !', '*MOT: yes .', '*CHI: please no !', '*MOT: yes .', '*CHI: please no !', '*MOT: do you want to go downtown ?', '*CHI: yeah .', '*MOT: then eat .', '*BRO: &=whining .', '*BRO: Mom xxx .', '*BRO: xxx .', '*MOT: xxx .', '*BRO: xxx .', '*CHI: oh xxx !', '*MOT: Chi sit down and eat .', '*MOT: come on two more bites I said (.) come on move it .', '*CHI: come see my friends .', '*BRO: xxx .', "*MOT: who's your friend ?", '*BRO: xxx .', "*CHI: he's on that bicycle .", '*MOT: really ?', "*MOT: why don't you come over here and eat .", '*BRO: xxx .', "*CHI: who's running that ?", '*CHI: the parking lot ?', '*MOT: running in the parking lot ?', '*CHI: yup and he left .', '*MOT: yeah ?', '*MOT: Chi come on two more bites .', '*CHI: no .', "*MOT: adult's name (you) wanna go make sure he don't flood the bath+room ?", "*CHI: he's not washing his hands .", '*MOT: yes he is washing his hands .', '*MOT: will you finish eatin(g) please !', '*FR1: wash your hands .', '*BRO: I am .', '*MOT: Chi !', "*CHI: I'm gonna go put this in the closet .", '*MOT: no no Chi Chi I want you to finish eatin(g) .', '*MOT: forget about that .', '*FR1: okay (.) stand up .', '*BRO: &=cries .', "*MOT: you're really strong .", "*FR1: don't complain .", '*MOT: xxx move it .', '*MOT: all done [!] let me see your hands .', '*BRO: &=cries .', '*MOT: nice and clean good boy .', "*MOT: oh (.) let's get a towel .", '*BRO: Mom &=crying .', '*CHI: woof (.) woof (.) woof .', '*MOT: oh .', '*CHI: xxx I take two bites .', '*MOT: then let me see you take two bites .', '*BRO: <Mom> [>] .', '*CHI: <I did> [<] .', '*MOT: I see one bite .', '*BRO: Mom xxx .', "*MOT: take one more bite and then you're all done and you don't have_to eat no more .", '*FR1: xxx .', "*MOT: yeah it's <the &-uh washing machine> [>] .", '*CHI: <Mom I did> [<] .', "*MOT: <(be)cause I washed and my mom had the car (.) and I'm done washing it> [>] .", '*CHI: <Mom Mom saw me take that other bite> [<] ?', '*MOT: and &-uh (.) huh ?', '*CHI: I take that <other bite> [>] .', '*MOT: <yes I seen> [<] you take the other bite good boy (.) you all done\xe2\x86\x91 put your bowl in the sink .', '*MOT: dump the pizza in the trash .', '*BRO: xxx .', '*MOT: put the bowl in the sink .', '*BRO: xxx ?', '*CHI: no .', '*BRO: xxx ?', '*CHI: xxx .', '*CHI: (.) xxx .', '*MOT: get in the bath+room wash your face and hands .', '*CHI: have a good day .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//deamt1.cha
HSLLD/HV1/MT//gremt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: now get in your chair and eat okay ?', '*CHI: xxx hey Mot xxx .', '*MOT: eat your sandwich .', '*CHI: keep the xxx out [!] &=grunting .', '*MOT: Chi stop singin(g) at the table and eat .', '*CHI: yeah &=giggling .', '*MOT: be a good boy and eat .', "*CHI: <I don't know> [>] .", '*MOT: <drink your milk> [<] [///] eat !', '*MOT: sit there and eat .', '*CHI: no !', '*CHI: (.) I want to sit there .', '*MOT: (..) eat .', '*CHI: 0 [=! high pitched noises] .', '*MOT: <Chi> [>] .', '*CHI: <&=growl > [<] .', "*MOT: if you don't eat then we're not gonna go to the beach .", '*CHI: hey please ?', '*MOT: then sit [!] and eat your sandwich .', '*CHI: <can we> [/] can we xxx go to the beach ?', '*MOT: yeah but we have_to get a (.) car first .', "*MOT: so why don't you just sit there and be a good boy ?", '*CHI: I know xxx .', '*MOT: okay good .', '*CHI: what is that stuff ?', "*MOT: you just gotta wait Chi and eat what's in front o(f) you and then I'll give you this .", '*CHI: oh xxx .', '*MOT: okay ?', '*CHI: yeah .', '*CHI: hey xxx [/] (.) xxx taking that big car ?', "*MOT: I don't know [!] yet Chi .", "*MOT: we <have_to get in touch> [>] with Daddy [!] and then we'll go see .", '*CHI: xxx [<] .', '*CHI: by [/] by the beach ?', '*MOT: yeah .', '*CHI: oh .', "*CHI: <they're getting wet> [>] +/.", '*MOT: <just eat> [<] !', "*MOT: don't eat wit(h) your mouth full just (.) eat .", '*CHI: get wet ?', '*MOT: Chi .', "*MOT: don't talk [!] with your mouth full eat !", '*MOT: (.) do what I asked .', '*CHI: (.) Mot !', '*MOT: Chi .', "*CHI: xxx I can't go out 0and play with Lydia ?", '*CHI: (..) are we gonna go to the beach ?', '*MOT: Chi .', '*CHI: (..) Marky will love [!] it .', '*CHI: Marky will love [!] it [>] !', '*MOT: yes [<] he will love it .', '*MOT: xxx I want you to eat !', "*MOT: if you don't eat we're not going anywhere .", '*CHI: please ?', '*MOT: just eat !', "*MOT: (..) <when you're done [>]> [/] (.) when you're done with that I('ve) got some more (.) sandwich .", '*CHI: <who is> [<] that ?', '*CHI: oh .', "*CHI: (..) I'm done <wit(h)> [/] wit(h) these .", "*MOT: no no no no no you're not done .", '*CHI: fine .', '*CHI: &=singing .', '*CHI: (..) Mot .', '*MOT: (..) Chi !', '*MOT: keep eating !', '*MOT: xxx the room .', "*CHI: Mom <don't put> [//] xxx beach ?", '*MOT: not yet !', '*CHI: oh .', "*MOT: we're obviously not gonna go unless we get our car (.) from [>] Daddy .", '*CHI: alright [<] .', '*MOT: so just eat !', '*CHI: hot !', '*CHI: (.) xxx Daddy ?', '*CHI: xxx .', "*MOT: (.) Chi the longer you keep talkin(g) (.) the longer you're gonna [: going to] sit there .", '*CHI: no &=laughs [>] .', '*MOT: <just eat> [<] .', '*CHI: I gonna go to the (.) beach !', '*MOT: you have_to finish eating your sandwich .', '*CHI: <Marky will love [!] it> [/] Marky will love it !', '*CHI: he will [/] will [/] (.) will <xxx it> [/] xxx it .', '*CHI: he will xxx .', "*CHI: and he'll xxx .", '*CHI: what do you think ?', '*CHI: 0 [=! screeching noises] .', '*CHI: (.) <no it was (.) two girls at [/] (.) at xxx [!]> [//] it was his name is +...', '*CHI: xxx it was xxx [>] +/.', "*MOT: <no [!] I don't> [<] know anything .", '*MOT: all I know is you better eat .', '*MOT: (.) be quiet and eat (.) now !', '*CHI: okay .', '*CHI: 0 [=! airplane noises] .', '*CHI: &=cries .', '*MOT: eat the sandwich .', '*MOT: right now .', "*MOT: and don't rock this chair because you're gonna break it .", "*MOT: come on you're gonna eat ."]
loading solution set
LINE NO ->  13
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  20
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  23
LINE NO ->  26
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  29
table
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94704f2d8>)
[('chi', 'NNS'), ('stop', 'VBP'), ('singin', 'NN'), ('g', 'NN'), ('at', 'IN'), ('the', 'DT'), ('table', 'NN'), ('and', 'CC'), ('eat', 'NN')]
['table']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  34
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  37
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  40
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  43
milk
milk milk 46
[('drink', 'VB'), ('your', 'PRP$'), ('milk', 'NN'), ('eat', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0})
LINE NO ->  46
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  50
LINE NO ->  54
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  61
LINE NO ->  62
LINE NO ->  65
LINE NO ->  66
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  72
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  77
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  81
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0})
LINE NO ->  85
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  91
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 1, 53: 1, 54: 1, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  97
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  100
LINE NO ->  103
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  107
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, -1: 1})
LINE NO ->  115
LINE NO ->  118
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  122
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  125
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  129
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 0, 73: 0, 74: 0, -1: 1})
LINE NO ->  137
LINE NO ->  138
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  142
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  145
LINE NO ->  148
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  151
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  159
LINE NO ->  163
LINE NO ->  166
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  171
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  174
LINE NO ->  177
LINE NO ->  180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  186
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  191
LINE NO ->  194
LINE NO ->  199
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  202
LINE NO ->  205
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  208
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  214
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  219
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  223
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0})
LINE NO ->  230
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  234
LINE NO ->  238
LINE NO ->  241
LINE NO ->  246
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  249
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  250
LINE NO ->  253
LINE NO ->  256
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  259
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  262
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0})
LINE NO ->  266
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  269
LINE NO ->  273
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 0, 57: 1, 58: 1, 59: 1, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0})
LINE NO ->  279
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  282
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  285
LINE NO ->  288
LINE NO ->  292
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  293
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 1, 67: 1, 68: 1, 69: 1, 70: 1, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 1, 82: 1, 83: 1, 84: 1, 85: 1, 86: 1, 87: 1, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0})
LINE NO ->  299
LINE NO ->  302
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  305
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  308
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  312
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, -1: 1})
LINE NO ->  315
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  318
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  321
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  324
LINE NO ->  329
LINE NO ->  330
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 1, 75: 1, 76: 1, 77: 1, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0})
LINE NO ->  333
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  336
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  339
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0})
LINE NO ->  343
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  347
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  351
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  353
LINE NO ->  354
LINE NO ->  357
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  361
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 1, 41: 1, 42: 1, 43: 1, 44: 1, 45: 1, 46: 0, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, -1: 1})
LINE NO ->  368
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
loading solution set
calculating
set([(78, (32, 40)), (24, (15, 23)), (44, (18, 22))])
[((24, (15, 23)), '*MOT:\teat your sandwich .\n'), ((44, (18, 22)), '*MOT:\t<drink your milk> [<] [///] eat !\n'), ((78, (32, 40)), '*MOT:\tthen sit [!] and eat your sandwich .\n')]
set([(322, (10, 15)), (316, (37, 40)), (14, (-1, 4)), (86, (32, 35)), (73, (10, 16)), (152, (-1, 4)), (143, (6, 10)), (344, (6, 9)), (130, (-1, 4)), (126, (-1, 4)), (206, (6, 9)), (293, (6, 9)), (322, (16, 19)), (82, (15, 18)), (220, (-1, 4)), (41, (15, 20)), (267, (-1, 4)), (155, (12, 15)), (331, (74, 78)), (260, (14, 18)), (149, (-1, 4)), (82, (11, 14)), (155, (28, 33)), (152, (12, 16)), (167, (37, 45)), (108, (-1, 4)), (55, (6, 9)), (322, (-1, 4)), (167, (6, 11)), (224, (17, 23)), (362, (26, 31)), (303, (17, 20)), (59, (11, 14)), (108, (21, 25)), (348, (6, 10)), (369, (27, 30)), (352, (12, 20)), (274, (57, 60)), (187, (34, 39)), (139, (9, 12)), (187, (-1, 4)), (14, (36, 40)), (21, (10, 13)), (369, (14, 20)), (319, (-1, 4)), (155, (6, 11)), (38, (16, 19)), (331, (6, 9)), (119, (-1, 4)), (362, (10, 15)), (78, (-1, 4)), (313, (-1, 4)), (133, (-1, 4)), (257, (11, 17)), (231, (-1, 4)), (92, (-1, 4)), (250, (-1, 4)), (67, (-1, 4)), (306, (-1, 4)), (247, (6, 10)), (38, (24, 27)), (362, (-1, 4)), (358, (-1, 4)), (126, (42, 45)), (181, (30, 34)), (331, (29, 34)), (294, (81, 88)), (47, (6, 9)), (108, (34, 37)), (172, (-1, 4)), (167, (-1, 4)), (67, (54, 59)), (283, (14, 17)), (133, (69, 72)), (86, (36, 39)), (73, (6, 9)), (263, (31, 36)), (108, (38, 44)), (14, (22, 27)), (41, (21, 24)), (98, (-1, 4)), (86, (6, 10)), (44, (24, 27)), (274, (53, 56)), (73, (-1, 4)), (27, (15, 18)), (215, (6, 12)), (172, (6, 9)), (303, (12, 16)), (303, (-1, 4)), (44, (34, 37)), (283, (-1, 4)), (220, (11, 14)), (344, (-1, 4)), (30, (10, 14)), (274, (6, 11)), (139, (-1, 4)), (200, (-1, 4)), (44, (18, 23)), (119, (6, 10)), (306, (28, 33)), (209, (-1, 4)), (30, (-1, 4)), (362, (47, 52)), (92, (52, 55)), (30, (42, 45)), (123, (6, 10)), (362, (40, 46)), (139, (20, 25)), (340, (31, 34)), (309, (-1, 4)), (152, (17, 20)), (92, (13, 18)), (108, (54, 58)), (30, (32, 37)), (167, (31, 36)), (126, (6, 9)), (337, (10, 13)), (334, (-1, 4)), (155, (-1, 4)), (82, (40, 45)), (35, (6, 10)), (14, (32, 35)), (133, (32, 35)), (280, (14, 17)), (362, (16, 20)), (104, (19, 24)), (167, (12, 16)), (362, (53, 58)), (47, (20, 23)), (181, (6, 9)), (260, (-1, 4)), (294, (66, 71)), (316, (-1, 4)), (369, (21, 26))])
[((14, (-1, 4)), '*MOT:\tnow get in your chair and eat okay ?\n'), ((14, (22, 27)), '*MOT:\tnow get in your chair and eat okay ?\n'), ((14, (32, 35)), '*MOT:\tnow get in your chair and eat okay ?\n'), ((14, (36, 40)), '*MOT:\tnow get in your chair and eat okay ?\n'), ((21, (10, 13)), '*CHI:\txxx hey Mot xxx .\n'), ((27, (15, 18)), '*CHI:\tkeep the xxx out [!] &=grunting .\n'), ((30, (-1, 4)), '*MOT:\tChi stop singin(g) at the table and eat .\n'), ((30, (10, 14)), '*MOT:\tChi stop singin(g) at the table and eat .\n'), ((30, (32, 37)), '*MOT:\tChi stop singin(g) at the table and eat .\n'), ((30, (42, 45)), '*MOT:\tChi stop singin(g) at the table and eat .\n'), ((35, (6, 10)), '*CHI:\tyeah &=giggling .\n'), ((38, (16, 19)), '*MOT:\tbe a good boy and eat .\n'), ((38, (24, 27)), '*MOT:\tbe a good boy and eat .\n'), ((41, (15, 20)), "*CHI:\t<I don't know> [>] .\n"), ((41, (21, 24)), "*CHI:\t<I don't know> [>] .\n"), ((44, (18, 23)), '*MOT:\t<drink your milk> [<] [///] eat !\n'), ((44, (24, 27)), '*MOT:\t<drink your milk> [<] [///] eat !\n'), ((44, (34, 37)), '*MOT:\t<drink your milk> [<] [///] eat !\n'), ((47, (6, 9)), '*MOT:\tsit there and eat .\n'), ((47, (20, 23)), '*MOT:\tsit there and eat .\n'), ((55, (6, 9)), '*CHI:\t(.) I want to sit there .\n'), ((59, (11, 14)), '*MOT:\t(..) eat .\n'), ((67, (-1, 4)), "*MOT:\tif you don't eat then we're not gonna go to the beach .\n"), ((67, (54, 59)), "*MOT:\tif you don't eat then we're not gonna go to the beach .\n"), ((73, (-1, 4)), '*CHI:\they please ?\n'), ((73, (6, 9)), '*CHI:\they please ?\n'), ((73, (10, 16)), '*CHI:\they please ?\n'), ((78, (-1, 4)), '*MOT:\tthen sit [!] and eat your sandwich .\n'), ((82, (11, 14)), '*CHI:\t<can we> [/] can we xxx go to the beach ?\n'), ((82, (15, 18)), '*CHI:\t<can we> [/] can we xxx go to the beach ?\n'), ((82, (40, 45)), '*CHI:\t<can we> [/] can we xxx go to the beach ?\n'), ((86, (6, 10)), '*MOT:\tyeah but we have_to get a (.) car first .\n'), ((86, (32, 35)), '*MOT:\tyeah but we have_to get a (.) car first .\n'), ((86, (36, 39)), '*MOT:\tyeah but we have_to get a (.) car first .\n'), ((92, (-1, 4)), "*MOT:\tso why don't you just sit there and be a good boy ?\n"), ((92, (13, 18)), "*MOT:\tso why don't you just sit there and be a good boy ?\n"), ((92, (52, 55)), "*MOT:\tso why don't you just sit there and be a good boy ?\n"), ((98, (-1, 4)), '*CHI:\tI know xxx .\n'), ((104, (19, 24)), '*CHI:\twhat is that stuff ?\n'), ((108, (-1, 4)), "*MOT:\tyou just gotta wait Chi and eat what's in front o(f) you and then I'll give you this .\n"), ((108, (21, 25)), "*MOT:\tyou just gotta wait Chi and eat what's in front o(f) you and then I'll give you this .\n"), ((108, (34, 37)), "*MOT:\tyou just gotta wait Chi and eat what's in front o(f) you and then I'll give you this .\n"), ((108, (38, 44)), "*MOT:\tyou just gotta wait Chi and eat what's in front o(f) you and then I'll give you this .\n"), ((108, (54, 58)), "*MOT:\tyou just gotta wait Chi and eat what's in front o(f) you and then I'll give you this .\n"), ((119, (-1, 4)), '*MOT:\tokay ?\n'), ((119, (6, 10)), '*MOT:\tokay ?\n'), ((123, (6, 10)), '*CHI:\tyeah .\n'), ((126, (-1, 4)), '*CHI:\they xxx [/] (.) xxx taking that big car ?\n'), ((126, (6, 9)), '*CHI:\they xxx [/] (.) xxx taking that big car ?\n'), ((126, (42, 45)), '*CHI:\they xxx [/] (.) xxx taking that big car ?\n'), ((130, (-1, 4)), "*MOT:\tI don't know [!] yet Chi .\n"), ((133, (-1, 4)), "*MOT:\twe <have_to get in touch> [>] with Daddy [!] and then we'll go see .\n"), ((133, (32, 35)), "*MOT:\twe <have_to get in touch> [>] with Daddy [!] and then we'll go see .\n"), ((133, (69, 72)), "*MOT:\twe <have_to get in touch> [>] with Daddy [!] and then we'll go see .\n"), ((139, (-1, 4)), '*CHI:\tby [/] by the beach ?\n'), ((139, (9, 12)), '*CHI:\tby [/] by the beach ?\n'), ((139, (20, 25)), '*CHI:\tby [/] by the beach ?\n'), ((143, (6, 10)), '*MOT:\tyeah .\n'), ((149, (-1, 4)), "*CHI:\t<they're getting wet> [>] +/.\n"), ((152, (-1, 4)), '*MOT:\t<just eat> [<] !\n'), ((152, (12, 16)), '*MOT:\t<just eat> [<] !\n'), ((152, (17, 20)), '*MOT:\t<just eat> [<] !\n'), ((155, (-1, 4)), "*MOT:\tdon't eat wit(h) your mouth full just (.) eat .\n"), ((155, (6, 11)), "*MOT:\tdon't eat wit(h) your mouth full just (.) eat .\n"), ((155, (12, 15)), "*MOT:\tdon't eat wit(h) your mouth full just (.) eat .\n"), ((155, (28, 33)), "*MOT:\tdon't eat wit(h) your mouth full just (.) eat .\n"), ((167, (-1, 4)), "*MOT:\tdon't talk [!] with your mouth full eat !\n"), ((167, (6, 11)), "*MOT:\tdon't talk [!] with your mouth full eat !\n"), ((167, (12, 16)), "*MOT:\tdon't talk [!] with your mouth full eat !\n"), ((167, (31, 36)), "*MOT:\tdon't talk [!] with your mouth full eat !\n"), ((167, (37, 45)), "*MOT:\tdon't talk [!] with your mouth full eat !\n"), ((172, (-1, 4)), '*MOT:\t(.) do what I asked .\n'), ((172, (6, 9)), '*MOT:\t(.) do what I asked .\n'), ((181, (6, 9)), "*CHI:\txxx I can't go out 0and play with Lydia ?\n"), ((181, (30, 34)), "*CHI:\txxx I can't go out 0and play with Lydia ?\n"), ((187, (-1, 4)), '*CHI:\t(..) are we gonna go to the beach ?\n'), ((187, (34, 39)), '*CHI:\t(..) are we gonna go to the beach ?\n'), ((200, (-1, 4)), '*CHI:\tMarky will love [!] it [>] !\n'), ((206, (6, 9)), '*MOT:\txxx I want you to eat !\n'), ((209, (-1, 4)), "*MOT:\tif you don't eat we're not going anywhere .\n"), ((215, (6, 12)), '*CHI:\tplease ?\n'), ((220, (-1, 4)), '*MOT:\tjust eat !\n'), ((220, (11, 14)), '*MOT:\tjust eat !\n'), ((224, (17, 23)), "*MOT:\t(..) <when you're done [>]> [/] (.) when you're done with that I('ve) got some more (.) sandwich .\n"), ((231, (-1, 4)), '*CHI:\t<who is> [<] that ?\n'), ((247, (6, 10)), '*CHI:\tfine .\n'), ((250, (-1, 4)), '*CHI:\t&=singing .\n'), ((257, (11, 17)), '*MOT:\tkeep eating !\n'), ((260, (-1, 4)), '*MOT:\txxx the room .\n'), ((260, (14, 18)), '*MOT:\txxx the room .\n'), ((263, (31, 36)), "*CHI:\tMom <don't put> [//] xxx beach ?\n"), ((267, (-1, 4)), '*MOT:\tnot yet !\n'), ((274, (6, 11)), "*MOT:\twe're obviously not gonna go unless we get our car (.) from [>] Daddy .\n"), ((274, (53, 56)), "*MOT:\twe're obviously not gonna go unless we get our car (.) from [>] Daddy .\n"), ((274, (57, 60)), "*MOT:\twe're obviously not gonna go unless we get our car (.) from [>] Daddy .\n"), ((280, (14, 17)), '*CHI:\talright [<] .\n'), ((283, (-1, 4)), '*MOT:\tso just eat !\n'), ((283, (14, 17)), '*MOT:\tso just eat !\n'), ((293, (6, 9)), '*CHI:\txxx .\n'), ((294, (66, 71)), "*MOT:\t(.) Chi the longer you keep talkin(g) (.) the longer you're gonna [: going to] sit there .\n"), ((294, (81, 88)), "*MOT:\t(.) Chi the longer you keep talkin(g) (.) the longer you're gonna [: going to] sit there .\n"), ((303, (-1, 4)), '*MOT:\t<just eat> [<] .\n'), ((303, (12, 16)), '*MOT:\t<just eat> [<] .\n'), ((303, (17, 20)), '*MOT:\t<just eat> [<] .\n'), ((306, (-1, 4)), '*CHI:\tI gonna go to the (.) beach !\n'), ((306, (28, 33)), '*CHI:\tI gonna go to the (.) beach !\n'), ((309, (-1, 4)), '*MOT:\tyou have_to finish eating your sandwich .\n'), ((313, (-1, 4)), '*CHI:\t<Marky will love [!] it> [/] Marky will love it !\n'), ((316, (-1, 4)), '*CHI:\the will [/] will [/] (.) will <xxx it> [/] xxx it .\n'), ((316, (37, 40)), '*CHI:\the will [/] will [/] (.) will <xxx it> [/] xxx it .\n'), ((319, (-1, 4)), '*CHI:\the will xxx .\n'), ((322, (-1, 4)), "*CHI:\tand he'll xxx .\n"), ((322, (10, 15)), "*CHI:\tand he'll xxx .\n"), ((322, (16, 19)), "*CHI:\tand he'll xxx .\n"), ((331, (6, 9)), '*CHI:\t(.) <no it was (.) two girls at [/] (.) at xxx [!]> [//] it was his name is +...\n'), ((331, (29, 34)), '*CHI:\t(.) <no it was (.) two girls at [/] (.) at xxx [!]> [//] it was his name is +...\n'), ((331, (74, 78)), '*CHI:\t(.) <no it was (.) two girls at [/] (.) at xxx [!]> [//] it was his name is +...\n'), ((334, (-1, 4)), '*CHI:\txxx it was xxx [>] +/.\n'), ((337, (10, 13)), "*MOT:\t<no [!] I don't> [<] know anything .\n"), ((340, (31, 34)), '*MOT:\tall I know is you better eat .\n'), ((344, (-1, 4)), '*MOT:\t(.) be quiet and eat (.) now !\n'), ((344, (6, 9)), '*MOT:\t(.) be quiet and eat (.) now !\n'), ((348, (6, 10)), '*CHI:\tokay .\n'), ((352, (12, 20)), '*CHI:\t0 [=! airplane noises] .\n'), ((358, (-1, 4)), '*MOT:\tright now .\n'), ((362, (-1, 4)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((362, (10, 15)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((362, (16, 20)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((362, (26, 31)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((362, (40, 46)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((362, (47, 52)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((362, (53, 58)), "*MOT:\tand don't rock this chair because you're gonna break it .\n"), ((369, (14, 20)), "*MOT:\tcome on you're gonna eat .\n"), ((369, (21, 26)), "*MOT:\tcome on you're gonna eat .\n"), ((369, (27, 30)), "*MOT:\tcome on you're gonna eat .\n")]
calculating accuracy and recall
correct labels:
set(['sandwich', 'milk'])
predicted labels:
set(['', "don't", 'know>', 'girls', 'yeah', '[!]', 'see', 'to] sit', 'table', 'chair', 'fine', 'airplane', 'eat>', "you're", '[/]', 'sit', '(.)', 'please', 'hey', "he'll", 'milk>', 'eating', "we're", 'o(f)', 'beach', 'play', 'okay', 'name', "what's", 'xxx', 'stop', 'gonna', 'break', 'full eat', '[>]', 'mouth', '[<]', 'eat', 'wait', 'boy', 'room', 'car', 'stuff', 'rock', 'we>', 'talk'])
OH NO
file:HSLLD/HV1/MT//gremt1.cha
precision: 0.0
recall: 0.0
true positives:[]
false positives: ['', '(.)', '[!]', '[/]', '[<]', '[>]', 'airplane', 'beach', 'boy', 'break', 'car', 'chair', "don't", 'eat', 'eat>', 'eating', 'fine', 'full eat', 'girls', 'gonna', "he'll", 'hey', 'know>', 'milk>', 'mouth', 'name', 'o(f)', 'okay', 'play', 'please', 'rock', 'room', 'see', 'sit', 'stop', 'stuff', 'table', 'talk', 'to] sit', 'wait', "we're", 'we>', "what's", 'xxx', 'yeah', "you're"]
false negatives: ['milk', 'sandwich']
# true pos: 0
# false pos: 46
# false neg: 2
HSLLD/HV1/MT//diamt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: okay girls it's time for supper let's go !", '*MOT: Wubby [?] what are we eating ?', '*CHI: xxx cucumbers .', '*MOT: cucumbers and what else (.) ?', '*CHI: &-um cucumbers .', '*MOT: what else are you eating ?', '*SIB: Mom +...', '*CHI: xxx ?', '*MOT: what (.) ?', '*CHI: xxx .', '*MOT: yeah meat ?', '*CHI: yes .', '*MOT: and what else are you eating ?', '*FAT: xxx xxx get some mustard come on .', '*MOT: where did you go the other night Chi ?', '*CHI: to the fireworks .', '*MOT: zzz .', '*MOT: and what did we see there (.) ?', '*CHI: colors [?] .', '*MOT: all colors ?', '*MOT: and what else ?', '*CHI: xxx [>] .', '*SIB: xxx [<] .', '*CHI: xxx .', '*MOT: and what did we go on ?', '*MOT: or you go on (.) ?', '*CHI: xxx .', '*AUN: and what else ?', '*CHI: and in and out of the helicopters .', '*MOT: the helicopters .', '*AUN: what else ?', '*CHI: and the horses .', '*AUN: yeah .', '*AUN: and what else ?', '*CHI: and the &-um +...', '*CHI: and the &-um (.) the &-um (.) cars .', '*MOT: the cars .', '*MOT: what about the motorcycles ?', "*CHI: they're not motorcycles they're bikes !", '*MOT: oh bikes .', '*MOT: excuse me .', '*AUN: and what did Auntie buy you ?', '*CHI: xxx .', '*AUN: a what ?', '*CHI: xxx .', "*AUN: <I can't hear you> [>] .", "*MOT: <we can't hear you> [<] .", '*MOT: talk over here .', '*MOT: what did Auntie buy you ?', '*CHI: a balloon (.) .', '*CHI: a balloon .', '*AUN: yeah ?', '*CHI: xxx [>] .', '*MOT: <and what did you > [<] &ha have_to eat ?', '*CHI: the corn [?] .', '*AUN: what else (.) ?', "*AUN: what's your favorite ?", '*CHI: mm mm +...', '*CHI: macaroni [!] .', "*AUN: yes what's your favorite ?", '*CHI: &-um nothing .', '*MOT: no Chi talk over here .', '*CHI: nothing .', '*AUN: yes Bridget .', '*SIB: pizza ?', '*SIB: what did you have ?', "*AUN: I can't hear you .", '*CHI: pizza .', '*MOT: you go in the pool today ?', '*MOT: what pool did you go in ?', '*CHI: a different pool than that pool .', '*MOT: you went in the big pool ?', '*AUN: whose pool is that ?', "*CHI: me [?] Daddy's and Jack [?] and Mom's .", "*CHI: and David's [?] .", '*MOT: and do you know how to swim ?', '*CHI: no [?] .', '*MOT: huh ?', '*CHI: but Sandy do .', '*AUN: but Sandy does ?', '*CHI: yeah .', '*AUN: what do you wear on your arms ?', "*CHI: I don't know .", "*AUN: I can't hear you .", '*CHI: xxx .', '*MOT: water wings (.) ?', '*MOT: what did you do out in the yard today (.) ?', '*CHI: nothing (.) .', "*CHI: I didn't do nothing .", '*MOT: did you play ?', '*CHI: no [?] .', '*MOT: huh ?', '*CHI: yeah [?] .', "*CHI: I played in Daddy's pool !", "*MOT: you played in Daddy's big pool ?", '*CHI: I played in the pool huh Daddy ?', '*FAT: mhm .', '*CHI: I played in the pool huh Daddy ?', '*MOT: and what [//] what did you play ?', '*CHI: &-uh xxx .', '*MOT: what ?', '*CHI: alley [?] .', '*MOT: Olly ?', '*CHI: uhhuh .', "*MOT: what's Olly ?", '*CHI: xxx .', "*MOT: I can't hear you .", "*CHI: it's an alligator .", "*MOT: oh it's an alligator .", '*CHI: yeah (.) .', '*MOT: and what else did you play ?', '*CHI: xxx .', '*CHI: xxx !', '*AUN: what (.) ?', '*AUN: what ?', '*AUN: what is it ?', "*CHI: it's a nanny@n .", "*CHI: it [/] it [//] it's a bunny .", '*MOT: a bunny ?', "*AUN: a bunny's out there ?", '*CHI: yeah .', '*AUN: are you going to go in the pool after supper with me ?', '*CHI: the pool ?', "*CHI: didn't you come for supper xxx ?", "*AUN: no I didn't come for supper .", '*CHI: oh .', '*FAT: did you do those [?] things last night ?', '*MOT: I started (th)em .', '*AUN: xxx .', '*CHI: xxx .', '*CHI: where [//] where Mommy gonna go ?', '*AUN: out (.) side .', "*AUN: she's making [?] the dishes .", '*CHI: why ?', "*MOT: Daddy's gonna take you in the pool while Mama does the dishes .", "*CHI: aren't you gonna go in the pool ?", '*AUN: maybe .', '*CHI: <and you> [//] and you dunk !', '*AUN: xxx dunk [?] .', '*CHI: yeah .', '*AUN: will you dunk with me ?', '*CHI: yeah .', '*CHI: I dunk with you .', '*CHI: are you gonna swim ?', "*CHI: and [/] and [//] and you can't catch me .", '*AUN: no ?', '*CHI: no .', "*CHI: I'm gonna swim xxx xxx can't catch me <Daddy c(ann't)> [//] Daddy can't catch me any way .", "*AUN: he can't catch you ?", '*CHI: no !', "*CHI: <he can't> [//] (.) he can't do [!] that (.) .", '*AUN: fast enough .', '*CHI: yeah !', '*AUN: say it .', '*CHI: he said faster [!] faster !', '*AUN: yeah .', "*CHI: and [/] and I'm telling him if there more xxx !", '*AUN: no .', "*MOT: did [/] did Daddy make believe he was the shark <in the> [//] in the beg(inning) [///] don't touch that !", '*CHI: why ?', "*MOT: don't touch it !", '*CHI: why ?', '*MOT: because I have_to have that on (.) .', "*MOT: <no don't> [>] touch it !", '*CHI: <I [/] I> [<] +...', '*CHI: I want to see it .', '*MOT: you can see it .', "*CHI: no I can't !", "*MOT: Chi you can't touch this .", '*CHI: I xxx .', '*AUN: listen !', '*AUN: listen !', '*AUN: relax [?] and then after [!] Mama will play it for you after okay ?', '*AUN: and you can hear you [!] on it .', "*CHI: no I can't hear me on it .", '*AUN: yes it is you wait and see .', '*AUN: well (.) are you gonna go in the pool with Daddy and me after ?', '*CHI: well [/] well [/] well xxx I xxx .', '*CHI: xxx me and Daddy in (.) with Daddy (.) go [//] gonna go in the pool .', '*AUN: okay .', '*AUN: &-um (.) what did you have for lunch today ?', '*CHI: nothing xxx .', '*AUN: nothing ?', '*CHI: no !', "*AUN: Mommy didn't feed you ?", '*CHI: xxx .', '*CHI: <I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .', "*MOT: no you didn't have a bowl of soup you had what ?", '*MOT: tuna ?', '*AUN: huh !', '*AUN: you had your favorite !', '*MOT: xxx .', '*MOT: what did you have for lunch today ?', '*CHI: &-um (.) tuna+fish .', '*MOT: and what else ?', '*AUN: did you have it in the bread ?', '*CHI: yeah .', '*CHI: xxx .', '*AUN: milk [?] ?', '*CHI: no [?] .', '*MOT: how did you have it ?', '*CHI: on the plate .', '*MOT: on the plate ?', '*CHI: yeah .', '*FAT: honey [?] ?', '*MOT: oh .', '*MOT: and what else did I give you ?', "*FAT: <please don't> [>] give it to Star .", '*MOT: <what did you have for dessert> [<] ?', '*CHI: xxx [>] .', '*SIB: xxx [<] .', '*SIB: I xxx play with it .', '*AUN: say what ?', '*CHI: ice cone .', '*MOT: ice cream cone .', '*CHI: ice cream cone !', '*AUN: I bet that was good .', '*CHI: mm .', '*CHI: was good !', '*AUN: you know what Chi likes Dad ?', '*FAT: what ?', '*AUN: corn on the cob .', '*FAT: oh ho ho .', '*CHI: yeah .', "*MOT: pretty soon the farm will have it (.) and we'll go up and get it .", '*CHI: why ?', "*MOT: (be)cause that's where it tastes the best .", '*CHI: hunhunh xxx .', '*MOT: no the farm is where they grow the corn .', '*CHI: why ?', '*MOT: because they put it [//] the seeds in the ground and the corn comes up (.) .', '*CHI: but how seeds come up ?', '*MOT: zzz .', '*CHI: how seeds come up ?', '*CHI: xxx xxx xxx and I and xxx xxx xxx and xxx !', '*AUN: oh wow !', '*MOT: tell Auntie what you did today with Daddy in the pool .', '*CHI: know what I did ?', '*AUN: what ?', '*AUN: what did you do ?', '*MOT: what did you do ?', '*MOT: what [//] what did [///] Daddy was standing in the pool and you were standing on the deck (.) and what did you do (.) ?', '*CHI: xxx .', '*SIB: xxx [<] .', "*MOT: we can't hear <you whis(per)> [//] if you whisper .", '*MOT: say it out loud .', '*CHI: is [/] is [/] is Daddy xxx .', '*CHI: if [/] if [/] if I slipped [?] .', '*MOT: what ?', '*MOT: did Daddy catch you ?', '*CHI: yeah yeah yeah yeah .', "*CHI: and [/] and [//] and I didn't dunk !", "*MOT: you didn't dunk .", '*MOT: good girl !', "*CHI: <I> [/] I didn't slip .", '*MOT: are you afraid to dunk ?', '*CHI: no .', '*MOT: why ?', "*CHI: because I'm a big girl .", "*MOT: oh you're a big girl .", '*AUN: oh .', '*CHI: xxx .', '*CHI: more meat .', "*MOT: you eat some of that and I'll give you more meat Donna [?] .", '*CHI: some more chicken .', '*CHI: chicken .', "*MOT: that's not chicken it's steak .", '*CHI: xxx xxx xxx .', '*MOT: yeah .', '*MOT: so what are you going to do tonight when you go in the pool with Daddy (.) ?', '*CHI: <I> [/] I gonna (.) dunk .', "*MOT: you're gonna dunk ?", "*CHI: no I'm not .", '*AUN: are you gonna dunk Daddy ?', "*CHI: I can't .", "*CHI: I can't .", '*AUN: why ?', "*CHI: <be(cause)> [/] <be(cause)> [//] because Daddy will slip and then I'll dunk .", '*AUN: zzz .', '*MOT: oh .', "*MOT: Daddy will slip and you'll dunk .", '*CHI: yeah .', '*MOT: oh .', '*CHI: Mommy xxx me up .', '*CHI: Mommy !', '*MOT: Star (.) get out [!] of here .', '*AUN: come here (.) .', '*AUN: come here .', '*SIB: Star .', '*SIB: Star (.) !', '*MOT: did you like the fireworks when we saw them ?', '*CHI: yeah .', '*AUN: wan(t) (t)a go back next year ?', '*CHI: no I want to go tomorrow .', '*MOT: tomorrow ?', '*CHI: yeah !', '*MOT: well we got a long time to wait for fireworks [!] again .', '*MOT: did you like them ?', '*CHI: yeah but I was afraid .', "*MOT: no you weren't afraid .", '*CHI: yeah .', '*MOT: what did they do when they went up in the sky ?', '*CHI: made a boom .', '*MOT: did they (.) ?', '*MOT: and what colors was [//] were there ?', '*CHI: blue and red .', '*MOT: blue and red and what else ?', '*CHI: green [?] and white (.) .', '*CHI: xxx !', '*AUN: what was the other colors (.) ?', '*AUN: green .', '*CHI: green .', '*CHI: and yellow green .', '*AUN: yeah .', '*AUN: purple ?', '*CHI: no .', '*AUN: no there was no purple ?', '*CHI: no purple .', '*MOT: was there any yellow ?', '*CHI: &-um yeah .', '*CHI: &-um (.) uhhuh .', '*CHI: there was yellow .', '*CHI: xxx .', '*CHI: there was orange .', '*MOT: oh there was orange ?', '*CHI: yeah !', "*MOT: oh I didn't see the orange .", '*CHI: yes you did .', '*MOT: oh I did ?', '*CHI: yeah .', '*CHI: all the pretty colors .', '*MOT: all the pretty colors ?', '*CHI: yeah all [/] all the pretty colors xxx pretty [?] colors !', '*CHI: colors !', '*CHI: all around (.) xxx .', "*MOT: you're silly .", '*CHI: zzz (.) .', '*MOT: if you eat all that up (.) what would you like for dessert ?', '*CHI: &-um (.) ice cream cone .', '*MOT: ice cream cone ?', '*CHI: yeah .', '*CHI: yeah .', '*MOT: alright .', "*CHI: but I don't want any ice cream cone now .", '*CHI: but I want an ice cream cone .', "*MOT: don't talk with your mouth full .", '*CHI: Mommy I want an ice cream cone tomorrow .', '*MOT: tomorrow ?', '*MOT: alright (.) .', '*MOT: did you have enough to eat ?', '*CHI: yes .', '*MOT: you [/] you want some more cucumbers ?', '*CHI: &-um (.) mhm (.) yeah .', '*MOT: what are these ?', '*CHI: cucumbers (.) .', '*CHI: I think I can get (th)em by myself now .', '*MOT: alright .', '*MOT: you can take (th)em by yourself .', '*CHI: xxx .', '*FAT: use your fork .', '*MOT: are you hungry again ?', '*CHI: hunhunh .', '*SIB: cucumbers Chi .', '*MOT: xxx Chi ?', '*CHI: cucumbers .', '*MOT: cucumbers ?', '*CHI: yeah .', '*MOT: how many is there ?', '*CHI: one two three .', '*MOT: I see more than three .', '*CHI: well one more than three .', '*MOT: little bites [>] .', '*FAT: zzz [<] .', "*MOT: you're gonna choke (.) .", '*MOT: Chi !', "*MOT: that's enough .", '*CHI: no I want all of it .', "*MOT: no you can't have all of it cause there's others here .", '*MOT: you have plenty [!] .', "*CHI: no I don't (.) .", '*MOT: take little bites please (.) .', '*MOT: would you like a glass of milk now ?', '*CHI: no .', '*MOT: how about a glass of &-uh (.) juice ?', '*CHI: I want a popsicle .', '*MOT: a popsicle ?', '*FAT: you got_to be stupid [!] to be treating (th)em .', "*FAT: you don't cut [!] things up .", '*MOT: are you all finished ?', '*CHI: yeah .', '*FAT: xxx .', '*CHI: xxx .', "*MOT: what's that Chi ?", '*CHI: what ?', '*MOT: what is it ?', '*CHI: truck .', '*MOT: a truck ?', '*CHI: yeah (.) .', '*SIB: zzz [>] .', '*MOT: <Chi (.) come here> [<] .', '*CHI: it [/] it found my belly .', '*SIB: zzz [>] .', "*MOT: <but you've got ta take little bites> [<] .", '*SIB: zzz .', '*MOT: Donna !', '*SIB: zzz .', '*MOT: Donna .', '*FAT: xxx .', '*SIB: zzz .', '*SIB: zzz [>] .', '*MOT: <alright now> [<] you all finished ?', '*CHI: yeah .', '*MOT: okay .', '*CHI: yeah .']
loading solution set
LINE NO ->  17
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0})
LINE NO ->  24
LINE NO ->  28
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  31
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  35
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  38
LINE NO ->  42
LINE NO ->  46
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  48
LINE NO ->  52
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  54
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fc97e8>)
[('yeah', 'RB'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  58
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  61
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  66
mustard
mustard mustard 60
[('xxx', 'NN'), ('xxx', 'NNP'), ('get', 'VB'), ('some', 'DT'), ('mustard', 'NN'), ('come', 'VBN'), ('on', 'IN')]
['mustard']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0})
LINE NO ->  70
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  76
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  79
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  83
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  87
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, -1: 1})
LINE NO ->  90
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0})
LINE NO ->  94
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  98
LINE NO ->  99
LINE NO ->  100
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  101
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  104
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  108
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  109
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  112
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, -1: 1})
LINE NO ->  117
LINE NO ->  120
LINE NO ->  123
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  126
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  129
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  132
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  136
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  140
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  143
LINE NO ->  147
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, -1: 1})
LINE NO ->  151
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  154
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  158
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  163
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  164
LINE NO ->  167
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  169
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  172
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  175
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  178
LINE NO ->  182
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  185
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  188
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  192
LINE NO ->  193
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  198
corn
corn corn 419
[('the', 'DT'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  201
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  204
LINE NO ->  207
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  211
macaroni
macaroni macaroni 128
[('macaroni', 'NN')]
['macaroni']
('food -> ', [['macaroni', 'Cereal Grains and Pasta']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  214
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0})
LINE NO ->  218
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  221
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  224
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  227
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  231
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  234
LINE NO ->  237
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  240
pizza
pizza pizza 274
[('pizza', 'NN')]
['pizza']
('food -> ', [['pizza', 'Fast Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  245
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  249
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  253
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0})
LINE NO ->  256
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  260
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  263
LINE NO ->  268
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  271
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  275
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  278
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  282
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  285
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  288
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  291
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  295
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  298
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  301
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  303
water
water water 18
[('water', 'NN'), ('wings', 'NNS')]
['water']
('food -> ', [['water', 'Beverages']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  309
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  315
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  318
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  321
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  325
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  328
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  332
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  335
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  338
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  343
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  348
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  351
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  356
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  360
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  361
LINE NO ->  365
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  368
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  372
LINE NO ->  375
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  379
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  381
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  384
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  387
LINE NO ->  390
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  393
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  397
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  399
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  400
LINE NO ->  403
LINE NO ->  406
LINE NO ->  409
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  412
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  415
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  419
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  422
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  426
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, -1: 1})
LINE NO ->  431
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  434
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  437
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  440
LINE NO ->  443
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 1, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  447
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  450
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  451
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  454
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  457
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  460
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 0})
LINE NO ->  463
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  466
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0})
LINE NO ->  473
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  478
LINE NO ->  481
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0})
LINE NO ->  484
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0})
LINE NO ->  487
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  490
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  493
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  496
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  499
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  502
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  505
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, -1: 1})
LINE NO ->  508
LINE NO ->  511
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 1, 92: 1, 93: 1, 94: 0, 95: 0, 96: 0})
LINE NO ->  518
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  521
LINE NO ->  524
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0})
LINE NO ->  527
LINE NO ->  530
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  533
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  536
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, -1: 1})
LINE NO ->  539
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  542
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0, -1: 1})
LINE NO ->  547
LINE NO ->  551
shark
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453e2a28>)
[('did', 'VBD'), ('did', 'VBD'), ('daddy', 'VB'), ('make', 'VB'), ('believe', 'NN'), ('he', 'PRP'), ('was', 'VBD'), ('the', 'DT'), ('shark', 'NN'), ('in', 'IN'), ('the', 'DT'), ('in', 'IN'), ('the', 'DT'), ('beg', 'NN'), ('inning', 'VBG'), ('don', 'JJ'), ('t', 'NN'), ('touch', 'NN'), ('that', 'IN')]
['shark']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 1, 59: 1, 60: 1, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 1, 94: 1, 95: 1, 96: 1, 97: 1, 98: 0, 99: 1, 100: 1, 101: 1, 102: 1, 103: 1, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, -1: 1})
LINE NO ->  558
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  562
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, -1: 1})
LINE NO ->  566
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  571
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  575
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0})
LINE NO ->  578
LINE NO ->  581
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  585
LINE NO ->  588
LINE NO ->  592
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  595
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  600
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  603
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  606
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0})
LINE NO ->  611
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  615
LINE NO ->  620
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  624
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 1, 40: 1, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0})
LINE NO ->  630
LINE NO ->  633
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 1, 54: 1, 55: 1, 56: 1, 57: 1, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 1, 70: 1, 71: 1, 72: 1, 73: 0, 74: 0, 75: 0, -1: 1})
LINE NO ->  638
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  641
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 1, 44: 1, 45: 1, 46: 1, 47: 1, 48: 0, 49: 0, 50: 0})
LINE NO ->  645
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  648
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  651
LINE NO ->  654
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  657
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  658
soup
soup soup 72
[('i', 'JJ'), ('think', 'VBP'), ('i', 'IN'), ('i', 'NN'), ('i', 'VBP'), ('had', 'VBD'), ('i', 'NN'), ('i', 'NN'), ('had', 'VBD'), ('a', 'DT'), ('bowl', 'NN'), ('of', 'IN'), ('soup', 'NN')]
['soup']
('food -> ', [['soup', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 1, 46: 1, 47: 1, 48: 1, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 1, 73: 1, 74: 1, 75: 1, 76: 0, 77: 0, 78: 0, 79: 0, 80: 1, 81: 1, 82: 1, 83: 1, 84: 0, 85: 0, 86: 0})
LINE NO ->  661
soup
soup soup 72
[('no', 'DT'), ('you', 'PRP'), ('didn', 'VBP'), ('t', 'NNS'), ('have', 'VBP'), ('a', 'DT'), ('bowl', 'NN'), ('of', 'IN'), ('soup', 'NN'), ('you', 'PRP'), ('had', 'VBD'), ('what', 'WP')]
['soup']
('food -> ', [['soup', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0})
LINE NO ->  667
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, -1: 1})
LINE NO ->  671
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  675
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  678
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  679
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 0, 40: 0, 41: 0})
LINE NO ->  684
tuna fish
tuna fish tuna fish 130
[('um', 'JJ'), ('tuna', 'NN'), ('fish', 'NN')]
['tuna', 'fish']
('food -> ', [['tuna fish', 'Finfish and Shellfish Products']])
fish
fish fish 305
[('um', 'JJ'), ('tuna', 'NN'), ('fish', 'NN')]
['fish']
('food -> ', [['tuna fish', 'Finfish and Shellfish Products'], ['fish', 'Finfish and Shellfish Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0})
LINE NO ->  687
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  691
bread
bread bread 186
[('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('it', 'PRP'), ('in', 'IN'), ('the', 'DT'), ('bread', 'NN')]
['bread']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  695
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  698
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  699
milk
milk milk 46
[('milk', 'NN')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  702
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  705
LINE NO ->  709
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  712
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  716
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  719
honey
honey honey 304
[('honey', 'NN')]
['honey']
('food -> ', [['honey', 'Sweets']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  722
LINE NO ->  725
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  730
LINE NO ->  733
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9472414d0>)
[('what', 'WP'), ('did', 'VBD'), ('you', 'PRP'), ('have', 'VBP'), ('for', 'IN'), ('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  737
LINE NO ->  738
LINE NO ->  739
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, -1: 1})
LINE NO ->  742
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  745
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  748
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  752
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  755
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  758
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0})
LINE NO ->  761
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  764
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  767
LINE NO ->  770
corn
corn corn 419
[('corn', 'NN'), ('on', 'IN'), ('the', 'DT'), ('cob', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0})
LINE NO ->  773
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  776
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  780
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0})
LINE NO ->  787
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  791
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  796
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  801
corn
corn corn 419
[('no', 'DT'), ('the', 'DT'), ('farm', 'NN'), ('is', 'VBZ'), ('where', 'WRB'), ('they', 'PRP'), ('grow', 'VBP'), ('the', 'DT'), ('corn', 'NN')]
['corn']
('food -> ', [['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 1, 42: 1, 43: 1, 44: 1, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  806
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  810
ground
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fc9320>)
[('because', 'IN'), ('they', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('the', 'DT'), ('seeds', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ground', 'NN'), ('and', 'CC'), ('the', 'DT'), ('corn', 'NN'), ('comes', 'VBZ'), ('up', 'RP')]
['ground']
('food -> ', [])
seeds
seeds seeds 592
[('because', 'IN'), ('they', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('the', 'DT'), ('seeds', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ground', 'NN'), ('and', 'CC'), ('the', 'DT'), ('corn', 'NN'), ('comes', 'VBZ'), ('up', 'RP')]
['seeds']
('food -> ', [['seeds', 'Nut and Seed Products']])
corn
corn corn 419
[('because', 'IN'), ('they', 'PRP'), ('put', 'VBD'), ('it', 'PRP'), ('the', 'DT'), ('seeds', 'NNS'), ('in', 'IN'), ('the', 'DT'), ('ground', 'NN'), ('and', 'CC'), ('the', 'DT'), ('corn', 'NN'), ('comes', 'VBZ'), ('up', 'RP')]
['corn']
('food -> ', [['seeds', 'Nut and Seed Products'], ['corn', 'American Indian/Alaska Native Foods']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 1, 64: 1, 65: 1, 66: 1, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  817
seeds
seeds seeds 592
[('but', 'CC'), ('how', 'WRB'), ('seeds', 'NNS'), ('come', 'VBP'), ('up', 'RP')]
['seeds']
('food -> ', [['seeds', 'Nut and Seed Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  821
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  825
seeds
seeds seeds 592
[('how', 'WRB'), ('seeds', 'NNS'), ('come', 'VBP'), ('up', 'RP')]
['seeds']
('food -> ', [['seeds', 'Nut and Seed Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0})
LINE NO ->  830
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0})
LINE NO ->  833
LINE NO ->  837
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 1, 57: 1, 58: 1, 59: 0, 60: 0, 61: 0, -1: 1})
LINE NO ->  842
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  845
LINE NO ->  848
LINE NO ->  851
LINE NO ->  855
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 1, 92: 1, 93: 1, 94: 1, 95: 0, 96: 1, 97: 1, 98: 1, 99: 0, 100: 0, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 0, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0})
LINE NO ->  864
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  865
LINE NO ->  867
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, -1: 1})
LINE NO ->  870
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  874
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  877
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, -1: 1})
LINE NO ->  880
LINE NO ->  884
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  888
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0})
LINE NO ->  891
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  894
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  897
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  900
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  904
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  908
LINE NO ->  911
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  915
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, -1: 1})
LINE NO ->  918
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0})
LINE NO ->  921
LINE NO ->  925
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  926
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe9453fd5f0>)
[('more', 'RBR'), ('meat', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  929
meat
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947169a28>)
[('you', 'PRP'), ('eat', 'VBP'), ('some', 'DT'), ('of', 'IN'), ('that', 'DT'), ('and', 'CC'), ('i', 'VB'), ('ll', 'VBP'), ('give', 'VB'), ('you', 'PRP'), ('more', 'JJR'), ('meat', 'NN'), ('donna', 'NN')]
['meat']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  934
chicken
chicken chicken 234
[('some', 'DT'), ('more', 'RBR'), ('chicken', 'NNS')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  937
chicken
chicken chicken 234
[('chicken', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  940
chicken
chicken chicken 234
[('that', 'DT'), ('s', 'VBZ'), ('not', 'RB'), ('chicken', 'VB'), ('it', 'PRP'), ('s', 'JJ'), ('steak', 'NN')]
['chicken']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0, -1: 1})
LINE NO ->  944
LINE NO ->  945
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  948
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 1, 62: 1, 63: 1, 64: 1, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 0, 80: 0, 81: 0, 82: 0, -1: 1})
LINE NO ->  956
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0})
LINE NO ->  959
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0})
LINE NO ->  963
LINE NO ->  967
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, -1: 1})
LINE NO ->  970
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  973
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, -1: 1})
LINE NO ->  976
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, -1: 1})
LINE NO ->  979
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 0, 68: 0, 69: 0, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 1, 78: 1, 79: 1, 80: 1, 81: 0, 82: 0, 83: 0})
LINE NO ->  984
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  988
LINE NO ->  991
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  995
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  998
LINE NO ->  1004
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0})
LINE NO ->  1007
LINE NO ->  1010
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0})
LINE NO ->  1013
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1017
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0})
LINE NO ->  1021
LINE NO ->  1024
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1027
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, -1: 1})
LINE NO ->  1033
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1036
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 0, 36: 0, 37: 0})
LINE NO ->  1039
LINE NO ->  1042
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1046
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1049
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0})
LINE NO ->  1054
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1058
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0})
LINE NO ->  1061
LINE NO ->  1064
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1067
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 0, 52: 0, 53: 0})
LINE NO ->  1073
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0, -1: 1})
LINE NO ->  1076
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, -1: 1})
LINE NO ->  1080
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, -1: 1})
LINE NO ->  1084
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fbab90>)
[('blue', 'NN'), ('and', 'CC'), ('red', 'JJ')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1087
blue
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fba3f8>)
[('blue', 'NN'), ('and', 'CC'), ('red', 'JJ'), ('and', 'CC'), ('what', 'WP'), ('else', 'RB')]
['blue']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0})
LINE NO ->  1091
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947169a28>)
[('green', 'JJ'), ('and', 'CC'), ('white', 'JJ')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1094
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1095
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0})
LINE NO ->  1098
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947169d88>)
[('green', 'JJ')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1101
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947161878>)
[('green', 'JJ')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0, -1: 1})
LINE NO ->  1104
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d0e0>)
[('and', 'CC'), ('yellow', 'VB'), ('green', 'NN')]
['yellow']
('food -> ', [])
green
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe946fa4bd8>)
[('and', 'CC'), ('yellow', 'VB'), ('green', 'NN')]
['green']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1107
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1110
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, -1: 1})
LINE NO ->  1113
LINE NO ->  1116
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0})
LINE NO ->  1119
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1122
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d098>)
[('was', 'VBD'), ('there', 'EX'), ('any', 'DT'), ('yellow', 'NN')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1126
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1129
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0})
LINE NO ->  1132
yellow
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94722d6c8>)
[('there', 'EX'), ('was', 'VBD'), ('yellow', 'JJ')]
['yellow']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1135
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1136
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947169c20>)
[('there', 'EX'), ('was', 'VBD'), ('orange', 'NN')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 0, 23: 0, 24: 0, -1: 1})
LINE NO ->  1139
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947190098>)
[('oh', 'IN'), ('there', 'EX'), ('was', 'VBD'), ('orange', 'NN')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0})
LINE NO ->  1143
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1146
orange
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe947190dd0>)
[('oh', 'UH'), ('i', 'NN'), ('didn', 'VBP'), ('t', 'NN'), ('see', 'VBP'), ('the', 'DT'), ('orange', 'NN')]
['orange']
('food -> ', [])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0})
LINE NO ->  1149
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0})
LINE NO ->  1152
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0})
LINE NO ->  1156
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1159
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1162
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1166
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0})
LINE NO ->  1170
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0})
LINE NO ->  1173
LINE NO ->  1177
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0})
LINE NO ->  1180
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1184
dessert
(<type 'exceptions.ZeroDivisionError'>, ZeroDivisionError('float division by zero',), <traceback object at 0x7fe94717a170>)
[('if', 'IN'), ('you', 'PRP'), ('eat', 'VBP'), ('all', 'PDT'), ('that', 'DT'), ('up', 'RP'), ('what', 'WP'), ('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('for', 'IN'), ('dessert', 'NN')]
['dessert']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, 55: 0, 56: 0, 57: 1, 58: 1, 59: 1, 60: 1, 61: 1, 62: 1, 63: 1, 64: 0, 65: 0, 66: 0, -1: 1})
LINE NO ->  1190
cream
cream cream 72
[('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('um', 'JJ'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0})
LINE NO ->  1193
cream
cream cream 72
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1197
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1200
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1203
LINE NO ->  1206
cream
cream cream 72
[('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('but', 'CC'), ('i', 'JJ'), ('don', 'VBP'), ('t', 'JJ'), ('want', 'VBP'), ('any', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('now', 'RB')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, -1: 1})
LINE NO ->  1211
cream
cream cream 72
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('but', 'CC'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1214
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 1, 13: 1, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, -1: 1})
LINE NO ->  1217
cream
cream cream 72
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')]
['cream']
('food -> ', [])
ice cream
ice cream ice cream 265
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')]
['ice', 'cream']
('food -> ', [['ice cream', 'Dairy and Egg Products']])
ice cream cone
ice cream cone ice cream cone 354
[('mommy', 'NN'), ('i', 'NN'), ('want', 'VBP'), ('an', 'DT'), ('ice', 'NN'), ('cream', 'NN'), ('cone', 'NN'), ('tomorrow', 'NN')]
['ice', 'cream', 'cone']
('food -> ', [['ice cream', 'Dairy and Egg Products'], ['ice cream cone', 'Dairy and Egg Products']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 1, 31: 1, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0})
LINE NO ->  1222
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, -1: 1})
LINE NO ->  1226
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 1, 17: 0, 18: 0, 19: 0})
LINE NO ->  1229
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, -1: 1})
LINE NO ->  1233
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1236
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 1, 34: 1, 35: 1, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 1, 42: 0, 43: 0, 44: 0, -1: 1})
LINE NO ->  1240
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 0, 28: 0, 29: 0})
LINE NO ->  1243
LINE NO ->  1247
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1250
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, -1: 1})
LINE NO ->  1255
LINE NO ->  1258
LINE NO ->  1261
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1262
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, -1: 1})
LINE NO ->  1265
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1269
LINE NO ->  1272
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0})
LINE NO ->  1276
LINE NO ->  1280
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0})
LINE NO ->  1283
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 0, 16: 0, 17: 0, -1: 1})
LINE NO ->  1287
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1290
LINE NO ->  1294
LINE NO ->  1297
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, -1: 1})
LINE NO ->  1300
LINE NO ->  1304
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0})
LINE NO ->  1307
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1311
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0})
LINE NO ->  1315
LINE NO ->  1319
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0})
LINE NO ->  1322
LINE NO ->  1326
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 1, 49: 1, 50: 1, 51: 1, 52: 1, 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0})
LINE NO ->  1331
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 1, 25: 0, 26: 0, 27: 0, -1: 1})
LINE NO ->  1334
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 1, 18: 1, 19: 1, 20: 0, 21: 0, 22: 0})
LINE NO ->  1338
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, -1: 1})
LINE NO ->  1341
milk
milk milk 46
[('would', 'MD'), ('you', 'PRP'), ('like', 'IN'), ('a', 'DT'), ('glass', 'NN'), ('of', 'IN'), ('milk', 'NN'), ('now', 'RB')]
['milk']
('food -> ', [])
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 0, 29: 0, 30: 0, 31: 0, 32: 1, 33: 1, 34: 1, 35: 1, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, -1: 1})
LINE NO ->  1347
LINE NO ->  1350
juice
juice juice 52
[('how', 'WRB'), ('about', 'IN'), ('a', 'DT'), ('glass', 'NN'), ('of', 'IN'), ('uh', 'JJ'), ('juice', 'NN')]
['juice']
('food -> ', [['juice', 'Fruits and Fruit Juices']])
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 1, 37: 1, 38: 1, 39: 1, 40: 1, 41: 0, 42: 0, 43: 0})
LINE NO ->  1354
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, -1: 1})
LINE NO ->  1357
LINE NO ->  1361
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0, 53: 0, 54: 0, -1: 1})
LINE NO ->  1367
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, -1: 1})
LINE NO ->  1370
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, -1: 1})
LINE NO ->  1374
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1377
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1379
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1380
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, -1: 1})
LINE NO ->  1384
LINE NO ->  1388
LINE NO ->  1392
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 0, 12: 0, 13: 0})
LINE NO ->  1395
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1399
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 1, 12: 1, 13: 1, 14: 0, 15: 0, 16: 0})
LINE NO ->  1402
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1406
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 0, 26: 1, 27: 1, 28: 1, 29: 0, 30: 0, 31: 0, -1: 1})
LINE NO ->  1409
LINE NO ->  1412
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1416
dic
defaultdict(<type 'int'>, {0: 1, 1: 1, 2: 1, 3: 1, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 0, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 0, 22: 1, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 1, 45: 1, 46: 1, 47: 0, 48: 0, 49: 0, -1: 1})
LINE NO ->  1421
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1425
LINE NO ->  1428
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1432
LINE NO ->  1435
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1436
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 0, 11: 0})
LINE NO ->  1440
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 1, 13: 0, 14: 0, 15: 0})
LINE NO ->  1444
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0})
LINE NO ->  1448
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1451
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
LINE NO ->  1454
dic
defaultdict(<type 'int'>, {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0})
loading solution set
calculating
set([(1355, (15, 23)), (1358, (8, 16)), (212, (6, 14)), (692, (29, 34)), (802, (41, 45)), (749, (6, 20)), (232, (6, 11)), (1281, (6, 15)), (771, (6, 21)), (1248, (6, 15)), (746, (6, 14)), (662, (35, 39)), (1284, (6, 15)), (1194, (6, 20)), (700, (6, 10)), (1342, (32, 36)), (930, (50, 54)), (1237, (33, 42)), (753, (6, 20)), (1218, (22, 36)), (935, (16, 23)), (668, (6, 10)), (685, (15, 24)), (1212, (20, 34)), (241, (6, 11)), (1191, (15, 29)), (941, (30, 35)), (927, (11, 15)), (659, (80, 84)), (36, (11, 20)), (1273, (6, 15)), (32, (6, 15)), (1351, (36, 41)), (67, (23, 30)), (938, (6, 13)), (199, (10, 14)), (29, (10, 19)), (941, (17, 24)), (1207, (27, 41)), (811, (63, 67))])
[((29, (10, 19)), '*CHI:\txxx cucumbers .\n'), ((32, (6, 15)), '*MOT:\tcucumbers and what else (.) ?\n'), ((36, (11, 20)), '*CHI:\t&-um cucumbers .\n'), ((67, (23, 30)), '*FAT:\txxx xxx get some mustard come on .\n'), ((199, (10, 14)), '*CHI:\tthe corn [?] .\n'), ((212, (6, 14)), '*CHI:\tmacaroni [!] .\n'), ((232, (6, 11)), '*SIB:\tpizza ?\n'), ((241, (6, 11)), '*CHI:\tpizza .\n'), ((659, (80, 84)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((662, (35, 39)), "*MOT:\tno you didn't have a bowl of soup you had what ?\n"), ((668, (6, 10)), '*MOT:\ttuna ?\n'), ((685, (15, 24)), '*CHI:\t&-um (.) tuna+fish .\n'), ((692, (29, 34)), '*AUN:\tdid you have it in the bread ?\n'), ((700, (6, 10)), '*AUN:\tmilk [?] ?\n'), ((746, (6, 14)), '*CHI:\tice cone .\n'), ((749, (6, 20)), '*MOT:\tice cream cone .\n'), ((753, (6, 20)), '*CHI:\tice cream cone !\n'), ((771, (6, 21)), '*AUN:\tcorn on the cob .\n'), ((802, (41, 45)), '*MOT:\tno the farm is where they grow the corn .\n'), ((811, (63, 67)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((927, (11, 15)), '*CHI:\tmore meat .\n'), ((930, (50, 54)), "*MOT:\tyou eat some of that and I'll give you more meat Donna [?] .\n"), ((935, (16, 23)), '*CHI:\tsome more chicken .\n'), ((938, (6, 13)), '*CHI:\tchicken .\n'), ((941, (17, 24)), "*MOT:\tthat's not chicken it's steak .\n"), ((941, (30, 35)), "*MOT:\tthat's not chicken it's steak .\n"), ((1191, (15, 29)), '*CHI:\t&-um (.) ice cream cone .\n'), ((1194, (6, 20)), '*MOT:\tice cream cone ?\n'), ((1207, (27, 41)), "*CHI:\tbut I don't want any ice cream cone now .\n"), ((1212, (20, 34)), '*CHI:\tbut I want an ice cream cone .\n'), ((1218, (22, 36)), '*CHI:\tMommy I want an ice cream cone tomorrow .\n'), ((1237, (33, 42)), '*MOT:\tyou [/] you want some more cucumbers ?\n'), ((1248, (6, 15)), '*CHI:\tcucumbers (.) .\n'), ((1273, (6, 15)), '*SIB:\tcucumbers Chi .\n'), ((1281, (6, 15)), '*CHI:\tcucumbers .\n'), ((1284, (6, 15)), '*MOT:\tcucumbers ?\n'), ((1342, (32, 36)), '*MOT:\twould you like a glass of milk now ?\n'), ((1351, (36, 41)), '*MOT:\thow about a glass of &-uh (.) juice ?\n'), ((1355, (15, 23)), '*CHI:\tI want a popsicle .\n'), ((1358, (8, 16)), '*MOT:\ta popsicle ?\n')]
set([(1237, (-1, 4)), (838, (31, 36)), (1068, (48, 51)), (400, (6, 9)), (1305, (13, 18)), (659, (80, 84)), (18, (38, 43)), (344, (22, 26)), (474, (6, 12)), (279, (-1, 4)), (935, (16, 23)), (246, (20, 24)), (1178, (6, 12)), (985, (6, 9)), (91, (10, 16)), (329, (-1, 4)), (774, (9, 11)), (1230, (-1, 4)), (1150, (6, 9)), (646, (6, 13)), (432, (10, 14)), (1074, (13, 17)), (531, (6, 10)), (895, (-1, 4)), (286, (-1, 4)), (543, (48, 51)), (1281, (6, 15)), (452, (6, 9)), (336, (-1, 4)), (765, (-1, 4)), (1355, (-1, 4)), (771, (18, 21)), (685, (11, 14)), (621, (6, 9)), (222, (13, 17)), (543, (10, 13)), (304, (12, 17)), (552, (99, 104)), (32, (30, 33)), (427, (44, 50)), (1105, (10, 16)), (668, (6, 10)), (152, (6, 8)), (1081, (-1, 4)), (646, (-1, 4)), (797, (14, 17)), (525, (10, 16)), (398, (6, 9)), (642, (37, 42)), (32, (6, 15)), (1099, (6, 11)), (1136, (6, 9)), (357, (-1, 4)), (941, (17, 24)), (137, (-1, 4)), (567, (-1, 4)), (552, (-1, 4)), (352, (27, 30)), (451, (6, 9)), (692, (29, 34)), (1105, (17, 22)), (1441, (10, 13)), (662, (27, 31)), (811, (48, 54)), (84, (-1, 4)), (1407, (20, 25)), (55, (6, 10)), (1241, (23, 27)), (1095, (6, 9)), (688, (-1, 4)), (1417, (22, 24)), (333, (11, 14)), (1332, (-1, 4)), (1194, (6, 20)), (1417, (44, 47)), (1368, (-1, 4)), (339, (-1, 4)), (927, (11, 15)), (949, (61, 65)), (634, (-1, 4)), (1163, (14, 20)), (788, (-1, 4)), (1081, (15, 21)), (957, (26, 30)), (926, (6, 9)), (352, (22, 26)), (88, (6, 12)), (1037, (6, 12)), (512, (16, 20)), (467, (14, 19)), (500, (-1, 4)), (461, (27, 33)), (659, (72, 76)), (802, (41, 45)), (1191, (15, 29)), (710, (-1, 4)), (461, (6, 11)), (95, (-1, 4)), (366, (12, 15)), (672, (6, 9)), (1099, (-1, 4)), (919, (22, 26)), (537, (-1, 4)), (552, (93, 98)), (639, (6, 10)), (155, (-1, 4)), (1212, (20, 34)), (435, (33, 36)), (391, (11, 14)), (506, (-1, 4)), (759, (6, 8)), (713, (13, 18)), (444, (39, 44)), (102, (-1, 4)), (1284, (-1, 4)), (1105, (-1, 4)), (930, (-1, 4)), (1207, (27, 41)), (316, (-1, 4)), (905, (-1, 4)), (352, (-1, 4)), (1371, (-1, 4)), (726, (-1, 4)), (376, (6, 12)), (811, (77, 80)), (202, (16, 19)), (519, (-1, 4)), (1215, (27, 32)), (427, (33, 37)), (607, (6, 11)), (1266, (-1, 4)), (1157, (6, 10)), (238, (-1, 4)), (1167, (34, 40)), (427, (-1, 4)), (47, (-1, 4)), (659, (9, 15)), (485, (10, 14)), (261, (-1, 4)), (322, (-1, 4)), (912, (-1, 4)), (1342, (-1, 4)), (36, (11, 20)), (996, (6, 10)), (1375, (6, 10)), (1362, (27, 30)), (941, (-1, 4)), (977, (-1, 4)), (1407, (-1, 4)), (344, (27, 30)), (781, (48, 53)), (302, (6, 9)), (1212, (-1, 4)), (1215, (6, 11)), (474, (33, 37)), (1263, (-1, 4)), (458, (-1, 4)), (895, (17, 21)), (500, (20, 24)), (642, (11, 14)), (696, (6, 10)), (668, (-1, 4)), (1248, (6, 15)), (71, (33, 38)), (366, (6, 11)), (552, (58, 62)), (1065, (6, 10)), (319, (-1, 4)), (734, (-1, 4)), (1362, (-1, 4)), (960, (6, 12)), (152, (9, 14)), (1153, (6, 8)), (369, (-1, 4)), (416, (8, 13)), (189, (-1, 4)), (604, (-1, 4)), (1403, (6, 9)), (225, (-1, 4)), (818, (-1, 4)), (18, (31, 37)), (1201, (6, 10)), (1223, (-1, 4)), (1368, (24, 30)), (29, (10, 19)), (1171, (6, 12)), (1028, (-1, 4)), (649, (-1, 4)), (55, (11, 15)), (319, (18, 25)), (572, (37, 40)), (1234, (6, 9)), (212, (6, 14)), (1092, (20, 29)), (186, (8, 15)), (740, (-1, 4)), (898, (11, 15)), (717, (6, 10)), (1339, (18, 23)), (662, (35, 39)), (596, (-1, 4)), (141, (10, 14)), (679, (6, 9)), (232, (-1, 4)), (1251, (-1, 4)), (208, (6, 8)), (385, (-1, 4)), (685, (15, 24)), (1215, (-1, 4)), (543, (-1, 4)), (1351, (36, 41)), (710, (13, 18)), (1088, (6, 10)), (1417, (6, 10)), (941, (30, 35)), (1215, (12, 16)), (1144, (6, 10)), (1320, (13, 19)), (960, (13, 18)), (254, (18, 22)), (71, (-1, 4)), (642, (43, 48)), (512, (10, 15)), (410, (-1, 4)), (856, (57, 61)), (811, (63, 67)), (105, (19, 22)), (310, (33, 37)), (680, (34, 39)), (792, (-1, 4)), (838, (55, 59)), (1018, (6, 10)), (1140, (19, 25)), (1037, (26, 35)), (53, (6, 9)), (1241, (11, 14)), (1092, (-1, 4)), (625, (39, 43)), (124, (-1, 4)), (127, (6, 10)), (822, (6, 9)), (692, (-1, 4)), (1160, (21, 27)), (77, (-1, 4)), (957, (10, 13)), (743, (-1, 4)), (1381, (6, 12)), (113, (-1, 4)), (194, (42, 45)), (458, (14, 18)), (734, (38, 41)), (771, (6, 10)), (680, (28, 33)), (1335, (17, 20)), (183, (16, 19)), (164, (6, 9)), (1417, (-1, 4)), (865, (6, 9)), (18, (11, 16)), (1092, (6, 11)), (488, (6, 10)), (137, (19, 22)), (464, (-1, 4)), (525, (22, 25)), (212, (15, 18)), (329, (6, 9)), (1241, (15, 18)), (1339, (-1, 4)), (1308, (6, 9)), (946, (6, 10)), (559, (-1, 4)), (1445, (15, 19)), (1437, (6, 9)), (1452, (6, 10)), (159, (-1, 4)), (423, (6, 10)), (1147, (26, 32)), (563, (6, 11)), (67, (23, 30)), (811, (-1, 4)), (1288, (6, 10)), (892, (36, 40)), (875, (-1, 4)), (18, (22, 26)), (811, (35, 40)), (170, (25, 28)), (756, (-1, 4)), (1308, (10, 13)), (856, (96, 99)), (1120, (9, 15)), (257, (26, 30)), (831, (6, 9)), (261, (12, 16)), (1123, (-1, 4)), (333, (6, 10)), (173, (21, 25)), (183, (8, 15)), (971, (-1, 4)), (1413, (10, 13)), (467, (36, 40)), (601, (-1, 4)), (326, (9, 12)), (576, (21, 26)), (485, (15, 18)), (699, (6, 9)), (892, (-1, 4)), (1111, (6, 12)), (1320, (6, 12)), (1102, (-1, 4)), (734, (29, 37)), (901, (23, 27)), (1055, (-1, 4)), (272, (-1, 4)), (336, (26, 30)), (1422, (6, 9)), (762, (-1, 4)), (916, (-1, 4)), (170, (20, 24)), (361, (11, 14)), (215, (6, 9)), (856, (91, 95)), (1381, (-1, 4)), (572, (-1, 4)), (47, (6, 9)), (1429, (6, 9)), (1185, (57, 64)), (246, (25, 30)), (838, (-1, 4)), (1378, (6, 9)), (1284, (6, 15)), (700, (6, 10)), (1342, (32, 36)), (1449, (6, 10)), (1407, (26, 29)), (1111, (-1, 4)), (420, (8, 15)), (1218, (22, 36)), (503, (-1, 4)), (540, (6, 10)), (974, (-1, 4)), (283, (-1, 4)), (344, (-1, 4)), (1181, (6, 9)), (792, (16, 22)), (1455, (6, 10)), (1147, (6, 8)), (292, (31, 35)), (444, (-1, 4)), (316, (6, 13)), (749, (6, 20)), (310, (38, 43)), (1096, (25, 31)), (1396, (8, 13)), (1237, (33, 42)), (241, (6, 11)), (1133, (-1, 4)), (1380, (6, 9)), (777, (6, 10)), (29, (6, 9)), (1074, (-1, 4)), (892, (10, 13)), (649, (6, 13)), (455, (-1, 4)), (960, (19, 23)), (1191, (11, 14)), (491, (-1, 4)), (1137, (16, 22)), (296, (-1, 4)), (1163, (21, 27)), (1312, (13, 18)), (582, (-1, 4)), (130, (-1, 4)), (878, (33, 36)), (1130, (11, 14)), (1198, (6, 10)), (1393, (6, 11)), (1185, (-1, 4)), (1312, (6, 12)), (700, (11, 14)), (279, (6, 9)), (228, (6, 9)), (781, (22, 26)), (455, (29, 34)), (1127, (11, 15)), (88, (-1, 4)), (1403, (10, 13)), (497, (-1, 4)), (1092, (12, 15)), (1400, (6, 10)), (968, (-1, 4)), (512, (29, 34)), (740, (12, 16)), (563, (-1, 4)), (802, (-1, 4)), (1400, (11, 14)), (938, (6, 13)), (1413, (6, 9)), (1102, (6, 11)), (802, (13, 17)), (1207, (-1, 4)), (276, (9, 12)), (189, (6, 10)), (646, (14, 17)), (868, (-1, 4)), (339, (32, 36)), (843, (-1, 4)), (746, (6, 14)), (1077, (-1, 4)), (109, (6, 9)), (1050, (25, 29)), (1263, (15, 19)), (110, (-1, 4)), (826, (10, 15)), (299, (-1, 4)), (713, (-1, 4)), (534, (-1, 4)), (1005, (12, 15)), (199, (10, 18)), (658, (6, 9)), (659, (45, 49)), (133, (-1, 4)), (916, (24, 28)), (194, (-1, 4)), (1140, (6, 8)), (1034, (6, 10)), (173, (26, 29)), (250, (11, 15)), (512, (91, 94)), (246, (-1, 4)), (1025, (11, 14)), (168, (6, 9)), (503, (10, 13)), (435, (-1, 4)), (1011, (23, 26)), (818, (14, 19)), (474, (-1, 4)), (137, (36, 40)), (1298, (-1, 4)), (269, (-1, 4)), (537, (14, 20)), (1085, (6, 10)), (349, (6, 9)), (1351, (18, 23)), (382, (-1, 4)), (105, (-1, 4)), (949, (-1, 4)), (148, (6, 13)), (1332, (22, 25)), (1181, (10, 13)), (720, (6, 15)), (59, (6, 9)), (1441, (6, 9)), (980, (77, 81)), (32, (-1, 4)), (1047, (6, 10)), (1227, (14, 17)), (1059, (6, 10)), (1108, (6, 10)), (871, (-1, 4)), (316, (14, 17)), (676, (-1, 4)), (148, (-1, 4)), (62, (-1, 4)), (807, (-1, 4)), (101, (6, 9)), (494, (6, 10)), (885, (-1, 4)), (1262, (6, 9)), (992, (33, 37)), (1043, (-1, 4)), (634, (53, 58)), (176, (6, 10)), (1123, (20, 26)), (992, (-1, 4)), (413, (28, 33)), (1342, (23, 28)), (444, (27, 33)), (552, (48, 53)), (380, (6, 9)), (232, (6, 11)), (612, (-1, 4)), (148, (38, 43)), (1014, (6, 10)), (703, (9, 12)), (124, (14, 20)), (219, (11, 18)), (225, (6, 13)), (634, (69, 73)), (448, (-1, 4)), (878, (-1, 4)), (1436, (6, 9)), (930, (50, 54)), (482, (11, 15)), (394, (-1, 4)), (467, (61, 67)), (753, (6, 20)), (438, (27, 33)), (889, (6, 10)), (257, (-1, 4)), (304, (6, 11)), (80, (6, 9)), (1133, (16, 22)), (1273, (6, 15)), (1137, (-1, 4)), (607, (12, 15)), (1117, (22, 28)), (901, (10, 13)), (289, (6, 10)), (1327, (48, 54)), (655, (19, 23)), (593, (-1, 4)), (391, (6, 10))])
[((18, (11, 16)), "*MOT:\tokay girls it's time for supper let's go !\n"), ((18, (22, 26)), "*MOT:\tokay girls it's time for supper let's go !\n"), ((18, (31, 37)), "*MOT:\tokay girls it's time for supper let's go !\n"), ((18, (38, 43)), "*MOT:\tokay girls it's time for supper let's go !\n"), ((29, (6, 9)), '*CHI:\txxx cucumbers .\n'), ((29, (10, 19)), '*CHI:\txxx cucumbers .\n'), ((32, (-1, 4)), '*MOT:\tcucumbers and what else (.) ?\n'), ((32, (6, 15)), '*MOT:\tcucumbers and what else (.) ?\n'), ((32, (30, 33)), '*MOT:\tcucumbers and what else (.) ?\n'), ((36, (11, 20)), '*CHI:\t&-um cucumbers .\n'), ((47, (-1, 4)), '*CHI:\txxx ?\n'), ((47, (6, 9)), '*CHI:\txxx ?\n'), ((53, (6, 9)), '*CHI:\txxx .\n'), ((55, (6, 10)), '*MOT:\tyeah meat ?\n'), ((55, (11, 15)), '*MOT:\tyeah meat ?\n'), ((59, (6, 9)), '*CHI:\tyes .\n'), ((62, (-1, 4)), '*MOT:\tand what else are you eating ?\n'), ((67, (23, 30)), '*FAT:\txxx xxx get some mustard come on .\n'), ((71, (-1, 4)), '*MOT:\twhere did you go the other night Chi ?\n'), ((71, (33, 38)), '*MOT:\twhere did you go the other night Chi ?\n'), ((77, (-1, 4)), '*CHI:\tto the fireworks .\n'), ((80, (6, 9)), '*MOT:\tzzz .\n'), ((84, (-1, 4)), '*MOT:\tand what did we see there (.) ?\n'), ((88, (-1, 4)), '*CHI:\tcolors [?] .\n'), ((88, (6, 12)), '*CHI:\tcolors [?] .\n'), ((91, (10, 16)), '*MOT:\tall colors ?\n'), ((95, (-1, 4)), '*MOT:\tand what else ?\n'), ((101, (6, 9)), '*CHI:\txxx .\n'), ((102, (-1, 4)), '*MOT:\tand what did we go on ?\n'), ((105, (-1, 4)), '*MOT:\tor you go on (.) ?\n'), ((105, (19, 22)), '*MOT:\tor you go on (.) ?\n'), ((109, (6, 9)), '*CHI:\txxx .\n'), ((110, (-1, 4)), '*AUN:\tand what else ?\n'), ((113, (-1, 4)), '*CHI:\tand in and out of the helicopters .\n'), ((124, (-1, 4)), '*CHI:\tand the horses .\n'), ((124, (14, 20)), '*CHI:\tand the horses .\n'), ((127, (6, 10)), '*AUN:\tyeah .\n'), ((130, (-1, 4)), '*AUN:\tand what else ?\n'), ((133, (-1, 4)), '*CHI:\tand the &-um +...\n'), ((137, (-1, 4)), '*CHI:\tand the &-um (.) the &-um (.) cars .\n'), ((137, (19, 22)), '*CHI:\tand the &-um (.) the &-um (.) cars .\n'), ((137, (36, 40)), '*CHI:\tand the &-um (.) the &-um (.) cars .\n'), ((141, (10, 14)), '*MOT:\tthe cars .\n'), ((148, (-1, 4)), "*CHI:\tthey're not motorcycles they're bikes !\n"), ((148, (6, 13)), "*CHI:\tthey're not motorcycles they're bikes !\n"), ((148, (38, 43)), "*CHI:\tthey're not motorcycles they're bikes !\n"), ((152, (6, 8)), '*MOT:\toh bikes .\n'), ((152, (9, 14)), '*MOT:\toh bikes .\n'), ((155, (-1, 4)), '*MOT:\texcuse me .\n'), ((159, (-1, 4)), '*AUN:\tand what did Auntie buy you ?\n'), ((164, (6, 9)), '*CHI:\txxx .\n'), ((168, (6, 9)), '*CHI:\txxx .\n'), ((170, (20, 24)), "*AUN:\t<I can't hear you> [>] .\n"), ((170, (25, 28)), "*AUN:\t<I can't hear you> [>] .\n"), ((173, (21, 25)), "*MOT:\t<we can't hear you> [<] .\n"), ((173, (26, 29)), "*MOT:\t<we can't hear you> [<] .\n"), ((176, (6, 10)), '*MOT:\ttalk over here .\n'), ((183, (8, 15)), '*CHI:\ta balloon (.) .\n'), ((183, (16, 19)), '*CHI:\ta balloon (.) .\n'), ((186, (8, 15)), '*CHI:\ta balloon .\n'), ((189, (-1, 4)), '*AUN:\tyeah ?\n'), ((189, (6, 10)), '*AUN:\tyeah ?\n'), ((194, (-1, 4)), '*MOT:\t<and what did you > [<] &ha have_to eat ?\n'), ((194, (42, 45)), '*MOT:\t<and what did you > [<] &ha have_to eat ?\n'), ((199, (10, 18)), '*CHI:\tthe corn [?] .\n'), ((202, (16, 19)), '*AUN:\twhat else (.) ?\n'), ((208, (6, 8)), '*CHI:\tmm mm +...\n'), ((212, (6, 14)), '*CHI:\tmacaroni [!] .\n'), ((212, (15, 18)), '*CHI:\tmacaroni [!] .\n'), ((215, (6, 9)), "*AUN:\tyes what's your favorite ?\n"), ((219, (11, 18)), '*CHI:\t&-um nothing .\n'), ((222, (13, 17)), '*MOT:\tno Chi talk over here .\n'), ((225, (-1, 4)), '*CHI:\tnothing .\n'), ((225, (6, 13)), '*CHI:\tnothing .\n'), ((228, (6, 9)), '*AUN:\tyes Bridget .\n'), ((232, (-1, 4)), '*SIB:\tpizza ?\n'), ((232, (6, 11)), '*SIB:\tpizza ?\n'), ((238, (-1, 4)), "*AUN:\tI can't hear you .\n"), ((241, (6, 11)), '*CHI:\tpizza .\n'), ((246, (-1, 4)), '*MOT:\tyou go in the pool today ?\n'), ((246, (20, 24)), '*MOT:\tyou go in the pool today ?\n'), ((246, (25, 30)), '*MOT:\tyou go in the pool today ?\n'), ((250, (11, 15)), '*MOT:\twhat pool did you go in ?\n'), ((254, (18, 22)), '*CHI:\ta different pool than that pool .\n'), ((257, (-1, 4)), '*MOT:\tyou went in the big pool ?\n'), ((257, (26, 30)), '*MOT:\tyou went in the big pool ?\n'), ((261, (-1, 4)), '*AUN:\twhose pool is that ?\n'), ((261, (12, 16)), '*AUN:\twhose pool is that ?\n'), ((269, (-1, 4)), "*CHI:\tand David's [?] .\n"), ((272, (-1, 4)), '*MOT:\tand do you know how to swim ?\n'), ((276, (9, 12)), '*CHI:\tno [?] .\n'), ((279, (-1, 4)), '*MOT:\thuh ?\n'), ((279, (6, 9)), '*MOT:\thuh ?\n'), ((283, (-1, 4)), '*CHI:\tbut Sandy do .\n'), ((286, (-1, 4)), '*AUN:\tbut Sandy does ?\n'), ((289, (6, 10)), '*CHI:\tyeah .\n'), ((292, (31, 35)), '*AUN:\twhat do you wear on your arms ?\n'), ((296, (-1, 4)), "*CHI:\tI don't know .\n"), ((299, (-1, 4)), "*AUN:\tI can't hear you .\n"), ((302, (6, 9)), '*CHI:\txxx .\n'), ((304, (6, 11)), '*MOT:\twater wings (.) ?\n'), ((304, (12, 17)), '*MOT:\twater wings (.) ?\n'), ((310, (33, 37)), '*MOT:\twhat did you do out in the yard today (.) ?\n'), ((310, (38, 43)), '*MOT:\twhat did you do out in the yard today (.) ?\n'), ((316, (-1, 4)), '*CHI:\tnothing (.) .\n'), ((316, (6, 13)), '*CHI:\tnothing (.) .\n'), ((316, (14, 17)), '*CHI:\tnothing (.) .\n'), ((319, (-1, 4)), "*CHI:\tI didn't do nothing .\n"), ((319, (18, 25)), "*CHI:\tI didn't do nothing .\n"), ((322, (-1, 4)), '*MOT:\tdid you play ?\n'), ((326, (9, 12)), '*CHI:\tno [?] .\n'), ((329, (-1, 4)), '*MOT:\thuh ?\n'), ((329, (6, 9)), '*MOT:\thuh ?\n'), ((333, (6, 10)), '*CHI:\tyeah [?] .\n'), ((333, (11, 14)), '*CHI:\tyeah [?] .\n'), ((336, (-1, 4)), "*CHI:\tI played in Daddy's pool !\n"), ((336, (26, 30)), "*CHI:\tI played in Daddy's pool !\n"), ((339, (-1, 4)), "*MOT:\tyou played in Daddy's big pool ?\n"), ((339, (32, 36)), "*MOT:\tyou played in Daddy's big pool ?\n"), ((344, (-1, 4)), '*CHI:\tI played in the pool huh Daddy ?\n'), ((344, (22, 26)), '*CHI:\tI played in the pool huh Daddy ?\n'), ((344, (27, 30)), '*CHI:\tI played in the pool huh Daddy ?\n'), ((349, (6, 9)), '*FAT:\tmhm .\n'), ((352, (-1, 4)), '*CHI:\tI played in the pool huh Daddy ?\n'), ((352, (22, 26)), '*CHI:\tI played in the pool huh Daddy ?\n'), ((352, (27, 30)), '*CHI:\tI played in the pool huh Daddy ?\n'), ((357, (-1, 4)), '*MOT:\tand what [//] what did you play ?\n'), ((361, (11, 14)), '*CHI:\t&-uh xxx .\n'), ((366, (6, 11)), '*CHI:\talley [?] .\n'), ((366, (12, 15)), '*CHI:\talley [?] .\n'), ((369, (-1, 4)), '*MOT:\tOlly ?\n'), ((376, (6, 12)), "*MOT:\twhat's Olly ?\n"), ((380, (6, 9)), '*CHI:\txxx .\n'), ((382, (-1, 4)), "*MOT:\tI can't hear you .\n"), ((385, (-1, 4)), "*CHI:\tit's an alligator .\n"), ((391, (6, 10)), '*CHI:\tyeah (.) .\n'), ((391, (11, 14)), '*CHI:\tyeah (.) .\n'), ((394, (-1, 4)), '*MOT:\tand what else did you play ?\n'), ((398, (6, 9)), '*CHI:\txxx .\n'), ((400, (6, 9)), '*CHI:\txxx !\n'), ((410, (-1, 4)), "*CHI:\tit's a nanny@n .\n"), ((413, (28, 33)), "*CHI:\tit [/] it [//] it's a bunny .\n"), ((416, (8, 13)), '*MOT:\ta bunny ?\n'), ((420, (8, 15)), "*AUN:\ta bunny's out there ?\n"), ((423, (6, 10)), '*CHI:\tyeah .\n'), ((427, (-1, 4)), '*AUN:\tare you going to go in the pool after supper with me ?\n'), ((427, (33, 37)), '*AUN:\tare you going to go in the pool after supper with me ?\n'), ((427, (44, 50)), '*AUN:\tare you going to go in the pool after supper with me ?\n'), ((432, (10, 14)), '*CHI:\tthe pool ?\n'), ((435, (-1, 4)), "*CHI:\tdidn't you come for supper xxx ?\n"), ((435, (33, 36)), "*CHI:\tdidn't you come for supper xxx ?\n"), ((438, (27, 33)), "*AUN:\tno I didn't come for supper .\n"), ((444, (-1, 4)), '*FAT:\tdid you do those [?] things last night ?\n'), ((444, (27, 33)), '*FAT:\tdid you do those [?] things last night ?\n'), ((444, (39, 44)), '*FAT:\tdid you do those [?] things last night ?\n'), ((448, (-1, 4)), '*MOT:\tI started (th)em .\n'), ((451, (6, 9)), '*AUN:\txxx .\n'), ((452, (6, 9)), '*CHI:\txxx .\n'), ((455, (-1, 4)), '*CHI:\twhere [//] where Mommy gonna go ?\n'), ((455, (29, 34)), '*CHI:\twhere [//] where Mommy gonna go ?\n'), ((458, (-1, 4)), '*AUN:\tout (.) side .\n'), ((458, (14, 18)), '*AUN:\tout (.) side .\n'), ((461, (6, 11)), "*AUN:\tshe's making [?] the dishes .\n"), ((461, (27, 33)), "*AUN:\tshe's making [?] the dishes .\n"), ((464, (-1, 4)), '*CHI:\twhy ?\n'), ((467, (14, 19)), "*MOT:\tDaddy's gonna take you in the pool while Mama does the dishes .\n"), ((467, (36, 40)), "*MOT:\tDaddy's gonna take you in the pool while Mama does the dishes .\n"), ((467, (61, 67)), "*MOT:\tDaddy's gonna take you in the pool while Mama does the dishes .\n"), ((474, (-1, 4)), "*CHI:\taren't you gonna go in the pool ?\n"), ((474, (6, 12)), "*CHI:\taren't you gonna go in the pool ?\n"), ((474, (33, 37)), "*CHI:\taren't you gonna go in the pool ?\n"), ((482, (11, 15)), '*CHI:\t<and you> [//] and you dunk !\n'), ((485, (10, 14)), '*AUN:\txxx dunk [?] .\n'), ((485, (15, 18)), '*AUN:\txxx dunk [?] .\n'), ((488, (6, 10)), '*CHI:\tyeah .\n'), ((491, (-1, 4)), '*AUN:\twill you dunk with me ?\n'), ((494, (6, 10)), '*CHI:\tyeah .\n'), ((497, (-1, 4)), '*CHI:\tI dunk with you .\n'), ((500, (-1, 4)), '*CHI:\tare you gonna swim ?\n'), ((500, (20, 24)), '*CHI:\tare you gonna swim ?\n'), ((503, (-1, 4)), "*CHI:\tand [/] and [//] and you can't catch me .\n"), ((503, (10, 13)), "*CHI:\tand [/] and [//] and you can't catch me .\n"), ((506, (-1, 4)), '*AUN:\tno ?\n'), ((512, (10, 15)), "*CHI:\tI'm gonna swim xxx xxx can't catch me <Daddy c(ann't)> [//] Daddy can't catch me any way .\n"), ((512, (16, 20)), "*CHI:\tI'm gonna swim xxx xxx can't catch me <Daddy c(ann't)> [//] Daddy can't catch me any way .\n"), ((512, (29, 34)), "*CHI:\tI'm gonna swim xxx xxx can't catch me <Daddy c(ann't)> [//] Daddy can't catch me any way .\n"), ((512, (91, 94)), "*CHI:\tI'm gonna swim xxx xxx can't catch me <Daddy c(ann't)> [//] Daddy can't catch me any way .\n"), ((519, (-1, 4)), "*AUN:\the can't catch you ?\n"), ((525, (10, 16)), "*CHI:\t<he can't> [//] (.) he can't do [!] that (.) .\n"), ((525, (22, 25)), "*CHI:\t<he can't> [//] (.) he can't do [!] that (.) .\n"), ((531, (6, 10)), '*CHI:\tyeah !\n'), ((534, (-1, 4)), '*AUN:\tsay it .\n'), ((537, (-1, 4)), '*CHI:\the said faster [!] faster !\n'), ((537, (14, 20)), '*CHI:\the said faster [!] faster !\n'), ((540, (6, 10)), '*AUN:\tyeah .\n'), ((543, (-1, 4)), "*CHI:\tand [/] and I'm telling him if there more xxx !\n"), ((543, (10, 13)), "*CHI:\tand [/] and I'm telling him if there more xxx !\n"), ((543, (48, 51)), "*CHI:\tand [/] and I'm telling him if there more xxx !\n"), ((552, (-1, 4)), "*MOT:\tdid [/] did Daddy make believe he was the shark <in the> [//] in the beg(inning) [///] don't touch that !\n"), ((552, (48, 53)), "*MOT:\tdid [/] did Daddy make believe he was the shark <in the> [//] in the beg(inning) [///] don't touch that !\n"), ((552, (58, 62)), "*MOT:\tdid [/] did Daddy make believe he was the shark <in the> [//] in the beg(inning) [///] don't touch that !\n"), ((552, (93, 98)), "*MOT:\tdid [/] did Daddy make believe he was the shark <in the> [//] in the beg(inning) [///] don't touch that !\n"), ((552, (99, 104)), "*MOT:\tdid [/] did Daddy make believe he was the shark <in the> [//] in the beg(inning) [///] don't touch that !\n"), ((559, (-1, 4)), '*CHI:\twhy ?\n'), ((563, (-1, 4)), "*MOT:\tdon't touch it !\n"), ((563, (6, 11)), "*MOT:\tdon't touch it !\n"), ((567, (-1, 4)), '*CHI:\twhy ?\n'), ((572, (-1, 4)), '*MOT:\tbecause I have_to have that on (.) .\n'), ((572, (37, 40)), '*MOT:\tbecause I have_to have that on (.) .\n'), ((576, (21, 26)), "*MOT:\t<no don't> [>] touch it !\n"), ((582, (-1, 4)), '*CHI:\tI want to see it .\n'), ((593, (-1, 4)), "*MOT:\tChi you can't touch this .\n"), ((596, (-1, 4)), '*CHI:\tI xxx .\n'), ((601, (-1, 4)), '*AUN:\tlisten !\n'), ((604, (-1, 4)), '*AUN:\tlisten !\n'), ((607, (6, 11)), '*AUN:\trelax [?] and then after [!] Mama will play it for you after okay ?\n'), ((607, (12, 15)), '*AUN:\trelax [?] and then after [!] Mama will play it for you after okay ?\n'), ((612, (-1, 4)), '*AUN:\tand you can hear you [!] on it .\n'), ((621, (6, 9)), '*AUN:\tyes it is you wait and see .\n'), ((625, (39, 43)), '*AUN:\twell (.) are you gonna go in the pool with Daddy and me after ?\n'), ((634, (-1, 4)), '*CHI:\txxx me and Daddy in (.) with Daddy (.) go [//] gonna go in the pool .\n'), ((634, (53, 58)), '*CHI:\txxx me and Daddy in (.) with Daddy (.) go [//] gonna go in the pool .\n'), ((634, (69, 73)), '*CHI:\txxx me and Daddy in (.) with Daddy (.) go [//] gonna go in the pool .\n'), ((639, (6, 10)), '*AUN:\tokay .\n'), ((642, (11, 14)), '*AUN:\t&-um (.) what did you have for lunch today ?\n'), ((642, (37, 42)), '*AUN:\t&-um (.) what did you have for lunch today ?\n'), ((642, (43, 48)), '*AUN:\t&-um (.) what did you have for lunch today ?\n'), ((646, (-1, 4)), '*CHI:\tnothing xxx .\n'), ((646, (6, 13)), '*CHI:\tnothing xxx .\n'), ((646, (14, 17)), '*CHI:\tnothing xxx .\n'), ((649, (-1, 4)), '*AUN:\tnothing ?\n'), ((649, (6, 13)), '*AUN:\tnothing ?\n'), ((655, (19, 23)), "*AUN:\tMommy didn't feed you ?\n"), ((658, (6, 9)), '*CHI:\txxx .\n'), ((659, (9, 15)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((659, (45, 49)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((659, (72, 76)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((659, (80, 84)), '*CHI:\t<I think> [//] (.) <I> [/] <I> [//] <I had> [//] <I> [//] I had a bowl of soup .\n'), ((662, (27, 31)), "*MOT:\tno you didn't have a bowl of soup you had what ?\n"), ((662, (35, 39)), "*MOT:\tno you didn't have a bowl of soup you had what ?\n"), ((668, (-1, 4)), '*MOT:\ttuna ?\n'), ((668, (6, 10)), '*MOT:\ttuna ?\n'), ((672, (6, 9)), '*AUN:\thuh !\n'), ((676, (-1, 4)), '*AUN:\tyou had your favorite !\n'), ((679, (6, 9)), '*MOT:\txxx .\n'), ((680, (28, 33)), '*MOT:\twhat did you have for lunch today ?\n'), ((680, (34, 39)), '*MOT:\twhat did you have for lunch today ?\n'), ((685, (11, 14)), '*CHI:\t&-um (.) tuna+fish .\n'), ((685, (15, 24)), '*CHI:\t&-um (.) tuna+fish .\n'), ((688, (-1, 4)), '*MOT:\tand what else ?\n'), ((692, (-1, 4)), '*AUN:\tdid you have it in the bread ?\n'), ((692, (29, 34)), '*AUN:\tdid you have it in the bread ?\n'), ((696, (6, 10)), '*CHI:\tyeah .\n'), ((699, (6, 9)), '*CHI:\txxx .\n'), ((700, (6, 10)), '*AUN:\tmilk [?] ?\n'), ((700, (11, 14)), '*AUN:\tmilk [?] ?\n'), ((703, (9, 12)), '*CHI:\tno [?] .\n'), ((710, (-1, 4)), '*CHI:\ton the plate .\n'), ((710, (13, 18)), '*CHI:\ton the plate .\n'), ((713, (-1, 4)), '*MOT:\ton the plate ?\n'), ((713, (13, 18)), '*MOT:\ton the plate ?\n'), ((717, (6, 10)), '*CHI:\tyeah .\n'), ((720, (6, 15)), '*FAT:\thoney [?] ?\n'), ((726, (-1, 4)), '*MOT:\tand what else did I give you ?\n'), ((734, (-1, 4)), '*MOT:\t<what did you have for dessert> [<] ?\n'), ((734, (29, 37)), '*MOT:\t<what did you have for dessert> [<] ?\n'), ((734, (38, 41)), '*MOT:\t<what did you have for dessert> [<] ?\n'), ((740, (-1, 4)), '*SIB:\tI xxx play with it .\n'), ((740, (12, 16)), '*SIB:\tI xxx play with it .\n'), ((743, (-1, 4)), '*AUN:\tsay what ?\n'), ((746, (6, 14)), '*CHI:\tice cone .\n'), ((749, (6, 20)), '*MOT:\tice cream cone .\n'), ((753, (6, 20)), '*CHI:\tice cream cone !\n'), ((756, (-1, 4)), '*AUN:\tI bet that was good .\n'), ((759, (6, 8)), '*CHI:\tmm .\n'), ((762, (-1, 4)), '*CHI:\twas good !\n'), ((765, (-1, 4)), '*AUN:\tyou know what Chi likes Dad ?\n'), ((771, (6, 10)), '*AUN:\tcorn on the cob .\n'), ((771, (18, 21)), '*AUN:\tcorn on the cob .\n'), ((774, (9, 11)), '*FAT:\toh ho ho .\n'), ((777, (6, 10)), '*CHI:\tyeah .\n'), ((781, (22, 26)), "*MOT:\tpretty soon the farm will have it (.) and we'll go up and get it .\n"), ((781, (48, 53)), "*MOT:\tpretty soon the farm will have it (.) and we'll go up and get it .\n"), ((788, (-1, 4)), '*CHI:\twhy ?\n'), ((792, (-1, 4)), "*MOT:\t(be)cause that's where it tastes the best .\n"), ((792, (16, 22)), "*MOT:\t(be)cause that's where it tastes the best .\n"), ((797, (14, 17)), '*CHI:\thunhunh xxx .\n'), ((802, (-1, 4)), '*MOT:\tno the farm is where they grow the corn .\n'), ((802, (13, 17)), '*MOT:\tno the farm is where they grow the corn .\n'), ((802, (41, 45)), '*MOT:\tno the farm is where they grow the corn .\n'), ((807, (-1, 4)), '*CHI:\twhy ?\n'), ((811, (-1, 4)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((811, (35, 40)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((811, (48, 54)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((811, (63, 67)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((811, (77, 80)), '*MOT:\tbecause they put it [//] the seeds in the ground and the corn comes up (.) .\n'), ((818, (-1, 4)), '*CHI:\tbut how seeds come up ?\n'), ((818, (14, 19)), '*CHI:\tbut how seeds come up ?\n'), ((822, (6, 9)), '*MOT:\tzzz .\n'), ((826, (10, 15)), '*CHI:\thow seeds come up ?\n'), ((831, (6, 9)), '*CHI:\txxx xxx xxx and I and xxx xxx xxx and xxx !\n'), ((838, (-1, 4)), '*MOT:\ttell Auntie what you did today with Daddy in the pool .\n'), ((838, (31, 36)), '*MOT:\ttell Auntie what you did today with Daddy in the pool .\n'), ((838, (55, 59)), '*MOT:\ttell Auntie what you did today with Daddy in the pool .\n'), ((843, (-1, 4)), '*CHI:\tknow what I did ?\n'), ((856, (57, 61)), '*MOT:\twhat [//] what did [///] Daddy was standing in the pool and you were standing on the deck (.) and what did you do (.) ?\n'), ((856, (91, 95)), '*MOT:\twhat [//] what did [///] Daddy was standing in the pool and you were standing on the deck (.) and what did you do (.) ?\n'), ((856, (96, 99)), '*MOT:\twhat [//] what did [///] Daddy was standing in the pool and you were standing on the deck (.) and what did you do (.) ?\n'), ((865, (6, 9)), '*CHI:\txxx .\n'), ((868, (-1, 4)), "*MOT:\twe can't hear <you whis(per)> [//] if you whisper .\n"), ((871, (-1, 4)), '*MOT:\tsay it out loud .\n'), ((875, (-1, 4)), '*CHI:\tis [/] is [/] is Daddy xxx .\n'), ((878, (-1, 4)), '*CHI:\tif [/] if [/] if I slipped [?] .\n'), ((878, (33, 36)), '*CHI:\tif [/] if [/] if I slipped [?] .\n'), ((885, (-1, 4)), '*MOT:\tdid Daddy catch you ?\n'), ((889, (6, 10)), '*CHI:\tyeah yeah yeah yeah .\n'), ((892, (-1, 4)), "*CHI:\tand [/] and [//] and I didn't dunk !\n"), ((892, (10, 13)), "*CHI:\tand [/] and [//] and I didn't dunk !\n"), ((892, (36, 40)), "*CHI:\tand [/] and [//] and I didn't dunk !\n"), ((895, (-1, 4)), "*MOT:\tyou didn't dunk .\n"), ((895, (17, 21)), "*MOT:\tyou didn't dunk .\n"), ((898, (11, 15)), '*MOT:\tgood girl !\n'), ((901, (10, 13)), "*CHI:\t<I> [/] I didn't slip .\n"), ((901, (23, 27)), "*CHI:\t<I> [/] I didn't slip .\n"), ((905, (-1, 4)), '*MOT:\tare you afraid to dunk ?\n'), ((912, (-1, 4)), '*MOT:\twhy ?\n'), ((916, (-1, 4)), "*CHI:\tbecause I'm a big girl .\n"), ((916, (24, 28)), "*CHI:\tbecause I'm a big girl .\n"), ((919, (22, 26)), "*MOT:\toh you're a big girl .\n"), ((926, (6, 9)), '*CHI:\txxx .\n'), ((927, (11, 15)), '*CHI:\tmore meat .\n'), ((930, (-1, 4)), "*MOT:\tyou eat some of that and I'll give you more meat Donna [?] .\n"), ((930, (50, 54)), "*MOT:\tyou eat some of that and I'll give you more meat Donna [?] .\n"), ((935, (16, 23)), '*CHI:\tsome more chicken .\n'), ((938, (6, 13)), '*CHI:\tchicken .\n'), ((941, (-1, 4)), "*MOT:\tthat's not chicken it's steak .\n"), ((941, (17, 24)), "*MOT:\tthat's not chicken it's steak .\n"), ((941, (30, 35)), "*MOT:\tthat's not chicken it's steak .\n"), ((946, (6, 10)), '*MOT:\tyeah .\n'), ((949, (-1, 4)), '*MOT:\tso what are you going to do tonight when you go in the pool with Daddy (.) ?\n'), ((949, (61, 65)), '*MOT:\tso what are you going to do tonight when you go in the pool with Daddy (.) ?\n'), ((957, (10, 13)), '*CHI:\t<I> [/] I gonna (.) dunk .\n'), ((957, (26, 30)), '*CHI:\t<I> [/] I gonna (.) dunk .\n'), ((960, (6, 12)), "*MOT:\tyou're gonna dunk ?\n"), ((960, (13, 18)), "*MOT:\tyou're gonna dunk ?\n"), ((960, (19, 23)), "*MOT:\tyou're gonna dunk ?\n"), ((968, (-1, 4)), '*AUN:\tare you gonna dunk Daddy ?\n'), ((971, (-1, 4)), "*CHI:\tI can't .\n"), ((974, (-1, 4)), "*CHI:\tI can't .\n"), ((977, (-1, 4)), '*AUN:\twhy ?\n'), ((980, (77, 81)), "*CHI:\t<be(cause)> [/] <be(cause)> [//] because Daddy will slip and then I'll dunk .\n"), ((985, (6, 9)), '*AUN:\tzzz .\n'), ((992, (-1, 4)), "*MOT:\tDaddy will slip and you'll dunk .\n"), ((992, (33, 37)), "*MOT:\tDaddy will slip and you'll dunk .\n"), ((996, (6, 10)), '*CHI:\tyeah .\n'), ((1005, (12, 15)), '*CHI:\tMommy xxx me up .\n'), ((1011, (23, 26)), '*MOT:\tStar (.) get out [!] of here .\n'), ((1014, (6, 10)), '*AUN:\tcome here (.) .\n'), ((1018, (6, 10)), '*AUN:\tcome here .\n'), ((1025, (11, 14)), '*SIB:\tStar (.) !\n'), ((1028, (-1, 4)), '*MOT:\tdid you like the fireworks when we saw them ?\n'), ((1034, (6, 10)), '*CHI:\tyeah .\n'), ((1037, (6, 12)), '*AUN:\twan(t) (t)a go back next year ?\n'), ((1037, (26, 35)), '*AUN:\twan(t) (t)a go back next year ?\n'), ((1043, (-1, 4)), '*MOT:\ttomorrow ?\n'), ((1047, (6, 10)), '*CHI:\tyeah !\n'), ((1050, (25, 29)), '*MOT:\twell we got a long time to wait for fireworks [!] again .\n'), ((1055, (-1, 4)), '*MOT:\tdid you like them ?\n'), ((1059, (6, 10)), '*CHI:\tyeah but I was afraid .\n'), ((1065, (6, 10)), '*CHI:\tyeah .\n'), ((1068, (48, 51)), '*MOT:\twhat did they do when they went up in the sky ?\n'), ((1074, (-1, 4)), '*CHI:\tmade a boom .\n'), ((1074, (13, 17)), '*CHI:\tmade a boom .\n'), ((1077, (-1, 4)), '*MOT:\tdid they (.) ?\n'), ((1081, (-1, 4)), '*MOT:\tand what colors was [//] were there ?\n'), ((1081, (15, 21)), '*MOT:\tand what colors was [//] were there ?\n'), ((1085, (6, 10)), '*CHI:\tblue and red .\n'), ((1088, (6, 10)), '*MOT:\tblue and red and what else ?\n'), ((1092, (-1, 4)), '*CHI:\tgreen [?] and white (.) .\n'), ((1092, (6, 11)), '*CHI:\tgreen [?] and white (.) .\n'), ((1092, (12, 15)), '*CHI:\tgreen [?] and white (.) .\n'), ((1092, (20, 29)), '*CHI:\tgreen [?] and white (.) .\n'), ((1095, (6, 9)), '*CHI:\txxx !\n'), ((1096, (25, 31)), '*AUN:\twhat was the other colors (.) ?\n'), ((1099, (-1, 4)), '*AUN:\tgreen .\n'), ((1099, (6, 11)), '*AUN:\tgreen .\n'), ((1102, (-1, 4)), '*CHI:\tgreen .\n'), ((1102, (6, 11)), '*CHI:\tgreen .\n'), ((1105, (-1, 4)), '*CHI:\tand yellow green .\n'), ((1105, (10, 16)), '*CHI:\tand yellow green .\n'), ((1105, (17, 22)), '*CHI:\tand yellow green .\n'), ((1108, (6, 10)), '*AUN:\tyeah .\n'), ((1111, (-1, 4)), '*AUN:\tpurple ?\n'), ((1111, (6, 12)), '*AUN:\tpurple ?\n'), ((1117, (22, 28)), '*AUN:\tno there was no purple ?\n'), ((1120, (9, 15)), '*CHI:\tno purple .\n'), ((1123, (-1, 4)), '*MOT:\twas there any yellow ?\n'), ((1123, (20, 26)), '*MOT:\twas there any yellow ?\n'), ((1127, (11, 15)), '*CHI:\t&-um yeah .\n'), ((1130, (11, 14)), '*CHI:\t&-um (.) uhhuh .\n'), ((1133, (-1, 4)), '*CHI:\tthere was yellow .\n'), ((1133, (16, 22)), '*CHI:\tthere was yellow .\n'), ((1136, (6, 9)), '*CHI:\txxx .\n'), ((1137, (-1, 4)), '*CHI:\tthere was orange .\n'), ((1137, (16, 22)), '*CHI:\tthere was orange .\n'), ((1140, (6, 8)), '*MOT:\toh there was orange ?\n'), ((1140, (19, 25)), '*MOT:\toh there was orange ?\n'), ((1144, (6, 10)), '*CHI:\tyeah !\n'), ((1147, (6, 8)), "*MOT:\toh I didn't see the orange .\n"), ((1147, (26, 32)), "*MOT:\toh I didn't see the orange .\n"), ((1150, (6, 9)), '*CHI:\tyes you did .\n'), ((1153, (6, 8)), '*MOT:\toh I did ?\n'), ((1157, (6, 10)), '*CHI:\tyeah .\n'), ((1160, (21, 27)), '*CHI:\tall the pretty colors .\n'), ((1163, (14, 20)), '*MOT:\tall the pretty colors ?\n'), ((1163, (21, 27)), '*MOT:\tall the pretty colors ?\n'), ((1167, (34, 40)), '*CHI:\tyeah all [/] all the pretty colors xxx pretty [?] colors !\n'), ((1171, (6, 12)), '*CHI:\tcolors !\n'), ((1178, (6, 12)), "*MOT:\tyou're silly .\n"), ((1181, (6, 9)), '*CHI:\tzzz (.) .\n'), ((1181, (10, 13)), '*CHI:\tzzz (.) .\n'), ((1185, (-1, 4)), '*MOT:\tif you eat all that up (.) what would you like for dessert ?\n'), ((1185, (57, 64)), '*MOT:\tif you eat all that up (.) what would you like for dessert ?\n'), ((1191, (11, 14)), '*CHI:\t&-um (.) ice cream cone .\n'), ((1191, (15, 29)), '*CHI:\t&-um (.) ice cream cone .\n'), ((1194, (6, 20)), '*MOT:\tice cream cone ?\n'), ((1198, (6, 10)), '*CHI:\tyeah .\n'), ((1201, (6, 10)), '*CHI:\tyeah .\n'), ((1207, (-1, 4)), "*CHI:\tbut I don't want any ice cream cone now .\n"), ((1207, (27, 41)), "*CHI:\tbut I don't want any ice cream cone now .\n"), ((1212, (-1, 4)), '*CHI:\tbut I want an ice cream cone .\n'), ((1212, (20, 34)), '*CHI:\tbut I want an ice cream cone .\n'), ((1215, (-1, 4)), "*MOT:\tdon't talk with your mouth full .\n"), ((1215, (6, 11)), "*MOT:\tdon't talk with your mouth full .\n"), ((1215, (12, 16)), "*MOT:\tdon't talk with your mouth full .\n"), ((1215, (27, 32)), "*MOT:\tdon't talk with your mouth full .\n"), ((1218, (22, 36)), '*CHI:\tMommy I want an ice cream cone tomorrow .\n'), ((1223, (-1, 4)), '*MOT:\ttomorrow ?\n'), ((1227, (14, 17)), '*MOT:\talright (.) .\n'), ((1230, (-1, 4)), '*MOT:\tdid you have enough to eat ?\n'), ((1234, (6, 9)), '*CHI:\tyes .\n'), ((1237, (-1, 4)), '*MOT:\tyou [/] you want some more cucumbers ?\n'), ((1237, (33, 42)), '*MOT:\tyou [/] you want some more cucumbers ?\n'), ((1241, (11, 14)), '*CHI:\t&-um (.) mhm (.) yeah .\n'), ((1241, (15, 18)), '*CHI:\t&-um (.) mhm (.) yeah .\n'), ((1241, (23, 27)), '*CHI:\t&-um (.) mhm (.) yeah .\n'), ((1248, (6, 15)), '*CHI:\tcucumbers (.) .\n'), ((1251, (-1, 4)), '*CHI:\tI think I can get (th)em by myself now .\n'), ((1262, (6, 9)), '*CHI:\txxx .\n'), ((1263, (-1, 4)), '*FAT:\tuse your fork .\n'), ((1263, (15, 19)), '*FAT:\tuse your fork .\n'), ((1266, (-1, 4)), '*MOT:\tare you hungry again ?\n'), ((1273, (6, 15)), '*SIB:\tcucumbers Chi .\n'), ((1281, (6, 15)), '*CHI:\tcucumbers .\n'), ((1284, (-1, 4)), '*MOT:\tcucumbers ?\n'), ((1284, (6, 15)), '*MOT:\tcucumbers ?\n'), ((1288, (6, 10)), '*CHI:\tyeah .\n'), ((1298, (-1, 4)), '*MOT:\tI see more than three .\n'), ((1305, (13, 18)), '*MOT:\tlittle bites [>] .\n'), ((1308, (6, 9)), '*FAT:\tzzz [<] .\n'), ((1308, (10, 13)), '*FAT:\tzzz [<] .\n'), ((1312, (6, 12)), "*MOT:\tyou're gonna choke (.) .\n"), ((1312, (13, 18)), "*MOT:\tyou're gonna choke (.) .\n"), ((1320, (6, 12)), "*MOT:\tthat's enough .\n"), ((1320, (13, 19)), "*MOT:\tthat's enough .\n"), ((1327, (48, 54)), "*MOT:\tno you can't have all of it cause there's others here .\n"), ((1332, (-1, 4)), '*MOT:\tyou have plenty [!] .\n'), ((1332, (22, 25)), '*MOT:\tyou have plenty [!] .\n'), ((1335, (17, 20)), "*CHI:\tno I don't (.) .\n"), ((1339, (-1, 4)), '*MOT:\ttake little bites please (.) .\n'), ((1339, (18, 23)), '*MOT:\ttake little bites please (.) .\n'), ((1342, (-1, 4)), '*MOT:\twould you like a glass of milk now ?\n'), ((1342, (23, 28)), '*MOT:\twould you like a glass of milk now ?\n'), ((1342, (32, 36)), '*MOT:\twould you like a glass of milk now ?\n'), ((1351, (18, 23)), '*MOT:\thow about a glass of &-uh (.) juice ?\n'), ((1351, (36, 41)), '*MOT:\thow about a glass of &-uh (.) juice ?\n'), ((1355, (-1, 4)), '*CHI:\tI want a popsicle .\n'), ((1362, (-1, 4)), '*FAT:\tyou got_to be stupid [!] to be treating (th)em .\n'), ((1362, (27, 30)), '*FAT:\tyou got_to be stupid [!] to be treating (th)em .\n'), ((1368, (-1, 4)), "*FAT:\tyou don't cut [!] things up .\n"), ((1368, (24, 30)), "*FAT:\tyou don't cut [!] things up .\n"), ((1371, (-1, 4)), '*MOT:\tare you all finished ?\n'), ((1375, (6, 10)), '*CHI:\tyeah .\n'), ((1378, (6, 9)), '*FAT:\txxx .\n'), ((1380, (6, 9)), '*CHI:\txxx .\n'), ((1381, (-1, 4)), "*MOT:\twhat's that Chi ?\n"), ((1381, (6, 12)), "*MOT:\twhat's that Chi ?\n"), ((1393, (6, 11)), '*CHI:\ttruck .\n'), ((1396, (8, 13)), '*MOT:\ta truck ?\n'), ((1400, (6, 10)), '*CHI:\tyeah (.) .\n'), ((1400, (11, 14)), '*CHI:\tyeah (.) .\n'), ((1403, (6, 9)), '*SIB:\tzzz [>] .\n'), ((1403, (10, 13)), '*SIB:\tzzz [>] .\n'), ((1407, (-1, 4)), '*MOT:\t<Chi (.) come here> [<] .\n'), ((1407, (20, 25)), '*MOT:\t<Chi (.) come here> [<] .\n'), ((1407, (26, 29)), '*MOT:\t<Chi (.) come here> [<] .\n'), ((1413, (6, 9)), '*SIB:\tzzz [>] .\n'), ((1413, (10, 13)), '*SIB:\tzzz [>] .\n'), ((1417, (-1, 4)), "*MOT:\t<but you've got ta take little bites> [<] .\n"), ((1417, (6, 10)), "*MOT:\t<but you've got ta take little bites> [<] .\n"), ((1417, (22, 24)), "*MOT:\t<but you've got ta take little bites> [<] .\n"), ((1417, (44, 47)), "*MOT:\t<but you've got ta take little bites> [<] .\n"), ((1422, (6, 9)), '*SIB:\tzzz .\n'), ((1429, (6, 9)), '*SIB:\tzzz .\n'), ((1436, (6, 9)), '*FAT:\txxx .\n'), ((1437, (6, 9)), '*SIB:\tzzz .\n'), ((1441, (6, 9)), '*SIB:\tzzz [>] .\n'), ((1441, (10, 13)), '*SIB:\tzzz [>] .\n'), ((1445, (15, 19)), '*MOT:\t<alright now> [<] you all finished ?\n'), ((1449, (6, 10)), '*CHI:\tyeah .\n'), ((1452, (6, 10)), '*MOT:\tokay .\n'), ((1455, (6, 10)), '*CHI:\tyeah .\n')]
calculating accuracy and recall
correct labels:
set(['steak', 'mustard', 'ice cream cone', 'juice', 'corn', 'popsicle', 'cucumbers', 'meat', 'soup', 'tuna+fish', 'corn on the cob', 'macaroni', 'ice cone', 'chicken', 'tuna', 'bread', 'milk', 'pizza'])
predicted labels:
set(['', "don't", '[!]', 'the>', 'colors', 'bikes', 'touch', 'yes', 'milk', 'ground', 'deck', 'sky', 'pretty', 'orange', 'ta', 'swim', 'plate', 'dessert', 'gonna', 'lunch', '[>]', 'yellow', 'dessert>', 'wings', 'bread', "we'll", 'mhm', 'meat', 'had>', 'steak', 'side', 'ice cream cone', 'yeah', "bunny's", 'girl', 'next year', 'chicken', 'blue', '(.)', 'enough', 'dunk', 'zzz', 'cars', 'corn', 'night', 'water', 'others', 'white (.)', "aren't", 'come', 'think>', 'yard', 'here>', 'oh', 'cucumbers', 'cob', "can't", 'feed', 'honey [?]', "you're", 'girls', 'arms', 'now>', 'way', 'today', 'horses', 'relax', "what's", 'xxx', 'huh', 'you>', 'tuna+fish', 'ho', 'ice cone', 'eat', "they're", 'mm', 'soup', 'wan(t)', 'bites', 'fork', 'shark', 'corn [?]', "can't>", 'alley', 'juice', '[?]', 'slip', '[/]', 'dishes', 'things', 'balloon', 'bowl', '<but', 'seeds', 'macaroni', 'boom', 'truck', 'bunny', 'pizza', 'play', 'okay', 'mustard', 'farm', "let's", 'mouth', 'supper', 'nothing', '[<]', 'tuna', 'pool', 'faster', 'glass', 'purple', 'green', 'time', "she's", 'talk', "that's"])
file:HSLLD/HV1/MT//diamt1.cha
precision: 0.134453781513
recall: 0.888888888889
true positives:['bread', 'chicken', 'corn', 'cucumbers', 'ice cone', 'ice cream cone', 'juice', 'macaroni', 'meat', 'milk', 'mustard', 'pizza', 'soup', 'steak', 'tuna', 'tuna+fish']
false positives: ['', '(.)', '<but', '[!]', '[/]', '[<]', '[>]', '[?]', 'alley', "aren't", 'arms', 'balloon', 'bikes', 'bites', 'blue', 'boom', 'bowl', 'bunny', "bunny's", "can't", "can't>", 'cars', 'cob', 'colors', 'come', 'corn [?]', 'deck', 'dessert', 'dessert>', 'dishes', "don't", 'dunk', 'eat', 'enough', 'farm', 'faster', 'feed', 'fork', 'girl', 'girls', 'glass', 'gonna', 'green', 'ground', 'had>', 'here>', 'ho', 'honey [?]', 'horses', 'huh', "let's", 'lunch', 'mhm', 'mm', 'mouth', 'next year', 'night', 'nothing', 'now>', 'oh', 'okay', 'orange', 'others', 'plate', 'play', 'pool', 'pretty', 'purple', 'relax', 'seeds', 'shark', "she's", 'side', 'sky', 'slip', 'supper', 'swim', 'ta', 'talk', "that's", 'the>', "they're", 'things', 'think>', 'time', 'today', 'touch', 'truck', 'wan(t)', 'water', 'way', "we'll", "what's", 'white (.)', 'wings', 'xxx', 'yard', 'yeah', 'yellow', 'yes', "you're", 'you>', 'zzz']
false negatives: ['corn on the cob', 'popsicle']
# true pos: 16
# false pos: 103
# false neg: 2
HSLLD/HV1/MT//remmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*FAT: now what do we got here ?', "*MOT: oh Lenny don't let him see it [= tape recorder] !", '*FAT: we have beautiful beautiful (.) seafood (.) plates .', '*CHI: xxx that .', '*MOT: no that [= tape recorder] goes over there [>] .', '*FAT: <no this [= tape recorder]> [<] is for Daddy .', '*MOT: yeah Daddy just wants <to look at that [= tape recorder] > [<][>] .', "*FAT: <Daddy's gonna> [<] take care of this a little later .", '*MOT: alright listen .', '*FAT: okay ?', '*MOT: alright .', '*MOT: <what are you xxx [/]> [>] .', '*CHI: <we can buy> [<] acting [?] tapes so we can eat .', '*MOT: mhm .', "*CHI: well what's the light blinkin(g) out for ?", '*MOT: well +/.', "*FAT: that's (be)cause we shut it off .", "*FAT: <it's not on> [>] .", '*CHI: <well what [/]> [<] .', "*MOT: yeah it's just tellin(g) us it's alright .", "*MOT: <it's off> [>] .", "*FAT: <it's> [<] tellin(g) us it's off .", '*MOT: Sabato so tell me what did grandpa do ?', '*MOT: he only needed you ?', "*MOT: I didn't hear what you said [>] .", '*CHI: <he> [/] he said he needed me !', "*CHI: because he couldn't ha(ve) needed something (be)cause I was the governor .", '*CHI: but when I was the governor growin(g) up he used to hunt by hi(s)self [: himself] [*] [<] .', '*MOT: oh !', '*MOT: he used to hunt ?', '*CHI: yeah .', '*FAT: the governor ?', '*CHI: no no no <no no> [>] my grandpa !', '*FAT: <you mean> [<] .', '*FAT: when [/] when +...', '*MOT: no <gran(dfather)> [//] his grandfather .', '*FAT: yeah .', '*FAT: but you mean when [!] you grow up and you become [!] the governor .', '*CHI: yeah !', "*CHI: that's what I mean .", '*CHI: what [/] what [//] but &-um <he [/] he [/]> [>] .', '*FAT: <you wan(t) (t)a be the governor when you grow up huh> [<] ?', '*CHI: he was lost when he was <huntin(g)> [>] .', '*SIS: zzz .', '*CHI: <when [/]> [>] .', '*CHI: when [/] when [/] when he growed up +...', '*MOT: <hi there> [<] !', '*FAT: yeah [>] .', '*SIS: <&mm mm> [<] .', '*MOT: <what sweetheart> [>] ?', '*CHI: <because> [/] because he knowed@n what he was doin(g) [<] .', '*CHI: he passed the laws .', "*CHI: he didn't recognize what he was into (.) a swarm hunted things .", '*MOT: a swarm ?', '*FAT: &-uh .', '*CHI: because +...', '*MOT: what an imagination [>] !', '*FAT: no [<][>] .', '*CHI: <yeah dad he was talkin(g) xxx <&d> [/] <&d> [/] did > [<] +...', '*FAT: he must be talk [/] talkin(g) about when grandpa went hunting .', '*CHI: yeah !', '*MOT: yeah someone must have told him this story .', '*FAT: yeah [>] .', '*CHI: yeah [<] .', '*CHI: yeah .', '*FAT: yeah (be)cause grandpa used to like to go huntin(g) .', '*FAT: and he used <to like to> [>] go fishin(g) too .', '*SIS: <ahdoda@b> [<] .', '*MOT: did he ?', '*CHI: yeah !', '*CHI: he used to go fishin(g) with me !', '*MOT: huh xxx true ?', '*CHI: and I said grandpa I caught a fish !', '*FAT: zzz [>] .', '*MOT: <did you> [<] ?', '*CHI: yes (.) !', '*MOT: you have +/.', '*CHI: <and then> [/] and then we went home <and we cooked it for dinner> [>] and then I had it and I liked it .', '*SIS: zzz [<] .', '*MOT: zzz .', '*MOT: how did you cook it ?', '*FAT: oh boy !', "*CHI: I didn't cook it .", '*CHI: my grandpa cook it .', '*MOT: oh !', '*SIS: zzz .', '*FAT: what are you doin(g) over there little girl ?', "*MOT: she's feedin(g) her baby .", "*FAT: she's feedin(g) her little doll ?", '*MOT: look at her feedin(g) the dolly Sab .', "*MOT: isn't it cute ?", '*CHI: yeah yeah yeah .', "*MOT: you see she doesn't know about +/.", "*CHI: she pretends she's feedin(g) her .", '*MOT: right !', '*SIS: mm .', '*MOT: &-um is it good ?', '*MOT: are you gonna eat all that up ?', '*MOT: you eat all [/] all that up .', '*CHI: she is chewin(g) !', '*MOT: uhhuh .', '*FAT: zzz .', '*MOT: you tell her [= doll] Anna numinnuma@f .', '*CHI: <numinnum@f> [>] .', "*FAT: <how's that fish> [<] ?", "*FAT: how's that fish ?", '*CHI: good .', '*MOT: is it good ?', '*CHI: yeah [>] .', '*FAT: did [<] .', '*FAT: you try the scallop too ?', '*FAT: <see this here> [>] ?', '*SIS: <oooo@b> [<] .', "*FAT: this is scallop that's delicious !", '*FAT: taste it .', '*CHI: I know that <&b> [/] <&b> [/] but +/.', "*FAT: dunk [//] stick it <in your> [/] <in your> [/] in your ketchup and then [/] and then take a bite it's delicious .", '*FAT: watch (.) .', '*FAT: see that ?', '*FAT: (yu)m see (.) ?', "*FAT: <it's all white meat (yu)m> [>] .", '*MOT: <alright let me get your cloth Anna>[<] .', '*MOT: <mama get it > [<] ?', '*MOT: <&-uh oh> [>] !', '*FAT: <really good> [<] .', "*CHI: it doesn't smell good but [/] <but I> [/] I don't like this one xxx .", '*CHI: <is it alright if I just> [//] [>] ?', '*MOT: <it [///] what do you mean> [<] ?', "*MOT: <alright I'll eat that piece> [<] .", '*CHI: Mama is it alright if I used [/] used to not eat that .', '*FAT: <look at that> [<] !', "*FAT: <it's all white meat> [<] !", '*MOT: have the fish Honeybun .', '*MOT: have [>] what you want .', '*FAT: okay [<] .', '*CHI: no no no I have the fish .', '*MOT: alright put it back on the dish .', '*FAT: alright .', '*FAT: go ahead eat what you want .', '*CHI: this one has a black pot under it .', '*CHI: look .', '*MOT: huh ?', '*MOT: oh !', '*MOT: oh !', "*MOT: I'll get rid of that that's +...", '*MOT: xxx .', '*FAT: you see son .', '*FAT: Dad likes that .', '*MOT: mm .', '*FAT: you should try it .', '*FAT: you might enjoy it .', '*MOT: yes .', '*MOT: scallops is really sweet [>] .', "*FAT: <if you> [<] don't try it you know (.) you [/] you don't know .", '*MOT: (uh)hum .', '*FAT: but at least if you try it you know whether or not you like it (.) .', '*FAT: right ?', '*FAT: so give it a try !', "*FAT: if you like it eat it if you don't like it then you don't eat it .", "*CHI: I don't like it .", "*CHI: I <don't wan(t) (t)a eat it> [>] .", "*MOT: <no that's not it> [<] .", '*MOT: hey [>] !', "*FAT: <that's not> [<] a scallop .", "*FAT: that's fish [>] .", "*MOT: <that's> [<] fish .", '*MOT: this is a scallop [!] .', '*MOT: see ?', '*MOT: this small one here .', "*FAT: that's the &-um haddock .", '*FAT: go ahead eat the haddock [>] .', '*CHI: <I> [<] .', "*CHI: don't want the haddock Mommy .", '*CHI: <<I> [/] <I> [/] I had enough of haddock> [>] .', "*MOT: <alright , I'll [!] eat it> [<][>] .", '*SIS: zzz [<] .', '*MOT: okay .', '*MOT: alright .', "*MOT: <eat what's on> [>] your plate Honey .", '*FAT: <alright> [<] .', "*FAT: if you don't want to eat it you don't have_to eat it .", '*MOT: yeah well you know he ate a big [///] fairly well (.) previous to this .', "*FAT: you know what it is he's not hungry (.) they ate a little while ago that's why .", '*MOT: I know .', '*SIS: manana@s:spa .', '*MOT: Anna no ?', '*MOT: Sweetheart (.) ?', '*MOT: are you sure (.) ?', '*MOT: okay .', '*MOT: come (h)ere Honey (.) .', '*MOT: no (.) ?', '*MOT: would you like a drink ?', '*MOT: alright sit down .', '*MOT: Mommy get you a drink okay (.) ?', '*MOT: these are sweet Sabato .', '*MOT: so where did you go fishin(g) ?', '*SIS: zzz .', '*CHI: and we xxx fishing poles .', '*CHI: he has a backyard where were some fishing (.) ponds [>] .', '*MOT: oh [<] !', "*CHI: they had some fish (.) but [/] but [/] but &-um (.) we know the &-um (.) we doin(g) (.) my grandpa has some [///] <we used to go and> [//] we didn't go in the stop in &w we hanged@n up and I opened the door <and grandpa> [>] .", '*MOT: <you hange@n up yeah> [<] .', '*CHI: and grandpa went in the door and then [/] then I closed the door on my fishing pole .', '*CHI: I reached it .', '*FAT: zzz [>] .', '*MOT: wow [<] !', '*MOT: <what an adven(ture) > [<] +...', '*CHI: with my fishing pole I did it .', '*CHI: zzz .', '*CHI: could xxx .', "*CHI: that's the funniest thing I ever heard of (.) ummmglug@c .", '*CHI: zzz .', '*CHI: that was <cookie monster> [>] guys .', "*MOT: <he's excited huh> [<] ?", '*MOT: cookie monster does that ?', '*SIS: zzz [<] .', "*CHI: what's your xxx .", '*MOT: Sweetheart sit down in the chair .', '*CHI: <he spills all> [//] he spills all his cookies he goes oh my God and [/] and then [//] the cookie comes out of his nose when he spits .', '*MOT: oh yeah I know that .', '*CHI: zzz .', '*MOT: but cookie monster also eats vegetables too (.) and food .', '*MOT: they have had him on there eatin(g) that (.) .', '*MOT: (re)member ?', '*CHI: yeah .', '*MOT: remember Maria said to him (.) cookies are good but not all the time .', '*MOT: you have_to eat other things that are better .', '*CHI: yeah .', '*MOT: you remember that .', '*FAT: he eat vegetables ?', '*MOT: oh yeah !', '*MOT: they put him on [///] although cookie monster preferred his cookies but he did like his vegetables he said he [///] what did he say ?', '*MOT: he said he these were good too .', '*MOT: and he ate the plate remember ?', '*CHI: zzz .', '*MOT: that was funny .', '*CHI: no .', '*CHI: <he ate> [<] [>] the plate and he got sick &ha !', '*CHI: zzz [>] .', '*FAT: <how (a)bout the time> [<] [/] no .', '*MOT: what did Daddy remember ?', '*FAT: the time that he [= cookie monster] went fishin(g) and he caught the scallops and the lobster +...', '*MOT: zzz .', '*FAT: and the <&h> [/] haddock and he ate all that up all the scallops and the haddock up (.) remember ?', "*CHI: oh I don't know I didn't catch that .", '*MOT: zzz .', '*CHI: <no no> [>] .', "*FAT: you [<] didn't catch that huh (.) ?", '*FAT: zzz .', '*CHI: no no no .', '*FAT: you know what I think the problem is is that you catch too much !', '*FAT: zzz .', '*CHI: no I +/.', "*FAT: we can't even give you a con job anymore .", '*CHI: no !', '*MOT: mm <I know> [>] .', '*CHI: <I saw> [/] [<] .', '*CHI: I saw a lobster alive in there .', '*CHI: <this said> [///] [>] .', '*MOT: <you remember when> [/] [<] .', '*CHI: there was a lobster alive &-uh in [/] <in the pool> [>] .', '*MOT: <at the fish store> [<] .', '*CHI: and sharks [!] they [/] they eat lobsters .', '*CHI: sharks [!] look [>] !', '*SIS: <&mm> [<] .', '*SIS: zzz [<] .', '*CHI: for lobsters in [/] in the deep sea <because sharks [!] eat them and if [/] if they get &-uh <ou(t)> [/] out of the water they can die> [>] ?', '*SIS: awoh [<] .', '*SIS: zzz [<] .', '*MOT: really ?', '*CHI: yeah .', '*MOT: xxx .', "*FAT: that's right .", "*CHI: and it's because they have_to stay in the water .", '*MOT: oh yes Honey they have_to .', '*MOT: remember [>] at the fish store when I took you to the fish store ?', '*CHI: yeah [<] .', '*CHI: yeah .', '*MOT: I showed you the lobsters in the tank .', '*MOT: (re)member ?', '*CHI: yeah .', "*MOT: there's a lot of (th)em .", '*MOT: zzz .', '*CHI: yeah they were alive .', '*MOT: oh !', '*MOT: of course they were alive .', '*MOT: yeah .', '*FAT: <can I have &-um> [/] can I have some of that [//] those [>] scallops over there ?', '*MOT: sure [<] (.) .', '*MOT: yeah .', '*MOT: yeah .', '*CHI: zzz (.) .', '*FAT: oh see <I> [/] I like the scallops (.) .', '*SIS: zzz .', "*MOT: Anna you're not hungry Sweetheart ?", '*CHI: Mommy .', '*SIS: <m@b m@b m@b> [>] .', '*CHI: listen [<] .', '*CHI: <I saw> [>] .', "*FAT: <how's your shrimp> [<] ?", '*CHI: the <(s)callops> [>] .', '*MOT: good [<] .', '*CHI: <&th> [/] the [/] <the (s)callops> [/] <the [>] scallops sprinkles> [>] [/] (.) .', '*MOT: <real good> [<] .', '*CHI: the (s)callops sprinkles an(d) I saw a alligator <&s> [/] <&s> [/] so [/] so he can get a drink of it .', "*CHI: and the lobsters know what they're doin(g) because [/] <because> [//] [>] .", '*SIS: <mmmm@b> [<] .', '*CHI: <because the> [<] [>] lobsters <&w> [/] <&w> [/] <&w> [/] when [/] <&w> [/] when the fishing officers did this (.) they get [//] got (t)a give them a french fry .', '*CHI: they love french fries [!] .', '*MOT: they do ?', '*SIS: mmnumnnnumma@b .', '*MOT: zzz .', '*CHI: they put in tank <by the> [/] by +/.', '*FAT: alright Sam .', '*FAT: listen to Dad (.) I want you to [>] .', '*CHI: <I know that> [<] .', "*FAT: I want you [//] I don't want you to play [!] with your food [>] .", '*CHI: he [<] scrambled up the [/] the [/] the thing these moved it like this .', "*FAT: I'm talkin(g) to you .", "*FAT: <I don't want you> [>] [/] .", "*CHI: <I'm talking to> [<] my mother !", "*FAT: yeah but I'm [!] talkin(g) to you [!] !", '*CHI: Mommy ?', '*MOT: <listen to your father> [>] .', '*CHI: <do you eat> [<] the scram@f just this like this ?', '*MOT: alright now <eat it> [>] .', "*FAT: <Sam [!]> [<] (.) I don't want you to play wit(h) your food I want you to eat it .", '*MOT: oh boy .', '*CHI: &d luck [?] you used to lick that .', '*CHI: used to have a tongue .', '*CHI: and used to lick the ketchup off and then <you eat it> [>] .', '*SIS: zzz [<] .', '*MOT: I see (.) .', '*MOT: what you wan(t) (t)a get down Anna ?', '*CHI: shucks !', '*MOT: alright .', '*FAT: okay ?', '*SIS: zzz .', "*MOT: I bet you the diaper's off .", '*SIS: hello do(g) !', '*SIS: zzz .', '*MOT: xxx .', "*MOT: Mommy's had it !", '*SIS: zzz .', "*MOT: you want [///] oh alright I'll put Sesame Street on .", '*FAT: zzz .', "*MOT: talk to Daddy Sabato I'll be right back .", '*MOT: oh I got ta get a diaper might as well change her in there .', '*CHI: ungaungaungungnnnnnanananana@c .', "*FAT: you don't know what you're missin(g) !", '*CHI: but [?] they have this .', "*FAT: you got ta eat some of these scallops because Daddy's gonna eat (th)em all .", '*FAT: mhm (.) .', '*CHI: Father did clam used to have this (.) ?', '*CHI: clams used to have this ?', '*MOT: clams are in shells Hon .', '*FAT: clams are in shells .', '*FAT: you take (th)em out o(f) their shells and cook (th)em .', '*SIS: zzz .', '*CHI: but listen .', "*CHI: I someone get the lies [?] that was in the pool (.) but [//] and [/] and in my grandpa's pool .", '*CHI: his pool was big he went in the pool (.) to get his [/] his [/] <his fishin(g) pole up> [//] because his fishin(g) <pole up> [/] [>] .', '*FAT: why [<] did somebody throw a clam in [/] in the pool ?', '*CHI: no .', "*CHI: I don't know .", '*CHI: somebody threw the clam in the pool .', "*FAT: that's what I just said .", '*CHI: <&d> [/] <&d> [/] <&d> [/] <&d> [/] there was cooked .', '*CHI: they put in <and that> [/] and that was a stomach [?] that [/] that [/] <that was a clam who xxx> [//] that was a <&k> [/] a clam but &bu that was my grandpa they put stickers [/] <&s> [/] <&s> [/] sticker clam food on it .', '*FAT: yeah ?', "*CHI: but that wasn't funny .", '*FAT: no .', '*CHI: yuck !', '*CHI: uhuh .', "*CHI: my grandpa didn't know that someone did it (.) .", "*CHI: I didn't know that (.) .", "*CHI: I didn't saw that !", "*FAT: you didn't see [!] that .", "*CHI: I didn't see [!] that (.) because that wasn't funny .", '*FAT: no .', '*CHI: I heard a laugh .', '*FAT: zzz .', "*CHI: I heard a laugh <bu(t)> [/] but I didn't heard it (.) .", '*CHI: ahhah !', '*CHI: Ma !', '*FAT: tell me what do you want to do after supper (.) ?', '*FAT: do you have anything on your mind ?', '*CHI: &-um (.) .', '*FAT: hm: (.) ?', '*FAT: would you like to go for a walk or somethin(g) ?', '*CHI: &-um &-um &-um &-um &-um +/.', "*FAT: I'll tell you what how about [///] (.) well [<] [>] it's raining out now huh ?", "*FAT: I was gonna say we'd take a ride up to Richardson's but [>] +...", '*CHI: &-um [<] [>] .', '*CHI: what [<] ?', "*FAT: why don't we wait until maybe &-um (.) Saturday afternoon we'll take a ride up to Richardson's (.) Gary's .", '*CHI: yeah .', '*MOT: xxx .', '*FAT: okay ?', "*FAT: <we don't want to> [<] [>] go tonight (be)cause it's raining .", "*FAT: it's too &-uh [///] (.) the roads are too wet .", '*CHI: <you know> [<] +...', '*MOT: xxx .', '*MOT: Sabato Honey take your foot off there .', "*CHI: no I [/] I <&d> [/] <&d> [/] <&d> [/] that's not my foot I didn't put my foot on there .", '*CHI: I just was goin(g) like this .', '*MOT: alright .', '*FAT: yeah .', '*MOT: let me ask [///] Lenny can you move for me ?', "*FAT: Lydia she's gonna call you back she said .", '*FAT: you were sleepin(g) <I told her , you were sleepin(g) she goes oh good> [>] .', '*MOT: <oh okay (be) cause I was very tired> [<] .', '*FAT: I assume you [/] you spoke to her because when I told her you were sleeping she said oh good !', '*MOT: oh .', "*FAT: she goes I'll call her back .", '*FAT: I said okay@q .', "*MOT: oh yeah no no <I didn't even tell her> [//] I didn't talk to her all day today .", '*FAT: well the way she said that I assumed that [>] she knew that you were tired (.) .', '*MOT: oh [<] .', '*FAT: so .', '*MOT: uhuh .', '*CHI: why the new item ?', '*CHI: he@b he@b ek@b ti@b moto@b tingway@b .', '*CHI: zzz .', '*MOT: I knew you knew your alphabet (.) .', '*MOT: look at this you know what this is ?', '*MOT: this is +/.', '*CHI: what is it ?', '*MOT: a shrimp (.) .', '*CHI: a koonk@c [?] .', '*CHI: no .', "*CHI: no that's a seahorse .", '*MOT: yeah ?', "*FAT: that's a shrimp [!] .", '*FAT: zzz .', '*MOT: zzz .', "*FAT: that's <not a seahorse> [>] .", "*MOT: <it looks like> [<] a seahorse though it's curled around .", '*FAT: zzz .', '*MOT: those are cute .', '*FAT: zzz .', '*FAT: you little meatball .', '*FAT: zzz .', '*CHI: <&d> [/] <&d> [/] did they used to make <hor(se)> [//] seahorses ?', '*MOT: yeah there are seahorses Sabato .', '*FAT: yes there is [>] .', "*CHI: yeah [<] [>] &bu &de &da &-um they used to go way deep &a and they're way deep in the water because +/.", '*FAT: where is this conversation comin(g) from ?', '*FAT: what are we talkin(g) about the <sea [!] for> [>] ?', '*CHI: <the [/] they> [<] .', '*CHI: <used to> [//] <Daddy <they u(sed)> [/] they used> [>] .', "*MOT: <from the food we're eatin(g)> [<] .", '*CHI: they used to +/.', '*FAT: boy he has got a one track mind tonight huh ?', "*CHI: when we're dressed up he got his clothes all wet and then he decided to get out of his dress .", '*CHI: zzz .', "*MOT: I haven't seen a seahorse (.) Sabato since I was a little girl .", '*FAT: they used to sell (th)em in (.) <what store was that> [>] ?', "*FAT: <Woolworth's or Kresge's> [>] or something or Sparks ?", '*SIS: zzz [<][>] .', '*CHI: <yeah they used to make> [/] [<] .', '*MOT: <what sw(eetheart)> [/] what honey ?', '*FAT: little tiny seahorses .', '*FAT: they [>] were about the size of a half a dollar .', '*MOT: zzz [<] .', '*CHI: yeah .', '*FAT: when Daddy was a little boy we used to go buy (th)em .', '*FAT: little goldfish (.) little seahorses (.) little turtles .', '*CHI: yeah .', "*FAT: they still sell the goldfish and the turtles but <I> [/] (.) I haven't seen a little seahorse (.) in &-uh (.) well (.) Jesus (.) since I was a little boy (.) and that was a long time ago !", "*FAT: and don't ask me how long .", '*FAT: zzz .', '*CHI: listen .', '*CHI: listen .', "*CHI: Daddy that wasn't a shrimp that was a seahorse .", '*FAT: mm .', '*CHI: a seahorse is long <with a> [/] wit(h) a tail .', '*CHI: the [/] that [/] that &-uh <the [/] that [/] that seahorse had a> [>] +...', '*FAT: <they had a little tail that curls up> [<] .', '*CHI: that little seahorse had a [///] <&th> [//] <&th> [//] that you can eat +...', "*FAT: that's right .", '*CHI: a lot because they call that shrimp .', '*CHI: zzz .', '*FAT: do you know what a seahorse eats ?', '*CHI: yeah .', '*FAT: what does a seahorse eat ?', "*CHI: I don't know .", '*FAT: a seahorse eats plankton and microbacteria that float around in the ocean .', '*CHI: yeah .', "*FAT: now you need a special [!] lens or a special pair of glasses to see this microbacteria but it's food for the seahorses .", "*CHI: well <&b> [//] <but I've never seen them> [>] .", '*FAT: <and the plankton> [//] [<] .', '*FAT: and plankton and [/] and microbacteria are just about the same .', "*FAT: and that's where they get all of their nourishment from .", '*CHI: <&b> [//] but <they are [/] are sharks some of it> [?] .', '*FAT: now a shark [!] is a bigger animal a bigger fish [!] I should say (.) and that eats [///] a shark will eat other fish .', '*FAT: <but not all fish> [>] .', '*CHI: <<&wh> [//] <&wh> [//] what &-um> [/] [<] .', '*FAT: listen (.) listen to Daddy +/.', '*CHI: <&wh> [//] <&wh> [//] what they [/] [>] ?', '*FAT: not [<] all fish (.) eat other fish .', "*FAT: there are some fish (.) that don't eat other fish .", '*CHI: no .', '*FAT: do you understand me ?', "*FAT: some fish just eat plankton and like that microbacteria that I'm tellin(g) you about .", '*CHI: yeah !', '*FAT: see .', '*CHI: but [/] <but little fish> [/] but [/] but little fish eat plants .', "*FAT: that's right .", '*FAT: they [/] <they peck> [//] they nibble on plants and stuff <like that> [>] .', '*CHI: yeah [//] <&a> [//] and when they get hungry they look for plants .', "*FAT: and they [///] that's right !", '*CHI: yeah !', '*CHI: and they bite them <un(til)> [/] until <un(til)> [/] <un(til)> [/] <un(til)> [/] until they go back in the water .', "*FAT: well , they're all fish .", '*FAT: a fish has to stay in the water .', '*CHI: yeah !', "*FAT: now (.) you know what a dolphin is don't you ?", '*CHI: yeah !', "*FAT: a dolphin doesn't have_to stay in the water all of the time .", '*CHI: yeah !', '*FAT: a dolphin can come up [///] a dolphin is a mammal [!] .', '*CHI: yeah !', '*FAT: and a mammal (.) they live [!] in the ocean (.) but they can breath our air .', '*CHI: yeah !', '*FAT: a whale (.) big big whale ?', '*FAT: see the big whales ?', '*FAT: like in Pinnochio the big whale ?', '*CHI: yeah !', "*FAT: that's a mammal .", "*FAT: it's not a fish .", '*CHI: yeah !', '*FAT: it lives in the ocean like [!] a fish but [>] .', '*CHI: yeah [<] !', "*FAT: it's a mammal and [>] .", '*FAT: it can breath our air .', "*FAT: a fish can't breath our air .", '*CHI: yeah [<] !', '*CHI: yeah !', '*FAT: they have_to breath the air [!] that they make [!] in the water .', '*CHI: yeah !', '*FAT: you understand now ?', '*CHI: yeah .', '*FAT: alright .', "*CHI: but [/] but [/] but [/] but &-um I don't know how the [///] <I never seen a> [/] <I never seen> [/] <I never seen when I was big> [//] I never seen a seahorse (.) !", '*FAT: mm .', "*FAT: this summer we're gonna be goin(g) <to the> [>] &-um [/] .", '*CHI: yeah [<] !', '*CHI: the seahorse .', '*CHI: <the seahorse &s &s> [/] the seahorse shop .', '*FAT: Debbi (.) !', '*FAT: Debbi !', '*MOT: yeah ?', "*MOT: I'm tryin(g) to put a tape on .", "*FAT: the aquarium we're gonna go to the aquarium .", '*FAT: (re)member Daddy took you to the aquarium <and the> [>] .', '*CHI: yeah [<] .', '*FAT: dolphin show ?', "*FAT: well we're gonna go again this year because you're a little bigger and you understand more (.) and <you'll> [//] they'll have seahorses there and you'll be able to see one .", "*FAT: how's that ?", '*CHI: <&tha> [/] that [///] seahorses because these [///] but [/] but a [///] on Pinnochio they [/] they have a little [/] a little wood [///] the [/] <the little wooden> [//] a little wooden boat and you know how they xxx get [/] get his grandfather yeah he [/] he was dead [?] but Pinnochio was made of wood .', "*CHI: he [/] <he was> [/] he was dead [!] because (.) &wh when a boy was made of wood (.) a boy dies when he's &-uh made of wood .", "*FAT: a boy is never alive [!] if he's made out of wood .", '*CHI: yes !', '*FAT: you understand me ?', '*CHI: yeah !', '*FAT: alright .', '*FAT: Pinnochio is just a movie .', '*FAT: movies are make believe .', "*FAT: <they're> [>] fictional .", '*CHI: yeah [<] !', '*FAT: they do make movies that are based (.) on (.) you know true life (.) events but for the most part (.) the things that you see on television are fictional .', "*FAT: in other words it's make believe .", '*CHI: yeah !', '*FAT: okay ?', '*CHI: mhm (.) .', "*FAT: Debbi I'd love a cup of coffee .", '*CHI: Daddy listen .', '*CHI: did this +/.', '*FAT: want some milk ?', '*CHI: this used to be a long choppy &d the [///] <I think a> [//] <I think a whale> [/] <I> [/] <I think a> [/] I think a whale used to eat this (.) .', '*CHI: he used to eat this Father .', '*FAT: mhm .', "*CHI: because when he didn't eat this a long long time ago he went home .", '*FAT: mm .', "*CHI: <&wh> [/] <&wh> [/] when they went home they [/] they [/] <they used to> [/] they used to be alive (.) but little fishes don't eat them .", '*FAT: you better watch out for Uncle Vinny .', "*FAT: he's gonna come and shave all your hair off you know .", '*FAT: zzz .', '*CHI: zzz .', '*FAT: remember he told you ?', '*FAT: Vinny ?', '*FAT: huh ?', '*CHI: yeah .', "*FAT: he said I'm gonna shave all your hair off .", '*FAT: zzzzzoom@o .', '*FAT: zzz .', '*CHI: zzz .', '*FAT: better watch out !', '*CHI: zzz .', '*FAT: wants to give you a short hair+cut for the summer .', '*CHI: haha !', "*CHI: I willn't let (h)im .", "*CHI: I'll get my bite and [?] xxx if he tries to .", '*CHI: zzz .', '*FAT: nah .', "*FAT: nah you don't do that to Uncle [/] <to your> [>] Uncle Vinny you don't do that to anybody .", "*FAT: he's tryin(g) to help you .", '*CHI: zzz [<] .', '*CHI: I know that .', '*CHI: zzz [>] .', '*FAT: <you know what we should have <&d> [//] done [//] do> [<] ?', '*FAT: xxx [>] .', '*MOT: xxx [<][>] .', "*CHI: <no one gets me <because I> [/] <because I'm a> [/] because [/] <because I'm a big one> [/] because [///] no one gets me> [<] .", '*FAT: ssh !', "*CHI: <I'll> [/] I'll punch them right in the xxx (.) .", '*CHI: zzz .', '*CHI: I like punchin(g) people .', '*CHI: they punch me back .', '*CHI: zzz .', "*FAT: you like to play [!] though it's playin(g) [!] .", '*CHI: yeah .', '*FAT: alright .', '*CHI: and I like to punch too but people punch back at me +/.', "*FAT: yeah but you don't do that there you do it playin(g) you don't do it for real because it's not nice .", '*CHI: but Father listen .', '*CHI: when someone punched me [/] me back I had to punch him .', "*FAT: you shouldn't be punching period .", '*FAT: why [/] why do you want to punch ?', '*MOT: no if someone hits him he wants to punch .', '*MOT: xxx stand there xxx .', "*CHI: yeah that's <what I mean> [>] .", "*FAT: <yeah you don't> [<] stand there and let somebody beat on you neither but (.) naturally you defend yourself only if you have_to .", '*CHI: yeah !', '*CHI: I defend myself !', '*MOT: right !', "*FAT: but you don't go and hit somebody for nothin(g) .", '*MOT: no .', "*FAT: you don't do that .", "*FAT: it's not nice to hit people .", '*CHI: no no no .', "*CHI: I don't go around yellin(g) and hit people .", "*FAT: no that's bad men do that .", '*CHI: yeah !', "*FAT: you're not bad are you ?", '*CHI: nah !', "*FAT: you're a good boy .", "*CHI: yeah I'm a good boy .", '*CHI: xxx people punch me back I punch them back !', '*FAT: that a way .', '*FAT: zzz .', "*CHI: when another time when <he punched me I'll punch him back> [>] .", '*FAT: <Debbi what you wan (t)a do with all this stuff> [<] ?', '*FAT: <throw it away> [<] ?', "*CHI: <I> [/] <I> [/] <I give (th)em> [//] I'll give (th)em super punches (.) !", "*CHI: I'll punch him (un)til he dies there [?] .", '*CHI: he fell on the floor .', '*CHI: zzz .', "*CHI: I'll give him three four punches .", '*CHI: zzz .', "*FAT: you're not gonna eat that Sam ?", '*CHI: no .', '*FAT: give it to Dad .', "*FAT: I'll throw it out .", '*CHI: <&n> [//] I gonna eat this (.) .', "*CHI: don't do that !", '*CHI: I want to eat !', '*FAT: alright !', '*FAT: here it is .', "*CHI: I'm gonna eat french fries .", '*FAT: alright .', '*FAT: here they are .', "*FAT: there's plenty of (th)em .", '*FAT: here eat (th)em !', '*FAT: Daddy wants you to eat them .', '*FAT: see [<] them all look at them all .', '*FAT: go ahead eat them .', '*FAT: eat (th)em up !', "*CHI: <they're good>[<] .", '*CHI: thank you .', '*FAT: alright ?', '*CHI: I was eatin(g) my lunch .', "*FAT: I'd rather you eat them +/.", '*MOT: he loves (th)em .', '*MOT: he loves french fries .', '*FAT: than throw them away .', '*FAT: right ?', '*FAT: buddy ?', '*CHI: uhhuh .', '*FAT: huh ?', '*CHI: uhhuh .', '*FAT: alright .', '*CHI: Father .', '*FAT: what ?', '*CHI: keep that bag !', '*CHI: keep that bag here and come on down +...', '*CHI: I just want here for a little bit and (.) can you throw this away ?', '*CHI: &e uhhuh I wan (t)a take <a little more of my fish> [>] !', '*MOT: <I know you are Sabato> [<] .', '*MOT: no need to rush .', '*MOT: <Mommy will xxx> [>] .', "*FAT: <don't rush> [<] .", '*FAT: <take your time> [<] .', '*FAT: take you time .', "*FAT: (be)cause it's just [//] Mommy and Daddy are just gonna have a cup of coffee .", "*MOT: we're cleanin(g) the table <right now> [>] .", '*FAT: <and while> [<] .', "*FAT: we're havin(g) our coffee you can +/.", '*MOT: you finish .', '*FAT: you can finish eatin(g) .', '*CHI: xxx throw this [/] this away before we have coffee ?', "*FAT: you don't want it now ?", '*CHI: no .', "*FAT: well you can't have coffee .", '*CHI: no .', '*FAT: you can have milk .', "*CHI: milk (be)cause I'm just a little boy you know .", "*MOT: why don't you sit right there xxx .", "*MOT: I'm gonna put the coffee out Sabato .", "*CHI: I just take a little bit on my chick [?] <(be)cause> [//] just because I don't think it's good takin(g) all of them +...", '*MOT: Sabato listen to me +/.', '*CHI: <&so> [/] <&so> [/] something from the fish store ?', "*MOT: I can't [///] yeah .", "*MOT: I can't stress this enough .", '*MOT: put these socks on .', "*MOT: Sabato broke a piece of glass on the floor and I'm afraid he's goin(g) (t)a +...", '*MOT: you all done (.) ?', '*MOT: alright (.) .', '*MOT: xxx off .', '*FAT: hm: ?', '*MOT: please shut it [= taperecoder] off (.) .', "*MOT: we willn't waste the tape .", '*CHI: they do ?', '*FAT: what do they do ?', '*CHI: they [/] they [/] they put something on your sandwich and they go yucky@b puck@b yucky@b puck@b .', "*CHI: that's what they do (.) .", "*CHI: and then you can't eat your sandwich .", '*FAT: why ?', "*CHI: <&b> [/] because there's something in it .", '*FAT: who puts [///] what are they puttin(g) in it ?', "*FAT: do you know what they're putting in it ?", '*CHI: they puts <onion sour> [/] onion sour milk in it .', '*FAT: who does ?', '*FAT: what are you watchin(g) T V ?', '*CHI: no no no .', "*CHI: I saw some [///] this [/] this thing is (.) sandwich fire xxx and he can't steal .", '*FAT: oh .', "*CHI: so that's what they [/] they do .", "*FAT: <what's &a> [//] what's the baby doin(g) now ?", "*CHI: <&da she> [/] <&da she> [//] she's doin(g) doin(g) somethin(g) .", '*FAT: what ?', "*CHI: <I don't know> [//] I don't know what she's doin(g) (.) .", "*CHI: &-uh I know what the baby's doin(g) (.) !", "*CHI: she's watchin(g) T V Father ."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//remmt1.cha
HSLLD/HV1/MT//trumt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: you just leave that alone (.) and eat your supper okay ?', '*MOT: here .', '*CHI: Mom do we xxx +/.', '*MOT: you want milk or apple juice Chi ?', '*CHI: apple juice .', "*MOT: I don't know if there's any of those left [>] .", '*SS: <yeah there is> [<] .', "*SS: there're about four left .", '*SIS: yeah .', '*MOT: Chi had a couple today .', '*SS: this is too much Mot .', '*MOT: alright .', '*SS: so what am I supposed to drink ?', "*MOT: xxx you go to Hartley's tonight .", '*SS: can I come ?', '*MOT: probably not (un)til late .', '*SS: oh it is mom .', '*SS: pretty awesome .', '*SS: come on .', '*SS: xxx .', '*CHI: what ?', "*CHI: I don't like green .", '*SS: want anything to drink ?', '*CHI: huh ?', '*SS: xxx .', '*CHI: mom I gonna throw this in the rubbish .', "*MOT: just leave it there I'll get it later .", '*MOT: (.) Ss you like potatoes au_gratin@s:fra ?', '*SS: what ?', '*MOT: do you like the potatoes au_gratin@s:fra ?', '*SS: no .', '*SS: Mom .', '*SIS: &=cries .', "*MOT: Chi you don't like them either ?", '*CHI: nope .', '*SS: Ma , I tell +/.', '*SIS: &=cries .', "*SS: I tell everyone my middle name's <Patricia> [>] .", '*SIS: <&=cries > [<] .', '*SS: so everyone calls me <Patricia> [>] .', '*SIS: <&=fussing > [<] .', '*MOT: why ?', '*SS: (be)cause I like that name .', '*SS: they all call me Patricia .', '*MOT: xxx [>] .', '*CHI: <I want> [<] some Ss .', '*SS: yep .', '*CHI: give me some .', '*SS: please ?', '*CHI: please .', "*CHI: <that's> [>] [/] that's a big half .", '*SS: <want some> [<] ?', '*MOT: big half of what ?', '*SS: xxx .', "*SS: you don't even pour steak in it .", '*CHI: &=laughs .', '*SS: xxx .', '*CHI: yeah .', "*SS: Ma , what's this ?", '*SS: teriyaki ?', '*CHI: yeah .', '*CHI: yyy !', '*CHI: &=laughs .', '*CHI: teriyaki .', '*SS: make a little hole in it .', '*CHI: I made a big hole .', '*CHI: be careful .', "*MOT: here here's your napkin .", "*MOT: and here's yours .", '*SS: thank you .', '*CHI: what are you doing mom ?', '*CHI: press that thing .', '*MOT: nope just making sure .', '*MOT: you can hear your talking .', '*CHI: okay .', '*CHI: (..) them people did good to me .', '*SS: who ?', '*CHI: &-um (.) Debra and Michael .', "*SS: who's Debra and Michael , Ma ?", '*MOT: who did he say they did good to him ?', '*SS: yeah .', "*SS: who [/] who's Debra and Michael ?", "*MOT: that's xxx &-um (.) xxx study on little kids's talk .", '*SS: oh .', '*MOT: the way they talk and how they <xxx to him> [>] .', '*CHI: <for jobs> [<] .', '*CHI: a job .', "*MOT: yeah it's Chi's job .", '*SS: right .', '*CHI: &=laughs .', '*SS: xxx .', '*CHI: I xxx husband everything huh ?', '*SS: I could buy a husband .', '*MOT: what did he say ?', '*SS: he said I could buy a husband and everything .', "*SS: you don't buy one you just meet one .", '*SS: you [/] you meet a husband .', '*MOT: he means he could be a husband if he has a job .', "*SS: be the husband he <won't be a> [/] won't be a wife .", '*SS: a wife is a girl like mom .', '*SS: mom and dad ?', "*SS: dad's the husband mom's the wife .", "*CHI: dad's the husband and mom's the wife .", '*CHI: huh ?', "*CHI: dad's the husband and mom's the wife .", '*SS: mhm .', '*MOT: so what would that make you if you got married Chi ?', "*CHI: I don't know .", "*MOT: you're like dad so you'd [: you would] be a husband .", '*SS: mhm .', "*MOT: Ss's a girl like me so she'd [: she would] be a wife .", '*CHI: who you marrying this xxx ?', '*SS: mhm .', '*CHI: who else ?', '*SS: maybe .', '*MOT: want some more steak Ss ?', '*SS: yeah .', '*MOT: do you Chi ?', '*SS: maybe I will Chi .', '*CHI: okay .', '*SIS: &=cries .', "*MOT: Ss's not marrying anybody .", '*SS: mhm .', "*SS: Ma , I'm not staying in <your house> [>] +/.", "*MOT: <you better not> [<] think about it now you're only nine .", '*SS: why ?', "*MOT: what do you mean you're not <staying in my house> [>] ?", "*SS: (be)cause [<] you'd probably be just like (.) you're not going out until you xxx [>] .", '*SIS: <&=crying > [<] .', '*MOT: sit down Sis you want some more ?', '*SIS: yeah .', '*MOT: okay what do you want steak ?', '*SIS: yeah .', '*MOT: you have steak honey .', '*MOT: what do you want .', '*MOT: you all done ?', '*MOT: want something to drink ?', '*SIS: xxx .', '*MOT: Sis ?', '*MOT: you want something to drink ?', '*SIS: yeah .', '*MOT: say yes please .', '*SS: mom she can have some of this .', '*MOT: mm !', '*SS: Ma .', '*MOT: alright Ss I xxx .', "*CHI: that's all she gots@n .", '*SIS: &=babbles .', '*CHI: all she gots@n .', "*MOT: that's all she has !", '*SS: that gut is the stomach .', "*CHI: that's all she has .", "*CHI: that's all she gots@n .", '*CHI: has .', '*SS: has xxx gots@n .', '*MOT: I can give her apple [///] sit down Sis !', "*CHI: that's xxx here .", "*CHI: that's xxx here .", "*SS: that's not a <gut that's xxx> [>] .", "*MOT: <alright> [<] let's eat you guys .", '*MOT: sit down Sis <sit down> [>] .', '*CHI: <what your guts> [<] ?', '*SS: stomach .', '*MOT: your insides .', '*CHI: inside stomach .', '*CHI: <guts is [=! pretends to throw up]> [>] .', '*SIS: <&=babbles > [<] .', "*SS: <I don't like guts> [>] .", '*MOT: <anybody else want apple juice> [<] ?', '*MOT: instead of that fruit punch stuff xxx ?', '*CHI: yeah put it in there Mot .', "*MOT: later Chi when you're watching T@l V@l alright ?", "*MOT: xxx what's today ?", '*SS: Kirk Cameron +...', '*SS: Chi watches Kirk Cameron and (.) Head of the Class .', '*MOT: well you can watch Growing Pains before you go to bed you like that ?', '*MOT: do you want +/.', '*CHI: no !', "*SS: I don't like that that much .", '*MOT: well what do you want to watch ?', "*SS: I don't know .", "*CHI: I'm watching Michelle .", '*MOT: my what ?', "*SS: Michelle's not on tonight .", '*MOT: what show ?', '*SS: Michelle .', '*MOT: Michelle what ?', '*MOT: xxx .', '*MOT: Full House ?', '*SS: Full House yeah .', "*SS: it's on Friday .", '*SS: mom Friday get +/.', '*SS: Friday .', '*SS: Friday .', '*CHI: <Mom when people comin(g)> [>] ?', '*SS: <Mom is dad getting me L@l A@l Gear> [<] friday ?', '*MOT: who is ?', '*SS: dad ?', '*MOT: yeah .', "*SS: I can't wait .", '*SS: plus <I go> [/] I go to xxx ship anyway .', '*MOT: mhm .', '*MOT: <one more minute Sis> [>] .', '*CHI: <when you going> [<] ?', '*CHI: <when you going Ss> [>] ?', '*MOT: <sit down> [<] .', '*SS: Friday .', '*CHI: <Friday> [>] ?', '*MOT: sit [<] .', '*SS: xxx .', "*SS: me and Nanna that's all .", "*MOT: you're gonna fall with that spoon in your mouth .", '*CHI: I can come .', '*SS: Mom .', "*SS: did Nanna said it's only me and her , together .", "*SS: not [//] you can't come (be)cause it's my birthday .", "*MOT: you don't want him to ?", "*CHI: it's not your birthday now !", '*SS: <the second> [>] .', "*MOT: <yeah but we> [<] didn't have a party for her yet .", '*SIS: yeah &=fusses .', "*SS: it's my birthday .", '*SIS: &=babbles .', '*MOT: I knew it .', "*MOT: there's a stick back there with that stuff on it .", '*CHI: there is ?', '*MOT: yes I dropped one way down there .', '*MOT: way back of the stove .', '*MOT: alright go sit down I have_to get it out .', "*MOT: you don't want to get burned .", "*MOT: don't come up behind me Chi !", "*MOT: you'll burn me .", '*CHI: xxx .', '*MOT: see ?', "*MOT: sit down <&T> [//] Sis you're gonna get hurt .", '*CHI: xxx .', '*MOT: alright Chi go sit down this is real hot .', '*MOT: shoot !', '*CHI: do you want to get burned Ss ?', '*SS: unhunh .', "*CHI: I don't either .", '*SIS: xxx .', '*CHI: xxx you walk behind mommy xxx get burnt .', "*MOT: oh <you could've knocked Mamma after [?] that> [>] and I could've got burned too .", "*SS: <it's hot> [<] .", '*SIS: &=babbles .', '*CHI: (..) Ss today\xe2\x86\x91 the people Debra and Michael came today .', '*CHI: huh Mot ?', '*MOT: yesterday .', '*SIS: &=shrieks .', "*SS: how come I'm never here when they come Mot ?", "*MOT: they just started xxx they only came twice they're not gonna [: going to] come again until +...", '*CHI: Friday ?', "*MOT: Chi's in school .", '*MOT: no no sit down Sis .', '*MOT: uhoh .', '*CHI: hey !', '*CHI: they been coming at my school and everything .', "*SS: no they aren't .", '*CHI: yes they are coming at my school [=! frustrated crying] .', "*MOT: honey they are don't tease him !", '*MOT: sit down Sis !', "*SS: I'm not .", '*SS: so what .', '*CHI: <xxx at the school> [>] .', "*MOT: <Sis we're going to have something to eat> [<] .", '*SS: xxx .', '*CHI: xxx school .', '*SS: xxx .', '*CHI: xxx .', '*SS: xxx .', '*MOT: anybody want more steak ?', '*CHI: mhm .', '*SIS: &=shouts .', '*MOT: hm: ?', '*SS: nope .', '*SS: no thank you .', '*MOT: sit down Sis .', '*CHI: xxx a napkin .', '*MOT: Sean is a grouchy boy today .', "*MOT: he's teething he's in pain .", '*SIS: &=shouts .', "*SS: <where's the> [//] Mot [!] where's the xxx have you found it yet ?", '*MOT: yep .', '*SS: where was it ?', '*MOT: it was on my bureau remember ?', '*SS: yeah but remember [/] remember you lost it again ?', '*MOT: no I got it .', '*MOT: oh !', '*MOT: I forget where it was when I lost it I think in my blanket xxx .', '*SS: probably (.) like (.) (be)cause I remember you put it under the covers (.) like xxx .', '*MOT: Mom look at her .', '*SS: come here .', '*MOT: it was in my pocketbook xxx [///] hey !', '*MOT: sit down !', '*MOT: you want to get out\xe2\x86\x91 come on .', '*SIS: yeah !', '*MOT: lemme [: let me] get her xxx .', '*SS: xxx .', '*CHI: xxx .', '*MOT: come on honey wash it off over here xxx .', '*CHI: 0 [=! makes weird noises] .', '*MOT: Ss will you check Sean for me ?', '*MOT: quickly ?', '*MOT: uhuh Sis .', "*MOT: don't touch theirs you're all done eating come let me wash you off .", '*CHI: &=laughs .', '*MOT: you ready to go up to the crib I see huh ?', '*SIS: &=cries .', '*MOT: alright come on .', '*MOT: you want a baba [: bottle] ?', '*SIS: &aw !', '*MOT: what do you mean &aw ?', '*MOT: oh I love you come on !', '*SS: xxx .', '*CHI: look how small she is mom .', '*SS: mom (.) his &-um (.) penis is &=giggles is stuck [?] in the blanket +/.', "*MOT: Ss hurry up he's on his head .", '*MOT: oh .', "*SS: <he's like> [//] he was putting little things over his face and he was crying .", "*MOT: that's not funny Ss .", "*SS: <you couldn't even> [//] &=laughs he looked like he was dead he was [=! dissolves into laughter] .", '*CHI: like this ?', '*SS: a crying little demon .', "*MOT: I don't know why you laugh over things like that .", '*SS: it was funny .', '*MOT: are you done eating Chi ?', '*CHI: no .', '*MOT: look at his back where he fell today .', '*SS: let me see ?', '*MOT: tell Ss what happened ?', '*CHI: I fall down the <stairs xxx> [>] .', '*MOT: <<Sis> [//] Ss> [<] watch Sis while I check Bro .', '*CHI: on a bike .', '*SS: down a bike (.) down the stairs .', '*CHI: yeah .', '*SS: oh .', '*CHI: I was flipping over ?', '*CHI: and I banged my [/] my back on the stairs .', '*SS: you did ?', '*CHI: yeah .', '*SS: oh .', '*CHI: it hurt .', '*CHI: and right here too look_it .', '*MOT: no no Sis .', '*CHI: and my two arms right here too .', '*CHI: three .', '*CHI: hurt .', '*CHI: even hurt .', '*CHI: xxx hurt in the fire .', "*SS: get out of my food Mot she's eating my food .", '*MOT: Ss ?', '*SS: what ?', "*SS: Mom she just go to eat her (.) while she's eating now she's eating mine .", '*MOT: Sis .', '*MOT: Sis sit down .', "*MOT: it's time for bed .", '*MOT: say good night to the kids .', '*CHI: good night Sis .', '*SIS: 0 [=! piercing shriek of protest] .', '*MOT: xxx .', '*MOT: say good night Ss .', '*MOT: Sis ?', '*SS: say Ss .', '*SS: say <Ss> [>] .', '*MOT: <say good> [<] night .', '*SIS: xxx .', '*CHI: Sis .', '*SS: say xxx .', '*MOT: Ss I need you to run upstairs quickly for me and get her xxx .', '*SS: the xxx down here .', "*MOT: hey don't there's a xxx .", '*MOT: just go upstairs and get them please .', '*MOT: xxx and I want that one .', '*MOT: say good night to Chi Sis .', '*CHI: night !', '*SIS: xxx .', "*CHI: I can't hear the people Mot .", '*MOT: what people ?', '*CHI: &-uh people in there .', '*MOT: what in that radio ?', '*CHI: yeah .', "*MOT: you can't hear them they can hear you .", '*MOT: let me see this you .', '*MOT: she wants the ketchup she wants to eat .', '*CHI: &=laughs .', '*MOT: want some corn ?', '*CHI: yes .', "*MOT: thank you watch out for her Ss watch her back she's gonna [: going to] fall off .", '*SS: get out of there .', '*SIS: &=screams .', "*MOT: instead of making her yell you can be nice to her until I've made her bottle Ss !", "*MOT: you're so selfish you're not even gonna finish what you have on your plate .", "*MOT: why can't you just let her have a little bit ?", "*MOT: she's only a baby .", '*CHI: xxx got a stereo .', '*SS: what ?', '*CHI: I stick it on my picture .', '*SS: oh yeah .', '*CHI: xxx .', '*SS: mhm .', '*CHI: xxx .', '*CHI: I lost my paintbrush .', '*SS: what ?', '*CHI: I lost my paintbrush .', '*SS: huh ?', '*SIS: xxx .', '*SS: what ?', '*CHI: I lost my paintbrush !', '*SS: oh .', '*SS: xxx .', "*CHI: I don't know .", '*CHI: xxx [>] .', '*SIS: xxx [<][>] .', '*SS: xxx [<] .', '*SS: put them in .', "*SS: alright Mot I don't want any alright ?", "*SS: Mom she's eating them all like she's taking a bite out of one of +/.", '*MOT: out of what the cookies ?', '*SS: yeah .', "*MOT: take them away from her I don't want her to have those .", '*MOT: here Sis look what I got for you .', "*MOT: <come on let's go to sleepy bye you're probably tired> [>] .", "*CHI: <she thinks she's not going to bed> [<] .", "*MOT: it's a late supper .", '*CHI: xxx taking a nap .', '*SS: &=laughs .', "*CHI: when's dad coming back ?", '*SS: the cookie was sticking right ?', "*MOT: I don't know he hadta [: had to] go do something .", '*MOT: say good night to the kids .', '*SS: xxx .', '*SIS: bye !', '*MOT: bye .', '*SIS: bye .', '*SS: xxx .', '*CHI: Mom I have_to go the bath+room .', '*MOT: okay .', "*CHI: I'm getting a drink of &-um apple juice from (.) xxx .", "*CHI: look out Ss I'm going .", '*SIS: &=cries .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//trumt1.cha
HSLLD/HV1/MT//jusmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*MOT: okay Chi say your grace okay ?', '*MOT: for +...', '*CHI: for .', '*MOT: health +...', '*CHI: health .', '*MOT: and +...', '*CHI: and +...', '*MOT: strength +...', '*CHI: strength .', '*MOT: and +...', '*CHI: and +...', '*MOT: daily +...', '*CHI: daily +...', '*MOT: food +...', '*CHI: food +...', '*MOT: we +...', '*CHI: we zzz .', '*MOT: praise +...', '*CHI: praise .', '*MOT: thy +...', '*CHI: thy .', '*MOT: name +...', '*CHI: name .', '*MOT: oh lord +...', '*CHI: oh lord .', '*MOT: amen .', '*CHI: amen .', '*MOT: straighten [?] up .', '*CHI: xxx [>] .', '*MOT: for [<] health and strength +...', '*CHI: for health and strength .', '*MOT: and daily food +...', '*CHI: and daily food .', '*MOT: we praise thy name +...', '*CHI: we praise thy name +...', '*MOT: oh lord +...', '*CHI: oh lord .', '*MOT: amen .', '*CHI: amen .', "*CHI: I'm not gonna sing anymore of that .", '*MOT: come on say it .', "*CHI: but I <don't feel good> [>] .", '*MOT: <okay eat now> [<] !', '*MOT: okay you can eat now .', '*CHI: zzz .', "*CHI: know why I can't say anymore because I don't feel good my belly's hurting .", '*MOT: do you like that sandwich ?', '*CHI: uhhuh .', "*MOT: it's nice ?", '*CHI: uhhuh .', '*CHI: real nice .', "*CHI: you're the sandwich girl [?] .", '*MOT: what do you have for lunch today ?', '*CHI: at where ?', '*MOT: at school .', "*CHI: I wasn't there .", '*MOT: hm: [>] ?', "*CHI: <I> [<] wasn't at school .", '*CHI: we was eating in the plane .', '*MOT: in the what ?', '*CHI: in the plane [!] .', '*MOT: what kind of plane ?', '*CHI: a real plane like we did xxx a long time ago when we was going to Disney World .', '*MOT: when did we go to Disney World ?', '*CHI: long time ago in December .', "*MOT: I don't remember it .", '*CHI: it was in December .', '*MOT: yeah ?', '*CHI: yeah .', '*CHI: zzz .', "*MOT: what's the matter with you ?", "*CHI: <my st(omach)> [//] my belly's hurting me and my belly is telling me to [/] to [/] to don't eat no more food .", '*MOT: okay .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//jusmt1.cha
HSLLD/HV1/MT//rosmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: keep it where everybody can reach !', "*SIS: well we're not supposed to be able to reach yet .", '*CHI: dad .', "*SIS: I got some translucent pressed powder today at Spag's .", '*FAT: you got some what ?', "*SIS: translucent pressed powder today at Spag's .", '*FAT: Chi will you set that down before it spills ?', '*CHI: I have_to put it where everybody can reach it .', '*FAT: oh alright .', '*SIS: how does it look ?', '*CHI: I know mom can reach it too .', "*FAT: oh I'm sorry I was paying attention to what she was saying translucent what ?", '*SIS: pressed powder .', '*FAT: pressed powder ?', '*FAT: and where what xxx what xxx is this eye shadow ?', "*SIS: no <it's> [/] it's skin colored powder .", '*SIS: xxx put it on my face and it covers it .', '*SIS: xxx covers your zits and stuff .', "*FAT: well if it's skin colored how am I supposed to know how it looks ?", '*SIS: (.) well gee !', "*SIS: can't xxx nothing xxx !", '*FAT: it looks marvelous !', "*FAT: it looks wonderful you're so radiant xxx just like +...", "*FAT: what's the name of that pig in &=laughs Charlotte's Web &=laughs ?", '*SIS: I do not look like a pig !', '*CHI: yeah xxx she not Wilbur .', "*FAT: Wilbur that's his name .", '*MOT: incomplete table setting my dear .', '*FAT: yeah <who was supposed to> [/] who was supposed to xxx ?', "*MOT: well when I say set the table xxx I don't mean +...", '*FAT: xxx said (.) did you say set the table ?', '*SIS: she said put the plates xxx I did xxx .', '*FAT: that was probably just to get you started .', "*FAT: is there anything else you'd like , Ma ?", '*MOT: what ?', '*FAT: I suppose all the condiments etcetera .', '*MOT: well napkins .', '*FAT: napkins .', "*FAT: hey don't &-uh fill up on black olives now okay ?", "*CHI: I won't .", "*CHI: they're almost fat .", "*FAT: that's enough for a little while .", '*MOT: come on save some for me .', '*CHI: I just had black olives .', '*CHI: (.) how can I wear (th)em ?', '*MOT: how can you <wear (th)em &=laughs > [>] ?', '*FAT: <how can you &=laughs wear (th)em> [<] ?', '*CHI: mommy !', '*CHI: xxx food .', '*FAT: so the olives are just black olives xxx .', '*CHI: I like black olives in pasta salad dad .', '*FAT: okay .', "*CHI: so that's the truth .", '*CHI: (.) xxx .', '*FAT: steak sauce .', "*SIS: xxx it's supposed to set your makeup .", '*FAT: where are you supposed to set it xxx xxx ?', '*CHI: no .', "*SIS: set it on our face <so it doesn't wear off> [>] .", "*CHI: <no mommy> [<] can't reach it from there .", '*SIS: <well pass it to mom> [>] .', "*FAT: <&w well we'll> [<] pass it all she has to do is ask .", "*MOT: mom's gonna (.) dish out the pasta salad for you guys .", '*MOT: xxx here .', '*FAT: alright we need anything else ?', '*FAT: knives probably .', '*MOT: get yourself a drink .', '*MOT: knives for steak for <you all> [>] .', '*FAT: anybody [<] else need knives besides me ?', '*MOT: me steak knives .', '*FAT: okay .', '*FAT: you cut with your fingers xxx ?', "*SIS: I'll use my fork xxx .", '*MOT: xxx put your leg down honey .', '*CHI: mommy +/.', '*SIS: xxx .', '*CHI: +, I want (.) more (.) milk please .', "*MOT: yeah I'll get you some .", '*CHI: I like the orange mommy .', '*MOT: oh the orange ones too ?', '*FAT: hello cuddly@wp poo@wp .', "*CHI: don't put any green ones .", '*MOT: no just orange and white there you go .', '*FAT: crack a window get a little fresh air xxx .', '*SIS: not so much cold air .', '*SIS: ah !', "*SIS: oh I'm right against the window .", "*FAT: it's not cold .", '*SIS: xxx .', '*FAT: xxx .', '*CHI: &-um .', '*FAT: xxx .', '*CHI: &-um .', '*FAT: xxx [>] ?', '*SIS: <did you> [<] +...', '*SIS: dad !', "*MOT: xxx I'll get it xxx .", '*SIS: dad did you have that emergency meeting at the library ?', '*FAT: yeah we did !', "*SIS: what'd they say ?", '*FAT: this is xxx !', '*SIS: xxx ?', "*FAT: wait a minute I'll tell ya [: you] .", "*FAT: (.) well I don't know if you know the story of what's going on in the last day or two .", '*SIS: well I heard what you told mom last night .', '*FAT: Govenor Dukakis is slashing the state budget .', '*SIS: I saw it on the news report .', "*FAT: well according to what the head honcho at the library said (.) &-um the Govenor cut the state's aid to the cities and towns .", '*FAT: the state gives money to the cities and towns (be)cause xxx by two hundred and ten billion dollars .', "*FAT: and Worcester's share of that is about eleven million dollars .", "*FAT: so the city manager called in all the department heads like the head chief xxx head of the library and all that stuff and said &-um we're going to have_to make some cuts .", '*FAT: he wanted them by Monday noon time xxx three days from now +...', '*FAT: &-uh to submit a new budget and to tell him what services they provided and how much those estimated services cost .', "*FAT: and the cuts that are going to be made will probably be personnel cuts because they don't feel that they can cut xxx that much more in way of equipment and stuff like that .", '*FAT: &-um but everybody would feel the cuts .', "*FAT: lower xxx no one place would be singled out xxx library &-uh police and fire department probably won't be exempt .", "*FAT: &-uh it's not clear whether everybody would feel the cuts equally .", "*FAT: &-um so the particular place that I'm funded under is funded directly by the state but it goes through the city .", "*FAT: we've gotten our funding but <it may not> [//] that may not protect my job .", '*FAT: and (be)cause the city (.) xxx decides who gets money for what where .', '*FAT: &-um (.) so (.) xxx picture is looking grimmer .', '*FAT: you know I could come back from vacation and find a computer xxx letter in my paycheck .', "*FAT: (be)cause they're gonna try to do this in the next few weeks .", '*FAT: (be)cause the sooner they can do it the more over the year they can spread it out over if they wait six months then they have_to make a big cut xxx last xxx .', '*CHI: mom .', '*MOT: xxx .', "*SIS: that's for me right ?", '*MOT: yep .', '*MOT: what does Chi want xxx [>] you want steak or chicken Chi .', '*FAT: so [<] !', '*CHI: I want chicken .', '*FAT: he asked if anybody had any questions and everybody just sat there .', '*MOT: honey use your fork next time .', '*FAT: stunned to absorb <the news> [>] .', "*CHI: <I don't want> [<] steak or chicken I just want xxx .", '*FAT: no <you have_to have a little meat> [>] .', '*MOT: <you have_to have one> [<] now what would you xxx .', '*SIS: <what would you do if they cut your> [>] job ?', '*CHI: <I want chicken> [<] .', '*CHI: chicken &-um chicken <with the pasta salad> [>] .', '*FAT: <collect unemployment> [<] unless I found another one .', "*FAT: hopefully I'd find another one hopefully I'll find another one before they cut it .", '*CHI: I want some steak too .', '*MOT: okay you can have both .', '*CHI: I have a xxx .', '*FAT: xxx begin to search <more seriously> [>] .', '*CHI: <I want a> [<] cucumber <right now> [>] .', '*MOT: <oh cucumbers> [<] are good .', '*SIS: so xxx give you <notice before they cut the jobs xxx> [>] couple of weeks ?', '*CHI: <I want a cucumber right now> [<] .', '*FAT: &-um yeah probably something like two months .', "*FAT: although if they want to make these cuts as soon as possible I don't know (.) to what extent they think (.) they're gonna [: going to] try to make another xxx possible <because (.) they maybe just xxx> [>] .", '*MOT: <or they can just (.) give you xxx job> [<] xxx +...', "*FAT: I mean it's not unheard of .", '*MOT: see you later .', '*FAT: you get paid on Wednesday and you take the last xxx .', '*CHI: what ?', '*FAT: what ?', '*CHI: you tell me what happened ?', "*FAT: what happened was the city doesn't have as much money .", '*CHI: no tell me the rest .', '*CHI: what you told Sis .', '*FAT: oh I am .', "*FAT: the city doesn't have as much money and so they have_to look to see how they can save money .", "*FAT: one of the ways they may try to save money is by taking people's jobs away .", "*FAT: which means that that person wouldn't have a job .", "*FAT: I haven't worked there very long and so my job might be one of the ones that xxx taken away .", '*FAT: xxx have_to find a new job .', '*CHI: so you do ?', "*FAT: I don't know yet that I do but I may have_to so I've been starting to look in the paper for other jobs .", '*CHI: you want an easier job ?', '*FAT: &=laughs that would be nice .', "*FAT: I want a job that's interesting to do and that pays me as much as I make now or more .", '*CHI: 0 [=! chokes and coughs] .', '*FAT: &-um you okay ?', '*SIS: be president .', '*FAT: of what ?', '*SIS: of the United States .', "*FAT: I wouldn't want that job .", '*SIS: xxx hundred thousand dollars a year .', "*FAT: that's <not very> [>] [//] that's not very much .", '*SIS: <xxx famous> [<] .', '*SIS: more than your making now &=laughs .', "*FAT: for all [///] well that's true .", '*FAT: still not very much for all the headaches you have_to put up with .', '*SIS: &-um .', "*FAT: I mean there're company presidents who make four times that amount and do half <as much work> [>] .", '*CHI: <I wish I> [<] (.) could have <a different school xxx> [>] .', '*SIS: <you could be a C_E_O of A_T_T > [<] .', '*CHI: I already go to .', "*FAT: what's that ?", '*CHI: I wish I had a different school than I already go to .', '*FAT: why ?', '*CHI: (be)cause .', '*FAT: because what ?', '*CHI: (be)cause .', '*FAT: did something happen at school today ?', '*CHI: yeah .', '*FAT: what happened ?', '*CHI: well (.) Jeffery cried a lot xxx outside xxx .', '*FAT: oh how come he was crying so much ?', '*CHI: (be)cause he wanted a bike and when he got on the bike he still cried .', '*FAT: &=laughs maybe Jeffery was having a bad day .', '*FAT: would you not tear your napkin up like that ?', '*CHI: no .', "*CHI: Jeffery wasn't having a bad day .", "*CHI: he's having a good day but he cried still (be)cause Becky and xxx go on a bike .", '*CHI: (be)cause xxx went (.) last time he broke a bike .', '*FAT: oh !', '*FAT: how did he break the bike ?', '*CHI: well when he pedaled it real fast like +...', '*FAT: &-um .', '*FAT: and he broke it ?', '*CHI: yeah .', '*CHI: he broke it xxx it was just real big .', '*FAT: hm: .', "*FAT: so they didn't want him to go on a bike this time (be)cause he broke one last time .", '*CHI: xxx <go to the bath+room> [>] .', "*SIS: <so how come you don't want to go to your school anymore because of that> [<][>] ?", "*FAT: <you don't have any xxx> [<] ?", '*CHI: well (be)cause he give me a headache .', '*SIS: oh &=laughs ?', '*FAT: but you have good days too ?', '*CHI: yeah .', '*FAT: you had a good day yesterday right ?', '*CHI: yeah .', "*SIS: wouldn't you miss all your friends ?", '*CHI: huh ?', "*SIS: wouldn't you miss Danielle ?", "*CHI: xxx Danielle's there !", "*FAT: well if you didn't go there you wouldn't see Danielle .", '*CHI: go where ?', '*FAT: to your school .', '*CHI: (.) then if I go to college and she goes to college then +/.', '*SIS: college &=laughs ?', '*CHI: &-um .', '*FAT: sure they might wind up going out together and going to college together .', '*SIS: in twenty years &=laughs !', '*FAT: well .', '*CHI: and then I can see her at college .', '*FAT: you could ?', '*FAT: maybe you will grow up and you and her will go to the same college .', '*SIS: xxx talking about &co college already .', '*FAT: hey never hurts to plan ahead .', '*MOT: everybody probably goes someday right ?', '*CHI: &-um hm: .', "*MOT: xxx everybody xxx a lot of people don't .", '*CHI: I like college .', '*CHI: I know about college .', '*MOT: &-um hm: .', '*MOT: talk about (.) going to school at daycare ?', '*MOT: talk about going to bigger schools ?', '*SIS: can I have the other piece of chicken ?', '*CHI: yeah .', "*SIS: it's good chicken I like it .", '*MOT: xxx .', '*CHI: xxx .', '*FAT: can I have the pasta salad xxx ?', '*SIS: I made it .', '*FAT: well !', '*FAT: by now you should be an expert at it .', '*MOT: you want some steak Chi ?', '*CHI: hm: ?', '*MOT: you want a piece of steak ?', '*CHI: yeah I said that in the first place .', '*MOT: okay .', "*FAT: (..) honey did I hear something about you're ushering tonight or something ?", '*MOT: Leon .', '*FAT: hey what ?', '*FAT: wait a minute excuse me .', "*SIS: will you shut that window that he opened\xe2\x86\x91 I'm dying .", '*FAT: what ?', '*FAT: oh thank you .', '*FAT: left the car lights on .', '*CHI: hm: ?', '*MOT: daddy left the car lights on .', "*MOT: that's what Leon was calling you about .", "*CHI: oh I thought he's going to take to the fire .", '*MOT: the fire &=laughs ?', '*CHI: at his house .', '*CHI: I (.) xxx at his house .', '*CHI: xxx on .', '*MOT: well not in the rain no .', '*CHI: I know .', '*CHI: tomorrow can we ?', "*MOT: maybe if it's a sunny day ?", "*CHI: it's gonna be a school day tomorrow ?", "*MOT: no it's not school day it's Saturday .", "*CHI: I know it's gonna be Saturday tomorrow .", '*FAT: xxx .', '*SIS: excuse me &=laughs ?', '*CHI: I want some steak sauce .', '*FAT: I xxx lights on .', '*CHI: we know it .', "*FAT: well if you knew that why didn't you tell me so I wouldn't leave them on ?", '*SIS: well we knew it when we heard Leon .', '*FAT: oh .', '*MOT: careful when you pour that .', '*CHI: why ?', '*FAT: it comes gushing out .', '*CHI: gushing out ?', '*FAT: yeah big bunch of oil .', '*FAT: want me to help you ?', '*SIS: like a river .', "*FAT: here you're taking too much .", '*FAT: &n now take it .', '*CHI: xxx .', '*MOT: hm: ?', '*CHI: xxx my pasta ?', '*FAT: naw .', '*CHI: hope not .', '*CHI: (be)cause I hate to have it &=laughs .', '*CHI: well better be eating .', "*FAT: anyway so I hear you said something about you're &-um ushering tonight ?", '*SIS: yes I am .', '*FAT: what time to you have_to be there ?', '*SIS: seven .', "*FAT: and what time you figure you'll get out ?", '*SIS: about same as last time .', "*FAT: what about ten o'clock ?", '*SIS: yeah .', '*SIS: (..) we <may be> [<] [>] earlier say xxx but there was a long xxx .', "*FAT: well we'll come up about nine thirty I don't mind sittin(g) there (.) reading by the lamplight xxx .", "*FAT: &-um steak's good .", '*CHI: yeah it is .', '*FAT: which play is this ?', '*SIS: guys and dolls .', '*CHI: guys and dolls ?', '*CHI: see ?', '*MOT: &=laughs .', '*CHI: and blankets .', '*FAT: and blankets &=laughs ?', '*CHI: &=laughs .', "*SIS: no it's about guys I mean men and the women I guess I don't know .", '*MOT: girls and boys .', '*FAT: guys is a slang word for men and dolls is a slang word for women .', '*SIS: well it was !', '*SIS: xxx ?', '*FAT: still is in some countries .', '*CHI: &-uh but there is boy dolls &=laughs .', '*MOT: &-um .', "*MOT: you don't have any boy dolls hm: ?", '*MOT: well you have one boy doll .', '*CHI: xxx two .', '*FAT: xxx the one that has the telephone and the cookie attached ?', '*CHI: oh .', '*CHI: and the teddy bear attached .', '*MOT: &-um hm: .', '*CHI: the hat attached the hair attached xxx .', '*MOT: &=laughs .', "*SIS: I'm gonna go out to all of these plays and be cultured .", '*CHI: &=laughs .', '*CHI: be cultured ?', "*MOT: can't hurt .", "*CHI: no it can't .", '*CHI: xxx where are you ?', "*CHI: I can't see wise guy I can't see xxx [>] .", "*SIS: <do you know I'm sleeping over Jessica's house> [<] Sunday ?", '*FAT: xxx .', "*CHI: why can't I see through mine ?", "*FAT: because you've got your hair over your eyes &=laughs .", '*CHI: &=laughs .', '*MOT: xxx .', "*FAT: what'd you say ?", '*CHI: my hair xxx be in <my eyes> [>] .', "*SIS: <xxx do you know I'm> [<] sleeping over Jessica's house on Sunday ?", "*CHI: hey I can't xxx [>] .", "*FAT: <I thought I heard something to that effect Tuesday> [<] I wasn't sure when .", "*MOT: keep your <hair out of your face while you're eating> [>] .", "*SIS: <xxx she's she's picking me up xxx> [<][>] .", "*FAT: <<you're picking> [//] you're> [<] sleeping over there Sunday night ?", '*SIS: yes .', '*FAT: oh okay .', "*SIS: I'm going xxx .", '*FAT: oh .', '*CHI: xxx .', '*FAT: well gee you make plans for Saturday ?', "*CHI: dad you don't xxx here .", '*SIS: not until five .', "*FAT: well don't make any .", '*SIS: why ?', '*CHI: because .', '*SIS: well yeah I have_to shop for my new shirt .', '*CHI: yeah xxx .', "*FAT: wouldn't hurt you to spend a little time with the family .", "*SIS: mom I'm <spending time with the family> [>] .", '*CHI: xxx [<] .', '*FAT: &=laughs at dinner time ?', '*CHI: xxx up .', '*MOT: thanks for reminding me I have_to do that .', "*CHI: I'm going to go to dance school so we have +/.", '*MOT: maybe tomorrow we can call okay ?', '*CHI: yes but when will I be at dancing school <I wanna learn how to dance> [>] .', "*SIS: xxx I put those <napkins &=laughs xxx> [<] I can't eat it all .", '*CHI: I wanna learn how to dance .', '*MOT: xxx .', '*CHI: I wanna learn how to dance .', "*FAT: don't slide your chair around okay ?", "*CHI: I'm not !", '*FAT: who is ?', '*SIS: &=burps <excuse me &=laughs > [>] .', '*CHI: xxx [<] .', '*FAT: not you ?', "*SIS: <I'm full of> [>] burps tonight .", '*FAT: <not me> [<] ?', '*FAT: the little not me man is he sliding your chair around ?', '*CHI: xxx .', "*CHI: that's xxx [<] [>] +/.", '*SIS: <I had a long one> [<] earlier today I was like [=! gutteral retching sound] .', "*FAT: (.) that's real cultured .", '*SIS: &=laughs .', "*SIS: I'll do that right in the middle of xxx [=! gutteral retching sound] .", "*CHI: I'm full .", '*MOT: you are ?', '*CHI: are we gonna have dessert ?', "*MOT: I don't know what's for dessert ?", '*CHI: xxx .', '*MOT: oh .', '*CHI: we have leftover peaches [>] .', '*FAT: <what time> [<] you get up today ?', '*CHI: huh ?', '*SIS: (a)bout eleven .', '*FAT: eleven ?', '*MOT: &=laughs .', '*MOT: xxx .', "*FAT: what'd you think this is ?", '*SIS: a bed .', '*MOT: xxx .', '*CHI: &=humming .', '*FAT: some kind of vacation or something ?', '*SIS: yes .', '*SIS: Friday is my day of <rest I get to do what I want on Fridays> [>] .', "*MOT: <Chi mommy's not done> [<] go sit in your chair .", "*FAT: yeah but you don't get to stay up late Friday night because you didn't get up until eleven o'clock in the morning .", '*SIS: <why not\xe2\x86\x91 I wanna watch Arsenio Hall> [=! facetiously whining] .', '*FAT: because I said so .', '*SIS: <then why did you say so> [=! playful whining] ?', '*SIS: Arsenio <Arsenio Arsenio> [>] Arsenio .', "*FAT: <because then you won't be able to get up tomorrow> [<] .", '*FAT: Chi !', '*FAT: would you sit down and finish eating please ?', "*CHI: I'm full !", "*FAT: you're full ?", '*FAT: well can you sit and keep us company ?', "*SIS: I haven't seen Arsenio in <like a million years> [>] so I want to see it .", "*CHI: <I'm tired> [<] .", "*FAT: xxx I'm trying to xxx what ?", "*CHI: I'm tired .", "*FAT: you're tired ?", '*SIS: me too &=laughs .', "*FAT: I don't remember either one of you asking to be excused .", '*CHI: can I be excused ?', '*SIS: can I be excused &=laughs ?', '*FAT: yes yes .', '*CHI: xxx .', '*FAT: well so much for the dinnertime conversation .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//rosmt1.cha
HSLLD/HV1/MT//seamt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*FAT: how does it taste good ?', '*CHI: mhm .', "*FAT: that's good .", '*FAT: <xxx [/]> [>] .', '*CHI: what [<] are we having (30.) ?', '*FAT: zzz .', '*MOT: xxx the other one in ?', '*MOT: the other one .', '*FAT: yeah .', '*CHI: gi(ve) me a cup of xxx [>] .', "*MOT: <don't> [<] spill that please .", '*CHI: gi(ve) me a cup of xxx [>] .', '*FAT: yes hi here you go (17.) .', '*CHI: right in the water [?] (20.) .', '*CHI: put a cover on it .', '*MOT: okay [>] .', '*CHI: xxx [<] cover .', '*CHI: so we both xxx xxx cover .', "*MOT: okay how's that .", '*CHI: put that cover there .', '*MOT: that good ?', '*MOT: there you go .', '*CHI: put it [?] down for me [?] .', '*CHI: put it [?] down for me [?] .', '*FAT: zzz (23.) .', "*FAT: hey [!] you almost knocked this over watch what you're doing .", '*CHI: he [= TV character] talks (.) Donald Duck (.) .', "*CHI: I'm gonna move this back a little .", '*CHI: alright (12.) .', '*FAT: zzz (12.) .', '*SIS: zzz (.) .', '*MOT: come on .', '*MOT: come on .', '*MOT: what story you have there ?', '*MOT: xxx xxx remember ?', "*MOT: at Bradley's ?", '*MOT: xxx something .', "*MOT: I'm gonna go there .", '*SIS: xxx !', '*MOT: zzz .', '*FAT: this [= TV scene] is nineteen thirty (20.) .', "*CHI: who's this (16.) ?", '*CHI: xxx xxx up (10.) .', '*MOT: Mickey Mouse [!] huh ?', '*MOT: Mickey Mouse !', '*CHI: xxx there .', '*MOT: Chi sit down and eat please (14.) .', '*MOT: give her the Disney book .', '*MOT: she can have it .', "*CHI: I'm looking [!] at it .", "*CHI: I'm looking at it .", '*FAT: what are you doing ?', '*FAT: god [!] he puts the book down so she can rip them .', '*MOT: go pick it back up and give her the Disney book .', '*CHI: Ma , I did [!] .', "*FAT: no [!] that's the Disney book right there !", "*FAT: go see if she's getting it get (th)em away from her (.) .", '*MOT: come on .', '*FAT: pick up the books right undernea(th) her and put (th)em up there too leave (th)em there !', '*FAT: pick up the books undernea(th) her arm .', '*FAT: put (th)em up there .', "*CHI: I can't !", "*FAT: oo[!] don't you wan (t)a crack [!] him ?", '*FAT: move her out of the way !', "*MOT: no I'll do it okay .", '*FAT: give him a back hand [>] !', '*MOT: <are you> [<] finished eating ?', '*MAL: just did xxx .', "*MOT: it doesn't matter if she ruins this <xxx> [>] .", '*FAT: xxx xxx [<] said she could have xxx .', '*MOT: here .', '*MOT: go ahead xxx <xxx [/]> [>] .', "*FAT: <go back> [<] to your room after you eat (be)cause you're punished for saying no to your mother .", '*FAT: eat that sandwich (20.) !', '*MAL: Chi all you had to do was pick up your sister and move her out of the way .', '*MAL: you do it all the time .', "*CHI: that's a Disney book .", "*FAT: that's the book mommy wants to let her play with right ?", '*CHI: yeah (11.) .', '*FAT: you got xxx too huh ?', '*MOT: hi pretty baby .', '*MOT: hello da [: there] (10.) .', '*CHI: zzz (.) .', '*CHI: she threw [?] <the book> [>] .', '*MOT: xxx xxx .', "*MOT: <I don't need that> [<] I got ta +/.", '*CHI: <Dad or Mommy> [>] .', '*MOT: <xxx xxx> [<] .', '*MOT: excuse me (.) ?', "*MOT: she's allowed to play with that .", '*MOT: xxx a book .', "*MAL: she's [= T.V.] a good actress Jane Alexander ?", '*MOT: when you were a little baby you used to play with books all [!] the time .', "*CHI: I'm playing with them all .", '*CHI: I played with them +/.', '*MOT: she played Eleanor Roosevelt ?', '*MOT: did she ?', '*FAT: huh ?', '*MOT: she played Eleanor Roosevelt (.) ?', "*FAT: she's the one that does the Blue Cross commercials for Massachusetts .", "*FAT: she's from [!] Massachusetts (.) .", "*MAL: that's right (19.) .", '*CHI: xxx (.) please can I have +/.', '*FAT: <xxx xxx [/]> [>] .', "*MOT: <eat your sandwich> [<] that'll be your third cup I want you to eat [!] too .", '*MAL: is that is that Irene Cara ?', '*MOT: think so .', '*CHI: xxx .', '*CHI: xxx .', '*MOT: quit teasing (11.) .', "*CHI: I'm not teasing !", '*CHI: zzz .', "*MAL: they're robbing him [= T.V. scene] ?", "*FAT: I don't know .", '*MAL: xxx [>] .', "*FAT: xxx [<] somebody's book .", "*MOT: they're checking them out these guys must be caught .", '*MOT: what are they ?', "*FAT: he's a private eye Richard Roundtree .", "*FAT: this guy just xxx he's a +...", '*MOT: a xxx something ?', '*FAT: a [/] a book keeper for the mob and he just sold the [/] (.) the book [!] to him .', "*FAT: now he's getting out of town .", '*MOT: oh (20.) !', '*SIS: zzz (13.) .', '*FAT: what ?', '*MOT: okay as long as you said please !', '*MOT: I like when you say please (.) .', '*SIS: zzz .', '*FAT: Jill !', '*SIS: zzz .', '*MOT: did you get it ?', '*SIS: zzz .', '*MOT: do you feel better ?', '*MOT: huh ?', '*MOT: do you feel better ?', '*SIS: zzz .', '*MOT: dadada@wp .', '*SIS: zzz .', '*MOT: put her where ?', '*MOT: in the crib ?', "*MOT: what so we can eat and she can't ?", "*MOT: I'm just going to get up +/.", '*FAT: you (.) !', '*FAT: Madeleine Kahn !', '*SIS: zzz (.) .', '*CHI: mommy !', "*CHI: I'm gonna pick her up .", '*CHI: a [?] big girl .', '*SIS: zzz .', '*CHI: xxx .', "*CHI: xxx I'm done with that .", '*MOT: good boy !', '*CHI: xxx .', '*FAT: this is good !', '*MOT: is it ?', "*FAT: I've never drank <a xxx before> [>] .", '*MOT: <xxx all the time> [<] !', '*MOT: this is little Jill .', "*MOT: I'm getting them ."]
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//seamt1.cha
HSLLD/HV1/MT//arlmt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
['*CHI: good .', '*CHI: chinese food .', '*SIS: xxx eating chinese food .', '*SIS: xxx there .', '*CHI: chinese food &=shouts !', "*MOT: don't yell .", "*SIS: you're eating chinese food [>] .", '*CHI: <Mommy> [<] can you give me one of those ?', '*CHI: can you give me a plate ?', '*MOT: please ?', '*CHI: please .', "*SIS: I'm starving .", '*CHI: ah the blue one the blue one .', '*CHI: oops .', '*CHI: xxx the blue one .', '*CHI: can you give me one of those ?', '*MOT: in a minute .', '*CHI: please can you give me a plate ?', '*MOT: just a minute Arlo .', '*CHI: what is in there ?', "*SIS: xxx that's salad .", '*CHI: I want one of those .', "*CHI: I don't got a plate .", '*CHI: xxx .', '*SIS: xxx .', "*CHI: that's so hungry can I have one of these ?", '*MOT: wait a minute Arlo wait .', '*CHI: xxx .', '*MOT: just a minute .', '*CHI: Jessie come and eat .', '*JES: xxx .', '*MOT: are those all shrimp honey ?', '*SIS: Mommy I want one of those big things .', '*MOT: shh !', '*SIS: xxx .', "*CHI: <mommy what's those> [>] ?", '*SIS: no <I want one of the big things> [<] .', '*MOT: shrimp .', '*CHI: yeah I want shrimp .', '*CHI: I want those .', '*SIS: mommy +/.', '*CHI: I want a shrimp xxx +...', '*SIS: mm .', '*MOT: &=coughs .', '*SIS: mommy this is good .', "*CHI: I ate this before over at Pepe's .", '*MOT: what are you eating [>] Arlo ?', '*CHI: right [<] ?', "*CHI: I don't know .", "*SIS: teriyaki that's teriyaki .", '*CHI: teriyaki .', '*CHI: what does Steve give me ?', '*SIS: chicken .', '*CHI: chicken .', '*CHI: is Steve gone ?', "*CHI: (..) what's in there ?", "*CHI: Steve know what's in there ?", '*CHI: yeah .', "*SIS: that's the rice .", '*CHI: I want some rice .', '*STE: xxx the box please .', '*MOT: you want some rice please .', '*CHI: please can I have some rice ?', '*STE: xxx clean the car .', '*STE: sit down please .', '*CHI: no (.) I putting with the teriyaki on there &=chuckles .', "*SIS: don't .", "*MOT: don't that's not mommy's .", '*CHI: why you put it on ?', "*STE: that's yours Jessie .", '*JES: thank you .', '*STE: xxx for Christa (.) one for Arlo (.) one for Mom (.) one for +...', '*CHI: Jessie Shamu .', '*STE: Shamu ?', '*CHI: rice !', '*CHI: rice !', '*MOT: (..) watch out Arlo .', '*JES: xxx .', '*CHI: xxx .', '*MOT: could you get me the butter please ?', "*CHI: Mom I don't like this .", '*MOT: just leave it on your plate .', '*MOT: xxx .', '*CHI: can you eat that all Mommy ?', "*JES: it's better than nothing .", '*CHI: that [//] all that rice ?', '*MOT: yes .', '*CHI: oh [!] Jessie <guess what I> [//] guess what\xe2\x86\x91 I heard ?', '*MOT: Crista !', '*CHI: oh .', '*MOT: was that good Arlo ?', '*CHI: &-um yeah .', '*STE: anybody want sauce [>] ?', '*JES: <is this mine> [<] dad ?', '*CHI: mom .', '*SIS: yeah .', '*STE: whatdya [: what do you] want it on ?', '*STE: rice ?', '*STE: how (a)bout you .', '*STE: what do you want it on ?', "*JES: that's good .", '*STE: what do you want it on ?', '*CHI: rice .', '*STE: what do you want it on ?', '*CHI: &=laughs .', '*SIS: what do you want it on ?', '*STE: xxx wait a second .', "*JES: what's that ?", '*CHI: you know what this is ?', '*MOT: what is that Arlo ?', '*CHI: teriyaki .', "*MOT: what kind of food is this that you're eating tonight ?", '*MOT: huh ?', '*CHI: rice ?', '*SIS: chinese food .', '*CHI: chinese food !', '*CHI: chinese food .', '*CHI: chinese food .', "*MOT: Arlo don't play with the fork .", '*MOT: (..) how is that ?', '*CHI: good .', '*CHI: I like it .', '*CHI: (..) give me that I like it .', '*SIS: you like it ?', '*MOT: (..) you like shrimp Arlo ?', '*CHI: I like this too .', '*MOT: those are shrimp .', '*CHI: I like the shrimp .', '*SIS: that shrimp ?', '*CHI: no this [!] is shrimp .', '*SIS: xxx you can try it .', '*STE: did my sister call yet (.) Jessie ?', '*JES: which one ?', '*CHI: Mommy can I have one more of this ?', "*MOT: eat what's in your plate first okay ?", '*CHI: xxx .', "*MOT: you eat what's on your plate first okay ?", '*CHI: I hate that .', '*CHI: I hate that .', "*MOT: Arlo supposed to talk but he's not .", '*CHI: not !', '*STE: Arlo (.) talk .', "*CHI: Mommy I'm eating !", "*MOT: that's why you can't talk ?", '*CHI: uhhum .', '*CHI: Mom <can you put that> [//] can you put butter on that ?', '*MOT: please ?', '*CHI: please .', '*SIS: Arlo use this xxx like I am .', "*MOT: Arlo don't drop it on the floor .", "*MOT: eat what's in your plate first .", '*CHI: (.) do you like lemonade ?']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//arlmt1.cha
HSLLD/HV1/MT//trimt1.cha
[['NN', 'NN'],
 ['NN'],
 ['NN', 'NNS'],
 ['NNS'],
 ['JJ', 'NN'],
 ['NN', 'NN', 'NN'],
 ['JJ', 'NN', 'NN'],
 ['JJ', 'NNS'],
 ['VBN', 'NNS'],
 ['VBN', 'NN'],
 ['JJ', 'NN', 'NNS'],
 ['NN', 'NN', 'NNS'],
 ['NNS', 'NN'],
 ['NNP', 'IN']]
adding extra names
9758
400
10113
["*MOT: it's just a tape recorder .", '*MOT: I want you to eat your supper .', '*CHI: is that xxx ?', '*MOT: mhm .', '*CHI: they do this right ?', '*MOT: mhm .', "*CHI: it's cute Mot where did you get it ?", '*MOT: Debra and Mike left it remember ?', '*CHI: oh yeah !', '*CHI: does it do songs Mot ?', '*MOT: hunhunh .', "*CHI: <I> [/] <I> [/] I forgot the girl's name Mot .", '*MOT: Debra .', "*CHI: I know the boy's name Michael .", '*CHI: right ?', '*MOT: mhm .', "*CHI: (.) why doesn't the pack have like mine right here ?", "*MOT: I don't know sweetheart .", '*MOT: please eat .', '*CHI: xxx (.) I want one fry .', '*MOT: okay .', "*CHI: I just had the other one in my hand so you wouldn't see it &=laughs .", '*MOT: eat your burger please xxx .', "*MOT: that's the most important .", '*CHI: this my supper right ?', '*MOT: mhm .', '*CHI: 0 [=! squawking noise] .', "*CHI: (..) mm it's very very good Mot thank you .", "*MOT: you're very very welcome .", '*MOT: am I a good cook ?', '*CHI: mhm .', '*MOT: mhm .', "*CHI: I don't have any (.) chair xxx .", '*MOT: no I prefer you to come back over here please .', "*CHI: then I'll stand and eat .", '*MOT: okay .', '*MOT: they wanna hear you talk .', '*CHI: what .', '*CHI: Michael ?', '*MOT: mhm .', '*MOT: (.) and Debra .', '*CHI: are they on the tape ?', "*CHI: (..) sec [<] [>] it's a xxx .", '*MOT: please come sit .', '*MOT: (..) I love you .', '*CHI: &aw .', "*MOT: you're cute [>] .", '*CHI: <0 [=! coughs and chokes]> [<] .', "*CHI: I'm okay .", "*MOT: Chi remember you can't breathe while you drink .", '*CHI: I know &=coughs .', "*CHI: (..) do you know who's silly ?", '*MOT: unhunh .', '*CHI: Michael .', "*MOT: who's Michael ?", '*CHI: you know him .', '*MOT: from Harvard University .', '*CHI: yep .', "*MOT: why's he silly ?", '*CHI: (be)cause he is &=laughs .', '*MOT: mm .', "*CHI: that's how he looks .", '*CHI: (..) did they give me a book Mot ?', '*MOT: they gave a book for me to read to you .', '*CHI: now where is it ?', '*MOT: (..) what do you think ?', '*CHI: they took it ?', '*MOT: mhm .', "*CHI: I'm angry .", '*MOT: why ?', '*CHI: (be)cause .', '*MOT: they gave you a gift .', '*CHI: what ?', '*MOT: bubbles !', '*CHI: yes I know that one !', "*MOT: well they didn't have_to .", '*CHI: what .', '*MOT: give you bubbles .', '*CHI: (..) then why did they ?', '*MOT: because you were good (.) for a change .', "*CHI: (..) why couldn't they stay over ?", "*MOT: because they weren't &=laughs supposed to stay over .", "*CHI: (be)cause it's not their house ?", '*MOT: they want to go home .', "*MOT: (.) not only that I didn't ask them to sleep over .", "*CHI: I didn't want them to sleep over !", '*MOT: well what do you mean by stay over ?', '*MOT: go sit please .', "*CHI: I don't know .", "*MOT: (..) when you're done (.) I'll give you a sugar free fudgsicle@d .", "*CHI: I don't want the kind you had out not [//] I'll be full .", '*MOT: okay .', '*MOT: (.) I offered .', "*CHI: it's okay but I'm not hungry .", '*CHI: (..) twenty three sec [<] we make good cooks with this stuff .', '*CHI: (.) you said that xxx a good cook Mot you good cook ?', "*CHI: you didn't cook this !", '*CHI: (.) can I have a hug after ?', '*MOT: mhm .', "*CHI: when I'm done ?", '*MOT: mhm .', "*CHI: (..) I don't want to sit there .", '*CHI: no !', '*CHI: no way .', '*MOT: then I take your Barbies and I put them away (.) for good .', "*CHI: I'm gonna play with them .", '*CHI: I want to .', '*CHI: can I Mot ?', '*MOT: eat your supper please .', '*CHI: (..) are we staying up ?', '*MOT: mhm .', "*MOT: eight o'clock a good movie's comin(g) on though .", '*CHI: what ?', '*MOT: The Seventh Sign .', '*MOT: with Demi Moore ?', '*CHI: would I like it ?', "*MOT: (.) I don't know .", "*MOT: I don't know if you'll be up for it .", '*MOT: (..) I love you .', '*MOT: (..) you little pumpkin pie are you my apples peaches and pumpkin pie ?', "*CHI: I'm your tomato !", '*MOT: my tomato ?', '*MOT: you say tomato I say tomato .', '*MOT: you say potato I say potato .', "*MOT: &=laughs your mother's nuts .", '*CHI: yep .', '*MOT: but she loves ya [: you] (.) more than anything .', "*MOT: (be)cause you're my tomato !", '*CHI: (..) both your mother and you would hear it (.) what would you give to him ?', '*MOT: (..) the broom .', "*CHI: you don't have one .", '*MOT: I do too .', '*CHI: where ?', '*MOT: in the closet !', '*CHI: (..) I would do it with my Barbies !', '*MOT: &=gasp .', '*CHI: then I would put her in the sink so she can get dry .', '*MOT: please come over now .', "*CHI: xxx sittin(g) here (be)cause I wasn't comfortable .", '*MOT: next time you move I take Skipper .', "*MOT: (.) if you'd hurry up and eat you'd be all set .", "*CHI: that's what I'm trying Mot .", "*MOT: you're a sweetie .", '*MOT: you wanna go take the bag out o(f) that chair and bring the chair over ?', '*CHI: the bag out o(f) what chair ?', '*MOT: that rockin(g) chair .', "*CHI: Mom it's too heavy .", "*CHI: look [>] it's too hard .", '*MOT: pull [<] .', '*MOT: just pull it out and put it on the floor .', "*CHI: I can't do it Mot .", '*MOT: go ahead .', '*MOT: just pull the bag out .', "*CHI: it's gonna [= going to] fall over [>] !", '*MOT: <put it> [<] on the floor !', '*MOT: go !', '*MOT: move it in front o(f) the freezer .', '*MOT: okay .', '*MOT: right there .', '*MOT: see ?', '*MOT: goose .', '*CHI: (.) look !', '*CHI: present .', '*MOT: mm .', '*MOT: roses .', '*CHI: right Mot .', '*CHI: (.) is he &=laughs being bad to her ?', "*CHI: (.) twenty sec fun to rock the chair isn't it ?", "*CHI: (.) why don't you have a rocking chair ?", "*MOT: I do it's in my bed+room .", '*CHI: (.) oh you do have one .', '*CHI: so do I !', '*MOT: mhm .', "*CHI: doesn't ours look the same ?", '*MOT: mhm .', '*CHI: (.) is it ?', '*MOT: mhm .', '*CHI: yeah [>] .', "*MOT: <mine's> [<] just bigger than yours that's all .", '*CHI: looks the same .', '*MOT: mhm .', '*CHI: (..) do you know who I love (.) from you too ?', '*CHI: Skipper .', '*CHI: (.) do you like her ?', '*MOT: (.) nope (.) she stole your love from me .', '*CHI: (..) do you love me Mot ?', '*MOT: uhhuh .', '*MOT: (.) I love you a bushel and a peck .', "*CHI: when I get down I'll smack her .", '*MOT: a bushel and a peck and a +...', '*CHI: ++ hug around the neck .', '*MOT: you got it !', '*CHI: (..) he being bad to her xxx ?', '*MOT: I think so .', "*CHI: (..) I think he's gonna get in trouble too .", '*CHI: yep !', '*CHI: he sure is Mot .', "*CHI: (..) he's in trouble !", '*MOT: &-uh oh .', '*CHI: please .', '*MOT: &-uh oh .', "*CHI: it's good I like this sausage .", '*CHI: it is sausage .', "*CHI: that's why it tastes <like it> [>] .", "*MOT: <it's hamburger> [<] !", "*CHI: it tastes like sausage and that's what it is .", '*MOT: your brain tastes like sausage .', '*CHI: your brain tastes like sausage .', '*MOT: does it look like sausage ?', '*CHI: yep .', '*MOT: gee thanks !', '*CHI: I see sausage .', '*CHI: your belly .', "*MOT: (..) come on honey you've been (.) goofin(g) around with that for fifteen minutes .", '*CHI: (.) I know what .', "*CHI: if you don't eat you'll go to bed with nothing and you'll be hungry without that .", '*MOT: mhm .', '*CHI: right ?', '*MOT: mhm .', '*CHI: go to bed hungry .', '*CHI: am I right Mot ?', '*CHI: (..) <thirty eight sec> [<] [>] hm: .', '*CHI: I love you .', "*CHI: (.) look how I'm sittin(g) .", "*MOT: oh just be careful you don't fall please .", "*CHI: I'm holding on look .", '*MOT: yeah but the chair will tip over .', "*CHI: I'm going slow .", '*CHI: (.) now I can go fast .', '*MOT: honey just eat .', '*CHI: okay .', '*MOT: thank you .', '*CHI: welcome .', '*CHI: this is the red .', '*MOT: mhm .', '*CHI: (..) <thirty four sec> [<] [>] okay .', "*CHI: now I'm not so busy doin(g) that (.) caca stuff I did .", '*MOT: (..) hurry up .', '*CHI: (.) I love you .', "*MOT: hm: you're my cookie .", "*CHI: you're my cookie .", '*MOT: no !', "*MOT: I'm your pudding .", "*CHI: I'm your cookie .", '*MOT: mhm .', '*CHI: pudding ?', '*MOT: mhm .', "*CHI: (.) pudding's good .", "*CHI: <I> [/] I don't like jello .", '*CHI: (.) do you ?', '*MOT: unhunh .', '*CHI: do you like pudding ?', '*MOT: mhm .', '*CHI: (.) I like chocolate .', '*MOT: mm .', '*CHI: (.) do you like the green kind ?', '*MOT: unhunh .', '*CHI: I do .', '*MOT: me too .', '*CHI: the green one ?', '*MOT: mhm .', "*CHI: (.) Mot I'm almost done !", '*MOT: (.) good girl .', '*CHI: I got one more bite !', "*CHI: and I'm all done .", '*CHI: (.) watch what I do Mot .', '*MOT: (.) go sit down and eat please .', '*CHI: (.) gonna rock me in my rocking chair .', '*CHI: xxx .', "*CHI: you be a big girl and we'll be all set .", "*MOT: (.) oh you shouldn't stuff so much into your mouth .", "*MOT: that's bein(g) a pig .", '*MOT: you little pigletta@wp .', '*CHI: &=giggles .', "*MOT: 0 [=! mimics Chi's giggle] .", '*CHI: 0 [=! giggles mimicking Mot] .', "*CHI: (..) that's the one I want (.) a Barbie .", '*MOT: (..) <twenty sec> [<] [>] finish up .', '*CHI: (.) first xxx .', '*CHI: &=coughs .', '*CHI: (.) &=giggles me be a geek@d .', '*CHI: Skipper (.) you look just like me .', '*CHI: just like +/.', '*MOT: over there please and finish .', "*CHI: don't I look like her ?", '*MOT: (.) sit in your chair .', "*CHI: (.) I don't need it .", "*CHI: I'm gonna kneel .", '*CHI: (.) Skipper xxx she can tell me .', '*CHI: (..) look Mot .', '*CHI: &=giggles .', '*CHI: starlight huh ?', "*CHI: (..) I don't like that .", '*CHI: (..) xxx dark xxx .', '*CHI: I love you too Buck .', "*CHI: (.) didn't you hear what I said to Buck ?", '*CHI: (.) I have_to start eating more .', '*MOT: please .', '*CHI: yeah I am .', "*CHI: hey don't xxx .", "*CHI: (..) Mot doesn't she look cute that way ?", '*CHI: she does to me too .', '*CHI: get up !', '*CHI: I like your tights Skipper .', '*MOT: (..) you almost done .', "*CHI: I don't want anymore xxx .", '*MOT: you all finished ?', '*CHI: yeah .', '*MOT: okiedokie@wp .', '*CHI: <xxx Skipper> [>] ?', '*MOT: <find out how to turn this> [<] off .', '*MOT: stop .']
loading solution set
no solution file found for: solutions/HSLLD/HV1/MT//trimt1.cha
precision: 0.0562652068127
recall 0.770833333333
# true pos: 185
# false pos: 3103
# false neg: 55
